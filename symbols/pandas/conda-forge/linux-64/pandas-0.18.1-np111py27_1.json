{
 "*": {
  "data": {
   "imports": [
    "pandas.msgpack.exceptions"
   ]
  },
  "type": "star-import"
 },
 "pandas": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__import__",
    "get_versions",
    "pandas.hard_dependencies",
    "pandas.missing_dependencies",
    "pandas.module",
    "pandas.util.nosetester.NoseTester",
    "pandas.v",
    "str"
   ]
  },
  "type": "module"
 },
 "pandas.NoseTester": {
  "data": {
   "shadows": "pandas.util.nosetester.NoseTester"
  },
  "type": "import"
 },
 "pandas.__doc__": {
  "data": {
   "shadows": "pandas.info.__doc__"
  },
  "type": "import"
 },
 "pandas.__docformat__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "pandas.__version__": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "pandas._version": {
  "data": {},
  "type": "module"
 },
 "pandas._version.get_versions": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "pandas._version.json",
    "pandas._version.version_json"
   ]
  },
  "type": "function"
 },
 "pandas._version.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pandas._version.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas._version.version_json": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "pandas.compat": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "ImportError",
    "NameError",
    "StringIO.StringIO",
    "__builtin__.filter",
    "__builtin__.map",
    "__builtin__.range",
    "__builtin__.zip",
    "bytes",
    "cStringIO.StringIO",
    "chr",
    "dateutil.parser.parse",
    "distutils.version.LooseVersion",
    "exec",
    "int",
    "io.StringIO",
    "pandas.compat.PY2",
    "pandas.compat.PY3",
    "pandas.compat.binary_type",
    "pandas.compat.dateutil",
    "pandas.compat.functools",
    "pandas.compat.itertools",
    "pandas.compat.long",
    "pandas.compat.raise_with_traceback",
    "pandas.compat.re",
    "pandas.compat.string_types",
    "pandas.compat.sys",
    "pandas.compat.types",
    "str",
    "type"
   ]
  },
  "type": "module"
 },
 "pandas.compat.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "pandas.compat.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "pandas.compat.DeepChainMap": {
  "data": {
   "shadows": "pandas.compat.chainmap.DeepChainMap"
  },
  "type": "import"
 },
 "pandas.compat.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.compat.OrderedDefaultdict": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "class"
 },
 "pandas.compat.OrderedDefaultdict.__init__": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "TypeError",
    "pandas.compat.callable",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.compat.OrderedDefaultdict.__missing__": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "pandas.compat.OrderedDefaultdict.__reduce__": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "list",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.compat.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pandas.compat.PY2": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pandas.compat.PY3": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pandas.compat.PY35": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pandas.compat.ResourceWarning": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "Warning"
   ]
  },
  "type": "class"
 },
 "pandas.compat.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "pandas.compat._EAW_MAP": {
  "data": {
   "lineno": 212
  },
  "type": "constant"
 },
 "pandas.compat._date_parser": {
  "data": {
   "shadows": "dateutil.parser"
  },
  "type": "import"
 },
 "pandas.compat._name_re": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "pandas.compat.add_metaclass": {
  "data": {
   "lineno": 316
  },
  "type": "function"
 },
 "pandas.compat.add_metaclass.wrapper": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "metaclass"
   ]
  },
  "type": "function"
 },
 "pandas.compat.binary_type": {
  "data": {
   "lineno": 261
  },
  "type": "constant"
 },
 "pandas.compat.bind_method": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "pandas.compat.PY3",
    "pandas.compat.types",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pandas.compat.builtins": {
  "data": {
   "shadows": "builtins"
  },
  "type": "import"
 },
 "pandas.compat.bytes_to_str": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "pandas.compat.cPickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pandas.compat.cStringIO": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "pandas.compat.callable": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "any",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.compat.chainmap": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "pandas.compat.chainmap.ChainMap": {
  "data": {
   "shadows": "pandas.compat.chainmap_impl.ChainMap"
  },
  "type": "import"
 },
 "pandas.compat.chainmap.DeepChainMap": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "pandas.compat.chainmap_impl.ChainMap"
   ]
  },
  "type": "class"
 },
 "pandas.compat.chainmap.DeepChainMap.__delitem__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "pandas.compat.chainmap.DeepChainMap.__setitem__": {
  "data": {
   "lineno": 8
  },
  "type": "function"
 },
 "pandas.compat.chainmap.DeepChainMap.new_child": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "pandas.compat.chainmap_impl": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "pandas.compat.chainmap_impl.ChainMap": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "collections.MutableMapping"
   ]
  },
  "type": "class"
 },
 "pandas.compat.chainmap_impl.ChainMap.__bool__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "any"
   ]
  },
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.__contains__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "any"
   ]
  },
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.__delitem__": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.__getitem__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.__iter__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "iter",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.__len__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.__missing__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.__repr__": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "pandas.compat.chainmap_impl.recursive_repr",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.__setitem__": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.clear": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.copy": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.fromkeys": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "dict.fromkeys"
   ]
  },
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.get": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.new_child": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.parents": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.pop": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "pandas.compat.chainmap_impl.ChainMap.popitem": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "pandas.compat.chainmap_impl.MutableMapping": {
  "data": {
   "shadows": "collections.MutableMapping"
  },
  "type": "import"
 },
 "pandas.compat.chainmap_impl.get_ident": {
  "data": {
   "shadows": "_thread.get_ident"
  },
  "type": "import"
 },
 "pandas.compat.chainmap_impl.recursive_repr": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "pandas.compat.chainmap_impl.recursive_repr.decorating_function": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "getattr",
    "set",
    "user_function"
   ]
  },
  "type": "function"
 },
 "pandas.compat.chainmap_impl.recursive_repr.decorating_function.wrapper": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "_thread.get_ident",
    "id",
    "user_function"
   ]
  },
  "type": "function"
 },
 "pandas.compat.class_types": {
  "data": {
   "lineno": 259
  },
  "type": "constant"
 },
 "pandas.compat.dateutil": {
  "data": {
   "shadows": "dateutil"
  },
  "type": "import"
 },
 "pandas.compat.east_asian_len": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "UnicodeError",
    "isinstance",
    "len",
    "pandas.compat._EAW_MAP",
    "pandas.compat.text_type",
    "sum",
    "unicodedata.east_asian_width"
   ]
  },
  "type": "function"
 },
 "pandas.compat.east_asian_width": {
  "data": {
   "shadows": "unicodedata.east_asian_width"
  },
  "type": "import"
 },
 "pandas.compat.filter": {
  "data": {
   "lineno": 143
  },
  "type": "constant"
 },
 "pandas.compat.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "pandas.compat.httplib": {
  "data": {
   "shadows": "http.client"
  },
  "type": "import"
 },
 "pandas.compat.import_lzma": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "backports.lzma"
   ]
  },
  "type": "function"
 },
 "pandas.compat.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "pandas.compat.integer_types": {
  "data": {
   "lineno": 258
  },
  "type": "constant"
 },
 "pandas.compat.is_platform_32bit": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "pandas.compat.struct"
   ]
  },
  "type": "function"
 },
 "pandas.compat.is_platform_linux": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "pandas.compat.sys"
   ]
  },
  "type": "function"
 },
 "pandas.compat.is_platform_little_endian": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "pandas.compat.sys"
   ]
  },
  "type": "function"
 },
 "pandas.compat.is_platform_mac": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "pandas.compat.sys"
   ]
  },
  "type": "function"
 },
 "pandas.compat.is_platform_windows": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "pandas.compat.sys"
   ]
  },
  "type": "function"
 },
 "pandas.compat.isidentifier": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "bool",
    "pandas.compat._name_re"
   ]
  },
  "type": "function"
 },
 "pandas.compat.iteritems": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "pandas.compat.iterkeys": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "pandas.compat.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pandas.compat.itervalues": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "pandas.compat.lfilter": {
  "data": {
   "lineno": 153
  },
  "type": "constant"
 },
 "pandas.compat.lmap": {
  "data": {
   "lineno": 152
  },
  "type": "constant"
 },
 "pandas.compat.long": {
  "data": {
   "lineno": 146
  },
  "type": "constant"
 },
 "pandas.compat.lrange": {
  "data": {
   "lineno": 150
  },
  "type": "constant"
 },
 "pandas.compat.lzip": {
  "data": {
   "lineno": 151
  },
  "type": "constant"
 },
 "pandas.compat.lzma": {
  "data": {
   "shadows": "backports.lzma"
  },
  "type": "import"
 },
 "pandas.compat.map": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "pandas.compat.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "pandas.compat.next": {
  "data": {
   "lineno": 177
  },
  "type": "constant"
 },
 "pandas.compat.numpy": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "distutils.version.LooseVersion",
    "numpy.seterr",
    "numpy.version.short_version",
    "pandas.compat.numpy._nlv",
    "pandas.compat.numpy._np_version",
    "pandas.compat.numpy.re"
   ]
  },
  "type": "module"
 },
 "pandas.compat.numpy.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.compat.numpy.__all__": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "pandas.compat.numpy._nlv": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pandas.compat.numpy._np_version": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pandas.compat.numpy._np_version_under1p10": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pandas.compat.numpy._np_version_under1p11": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "pandas.compat.numpy._np_version_under1p12": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "pandas.compat.numpy._np_version_under1p8": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pandas.compat.numpy._np_version_under1p9": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pandas.compat.numpy._tz_regex": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "pandas.compat.OrderedDict",
    "pandas.compat.numpy.function.ARGMINMAX_DEFAULTS",
    "pandas.compat.numpy.function.ARGSORT_DEFAULTS",
    "pandas.compat.numpy.function.CLIP_DEFAULTS",
    "pandas.compat.numpy.function.COMPRESS_DEFAULTS",
    "pandas.compat.numpy.function.CUM_FUNC_DEFAULTS",
    "pandas.compat.numpy.function.CompatValidator",
    "pandas.compat.numpy.function.LOGICAL_FUNC_DEFAULTS",
    "pandas.compat.numpy.function.MINMAX_DEFAULTS",
    "pandas.compat.numpy.function.REPEAT_DEFAULTS",
    "pandas.compat.numpy.function.RESHAPE_DEFAULTS",
    "pandas.compat.numpy.function.ROUND_DEFAULTS",
    "pandas.compat.numpy.function.SORT_DEFAULTS",
    "pandas.compat.numpy.function.SQUEEZE_DEFAULTS",
    "pandas.compat.numpy.function.STAT_DDOF_FUNC_DEFAULTS",
    "pandas.compat.numpy.function.STAT_FUNC_DEFAULTS",
    "pandas.compat.numpy.function.TAKE_DEFAULTS",
    "pandas.compat.numpy.function.TRANSPOSE_DEFAULTS"
   ]
  },
  "type": "module"
 },
 "pandas.compat.numpy.function.ARGMINMAX_DEFAULTS": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.ARGSORT_DEFAULTS": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.CLIP_DEFAULTS": {
  "data": {
   "lineno": 122
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.COMPRESS_DEFAULTS": {
  "data": {
   "lineno": 142
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.CUM_FUNC_DEFAULTS": {
  "data": {
   "lineno": 148
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.CompatValidator": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.compat.numpy.function.CompatValidator.__call__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ValueError",
    "pandas.util.validators.validate_args",
    "pandas.util.validators.validate_args_and_kwargs",
    "pandas.util.validators.validate_kwargs"
   ]
  },
  "type": "function"
 },
 "pandas.compat.numpy.function.CompatValidator.__init__": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "pandas.compat.numpy.function.LOGICAL_FUNC_DEFAULTS": {
  "data": {
   "lineno": 155
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.MINMAX_DEFAULTS": {
  "data": {
   "lineno": 158
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.OrderedDict": {
  "data": {
   "shadows": "pandas.compat.OrderedDict"
  },
  "type": "import"
 },
 "pandas.compat.numpy.function.REPEAT_DEFAULTS": {
  "data": {
   "lineno": 168
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.RESHAPE_DEFAULTS": {
  "data": {
   "lineno": 164
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.ROUND_DEFAULTS": {
  "data": {
   "lineno": 172
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.SORT_DEFAULTS": {
  "data": {
   "lineno": 176
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.SQUEEZE_DEFAULTS": {
  "data": {
   "lineno": 202
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.STAT_DDOF_FUNC_DEFAULTS": {
  "data": {
   "lineno": 193
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.STAT_FUNC_DEFAULTS": {
  "data": {
   "lineno": 183
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.TAKE_DEFAULTS": {
  "data": {
   "lineno": 206
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.TRANSPOSE_DEFAULTS": {
  "data": {
   "lineno": 228
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.is_integer": {
  "data": {
   "shadows": "pandas.core.common.is_integer"
  },
  "type": "import"
 },
 "pandas.compat.numpy.function.ndarray": {
  "data": {
   "shadows": "numpy.ndarray"
  },
  "type": "import"
 },
 "pandas.compat.numpy.function.process_skipna": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "pandas.compat.numpy.function.validate_argmax": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.validate_argmax_with_skipna": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "pandas.compat.numpy.function.process_skipna",
    "pandas.compat.numpy.function.validate_argmax"
   ]
  },
  "type": "function"
 },
 "pandas.compat.numpy.function.validate_argmin": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.validate_argmin_with_skipna": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "pandas.compat.numpy.function.process_skipna",
    "pandas.compat.numpy.function.validate_argmin"
   ]
  },
  "type": "function"
 },
 "pandas.compat.numpy.function.validate_args": {
  "data": {
   "shadows": "pandas.util.validators.validate_args"
  },
  "type": "import"
 },
 "pandas.compat.numpy.function.validate_args_and_kwargs": {
  "data": {
   "shadows": "pandas.util.validators.validate_args_and_kwargs"
  },
  "type": "import"
 },
 "pandas.compat.numpy.function.validate_argsort": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.validate_argsort_with_ascending": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "pandas.compat.numpy.function.validate_argsort",
    "pandas.core.common.is_integer"
   ]
  },
  "type": "function"
 },
 "pandas.compat.numpy.function.validate_clip": {
  "data": {
   "lineno": 123
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.validate_clip_with_axis": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "pandas.compat.numpy.function.validate_clip"
   ]
  },
  "type": "function"
 },
 "pandas.compat.numpy.function.validate_compress": {
  "data": {
   "lineno": 145
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.validate_cum_func": {
  "data": {
   "lineno": 151
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.validate_cumsum": {
  "data": {
   "lineno": 152
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.validate_kwargs": {
  "data": {
   "shadows": "pandas.util.validators.validate_kwargs"
  },
  "type": "import"
 },
 "pandas.compat.numpy.function.validate_logical_func": {
  "data": {
   "lineno": 156
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.validate_max": {
  "data": {
   "lineno": 161
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.validate_mean": {
  "data": {
   "lineno": 190
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.validate_min": {
  "data": {
   "lineno": 159
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.validate_repeat": {
  "data": {
   "lineno": 169
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.validate_reshape": {
  "data": {
   "lineno": 165
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.validate_round": {
  "data": {
   "lineno": 173
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.validate_sort": {
  "data": {
   "lineno": 180
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.validate_squeeze": {
  "data": {
   "lineno": 203
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.validate_stat_ddof_func": {
  "data": {
   "lineno": 196
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.validate_stat_func": {
  "data": {
   "lineno": 186
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.validate_sum": {
  "data": {
   "lineno": 188
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.validate_take": {
  "data": {
   "lineno": 209
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.validate_take_with_convert": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "pandas.compat.numpy.function.validate_take"
   ]
  },
  "type": "function"
 },
 "pandas.compat.numpy.function.validate_transpose": {
  "data": {
   "lineno": 229
  },
  "type": "constant"
 },
 "pandas.compat.numpy.function.validate_transpose_for_generic": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "ValueError",
    "pandas.compat.numpy.function.validate_transpose",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.compat.numpy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.compat.numpy.np_array_datetime64_compat": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "numpy.array",
    "pandas.compat.numpy._np_version_under1p11",
    "pandas.compat.numpy.tz_replacer",
    "pandas.compat.string_and_binary_types"
   ]
  },
  "type": "function"
 },
 "pandas.compat.numpy.np_datetime64_compat": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.datetime64",
    "pandas.compat.numpy._np_version_under1p11",
    "pandas.compat.numpy.tz_replacer"
   ]
  },
  "type": "function"
 },
 "pandas.compat.numpy.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pandas.compat.numpy.string_and_binary_types": {
  "data": {
   "shadows": "pandas.compat.string_and_binary_types"
  },
  "type": "import"
 },
 "pandas.compat.numpy.string_types": {
  "data": {
   "shadows": "pandas.compat.string_types"
  },
  "type": "import"
 },
 "pandas.compat.numpy.tz_replacer": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "isinstance",
    "pandas.compat.numpy._tz_regex",
    "pandas.compat.string_types"
   ]
  },
  "type": "function"
 },
 "pandas.compat.openpyxl_compat": {
  "data": {},
  "type": "module"
 },
 "pandas.compat.openpyxl_compat.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.compat.openpyxl_compat.is_compat": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ValueError",
    "distutils.version.LooseVersion",
    "pandas.compat.openpyxl_compat.openpyxl",
    "pandas.compat.openpyxl_compat.start_ver",
    "pandas.compat.openpyxl_compat.stop_ver"
   ]
  },
  "type": "function"
 },
 "pandas.compat.openpyxl_compat.openpyxl": {
  "data": {
   "shadows": "openpyxl"
  },
  "type": "import"
 },
 "pandas.compat.openpyxl_compat.start_ver": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "pandas.compat.openpyxl_compat.stop_ver": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "pandas.compat.parse_date": {
  "data": {
   "lineno": 362
  },
  "type": "constant"
 },
 "pandas.compat.pickle_compat": {
  "data": {
   "symbols_in_volume": [
    "pandas.compat.PY3",
    "pandas.compat.pickle_compat.Unpickler",
    "pandas.compat.pickle_compat.copy",
    "pandas.compat.pickle_compat.load_newobj",
    "pandas.compat.pickle_compat.load_newobj_ex",
    "pandas.compat.pickle_compat.load_reduce",
    "pickle.NEWOBJ",
    "pickle.NEWOBJ_EX",
    "pickle.REDUCE"
   ]
  },
  "type": "module"
 },
 "pandas.compat.pickle_compat.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.compat.pickle_compat.Unpickler": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "pickle.Unpickler"
   ]
  },
  "type": "class"
 },
 "pandas.compat.pickle_compat.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.compat.pickle_compat.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pandas.compat.pickle_compat.load": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "pandas.compat.pickle_compat.Unpickler"
   ]
  },
  "type": "function"
 },
 "pandas.compat.pickle_compat.load_newobj": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "issubclass",
    "object.__new__",
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.compat.pickle_compat.load_newobj_ex": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "issubclass",
    "object.__new__",
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.compat.pickle_compat.load_reduce": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "Exception",
    "func",
    "getattr",
    "isinstance",
    "object.__new__",
    "pandas.compat.pickle_compat.sys",
    "pandas.compat.string_types",
    "print",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.compat.pickle_compat.pandas": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.compat.pickle_compat.pkl": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pandas.compat.pickle_compat.string_types": {
  "data": {
   "shadows": "pandas.compat.string_types"
  },
  "type": "import"
 },
 "pandas.compat.pickle_compat.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.compat.pickle_compat.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.compat.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "pandas.compat.raise_with_traceback": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "Ellipsis",
    "pandas.compat.sys"
   ]
  },
  "type": "function"
 },
 "pandas.compat.range": {
  "data": {
   "lineno": 141
  },
  "type": "constant"
 },
 "pandas.compat.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pandas.compat.reduce": {
  "data": {
   "lineno": 145
  },
  "type": "constant"
 },
 "pandas.compat.set_function_name": {
  "data": {
   "lineno": 298
  },
  "type": "function"
 },
 "pandas.compat.signature": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "pandas.compat.inspect"
   ]
  },
  "type": "function"
 },
 "pandas.compat.str_to_bytes": {
  "data": {
   "lineno": 131
  },
  "type": "function"
 },
 "pandas.compat.string_and_binary_types": {
  "data": {
   "lineno": 305
  },
  "type": "constant"
 },
 "pandas.compat.string_types": {
  "data": {
   "lineno": 257
  },
  "type": "constant"
 },
 "pandas.compat.strlen": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "UnicodeError",
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.compat.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "pandas.compat.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.compat.text_type": {
  "data": {
   "lineno": 260
  },
  "type": "constant"
 },
 "pandas.compat.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "pandas.compat.u": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "unicode"
   ]
  },
  "type": "function"
 },
 "pandas.compat.u_safe": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "unicode"
   ]
  },
  "type": "function"
 },
 "pandas.compat.unichr": {
  "data": {
   "lineno": 147
  },
  "type": "constant"
 },
 "pandas.compat.zip": {
  "data": {
   "lineno": 142
  },
  "type": "constant"
 },
 "pandas.computation": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "UserWarning",
    "distutils.version.LooseVersion",
    "numexpr.__version__",
    "pandas.computation._NUMEXPR_INSTALLED",
    "pandas.computation.ver",
    "pandas.computation.warnings"
   ]
  },
  "type": "module"
 },
 "pandas.computation.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.computation._NUMEXPR_INSTALLED": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pandas.computation.__all__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pandas.computation.align": {
  "data": {},
  "type": "module"
 },
 "pandas.computation.align._align": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "TypeError",
    "all",
    "isinstance",
    "list",
    "numpy.result_type",
    "pandas.computation.align._align_core",
    "pandas.computation.align._zip_axes_from_type",
    "pandas.computation.common._result_type_many",
    "pandas.core.common.flatten",
    "pandas.core.generic.NDFrame",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.computation.align._align_core": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "abs",
    "dict",
    "enumerate",
    "f",
    "functools.partial",
    "hasattr",
    "isinstance",
    "len",
    "numpy.log10",
    "pandas.Series",
    "pandas.compat.iteritems",
    "pandas.compat.range",
    "pandas.compat.zip",
    "pandas.computation.align._filter_special_cases",
    "pandas.computation.align._zip_axes_from_type",
    "pandas.computation.align.warnings",
    "pandas.core.common.PerformanceWarning"
   ]
  },
  "type": "function"
 },
 "pandas.computation.align._align_core_single_unary_op": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "functools.partial",
    "hasattr",
    "isinstance",
    "numpy.asanyarray",
    "numpy.ndarray",
    "pandas.computation.align._zip_axes_from_type",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.computation.align._any_pandas_objects": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "any",
    "isinstance",
    "pandas.core.generic.PandasObject"
   ]
  },
  "type": "function"
 },
 "pandas.computation.align._filter_special_cases": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "pandas.computation.align._filter_special_cases.wrapper": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "f",
    "functools.wraps",
    "len",
    "pandas.computation.align._align_core_single_unary_op",
    "pandas.computation.align._any_pandas_objects",
    "pandas.computation.common._result_type_many"
   ]
  },
  "type": "function"
 },
 "pandas.computation.align._reconstruct_object": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "AttributeError",
    "functools.partial",
    "hasattr",
    "isinstance",
    "issubclass",
    "len",
    "numpy.array",
    "numpy.bool_",
    "numpy.ndarray",
    "numpy.result_type",
    "pandas.core.generic.PandasObject",
    "typ"
   ]
  },
  "type": "function"
 },
 "pandas.computation.align._result_type_many": {
  "data": {
   "shadows": "pandas.computation.common._result_type_many"
  },
  "type": "import"
 },
 "pandas.computation.align._zip_axes_from_type": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "pandas.compat.iteritems"
   ]
  },
  "type": "function"
 },
 "pandas.computation.align.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.computation.align.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.computation.align.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.computation.align.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "pandas.computation.align.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.computation.align.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.computation.align.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.computation.align.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "pandas.computation.align.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.computation.api": {
  "data": {},
  "type": "module"
 },
 "pandas.computation.api.Expr": {
  "data": {
   "shadows": "pandas.computation.expr.Expr"
  },
  "type": "import"
 },
 "pandas.computation.api.eval": {
  "data": {
   "shadows": "pandas.computation.eval.eval"
  },
  "type": "import"
 },
 "pandas.computation.common": {
  "data": {},
  "type": "module"
 },
 "pandas.computation.common.NameResolutionError": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "NameError"
   ]
  },
  "type": "class"
 },
 "pandas.computation.common._ensure_decoded": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "bytes",
    "isinstance",
    "numpy.bytes_",
    "pandas.get_option"
   ]
  },
  "type": "function"
 },
 "pandas.computation.common._result_type_many": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ValueError",
    "numpy.result_type",
    "pandas.compat.reduce"
   ]
  },
  "type": "function"
 },
 "pandas.computation.common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.computation.common.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.computation.common.reduce": {
  "data": {
   "shadows": "pandas.compat.reduce"
  },
  "type": "import"
 },
 "pandas.computation.engines": {
  "data": {
   "symbols_in_volume": [
    "frozenset",
    "pandas.computation.engines.NumExprEngine",
    "pandas.computation.engines.PythonEngine",
    "pandas.computation.ops._mathops",
    "pandas.computation.ops._reductions"
   ]
  },
  "type": "module"
 },
 "pandas.computation.engines.AbstractEngine": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "object",
    "pandas.computation.engines.abc"
   ]
  },
  "type": "class"
 },
 "pandas.computation.engines.AbstractEngine.__init__": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "pandas.computation.engines.AbstractEngine._evaluate": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "pandas.computation.engines.abc"
   ]
  },
  "type": "function"
 },
 "pandas.computation.engines.AbstractEngine._is_aligned": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.computation.engines.AbstractEngine.convert": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "pandas.formats.printing.pprint_thing"
   ]
  },
  "type": "function"
 },
 "pandas.computation.engines.AbstractEngine.evaluate": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "pandas.computation.align._align",
    "pandas.computation.align._reconstruct_object"
   ]
  },
  "type": "function"
 },
 "pandas.computation.engines.DeepChainMap": {
  "data": {
   "shadows": "pandas.compat.DeepChainMap"
  },
  "type": "import"
 },
 "pandas.computation.engines.NumExprClobberingError": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "NameError"
   ]
  },
  "type": "class"
 },
 "pandas.computation.engines.NumExprEngine": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "pandas.computation.engines.AbstractEngine"
   ]
  },
  "type": "class"
 },
 "pandas.computation.engines.NumExprEngine.__init__": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "pandas.computation.engines.NumExprEngine",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.computation.engines.NumExprEngine._evaluate": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "numexpr.evaluate",
    "pandas.compat.text_type",
    "pandas.computation.engines._check_ne_builtin_clash",
    "pandas.computation.ops.UndefinedVariableError"
   ]
  },
  "type": "function"
 },
 "pandas.computation.engines.NumExprEngine.convert": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "pandas.computation.engines.NumExprEngine",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.computation.engines.PythonEngine": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "pandas.computation.engines.AbstractEngine"
   ]
  },
  "type": "class"
 },
 "pandas.computation.engines.PythonEngine.__init__": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "pandas.computation.engines.PythonEngine",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.computation.engines.PythonEngine._evaluate": {
  "data": {
   "lineno": 147
  },
  "type": "function"
 },
 "pandas.computation.engines.PythonEngine.evaluate": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "pandas.computation.engines.UndefinedVariableError": {
  "data": {
   "shadows": "pandas.computation.ops.UndefinedVariableError"
  },
  "type": "import"
 },
 "pandas.computation.engines._align": {
  "data": {
   "shadows": "pandas.computation.align._align"
  },
  "type": "import"
 },
 "pandas.computation.engines._check_ne_builtin_clash": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "pandas.compat.map",
    "pandas.computation.engines.NumExprClobberingError",
    "pandas.computation.engines._ne_builtins",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.computation.engines._engines": {
  "data": {
   "lineno": 151
  },
  "type": "constant"
 },
 "pandas.computation.engines._mathops": {
  "data": {
   "shadows": "pandas.computation.ops._mathops"
  },
  "type": "import"
 },
 "pandas.computation.engines._ne_builtins": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "pandas.computation.engines._reconstruct_object": {
  "data": {
   "shadows": "pandas.computation.align._reconstruct_object"
  },
  "type": "import"
 },
 "pandas.computation.engines._reductions": {
  "data": {
   "shadows": "pandas.computation.ops._reductions"
  },
  "type": "import"
 },
 "pandas.computation.engines.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "pandas.computation.engines.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.computation.engines.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.computation.engines.map": {
  "data": {
   "shadows": "pandas.compat.map"
  },
  "type": "import"
 },
 "pandas.computation.engines.ne": {
  "data": {
   "shadows": "numexpr"
  },
  "type": "import"
 },
 "pandas.computation.engines.printing": {
  "data": {
   "shadows": "pandas.formats.printing"
  },
  "type": "import"
 },
 "pandas.computation.eval": {
  "data": {},
  "type": "module"
 },
 "pandas.computation.eval.Expr": {
  "data": {
   "shadows": "pandas.computation.expr.Expr"
  },
  "type": "import"
 },
 "pandas.computation.eval._NUMEXPR_INSTALLED": {
  "data": {
   "shadows": "pandas.computation._NUMEXPR_INSTALLED"
  },
  "type": "import"
 },
 "pandas.computation.eval._check_engine": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ImportError",
    "KeyError",
    "list",
    "pandas.computation._NUMEXPR_INSTALLED",
    "pandas.computation.engines._engines",
    "pandas.computation.engines._engines.keys"
   ]
  },
  "type": "function"
 },
 "pandas.computation.eval._check_expression": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandas.computation.eval._check_for_locals": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "SyntaxError",
    "pandas.computation.eval.tokenize",
    "pandas.computation.expr.tokenize_string"
   ]
  },
  "type": "function"
 },
 "pandas.computation.eval._check_parser": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "KeyError",
    "pandas.computation.expr._parsers",
    "pandas.computation.expr._parsers.keys"
   ]
  },
  "type": "function"
 },
 "pandas.computation.eval._check_resolvers": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.computation.eval._convert_expression": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "pandas.computation.eval._check_expression",
    "pandas.formats.printing.pprint_thing"
   ]
  },
  "type": "function"
 },
 "pandas.computation.eval._engines": {
  "data": {
   "shadows": "pandas.computation.engines._engines"
  },
  "type": "import"
 },
 "pandas.computation.eval._ensure_scope": {
  "data": {
   "shadows": "pandas.computation.scope._ensure_scope"
  },
  "type": "import"
 },
 "pandas.computation.eval._parsers": {
  "data": {
   "shadows": "pandas.computation.expr._parsers"
  },
  "type": "import"
 },
 "pandas.computation.eval.eval": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "eng",
    "isinstance",
    "len",
    "pandas.compat.string_types",
    "pandas.computation.engines._engines",
    "pandas.computation.eval._check_engine",
    "pandas.computation.eval._check_for_locals",
    "pandas.computation.eval._check_parser",
    "pandas.computation.eval._check_resolvers",
    "pandas.computation.eval._convert_expression",
    "pandas.computation.eval.warnings",
    "pandas.computation.expr.Expr",
    "pandas.computation.scope._ensure_scope"
   ]
  },
  "type": "function"
 },
 "pandas.computation.eval.pprint_thing": {
  "data": {
   "shadows": "pandas.formats.printing.pprint_thing"
  },
  "type": "import"
 },
 "pandas.computation.eval.string_types": {
  "data": {
   "shadows": "pandas.compat.string_types"
  },
  "type": "import"
 },
 "pandas.computation.eval.tokenize": {
  "data": {
   "shadows": "tokenize"
  },
  "type": "import"
 },
 "pandas.computation.eval.tokenize_string": {
  "data": {
   "shadows": "pandas.computation.expr.tokenize_string"
  },
  "type": "import"
 },
 "pandas.computation.eval.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.computation.expr": {
  "data": {
   "symbols_in_volume": [
    "dir",
    "filter",
    "frozenset",
    "getattr",
    "isinstance",
    "issubclass",
    "list",
    "map",
    "pandas.compat.PY35",
    "pandas.compat.string_types",
    "pandas.computation.expr.BaseExprVisitor",
    "pandas.computation.expr.PandasExprVisitor",
    "pandas.computation.expr.PythonExprVisitor",
    "pandas.computation.expr._alias_nodes",
    "pandas.computation.expr._all_node_names",
    "pandas.computation.expr._all_nodes",
    "pandas.computation.expr._arguments_nodes",
    "pandas.computation.expr._base_supported_nodes",
    "pandas.computation.expr._expr_context_nodes",
    "pandas.computation.expr._filter_nodes",
    "pandas.computation.expr._hacked_nodes",
    "pandas.computation.expr._handler_nodes",
    "pandas.computation.expr._is_type",
    "pandas.computation.expr._keyword_nodes",
    "pandas.computation.expr._mod_nodes",
    "pandas.computation.expr._msg",
    "pandas.computation.expr._stmt_nodes",
    "pandas.computation.expr._unsupported_expr_nodes",
    "pandas.computation.expr._unsupported_nodes",
    "pandas.computation.expr.ast",
    "pandas.computation.ops.BinOp",
    "pandas.computation.ops.UnaryOp",
    "pandas.computation.ops._mathops",
    "pandas.computation.ops._reductions",
    "type"
   ]
  },
  "type": "module"
 },
 "pandas.computation.expr.BaseExprVisitor": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "dict",
    "pandas.compat.zip",
    "pandas.computation.expr._op_classes",
    "pandas.computation.expr._unsupported_nodes",
    "pandas.computation.expr.add_ops",
    "pandas.computation.expr.ast",
    "pandas.computation.expr.disallow",
    "pandas.computation.ops.Constant",
    "pandas.computation.ops.Term",
    "pandas.computation.ops._arith_ops_syms",
    "pandas.computation.ops._bool_ops_syms",
    "pandas.computation.ops._cmp_ops_syms",
    "pandas.computation.ops._unary_ops_syms"
   ]
  },
  "type": "class"
 },
 "pandas.computation.expr.BaseExprVisitor.__init__": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "pandas.computation.expr._preparse"
   ]
  },
  "type": "function"
 },
 "pandas.computation.expr.BaseExprVisitor._possibly_eval": {
  "data": {
   "lineno": 359
  },
  "type": "function"
 },
 "pandas.computation.expr.BaseExprVisitor._possibly_evaluate_binop": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "TypeError",
    "getattr",
    "object",
    "op",
    "pandas.computation.ops._cmp_ops_syms"
   ]
  },
  "type": "function"
 },
 "pandas.computation.expr.BaseExprVisitor._possibly_transform_eq_ne": {
  "data": {
   "lineno": 350
  },
  "type": "function"
 },
 "pandas.computation.expr.BaseExprVisitor._rewrite_membership_op": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "map",
    "pandas.computation.expr._is_list",
    "pandas.computation.expr._is_str",
    "pandas.computation.ops.is_term",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.computation.expr.BaseExprVisitor._try_visit_binop": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "isinstance",
    "pandas.computation.ops.Op",
    "pandas.computation.ops.Term"
   ]
  },
  "type": "function"
 },
 "pandas.computation.expr.BaseExprVisitor.translate_In": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "op"
   ]
  },
  "type": "function"
 },
 "pandas.computation.expr.BaseExprVisitor.visit": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "pandas.compat.string_types",
    "pandas.computation.expr.ast",
    "visitor"
   ]
  },
  "type": "function"
 },
 "pandas.computation.expr.BaseExprVisitor.visit_Assign": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "SyntaxError",
    "ValueError",
    "getattr",
    "isinstance",
    "len",
    "pandas.computation.expr.ast",
    "pandas.computation.ops.UndefinedVariableError"
   ]
  },
  "type": "function"
 },
 "pandas.computation.expr.BaseExprVisitor.visit_Attribute": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "getattr",
    "isinstance",
    "pandas.computation.expr.ast"
   ]
  },
  "type": "function"
 },
 "pandas.computation.expr.BaseExprVisitor.visit_BinOp": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "op"
   ]
  },
  "type": "function"
 },
 "pandas.computation.expr.BaseExprVisitor.visit_BoolOp": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "pandas.compat.reduce",
    "visitor"
   ]
  },
  "type": "function"
 },
 "pandas.computation.expr.BaseExprVisitor.visit_BoolOp.visitor": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "op"
   ]
  },
  "type": "function"
 },
 "pandas.computation.expr.BaseExprVisitor.visit_Call_35": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "hasattr",
    "isinstance",
    "pandas.computation.expr.ast",
    "pandas.computation.ops.FuncNode",
    "pandas.computation.ops.UndefinedVariableError",
    "res"
   ]
  },
  "type": "function"
 },
 "pandas.computation.expr.BaseExprVisitor.visit_Call_legacy": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "hasattr",
    "isinstance",
    "pandas.computation.expr.ast",
    "pandas.computation.ops.FuncNode",
    "pandas.computation.ops.UndefinedVariableError",
    "res",
    "res.name",
    "res.value"
   ]
  },
  "type": "function"
 },
 "pandas.computation.expr.BaseExprVisitor.visit_Compare": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "len",
    "op",
    "pandas.compat.zip",
    "pandas.computation.expr.ast"
   ]
  },
  "type": "function"
 },
 "pandas.computation.expr.BaseExprVisitor.visit_Div": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "pandas.computation.ops.Div"
   ]
  },
  "type": "function"
 },
 "pandas.computation.expr.BaseExprVisitor.visit_Expr": {
  "data": {
   "lineno": 319
  },
  "type": "function"
 },
 "pandas.computation.expr.BaseExprVisitor.visit_Index": {
  "data": {
   "lineno": 432
  },
  "type": "function"
 },
 "pandas.computation.expr.BaseExprVisitor.visit_List": {
  "data": {
   "lineno": 426
  },
  "type": "function"
 },
 "pandas.computation.expr.BaseExprVisitor.visit_Module": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "SyntaxError",
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.computation.expr.BaseExprVisitor.visit_Name": {
  "data": {
   "lineno": 413
  },
  "type": "function"
 },
 "pandas.computation.expr.BaseExprVisitor.visit_NameConstant": {
  "data": {
   "lineno": 416
  },
  "type": "function"
 },
 "pandas.computation.expr.BaseExprVisitor.visit_Num": {
  "data": {
   "lineno": 419
  },
  "type": "function"
 },
 "pandas.computation.expr.BaseExprVisitor.visit_Slice": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.computation.expr.BaseExprVisitor.visit_Str": {
  "data": {
   "lineno": 422
  },
  "type": "function"
 },
 "pandas.computation.expr.BaseExprVisitor.visit_Subscript": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "AttributeError",
    "pandas.eval"
   ]
  },
  "type": "function"
 },
 "pandas.computation.expr.BaseExprVisitor.visit_UnaryOp": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "op"
   ]
  },
  "type": "function"
 },
 "pandas.computation.expr.BinOp": {
  "data": {
   "shadows": "pandas.computation.ops.BinOp"
  },
  "type": "import"
 },
 "pandas.computation.expr.Constant": {
  "data": {
   "shadows": "pandas.computation.ops.Constant"
  },
  "type": "import"
 },
 "pandas.computation.expr.Div": {
  "data": {
   "shadows": "pandas.computation.ops.Div"
  },
  "type": "import"
 },
 "pandas.computation.expr.Expr": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "pandas.core.base.StringMixin"
   ]
  },
  "type": "class"
 },
 "pandas.computation.expr.Expr.__call__": {
  "data": {
   "lineno": 716
  },
  "type": "function"
 },
 "pandas.computation.expr.Expr.__init__": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "pandas.computation.scope.Scope"
   ]
  },
  "type": "function"
 },
 "pandas.computation.expr.Expr.__len__": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.computation.expr.Expr.__unicode__": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "pandas.formats.printing.pprint_thing"
   ]
  },
  "type": "function"
 },
 "pandas.computation.expr.Expr.assigner": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "getattr",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.computation.expr.Expr.names": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "frozenset",
    "pandas.computation.ops.is_term",
    "pandas.core.common.flatten",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.computation.expr.Expr.parse": {
  "data": {
   "lineno": 725
  },
  "type": "function"
 },
 "pandas.computation.expr.FuncNode": {
  "data": {
   "shadows": "pandas.computation.ops.FuncNode"
  },
  "type": "import"
 },
 "pandas.computation.expr.Op": {
  "data": {
   "shadows": "pandas.computation.ops.Op"
  },
  "type": "import"
 },
 "pandas.computation.expr.PandasExprVisitor": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "frozenset",
    "pandas.computation.expr.BaseExprVisitor",
    "pandas.computation.expr._boolop_nodes",
    "pandas.computation.expr._python_not_supported",
    "pandas.computation.expr._unsupported_nodes",
    "pandas.computation.expr.disallow"
   ]
  },
  "type": "class"
 },
 "pandas.computation.expr.PandasExprVisitor.__init__": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "functools.partial",
    "pandas.computation.expr.PandasExprVisitor",
    "pandas.computation.expr._preparse",
    "pandas.computation.expr._replace_booleans",
    "pandas.computation.expr._replace_locals",
    "pandas.tools.util.compose",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.computation.expr.PythonExprVisitor": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "frozenset",
    "pandas.computation.expr.BaseExprVisitor",
    "pandas.computation.expr._python_not_supported",
    "pandas.computation.expr._unsupported_nodes",
    "pandas.computation.expr.disallow"
   ]
  },
  "type": "class"
 },
 "pandas.computation.expr.PythonExprVisitor.__init__": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "pandas.computation.expr.PythonExprVisitor",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.computation.expr.Scope": {
  "data": {
   "shadows": "pandas.computation.scope.Scope"
  },
  "type": "import"
 },
 "pandas.computation.expr.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.computation.expr.StringMixin": {
  "data": {
   "shadows": "pandas.core.base.StringMixin"
  },
  "type": "import"
 },
 "pandas.computation.expr.Term": {
  "data": {
   "shadows": "pandas.computation.ops.Term"
  },
  "type": "import"
 },
 "pandas.computation.expr.UnaryOp": {
  "data": {
   "shadows": "pandas.computation.ops.UnaryOp"
  },
  "type": "import"
 },
 "pandas.computation.expr.UndefinedVariableError": {
  "data": {
   "shadows": "pandas.computation.ops.UndefinedVariableError"
  },
  "type": "import"
 },
 "pandas.computation.expr._LOCAL_TAG": {
  "data": {
   "shadows": "pandas.computation.ops._LOCAL_TAG"
  },
  "type": "import"
 },
 "pandas.computation.expr._alias_nodes": {
  "data": {
   "lineno": 169
  },
  "type": "constant"
 },
 "pandas.computation.expr._all_node_names": {
  "data": {
   "lineno": 155
  },
  "type": "constant"
 },
 "pandas.computation.expr._all_nodes": {
  "data": {
   "lineno": 143
  },
  "type": "constant"
 },
 "pandas.computation.expr._arguments_nodes": {
  "data": {
   "lineno": 167
  },
  "type": "constant"
 },
 "pandas.computation.expr._arith_ops_syms": {
  "data": {
   "shadows": "pandas.computation.ops._arith_ops_syms"
  },
  "type": "import"
 },
 "pandas.computation.expr._base_supported_nodes": {
  "data": {
   "lineno": 189
  },
  "type": "constant"
 },
 "pandas.computation.expr._bool_ops_syms": {
  "data": {
   "shadows": "pandas.computation.ops._bool_ops_syms"
  },
  "type": "import"
 },
 "pandas.computation.expr._boolop_nodes": {
  "data": {
   "lineno": 161
  },
  "type": "constant"
 },
 "pandas.computation.expr._cmp_op_nodes": {
  "data": {
   "lineno": 164
  },
  "type": "constant"
 },
 "pandas.computation.expr._cmp_ops_syms": {
  "data": {
   "shadows": "pandas.computation.ops._cmp_ops_syms"
  },
  "type": "import"
 },
 "pandas.computation.expr._comprehension_nodes": {
  "data": {
   "lineno": 165
  },
  "type": "constant"
 },
 "pandas.computation.expr._expr_context_nodes": {
  "data": {
   "lineno": 159
  },
  "type": "constant"
 },
 "pandas.computation.expr._expr_nodes": {
  "data": {
   "lineno": 158
  },
  "type": "constant"
 },
 "pandas.computation.expr._filter_nodes": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "frozenset",
    "issubclass",
    "pandas.computation.expr._all_nodes"
   ]
  },
  "type": "function"
 },
 "pandas.computation.expr._hacked_nodes": {
  "data": {
   "lineno": 173
  },
  "type": "constant"
 },
 "pandas.computation.expr._handler_nodes": {
  "data": {
   "lineno": 166
  },
  "type": "constant"
 },
 "pandas.computation.expr._is_list": {
  "data": {
   "lineno": 138
  },
  "type": "constant"
 },
 "pandas.computation.expr._is_str": {
  "data": {
   "lineno": 139
  },
  "type": "constant"
 },
 "pandas.computation.expr._is_type": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pandas.computation.expr._keyword_nodes": {
  "data": {
   "lineno": 168
  },
  "type": "constant"
 },
 "pandas.computation.expr._mathops": {
  "data": {
   "shadows": "pandas.computation.ops._mathops"
  },
  "type": "import"
 },
 "pandas.computation.expr._mod_nodes": {
  "data": {
   "lineno": 156
  },
  "type": "constant"
 },
 "pandas.computation.expr._msg": {
  "data": {
   "lineno": 190
  },
  "type": "constant"
 },
 "pandas.computation.expr._node_not_implemented": {
  "data": {
   "lineno": 195
  },
  "type": "function"
 },
 "pandas.computation.expr._node_not_implemented.f": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pandas.computation.expr._numexpr_supported_calls": {
  "data": {
   "lineno": 666
  },
  "type": "constant"
 },
 "pandas.computation.expr._op_classes": {
  "data": {
   "lineno": 245
  },
  "type": "constant"
 },
 "pandas.computation.expr._op_maker": {
  "data": {
   "lineno": 225
  },
  "type": "function"
 },
 "pandas.computation.expr._op_maker.f": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "functools.partial"
   ]
  },
  "type": "function"
 },
 "pandas.computation.expr._operator_nodes": {
  "data": {
   "lineno": 162
  },
  "type": "constant"
 },
 "pandas.computation.expr._parsers": {
  "data": {
   "lineno": 737
  },
  "type": "constant"
 },
 "pandas.computation.expr._preparse": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "callable",
    "pandas.compat.lmap",
    "pandas.computation.expr._replace_booleans",
    "pandas.computation.expr._replace_locals",
    "pandas.computation.expr._rewrite_assign",
    "pandas.computation.expr.tokenize",
    "pandas.computation.expr.tokenize_string",
    "pandas.tools.util.compose"
   ]
  },
  "type": "function"
 },
 "pandas.computation.expr._python_not_supported": {
  "data": {
   "lineno": 665
  },
  "type": "constant"
 },
 "pandas.computation.expr._reductions": {
  "data": {
   "shadows": "pandas.computation.ops._reductions"
  },
  "type": "import"
 },
 "pandas.computation.expr._replace_booleans": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "pandas.computation.expr.tokenize"
   ]
  },
  "type": "function"
 },
 "pandas.computation.expr._replace_locals": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "pandas.computation.expr.tokenize",
    "pandas.computation.ops._LOCAL_TAG"
   ]
  },
  "type": "function"
 },
 "pandas.computation.expr._rewrite_assign": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "pandas.computation.expr._slice_nodes": {
  "data": {
   "lineno": 160
  },
  "type": "constant"
 },
 "pandas.computation.expr._stmt_nodes": {
  "data": {
   "lineno": 157
  },
  "type": "constant"
 },
 "pandas.computation.expr._unary_op_nodes": {
  "data": {
   "lineno": 163
  },
  "type": "constant"
 },
 "pandas.computation.expr._unary_ops_syms": {
  "data": {
   "shadows": "pandas.computation.ops._unary_ops_syms"
  },
  "type": "import"
 },
 "pandas.computation.expr._unsupported_expr_nodes": {
  "data": {
   "lineno": 176
  },
  "type": "constant"
 },
 "pandas.computation.expr._unsupported_nodes": {
  "data": {
   "lineno": 181
  },
  "type": "constant"
 },
 "pandas.computation.expr.add_ops": {
  "data": {
   "lineno": 248
  },
  "type": "function"
 },
 "pandas.computation.expr.add_ops.f": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "getattr",
    "pandas.compat.iteritems",
    "pandas.computation.expr._op_maker",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pandas.computation.expr.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "pandas.computation.expr.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.computation.expr.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.computation.expr.compose": {
  "data": {
   "shadows": "pandas.tools.util.compose"
  },
  "type": "import"
 },
 "pandas.computation.expr.disallow": {
  "data": {
   "lineno": 206
  },
  "type": "function"
 },
 "pandas.computation.expr.disallow.disallowed": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "pandas.computation.expr._node_not_implemented",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pandas.computation.expr.is_term": {
  "data": {
   "shadows": "pandas.computation.ops.is_term"
  },
  "type": "import"
 },
 "pandas.computation.expr.lmap": {
  "data": {
   "shadows": "pandas.compat.lmap"
  },
  "type": "import"
 },
 "pandas.computation.expr.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "pandas.computation.expr.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.computation.expr.printing": {
  "data": {
   "shadows": "pandas.formats.printing"
  },
  "type": "import"
 },
 "pandas.computation.expr.reduce": {
  "data": {
   "shadows": "pandas.compat.reduce"
  },
  "type": "import"
 },
 "pandas.computation.expr.string_types": {
  "data": {
   "shadows": "pandas.compat.string_types"
  },
  "type": "import"
 },
 "pandas.computation.expr.tokenize": {
  "data": {
   "shadows": "tokenize"
  },
  "type": "import"
 },
 "pandas.computation.expr.tokenize_string": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.computation.expr.tokenize"
   ]
  },
  "type": "function"
 },
 "pandas.computation.expr.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.computation.ne": {
  "data": {
   "shadows": "numexpr"
  },
  "type": "import"
 },
 "pandas.computation.ops": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "operator.add",
    "operator.and_",
    "operator.div",
    "operator.eq",
    "operator.floordiv",
    "operator.ge",
    "operator.gt",
    "operator.invert",
    "operator.le",
    "operator.lt",
    "operator.mod",
    "operator.mul",
    "operator.ne",
    "operator.neg",
    "operator.or_",
    "operator.pos",
    "operator.pow",
    "operator.sub",
    "operator.truediv",
    "pandas.compat.PY3",
    "pandas.computation.ops._arith_ops_dict",
    "pandas.computation.ops._arith_ops_funcs",
    "pandas.computation.ops._arith_ops_syms",
    "pandas.computation.ops._binary_math_ops",
    "pandas.computation.ops._binary_ops_dict",
    "pandas.computation.ops._bool_ops_dict",
    "pandas.computation.ops._bool_ops_funcs",
    "pandas.computation.ops._bool_ops_syms",
    "pandas.computation.ops._cmp_ops_dict",
    "pandas.computation.ops._cmp_ops_funcs",
    "pandas.computation.ops._cmp_ops_syms",
    "pandas.computation.ops._in",
    "pandas.computation.ops._not_in",
    "pandas.computation.ops._special_case_arith_ops_funcs",
    "pandas.computation.ops._special_case_arith_ops_syms",
    "pandas.computation.ops._unary_math_ops",
    "pandas.computation.ops._unary_ops_funcs",
    "pandas.computation.ops._unary_ops_syms",
    "zip"
   ]
  },
  "type": "module"
 },
 "pandas.computation.ops.BinOp": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "pandas.computation.ops.Op"
   ]
  },
  "type": "class"
 },
 "pandas.computation.ops.BinOp.__call__": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "operator.truediv"
   ]
  },
  "type": "function"
 },
 "pandas.computation.ops.BinOp.__init__": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "list",
    "operator",
    "pandas.computation.ops.BinOp",
    "pandas.computation.ops._binary_ops_dict",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.computation.ops.BinOp._disallow_scalar_only_bool_ops": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool",
    "issubclass",
    "numpy.bool_",
    "pandas.computation.ops._bool_ops_dict",
    "self.lhs.isscalar",
    "self.lhs.return_type",
    "self.op",
    "self.rhs.isscalar",
    "self.rhs.return_type"
   ]
  },
  "type": "function"
 },
 "pandas.computation.ops.BinOp.convert_values": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "pandas.Timestamp",
    "pandas.computation.common._ensure_decoded",
    "pandas.computation.ops.is_term",
    "self.lhs",
    "self.lhs.update",
    "self.rhs",
    "self.rhs.update",
    "stringify"
   ]
  },
  "type": "function"
 },
 "pandas.computation.ops.BinOp.convert_values.stringify": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "encoder",
    "functools.partial",
    "pandas.formats.printing.pprint_thing",
    "pandas.formats.printing.pprint_thing_encoded",
    "self.encoding"
   ]
  },
  "type": "function"
 },
 "pandas.computation.ops.BinOp.evaluate": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "pandas.eval",
    "self",
    "self.func",
    "self.lhs.evaluate",
    "self.op",
    "self.rhs.evaluate",
    "term_type"
   ]
  },
  "type": "function"
 },
 "pandas.computation.ops.Constant": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "pandas.computation.ops.Term"
   ]
  },
  "type": "class"
 },
 "pandas.computation.ops.Constant.__init__": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "pandas.computation.ops.Constant",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.computation.ops.Constant._resolve_name": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "pandas.computation.ops.Constant.name": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.computation.ops.Div": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "pandas.computation.ops.BinOp"
   ]
  },
  "type": "class"
 },
 "pandas.computation.ops.Div.__init__": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "TypeError",
    "numpy.float_",
    "pandas.compat.PY3",
    "pandas.computation.ops.Div",
    "pandas.computation.ops._cast_inplace",
    "pandas.computation.ops.isnumeric",
    "pandas.core.common.flatten",
    "self",
    "self.op",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.computation.ops.FuncNode": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.computation.ops.FuncNode.__call__": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "pandas.computation.ops.MathCall",
    "self"
   ]
  },
  "type": "function"
 },
 "pandas.computation.ops.FuncNode.__init__": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "numpy",
    "pandas.computation.ops._mathops",
    "self.func",
    "self.name"
   ]
  },
  "type": "function"
 },
 "pandas.computation.ops.MathCall": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "pandas.computation.ops.Op"
   ]
  },
  "type": "class"
 },
 "pandas.computation.ops.MathCall.__call__": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "operator",
    "self.func.func",
    "self.operands"
   ]
  },
  "type": "function"
 },
 "pandas.computation.ops.MathCall.__init__": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "pandas.computation.ops.MathCall",
    "self",
    "self.func",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.computation.ops.MathCall.__unicode__": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "map",
    "pandas.formats.printing.pprint_thing",
    "self.op",
    "self.operands",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.computation.ops.Op": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "pandas.core.base.StringMixin"
   ]
  },
  "type": "class"
 },
 "pandas.computation.ops.Op.__init__": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "operator",
    "pandas.computation.ops._bool_op_map"
   ]
  },
  "type": "function"
 },
 "pandas.computation.ops.Op.__iter__": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "pandas.computation.ops.Op.__unicode__": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "pandas.formats.printing.pprint_thing"
   ]
  },
  "type": "function"
 },
 "pandas.computation.ops.Op.has_invalid_return_type": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "frozenset",
    "numpy.dtype",
    "object",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.computation.ops.Op.is_datetime": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "AttributeError",
    "datetime.datetime",
    "issubclass",
    "numpy.datetime64",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.computation.ops.Op.isscalar": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "all",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.computation.ops.Op.operand_types": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "frozenset",
    "pandas.core.common.flatten",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.computation.ops.Op.return_type": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "numpy.bool_",
    "pandas.computation.common._result_type_many",
    "pandas.core.common.flatten",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.computation.ops.PY3": {
  "data": {
   "shadows": "pandas.compat.PY3"
  },
  "type": "import"
 },
 "pandas.computation.ops.StringMixin": {
  "data": {
   "shadows": "pandas.core.base.StringMixin"
  },
  "type": "import"
 },
 "pandas.computation.ops.Term": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "pandas.core.base.StringMixin",
    "type"
   ]
  },
  "type": "class"
 },
 "pandas.computation.ops.Term.__call__": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "pandas.computation.ops.Term.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "pandas.compat.text_type",
    "pandas.computation.ops._LOCAL_TAG",
    "pandas.computation.scope._DEFAULT_GLOBALS"
   ]
  },
  "type": "function"
 },
 "pandas.computation.ops.Term.__new__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "isinstance",
    "pandas.compat.string_types",
    "pandas.computation.ops.Term",
    "super",
    "supr_new"
   ]
  },
  "type": "function"
 },
 "pandas.computation.ops.Term.__unicode__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "pandas.formats.printing.pprint_thing"
   ]
  },
  "type": "function"
 },
 "pandas.computation.ops.Term._resolve_name": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "NotImplementedError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "pandas.computation.ops.Term.evaluate": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "pandas.computation.ops.Term.is_datetime": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "AttributeError",
    "datetime.datetime",
    "issubclass",
    "numpy.datetime64",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.computation.ops.Term.isscalar": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "pandas.lib.isscalar",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.computation.ops.Term.local_name": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "pandas.computation.ops._LOCAL_TAG",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.computation.ops.Term.name": {
  "data": {
   "lineno": 147
  },
  "type": "function"
 },
 "pandas.computation.ops.Term.ndim": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.computation.ops.Term.raw": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "pandas.formats.printing.pprint_thing",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.computation.ops.Term.type": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "AttributeError",
    "property",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.computation.ops.Term.update": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "isinstance",
    "pandas.compat.string_types"
   ]
  },
  "type": "function"
 },
 "pandas.computation.ops.Term.value": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "pandas.computation.ops.UnaryOp": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "pandas.computation.ops.Op"
   ]
  },
  "type": "class"
 },
 "pandas.computation.ops.UnaryOp.__call__": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "self.func",
    "self.operand"
   ]
  },
  "type": "function"
 },
 "pandas.computation.ops.UnaryOp.__init__": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "operator",
    "pandas.computation.ops.UnaryOp",
    "pandas.computation.ops._unary_ops_dict",
    "pandas.computation.ops._unary_ops_syms",
    "self",
    "self.func",
    "self.operand",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.computation.ops.UnaryOp.__unicode__": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "pandas.formats.printing.pprint_thing",
    "self.op",
    "self.operand"
   ]
  },
  "type": "function"
 },
 "pandas.computation.ops.UnaryOp.return_type": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "isinstance",
    "numpy.dtype",
    "pandas.computation.ops.Op",
    "pandas.computation.ops._bool_ops_dict",
    "pandas.computation.ops._cmp_ops_dict",
    "property",
    "self.operand"
   ]
  },
  "type": "function"
 },
 "pandas.computation.ops.UndefinedVariableError": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "NameError"
   ]
  },
  "type": "class"
 },
 "pandas.computation.ops.UndefinedVariableError.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "pandas.computation.ops.UndefinedVariableError",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.computation.ops._DEFAULT_GLOBALS": {
  "data": {
   "shadows": "pandas.computation.scope._DEFAULT_GLOBALS"
  },
  "type": "import"
 },
 "pandas.computation.ops._LOCAL_TAG": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pandas.computation.ops._arith_ops_dict": {
  "data": {
   "lineno": 266
  },
  "type": "constant"
 },
 "pandas.computation.ops._arith_ops_funcs": {
  "data": {
   "lineno": 264
  },
  "type": "constant"
 },
 "pandas.computation.ops._arith_ops_syms": {
  "data": {
   "lineno": 263
  },
  "type": "constant"
 },
 "pandas.computation.ops._binary_math_ops": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pandas.computation.ops._binary_ops_dict": {
  "data": {
   "lineno": 273
  },
  "type": "constant"
 },
 "pandas.computation.ops._bool_op_map": {
  "data": {
   "lineno": 170
  },
  "type": "constant"
 },
 "pandas.computation.ops._bool_ops_dict": {
  "data": {
   "lineno": 261
  },
  "type": "constant"
 },
 "pandas.computation.ops._bool_ops_funcs": {
  "data": {
   "lineno": 260
  },
  "type": "constant"
 },
 "pandas.computation.ops._bool_ops_syms": {
  "data": {
   "lineno": 259
  },
  "type": "constant"
 },
 "pandas.computation.ops._cast_inplace": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "pandas.computation.ops._cmp_ops_dict": {
  "data": {
   "lineno": 257
  },
  "type": "constant"
 },
 "pandas.computation.ops._cmp_ops_funcs": {
  "data": {
   "lineno": 256
  },
  "type": "constant"
 },
 "pandas.computation.ops._cmp_ops_syms": {
  "data": {
   "lineno": 255
  },
  "type": "constant"
 },
 "pandas.computation.ops._ensure_decoded": {
  "data": {
   "shadows": "pandas.computation.common._ensure_decoded"
  },
  "type": "import"
 },
 "pandas.computation.ops._in": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "AttributeError",
    "pandas.core.common.is_list_like"
   ]
  },
  "type": "function"
 },
 "pandas.computation.ops._mathops": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pandas.computation.ops._not_in": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "AttributeError",
    "pandas.core.common.is_list_like"
   ]
  },
  "type": "function"
 },
 "pandas.computation.ops._reductions": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pandas.computation.ops._result_type_many": {
  "data": {
   "shadows": "pandas.computation.common._result_type_many"
  },
  "type": "import"
 },
 "pandas.computation.ops._special_case_arith_ops_dict": {
  "data": {
   "lineno": 270
  },
  "type": "constant"
 },
 "pandas.computation.ops._special_case_arith_ops_funcs": {
  "data": {
   "lineno": 269
  },
  "type": "constant"
 },
 "pandas.computation.ops._special_case_arith_ops_syms": {
  "data": {
   "lineno": 268
  },
  "type": "constant"
 },
 "pandas.computation.ops._unary_math_ops": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "pandas.computation.ops._unary_ops_dict": {
  "data": {
   "lineno": 460
  },
  "type": "constant"
 },
 "pandas.computation.ops._unary_ops_funcs": {
  "data": {
   "lineno": 459
  },
  "type": "constant"
 },
 "pandas.computation.ops._unary_ops_syms": {
  "data": {
   "lineno": 458
  },
  "type": "constant"
 },
 "pandas.computation.ops.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.computation.ops.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.computation.ops.is_term": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "isinstance",
    "pandas.computation.ops.Term"
   ]
  },
  "type": "function"
 },
 "pandas.computation.ops.isnumeric": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "issubclass",
    "numpy.dtype",
    "numpy.number"
   ]
  },
  "type": "function"
 },
 "pandas.computation.ops.lib": {
  "data": {
   "shadows": "pandas.lib"
  },
  "type": "import"
 },
 "pandas.computation.ops.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.computation.ops.op": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "pandas.computation.ops.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "pandas.computation.ops.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.computation.ops.pprint_thing": {
  "data": {
   "shadows": "pandas.formats.printing.pprint_thing"
  },
  "type": "import"
 },
 "pandas.computation.ops.pprint_thing_encoded": {
  "data": {
   "shadows": "pandas.formats.printing.pprint_thing_encoded"
  },
  "type": "import"
 },
 "pandas.computation.ops.string_types": {
  "data": {
   "shadows": "pandas.compat.string_types"
  },
  "type": "import"
 },
 "pandas.computation.ops.text_type": {
  "data": {
   "shadows": "pandas.compat.text_type"
  },
  "type": "import"
 },
 "pandas.computation.scope": {
  "data": {
   "symbols_in_volume": [
    "list",
    "numpy.inf",
    "pandas.computation.scope.datetime",
    "pandas.lib.Timestamp",
    "tuple"
   ]
  },
  "type": "module"
 },
 "pandas.computation.scope.DeepChainMap": {
  "data": {
   "shadows": "pandas.compat.DeepChainMap"
  },
  "type": "import"
 },
 "pandas.computation.scope.Scope": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "pandas.core.base.StringMixin"
   ]
  },
  "type": "class"
 },
 "pandas.computation.scope.Scope.__init__": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "isinstance",
    "pandas.compat.DeepChainMap",
    "pandas.computation.scope.Scope",
    "pandas.computation.scope._DEFAULT_GLOBALS",
    "pandas.computation.scope.sys",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.computation.scope.Scope.__unicode__": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "list",
    "pandas.computation.scope._get_pretty_string",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.computation.scope.Scope._get_vars": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "getattr",
    "pandas.computation.scope.itertools"
   ]
  },
  "type": "function"
 },
 "pandas.computation.scope.Scope.add_tmp": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "pandas.computation.scope._raw_hex_id",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.computation.scope.Scope.full_scope": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "pandas.compat.DeepChainMap",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.computation.scope.Scope.has_resolvers": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "bool",
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.computation.scope.Scope.ntemps": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.computation.scope.Scope.resolve": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "KeyError",
    "pandas.computation.ops.UndefinedVariableError"
   ]
  },
  "type": "function"
 },
 "pandas.computation.scope.Scope.swapkey": {
  "data": {
   "lineno": 192
  },
  "type": "function"
 },
 "pandas.computation.scope.Scope.update": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "pandas.computation.scope.inspect"
   ]
  },
  "type": "function"
 },
 "pandas.computation.scope.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.computation.scope.StringMixin": {
  "data": {
   "shadows": "pandas.core.base.StringMixin"
  },
  "type": "import"
 },
 "pandas.computation.scope._DEFAULT_GLOBALS": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "pandas.computation.scope._ensure_scope": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "pandas.computation.scope.Scope"
   ]
  },
  "type": "function"
 },
 "pandas.computation.scope._get_pretty_string": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.computation.scope.pprint"
   ]
  },
  "type": "function"
 },
 "pandas.computation.scope._raw_hex_id": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "id",
    "pandas.compat.map",
    "pandas.computation.scope._replacer",
    "pandas.computation.scope.struct"
   ]
  },
  "type": "function"
 },
 "pandas.computation.scope._replacer": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "TypeError",
    "hex",
    "ord"
   ]
  },
  "type": "function"
 },
 "pandas.computation.scope.compu": {
  "data": {
   "shadows": "pandas.computation"
  },
  "type": "import"
 },
 "pandas.computation.scope.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pandas.computation.scope.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "pandas.computation.scope.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pandas.computation.scope.map": {
  "data": {
   "shadows": "pandas.compat.map"
  },
  "type": "import"
 },
 "pandas.computation.scope.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.computation.scope.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.computation.scope.pprint": {
  "data": {
   "shadows": "pprint"
  },
  "type": "import"
 },
 "pandas.computation.scope.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "pandas.computation.scope.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.computation.tests": {
  "data": {},
  "type": "module"
 },
 "pandas.computation.tests.test_compat": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "itertools.product",
    "list",
    "pandas.computation.engines._engines",
    "pandas.computation.expr._parsers",
    "pandas.computation.tests.test_compat.nose"
   ]
  },
  "type": "module"
 },
 "pandas.computation.tests.test_compat.ENGINES_PARSERS": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pandas.computation.tests.test_compat.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_compat._NUMEXPR_INSTALLED": {
  "data": {
   "shadows": "pandas.computation._NUMEXPR_INSTALLED"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_compat._engines": {
  "data": {
   "shadows": "pandas.computation.engines._engines"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_compat.check_invalid_numexpr_version": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ImportError",
    "distutils.version.LooseVersion",
    "numexpr.__version__",
    "pandas.computation.tests.test_compat.nose",
    "pandas.util.testing.assertRaisesRegexp",
    "testit"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_compat.check_invalid_numexpr_version.testit": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "pandas.eval",
    "pandas.util.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_compat.expr": {
  "data": {
   "shadows": "pandas.computation.expr"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_compat.ne": {
  "data": {
   "shadows": "numexpr"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_compat.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_compat.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_compat.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_compat.test_compat": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ImportError",
    "UserWarning",
    "distutils.version.LooseVersion",
    "numexpr.__version__",
    "pandas.computation._NUMEXPR_INSTALLED",
    "pandas.computation.tests.test_compat.nose",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_compat.test_invalid_numexpr_version": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "pandas.computation.tests.test_compat.ENGINES_PARSERS"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_compat.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_eval": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "itertools.product",
    "list",
    "numpy.random.randn",
    "pandas.computation.engines._engines",
    "pandas.computation.expr.PandasExprVisitor",
    "pandas.computation.expr.PythonExprVisitor",
    "pandas.computation.expr._parsers",
    "pandas.computation.ops._arith_ops_syms",
    "pandas.computation.ops._bool_ops_syms",
    "pandas.computation.ops._special_case_arith_ops_syms",
    "pandas.computation.pytables.ExprVisitor",
    "pandas.computation.tests.test_eval.nose",
    "pandas.core.common.difference"
   ]
  },
  "type": "module"
 },
 "pandas.computation.tests.test_eval.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_eval.ENGINES_PARSERS": {
  "data": {
   "lineno": 737
  },
  "type": "constant"
 },
 "pandas.computation.tests.test_eval.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_eval.NumExprClobberingError": {
  "data": {
   "shadows": "pandas.computation.engines.NumExprClobberingError"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_eval.PY3": {
  "data": {
   "shadows": "pandas.compat.PY3"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_eval.PandasExprVisitor": {
  "data": {
   "shadows": "pandas.computation.expr.PandasExprVisitor"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_eval.Panel": {
  "data": {
   "shadows": "pandas.Panel"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_eval.PythonExprVisitor": {
  "data": {
   "shadows": "pandas.computation.expr.PythonExprVisitor"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_eval.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_eval.TestAlignment": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.computation.tests.test_eval.TestAlignment.check_align_nested_unary_op": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "pandas.computation.tests.test_eval.f",
    "pandas.eval",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeCustomDataframe",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestAlignment.check_basic_frame_alignment": {
  "data": {
   "lineno": 769,
   "symbols_in_volume": [
    "RuntimeWarning",
    "itertools.product",
    "pandas.computation.tests.test_eval.f",
    "pandas.computation.tests.test_eval.should_warn",
    "pandas.computation.tests.test_eval.warnings",
    "pandas.eval",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.makeCustomDataframe",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestAlignment.check_basic_frame_series_alignment": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": [
    "RuntimeWarning",
    "itertools.product",
    "pandas.computation.tests.test_eval.warnings",
    "pandas.util.testing.skip_if_no_ne",
    "testit"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestAlignment.check_basic_frame_series_alignment.testit": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": [
    "RuntimeWarning",
    "getattr",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.computation.tests.test_eval.f",
    "pandas.computation.tests.test_eval.should_warn",
    "pandas.eval",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.makeCustomDataframe"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestAlignment.check_basic_series_frame_alignment": {
  "data": {
   "lineno": 868,
   "symbols_in_volume": [
    "itertools.product",
    "pandas.computation.tests.test_eval.warnings",
    "pandas.util.testing.skip_if_no_ne",
    "testit"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestAlignment.check_basic_series_frame_alignment.testit": {
  "data": {
   "lineno": 871,
   "symbols_in_volume": [
    "RuntimeWarning",
    "getattr",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.computation.tests.test_eval.f",
    "pandas.computation.tests.test_eval.should_warn",
    "pandas.eval",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.makeCustomDataframe"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestAlignment.check_complex_series_frame_alignment": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": [
    "RuntimeWarning",
    "getattr",
    "itertools.product",
    "locals",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.computation.tests.test_eval.f",
    "pandas.computation.tests.test_eval.random",
    "pandas.computation.tests.test_eval.should_warn",
    "pandas.computation.tests.test_eval.warnings",
    "pandas.eval",
    "pandas.util.testing.assert_equal",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.makeCustomDataframe",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestAlignment.check_frame_comparison": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "itertools.product",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.computation.tests.test_eval.f",
    "pandas.eval",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeCustomDataframe",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestAlignment.check_medium_complex_frame_alignment": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": [
    "RuntimeWarning",
    "itertools.product",
    "pandas.computation.tests.test_eval.f",
    "pandas.computation.tests.test_eval.should_warn",
    "pandas.computation.tests.test_eval.warnings",
    "pandas.eval",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.makeCustomDataframe",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestAlignment.check_performance_warning_for_poor_alignment": {
  "data": {
   "lineno": 987,
   "symbols_in_volume": [
    "len",
    "numpy.log10",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.core.common.PerformanceWarning",
    "pandas.eval",
    "pandas.util.testing.assert_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.skip_if_no_ne",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestAlignment.check_series_frame_commutativity": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "RuntimeWarning",
    "getattr",
    "itertools.product",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.computation.tests.test_eval.f",
    "pandas.computation.tests.test_eval.should_warn",
    "pandas.computation.tests.test_eval.warnings",
    "pandas.eval",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.makeCustomDataframe",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestAlignment.test_align_nested_unary_op": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "pandas.computation.tests.test_eval.ENGINES_PARSERS"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestAlignment.test_basic_frame_alignment": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "pandas.computation.tests.test_eval.ENGINES_PARSERS"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestAlignment.test_basic_frame_series_alignment": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": [
    "pandas.computation.tests.test_eval.ENGINES_PARSERS"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestAlignment.test_basic_series_frame_alignment": {
  "data": {
   "lineno": 900,
   "symbols_in_volume": [
    "pandas.computation.tests.test_eval.ENGINES_PARSERS"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestAlignment.test_complex_series_frame_alignment": {
  "data": {
   "lineno": 982,
   "symbols_in_volume": [
    "numpy.testing.decorators.slow",
    "pandas.computation.tests.test_eval.ENGINES_PARSERS"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestAlignment.test_frame_comparison": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "pandas.computation.tests.test_eval.ENGINES_PARSERS"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestAlignment.test_medium_complex_frame_alignment": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": [
    "numpy.testing.decorators.slow",
    "pandas.computation.tests.test_eval.ENGINES_PARSERS"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestAlignment.test_performance_warning_for_poor_alignment": {
  "data": {
   "lineno": 1030,
   "symbols_in_volume": [
    "pandas.computation.tests.test_eval.ENGINES_PARSERS"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestAlignment.test_series_frame_commutativity": {
  "data": {
   "lineno": 932,
   "symbols_in_volume": [
    "pandas.computation.tests.test_eval.ENGINES_PARSERS"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestEvalNumexprPandas": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.computation.tests.test_eval.TestEvalNumexprPandas.check_alignment": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "ValueError",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestEvalNumexprPandas.check_binary_arith_op": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "pandas.computation.tests.test_eval._eval_single_bin",
    "pandas.eval",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestEvalNumexprPandas.check_chained_cmp_op": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "check_operands",
    "pandas.computation.tests.test_eval._eval_single_bin",
    "pandas.computation.tests.test_eval._scalar_skip",
    "pandas.eval",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestEvalNumexprPandas.check_chained_cmp_op.check_operands": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "pandas.computation.tests.test_eval._eval_single_bin"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestEvalNumexprPandas.check_complex_cmp_op": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.computation.tests.test_eval._eval_single_bin",
    "pandas.computation.tests.test_eval._scalar_skip",
    "pandas.computation.tests.test_eval._series_frame_incompatible",
    "pandas.eval",
    "pandas.lib.isscalar",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestEvalNumexprPandas.check_compound_invert_op": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "TypeError",
    "map",
    "numpy.array",
    "pandas.computation.tests.test_eval._eval_single_bin",
    "pandas.eval",
    "pandas.lib.isscalar",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestEvalNumexprPandas.check_floor_division": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "TypeError",
    "pandas.eval",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestEvalNumexprPandas.check_modulus": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pandas.eval"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestEvalNumexprPandas.check_pow": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.testing.assert_allclose",
    "pandas.computation.tests.test_eval._is_py3_complex_incompat",
    "pandas.eval",
    "pandas.lib.isscalar",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestEvalNumexprPandas.check_simple_cmp_op": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "TypeError",
    "pandas.computation.tests.test_eval._eval_single_bin",
    "pandas.core.common.is_list_like",
    "pandas.eval",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestEvalNumexprPandas.check_single_invert_op": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "AttributeError",
    "bool",
    "numpy.array",
    "pandas.eval",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestEvalNumexprPandas.ex": {
  "data": {
   "lineno": 372
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestEvalNumexprPandas.get_expected_pow_result": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.computation.tests.test_eval._eval_single_bin",
    "pandas.computation.tests.test_eval.nose",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestEvalNumexprPandas.setUp": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "filter",
    "pandas.computation.engines._engines"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestEvalNumexprPandas.setUpClass": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "classmethod",
    "numexpr",
    "pandas.computation.tests.test_eval.TestEvalNumexprPandas",
    "pandas.util.testing.skip_if_no_ne",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestEvalNumexprPandas.setup_data": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.rand",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestEvalNumexprPandas.setup_ops": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "pandas.computation.expr._bool_ops_syms",
    "pandas.computation.expr._cmp_ops_syms",
    "pandas.computation.ops._special_case_arith_ops_syms",
    "pandas.computation.tests.test_eval._good_arith_ops"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestEvalNumexprPandas.tearDown": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestEvalNumexprPandas.tearDownClass": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "classmethod",
    "hasattr",
    "pandas.computation.tests.test_eval.TestEvalNumexprPandas",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestEvalNumexprPandas.test_binary_arith_ops": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "itertools.product",
    "numpy.testing.decorators.slow"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestEvalNumexprPandas.test_chained_cmp_op": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "itertools.product",
    "numpy.testing.decorators.slow"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestEvalNumexprPandas.test_complex_cmp_ops": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "itertools.product",
    "numpy.testing.decorators.slow"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestEvalNumexprPandas.test_compound_invert_op": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "itertools.product",
    "numpy.testing.decorators.slow"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestEvalNumexprPandas.test_disallow_scalar_bool_ops": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.eval",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestEvalNumexprPandas.test_floor_division": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "itertools.product"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestEvalNumexprPandas.test_frame_invert": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.computation.expr",
    "pandas.eval",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestEvalNumexprPandas.test_frame_negate": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.computation.expr",
    "pandas.eval",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestEvalNumexprPandas.test_frame_pos": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "TypeError",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.computation.expr",
    "pandas.eval",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestEvalNumexprPandas.test_identical": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.eval",
    "pandas.lib.isscalar",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestEvalNumexprPandas.test_line_continuation": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "pandas.eval"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestEvalNumexprPandas.test_modulus": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "itertools.product"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestEvalNumexprPandas.test_pow": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "itertools.product",
    "pandas.util.testing._skip_if_windows"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestEvalNumexprPandas.test_scalar_unary": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "TypeError",
    "pandas.eval",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestEvalNumexprPandas.test_series_invert": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.computation.expr",
    "pandas.eval",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestEvalNumexprPandas.test_series_negate": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.computation.expr",
    "pandas.eval",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestEvalNumexprPandas.test_series_pos": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "TypeError",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.computation.expr",
    "pandas.eval",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestEvalNumexprPandas.test_simple_cmp_ops": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "itertools.product",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.randbool"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestEvalNumexprPandas.test_single_invert_op": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "itertools.product",
    "numpy.testing.decorators.slow"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestEvalNumexprPandas.test_unary_in_array": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.eval",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestEvalNumexprPython": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "pandas.computation.tests.test_eval.TestEvalNumexprPandas"
   ]
  },
  "type": "class"
 },
 "pandas.computation.tests.test_eval.TestEvalNumexprPython.check_chained_cmp_op": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.eval",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestEvalNumexprPython.setUpClass": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "classmethod",
    "numexpr",
    "pandas.computation.tests.test_eval.TestEvalNumexprPython",
    "pandas.util.testing.skip_if_no_ne",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestEvalNumexprPython.setup_ops": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "filter",
    "list",
    "pandas.computation.expr._bool_ops_syms",
    "pandas.computation.expr._cmp_ops_syms",
    "pandas.computation.ops._special_case_arith_ops_syms",
    "pandas.computation.tests.test_eval._good_arith_ops"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestEvalPythonPandas": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "pandas.computation.tests.test_eval.TestEvalPythonPython"
   ]
  },
  "type": "class"
 },
 "pandas.computation.tests.test_eval.TestEvalPythonPandas.check_chained_cmp_op": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "pandas.computation.tests.test_eval.TestEvalNumexprPandas"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestEvalPythonPandas.setUpClass": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "classmethod",
    "pandas.computation.tests.test_eval.TestEvalPythonPandas",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestEvalPythonPython": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "pandas.computation.tests.test_eval.TestEvalNumexprPython"
   ]
  },
  "type": "class"
 },
 "pandas.computation.tests.test_eval.TestEvalPythonPython.check_alignment": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "ValueError",
    "eval",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestEvalPythonPython.check_modulus": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pandas.computation.tests.test_eval._eval_single_bin",
    "pandas.eval"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestEvalPythonPython.setUpClass": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "classmethod",
    "pandas.computation.tests.test_eval.TestEvalPythonPython",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestMathNumExprPandas": {
  "data": {
   "lineno": 1656,
   "symbols_in_volume": [
    "pandas.computation.tests.test_eval.TestMathPythonPython"
   ]
  },
  "type": "class"
 },
 "pandas.computation.tests.test_eval.TestMathNumExprPandas.setUpClass": {
  "data": {
   "lineno": 1658,
   "symbols_in_volume": [
    "classmethod",
    "pandas.computation.tests.test_eval.TestMathNumExprPandas",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestMathNumExprPython": {
  "data": {
   "lineno": 1665,
   "symbols_in_volume": [
    "pandas.computation.tests.test_eval.TestMathPythonPython"
   ]
  },
  "type": "class"
 },
 "pandas.computation.tests.test_eval.TestMathNumExprPython.setUpClass": {
  "data": {
   "lineno": 1667,
   "symbols_in_volume": [
    "classmethod",
    "pandas.computation.tests.test_eval.TestMathNumExprPython",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestMathPythonPandas": {
  "data": {
   "lineno": 1647,
   "symbols_in_volume": [
    "pandas.computation.tests.test_eval.TestMathPythonPython"
   ]
  },
  "type": "class"
 },
 "pandas.computation.tests.test_eval.TestMathPythonPandas.setUpClass": {
  "data": {
   "lineno": 1649,
   "symbols_in_volume": [
    "classmethod",
    "pandas.computation.tests.test_eval.TestMathPythonPandas",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestMathPythonPython": {
  "data": {
   "lineno": 1542,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.computation.tests.test_eval.TestMathPythonPython.check_result_type": {
  "data": {
   "lineno": 1603,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.sin",
    "pandas.DataFrame",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestMathPythonPython.eval": {
  "data": {
   "lineno": 1557,
   "symbols_in_volume": [
    "pandas.eval"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestMathPythonPython.setUpClass": {
  "data": {
   "lineno": 1544,
   "symbols_in_volume": [
    "classmethod",
    "pandas.computation.ops._binary_math_ops",
    "pandas.computation.ops._unary_math_ops",
    "pandas.computation.tests.test_eval.TestMathPythonPython",
    "pandas.util.testing.skip_if_no_ne",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestMathPythonPython.tearDownClass": {
  "data": {
   "lineno": 1553,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestMathPythonPython.test_binary_functions": {
  "data": {
   "lineno": 1572,
   "symbols_in_volume": [
    "getattr",
    "numpy",
    "numpy.random.randn",
    "numpy.testing.assert_allclose",
    "pandas.DataFrame",
    "pandas.computation.expr"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestMathPythonPython.test_df_arithmetic_subexpression": {
  "data": {
   "lineno": 1593,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.sin",
    "pandas.DataFrame",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestMathPythonPython.test_df_use_case": {
  "data": {
   "lineno": 1583,
   "symbols_in_volume": [
    "numpy.arctan2",
    "numpy.random.randn",
    "numpy.sin",
    "pandas.DataFrame",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestMathPythonPython.test_keyword_arg": {
  "data": {
   "lineno": 1637,
   "symbols_in_volume": [
    "TypeError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestMathPythonPython.test_result_types": {
  "data": {
   "lineno": 1615,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestMathPythonPython.test_result_types2": {
  "data": {
   "lineno": 1621,
   "symbols_in_volume": [
    "numpy.complex128",
    "pandas.computation.tests.test_eval.nose"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestMathPythonPython.test_unary_functions": {
  "data": {
   "lineno": 1563,
   "symbols_in_volume": [
    "getattr",
    "numpy",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.computation.expr",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestMathPythonPython.test_undefined_func": {
  "data": {
   "lineno": 1629,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestOperationsNumExprPandas": {
  "data": {
   "lineno": 1039,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.computation.tests.test_eval.TestOperationsNumExprPandas.assignment_not_inplace": {
  "data": {
   "lineno": 1275,
   "symbols_in_volume": [
    "FutureWarning",
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warnings",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestOperationsNumExprPandas.eval": {
  "data": {
   "lineno": 1054,
   "symbols_in_volume": [
    "pandas.eval"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestOperationsNumExprPandas.query_inplace": {
  "data": {
   "lineno": 1350,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestOperationsNumExprPandas.setUpClass": {
  "data": {
   "lineno": 1041,
   "symbols_in_volume": [
    "classmethod",
    "pandas.computation.expr._arith_ops_syms",
    "pandas.computation.expr._cmp_ops_syms",
    "pandas.computation.tests.test_eval.TestOperationsNumExprPandas",
    "pandas.util.testing.skip_if_no_ne",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestOperationsNumExprPandas.tearDownClass": {
  "data": {
   "lineno": 1049,
   "symbols_in_volume": [
    "classmethod",
    "pandas.computation.tests.test_eval.TestOperationsNumExprPandas",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestOperationsNumExprPandas.test_4d_ndarray_fails": {
  "data": {
   "lineno": 1108,
   "symbols_in_volume": [
    "NotImplementedError",
    "nose.tools.assert_raises",
    "numpy.random.randn",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestOperationsNumExprPandas.test_assignment_column": {
  "data": {
   "lineno": 1204,
   "symbols_in_volume": [
    "SyntaxError",
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.computation.tests.test_eval.f",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestOperationsNumExprPandas.test_assignment_column.f": {
  "data": {
   "lineno": 1245,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestOperationsNumExprPandas.test_assignment_fails": {
  "data": {
   "lineno": 1197,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.random.randn",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestOperationsNumExprPandas.test_assignment_in_query": {
  "data": {
   "lineno": 1342,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestOperationsNumExprPandas.test_attr_expression": {
  "data": {
   "lineno": 1184,
   "symbols_in_volume": [
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_series_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestOperationsNumExprPandas.test_basic_period_index_boolean_expression": {
  "data": {
   "lineno": 1358,
   "symbols_in_volume": [
    "pandas.computation.tests.test_eval.f",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeCustomDataframe"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestOperationsNumExprPandas.test_basic_period_index_subscript_expression": {
  "data": {
   "lineno": 1368,
   "symbols_in_volume": [
    "pandas.computation.tests.test_eval.f",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeCustomDataframe"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestOperationsNumExprPandas.test_bool_ops_with_constants": {
  "data": {
   "lineno": 1094,
   "symbols_in_volume": [
    "eval",
    "itertools.product",
    "pandas.computation.expr._bool_ops_syms"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestOperationsNumExprPandas.test_column_in": {
  "data": {
   "lineno": 1268,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestOperationsNumExprPandas.test_constant": {
  "data": {
   "lineno": 1114,
   "symbols_in_volume": [
    "pandas.util.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestOperationsNumExprPandas.test_date_boolean": {
  "data": {
   "lineno": 1380,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestOperationsNumExprPandas.test_failing_subscript_with_name_error": {
  "data": {
   "lineno": 1173,
   "symbols_in_volume": [
    "NameError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestOperationsNumExprPandas.test_lhs_expression_subscript": {
  "data": {
   "lineno": 1178,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestOperationsNumExprPandas.test_multi_line_expression": {
  "data": {
   "lineno": 1294,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestOperationsNumExprPandas.test_multi_line_expression_not_inplace": {
  "data": {
   "lineno": 1322,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestOperationsNumExprPandas.test_nested_period_index_subscript_expression": {
  "data": {
   "lineno": 1374,
   "symbols_in_volume": [
    "pandas.computation.tests.test_eval.f",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeCustomDataframe"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestOperationsNumExprPandas.test_panel_fails": {
  "data": {
   "lineno": 1102,
   "symbols_in_volume": [
    "NotImplementedError",
    "nose.tools.assert_raises",
    "numpy.random.randn",
    "pandas.Panel",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestOperationsNumExprPandas.test_simple_arith_ops": {
  "data": {
   "lineno": 1060,
   "symbols_in_volume": [
    "TypeError",
    "filter",
    "pandas.computation.tests.test_eval._eval_single_bin",
    "pandas.eval",
    "pandas.util.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestOperationsNumExprPandas.test_simple_bool_ops": {
  "data": {
   "lineno": 1086,
   "symbols_in_volume": [
    "eval",
    "itertools.product",
    "pandas.computation.expr._bool_ops_syms"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestOperationsNumExprPandas.test_simple_in_ops": {
  "data": {
   "lineno": 1388,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.eval",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestOperationsNumExprPandas.test_single_variable": {
  "data": {
   "lineno": 1118,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestOperationsNumExprPandas.test_truediv": {
  "data": {
   "lineno": 1123,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.compat.PY3",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestOperationsNumExprPython": {
  "data": {
   "lineno": 1447,
   "symbols_in_volume": [
    "pandas.computation.tests.test_eval.TestOperationsNumExprPandas"
   ]
  },
  "type": "class"
 },
 "pandas.computation.tests.test_eval.TestOperationsNumExprPython.setUpClass": {
  "data": {
   "lineno": 1449,
   "symbols_in_volume": [
    "classmethod",
    "filter",
    "pandas.computation.expr._arith_ops_syms",
    "pandas.computation.expr._cmp_ops_syms",
    "pandas.computation.tests.test_eval.TestOperationsNumExprPython",
    "pandas.util.testing.skip_if_no_ne",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestOperationsNumExprPython.test_bool_ops_with_constants": {
  "data": {
   "lineno": 1496,
   "symbols_in_volume": [
    "NotImplementedError",
    "eval",
    "itertools.product",
    "pandas.computation.expr._bool_ops_syms",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestOperationsNumExprPython.test_check_many_exprs": {
  "data": {
   "lineno": 1459,
   "symbols_in_volume": [
    "pandas.computation.expr",
    "pandas.eval",
    "pandas.util.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestOperationsNumExprPython.test_fails_ampersand": {
  "data": {
   "lineno": 1484,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.eval",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestOperationsNumExprPython.test_fails_and": {
  "data": {
   "lineno": 1466,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.eval"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestOperationsNumExprPython.test_fails_not": {
  "data": {
   "lineno": 1478,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.eval"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestOperationsNumExprPython.test_fails_or": {
  "data": {
   "lineno": 1472,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.eval"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestOperationsNumExprPython.test_fails_pipe": {
  "data": {
   "lineno": 1490,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.eval",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestOperationsNumExprPython.test_simple_bool_ops": {
  "data": {
   "lineno": 1508,
   "symbols_in_volume": [
    "NotImplementedError",
    "eval",
    "itertools.product",
    "pandas.computation.expr._bool_ops_syms",
    "pandas.eval",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestOperationsPythonPandas": {
  "data": {
   "lineno": 1532,
   "symbols_in_volume": [
    "pandas.computation.tests.test_eval.TestOperationsNumExprPandas"
   ]
  },
  "type": "class"
 },
 "pandas.computation.tests.test_eval.TestOperationsPythonPandas.setUpClass": {
  "data": {
   "lineno": 1534,
   "symbols_in_volume": [
    "classmethod",
    "pandas.computation.expr._arith_ops_syms",
    "pandas.computation.expr._cmp_ops_syms",
    "pandas.computation.tests.test_eval.TestOperationsPythonPandas",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestOperationsPythonPython": {
  "data": {
   "lineno": 1521,
   "symbols_in_volume": [
    "pandas.computation.tests.test_eval.TestOperationsNumExprPython"
   ]
  },
  "type": "class"
 },
 "pandas.computation.tests.test_eval.TestOperationsPythonPython.setUpClass": {
  "data": {
   "lineno": 1523,
   "symbols_in_volume": [
    "classmethod",
    "filter",
    "pandas.computation.expr._arith_ops_syms",
    "pandas.computation.expr._cmp_ops_syms",
    "pandas.computation.tests.test_eval.TestOperationsPythonPython",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestScope": {
  "data": {
   "lineno": 1677,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.computation.tests.test_eval.TestScope.check_global_scope": {
  "data": {
   "lineno": 1679,
   "symbols_in_volume": [
    "pandas.computation.tests.test_eval._var_s",
    "pandas.eval",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestScope.check_no_new_globals": {
  "data": {
   "lineno": 1702,
   "symbols_in_volume": [
    "globals",
    "pandas.eval",
    "pandas.util.testing.assert_equal",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestScope.check_no_new_locals": {
  "data": {
   "lineno": 1689,
   "symbols_in_volume": [
    "locals",
    "pandas.eval",
    "pandas.util.testing.assert_equal",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestScope.test_global_scope": {
  "data": {
   "lineno": 1684,
   "symbols_in_volume": [
    "itertools.product",
    "pandas.computation.engines._engines",
    "pandas.computation.expr._parsers"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestScope.test_no_new_globals": {
  "data": {
   "lineno": 1710,
   "symbols_in_volume": [
    "itertools.product",
    "pandas.computation.engines._engines",
    "pandas.computation.expr._parsers"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.TestScope.test_no_new_locals": {
  "data": {
   "lineno": 1698,
   "symbols_in_volume": [
    "itertools.product",
    "pandas.computation.engines._engines",
    "pandas.computation.expr._parsers"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval._arith_ops_syms": {
  "data": {
   "shadows": "pandas.computation.ops._arith_ops_syms"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_eval._binary_math_ops": {
  "data": {
   "shadows": "pandas.computation.ops._binary_math_ops"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_eval._binary_ops_dict": {
  "data": {
   "shadows": "pandas.computation.ops._binary_ops_dict"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_eval._bool_and_frame": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "pandas.core.generic.NDFrame"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval._bool_ops_syms": {
  "data": {
   "shadows": "pandas.computation.ops._bool_ops_syms"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_eval._engines": {
  "data": {
   "shadows": "pandas.computation.engines._engines"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_eval._eval_single_bin": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "ValueError",
    "c",
    "numpy.nan",
    "pandas.computation.ops._binary_ops_dict",
    "pandas.computation.tests.test_eval.engine_has_neg_frac",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval._good_arith_ops": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "pandas.computation.tests.test_eval._is_datetime": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "issubclass",
    "numpy.datetime64"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval._is_py3_complex_incompat": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "complex",
    "isinstance",
    "numpy.complexfloating",
    "numpy.isnan",
    "pandas.compat.PY3"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval._parsers": {
  "data": {
   "lineno": 1729
  },
  "type": "constant"
 },
 "pandas.computation.tests.test_eval._scalar_skip": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pandas.computation.tests.test_eval._series_and_2d_ndarray": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval._series_and_frame": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval._series_frame_incompatible": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pandas.computation.tests.test_eval._special_case_arith_ops_syms": {
  "data": {
   "shadows": "pandas.computation.ops._special_case_arith_ops_syms"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_eval._unary_math_ops": {
  "data": {
   "shadows": "pandas.computation.ops._unary_math_ops"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_eval._var_s": {
  "data": {
   "lineno": 1674
  },
  "type": "constant"
 },
 "pandas.computation.tests.test_eval.assertRaisesRegexp": {
  "data": {
   "shadows": "pandas.util.testing.assertRaisesRegexp"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_eval.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_eval.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_eval.assert_numpy_array_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_numpy_array_equal"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_eval.assert_produces_warning": {
  "data": {
   "shadows": "pandas.util.testing.assert_produces_warning"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_eval.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_eval.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_eval.check_bad_resolver_raises": {
  "data": {
   "lineno": 1807,
   "symbols_in_volume": [
    "TypeError",
    "pandas.eval",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.check_bool_ops_fails_on_scalars": {
  "data": {
   "lineno": 1832,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.eval",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.skip_if_no_ne",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.check_disallowed_nodes": {
  "data": {
   "lineno": 1733,
   "symbols_in_volume": [
    "NotImplementedError",
    "VisitorClass",
    "getattr",
    "nose.tools.assert_raises",
    "pandas.computation.tests.test_eval._parsers",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.check_inf": {
  "data": {
   "lineno": 1854,
   "symbols_in_volume": [
    "numpy.inf",
    "pandas.eval",
    "pandas.util.testing.assert_equal",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.check_invalid_local_variable_reference": {
  "data": {
   "lineno": 1771,
   "symbols_in_volume": [
    "SyntaxError",
    "pandas.computation.expr",
    "pandas.eval",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.check_more_than_one_expression_raises": {
  "data": {
   "lineno": 1820,
   "symbols_in_volume": [
    "SyntaxError",
    "pandas.eval",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.check_name_error_exprs": {
  "data": {
   "lineno": 1759,
   "symbols_in_volume": [
    "NameError",
    "pandas.eval",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.check_negate_lt_eq_le": {
  "data": {
   "lineno": 1867,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.DataFrame",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.check_numexpr_builtin_raises": {
  "data": {
   "lineno": 1790,
   "symbols_in_volume": [
    "pandas.computation.engines.NumExprClobberingError",
    "pandas.eval",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_equal",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.check_syntax_error_exprs": {
  "data": {
   "lineno": 1748,
   "symbols_in_volume": [
    "SyntaxError",
    "nose.tools.assert_raises",
    "pandas.eval",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_eval.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_eval.engine_has_neg_frac": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "pandas.computation.engines._engines.has_neg_frac"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.expr": {
  "data": {
   "shadows": "pandas.computation.expr"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_eval.f": {
  "data": {
   "lineno": 734
  },
  "type": "constant"
 },
 "pandas.computation.tests.test_eval.lib": {
  "data": {
   "shadows": "pandas.lib"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_eval.mkdf": {
  "data": {
   "shadows": "pandas.util.testing.makeCustomDataframe"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_eval.ne": {
  "data": {
   "shadows": "numexpr"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_eval.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_eval.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_eval.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_eval.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_eval.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_eval.pytables": {
  "data": {
   "shadows": "pandas.computation.pytables"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_eval.rand": {
  "data": {
   "shadows": "numpy.random.rand"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_eval.randbool": {
  "data": {
   "shadows": "pandas.util.testing.randbool"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_eval.randint": {
  "data": {
   "shadows": "numpy.random.randint"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_eval.randn": {
  "data": {
   "shadows": "numpy.random.randn"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_eval.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_eval.reduce": {
  "data": {
   "shadows": "pandas.compat.reduce"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_eval.should_warn": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "any",
    "map",
    "pandas.compat.reduce",
    "pandas.computation.tests.test_eval._is_datetime",
    "pandas.computation.tests.test_eval.operator"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.slow": {
  "data": {
   "shadows": "numpy.testing.decorators.slow"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_eval.test_bad_resolver_raises": {
  "data": {
   "lineno": 1815,
   "symbols_in_volume": [
    "pandas.computation.tests.test_eval.ENGINES_PARSERS",
    "pandas.computation.tests.test_eval.check_bad_resolver_raises"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.test_bool_ops_fails_on_scalars": {
  "data": {
   "lineno": 1843,
   "symbols_in_volume": [
    "float",
    "int",
    "itertools.product",
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.computation.engines._engines",
    "pandas.computation.expr._parsers",
    "pandas.computation.ops._bool_ops_syms",
    "pandas.computation.tests.test_eval.check_bool_ops_fails_on_scalars"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.test_disallowed_nodes": {
  "data": {
   "lineno": 1743,
   "symbols_in_volume": [
    "itertools.product",
    "pandas.computation.tests.test_eval._parsers",
    "pandas.computation.tests.test_eval.check_disallowed_nodes"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.test_inf": {
  "data": {
   "lineno": 1862,
   "symbols_in_volume": [
    "pandas.computation.tests.test_eval.ENGINES_PARSERS",
    "pandas.computation.tests.test_eval.check_inf"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.test_invalid_engine": {
  "data": {
   "lineno": 1715,
   "symbols_in_volume": [
    "KeyError",
    "pandas.eval",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.test_invalid_local_variable_reference": {
  "data": {
   "lineno": 1785,
   "symbols_in_volume": [
    "pandas.computation.tests.test_eval.ENGINES_PARSERS",
    "pandas.computation.tests.test_eval.check_invalid_local_variable_reference"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.test_invalid_parser": {
  "data": {
   "lineno": 1722,
   "symbols_in_volume": [
    "KeyError",
    "pandas.eval",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.test_more_than_one_expression_raises": {
  "data": {
   "lineno": 1827,
   "symbols_in_volume": [
    "pandas.computation.tests.test_eval.ENGINES_PARSERS",
    "pandas.computation.tests.test_eval.check_more_than_one_expression_raises"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.test_name_error_exprs": {
  "data": {
   "lineno": 1766,
   "symbols_in_volume": [
    "pandas.computation.tests.test_eval.ENGINES_PARSERS",
    "pandas.computation.tests.test_eval.check_name_error_exprs"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.test_negate_lt_eq_le": {
  "data": {
   "lineno": 1883,
   "symbols_in_volume": [
    "itertools.product",
    "pandas.computation.engines._engines",
    "pandas.computation.expr._parsers",
    "pandas.computation.tests.test_eval.check_negate_lt_eq_le"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.test_numexpr_builtin_raises": {
  "data": {
   "lineno": 1802,
   "symbols_in_volume": [
    "pandas.computation.tests.test_eval.ENGINES_PARSERS",
    "pandas.computation.tests.test_eval.check_numexpr_builtin_raises"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.test_syntax_error_exprs": {
  "data": {
   "lineno": 1754,
   "symbols_in_volume": [
    "pandas.computation.tests.test_eval.ENGINES_PARSERS",
    "pandas.computation.tests.test_eval.check_syntax_error_exprs"
   ]
  },
  "type": "function"
 },
 "pandas.computation.tests.test_eval.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_eval.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.computation.tests.test_eval.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.computation.ver": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "pandas.computation.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.concat": {
  "data": {
   "shadows": "pandas.tools.merge.concat"
  },
  "type": "import"
 },
 "pandas.core": {
  "data": {},
  "type": "module"
 },
 "pandas.core.api": {
  "data": {},
  "type": "module"
 },
 "pandas.core.api.Categorical": {
  "data": {
   "shadows": "pandas.core.categorical.Categorical"
  },
  "type": "import"
 },
 "pandas.core.api.CategoricalIndex": {
  "data": {
   "shadows": "pandas.core.index.CategoricalIndex"
  },
  "type": "import"
 },
 "pandas.core.api.DataFrame": {
  "data": {
   "shadows": "pandas.core.frame.DataFrame"
  },
  "type": "import"
 },
 "pandas.core.api.DateOffset": {
  "data": {
   "shadows": "pandas.tseries.offsets.DateOffset"
  },
  "type": "import"
 },
 "pandas.core.api.DatetimeIndex": {
  "data": {
   "shadows": "pandas.tseries.index.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.core.api.Float64Index": {
  "data": {
   "shadows": "pandas.core.index.Float64Index"
  },
  "type": "import"
 },
 "pandas.core.api.Grouper": {
  "data": {
   "shadows": "pandas.core.groupby.Grouper"
  },
  "type": "import"
 },
 "pandas.core.api.Index": {
  "data": {
   "shadows": "pandas.core.index.Index"
  },
  "type": "import"
 },
 "pandas.core.api.IndexSlice": {
  "data": {
   "shadows": "pandas.core.indexing.IndexSlice"
  },
  "type": "import"
 },
 "pandas.core.api.Int64Index": {
  "data": {
   "shadows": "pandas.core.index.Int64Index"
  },
  "type": "import"
 },
 "pandas.core.api.MultiIndex": {
  "data": {
   "shadows": "pandas.core.index.MultiIndex"
  },
  "type": "import"
 },
 "pandas.core.api.Panel": {
  "data": {
   "shadows": "pandas.core.panel.Panel"
  },
  "type": "import"
 },
 "pandas.core.api.Panel4D": {
  "data": {
   "shadows": "pandas.core.panel4d.Panel4D"
  },
  "type": "import"
 },
 "pandas.core.api.Period": {
  "data": {
   "shadows": "pandas.tseries.period.Period"
  },
  "type": "import"
 },
 "pandas.core.api.PeriodIndex": {
  "data": {
   "shadows": "pandas.tseries.period.PeriodIndex"
  },
  "type": "import"
 },
 "pandas.core.api.RangeIndex": {
  "data": {
   "shadows": "pandas.core.index.RangeIndex"
  },
  "type": "import"
 },
 "pandas.core.api.Series": {
  "data": {
   "shadows": "pandas.core.series.Series"
  },
  "type": "import"
 },
 "pandas.core.api.TimeSeries": {
  "data": {
   "shadows": "pandas.core.series.TimeSeries"
  },
  "type": "import"
 },
 "pandas.core.api.Timedelta": {
  "data": {
   "shadows": "pandas.tseries.tdi.Timedelta"
  },
  "type": "import"
 },
 "pandas.core.api.TimedeltaIndex": {
  "data": {
   "shadows": "pandas.tseries.tdi.TimedeltaIndex"
  },
  "type": "import"
 },
 "pandas.core.api.Timestamp": {
  "data": {
   "shadows": "pandas.tseries.index.Timestamp"
  },
  "type": "import"
 },
 "pandas.core.api.WidePanel": {
  "data": {
   "shadows": "pandas.core.panel.WidePanel"
  },
  "type": "import"
 },
 "pandas.core.api.bdate_range": {
  "data": {
   "shadows": "pandas.tseries.index.bdate_range"
  },
  "type": "import"
 },
 "pandas.core.api.date_range": {
  "data": {
   "shadows": "pandas.tseries.index.date_range"
  },
  "type": "import"
 },
 "pandas.core.api.datetools": {
  "data": {
   "shadows": "pandas.core.datetools"
  },
  "type": "import"
 },
 "pandas.core.api.describe_option": {
  "data": {
   "shadows": "pandas.core.config.describe_option"
  },
  "type": "import"
 },
 "pandas.core.api.factorize": {
  "data": {
   "shadows": "pandas.core.algorithms.factorize"
  },
  "type": "import"
 },
 "pandas.core.api.get_dummies": {
  "data": {
   "shadows": "pandas.core.reshape.get_dummies"
  },
  "type": "import"
 },
 "pandas.core.api.get_option": {
  "data": {
   "shadows": "pandas.core.config.get_option"
  },
  "type": "import"
 },
 "pandas.core.api.groupby": {
  "data": {
   "shadows": "pandas.core.groupby.groupby"
  },
  "type": "import"
 },
 "pandas.core.api.isnull": {
  "data": {
   "shadows": "pandas.core.common.isnull"
  },
  "type": "import"
 },
 "pandas.core.api.lreshape": {
  "data": {
   "shadows": "pandas.core.reshape.lreshape"
  },
  "type": "import"
 },
 "pandas.core.api.match": {
  "data": {
   "shadows": "pandas.core.algorithms.match"
  },
  "type": "import"
 },
 "pandas.core.api.notnull": {
  "data": {
   "shadows": "pandas.core.common.notnull"
  },
  "type": "import"
 },
 "pandas.core.api.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.core.api.option_context": {
  "data": {
   "shadows": "pandas.core.config.option_context"
  },
  "type": "import"
 },
 "pandas.core.api.options": {
  "data": {
   "shadows": "pandas.core.config.options"
  },
  "type": "import"
 },
 "pandas.core.api.pivot": {
  "data": {
   "shadows": "pandas.core.reshape.pivot_simple"
  },
  "type": "import"
 },
 "pandas.core.api.reset_option": {
  "data": {
   "shadows": "pandas.core.config.reset_option"
  },
  "type": "import"
 },
 "pandas.core.api.set_eng_float_format": {
  "data": {
   "shadows": "pandas.formats.format.set_eng_float_format"
  },
  "type": "import"
 },
 "pandas.core.api.set_option": {
  "data": {
   "shadows": "pandas.core.config.set_option"
  },
  "type": "import"
 },
 "pandas.core.api.to_datetime": {
  "data": {
   "shadows": "pandas.tseries.tools.to_datetime"
  },
  "type": "import"
 },
 "pandas.core.api.unique": {
  "data": {
   "shadows": "pandas.core.algorithms.unique"
  },
  "type": "import"
 },
 "pandas.core.api.value_counts": {
  "data": {
   "shadows": "pandas.core.algorithms.value_counts"
  },
  "type": "import"
 },
 "pandas.core.api.wide_to_long": {
  "data": {
   "shadows": "pandas.core.reshape.wide_to_long"
  },
  "type": "import"
 },
 "pandas.core.base": {
  "data": {
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "module"
 },
 "pandas.core.base.AbstractMethodError": {
  "data": {
   "shadows": "pandas.core.common.AbstractMethodError"
  },
  "type": "import"
 },
 "pandas.core.base.AccessorProperty": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.core.base.AccessorProperty.__delete__": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.AccessorProperty.__get__": {
  "data": {
   "lineno": 233
  },
  "type": "function"
 },
 "pandas.core.base.AccessorProperty.__init__": {
  "data": {
   "lineno": 228
  },
  "type": "function"
 },
 "pandas.core.base.AccessorProperty.__set__": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.Appender": {
  "data": {
   "shadows": "pandas.util.decorators.Appender"
  },
  "type": "import"
 },
 "pandas.core.base.DataError": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "pandas.core.base.GroupByError"
   ]
  },
  "type": "class"
 },
 "pandas.core.base.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.core.base.FrozenList": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "list",
    "pandas.core.base.PandasObject"
   ]
  },
  "type": "class"
 },
 "pandas.core.base.FrozenList.__add__": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "pandas.core.base.FrozenList",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.FrozenList.__eq__": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "pandas.core.base.FrozenList",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.FrozenList.__getitem__": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "isinstance",
    "pandas.core.base.FrozenList",
    "slice",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.FrozenList.__getslice__": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "pandas.core.base.FrozenList",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.FrozenList.__hash__": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "hash",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.FrozenList.__mul__": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "pandas.core.base.FrozenList",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.FrozenList.__radd__": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.FrozenList.__reduce__": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.FrozenList.__repr__": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.FrozenList.__unicode__": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "pandas.formats.printing.pprint_thing"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.FrozenList._disabled": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.FrozenNDArray": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "numpy.ndarray",
    "pandas.core.base.PandasObject"
   ]
  },
  "type": "class"
 },
 "pandas.core.base.FrozenNDArray.__new__": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "pandas.core.base.FrozenNDArray"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.FrozenNDArray.__unicode__": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "pandas.formats.printing.pprint_thing",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.FrozenNDArray._disabled": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.FrozenNDArray._shallow_copy": {
  "data": {
   "lineno": 774
  },
  "type": "function"
 },
 "pandas.core.base.FrozenNDArray.values": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.GroupByError": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "pandas.core.base.GroupByMixin": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.core.base.GroupByMixin._dispatch": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.GroupByMixin._dispatch.outer": {
  "data": {
   "lineno": 649
  },
  "type": "function"
 },
 "pandas.core.base.GroupByMixin._dispatch.outer.f": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.GroupByMixin._gotitem": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "dict",
    "getattr",
    "pandas.core.common.is_list_like",
    "pandas.lib.isscalar"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin": {
  "data": {
   "lineno": 794,
   "symbols_in_volume": [
    "object",
    "pandas.core.base._shared_docs",
    "property"
   ]
  },
  "type": "class"
 },
 "pandas.core.base.IndexOpsMixin._reduce": {
  "data": {
   "lineno": 908,
   "symbols_in_volume": [
    "TypeError",
    "func",
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin._update_inplace": {
  "data": {
   "lineno": 1178,
   "symbols_in_volume": [
    "pandas.core.common.AbstractMethodError"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin._values": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.argmax": {
  "data": {
   "lineno": 879,
   "symbols_in_volume": [
    "pandas.core.nanops.nanargmax"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.argmin": {
  "data": {
   "lineno": 893,
   "symbols_in_volume": [
    "pandas.core.nanops.nanargmin"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.base": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.data": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.drop_duplicates": {
  "data": {
   "lineno": 1134,
   "symbols_in_volume": [
    "numpy.logical_not",
    "pandas.core.base._indexops_doc_kwargs",
    "pandas.core.base._shared_docs",
    "pandas.util.decorators.Appender",
    "pandas.util.decorators.deprecate_kwarg"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.duplicated": {
  "data": {
   "lineno": 1163,
   "symbols_in_volume": [
    "AttributeError",
    "bool",
    "numpy.array",
    "pandas.core.base._indexops_doc_kwargs",
    "pandas.core.base._shared_docs",
    "pandas.core.common._ensure_object",
    "pandas.core.common._values_from_object",
    "pandas.lib.duplicated",
    "pandas.util.decorators.Appender",
    "pandas.util.decorators.deprecate_kwarg"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.factorize": {
  "data": {
   "lineno": 1029,
   "symbols_in_volume": [
    "pandas.core.algorithms.factorize"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.flags": {
  "data": {
   "lineno": 858,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.hasnans": {
  "data": {
   "lineno": 903,
   "symbols_in_volume": [
    "pandas.core.common.isnull",
    "pandas.util.decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.is_unique": {
  "data": {
   "lineno": 987,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.item": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "IndexError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.itemsize": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.max": {
  "data": {
   "lineno": 875,
   "symbols_in_volume": [
    "pandas.core.nanops.nanmax"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.memory_usage": {
  "data": {
   "lineno": 998,
   "symbols_in_volume": [
    "hasattr",
    "pandas.core.common.is_object_dtype",
    "pandas.lib.memory_usage_of_objects"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.min": {
  "data": {
   "lineno": 889,
   "symbols_in_volume": [
    "pandas.core.nanops.nanmin"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.nbytes": {
  "data": {
   "lineno": 843,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.ndim": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.nunique": {
  "data": {
   "lineno": 966,
   "symbols_in_volume": [
    "len",
    "pandas.core.common.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.searchsorted": {
  "data": {
   "lineno": 1110,
   "symbols_in_volume": [
    "pandas.core.base._shared_docs",
    "pandas.util.decorators.Appender",
    "pandas.util.decorators.Substitution"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.shape": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.size": {
  "data": {
   "lineno": 853,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.strides": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.transpose": {
  "data": {
   "lineno": 802,
   "symbols_in_volume": [
    "pandas.compat.numpy.function.validate_transpose"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.unique": {
  "data": {
   "lineno": 950,
   "symbols_in_volume": [
    "hasattr",
    "pandas.core.nanops.unique1d"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.IndexOpsMixin.value_counts": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": [
    "pandas.core.algorithms.value_counts"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.NoNewAttributesMixin": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.core.base.NoNewAttributesMixin.__setattr__": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "object.__setattr__",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.NoNewAttributesMixin._freeze": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "object.__setattr__"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.PandasDelegate": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "pandas.core.base.PandasObject"
   ]
  },
  "type": "class"
 },
 "pandas.core.base.PandasDelegate._add_delegate_accessors": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "_create_delegator_method",
    "_create_delegator_property",
    "classmethod",
    "hasattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.PandasDelegate._add_delegate_accessors._create_delegator_method": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.PandasDelegate._add_delegate_accessors._create_delegator_method.f": {
  "data": {
   "lineno": 205
  },
  "type": "function"
 },
 "pandas.core.base.PandasDelegate._add_delegate_accessors._create_delegator_property": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "getattr",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.PandasDelegate._add_delegate_accessors._create_delegator_property._getter": {
  "data": {
   "lineno": 191
  },
  "type": "function"
 },
 "pandas.core.base.PandasDelegate._add_delegate_accessors._create_delegator_property._setter": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "pandas.core.base.PandasDelegate._delegate_method": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.PandasDelegate._delegate_property_get": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.PandasDelegate._delegate_property_set": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.PandasObject": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "pandas.core.base.StringMixin"
   ]
  },
  "type": "class"
 },
 "pandas.core.base.PandasObject.__dir__": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "dir",
    "set",
    "sorted",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.PandasObject.__sizeof__": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "hasattr",
    "int",
    "pandas.core.base.PandasObject",
    "pandas.lib.isscalar",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.PandasObject.__unicode__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "object.__repr__"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.PandasObject._constructor": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.PandasObject._dir_additions": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.PandasObject._dir_deletions": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.PandasObject._reset_cache": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.SelectionMixin": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "numpy.cumprod",
    "numpy.cumsum",
    "numpy.max",
    "numpy.mean",
    "numpy.median",
    "numpy.min",
    "numpy.prod",
    "numpy.std",
    "numpy.sum",
    "numpy.var",
    "object",
    "pandas.compat.builtins.max",
    "pandas.compat.builtins.min",
    "pandas.compat.builtins.sum",
    "set"
   ]
  },
  "type": "class"
 },
 "pandas.core.base.SelectionMixin.__getitem__": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "getattr",
    "isinstance",
    "len",
    "list",
    "numpy.ndarray",
    "pandas.types.api.ABCIndex",
    "pandas.types.api.ABCSeries",
    "set",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.SelectionMixin._aggregate": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "ValueError",
    "_agg",
    "_agg_1dim",
    "all",
    "any",
    "dict",
    "getattr",
    "hasattr",
    "is_aggregator",
    "isinstance",
    "len",
    "list",
    "pandas.DataFrame",
    "pandas.compat.OrderedDict",
    "pandas.compat.iteritems",
    "pandas.compat.iterkeys",
    "pandas.compat.itervalues",
    "pandas.compat.string_types",
    "pandas.core.base.SpecificationError",
    "pandas.tools.merge.concat",
    "pandas.types.api.ABCDataFrame",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.SelectionMixin._aggregate._agg": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "func",
    "pandas.compat.OrderedDict",
    "pandas.compat.iteritems"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.SelectionMixin._aggregate._agg_1dim": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "pandas.core.base.SpecificationError"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.SelectionMixin._aggregate._agg_2dim": {
  "data": {
   "lineno": 481
  },
  "type": "function"
 },
 "pandas.core.base.SelectionMixin._aggregate_multiple_funcs": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "pandas.core.base.DataError",
    "pandas.core.base.SpecificationError",
    "pandas.core.common._get_callable_name",
    "pandas.tools.merge.concat"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.SelectionMixin._gotitem": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "pandas.core.common.AbstractMethodError"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.SelectionMixin._is_builtin_func": {
  "data": {
   "lineno": 635
  },
  "type": "function"
 },
 "pandas.core.base.SelectionMixin._is_cython_func": {
  "data": {
   "lineno": 631
  },
  "type": "function"
 },
 "pandas.core.base.SelectionMixin._obj_with_exclusions": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "pandas.types.api.ABCDataFrame",
    "pandas.util.decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.SelectionMixin._selected_obj": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "isinstance",
    "pandas.types.api.ABCSeries",
    "pandas.util.decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.SelectionMixin._selection_list": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.ndarray",
    "pandas.types.api.ABCIndex",
    "pandas.types.api.ABCSeries",
    "property",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.SelectionMixin._shallow_copy": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "obj_type"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.SelectionMixin.aggregate": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "pandas.core.common.AbstractMethodError"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.SelectionMixin.name": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.SelectionMixin.ndim": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "pandas.util.decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.SpecificationError": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "pandas.core.base.GroupByError"
   ]
  },
  "type": "class"
 },
 "pandas.core.base.StringMixin": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.core.base.StringMixin.__bytes__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "pandas.core.config.get_option"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.StringMixin.__repr__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.StringMixin.__str__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pandas.compat.PY3"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.StringMixin.__unicode__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "pandas.core.common.AbstractMethodError"
   ]
  },
  "type": "function"
 },
 "pandas.core.base.Substitution": {
  "data": {
   "shadows": "pandas.util.decorators.Substitution"
  },
  "type": "import"
 },
 "pandas.core.base._indexops_doc_kwargs": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "pandas.core.base._shared_docs": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "pandas.core.base.builtins": {
  "data": {
   "shadows": "pandas.compat.builtins"
  },
  "type": "import"
 },
 "pandas.core.base.cache_readonly": {
  "data": {
   "shadows": "pandas.util.decorators.cache_readonly"
  },
  "type": "import"
 },
 "pandas.core.base.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.core.base.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.core.base.concat": {
  "data": {
   "shadows": "pandas.tools.merge.concat"
  },
  "type": "import"
 },
 "pandas.core.base.deprecate_kwarg": {
  "data": {
   "shadows": "pandas.util.decorators.deprecate_kwarg"
  },
  "type": "import"
 },
 "pandas.core.base.factorize": {
  "data": {
   "shadows": "pandas.core.algorithms.factorize"
  },
  "type": "import"
 },
 "pandas.core.base.get_option": {
  "data": {
   "shadows": "pandas.core.config.get_option"
  },
  "type": "import"
 },
 "pandas.core.base.gt": {
  "data": {
   "shadows": "pandas.types.api"
  },
  "type": "import"
 },
 "pandas.core.base.lib": {
  "data": {
   "shadows": "pandas.lib"
  },
  "type": "import"
 },
 "pandas.core.base.nanops": {
  "data": {
   "shadows": "pandas.core.nanops"
  },
  "type": "import"
 },
 "pandas.core.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.core.base.nv": {
  "data": {
   "shadows": "pandas.compat.numpy.function"
  },
  "type": "import"
 },
 "pandas.core.base.pprint_thing": {
  "data": {
   "shadows": "pandas.formats.printing.pprint_thing"
  },
  "type": "import"
 },
 "pandas.core.base.unique1d": {
  "data": {
   "shadows": "pandas.core.nanops.unique1d"
  },
  "type": "import"
 },
 "pandas.core.base.value_counts": {
  "data": {
   "shadows": "pandas.core.algorithms.value_counts"
  },
  "type": "import"
 },
 "pandas.core.config_init": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "dict",
    "int",
    "pandas.core.config.config_prefix",
    "pandas.core.config.deprecate_option",
    "pandas.core.config.get_default_val",
    "pandas.core.config.is_bool",
    "pandas.core.config.is_callable",
    "pandas.core.config.is_instance_factory",
    "pandas.core.config.is_int",
    "pandas.core.config.is_one_of_factory",
    "pandas.core.config.is_text",
    "pandas.core.config.register_option",
    "pandas.core.config_init._register_xlsx",
    "pandas.core.config_init.chained_assignment",
    "pandas.core.config_init.colheader_justify_doc",
    "pandas.core.config_init.default",
    "pandas.core.config_init.doc",
    "pandas.core.config_init.float_format_doc",
    "pandas.core.config_init.max_colwidth_doc",
    "pandas.core.config_init.mpl_style_cb",
    "pandas.core.config_init.options",
    "pandas.core.config_init.pc_chop_threshold_doc",
    "pandas.core.config_init.pc_date_dayfirst_doc",
    "pandas.core.config_init.pc_date_yearfirst_doc",
    "pandas.core.config_init.pc_east_asian_width_doc",
    "pandas.core.config_init.pc_encoding_doc",
    "pandas.core.config_init.pc_expand_repr_doc",
    "pandas.core.config_init.pc_height_deprecation_warning",
    "pandas.core.config_init.pc_height_doc",
    "pandas.core.config_init.pc_large_repr_doc",
    "pandas.core.config_init.pc_latex_escape",
    "pandas.core.config_init.pc_latex_longtable",
    "pandas.core.config_init.pc_latex_repr_doc",
    "pandas.core.config_init.pc_line_width_deprecation_warning",
    "pandas.core.config_init.pc_line_width_doc",
    "pandas.core.config_init.pc_max_categories_doc",
    "pandas.core.config_init.pc_max_cols_doc",
    "pandas.core.config_init.pc_max_info_cols_doc",
    "pandas.core.config_init.pc_max_info_rows_doc",
    "pandas.core.config_init.pc_max_rows_doc",
    "pandas.core.config_init.pc_max_seq_items",
    "pandas.core.config_init.pc_memory_usage_doc",
    "pandas.core.config_init.pc_mpl_style_doc",
    "pandas.core.config_init.pc_multi_sparse_doc",
    "pandas.core.config_init.pc_nb_repr_h_doc",
    "pandas.core.config_init.pc_pprint_nest_depth",
    "pandas.core.config_init.pc_precision_doc",
    "pandas.core.config_init.pc_show_dimensions_doc",
    "pandas.core.config_init.pc_width_doc",
    "pandas.core.config_init.tc_sim_interactive_doc",
    "pandas.core.config_init.use_inf_as_null_cb",
    "pandas.core.config_init.use_inf_as_null_doc",
    "pandas.core.config_init.writer_engine_doc",
    "pandas.formats.format.detect_console_encoding",
    "str",
    "type"
   ]
  },
  "type": "module"
 },
 "pandas.core.config_init._register_xlsx": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "pandas.core.config.register_option",
    "pandas.core.config_init.writer_engine_doc",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.core.config_init._use_inf_as_null": {
  "data": {
   "shadows": "pandas.core.common._use_inf_as_null"
  },
  "type": "import"
 },
 "pandas.core.config_init.cf": {
  "data": {
   "shadows": "pandas.core.config"
  },
  "type": "import"
 },
 "pandas.core.config_init.chained_assignment": {
  "data": {
   "lineno": 377
  },
  "type": "constant"
 },
 "pandas.core.config_init.colheader_justify_doc": {
  "data": {
   "lineno": 123
  },
  "type": "constant"
 },
 "pandas.core.config_init.default": {
  "data": {
   "lineno": 397
  },
  "type": "constant"
 },
 "pandas.core.config_init.detect_console_encoding": {
  "data": {
   "shadows": "pandas.formats.format.detect_console_encoding"
  },
  "type": "import"
 },
 "pandas.core.config_init.doc": {
  "data": {
   "lineno": 402
  },
  "type": "constant"
 },
 "pandas.core.config_init.float_format_doc": {
  "data": {
   "lineno": 108
  },
  "type": "constant"
 },
 "pandas.core.config_init.get_default_val": {
  "data": {
   "shadows": "pandas.core.config.get_default_val"
  },
  "type": "import"
 },
 "pandas.core.config_init.is_bool": {
  "data": {
   "shadows": "pandas.core.config.is_bool"
  },
  "type": "import"
 },
 "pandas.core.config_init.is_callable": {
  "data": {
   "shadows": "pandas.core.config.is_callable"
  },
  "type": "import"
 },
 "pandas.core.config_init.is_instance_factory": {
  "data": {
   "shadows": "pandas.core.config.is_instance_factory"
  },
  "type": "import"
 },
 "pandas.core.config_init.is_int": {
  "data": {
   "shadows": "pandas.core.config.is_int"
  },
  "type": "import"
 },
 "pandas.core.config_init.is_one_of_factory": {
  "data": {
   "shadows": "pandas.core.config.is_one_of_factory"
  },
  "type": "import"
 },
 "pandas.core.config_init.is_text": {
  "data": {
   "shadows": "pandas.core.config.is_text"
  },
  "type": "import"
 },
 "pandas.core.config_init.max_colwidth_doc": {
  "data": {
   "lineno": 116
  },
  "type": "constant"
 },
 "pandas.core.config_init.mpl_style_cb": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "Exception",
    "FutureWarning",
    "dict",
    "matplotlib.pyplot.rcParams",
    "matplotlib.pyplot.rcParams.update",
    "pandas.core.config.get_option",
    "pandas.core.config_init.pc_mpl_style_deprecation_warning",
    "pandas.core.config_init.style_backup",
    "pandas.core.config_init.sys",
    "pandas.core.config_init.warnings",
    "pandas.tools.plotting.mpl_stylesheet"
   ]
  },
  "type": "function"
 },
 "pandas.core.config_init.mpl_stylesheet": {
  "data": {
   "shadows": "pandas.tools.plotting.mpl_stylesheet"
  },
  "type": "import"
 },
 "pandas.core.config_init.options": {
  "data": {
   "lineno": 401
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_ambiguous_as_wide_doc": {
  "data": {
   "lineno": 154
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_chop_threshold_doc": {
  "data": {
   "lineno": 190
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_colspace_doc": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_date_dayfirst_doc": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_date_yearfirst_doc": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_east_asian_width_doc": {
  "data": {
   "lineno": 147
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_encoding_doc": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_expand_repr_doc": {
  "data": {
   "lineno": 128
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_height_deprecation_warning": {
  "data": {
   "lineno": 172
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_height_doc": {
  "data": {
   "lineno": 185
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_large_repr_doc": {
  "data": {
   "lineno": 213
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_latex_escape": {
  "data": {
   "lineno": 238
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_latex_longtable": {
  "data": {
   "lineno": 245
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_latex_repr_doc": {
  "data": {
   "lineno": 160
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_line_width_deprecation_warning": {
  "data": {
   "lineno": 167
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_line_width_doc": {
  "data": {
   "lineno": 142
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_max_categories_doc": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_max_cols_doc": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_max_info_cols_doc": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_max_info_rows_doc": {
  "data": {
   "lineno": 205
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_max_rows_doc": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_max_seq_items": {
  "data": {
   "lineno": 196
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_memory_usage_doc": {
  "data": {
   "lineno": 232
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_mpl_style_deprecation_warning": {
  "data": {
   "lineno": 227
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_mpl_style_doc": {
  "data": {
   "lineno": 220
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_multi_sparse_doc": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_nb_repr_h_doc": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_pprint_nest_depth": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_precision_doc": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_show_dimensions_doc": {
  "data": {
   "lineno": 135
  },
  "type": "constant"
 },
 "pandas.core.config_init.pc_width_doc": {
  "data": {
   "lineno": 176
  },
  "type": "constant"
 },
 "pandas.core.config_init.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pandas.core.config_init.style_backup": {
  "data": {
   "lineno": 252
  },
  "type": "constant"
 },
 "pandas.core.config_init.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.core.config_init.tc_sim_interactive_doc": {
  "data": {
   "lineno": 349
  },
  "type": "constant"
 },
 "pandas.core.config_init.use_inf_as_null_cb": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "pandas.core.common._use_inf_as_null"
   ]
  },
  "type": "function"
 },
 "pandas.core.config_init.use_inf_as_null_doc": {
  "data": {
   "lineno": 357
  },
  "type": "constant"
 },
 "pandas.core.config_init.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.core.config_init.writer_engine_doc": {
  "data": {
   "lineno": 388
  },
  "type": "constant"
 },
 "pandas.core.config_init.xlsxwriter": {
  "data": {
   "shadows": "xlsxwriter"
  },
  "type": "import"
 },
 "pandas.core.convert": {
  "data": {},
  "type": "module"
 },
 "pandas.core.convert._possibly_cast_to_datetime": {
  "data": {
   "shadows": "pandas.core.common._possibly_cast_to_datetime"
  },
  "type": "import"
 },
 "pandas.core.convert._possibly_convert_objects": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "list",
    "numpy.array",
    "numpy.object_",
    "pandas.core.common._possibly_cast_to_datetime",
    "pandas.core.common.isnull",
    "pandas.lib.maybe_convert_numeric",
    "pandas.lib.maybe_convert_objects",
    "pandas.tseries.timedeltas.to_timedelta",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.convert._soft_convert_objects": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "isinstance",
    "list",
    "numpy.array",
    "numpy.object_",
    "pandas.core.common.is_object_dtype",
    "pandas.core.common.isnull",
    "pandas.lib.maybe_convert_numeric",
    "pandas.lib.maybe_convert_objects",
    "pandas.to_datetime",
    "pandas.to_numeric",
    "pandas.to_timedelta",
    "set",
    "sum",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.convert.is_object_dtype": {
  "data": {
   "shadows": "pandas.core.common.is_object_dtype"
  },
  "type": "import"
 },
 "pandas.core.convert.isnull": {
  "data": {
   "shadows": "pandas.core.common.isnull"
  },
  "type": "import"
 },
 "pandas.core.convert.lib": {
  "data": {
   "shadows": "pandas.lib"
  },
  "type": "import"
 },
 "pandas.core.convert.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.core.convert.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.core.convert.to_timedelta": {
  "data": {
   "shadows": "pandas.tseries.timedeltas.to_timedelta"
  },
  "type": "import"
 },
 "pandas.core.datetools": {
  "data": {
   "symbols_in_volume": [
    "BDay",
    "BMonthBegin",
    "BMonthEnd",
    "BQuarterEnd",
    "BYearEnd",
    "CBMonthBegin",
    "CBMonthEnd",
    "CDay",
    "CustomBusinessDay",
    "DateOffset",
    "MonthEnd",
    "NotImplementedError",
    "QuarterEnd",
    "Week",
    "YearBegin",
    "YearEnd",
    "pandas.core.datetools.bday",
    "pandas.core.datetools.customBusinessMonthBegin",
    "pandas.core.datetools.customBusinessMonthEnd"
   ]
  },
  "type": "module"
 },
 "pandas.core.datetools.bday": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "pandas.core.datetools.bmonthBegin": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pandas.core.datetools.bmonthEnd": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pandas.core.datetools.bquarterEnd": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pandas.core.datetools.businessDay": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "pandas.core.datetools.byearEnd": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pandas.core.datetools.cbmonthBegin": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pandas.core.datetools.cbmonthEnd": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pandas.core.datetools.cday": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "pandas.core.datetools.customBusinessDay": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pandas.core.datetools.customBusinessMonthBegin": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pandas.core.datetools.customBusinessMonthEnd": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pandas.core.datetools.day": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "pandas.core.datetools.isBMonthEnd": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "pandas.core.datetools.isBusinessDay": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pandas.core.datetools.isMonthEnd": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pandas.core.datetools.monthEnd": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "pandas.core.datetools.quarterEnd": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pandas.core.datetools.thisBMonthEnd": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pandas.core.datetools.thisBQuarterEnd": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pandas.core.datetools.thisMonthEnd": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pandas.core.datetools.thisQuarterEnd": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pandas.core.datetools.thisYearBegin": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pandas.core.datetools.thisYearEnd": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pandas.core.datetools.week": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pandas.core.datetools.yearBegin": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "pandas.core.datetools.yearEnd": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "pandas.core.index": {
  "data": {},
  "type": "module"
 },
 "pandas.core.index._sparsify": {
  "data": {
   "shadows": "pandas.indexes.multi._sparsify"
  },
  "type": "import"
 },
 "pandas.core.missing": {
  "data": {
   "symbols_in_volume": [
    "numpy.int64",
    "pandas.algos.backfill_2d_inplace_int64",
    "pandas.algos.backfill_inplace_int64",
    "pandas.algos.pad_2d_inplace_int64",
    "pandas.algos.pad_inplace_int64",
    "pandas.core.missing._interp_wrapper",
    "pandas.core.missing.backfill_1d",
    "pandas.core.missing.pad_1d"
   ]
  },
  "type": "module"
 },
 "pandas.core.missing.Akima1DInterpolator": {
  "data": {
   "shadows": "scipy.interpolate.Akima1DInterpolator"
  },
  "type": "import"
 },
 "pandas.core.missing.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.core.missing.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.core.missing.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.core.missing._akima_interpolate": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "P",
    "TypeError",
    "scipy.interpolate.Akima1DInterpolator",
    "scipy.interpolate._isscalar"
   ]
  },
  "type": "function"
 },
 "pandas.core.missing._backfill_1d_datetime": {
  "data": {
   "lineno": 435
  },
  "type": "constant"
 },
 "pandas.core.missing._backfill_2d_datetime": {
  "data": {
   "lineno": 436
  },
  "type": "constant"
 },
 "pandas.core.missing._fill_methods": {
  "data": {
   "lineno": 551
  },
  "type": "constant"
 },
 "pandas.core.missing._from_derivatives": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "AttributeError",
    "distutils.version.LooseVersion",
    "m",
    "method",
    "pandas.core.missing.scipy",
    "scipy.interpolate.BPoly.from_derivatives",
    "scipy.interpolate.piecewise_polynomial_interpolate"
   ]
  },
  "type": "function"
 },
 "pandas.core.missing._interp_wrapper": {
  "data": {
   "lineno": 425
  },
  "type": "function"
 },
 "pandas.core.missing._interp_wrapper.wrapper": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "f"
   ]
  },
  "type": "function"
 },
 "pandas.core.missing._interpolate_scipy_wrapper": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "ValueError",
    "getattr",
    "method",
    "numpy.asarray",
    "scipy.interpolate.UnivariateSpline",
    "scipy.interpolate.barycentric_interpolate",
    "scipy.interpolate.interp1d",
    "scipy.interpolate.krogh_interpolate",
    "scipy.interpolate.pchip_interpolate",
    "terp"
   ]
  },
  "type": "function"
 },
 "pandas.core.missing._pad_1d_datetime": {
  "data": {
   "lineno": 433
  },
  "type": "constant"
 },
 "pandas.core.missing._pad_2d_datetime": {
  "data": {
   "lineno": 434
  },
  "type": "constant"
 },
 "pandas.core.missing.algos": {
  "data": {
   "shadows": "pandas.algos"
  },
  "type": "import"
 },
 "pandas.core.missing.backfill_1d": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "ValueError",
    "_method",
    "getattr",
    "numpy.object_",
    "numpy.uint8",
    "pandas.algos",
    "pandas.algos.backfill_inplace_float64",
    "pandas.algos.backfill_inplace_object",
    "pandas.core.common._DATELIKE_DTYPES",
    "pandas.core.common._ensure_float64",
    "pandas.core.common.is_datetime64_dtype",
    "pandas.core.common.is_float_dtype",
    "pandas.core.common.is_integer_dtype",
    "pandas.core.common.isnull",
    "pandas.core.missing._backfill_1d_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.core.missing.backfill_2d": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "ValueError",
    "_method",
    "getattr",
    "numpy.all",
    "numpy.object_",
    "numpy.uint8",
    "pandas.algos",
    "pandas.algos.backfill_2d_inplace_float64",
    "pandas.algos.backfill_2d_inplace_object",
    "pandas.core.common._DATELIKE_DTYPES",
    "pandas.core.common._ensure_float64",
    "pandas.core.common.is_datetime64_dtype",
    "pandas.core.common.is_float_dtype",
    "pandas.core.common.is_integer_dtype",
    "pandas.core.common.isnull",
    "pandas.core.missing._backfill_2d_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.core.missing.clean_fill_method": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pandas.compat.string_types"
   ]
  },
  "type": "function"
 },
 "pandas.core.missing.clean_interp_method": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandas.core.missing.clean_reindex_fill_method": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "method",
    "pandas.core.missing.clean_fill_method"
   ]
  },
  "type": "function"
 },
 "pandas.core.missing.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.core.missing.fill_zeros": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "hasattr",
    "numpy.array",
    "numpy.isinf",
    "numpy.isnan",
    "numpy.nan",
    "numpy.putmask",
    "numpy.sign",
    "pandas.core.common.is_float_dtype",
    "pandas.core.common.is_integer_dtype",
    "pandas.lib.isscalar"
   ]
  },
  "type": "function"
 },
 "pandas.core.missing.get_fill_func": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "method",
    "pandas.core.missing._fill_methods",
    "pandas.core.missing.clean_fill_method"
   ]
  },
  "type": "function"
 },
 "pandas.core.missing.interpolate": {
  "data": {
   "shadows": "scipy.interpolate"
  },
  "type": "import"
 },
 "pandas.core.missing.interpolate_1d": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ValueError",
    "_interp_limit",
    "getattr",
    "issubclass",
    "len",
    "numpy.asarray",
    "numpy.datetime64",
    "numpy.empty_like",
    "numpy.float64",
    "numpy.int64",
    "numpy.interp",
    "numpy.nan",
    "numpy.object_",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.core.common.isnull",
    "pandas.core.missing._interpolate_scipy_wrapper",
    "pandas.lib.maybe_convert_objects",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.core.missing.interpolate_1d._interp_limit": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "max",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "pandas.core.missing.interpolate_2d": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "AssertionError",
    "method",
    "pandas.core.missing.backfill_2d",
    "pandas.core.missing.clean_fill_method",
    "pandas.core.missing.mask_missing",
    "pandas.core.missing.pad_2d",
    "transf",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.missing.lib": {
  "data": {
   "shadows": "pandas.lib"
  },
  "type": "import"
 },
 "pandas.core.missing.mask_missing": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "Exception",
    "bool",
    "isinstance",
    "list",
    "numpy.array",
    "numpy.ndarray",
    "numpy.zeros",
    "object",
    "pandas.core.common.is_numeric_v_string_like",
    "pandas.core.common.isnull",
    "pandas.lib.isscalar"
   ]
  },
  "type": "function"
 },
 "pandas.core.missing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.core.missing.pad_1d": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "ValueError",
    "_method",
    "getattr",
    "numpy.object_",
    "numpy.uint8",
    "pandas.algos",
    "pandas.algos.pad_inplace_float64",
    "pandas.algos.pad_inplace_object",
    "pandas.core.common._DATELIKE_DTYPES",
    "pandas.core.common._ensure_float64",
    "pandas.core.common.is_datetime64_dtype",
    "pandas.core.common.is_float_dtype",
    "pandas.core.common.is_integer_dtype",
    "pandas.core.common.isnull",
    "pandas.core.missing._pad_1d_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.core.missing.pad_2d": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "ValueError",
    "_method",
    "getattr",
    "numpy.all",
    "numpy.object_",
    "numpy.uint8",
    "pandas.algos",
    "pandas.algos.pad_2d_inplace_float64",
    "pandas.algos.pad_2d_inplace_object",
    "pandas.core.common._DATELIKE_DTYPES",
    "pandas.core.common._ensure_float64",
    "pandas.core.common.is_datetime64_dtype",
    "pandas.core.common.is_float_dtype",
    "pandas.core.common.is_integer_dtype",
    "pandas.core.common.isnull",
    "pandas.core.missing._pad_2d_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.core.missing.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.core.missing.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "pandas.core.missing.string_types": {
  "data": {
   "shadows": "pandas.compat.string_types"
  },
  "type": "import"
 },
 "pandas.core.ops": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "list",
    "pandas.core.ops._arith_method_FRAME",
    "pandas.core.ops._arith_method_PANEL",
    "pandas.core.ops._arith_method_SERIES",
    "pandas.core.ops._bool_method_SERIES",
    "pandas.core.ops._comp_method_FRAME",
    "pandas.core.ops._comp_method_PANEL",
    "pandas.core.ops._comp_method_SERIES",
    "pandas.core.ops._flex_comp_method_FRAME",
    "pandas.core.ops._flex_method_SERIES",
    "pandas.core.ops._op_descriptions",
    "pandas.core.ops._op_names",
    "pandas.core.ops._radd_compat",
    "pandas.core.ops.reverse_op"
   ]
  },
  "type": "module"
 },
 "pandas.core.ops.ABCSeries": {
  "data": {
   "shadows": "pandas.core.common.ABCSeries"
  },
  "type": "import"
 },
 "pandas.core.ops.Appender": {
  "data": {
   "shadows": "pandas.util.decorators.Appender"
  },
  "type": "import"
 },
 "pandas.core.ops.PerformanceWarning": {
  "data": {
   "shadows": "pandas.core.common.PerformanceWarning"
  },
  "type": "import"
 },
 "pandas.core.ops._TimeOp": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "object",
    "pandas.tslib.iNaT",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "pandas.core.ops._TimeOp.__init__": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "isinstance",
    "pandas.core.common.ABCSeries",
    "pandas.core.common.is_datetime64_dtype",
    "pandas.core.common.is_datetime64tz_dtype",
    "pandas.core.common.is_timedelta64_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._TimeOp._convert_for_datetime": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "_offset",
    "numpy.float64",
    "numpy.int64",
    "numpy.nan",
    "pandas.core.common.isnull",
    "pandas.tseries.timedeltas.to_timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._TimeOp._convert_for_datetime._offset": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "getattr",
    "len",
    "pandas.DatetimeIndex",
    "pandas.core.common.PerformanceWarning",
    "pandas.core.ops.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._TimeOp._convert_for_datetime.f": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.putmask"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._TimeOp._convert_to_array": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "isinstance",
    "numpy.array",
    "numpy.empty",
    "numpy.ndarray",
    "pandas.DatetimeIndex",
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas.core.common.ABCSeries",
    "pandas.core.common.is_datetime64_dtype",
    "pandas.core.common.is_datetimetz",
    "pandas.core.common.is_list_like",
    "pandas.core.common.is_timedelta64_dtype",
    "pandas.core.common.isnull",
    "pandas.core.ops.datetime",
    "pandas.lib.infer_dtype",
    "pandas.tseries.timedeltas.to_timedelta",
    "pandas.tslib.array_to_datetime",
    "pandas.tslib.iNaT"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._TimeOp._is_offset": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "all",
    "isinstance",
    "pandas.DateOffset",
    "pandas.core.common.is_list_like"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._TimeOp._validate": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._TimeOp.maybe_convert_for_time_op": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "pandas.core.common.is_datetime64_dtype",
    "pandas.core.common.is_datetime64tz_dtype",
    "pandas.core.common.is_timedelta64_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._arith_doc_FRAME": {
  "data": {
   "lineno": 955
  },
  "type": "constant"
 },
 "pandas.core.ops._arith_method_FRAME": {
  "data": {
   "lineno": 981,
   "symbols_in_volume": [
    "pandas.core.ops._arith_doc_FRAME",
    "pandas.core.ops._op_descriptions"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._arith_method_FRAME.f": {
  "data": {
   "lineno": 1057,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "na_op",
    "numpy.ndarray",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.core.common.ABCSeries",
    "pandas.util.decorators.Appender",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._arith_method_FRAME.na_op": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "isinstance",
    "numpy.empty",
    "numpy.find_common_type",
    "numpy.nan",
    "numpy.ndarray",
    "numpy.prod",
    "op",
    "pandas.computation.expressions.evaluate",
    "pandas.core.common.ABCSeries",
    "pandas.core.common._maybe_upcast_putmask",
    "pandas.core.common.notnull",
    "pandas.core.missing.fill_zeros",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._arith_method_PANEL": {
  "data": {
   "lineno": 1202
  },
  "type": "function"
 },
 "pandas.core.ops._arith_method_PANEL.f": {
  "data": {
   "lineno": 1222,
   "symbols_in_volume": [
    "ValueError",
    "op",
    "pandas.lib.isscalar"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._arith_method_PANEL.na_op": {
  "data": {
   "lineno": 1206,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "numpy.empty",
    "numpy.nan",
    "op",
    "pandas.computation.expressions.evaluate",
    "pandas.core.common._maybe_upcast_putmask",
    "pandas.core.common.notnull",
    "pandas.core.missing.fill_zeros"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._arith_method_SERIES": {
  "data": {
   "lineno": 572
  },
  "type": "function"
 },
 "pandas.core.ops._arith_method_SERIES.na_op": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "len",
    "numpy.empty",
    "numpy.find_common_type",
    "numpy.nan",
    "numpy.ndarray",
    "op",
    "pandas.Index",
    "pandas.computation.expressions.evaluate",
    "pandas.core.common.ABCSeries",
    "pandas.core.common._maybe_upcast_putmask",
    "pandas.core.common._values_from_object",
    "pandas.core.common.notnull",
    "pandas.core.missing.fill_zeros",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._arith_method_SERIES.wrapper": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "NotImplemented",
    "getattr",
    "hasattr",
    "isinstance",
    "na_op",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.core.algorithms.take_1d",
    "pandas.core.common.ABCSeries",
    "pandas.core.common._maybe_match_name",
    "pandas.core.ops._TimeOp",
    "wrap_results"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._bool_method_SERIES": {
  "data": {
   "lineno": 777
  },
  "type": "function"
 },
 "pandas.core.ops._bool_method_SERIES.na_op": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "isinstance",
    "list",
    "numpy.ndarray",
    "op",
    "pandas.core.common.ABCSeries",
    "pandas.core.common._ensure_object",
    "pandas.core.common.is_bool_dtype",
    "pandas.core.common.isnull",
    "pandas.lib.list_to_object_array",
    "pandas.lib.scalar_binop",
    "pandas.lib.vec_binop",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._bool_method_SERIES.wrapper": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "NotImplemented",
    "bool",
    "fill_bool",
    "fill_int",
    "filler",
    "isinstance",
    "na_op",
    "numpy.asarray",
    "pandas.DataFrame",
    "pandas.core.common.ABCSeries",
    "pandas.core.common._maybe_match_name",
    "pandas.core.common.is_integer_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._comp_method_FRAME": {
  "data": {
   "lineno": 1173
  },
  "type": "function"
 },
 "pandas.core.ops._comp_method_FRAME.f": {
  "data": {
   "lineno": 1174,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "pandas.DataFrame",
    "pandas.core.common.ABCSeries",
    "pandas.util.decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._comp_method_PANEL": {
  "data": {
   "lineno": 1234
  },
  "type": "function"
 },
 "pandas.core.ops._comp_method_PANEL.f": {
  "data": {
   "lineno": 1259,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "na_op",
    "pandas.DataFrame",
    "pandas.core.common.ABCSeries",
    "pandas.util.decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._comp_method_PANEL.na_op": {
  "data": {
   "lineno": 1235,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "isinstance",
    "list",
    "numpy.array",
    "numpy.empty",
    "numpy.ndarray",
    "numpy.putmask",
    "op",
    "pandas.computation.expressions.evaluate",
    "pandas.core.common.notnull",
    "pandas.core.ops.operator"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._comp_method_SERIES": {
  "data": {
   "lineno": 658
  },
  "type": "function"
 },
 "pandas.core.ops._comp_method_SERIES.na_op": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "AttributeError",
    "NotImplemented",
    "TypeError",
    "bool",
    "getattr",
    "isinstance",
    "len",
    "list",
    "numpy.ndarray",
    "numpy.object_",
    "numpy.ones",
    "numpy.zeros",
    "op",
    "pandas.core.common.ABCSeries",
    "pandas.core.common._values_from_object",
    "pandas.core.common.is_categorical_dtype",
    "pandas.core.common.is_datetimelike_v_numeric",
    "pandas.core.common.is_object_dtype",
    "pandas.core.common.isnull",
    "pandas.core.common.needs_i8_conversion",
    "pandas.index.convert_scalar",
    "pandas.lib.isscalar",
    "pandas.lib.list_to_object_array",
    "pandas.lib.scalar_compare",
    "pandas.lib.vec_compare"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._comp_method_SERIES.wrapper": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "NotImplemented",
    "TypeError",
    "ValueError",
    "isinstance",
    "len",
    "list",
    "na_op",
    "numpy.asarray",
    "numpy.ndarray",
    "op",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.core.common.ABCSeries",
    "pandas.core.common._maybe_match_name",
    "pandas.core.common._values_from_object",
    "pandas.core.common.is_categorical_dtype",
    "pandas.lib.isscalar",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._create_methods": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "arith_method",
    "bool_method",
    "comp_method",
    "dict",
    "names",
    "numpy.inf",
    "numpy.nan",
    "op",
    "pandas.core.ops.operator"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._create_methods.names": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "pandas.core.ops._flex_comp_method_FRAME": {
  "data": {
   "lineno": 1105
  },
  "type": "function"
 },
 "pandas.core.ops._flex_comp_method_FRAME.f": {
  "data": {
   "lineno": 1130,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "na_op",
    "numpy.ndarray",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.core.common.ABCSeries",
    "pandas.util.decorators.Appender",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._flex_comp_method_FRAME.na_op": {
  "data": {
   "lineno": 1107,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "list",
    "numpy.array",
    "numpy.empty",
    "numpy.ndarray",
    "numpy.putmask",
    "op",
    "pandas.core.common.ABCSeries",
    "pandas.core.common.notnull",
    "pandas.core.ops.operator"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._flex_method_SERIES": {
  "data": {
   "lineno": 890,
   "symbols_in_volume": [
    "pandas.core.ops._op_descriptions"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._flex_method_SERIES.flex_wrapper": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "list",
    "numpy.ndarray",
    "op",
    "pandas.core.common.ABCSeries",
    "pandas.util.decorators.Appender",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._index": {
  "data": {
   "shadows": "pandas.index"
  },
  "type": "import"
 },
 "pandas.core.ops._maybe_match_name": {
  "data": {
   "shadows": "pandas.core.common._maybe_match_name"
  },
  "type": "import"
 },
 "pandas.core.ops._op_descriptions": {
  "data": {
   "lineno": 853
  },
  "type": "constant"
 },
 "pandas.core.ops._op_names": {
  "data": {
   "lineno": 882
  },
  "type": "constant"
 },
 "pandas.core.ops._radd_compat": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "TypeError",
    "radd"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops._values_from_object": {
  "data": {
   "shadows": "pandas.core.common._values_from_object"
  },
  "type": "import"
 },
 "pandas.core.ops.add_flex_arithmetic_methods": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "dict",
    "pandas.core.ops._create_methods",
    "pandas.core.ops.add_methods",
    "pandas.core.ops.operator"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops.add_methods": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "TypeError",
    "pandas.compat.bind_method",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops.add_special_arithmetic_methods": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "_wrap_inplace_method",
    "arith_method",
    "bool_method",
    "comp_method",
    "dict",
    "pandas.compat.PY3",
    "pandas.core.ops._create_methods",
    "pandas.core.ops.add_methods",
    "pandas.core.ops.operator"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops.add_special_arithmetic_methods._wrap_inplace_method": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "pandas.core.ops.add_special_arithmetic_methods._wrap_inplace_method.f": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "method"
   ]
  },
  "type": "function"
 },
 "pandas.core.ops.algos": {
  "data": {
   "shadows": "pandas.core.algorithms"
  },
  "type": "import"
 },
 "pandas.core.ops.bind_method": {
  "data": {
   "shadows": "pandas.compat.bind_method"
  },
  "type": "import"
 },
 "pandas.core.ops.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.core.ops.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.core.ops.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pandas.core.ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pandas.core.ops.expressions": {
  "data": {
   "shadows": "pandas.computation.expressions"
  },
  "type": "import"
 },
 "pandas.core.ops.frame_flex_funcs": {
  "data": {
   "lineno": 1192
  },
  "type": "constant"
 },
 "pandas.core.ops.frame_special_funcs": {
  "data": {
   "lineno": 1196
  },
  "type": "constant"
 },
 "pandas.core.ops.iNaT": {
  "data": {
   "shadows": "pandas.tslib.iNaT"
  },
  "type": "import"
 },
 "pandas.core.ops.is_bool_dtype": {
  "data": {
   "shadows": "pandas.core.common.is_bool_dtype"
  },
  "type": "import"
 },
 "pandas.core.ops.is_categorical_dtype": {
  "data": {
   "shadows": "pandas.core.common.is_categorical_dtype"
  },
  "type": "import"
 },
 "pandas.core.ops.is_datetime64_dtype": {
  "data": {
   "shadows": "pandas.core.common.is_datetime64_dtype"
  },
  "type": "import"
 },
 "pandas.core.ops.is_datetime64tz_dtype": {
  "data": {
   "shadows": "pandas.core.common.is_datetime64tz_dtype"
  },
  "type": "import"
 },
 "pandas.core.ops.is_datetimelike_v_numeric": {
  "data": {
   "shadows": "pandas.core.common.is_datetimelike_v_numeric"
  },
  "type": "import"
 },
 "pandas.core.ops.is_integer_dtype": {
  "data": {
   "shadows": "pandas.core.common.is_integer_dtype"
  },
  "type": "import"
 },
 "pandas.core.ops.is_list_like": {
  "data": {
   "shadows": "pandas.core.common.is_list_like"
  },
  "type": "import"
 },
 "pandas.core.ops.is_object_dtype": {
  "data": {
   "shadows": "pandas.core.common.is_object_dtype"
  },
  "type": "import"
 },
 "pandas.core.ops.is_timedelta64_dtype": {
  "data": {
   "shadows": "pandas.core.common.is_timedelta64_dtype"
  },
  "type": "import"
 },
 "pandas.core.ops.isnull": {
  "data": {
   "shadows": "pandas.core.common.isnull"
  },
  "type": "import"
 },
 "pandas.core.ops.isscalar": {
  "data": {
   "shadows": "pandas.lib.isscalar"
  },
  "type": "import"
 },
 "pandas.core.ops.lib": {
  "data": {
   "shadows": "pandas.lib"
  },
  "type": "import"
 },
 "pandas.core.ops.missing": {
  "data": {
   "shadows": "pandas.core.missing"
  },
  "type": "import"
 },
 "pandas.core.ops.needs_i8_conversion": {
  "data": {
   "shadows": "pandas.core.common.needs_i8_conversion"
  },
  "type": "import"
 },
 "pandas.core.ops.notnull": {
  "data": {
   "shadows": "pandas.core.common.notnull"
  },
  "type": "import"
 },
 "pandas.core.ops.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.core.ops.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "pandas.core.ops.panel_special_funcs": {
  "data": {
   "lineno": 1279
  },
  "type": "constant"
 },
 "pandas.core.ops.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.core.ops.reverse_op": {
  "data": {
   "lineno": 884
  },
  "type": "constant"
 },
 "pandas.core.ops.series_flex_funcs": {
  "data": {
   "lineno": 946
  },
  "type": "constant"
 },
 "pandas.core.ops.series_special_funcs": {
  "data": {
   "lineno": 950
  },
  "type": "constant"
 },
 "pandas.core.ops.to_timedelta": {
  "data": {
   "shadows": "pandas.tseries.timedeltas.to_timedelta"
  },
  "type": "import"
 },
 "pandas.core.ops.tslib": {
  "data": {
   "shadows": "pandas.tslib"
  },
  "type": "import"
 },
 "pandas.core.ops.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.core.panel": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "pandas.core.ops.add_special_arithmetic_methods",
    "pandas.core.ops.panel_special_funcs",
    "pandas.core.panel.Panel",
    "pandas.core.panel._shared_doc_kwargs"
   ]
  },
  "type": "module"
 },
 "pandas.core.panel.Appender": {
  "data": {
   "shadows": "pandas.util.decorators.Appender"
  },
  "type": "import"
 },
 "pandas.core.panel.BlockManager": {
  "data": {
   "shadows": "pandas.core.internals.BlockManager"
  },
  "type": "import"
 },
 "pandas.core.panel.Categorical": {
  "data": {
   "shadows": "pandas.core.categorical.Categorical"
  },
  "type": "import"
 },
 "pandas.core.panel.DataFrame": {
  "data": {
   "shadows": "pandas.core.frame.DataFrame"
  },
  "type": "import"
 },
 "pandas.core.panel.ExcelWriter": {
  "data": {
   "shadows": "pandas.io.excel.ExcelWriter"
  },
  "type": "import"
 },
 "pandas.core.panel.Index": {
  "data": {
   "shadows": "pandas.core.index.Index"
  },
  "type": "import"
 },
 "pandas.core.panel.LongPanel": {
  "data": {
   "lineno": 1598,
   "symbols_in_volume": [
    "pandas.core.frame.DataFrame"
   ]
  },
  "type": "class"
 },
 "pandas.core.panel.LongPanel.__init__": {
  "data": {
   "lineno": 1599,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.core.panel.LongPanel",
    "pandas.core.panel.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.MultiIndex": {
  "data": {
   "shadows": "pandas.core.index.MultiIndex"
  },
  "type": "import"
 },
 "pandas.core.panel.NDFrame": {
  "data": {
   "shadows": "pandas.core.generic.NDFrame"
  },
  "type": "import"
 },
 "pandas.core.panel.OrderedDefaultdict": {
  "data": {
   "shadows": "pandas.compat.OrderedDefaultdict"
  },
  "type": "import"
 },
 "pandas.core.panel.OrderedDict": {
  "data": {
   "shadows": "pandas.compat.OrderedDict"
  },
  "type": "import"
 },
 "pandas.core.panel.PandasError": {
  "data": {
   "shadows": "pandas.core.common.PandasError"
  },
  "type": "import"
 },
 "pandas.core.panel.Panel": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "pandas.core.frame.DataFrame",
    "pandas.core.generic.NDFrame",
    "pandas.util.decorators.deprecate"
   ]
  },
  "type": "class"
 },
 "pandas.core.panel.Panel.__getitem__": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "isinstance",
    "pandas.core.common._apply_if_callable",
    "pandas.core.common.is_list_like",
    "pandas.core.index.MultiIndex",
    "pandas.core.panel.Panel",
    "slice",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.__init__": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.__setitem__": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "int",
    "isinstance",
    "numpy.asarray",
    "numpy.empty",
    "numpy.ndarray",
    "pandas.compat.map",
    "pandas.core.common._apply_if_callable",
    "pandas.core.common._infer_dtype_from_scalar",
    "pandas.core.generic.NDFrame._set_item",
    "pandas.lib.isscalar",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.__unicode__": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "axis_pretty",
    "pandas.compat.u",
    "pandas.compat.zip",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.__unicode__.axis_pretty": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "getattr",
    "len",
    "pandas.compat.u",
    "pandas.formats.printing.pprint_thing"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._add_aggregate_operations": {
  "data": {
   "lineno": 1499,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "cls._AXIS_ORDERS",
    "cls.__name__",
    "cls._constructor_sliced.__name__",
    "pandas.core.ops._comp_method_PANEL",
    "pandas.core.ops.add_flex_arithmetic_methods"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._add_aggregate_operations._panel_arith_method": {
  "data": {
   "lineno": 1517,
   "symbols_in_volume": [
    "cls._AXIS_ORDERS",
    "cls.__name__",
    "cls._constructor_sliced.__name__",
    "f",
    "f.__name__",
    "pandas.core.ops._op_descriptions"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._add_aggregate_operations._panel_arith_method.f": {
  "data": {
   "lineno": 1564,
   "symbols_in_volume": [
    "pandas.util.decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._add_aggregate_operations._panel_arith_method.na_op": {
  "data": {
   "lineno": 1519,
   "symbols_in_volume": [
    "TypeError",
    "op",
    "pandas.computation.expressions.evaluate",
    "pandas.core.missing.fill_zeros"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._apply_1d": {
  "data": {
   "lineno": 1046,
   "symbols_in_volume": [
    "func",
    "isinstance",
    "len",
    "list",
    "numpy.array",
    "numpy.prod",
    "numpy.vstack",
    "numpy.zeros",
    "pandas.compat.range",
    "pandas.core.series.Series",
    "pandas.tools.util.cartesian_product",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._apply_2d": {
  "data": {
   "lineno": 1105,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "func",
    "list",
    "pandas.compat.range",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._box_item_values": {
  "data": {
   "lineno": 559
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._combine": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "NotImplementedError",
    "func",
    "isinstance",
    "pandas.core.frame.DataFrame",
    "pandas.core.panel.Panel",
    "pandas.lib.isscalar",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._combine_const": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._combine_frame": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._combine_panel": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._compare_constructor": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "Exception",
    "func"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._construct_return_type": {
  "data": {
   "lineno": 1148,
   "symbols_in_volume": [
    "dict",
    "getattr",
    "isinstance",
    "list",
    "pandas.compat.itervalues",
    "pandas.core.common.PandasError",
    "pandas.core.series.Series"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._constructor": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "property",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._extract_axes": {
  "data": {
   "lineno": 1383,
   "symbols_in_volume": [
    "enumerate",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._extract_axes_for_slice": {
  "data": {
   "lineno": 1389,
   "symbols_in_volume": [
    "dict",
    "len",
    "pandas.compat.zip",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._extract_axis": {
  "data": {
   "lineno": 1459,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "isinstance",
    "len",
    "list",
    "numpy.arange",
    "pandas.core.index.Index",
    "pandas.core.index._ensure_index",
    "pandas.core.index._get_combined_index",
    "set",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._get_join_index": {
  "data": {
   "lineno": 1369
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._get_plane_axes": {
  "data": {
   "lineno": 381
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._get_plane_axes_index": {
  "data": {
   "lineno": 361
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._getitem_multilevel": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "pandas.compat.range",
    "pandas.core.indexing.maybe_droplevels",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._homogenize_dict": {
  "data": {
   "lineno": 1414,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "pandas.compat.OrderedDict",
    "pandas.compat.iteritems",
    "pandas.compat.zip",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._init_arrays": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "pandas.core.internals.create_block_manager_from_arrays"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._init_data": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "TypeError",
    "all",
    "any",
    "dict",
    "isinstance",
    "len",
    "list",
    "numpy.empty",
    "numpy.ndarray",
    "pandas.compat.zip",
    "pandas.core.common.PandasError",
    "pandas.core.common._infer_dtype_from_scalar",
    "pandas.core.generic.NDFrame.__init__",
    "pandas.core.internals.BlockManager",
    "pandas.lib.isscalar"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._init_dict": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "numpy.empty",
    "numpy.nan",
    "pandas.compat.OrderedDict",
    "pandas.compat.iteritems",
    "pandas.core.common._try_sort",
    "pandas.core.index.Index",
    "pandas.core.index._ensure_index"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._init_matrix": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "enumerate",
    "pandas.core.common._default_index",
    "pandas.core.index._ensure_index",
    "pandas.core.internals.create_block_manager_from_blocks"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._ixs": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "isinstance",
    "pandas.core.common.is_list_like",
    "pandas.core.index.MultiIndex",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._needs_reindex_multi": {
  "data": {
   "lineno": 661
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._prep_ndarray": {
  "data": {
   "lineno": 1397,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "issubclass",
    "numpy.array",
    "numpy.asarray",
    "numpy.ndarray",
    "object",
    "pandas.compat.string_types",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._reduce": {
  "data": {
   "lineno": 1130,
   "symbols_in_volume": [
    "NotImplementedError",
    "f",
    "op"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._unpickle_panel_compat": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "_unpickle",
    "pandas.core.common._unpickle_array",
    "pandas.core.panel.Panel"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel._wrap_result": {
  "data": {
   "lineno": 1182
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.align": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.apply": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": [
    "AttributeError",
    "func",
    "isinstance",
    "len",
    "list",
    "numpy.apply_along_axis",
    "numpy.ufunc",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.as_matrix": {
  "data": {
   "lineno": 463
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.conform": {
  "data": {
   "lineno": 607
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.count": {
  "data": {
   "lineno": 1241,
   "symbols_in_volume": [
    "numpy.isfinite"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.dropna": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "numpy.prod",
    "pandas.compat.range",
    "pandas.core.common.notnull",
    "reversed",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.fillna": {
  "data": {
   "lineno": 1234,
   "symbols_in_volume": [
    "pandas.core.generic._shared_docs",
    "pandas.core.panel.Panel",
    "pandas.core.panel._shared_doc_kwargs",
    "pandas.util.decorators.Appender",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.from_dict": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "cls",
    "dict",
    "isinstance",
    "list",
    "pandas.compat.OrderedDefaultdict",
    "pandas.compat.OrderedDict",
    "pandas.compat.iteritems",
    "pandas.core.index.Index",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.get_value": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.groupby": {
  "data": {
   "lineno": 889,
   "symbols_in_volume": [
    "pandas.compat.numpy.function",
    "pandas.core.groupby.PanelGroupBy"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.head": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.join": {
  "data": {
   "lineno": 1288,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "pandas.core.panel.Panel",
    "pandas.tools.merge.concat"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.major_xs": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "pandas.core.panel.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.minor_xs": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "pandas.core.panel.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.reindex": {
  "data": {
   "lineno": 1190,
   "symbols_in_volume": [
    "pandas.core.generic._shared_docs",
    "pandas.core.panel.Panel",
    "pandas.core.panel._shared_doc_kwargs",
    "pandas.util.decorators.Appender",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.reindex_axis": {
  "data": {
   "lineno": 1208,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.core.generic._shared_docs",
    "pandas.core.panel.Panel",
    "pandas.core.panel._shared_doc_kwargs",
    "pandas.util.decorators.Appender",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.rename": {
  "data": {
   "lineno": 1199,
   "symbols_in_volume": [
    "pandas.core.generic._shared_docs",
    "pandas.core.panel.Panel",
    "pandas.core.panel._shared_doc_kwargs",
    "pandas.util.decorators.Appender",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.round": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "TypeError",
    "numpy.apply_along_axis",
    "numpy.round",
    "pandas.compat.numpy.function.validate_round",
    "pandas.core.common.is_integer"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.set_value": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "len",
    "list",
    "numpy.array_equal",
    "pandas.core.common._infer_dtype_from_scalar",
    "pandas.core.common._possibly_cast_item"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.shift": {
  "data": {
   "lineno": 1261,
   "symbols_in_volume": [
    "pandas.core.panel.Panel",
    "pandas.util.decorators.deprecate_kwarg",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.tail": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.to_excel": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "isinstance",
    "pandas.compat.string_types",
    "pandas.io.excel.ExcelWriter",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.to_frame": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "construct_index_parts",
    "construct_multi_parts",
    "isinstance",
    "pandas.core.common.notnull",
    "pandas.core.frame.DataFrame",
    "pandas.core.index.MultiIndex",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.to_frame.construct_index_parts": {
  "data": {
   "lineno": 945,
   "symbols_in_volume": [
    "int",
    "numpy.arange",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.to_frame.construct_multi_parts": {
  "data": {
   "lineno": 938
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.to_sparse": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "dict",
    "pandas.core.sparse.SparsePanel"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.transpose": {
  "data": {
   "lineno": 1216,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "len",
    "pandas.core.common.is_string_like",
    "pandas.core.generic._shared_docs",
    "pandas.core.panel.Panel",
    "pandas.core.panel._shared_doc_kwargs",
    "pandas.util.decorators.Appender",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.tshift": {
  "data": {
   "lineno": 1285,
   "symbols_in_volume": [
    "pandas.core.panel.Panel",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.update": {
  "data": {
   "lineno": 1337,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.Panel.xs": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "pandas.core.panel.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.PanelGroupBy": {
  "data": {
   "shadows": "pandas.core.groupby.PanelGroupBy"
  },
  "type": "import"
 },
 "pandas.core.panel.Series": {
  "data": {
   "shadows": "pandas.core.series.Series"
  },
  "type": "import"
 },
 "pandas.core.panel.SparsePanel": {
  "data": {
   "shadows": "pandas.core.sparse.SparsePanel"
  },
  "type": "import"
 },
 "pandas.core.panel.WidePanel": {
  "data": {
   "lineno": 1589,
   "symbols_in_volume": [
    "pandas.core.panel.Panel"
   ]
  },
  "type": "class"
 },
 "pandas.core.panel.WidePanel.__init__": {
  "data": {
   "lineno": 1590,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.core.panel.WidePanel",
    "pandas.core.panel.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel._default_index": {
  "data": {
   "shadows": "pandas.core.common._default_index"
  },
  "type": "import"
 },
 "pandas.core.panel._ensure_index": {
  "data": {
   "shadows": "pandas.core.index._ensure_index"
  },
  "type": "import"
 },
 "pandas.core.panel._ensure_like_indices": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "len",
    "numpy.repeat",
    "numpy.tile",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel._get_combined_index": {
  "data": {
   "shadows": "pandas.core.index._get_combined_index"
  },
  "type": "import"
 },
 "pandas.core.panel._infer_dtype_from_scalar": {
  "data": {
   "shadows": "pandas.core.common._infer_dtype_from_scalar"
  },
  "type": "import"
 },
 "pandas.core.panel._op_descriptions": {
  "data": {
   "shadows": "pandas.core.ops._op_descriptions"
  },
  "type": "import"
 },
 "pandas.core.panel._shared_doc_kwargs": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pandas.core.panel._shared_docs": {
  "data": {
   "shadows": "pandas.core.generic._shared_docs"
  },
  "type": "import"
 },
 "pandas.core.panel._try_sort": {
  "data": {
   "shadows": "pandas.core.common._try_sort"
  },
  "type": "import"
 },
 "pandas.core.panel.cartesian_product": {
  "data": {
   "shadows": "pandas.tools.util.cartesian_product"
  },
  "type": "import"
 },
 "pandas.core.panel.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.core.panel.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.core.panel.concat": {
  "data": {
   "shadows": "pandas.tools.merge.concat"
  },
  "type": "import"
 },
 "pandas.core.panel.create_block_manager_from_arrays": {
  "data": {
   "shadows": "pandas.core.internals.create_block_manager_from_arrays"
  },
  "type": "import"
 },
 "pandas.core.panel.create_block_manager_from_blocks": {
  "data": {
   "shadows": "pandas.core.internals.create_block_manager_from_blocks"
  },
  "type": "import"
 },
 "pandas.core.panel.deprecate": {
  "data": {
   "shadows": "pandas.util.decorators.deprecate"
  },
  "type": "import"
 },
 "pandas.core.panel.deprecate_kwarg": {
  "data": {
   "shadows": "pandas.util.decorators.deprecate_kwarg"
  },
  "type": "import"
 },
 "pandas.core.panel.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pandas.core.panel.expressions": {
  "data": {
   "shadows": "pandas.computation.expressions"
  },
  "type": "import"
 },
 "pandas.core.panel.is_list_like": {
  "data": {
   "shadows": "pandas.core.common.is_list_like"
  },
  "type": "import"
 },
 "pandas.core.panel.lib": {
  "data": {
   "shadows": "pandas.lib"
  },
  "type": "import"
 },
 "pandas.core.panel.map": {
  "data": {
   "shadows": "pandas.compat.map"
  },
  "type": "import"
 },
 "pandas.core.panel.maybe_droplevels": {
  "data": {
   "shadows": "pandas.core.indexing.maybe_droplevels"
  },
  "type": "import"
 },
 "pandas.core.panel.missing": {
  "data": {
   "shadows": "pandas.core.missing"
  },
  "type": "import"
 },
 "pandas.core.panel.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.core.panel.nv": {
  "data": {
   "shadows": "pandas.compat.numpy.function"
  },
  "type": "import"
 },
 "pandas.core.panel.ops": {
  "data": {
   "shadows": "pandas.core.ops"
  },
  "type": "import"
 },
 "pandas.core.panel.panel_index": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "pandas.core.categorical.Categorical.from_array",
    "pandas.core.index.MultiIndex",
    "pandas.core.panel._ensure_like_indices"
   ]
  },
  "type": "function"
 },
 "pandas.core.panel.pprint_thing": {
  "data": {
   "shadows": "pandas.formats.printing.pprint_thing"
  },
  "type": "import"
 },
 "pandas.core.panel.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.core.panel.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.core.panel.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.core.panel.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.core.panel4d": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "pandas.core.panel.Panel",
    "pandas.core.panel4d.Panel4D",
    "pandas.core.panel4d.panel4d_init",
    "pandas.core.panelnd.create_nd_panel_factory"
   ]
  },
  "type": "module"
 },
 "pandas.core.panel4d.Panel": {
  "data": {
   "shadows": "pandas.core.panel.Panel"
  },
  "type": "import"
 },
 "pandas.core.panel4d.Panel4D": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "pandas.core.panel4d.create_nd_panel_factory": {
  "data": {
   "shadows": "pandas.core.panelnd.create_nd_panel_factory"
  },
  "type": "import"
 },
 "pandas.core.panel4d.panel4d_init": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "pandas.core.panelnd": {
  "data": {},
  "type": "module"
 },
 "pandas.core.panelnd.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.core.panelnd.create_nd_panel_factory": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "Exception",
    "aliases",
    "func",
    "getattr",
    "isinstance",
    "pandas.compat.string_types",
    "pandas.core.panelnd.pandas",
    "setattr",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.panelnd.create_nd_panel_factory.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "Exception",
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.core.panelnd.create_nd_panel_factory._combine": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.core.panelnd.create_nd_panel_factory._combine_with_constructor": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "dict",
    "func",
    "getattr",
    "pandas.compat.zip"
   ]
  },
  "type": "function"
 },
 "pandas.core.panelnd.create_nd_panel_factory._get_plane_axes_index": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "pandas.core.panelnd.create_nd_panel_factory.func": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pandas.core.panelnd.pandas": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.core.panelnd.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.core.sparse": {
  "data": {},
  "type": "module"
 },
 "pandas.core.sparse.SparseDataFrame": {
  "data": {
   "shadows": "pandas.sparse.frame.SparseDataFrame"
  },
  "type": "import"
 },
 "pandas.core.sparse.SparsePanel": {
  "data": {
   "shadows": "pandas.sparse.panel.SparsePanel"
  },
  "type": "import"
 },
 "pandas.core.sparse.SparseSeries": {
  "data": {
   "shadows": "pandas.sparse.series.SparseSeries"
  },
  "type": "import"
 },
 "pandas.core.strings": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "pandas.core.strings._cpython_optimized_encoders"
   ]
  },
  "type": "module"
 },
 "pandas.core.strings.AccessorProperty": {
  "data": {
   "shadows": "pandas.core.base.AccessorProperty"
  },
  "type": "import"
 },
 "pandas.core.strings.Appender": {
  "data": {
   "shadows": "pandas.util.decorators.Appender"
  },
  "type": "import"
 },
 "pandas.core.strings.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.core.strings.Index": {
  "data": {
   "shadows": "pandas.core.index.Index"
  },
  "type": "import"
 },
 "pandas.core.strings.MultiIndex": {
  "data": {
   "shadows": "pandas.core.index.MultiIndex"
  },
  "type": "import"
 },
 "pandas.core.strings.NoNewAttributesMixin": {
  "data": {
   "shadows": "pandas.core.base.NoNewAttributesMixin"
  },
  "type": "import"
 },
 "pandas.core.strings.Series": {
  "data": {
   "shadows": "pandas.core.series.Series"
  },
  "type": "import"
 },
 "pandas.core.strings.StringAccessorMixin": {
  "data": {
   "lineno": 1802,
   "symbols_in_volume": [
    "object",
    "pandas.core.base.AccessorProperty",
    "pandas.core.strings.StringMethods",
    "str"
   ]
  },
  "type": "class"
 },
 "pandas.core.strings.StringAccessorMixin._dir_additions": {
  "data": {
   "lineno": 1837,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringAccessorMixin._dir_deletions": {
  "data": {
   "lineno": 1840,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringAccessorMixin._make_str_accessor": {
  "data": {
   "lineno": 1806,
   "symbols_in_volume": [
    "AttributeError",
    "isinstance",
    "pandas.core.common.is_categorical_dtype",
    "pandas.core.common.is_object_dtype",
    "pandas.core.index.Index",
    "pandas.core.series.Series",
    "pandas.core.strings.StringMethods"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods": {
  "data": {
   "lineno": 1272,
   "symbols_in_volume": [
    "dict",
    "int",
    "len",
    "pandas.compat.u_safe",
    "pandas.core.base.NoNewAttributesMixin",
    "pandas.core.strings._noarg_wrapper",
    "pandas.core.strings._pat_wrapper",
    "pandas.core.strings._shared_docs",
    "pandas.core.strings.str_count",
    "pandas.core.strings.str_endswith",
    "pandas.core.strings.str_findall",
    "pandas.core.strings.str_startswith"
   ]
  },
  "type": "class"
 },
 "pandas.core.strings.StringMethods.__getitem__": {
  "data": {
   "lineno": 1291,
   "symbols_in_volume": [
    "isinstance",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.__init__": {
  "data": {
   "lineno": 1284,
   "symbols_in_volume": [
    "pandas.core.common.is_categorical_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.__iter__": {
  "data": {
   "lineno": 1297
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods._wrap_result": {
  "data": {
   "lineno": 1305,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "cons",
    "cons_row",
    "getattr",
    "hasattr",
    "isinstance",
    "list",
    "pandas.core.algorithms.take_1d",
    "pandas.core.common.is_bool_dtype",
    "pandas.core.index.Index",
    "pandas.core.index.MultiIndex.from_tuples"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods._wrap_result.cons_row": {
  "data": {
   "lineno": 1330,
   "symbols_in_volume": [
    "pandas.core.common.is_list_like"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.cat": {
  "data": {
   "lineno": 1374,
   "symbols_in_volume": [
    "pandas.core.strings.copy",
    "pandas.core.strings.str_cat"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.center": {
  "data": {
   "lineno": 1513,
   "symbols_in_volume": [
    "dict",
    "pandas.core.strings._shared_docs",
    "pandas.util.decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.contains": {
  "data": {
   "lineno": 1468,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.core.strings.copy",
    "pandas.core.strings.str_contains"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.decode": {
  "data": {
   "lineno": 1554,
   "symbols_in_volume": [
    "pandas.core.strings.copy",
    "pandas.core.strings.str_decode"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.encode": {
  "data": {
   "lineno": 1559,
   "symbols_in_volume": [
    "pandas.core.strings.copy",
    "pandas.core.strings.str_encode"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.extract": {
  "data": {
   "lineno": 1615,
   "symbols_in_volume": [
    "pandas.core.strings.copy",
    "pandas.core.strings.str_extract"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.extractall": {
  "data": {
   "lineno": 1619,
   "symbols_in_volume": [
    "pandas.core.strings.copy",
    "pandas.core.strings.str_extractall"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.find": {
  "data": {
   "lineno": 1646,
   "symbols_in_volume": [
    "dict",
    "pandas.core.strings._shared_docs",
    "pandas.core.strings.str_find",
    "pandas.util.decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.get": {
  "data": {
   "lineno": 1458,
   "symbols_in_volume": [
    "pandas.core.strings.copy",
    "pandas.core.strings.str_get"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.get_dummies": {
  "data": {
   "lineno": 1596,
   "symbols_in_volume": [
    "pandas.core.strings.copy",
    "pandas.core.strings.str_get_dummies",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.index": {
  "data": {
   "lineno": 1703,
   "symbols_in_volume": [
    "dict",
    "pandas.core.strings._shared_docs",
    "pandas.core.strings.str_index",
    "pandas.util.decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.join": {
  "data": {
   "lineno": 1463,
   "symbols_in_volume": [
    "pandas.core.strings.copy",
    "pandas.core.strings.str_join"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.ljust": {
  "data": {
   "lineno": 1518,
   "symbols_in_volume": [
    "dict",
    "pandas.core.strings._shared_docs",
    "pandas.util.decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.lstrip": {
  "data": {
   "lineno": 1579,
   "symbols_in_volume": [
    "dict",
    "pandas.core.strings._shared_docs",
    "pandas.core.strings.str_strip",
    "pandas.util.decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.match": {
  "data": {
   "lineno": 1474,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.core.strings.copy",
    "pandas.core.strings.str_match"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.normalize": {
  "data": {
   "lineno": 1660,
   "symbols_in_volume": [
    "f",
    "pandas.compat.u_safe",
    "pandas.core.strings._na_map",
    "pandas.core.strings.unicodedata"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.pad": {
  "data": {
   "lineno": 1491,
   "symbols_in_volume": [
    "pandas.core.strings.copy",
    "pandas.core.strings.str_pad"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.partition": {
  "data": {
   "lineno": 1436,
   "symbols_in_volume": [
    "f",
    "pandas.core.strings._na_map",
    "pandas.core.strings._shared_docs",
    "pandas.util.decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.repeat": {
  "data": {
   "lineno": 1486,
   "symbols_in_volume": [
    "pandas.core.strings.copy",
    "pandas.core.strings.str_repeat"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.replace": {
  "data": {
   "lineno": 1480,
   "symbols_in_volume": [
    "pandas.core.strings.copy",
    "pandas.core.strings.str_replace"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.rfind": {
  "data": {
   "lineno": 1653,
   "symbols_in_volume": [
    "dict",
    "pandas.core.strings._shared_docs",
    "pandas.core.strings.str_find",
    "pandas.util.decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.rindex": {
  "data": {
   "lineno": 1710,
   "symbols_in_volume": [
    "dict",
    "pandas.core.strings._shared_docs",
    "pandas.core.strings.str_index",
    "pandas.util.decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.rjust": {
  "data": {
   "lineno": 1522,
   "symbols_in_volume": [
    "dict",
    "pandas.core.strings._shared_docs",
    "pandas.util.decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.rpartition": {
  "data": {
   "lineno": 1447,
   "symbols_in_volume": [
    "f",
    "pandas.core.strings._na_map",
    "pandas.core.strings._shared_docs",
    "pandas.util.decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.rsplit": {
  "data": {
   "lineno": 1387,
   "symbols_in_volume": [
    "pandas.core.strings.copy",
    "pandas.core.strings.str_rsplit"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.rstrip": {
  "data": {
   "lineno": 1585,
   "symbols_in_volume": [
    "dict",
    "pandas.core.strings._shared_docs",
    "pandas.core.strings.str_strip",
    "pandas.util.decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.slice": {
  "data": {
   "lineno": 1544,
   "symbols_in_volume": [
    "pandas.core.strings.copy",
    "pandas.core.strings.str_slice"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.slice_replace": {
  "data": {
   "lineno": 1549,
   "symbols_in_volume": [
    "pandas.core.strings.copy",
    "pandas.core.strings.str_slice_replace"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.split": {
  "data": {
   "lineno": 1380,
   "symbols_in_volume": [
    "pandas.core.strings.copy",
    "pandas.core.strings.str_split",
    "pandas.util.decorators.deprecate_kwarg"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.strip": {
  "data": {
   "lineno": 1573,
   "symbols_in_volume": [
    "dict",
    "pandas.core.strings._shared_docs",
    "pandas.core.strings.str_strip",
    "pandas.util.decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.translate": {
  "data": {
   "lineno": 1605,
   "symbols_in_volume": [
    "pandas.core.strings.copy",
    "pandas.core.strings.str_translate"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.wrap": {
  "data": {
   "lineno": 1591,
   "symbols_in_volume": [
    "pandas.core.strings.copy",
    "pandas.core.strings.str_wrap"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.StringMethods.zfill": {
  "data": {
   "lineno": 1526,
   "symbols_in_volume": [
    "pandas.core.strings.str_pad"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings._cpython_optimized_decoders": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pandas.core.strings._cpython_optimized_encoders": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "pandas.core.strings._get_array_list": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "numpy.asarray",
    "numpy.ndarray",
    "object",
    "pandas.core.common._values_from_object",
    "pandas.core.series.Series"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings._get_single_group_name": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "IndexError",
    "list"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings._groups_or_na_fun": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "ValueError",
    "f",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings._groups_or_na_fun.f": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "isinstance",
    "numpy.nan",
    "pandas.compat.string_types"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings._length_check": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings._map": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "f",
    "isinstance",
    "len",
    "numpy.asarray",
    "numpy.nan",
    "numpy.ndarray",
    "numpy.putmask",
    "numpy.uint8",
    "object",
    "pandas.core.common.isnull",
    "pandas.core.series.Series",
    "pandas.lib.map_infer",
    "pandas.lib.map_infer_mask",
    "pandas.lib.maybe_convert_objects"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings._map.g": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "f"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings._na_map": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "numpy.nan",
    "object",
    "pandas.core.strings._map"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings._noarg_wrapper": {
  "data": {
   "lineno": 1225,
   "symbols_in_volume": [
    "ValueError",
    "f.__name__"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings._noarg_wrapper.wrapper": {
  "data": {
   "lineno": 1226,
   "symbols_in_volume": [
    "f",
    "pandas.core.strings._na_map"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings._pat_wrapper": {
  "data": {
   "lineno": 1239,
   "symbols_in_volume": [
    "f.__doc__",
    "f.__name__"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings._pat_wrapper.wrapper1": {
  "data": {
   "lineno": 1240,
   "symbols_in_volume": [
    "f"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings._pat_wrapper.wrapper2": {
  "data": {
   "lineno": 1244,
   "symbols_in_volume": [
    "f"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings._pat_wrapper.wrapper3": {
  "data": {
   "lineno": 1248,
   "symbols_in_volume": [
    "f",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings._shared_docs": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pandas.core.strings._str_extract_frame": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "AttributeError",
    "dict",
    "groups_or_na",
    "len",
    "object",
    "pandas.DataFrame",
    "pandas.compat.zip",
    "pandas.core.strings._groups_or_na_fun",
    "pandas.core.strings.re",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings._str_extract_noexpand": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "groups_or_na",
    "isinstance",
    "numpy.array",
    "object",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.compat.zip",
    "pandas.core.strings._get_single_group_name",
    "pandas.core.strings._groups_or_na_fun",
    "pandas.core.strings.re",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings._values_from_object": {
  "data": {
   "shadows": "pandas.core.common._values_from_object"
  },
  "type": "import"
 },
 "pandas.core.strings.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "pandas.core.strings.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.core.strings.copy": {
  "data": {
   "lineno": 1261
  },
  "type": "function"
 },
 "pandas.core.strings.copy.do_copy": {
  "data": {
   "lineno": 1264
  },
  "type": "function"
 },
 "pandas.core.strings.deprecate_kwarg": {
  "data": {
   "shadows": "pandas.util.decorators.deprecate_kwarg"
  },
  "type": "import"
 },
 "pandas.core.strings.is_bool_dtype": {
  "data": {
   "shadows": "pandas.core.common.is_bool_dtype"
  },
  "type": "import"
 },
 "pandas.core.strings.is_categorical_dtype": {
  "data": {
   "shadows": "pandas.core.common.is_categorical_dtype"
  },
  "type": "import"
 },
 "pandas.core.strings.is_list_like": {
  "data": {
   "shadows": "pandas.core.common.is_list_like"
  },
  "type": "import"
 },
 "pandas.core.strings.is_object_dtype": {
  "data": {
   "shadows": "pandas.core.common.is_object_dtype"
  },
  "type": "import"
 },
 "pandas.core.strings.isnull": {
  "data": {
   "shadows": "pandas.core.common.isnull"
  },
  "type": "import"
 },
 "pandas.core.strings.lib": {
  "data": {
   "shadows": "pandas.lib"
  },
  "type": "import"
 },
 "pandas.core.strings.notnull": {
  "data": {
   "shadows": "pandas.core.common.notnull"
  },
  "type": "import"
 },
 "pandas.core.strings.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.core.strings.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pandas.core.strings.str_cat": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "enumerate",
    "numpy.array",
    "numpy.asarray",
    "numpy.empty",
    "numpy.logical_or.reduce",
    "numpy.nan",
    "numpy.putmask",
    "numpy.where",
    "object",
    "pandas.compat.zip",
    "pandas.core.common.isnull",
    "pandas.core.common.notnull",
    "pandas.core.strings._get_array_list",
    "pandas.core.strings._length_check"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_contains": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "UserWarning",
    "bool",
    "f",
    "numpy.nan",
    "pandas.core.strings._na_map",
    "pandas.core.strings.re",
    "pandas.core.strings.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_count": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "f",
    "int",
    "len",
    "pandas.core.strings._na_map",
    "pandas.core.strings.re"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_decode": {
  "data": {
   "lineno": 1178,
   "symbols_in_volume": [
    "decoder",
    "f",
    "pandas.core.strings._cpython_optimized_decoders",
    "pandas.core.strings._na_map",
    "pandas.core.strings.codecs"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_encode": {
  "data": {
   "lineno": 1202,
   "symbols_in_volume": [
    "encoder",
    "f",
    "pandas.core.strings._cpython_optimized_encoders",
    "pandas.core.strings._na_map",
    "pandas.core.strings.codecs"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_endswith": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "bool",
    "f",
    "numpy.nan",
    "pandas.core.strings._na_map"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_extract": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "bool",
    "isinstance",
    "pandas.core.strings._str_extract_frame",
    "pandas.core.strings._str_extract_noexpand",
    "pandas.core.strings.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_extractall": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "numpy.NaN",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.string_types",
    "pandas.compat.zip",
    "pandas.core.strings.re",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_find": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "f",
    "getattr",
    "int",
    "isinstance",
    "pandas.compat.string_types",
    "pandas.core.strings._na_map",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_findall": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "pandas.core.strings._na_map",
    "pandas.core.strings.re"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_get": {
  "data": {
   "lineno": 1160,
   "symbols_in_volume": [
    "f",
    "len",
    "numpy.nan",
    "pandas.core.strings._na_map"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_get_dummies": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "TypeError",
    "enumerate",
    "len",
    "numpy.empty",
    "numpy.int64",
    "pandas.lib.map_infer",
    "set",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_index": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "f",
    "getattr",
    "int",
    "isinstance",
    "pandas.compat.string_types",
    "pandas.core.strings._na_map",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_join": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "pandas.core.strings._na_map"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_match": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "FutureWarning",
    "UserWarning",
    "bool",
    "f",
    "numpy.nan",
    "object",
    "pandas.core.strings._na_map",
    "pandas.core.strings.re",
    "pandas.core.strings.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_match.f": {
  "data": {
   "lineno": 424
  },
  "type": "function"
 },
 "pandas.core.strings.str_pad": {
  "data": {
   "lineno": 872,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "f",
    "isinstance",
    "len",
    "pandas.compat.string_types",
    "pandas.core.strings._na_map",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_repeat": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "numpy.asarray",
    "object",
    "pandas.core.common._values_from_object",
    "pandas.core.strings._na_map",
    "pandas.lib.isscalar",
    "pandas.lib.vec_binop"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_repeat.rep": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "TypeError",
    "pandas.compat.binary_type.__mul__",
    "pandas.compat.text_type.__mul__"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_replace": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "f",
    "len",
    "pandas.core.strings._na_map",
    "pandas.core.strings.re"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_replace.f": {
  "data": {
   "lineno": 321
  },
  "type": "function"
 },
 "pandas.core.strings.str_rsplit": {
  "data": {
   "lineno": 950,
   "symbols_in_volume": [
    "f",
    "pandas.core.strings._na_map"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_slice": {
  "data": {
   "lineno": 979,
   "symbols_in_volume": [
    "f",
    "pandas.core.strings._na_map",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_slice_replace": {
  "data": {
   "lineno": 998,
   "symbols_in_volume": [
    "f",
    "pandas.core.strings._na_map"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_slice_replace.f": {
  "data": {
   "lineno": 1017
  },
  "type": "function"
 },
 "pandas.core.strings.str_split": {
  "data": {
   "lineno": 910,
   "symbols_in_volume": [
    "f",
    "len",
    "pandas.core.strings._na_map",
    "pandas.core.strings.re"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_startswith": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "bool",
    "f",
    "numpy.nan",
    "pandas.core.strings._na_map"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_strip": {
  "data": {
   "lineno": 1033,
   "symbols_in_volume": [
    "ValueError",
    "f",
    "pandas.core.strings._na_map"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_translate": {
  "data": {
   "lineno": 1121,
   "symbols_in_volume": [
    "ValueError",
    "f",
    "pandas.compat.PY3",
    "pandas.core.strings._na_map"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.str_wrap": {
  "data": {
   "lineno": 1058,
   "symbols_in_volume": [
    "pandas.core.strings._na_map",
    "pandas.core.strings.textwrap"
   ]
  },
  "type": "function"
 },
 "pandas.core.strings.take_1d": {
  "data": {
   "shadows": "pandas.core.algorithms.take_1d"
  },
  "type": "import"
 },
 "pandas.core.strings.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "pandas.core.strings.unicodedata": {
  "data": {
   "shadows": "unicodedata"
  },
  "type": "import"
 },
 "pandas.core.strings.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.core.strings.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.crosstab": {
  "data": {
   "shadows": "pandas.tools.pivot.crosstab"
  },
  "type": "import"
 },
 "pandas.cut": {
  "data": {
   "shadows": "pandas.tools.tile.cut"
  },
  "type": "import"
 },
 "pandas.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.formats": {
  "data": {},
  "type": "module"
 },
 "pandas.formats.style": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "pandas.formats.style.msg"
   ]
  },
  "type": "module"
 },
 "pandas.formats.style.MutableMapping": {
  "data": {
   "shadows": "collections.MutableMapping"
  },
  "type": "import"
 },
 "pandas.formats.style.Styler": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "jinja2.Template",
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.formats.style.Styler.__copy__": {
  "data": {
   "lineno": 397
  },
  "type": "function"
 },
 "pandas.formats.style.Styler.__deepcopy__": {
  "data": {
   "lineno": 403
  },
  "type": "function"
 },
 "pandas.formats.style.Styler.__init__": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "collections.defaultdict",
    "isinstance",
    "list",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.options.display.precision"
   ]
  },
  "type": "function"
 },
 "pandas.formats.style.Styler.__init__.default_display_func": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "pandas.core.common.is_float"
   ]
  },
  "type": "function"
 },
 "pandas.formats.style.Styler._apply": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "func",
    "pandas.core.indexing._non_reducing_slice",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.formats.style.Styler._applymap": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "func",
    "functools.partial",
    "pandas.IndexSlice",
    "pandas.core.indexing._non_reducing_slice"
   ]
  },
  "type": "function"
 },
 "pandas.formats.style.Styler._background_gradient": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "matplotlib.colors",
    "matplotlib.colors.Normalize",
    "matplotlib.colors.rgb2hex",
    "matplotlib.pyplot",
    "matplotlib.pyplot.cm.get_cmap",
    "norm",
    "pandas.formats.style.Styler",
    "pandas.formats.style._mpl",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pandas.formats.style.Styler._bar": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pandas.formats.style.Styler._compute": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas.formats.style.Styler._copy": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "pandas.formats.style.Styler",
    "pandas.formats.style.copy"
   ]
  },
  "type": "function"
 },
 "pandas.formats.style.Styler._highlight_extrema": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "numpy.where",
    "pandas.DataFrame",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pandas.formats.style.Styler._highlight_handler": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": [
    "pandas.core.indexing._maybe_numeric_slice",
    "pandas.core.indexing._non_reducing_slice"
   ]
  },
  "type": "function"
 },
 "pandas.formats.style.Styler._highlight_null": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "pandas.isnull",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pandas.formats.style.Styler._repr_html_": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "pandas.formats.style.Styler._translate": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "formatter",
    "len",
    "list",
    "pandas.compat.lzip",
    "pandas.compat.range",
    "str",
    "uuid.uuid1",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.formats.style.Styler._update_ctx": {
  "data": {
   "lineno": 368
  },
  "type": "function"
 },
 "pandas.formats.style.Styler.apply": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "func",
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.formats.style.Styler.applymap": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "func",
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.formats.style.Styler.background_gradient": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "pandas.core.indexing._maybe_numeric_slice",
    "pandas.core.indexing._non_reducing_slice"
   ]
  },
  "type": "function"
 },
 "pandas.formats.style.Styler.bar": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "pandas.core.indexing._maybe_numeric_slice",
    "pandas.core.indexing._non_reducing_slice"
   ]
  },
  "type": "function"
 },
 "pandas.formats.style.Styler.clear": {
  "data": {
   "lineno": 406
  },
  "type": "function"
 },
 "pandas.formats.style.Styler.export": {
  "data": {
   "lineno": 542
  },
  "type": "function"
 },
 "pandas.formats.style.Styler.format": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "collections.MutableMapping",
    "formatter",
    "formatter.items",
    "isinstance",
    "itertools.product",
    "len",
    "pandas.compat.range",
    "pandas.core.indexing._non_reducing_slice",
    "pandas.formats.style._maybe_wrap_formatter"
   ]
  },
  "type": "function"
 },
 "pandas.formats.style.Styler.highlight_max": {
  "data": {
   "lineno": 787
  },
  "type": "function"
 },
 "pandas.formats.style.Styler.highlight_min": {
  "data": {
   "lineno": 809
  },
  "type": "function"
 },
 "pandas.formats.style.Styler.highlight_null": {
  "data": {
   "lineno": 655
  },
  "type": "function"
 },
 "pandas.formats.style.Styler.render": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "any"
   ]
  },
  "type": "function"
 },
 "pandas.formats.style.Styler.set_caption": {
  "data": {
   "lineno": 599
  },
  "type": "function"
 },
 "pandas.formats.style.Styler.set_precision": {
  "data": {
   "lineno": 506
  },
  "type": "function"
 },
 "pandas.formats.style.Styler.set_properties": {
  "data": {
   "lineno": 723
  },
  "type": "function"
 },
 "pandas.formats.style.Styler.set_table_attributes": {
  "data": {
   "lineno": 523
  },
  "type": "function"
 },
 "pandas.formats.style.Styler.set_table_styles": {
  "data": {
   "lineno": 616
  },
  "type": "function"
 },
 "pandas.formats.style.Styler.set_uuid": {
  "data": {
   "lineno": 582
  },
  "type": "function"
 },
 "pandas.formats.style.Styler.use": {
  "data": {
   "lineno": 559
  },
  "type": "function"
 },
 "pandas.formats.style.Template": {
  "data": {
   "shadows": "jinja2.Template"
  },
  "type": "import"
 },
 "pandas.formats.style._maybe_numeric_slice": {
  "data": {
   "shadows": "pandas.core.indexing._maybe_numeric_slice"
  },
  "type": "import"
 },
 "pandas.formats.style._maybe_wrap_formatter": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "TypeError",
    "callable",
    "formatter",
    "formatter.format",
    "pandas.core.common.is_string_like",
    "pandas.formats.style.msg"
   ]
  },
  "type": "function"
 },
 "pandas.formats.style._mpl": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ImportError",
    "contextlib.contextmanager",
    "matplotlib.colors",
    "matplotlib.pyplot",
    "pandas.formats.style.has_mpl",
    "pandas.formats.style.no_mpl_message"
   ]
  },
  "type": "function"
 },
 "pandas.formats.style._non_reducing_slice": {
  "data": {
   "shadows": "pandas.core.indexing._non_reducing_slice"
  },
  "type": "import"
 },
 "pandas.formats.style.colors": {
  "data": {
   "shadows": "matplotlib.colors"
  },
  "type": "import"
 },
 "pandas.formats.style.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.formats.style.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "pandas.formats.style.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pandas.formats.style.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "pandas.formats.style.has_mpl": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pandas.formats.style.lzip": {
  "data": {
   "shadows": "pandas.compat.lzip"
  },
  "type": "import"
 },
 "pandas.formats.style.msg": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pandas.formats.style.no_mpl_message": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pandas.formats.style.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.formats.style.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "pandas.formats.style.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.formats.style.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pandas.formats.style.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "pandas.formats.style.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.formats.style.uuid1": {
  "data": {
   "shadows": "uuid.uuid1"
  },
  "type": "import"
 },
 "pandas.hard_dependencies": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "pandas.hashtable": {
  "data": {
   "shadows": "pandas.hashtable"
  },
  "type": "import"
 },
 "pandas.indexes": {
  "data": {},
  "type": "module"
 },
 "pandas.indexes.api": {
  "data": {},
  "type": "module"
 },
 "pandas.indexes.api.CategoricalIndex": {
  "data": {
   "shadows": "pandas.indexes.category.CategoricalIndex"
  },
  "type": "import"
 },
 "pandas.indexes.api.Float64Index": {
  "data": {
   "shadows": "pandas.indexes.numeric.Float64Index"
  },
  "type": "import"
 },
 "pandas.indexes.api.Index": {
  "data": {
   "shadows": "pandas.indexes.base.Index"
  },
  "type": "import"
 },
 "pandas.indexes.api.Int64Index": {
  "data": {
   "shadows": "pandas.indexes.numeric.Int64Index"
  },
  "type": "import"
 },
 "pandas.indexes.api.InvalidIndexError": {
  "data": {
   "shadows": "pandas.indexes.base.InvalidIndexError"
  },
  "type": "import"
 },
 "pandas.indexes.api.MultiIndex": {
  "data": {
   "shadows": "pandas.indexes.multi.MultiIndex"
  },
  "type": "import"
 },
 "pandas.indexes.api.NumericIndex": {
  "data": {
   "shadows": "pandas.indexes.numeric.NumericIndex"
  },
  "type": "import"
 },
 "pandas.indexes.api.RangeIndex": {
  "data": {
   "shadows": "pandas.indexes.range.RangeIndex"
  },
  "type": "import"
 },
 "pandas.indexes.api.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pandas.indexes.api._all_indexes_same": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "pandas.indexes.api._ensure_index": {
  "data": {
   "shadows": "pandas.indexes.base._ensure_index"
  },
  "type": "import"
 },
 "pandas.indexes.api._get_combined_index": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "len",
    "pandas.indexes.api._get_distinct_indexes",
    "pandas.indexes.api._union_indexes",
    "pandas.indexes.base.Index",
    "pandas.indexes.base._ensure_index"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.api._get_consensus_names": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "all",
    "len",
    "list",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.api._get_distinct_indexes": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "dict",
    "id",
    "list"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.api._get_na_value": {
  "data": {
   "shadows": "pandas.indexes.base._get_na_value"
  },
  "type": "import"
 },
 "pandas.indexes.api._new_Index": {
  "data": {
   "shadows": "pandas.indexes.base._new_Index"
  },
  "type": "import"
 },
 "pandas.indexes.api._sanitize_and_check": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "pandas.core.common._try_sort",
    "pandas.indexes.base.Index",
    "set",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.api._union_indexes": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "AssertionError",
    "_unique_indices",
    "hasattr",
    "isinstance",
    "len",
    "list",
    "pandas.indexes.api._get_consensus_names",
    "pandas.indexes.api._sanitize_and_check",
    "pandas.indexes.base.Index",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.api._union_indexes._unique_indices": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "conv",
    "pandas.indexes.base.Index",
    "pandas.lib.fast_unique_multiple_list"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.api._union_indexes._unique_indices.conv": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "isinstance",
    "pandas.indexes.base.Index"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.api.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.indexes.api.lib": {
  "data": {
   "shadows": "pandas.lib"
  },
  "type": "import"
 },
 "pandas.indexes.category": {
  "data": {
   "symbols_in_volume": [
    "pandas.indexes.category.CategoricalIndex"
   ]
  },
  "type": "module"
 },
 "pandas.indexes.category.Appender": {
  "data": {
   "shadows": "pandas.util.decorators.Appender"
  },
  "type": "import"
 },
 "pandas.indexes.category.Categorical": {
  "data": {
   "shadows": "pandas.core.categorical.Categorical"
  },
  "type": "import"
 },
 "pandas.indexes.category.CategoricalIndex": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "pandas.core.base.PandasDelegate",
    "pandas.index.Int64Engine",
    "pandas.indexes.base.Index"
   ]
  },
  "type": "class"
 },
 "pandas.indexes.category.CategoricalIndex.__array__": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.category.CategoricalIndex.__contains__": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.category.CategoricalIndex.__new__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "isinstance",
    "pandas.core.common.ABCCategorical",
    "pandas.indexes.category.CategoricalIndex",
    "pandas.lib.isscalar"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.category.CategoricalIndex._add_accessors": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "classmethod",
    "pandas.core.categorical.Categorical",
    "pandas.indexes.category.CategoricalIndex"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.category.CategoricalIndex._add_comparison_methods": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "_make_compare",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.category.CategoricalIndex._add_comparison_methods._make_compare": {
  "data": {
   "lineno": 555
  },
  "type": "function"
 },
 "pandas.indexes.category.CategoricalIndex._add_comparison_methods._make_compare._evaluate_compare": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "getattr",
    "isinstance",
    "len",
    "numpy.ndarray",
    "pandas.core.common.ABCCategorical",
    "pandas.core.common.ABCSeries",
    "pandas.indexes.base.Index",
    "pandas.indexes.category.CategoricalIndex"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.category.CategoricalIndex._can_reindex": {
  "data": {
   "lineno": 306
  },
  "type": "function"
 },
 "pandas.indexes.category.CategoricalIndex._convert_list_indexer": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.category.CategoricalIndex._create_categorical": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "isinstance",
    "pandas.core.categorical.Categorical",
    "pandas.core.common.ABCCategorical",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.category.CategoricalIndex._create_from_codes": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "pandas.core.categorical.Categorical.from_codes",
    "pandas.indexes.category.CategoricalIndex"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.category.CategoricalIndex._delegate_method": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "method",
    "pandas.indexes.category.CategoricalIndex",
    "pandas.lib.isscalar"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.category.CategoricalIndex._engine": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "len",
    "pandas.util.decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.category.CategoricalIndex._format_attrs": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "len",
    "pandas.core.config.get_option",
    "pandas.indexes.base.default_pprint"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.category.CategoricalIndex._formatter_func": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.category.CategoricalIndex._is_dtype_compat": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "pandas.core.common.is_categorical_dtype",
    "pandas.core.common.is_list_like",
    "pandas.indexes.category.CategoricalIndex"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.category.CategoricalIndex._isnan": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "pandas.util.decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.category.CategoricalIndex._reindex_non_unique": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "len",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.category.CategoricalIndex._shallow_copy": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "pandas.indexes.base._index_shared_docs",
    "pandas.indexes.category.CategoricalIndex",
    "pandas.util.decorators.Appender",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.category.CategoricalIndex._simple_new": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "classmethod",
    "object.__new__",
    "pandas.compat.iteritems",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.category.CategoricalIndex._to_safe_for_reshape": {
  "data": {
   "lineno": 283
  },
  "type": "function"
 },
 "pandas.indexes.category.CategoricalIndex.append": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "numpy.concatenate"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.category.CategoricalIndex.argsort": {
  "data": {
   "lineno": 263
  },
  "type": "function"
 },
 "pandas.indexes.category.CategoricalIndex.categories": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.category.CategoricalIndex.codes": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.category.CategoricalIndex.delete": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "numpy.delete"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.category.CategoricalIndex.duplicated": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "pandas.core.base._shared_docs",
    "pandas.hashtable.duplicated_int64",
    "pandas.indexes.base._index_doc_kwargs",
    "pandas.util.decorators.Appender",
    "pandas.util.decorators.deprecate_kwarg"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.category.CategoricalIndex.equals": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pandas.core.common.array_equivalent"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.category.CategoricalIndex.fillna": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "pandas.indexes.base._index_shared_docs",
    "pandas.indexes.category.CategoricalIndex",
    "pandas.util.decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.category.CategoricalIndex.get_indexer": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "NotImplementedError",
    "isinstance",
    "pandas.core.common._ensure_platform_int",
    "pandas.core.missing.clean_reindex_fill_method",
    "pandas.indexes.base._ensure_index",
    "pandas.indexes.category.CategoricalIndex"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.category.CategoricalIndex.get_indexer_non_unique": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "isinstance",
    "pandas.indexes.base._ensure_index",
    "pandas.indexes.category.CategoricalIndex"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.category.CategoricalIndex.get_loc": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.category.CategoricalIndex.get_values": {
  "data": {
   "lineno": 229
  },
  "type": "function"
 },
 "pandas.indexes.category.CategoricalIndex.inferred_type": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.category.CategoricalIndex.insert": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "TypeError",
    "numpy.concatenate"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.category.CategoricalIndex.is_unique": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "pandas.util.decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.category.CategoricalIndex.map": {
  "data": {
   "lineno": 474
  },
  "type": "function"
 },
 "pandas.indexes.category.CategoricalIndex.ordered": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.category.CategoricalIndex.reindex": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "len",
    "numpy.array",
    "numpy.asarray",
    "pandas.core.common.is_categorical_dtype",
    "pandas.core.missing",
    "pandas.indexes.base.Index",
    "pandas.indexes.base._ensure_index"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.category.CategoricalIndex.take": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "pandas.compat.numpy.function.validate_take",
    "pandas.core.common._ensure_platform_int",
    "pandas.indexes.base._index_shared_docs",
    "pandas.util.decorators.Appender",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.category.CategoricalIndex.values": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.category.Index": {
  "data": {
   "shadows": "pandas.indexes.base.Index"
  },
  "type": "import"
 },
 "pandas.indexes.category._index": {
  "data": {
   "shadows": "pandas.index"
  },
  "type": "import"
 },
 "pandas.indexes.category._index_shared_docs": {
  "data": {
   "shadows": "pandas.indexes.base._index_shared_docs"
  },
  "type": "import"
 },
 "pandas.indexes.category.base": {
  "data": {
   "shadows": "pandas.core.base"
  },
  "type": "import"
 },
 "pandas.indexes.category.cache_readonly": {
  "data": {
   "shadows": "pandas.util.decorators.cache_readonly"
  },
  "type": "import"
 },
 "pandas.indexes.category.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.indexes.category.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.indexes.category.deprecate_kwarg": {
  "data": {
   "shadows": "pandas.util.decorators.deprecate_kwarg"
  },
  "type": "import"
 },
 "pandas.indexes.category.duplicated_int64": {
  "data": {
   "shadows": "pandas.hashtable.duplicated_int64"
  },
  "type": "import"
 },
 "pandas.indexes.category.get_option": {
  "data": {
   "shadows": "pandas.core.config.get_option"
  },
  "type": "import"
 },
 "pandas.indexes.category.ibase": {
  "data": {
   "shadows": "pandas.indexes.base"
  },
  "type": "import"
 },
 "pandas.indexes.category.lib": {
  "data": {
   "shadows": "pandas.lib"
  },
  "type": "import"
 },
 "pandas.indexes.category.missing": {
  "data": {
   "shadows": "pandas.core.missing"
  },
  "type": "import"
 },
 "pandas.indexes.category.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.indexes.category.nv": {
  "data": {
   "shadows": "pandas.compat.numpy.function"
  },
  "type": "import"
 },
 "pandas.indexes.multi": {
  "data": {
   "symbols_in_volume": [
    "pandas.indexes.multi.MultiIndex"
   ]
  },
  "type": "module"
 },
 "pandas.indexes.multi.Appender": {
  "data": {
   "shadows": "pandas.util.decorators.Appender"
  },
  "type": "import"
 },
 "pandas.indexes.multi.Categorical": {
  "data": {
   "shadows": "pandas.core.categorical.Categorical"
  },
  "type": "import"
 },
 "pandas.indexes.multi.FrozenList": {
  "data": {
   "shadows": "pandas.core.base.FrozenList"
  },
  "type": "import"
 },
 "pandas.indexes.multi.Index": {
  "data": {
   "shadows": "pandas.indexes.base.Index"
  },
  "type": "import"
 },
 "pandas.indexes.multi.InvalidIndexError": {
  "data": {
   "shadows": "pandas.indexes.base.InvalidIndexError"
  },
  "type": "import"
 },
 "pandas.indexes.multi.MultiIndex": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "functools.partial",
    "pandas.core.base.FrozenList",
    "pandas.indexes.base.Index",
    "pandas.indexes.base.Index.set_names",
    "pandas.util.decorators.deprecate",
    "property"
   ]
  },
  "type": "class"
 },
 "pandas.indexes.multi.MultiIndex.__array__": {
  "data": {
   "lineno": 376
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.__contains__": {
  "data": {
   "lineno": 949,
   "symbols_in_volume": [
    "LookupError",
    "hash"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.__getitem__": {
  "data": {
   "lineno": 986,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.nan",
    "pandas.compat.zip",
    "pandas.core.common.is_bool_indexer",
    "pandas.indexes.multi.MultiIndex",
    "pandas.lib.isscalar",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.__getslice__": {
  "data": {
   "lineno": 1253,
   "symbols_in_volume": [
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.__len__": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.__new__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "int",
    "len",
    "object.__new__",
    "pandas.indexes.base.Index",
    "pandas.indexes.multi.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.__reduce__": {
  "data": {
   "lineno": 958,
   "symbols_in_volume": [
    "dict",
    "list",
    "pandas.indexes.base._new_Index"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.__setstate__": {
  "data": {
   "lineno": 965,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "pandas.indexes.base.Index",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex._assert_take_fillable": {
  "data": {
   "lineno": 1022,
   "symbols_in_volume": [
    "ValueError",
    "pandas.core.base.FrozenNDArray"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex._bounds": {
  "data": {
   "lineno": 2156,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex._constructor": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "pandas.indexes.multi.MultiIndex",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex._convert_can_do_setop": {
  "data": {
   "lineno": 2082,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "len",
    "pandas.indexes.multi.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex._drop_from_level": {
  "data": {
   "lineno": 1145,
   "symbols_in_volume": [
    "pandas.core.common._index_labels_to_array",
    "pandas.lib.ismember",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex._format_attrs": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "all",
    "pandas.indexes.base.default_pprint"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex._format_data": {
  "data": {
   "lineno": 429
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex._format_native_types": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "len",
    "numpy.append",
    "pandas.compat.zip",
    "pandas.indexes.multi.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex._format_space": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex._from_elements": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "pandas.indexes.multi.MultiIndex",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex._get_labels": {
  "data": {
   "lineno": 240
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex._get_level_indexer": {
  "data": {
   "lineno": 1734,
   "symbols_in_volume": [
    "KeyError",
    "bool",
    "convert_indexer",
    "isinstance",
    "len",
    "numpy.array",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex._get_level_indexer.convert_indexer": {
  "data": {
   "lineno": 1742,
   "symbols_in_volume": [
    "bool",
    "len",
    "numpy.arange",
    "numpy.in1d",
    "numpy.zeros",
    "pandas.Series",
    "pandas.core.common._ensure_platform_int",
    "pandas.indexes.base.Index"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex._get_level_number": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "ValueError",
    "int",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex._get_levels": {
  "data": {
   "lineno": 131
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex._get_names": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "pandas.core.base.FrozenList"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex._has_complex_internals": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex._is_v1": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex._is_v2": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex._partial_tup_index": {
  "data": {
   "lineno": 1486,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "enumerate",
    "len",
    "pandas.compat.zip",
    "pandas.lib.infer_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex._reference_duplicate_name": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex._set_labels": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "pandas.compat.zip",
    "pandas.core.base.FrozenList",
    "pandas.indexes.base._ensure_frozen"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex._set_levels": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "len",
    "list",
    "pandas.compat.zip",
    "pandas.core.base.FrozenList",
    "pandas.indexes.base._ensure_index"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex._set_names": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "pandas.compat.range",
    "pandas.compat.zip"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex._shallow_copy": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "pandas.indexes.base._index_shared_docs",
    "pandas.indexes.multi.MultiIndex",
    "pandas.util.decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex._shallow_copy_with_infer": {
  "data": {
   "lineno": 386
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex._to_safe_for_reshape": {
  "data": {
   "lineno": 735
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex._tuple_index": {
  "data": {
   "lineno": 1440,
   "symbols_in_volume": [
    "pandas.indexes.base.Index",
    "pandas.util.decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex._verify_integrity": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "pandas.compat.zip"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex._wrap_joined_index": {
  "data": {
   "lineno": 2168,
   "symbols_in_volume": [
    "pandas.indexes.multi.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.append": {
  "data": {
   "lineno": 1044,
   "symbols_in_volume": [
    "all",
    "isinstance",
    "list",
    "numpy.concatenate",
    "pandas.compat.range",
    "pandas.indexes.base.Index",
    "pandas.indexes.multi.MultiIndex",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.argsort": {
  "data": {
   "lineno": 1077
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.astype": {
  "data": {
   "lineno": 2076,
   "symbols_in_volume": [
    "TypeError",
    "numpy.dtype",
    "pandas.core.common.is_object_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.copy": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "copy.deepcopy",
    "pandas.indexes.multi.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.delete": {
  "data": {
   "lineno": 2140,
   "symbols_in_volume": [
    "numpy.delete",
    "pandas.indexes.multi.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.difference": {
  "data": {
   "lineno": 2047,
   "symbols_in_volume": [
    "len",
    "pandas.indexes.multi.MultiIndex",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.drop": {
  "data": {
   "lineno": 1087,
   "symbols_in_volume": [
    "AssertionError",
    "Exception",
    "KeyError",
    "ValueError",
    "int",
    "isinstance",
    "numpy.ndarray",
    "pandas.compat.lrange",
    "pandas.core.common.PerformanceWarning",
    "pandas.core.common._index_labels_to_array",
    "pandas.core.common.is_bool_indexer",
    "pandas.indexes.base.Index",
    "pandas.indexes.multi.warnings",
    "slice",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.droplevel": {
  "data": {
   "lineno": 1155,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "numpy.nan",
    "pandas.indexes.multi.MultiIndex",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.dtype": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "numpy.dtype",
    "pandas.util.decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.duplicated": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "len",
    "pandas.compat.map",
    "pandas.core.base._shared_docs",
    "pandas.core.groupby.get_group_index",
    "pandas.hashtable.duplicated_int64",
    "pandas.indexes.base._index_doc_kwargs",
    "pandas.util.decorators.Appender",
    "pandas.util.decorators.deprecate_kwarg"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.equal_levels": {
  "data": {
   "lineno": 1981,
   "symbols_in_volume": [
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.equals": {
  "data": {
   "lineno": 1949,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.asarray",
    "pandas.compat.range",
    "pandas.core.algorithms.take_nd",
    "pandas.core.common._values_from_object",
    "pandas.core.common.array_equivalent",
    "pandas.indexes.base._ensure_index",
    "pandas.indexes.multi.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.fillna": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.indexes.base._index_shared_docs",
    "pandas.util.decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.format": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.array",
    "object",
    "pandas.compat.zip",
    "pandas.core.algorithms.take_1d",
    "pandas.core.common.isnull",
    "pandas.core.config.get_option",
    "pandas.formats.format._get_adjustment",
    "pandas.formats.printing.pprint_thing",
    "pandas.indexes.multi._get_na_rep",
    "pandas.indexes.multi._sparsify"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.from_arrays": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": [
    "classmethod",
    "getattr",
    "len",
    "pandas.core.categorical.Categorical.from_array",
    "pandas.indexes.base.Index",
    "pandas.indexes.multi.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.from_product": {
  "data": {
   "lineno": 897,
   "symbols_in_volume": [
    "classmethod",
    "pandas.core.categorical.Categorical.from_array",
    "pandas.indexes.multi.MultiIndex",
    "pandas.tools.util.cartesian_product"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.from_tuples": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "TypeError",
    "classmethod",
    "isinstance",
    "len",
    "list",
    "numpy.ndarray",
    "pandas.compat.lzip",
    "pandas.indexes.base.Index",
    "pandas.indexes.multi.MultiIndex",
    "pandas.lib.to_object_array_tuples",
    "pandas.lib.tuples_to_object_array"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.get_indexer": {
  "data": {
   "lineno": 1321,
   "symbols_in_volume": [
    "Exception",
    "NotImplementedError",
    "isinstance",
    "len",
    "numpy.ones",
    "pandas.core.common._ensure_platform_int",
    "pandas.core.common.is_object_dtype",
    "pandas.core.missing.clean_reindex_fill_method",
    "pandas.indexes.base._ensure_index",
    "pandas.indexes.multi.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.get_level_values": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "_simple_new",
    "getattr",
    "pandas.core.algorithms.take_1d"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.get_loc": {
  "data": {
   "lineno": 1515,
   "symbols_in_volume": [
    "KeyError",
    "NotImplementedError",
    "_maybe_to_slice",
    "enumerate",
    "isinstance",
    "len",
    "numpy.arange",
    "pandas.compat.map",
    "pandas.core.common.PerformanceWarning",
    "pandas.core.common._values_from_object",
    "pandas.indexes.multi.warnings",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.get_loc._maybe_str_to_time_stamp": {
  "data": {
   "lineno": 1559,
   "symbols_in_volume": [
    "Exception",
    "getattr",
    "isinstance",
    "pandas.lib.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.get_loc._maybe_to_slice": {
  "data": {
   "lineno": 1534,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.empty",
    "numpy.ndarray",
    "pandas.lib.maybe_indices_to_slice",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.get_loc_level": {
  "data": {
   "lineno": 1601,
   "symbols_in_volume": [
    "AssertionError",
    "TypeError",
    "any",
    "bool",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "numpy.zeros",
    "pandas.compat.range",
    "pandas.compat.string_types",
    "pandas.compat.zip",
    "pandas.core.common._values_from_object",
    "pandas.core.indexing.maybe_droplevels",
    "partial_selection",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.get_loc_level.maybe_droplevels": {
  "data": {
   "lineno": 1615,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.get_loc_level.partial_selection": {
  "data": {
   "lineno": 1666,
   "symbols_in_volume": [
    "len",
    "pandas.compat.range",
    "pandas.core.indexing.maybe_droplevels",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.get_locs": {
  "data": {
   "lineno": 1819,
   "symbols_in_volume": [
    "Int64Index",
    "KeyError",
    "_convert_to_indexer",
    "_update_indexer",
    "enumerate",
    "isinstance",
    "len",
    "numpy.asarray",
    "pandas.core.common.is_bool_indexer",
    "pandas.core.common.is_list_like",
    "pandas.core.common.is_null_slice",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.get_locs._convert_to_indexer": {
  "data": {
   "lineno": 1845,
   "symbols_in_volume": [
    "Int64Index",
    "ValueError",
    "bool",
    "isinstance",
    "len",
    "numpy.zeros",
    "pandas.core.common.is_bool_indexer",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.get_locs._update_indexer": {
  "data": {
   "lineno": 1860,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.indexes.base.Index"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.get_slice_bound": {
  "data": {
   "lineno": 1451,
   "symbols_in_volume": [
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.get_value": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "Exception",
    "IndexError",
    "KeyError",
    "TypeError",
    "_try_mi",
    "isinstance",
    "numpy.datetime64",
    "pandas.compat.PY3",
    "pandas.compat.string_types",
    "pandas.core.common._values_from_object",
    "pandas.core.common.is_iterator",
    "pandas.index.get_value_at",
    "pandas.indexes.base.InvalidIndexError",
    "pandas.indexes.multi.datetime",
    "pandas.lib.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.get_value._try_mi": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "pandas.core.indexing.maybe_droplevels",
    "pandas.core.series.Series"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.inferred_type": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "pandas.util.decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.insert": {
  "data": {
   "lineno": 2100,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "numpy.insert",
    "pandas.compat.zip",
    "pandas.core.common._ensure_int64",
    "pandas.indexes.multi.MultiIndex",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.intersection": {
  "data": {
   "lineno": 2018,
   "symbols_in_volume": [
    "len",
    "pandas.compat.lzip",
    "pandas.indexes.multi.MultiIndex",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.is_all_dates": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.is_lexsorted": {
  "data": {
   "lineno": 781
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.is_lexsorted_for_tuple": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.is_unique": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "pandas.util.decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.isin": {
  "data": {
   "lineno": 2172,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.bool_",
    "numpy.lib.arraysetops.in1d",
    "numpy.zeros",
    "pandas.indexes.base.Index.isin.__doc__",
    "pandas.lib.ismember",
    "pandas.util.decorators.Appender",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.levshape": {
  "data": {
   "lineno": 945,
   "symbols_in_volume": [
    "len",
    "property",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.lexsort_depth": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "pandas.compat.range",
    "pandas.core.common._ensure_int64",
    "pandas.lib.is_lexsorted",
    "pandas.util.decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.nbytes": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "pandas.util.decorators.cache_readonly",
    "sum",
    "sys.getsizeof"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.nlevels": {
  "data": {
   "lineno": 941,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.reindex": {
  "data": {
   "lineno": 1378,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "hasattr",
    "isinstance",
    "len",
    "numpy.empty",
    "pandas.indexes.base.Index",
    "pandas.indexes.base._ensure_has_len",
    "pandas.indexes.base._ensure_index",
    "pandas.indexes.multi.MultiIndex",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.reorder_levels": {
  "data": {
   "lineno": 1234,
   "symbols_in_volume": [
    "AssertionError",
    "len",
    "pandas.indexes.multi.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.repeat": {
  "data": {
   "lineno": 1080,
   "symbols_in_volume": [
    "numpy.ndarray",
    "pandas.compat.numpy.function.validate_repeat",
    "pandas.indexes.multi.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.set_labels": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "TypeError",
    "pandas.core.common.is_list_like"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.set_levels": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "TypeError",
    "pandas.core.common.is_list_like"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.slice_locs": {
  "data": {
   "lineno": 1457,
   "symbols_in_volume": [
    "pandas.indexes.multi.MultiIndex",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.sortlevel": {
  "data": {
   "lineno": 1256,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "int",
    "isinstance",
    "len",
    "list",
    "pandas.compat.string_types",
    "pandas.core.common._ensure_platform_int",
    "pandas.core.groupby._indexer_from_factorized",
    "pandas.core.groupby._lexsort_indexer",
    "pandas.indexes.multi.MultiIndex",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.swaplevel": {
  "data": {
   "lineno": 1201,
   "symbols_in_volume": [
    "list",
    "pandas.indexes.multi.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.take": {
  "data": {
   "lineno": 1010,
   "symbols_in_volume": [
    "pandas.compat.numpy.function.validate_take",
    "pandas.core.common._ensure_platform_int",
    "pandas.indexes.base._index_shared_docs",
    "pandas.indexes.multi.MultiIndex",
    "pandas.util.decorators.Appender",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.to_hierarchical": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "numpy.repeat",
    "pandas.indexes.multi.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.truncate": {
  "data": {
   "lineno": 1919,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "pandas.indexes.multi.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.union": {
  "data": {
   "lineno": 1994,
   "symbols_in_volume": [
    "len",
    "pandas.compat.lzip",
    "pandas.indexes.multi.MultiIndex",
    "pandas.lib.fast_unique_multiple"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.values": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "numpy.asarray",
    "pandas.compat.zip",
    "pandas.core.algorithms.take_1d",
    "pandas.indexes.base._get_na_value",
    "pandas.lib.fast_zip",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi.MultiIndex.view": {
  "data": {
   "lineno": 380
  },
  "type": "function"
 },
 "pandas.indexes.multi.PerformanceWarning": {
  "data": {
   "shadows": "pandas.core.common.PerformanceWarning"
  },
  "type": "import"
 },
 "pandas.indexes.multi.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.indexes.multi.Timestamp": {
  "data": {
   "shadows": "pandas.lib.Timestamp"
  },
  "type": "import"
 },
 "pandas.indexes.multi._ensure_frozen": {
  "data": {
   "shadows": "pandas.indexes.base._ensure_frozen"
  },
  "type": "import"
 },
 "pandas.indexes.multi._ensure_index": {
  "data": {
   "shadows": "pandas.indexes.base._ensure_index"
  },
  "type": "import"
 },
 "pandas.indexes.multi._ensure_int64": {
  "data": {
   "shadows": "pandas.core.common._ensure_int64"
  },
  "type": "import"
 },
 "pandas.indexes.multi._get_adjustment": {
  "data": {
   "shadows": "pandas.formats.format._get_adjustment"
  },
  "type": "import"
 },
 "pandas.indexes.multi._get_na_rep": {
  "data": {
   "lineno": 2220,
   "symbols_in_volume": [
    "numpy.datetime64.get",
    "numpy.timedelta64.get"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi._get_na_value": {
  "data": {
   "shadows": "pandas.indexes.base._get_na_value"
  },
  "type": "import"
 },
 "pandas.indexes.multi._index": {
  "data": {
   "shadows": "pandas.index"
  },
  "type": "import"
 },
 "pandas.indexes.multi._index_shared_docs": {
  "data": {
   "shadows": "pandas.indexes.base._index_shared_docs"
  },
  "type": "import"
 },
 "pandas.indexes.multi._indexer_from_factorized": {
  "data": {
   "shadows": "pandas.core.groupby._indexer_from_factorized"
  },
  "type": "import"
 },
 "pandas.indexes.multi._lexsort_indexer": {
  "data": {
   "shadows": "pandas.core.groupby._lexsort_indexer"
  },
  "type": "import"
 },
 "pandas.indexes.multi._sparsify": {
  "data": {
   "lineno": 2192,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "pandas.compat.lzip",
    "pandas.compat.zip"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.multi._values_from_object": {
  "data": {
   "shadows": "pandas.core.common._values_from_object"
  },
  "type": "import"
 },
 "pandas.indexes.multi.algos": {
  "data": {
   "shadows": "pandas.core.algorithms"
  },
  "type": "import"
 },
 "pandas.indexes.multi.array_equivalent": {
  "data": {
   "shadows": "pandas.core.common.array_equivalent"
  },
  "type": "import"
 },
 "pandas.indexes.multi.base": {
  "data": {
   "shadows": "pandas.core.base"
  },
  "type": "import"
 },
 "pandas.indexes.multi.cache_readonly": {
  "data": {
   "shadows": "pandas.util.decorators.cache_readonly"
  },
  "type": "import"
 },
 "pandas.indexes.multi.cartesian_product": {
  "data": {
   "shadows": "pandas.tools.util.cartesian_product"
  },
  "type": "import"
 },
 "pandas.indexes.multi.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.indexes.multi.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.indexes.multi.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pandas.indexes.multi.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "pandas.indexes.multi.deprecate": {
  "data": {
   "shadows": "pandas.util.decorators.deprecate"
  },
  "type": "import"
 },
 "pandas.indexes.multi.deprecate_kwarg": {
  "data": {
   "shadows": "pandas.util.decorators.deprecate_kwarg"
  },
  "type": "import"
 },
 "pandas.indexes.multi.duplicated_int64": {
  "data": {
   "shadows": "pandas.hashtable.duplicated_int64"
  },
  "type": "import"
 },
 "pandas.indexes.multi.get_group_index": {
  "data": {
   "shadows": "pandas.core.groupby.get_group_index"
  },
  "type": "import"
 },
 "pandas.indexes.multi.get_option": {
  "data": {
   "shadows": "pandas.core.config.get_option"
  },
  "type": "import"
 },
 "pandas.indexes.multi.getsizeof": {
  "data": {
   "shadows": "sys.getsizeof"
  },
  "type": "import"
 },
 "pandas.indexes.multi.ibase": {
  "data": {
   "shadows": "pandas.indexes.base"
  },
  "type": "import"
 },
 "pandas.indexes.multi.is_bool_indexer": {
  "data": {
   "shadows": "pandas.core.common.is_bool_indexer"
  },
  "type": "import"
 },
 "pandas.indexes.multi.is_iterator": {
  "data": {
   "shadows": "pandas.core.common.is_iterator"
  },
  "type": "import"
 },
 "pandas.indexes.multi.is_list_like": {
  "data": {
   "shadows": "pandas.core.common.is_list_like"
  },
  "type": "import"
 },
 "pandas.indexes.multi.is_null_slice": {
  "data": {
   "shadows": "pandas.core.common.is_null_slice"
  },
  "type": "import"
 },
 "pandas.indexes.multi.is_object_dtype": {
  "data": {
   "shadows": "pandas.core.common.is_object_dtype"
  },
  "type": "import"
 },
 "pandas.indexes.multi.isnull": {
  "data": {
   "shadows": "pandas.core.common.isnull"
  },
  "type": "import"
 },
 "pandas.indexes.multi.lib": {
  "data": {
   "shadows": "pandas.lib"
  },
  "type": "import"
 },
 "pandas.indexes.multi.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.indexes.multi.lzip": {
  "data": {
   "shadows": "pandas.compat.lzip"
  },
  "type": "import"
 },
 "pandas.indexes.multi.map": {
  "data": {
   "shadows": "pandas.compat.map"
  },
  "type": "import"
 },
 "pandas.indexes.multi.maybe_droplevels": {
  "data": {
   "shadows": "pandas.core.indexing.maybe_droplevels"
  },
  "type": "import"
 },
 "pandas.indexes.multi.missing": {
  "data": {
   "shadows": "pandas.core.missing"
  },
  "type": "import"
 },
 "pandas.indexes.multi.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.indexes.multi.nv": {
  "data": {
   "shadows": "pandas.compat.numpy.function"
  },
  "type": "import"
 },
 "pandas.indexes.multi.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "pandas.indexes.multi.pprint_thing": {
  "data": {
   "shadows": "pandas.formats.printing.pprint_thing"
  },
  "type": "import"
 },
 "pandas.indexes.multi.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.indexes.multi.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.indexes.multi.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.indexes.numeric": {
  "data": {
   "symbols_in_volume": [
    "pandas.indexes.numeric.Float64Index",
    "pandas.indexes.numeric.Int64Index"
   ]
  },
  "type": "module"
 },
 "pandas.indexes.numeric.Appender": {
  "data": {
   "shadows": "pandas.util.decorators.Appender"
  },
  "type": "import"
 },
 "pandas.indexes.numeric.Float64Index": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "pandas.algos.arrmap_float64",
    "pandas.algos.groupby_float64",
    "pandas.algos.inner_join_indexer_float64",
    "pandas.algos.left_join_indexer_float64",
    "pandas.algos.left_join_indexer_unique_float64",
    "pandas.algos.outer_join_indexer_float64",
    "pandas.index.Float64Engine",
    "pandas.indexes.numeric.NumericIndex"
   ]
  },
  "type": "class"
 },
 "pandas.indexes.numeric.Float64Index.__contains__": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "len",
    "numpy.isnan",
    "pandas.indexes.base._try_get_item",
    "pandas.indexes.numeric.Float64Index",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.numeric.Float64Index.__new__": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "TypeError",
    "issubclass",
    "numpy.array",
    "numpy.dtype",
    "numpy.float64",
    "pandas.compat.string_types"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.numeric.Float64Index._convert_scalar_indexer": {
  "data": {
   "lineno": 253
  },
  "type": "function"
 },
 "pandas.indexes.numeric.Float64Index._convert_slice_indexer": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "isinstance",
    "pandas.indexes.numeric.Float64Index",
    "slice",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.numeric.Float64Index._format_native_types": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "pandas.formats.format.FloatArrayFormatter"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.numeric.Float64Index.astype": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "TypeError",
    "pandas.core.common.is_float_dtype",
    "pandas.core.common.is_integer_dtype",
    "pandas.core.common.is_object_dtype",
    "pandas.core.common.pandas_dtype",
    "pandas.indexes.base.Index"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.numeric.Float64Index.equals": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "pandas.core.common.is_dtype_equal",
    "pandas.indexes.numeric.Float64Index"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.numeric.Float64Index.get_loc": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "IndexError",
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "numpy.all",
    "numpy.isnan",
    "pandas.indexes.numeric.Float64Index",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.numeric.Float64Index.get_value": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "pandas.core.common._values_from_object",
    "pandas.core.indexing.maybe_droplevels",
    "pandas.core.series.Series",
    "pandas.indexes.base.InvalidIndexError",
    "pandas.lib.isscalar"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.numeric.Float64Index.inferred_type": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.numeric.Float64Index.is_all_dates": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.numeric.Float64Index.is_unique": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "pandas.indexes.numeric.Float64Index",
    "pandas.util.decorators.cache_readonly",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.numeric.Float64Index.isin": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "pandas.core.common.isnull",
    "pandas.indexes.base.Index.isin.__doc__",
    "pandas.lib.ismember_nans",
    "pandas.util.decorators.Appender",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.numeric.FloatArrayFormatter": {
  "data": {
   "shadows": "pandas.formats.format.FloatArrayFormatter"
  },
  "type": "import"
 },
 "pandas.indexes.numeric.Index": {
  "data": {
   "shadows": "pandas.indexes.base.Index"
  },
  "type": "import"
 },
 "pandas.indexes.numeric.Int64Index": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "pandas.algos.arrmap_int64",
    "pandas.algos.groupby_int64",
    "pandas.algos.inner_join_indexer_int64",
    "pandas.algos.left_join_indexer_int64",
    "pandas.algos.left_join_indexer_unique_int64",
    "pandas.algos.outer_join_indexer_int64",
    "pandas.index.Int64Engine",
    "pandas.indexes.numeric.NumericIndex"
   ]
  },
  "type": "class"
 },
 "pandas.indexes.numeric.Int64Index.__new__": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "TypeError",
    "issubclass",
    "len",
    "numpy.array",
    "numpy.int64",
    "numpy.integer",
    "pandas.compat.string_types"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.numeric.Int64Index._convert_scalar_indexer": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "pandas.indexes.numeric.Int64Index",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.numeric.Int64Index._wrap_joined_index": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "pandas.indexes.numeric.Int64Index"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.numeric.Int64Index.asi8": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.numeric.Int64Index.equals": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "TypeError",
    "pandas.core.common._values_from_object",
    "pandas.core.common.array_equivalent"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.numeric.Int64Index.inferred_type": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.numeric.Int64Index.is_all_dates": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.numeric.InvalidIndexError": {
  "data": {
   "shadows": "pandas.indexes.base.InvalidIndexError"
  },
  "type": "import"
 },
 "pandas.indexes.numeric.NumericIndex": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "pandas.indexes.base.Index"
   ]
  },
  "type": "class"
 },
 "pandas.indexes.numeric.NumericIndex._convert_tolerance": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.numeric.NumericIndex._maybe_cast_slice_bound": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "pandas.indexes.numeric.Series": {
  "data": {
   "shadows": "pandas.core.series.Series"
  },
  "type": "import"
 },
 "pandas.indexes.numeric._algos": {
  "data": {
   "shadows": "pandas.algos"
  },
  "type": "import"
 },
 "pandas.indexes.numeric._index": {
  "data": {
   "shadows": "pandas.index"
  },
  "type": "import"
 },
 "pandas.indexes.numeric.cache_readonly": {
  "data": {
   "shadows": "pandas.util.decorators.cache_readonly"
  },
  "type": "import"
 },
 "pandas.indexes.numeric.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.indexes.numeric.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.indexes.numeric.ibase": {
  "data": {
   "shadows": "pandas.indexes.base"
  },
  "type": "import"
 },
 "pandas.indexes.numeric.is_dtype_equal": {
  "data": {
   "shadows": "pandas.core.common.is_dtype_equal"
  },
  "type": "import"
 },
 "pandas.indexes.numeric.is_float_dtype": {
  "data": {
   "shadows": "pandas.core.common.is_float_dtype"
  },
  "type": "import"
 },
 "pandas.indexes.numeric.is_integer_dtype": {
  "data": {
   "shadows": "pandas.core.common.is_integer_dtype"
  },
  "type": "import"
 },
 "pandas.indexes.numeric.is_object_dtype": {
  "data": {
   "shadows": "pandas.core.common.is_object_dtype"
  },
  "type": "import"
 },
 "pandas.indexes.numeric.isnull": {
  "data": {
   "shadows": "pandas.core.common.isnull"
  },
  "type": "import"
 },
 "pandas.indexes.numeric.lib": {
  "data": {
   "shadows": "pandas.lib"
  },
  "type": "import"
 },
 "pandas.indexes.numeric.maybe_droplevels": {
  "data": {
   "shadows": "pandas.core.indexing.maybe_droplevels"
  },
  "type": "import"
 },
 "pandas.indexes.numeric.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.indexes.numeric.pandas_dtype": {
  "data": {
   "shadows": "pandas.core.common.pandas_dtype"
  },
  "type": "import"
 },
 "pandas.indexes.range": {
  "data": {
   "symbols_in_volume": [
    "pandas.indexes.range.RangeIndex"
   ]
  },
  "type": "module"
 },
 "pandas.indexes.range.Appender": {
  "data": {
   "shadows": "pandas.util.decorators.Appender"
  },
  "type": "import"
 },
 "pandas.indexes.range.Index": {
  "data": {
   "shadows": "pandas.indexes.base.Index"
  },
  "type": "import"
 },
 "pandas.indexes.range.Int64Index": {
  "data": {
   "shadows": "pandas.indexes.numeric.Int64Index"
  },
  "type": "import"
 },
 "pandas.indexes.range.RangeIndex": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "pandas.index.Int64Engine",
    "pandas.indexes.numeric.Int64Index"
   ]
  },
  "type": "class"
 },
 "pandas.indexes.range.RangeIndex.__floordiv__": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "len",
    "pandas.core.common.is_integer",
    "pandas.indexes.range.RangeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.range.RangeIndex.__getitem__": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "IndexError",
    "int",
    "isinstance",
    "len",
    "pandas.indexes.range.RangeIndex",
    "pandas.lib.isscalar",
    "slice",
    "super",
    "super_getitem"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.range.RangeIndex.__len__": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "max"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.range.RangeIndex.__new__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ValueError",
    "_ensure_int",
    "dict",
    "isinstance",
    "pandas.indexes.range.RangeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.range.RangeIndex.__new__._ensure_int": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "AssertionError",
    "TypeError",
    "ValueError",
    "int",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.range.RangeIndex.__reduce__": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "dict",
    "pandas.indexes.base._new_Index"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.range.RangeIndex._add_numeric_methods_binary": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "_make_evaluate_binop",
    "classmethod",
    "pandas.compat.PY3",
    "pandas.indexes.range.operator"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.range.RangeIndex._add_numeric_methods_binary._make_evaluate_binop": {
  "data": {
   "lineno": 532
  },
  "type": "function"
 },
 "pandas.indexes.range.RangeIndex._add_numeric_methods_binary._make_evaluate_binop._evaluate_numeric_binop": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "ValueError",
    "all",
    "isinstance",
    "op",
    "pandas.core.common.is_integer",
    "pandas.indexes.base.Index",
    "pandas.indexes.range.RangeIndex",
    "reversed",
    "step"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.range.RangeIndex._constructor": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "pandas.indexes.numeric.Int64Index",
    "pandas.util.decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.range.RangeIndex._data": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.int64",
    "pandas.util.decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.range.RangeIndex._extended_gcd": {
  "data": {
   "lineno": 338
  },
  "type": "function"
 },
 "pandas.indexes.range.RangeIndex._format_attrs": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "pandas.indexes.base.default_pprint"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.range.RangeIndex._format_data": {
  "data": {
   "lineno": 178
  },
  "type": "function"
 },
 "pandas.indexes.range.RangeIndex._get_data_as_items": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "pandas.indexes.range.RangeIndex._int64index": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "pandas.indexes.numeric.Int64Index",
    "pandas.util.decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.range.RangeIndex._max_fitting_element": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.range.RangeIndex._min_fitting_element": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.range.RangeIndex._shallow_copy": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "dict",
    "pandas.indexes.base._index_shared_docs",
    "pandas.indexes.range.RangeIndex",
    "pandas.util.decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.range.RangeIndex._simple_new": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "TypeError",
    "classmethod",
    "object.__new__",
    "pandas.compat.iteritems",
    "pandas.core.common.is_integer",
    "pandas.indexes.base.Index",
    "pandas.indexes.range.RangeIndex",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.range.RangeIndex._validate_dtype": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "TypeError",
    "pandas.core.common.is_int64_dtype",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.range.RangeIndex.argsort": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.compat.numpy.function.validate_argsort"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.range.RangeIndex.copy": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "dict",
    "pandas.indexes.base._index_shared_docs",
    "pandas.indexes.range.RangeIndex",
    "pandas.util.decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.range.RangeIndex.dtype": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.int64",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.range.RangeIndex.equals": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "pandas.indexes.range.RangeIndex",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.range.RangeIndex.from_range": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "TypeError",
    "classmethod",
    "isinstance",
    "len",
    "pandas.compat.PY3",
    "pandas.compat.range",
    "pandas.indexes.range.RangeIndex",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.range.RangeIndex.has_duplicates": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.range.RangeIndex.intersection": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "isinstance",
    "max",
    "min",
    "pandas.indexes.range.RangeIndex",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.range.RangeIndex.is_unique": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.range.RangeIndex.join": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "pandas.indexes.range.RangeIndex",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.range.RangeIndex.memory_usage": {
  "data": {
   "lineno": 188
  },
  "type": "function"
 },
 "pandas.indexes.range.RangeIndex.nbytes": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "getattr",
    "pandas.util.decorators.cache_readonly",
    "sum",
    "sys.getsizeof"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.range.RangeIndex.size": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.range.RangeIndex.tolist": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "pandas.compat.lrange"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.range.RangeIndex.union": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "abs",
    "isinstance",
    "len",
    "max",
    "min",
    "pandas.indexes.range.RangeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.indexes.range._index": {
  "data": {
   "shadows": "pandas.index"
  },
  "type": "import"
 },
 "pandas.indexes.range._index_shared_docs": {
  "data": {
   "shadows": "pandas.indexes.base._index_shared_docs"
  },
  "type": "import"
 },
 "pandas.indexes.range.cache_readonly": {
  "data": {
   "shadows": "pandas.util.decorators.cache_readonly"
  },
  "type": "import"
 },
 "pandas.indexes.range.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.indexes.range.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.indexes.range.getsizeof": {
  "data": {
   "shadows": "sys.getsizeof"
  },
  "type": "import"
 },
 "pandas.indexes.range.ibase": {
  "data": {
   "shadows": "pandas.indexes.base"
  },
  "type": "import"
 },
 "pandas.indexes.range.lib": {
  "data": {
   "shadows": "pandas.lib"
  },
  "type": "import"
 },
 "pandas.indexes.range.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.indexes.range.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.indexes.range.nv": {
  "data": {
   "shadows": "pandas.compat.numpy.function"
  },
  "type": "import"
 },
 "pandas.indexes.range.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "pandas.indexes.range.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.info": {
  "data": {},
  "type": "module"
 },
 "pandas.io": {
  "data": {},
  "type": "module"
 },
 "pandas.io.api": {
  "data": {},
  "type": "module"
 },
 "pandas.io.api.ExcelFile": {
  "data": {
   "shadows": "pandas.io.excel.ExcelFile"
  },
  "type": "import"
 },
 "pandas.io.api.ExcelWriter": {
  "data": {
   "shadows": "pandas.io.excel.ExcelWriter"
  },
  "type": "import"
 },
 "pandas.io.api.HDFStore": {
  "data": {
   "shadows": "pandas.io.pytables.HDFStore"
  },
  "type": "import"
 },
 "pandas.io.api.Term": {
  "data": {
   "shadows": "pandas.io.pytables.Term"
  },
  "type": "import"
 },
 "pandas.io.api.get_store": {
  "data": {
   "shadows": "pandas.io.pytables.get_store"
  },
  "type": "import"
 },
 "pandas.io.api.read_clipboard": {
  "data": {
   "shadows": "pandas.io.clipboard.read_clipboard"
  },
  "type": "import"
 },
 "pandas.io.api.read_csv": {
  "data": {
   "shadows": "pandas.io.parsers.read_csv"
  },
  "type": "import"
 },
 "pandas.io.api.read_excel": {
  "data": {
   "shadows": "pandas.io.excel.read_excel"
  },
  "type": "import"
 },
 "pandas.io.api.read_fwf": {
  "data": {
   "shadows": "pandas.io.parsers.read_fwf"
  },
  "type": "import"
 },
 "pandas.io.api.read_gbq": {
  "data": {
   "shadows": "pandas.io.gbq.read_gbq"
  },
  "type": "import"
 },
 "pandas.io.api.read_hdf": {
  "data": {
   "shadows": "pandas.io.pytables.read_hdf"
  },
  "type": "import"
 },
 "pandas.io.api.read_html": {
  "data": {
   "shadows": "pandas.io.html.read_html"
  },
  "type": "import"
 },
 "pandas.io.api.read_json": {
  "data": {
   "shadows": "pandas.io.json.read_json"
  },
  "type": "import"
 },
 "pandas.io.api.read_msgpack": {
  "data": {
   "shadows": "pandas.io.packers.read_msgpack"
  },
  "type": "import"
 },
 "pandas.io.api.read_pickle": {
  "data": {
   "shadows": "pandas.io.pickle.read_pickle"
  },
  "type": "import"
 },
 "pandas.io.api.read_sas": {
  "data": {
   "shadows": "pandas.io.sas.sasreader.read_sas"
  },
  "type": "import"
 },
 "pandas.io.api.read_sql": {
  "data": {
   "shadows": "pandas.io.sql.read_sql"
  },
  "type": "import"
 },
 "pandas.io.api.read_sql_query": {
  "data": {
   "shadows": "pandas.io.sql.read_sql_query"
  },
  "type": "import"
 },
 "pandas.io.api.read_sql_table": {
  "data": {
   "shadows": "pandas.io.sql.read_sql_table"
  },
  "type": "import"
 },
 "pandas.io.api.read_stata": {
  "data": {
   "shadows": "pandas.io.stata.read_stata"
  },
  "type": "import"
 },
 "pandas.io.api.read_table": {
  "data": {
   "shadows": "pandas.io.parsers.read_table"
  },
  "type": "import"
 },
 "pandas.io.api.to_msgpack": {
  "data": {
   "shadows": "pandas.io.packers.to_msgpack"
  },
  "type": "import"
 },
 "pandas.io.api.to_pickle": {
  "data": {
   "shadows": "pandas.io.pickle.to_pickle"
  },
  "type": "import"
 },
 "pandas.io.auth": {
  "data": {
   "symbols_in_volume": [
    "oauth2client.client.OOB_CALLBACK_URN",
    "pandas.io.auth.gflags",
    "pandas.io.auth.os"
   ]
  },
  "type": "module"
 },
 "pandas.io.auth.AuthenticationConfigError": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "pandas.io.auth.DEFAULT_SCOPE": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "pandas.io.auth.DEFAULT_SECRETS": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "pandas.io.auth.DEFAULT_TOKEN_FILE": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pandas.io.auth.DOC_URL": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pandas.io.auth.FLAGS": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pandas.io.auth.FLOWS": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pandas.io.auth.MISSING_CLIENT_MSG": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pandas.io.auth.OOB_CALLBACK_URN": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pandas.io.auth.auth_file": {
  "data": {
   "shadows": "oauth2client.file"
  },
  "type": "import"
 },
 "pandas.io.auth.authenticate": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "oauth2client.tools.run",
    "pandas.io.auth.httplib2"
   ]
  },
  "type": "function"
 },
 "pandas.io.auth.gapi": {
  "data": {
   "shadows": "apiclient.discovery"
  },
  "type": "import"
 },
 "pandas.io.auth.get_flow": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "oauth2client.client.flow_from_clientsecrets",
    "pandas.io.auth.AuthenticationConfigError",
    "pandas.io.auth.FLOWS",
    "pandas.io.auth.MISSING_CLIENT_MSG",
    "pandas.io.auth.os"
   ]
  },
  "type": "function"
 },
 "pandas.io.auth.gflags": {
  "data": {
   "shadows": "gflags"
  },
  "type": "import"
 },
 "pandas.io.auth.httplib2": {
  "data": {
   "shadows": "httplib2"
  },
  "type": "import"
 },
 "pandas.io.auth.init_service": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "apiclient.discovery.build"
   ]
  },
  "type": "function"
 },
 "pandas.io.auth.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandas.io.auth.make_token_store": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "oauth2client.file.Storage",
    "pandas.io.auth.DEFAULT_TOKEN_FILE"
   ]
  },
  "type": "function"
 },
 "pandas.io.auth.oauth": {
  "data": {
   "shadows": "oauth2client.client"
  },
  "type": "import"
 },
 "pandas.io.auth.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.io.auth.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.io.auth.process_flags": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "getattr",
    "pandas.io.auth.FLAGS",
    "pandas.io.auth.gflags",
    "pandas.io.auth.logging",
    "pandas.io.auth.sys",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.auth.reset_default_token_store": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "pandas.io.auth.DEFAULT_TOKEN_FILE",
    "pandas.io.auth.os"
   ]
  },
  "type": "function"
 },
 "pandas.io.auth.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.io.auth.tools": {
  "data": {
   "shadows": "oauth2client.tools"
  },
  "type": "import"
 },
 "pandas.io.clipboard": {
  "data": {},
  "type": "module"
 },
 "pandas.io.clipboard.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.io.clipboard.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.io.clipboard.clipboard_get": {
  "data": {
   "shadows": "pandas.util.clipboard.clipboard_get"
  },
  "type": "import"
 },
 "pandas.io.clipboard.clipboard_set": {
  "data": {
   "shadows": "pandas.util.clipboard.clipboard_set"
  },
  "type": "import"
 },
 "pandas.io.clipboard.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.io.clipboard.get_option": {
  "data": {
   "shadows": "pandas.get_option"
  },
  "type": "import"
 },
 "pandas.io.clipboard.option_context": {
  "data": {
   "shadows": "pandas.option_context"
  },
  "type": "import"
 },
 "pandas.io.clipboard.read_clipboard": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "len",
    "pandas.compat.PY3",
    "pandas.compat.StringIO",
    "pandas.compat.bytes_to_str",
    "pandas.get_option",
    "pandas.io.parsers.read_table",
    "pandas.util.clipboard.clipboard_get",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.io.clipboard.read_table": {
  "data": {
   "shadows": "pandas.io.parsers.read_table"
  },
  "type": "import"
 },
 "pandas.io.clipboard.to_clipboard": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.option_context",
    "pandas.util.clipboard.clipboard_set",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.common": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "TypeError",
    "pandas.compat.PY3",
    "pandas.io.common.BaseIterator",
    "pandas.io.common._VALID_URLS",
    "pandas.io.common.sys",
    "pandas.io.common.zipfile",
    "set",
    "urllib.request.urlopen",
    "urlparse.uses_netloc",
    "urlparse.uses_params",
    "urlparse.uses_relative"
   ]
  },
  "type": "module"
 },
 "pandas.io.common.AbstractMethodError": {
  "data": {
   "shadows": "pandas.core.common.AbstractMethodError"
  },
  "type": "import"
 },
 "pandas.io.common.BaseIterator": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.io.common.BaseIterator.__iter__": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "pandas.io.common.BaseIterator.__next__": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "pandas.core.common.AbstractMethodError"
   ]
  },
  "type": "function"
 },
 "pandas.io.common.BotoFileLikeReader": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "boto.s3.key.Key",
    "next"
   ]
  },
  "type": "class"
 },
 "pandas.io.common.BotoFileLikeReader.__init__": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "pandas.compat.PY3",
    "pandas.io.common.BotoFileLikeReader",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.common.BotoFileLikeReader.close": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "pandas.io.common.BotoFileLikeReader",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.common.BotoFileLikeReader.next": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "pandas.io.common.BotoFileLikeReader.read": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "pandas.compat.PY3",
    "pandas.io.common.BotoFileLikeReader",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.common.BotoFileLikeReader.readline": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "StopIteration"
   ]
  },
  "type": "function"
 },
 "pandas.io.common.BotoFileLikeReader.seekable": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "pandas.io.common.BytesIO": {
  "data": {
   "shadows": "pandas.compat.BytesIO"
  },
  "type": "import"
 },
 "pandas.io.common.CParserError": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "pandas.io.common.DtypeWarning": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "Warning"
   ]
  },
  "type": "class"
 },
 "pandas.io.common.EmptyDataError": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "pandas.io.common.HTTPException": {
  "data": {
   "shadows": "httplib.HTTPException"
  },
  "type": "import"
 },
 "pandas.io.common.LocalPath": {
  "data": {
   "shadows": "py.path.local"
  },
  "type": "import"
 },
 "pandas.io.common.ParserWarning": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "Warning"
   ]
  },
  "type": "class"
 },
 "pandas.io.common.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.io.common.TextIOWrapper": {
  "data": {
   "shadows": "io.TextIOWrapper"
  },
  "type": "import"
 },
 "pandas.io.common.URLError": {
  "data": {
   "shadows": "urllib2.URLError"
  },
  "type": "import"
 },
 "pandas.io.common.UTF8Recoder": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "pandas.io.common.BaseIterator"
   ]
  },
  "type": "class"
 },
 "pandas.io.common.UTF8Recoder.__init__": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "pandas.io.common.codecs"
   ]
  },
  "type": "function"
 },
 "pandas.io.common.UTF8Recoder.next": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "next"
   ]
  },
  "type": "function"
 },
 "pandas.io.common.UTF8Recoder.read": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "bytes"
   ]
  },
  "type": "function"
 },
 "pandas.io.common.UTF8Recoder.readline": {
  "data": {
   "lineno": 443
  },
  "type": "function"
 },
 "pandas.io.common.UnicodeReader": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "pandas.io.common.BaseIterator"
   ]
  },
  "type": "class"
 },
 "pandas.io.common.UnicodeReader.__init__": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "pandas.io.common.UTF8Recoder",
    "pandas.io.common.csv"
   ]
  },
  "type": "function"
 },
 "pandas.io.common.UnicodeReader.__next__": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "next",
    "pandas.compat.text_type"
   ]
  },
  "type": "function"
 },
 "pandas.io.common.UnicodeWriter": {
  "data": {
   "lineno": 476
  },
  "type": "class"
 },
 "pandas.io.common.UnicodeWriter.__init__": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.io.common.codecs",
    "pandas.io.common.csv"
   ]
  },
  "type": "function"
 },
 "pandas.io.common.UnicodeWriter.writerow": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "_check_as_is",
    "pandas.formats.printing.pprint_thing"
   ]
  },
  "type": "function"
 },
 "pandas.io.common.UnicodeWriter.writerow._check_as_is": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "isinstance",
    "pandas.core.common.is_number",
    "pandas.io.common.csv",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.common.UnicodeWriter.writerows": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "_check_as_is",
    "enumerate",
    "pandas.formats.printing.pprint_thing"
   ]
  },
  "type": "function"
 },
 "pandas.io.common.UnicodeWriter.writerows._check_as_is": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "isinstance",
    "pandas.core.common.is_number",
    "pandas.io.common.csv",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.common.ZipFile": {
  "data": {
   "lineno": 377
  },
  "type": "constant"
 },
 "pandas.io.common._PATHLIB_INSTALLED": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pandas.io.common._PY_PATH_INSTALLED": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pandas.io.common._VALID_URLS": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "pandas.io.common._expand_user": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "isinstance",
    "pandas.compat.string_types",
    "pandas.io.common.os"
   ]
  },
  "type": "function"
 },
 "pandas.io.common._get_handle": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "ValueError",
    "io.TextIOWrapper",
    "len",
    "open",
    "pandas.compat.PY3",
    "pandas.compat.import_lzma",
    "pandas.io.common.bz2",
    "pandas.io.common.gzip",
    "pandas.io.common.zipfile"
   ]
  },
  "type": "function"
 },
 "pandas.io.common._is_s3_url": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "urlparse.urlparse"
   ]
  },
  "type": "function"
 },
 "pandas.io.common._is_url": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "pandas.io.common._VALID_URLS",
    "urlparse.urlparse"
   ]
  },
  "type": "function"
 },
 "pandas.io.common._stringify_path": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "isinstance",
    "pandas.compat.text_type",
    "pandas.io.common._PATHLIB_INSTALLED",
    "pandas.io.common._PY_PATH_INSTALLED",
    "pandas.io.common.pathlib",
    "py.path.local"
   ]
  },
  "type": "function"
 },
 "pandas.io.common._urlopen": {
  "data": {
   "shadows": "urllib2.urlopen"
  },
  "type": "import"
 },
 "pandas.io.common._validate_header_arg": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pandas.io.common.boto": {
  "data": {
   "shadows": "boto"
  },
  "type": "import"
 },
 "pandas.io.common.bz2": {
  "data": {
   "shadows": "bz2"
  },
  "type": "import"
 },
 "pandas.io.common.closing": {
  "data": {
   "shadows": "contextlib.closing"
  },
  "type": "import"
 },
 "pandas.io.common.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "pandas.io.common.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.io.common.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "pandas.io.common.csv": {
  "data": {
   "shadows": "csv"
  },
  "type": "import"
 },
 "pandas.io.common.file_path_to_url": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "urllib.pathname2url",
    "urlparse.urljoin"
   ]
  },
  "type": "function"
 },
 "pandas.io.common.get_filepath_or_buffer": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "ImportError",
    "list",
    "pandas.compat.BytesIO",
    "pandas.compat.PY2",
    "pandas.io.common.BotoFileLikeReader",
    "pandas.io.common._expand_user",
    "pandas.io.common._is_s3_url",
    "pandas.io.common._is_url",
    "pandas.io.common._stringify_path",
    "pandas.io.common.boto",
    "pandas.io.common.maybe_read_encoded_stream",
    "pandas.io.common.os",
    "str",
    "tuple",
    "urllib2.urlopen",
    "urlparse.urlparse"
   ]
  },
  "type": "function"
 },
 "pandas.io.common.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "pandas.io.common.is_number": {
  "data": {
   "shadows": "pandas.core.common.is_number"
  },
  "type": "import"
 },
 "pandas.io.common.key": {
  "data": {
   "shadows": "boto.s3.key"
  },
  "type": "import"
 },
 "pandas.io.common.maybe_read_encoded_stream": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "pandas.compat.BytesIO",
    "pandas.compat.PY3",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.io.common.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.io.common.parse_url": {
  "data": {
   "shadows": "urlparse.urlparse"
  },
  "type": "import"
 },
 "pandas.io.common.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "pandas.io.common.pathname2url": {
  "data": {
   "shadows": "urllib.pathname2url"
  },
  "type": "import"
 },
 "pandas.io.common.pprint_thing": {
  "data": {
   "shadows": "pandas.formats.printing.pprint_thing"
  },
  "type": "import"
 },
 "pandas.io.common.string_types": {
  "data": {
   "shadows": "pandas.compat.string_types"
  },
  "type": "import"
 },
 "pandas.io.common.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.io.common.text_type": {
  "data": {
   "shadows": "pandas.compat.text_type"
  },
  "type": "import"
 },
 "pandas.io.common.urlencode": {
  "data": {
   "shadows": "urllib.urlencode"
  },
  "type": "import"
 },
 "pandas.io.common.urljoin": {
  "data": {
   "shadows": "urlparse.urljoin"
  },
  "type": "import"
 },
 "pandas.io.common.urlopen": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "contextlib.closing",
    "contextlib.contextmanager",
    "urllib2.urlopen"
   ]
  },
  "type": "function"
 },
 "pandas.io.common.uses_netloc": {
  "data": {
   "shadows": "urlparse.uses_netloc"
  },
  "type": "import"
 },
 "pandas.io.common.uses_params": {
  "data": {
   "shadows": "urlparse.uses_params"
  },
  "type": "import"
 },
 "pandas.io.common.uses_relative": {
  "data": {
   "shadows": "urlparse.uses_relative"
  },
  "type": "import"
 },
 "pandas.io.common.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "pandas.io.common.zipfile": {
  "data": {
   "shadows": "zipfile"
  },
  "type": "import"
 },
 "pandas.io.data": {
  "data": {
   "symbols_in_volume": [
    "FutureWarning",
    "datetime.datetime.now",
    "pandas.io.data._get_hist_google",
    "pandas.io.data._get_hist_yahoo",
    "pandas.io.data.warnings"
   ]
  },
  "type": "module"
 },
 "pandas.io.data.CUR_DAY": {
  "data": {
   "lineno": 562
  },
  "type": "constant"
 },
 "pandas.io.data.CUR_MONTH": {
  "data": {
   "lineno": 560
  },
  "type": "constant"
 },
 "pandas.io.data.CUR_YEAR": {
  "data": {
   "lineno": 561
  },
  "type": "constant"
 },
 "pandas.io.data.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.io.data.DataReader": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "pandas.io.data._sanitize_dates",
    "pandas.io.data.get_data_famafrench",
    "pandas.io.data.get_data_fred",
    "pandas.io.data.get_data_google",
    "pandas.io.data.get_data_yahoo"
   ]
  },
  "type": "function"
 },
 "pandas.io.data.DateOffset": {
  "data": {
   "shadows": "pandas.DateOffset"
  },
  "type": "import"
 },
 "pandas.io.data.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.io.data.MonthEnd": {
  "data": {
   "shadows": "pandas.tseries.offsets.MonthEnd"
  },
  "type": "import"
 },
 "pandas.io.data.Options": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.io.data.Options.__init__": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "FutureWarning",
    "NotImplementedError",
    "pandas.io.data.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.io.data.Options._expiry_to_string": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "pandas.io.data._two_char",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.data.Options._get_data_in_date_range": {
  "data": {
   "lineno": 1140,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "pandas.Series",
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "pandas.io.data.Options._get_expiry_dates_and_links": {
  "data": {
   "lineno": 1168,
   "symbols_in_volume": [
    "IndexError",
    "datetime.datetime.strptime",
    "dict",
    "len",
    "pandas.compat.zip",
    "pandas.io.data.RemoteDataError"
   ]
  },
  "type": "function"
 },
 "pandas.io.data.Options._get_option_data": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pandas.io.data.Options._get_option_frames_from_yahoo": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "pandas.io.data.Options._option_frames_from_url": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "IndexError",
    "hasattr",
    "len",
    "max",
    "numpy.nan",
    "pandas.io.data.RemoteDataError",
    "pandas.io.html.read_html"
   ]
  },
  "type": "function"
 },
 "pandas.io.data.Options._parse_url": {
  "data": {
   "lineno": 1198,
   "symbols_in_volume": [
    "ImportError",
    "lxml.html.parse",
    "pandas.io.data.RemoteDataError",
    "pandas.util.testing._network_error_classes"
   ]
  },
  "type": "function"
 },
 "pandas.io.data.Options._process_data": {
  "data": {
   "lineno": 1220,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.nan",
    "pandas.core.datetools.to_datetime",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.io.data.Options._quote_time_from_root": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "ValueError",
    "datetime.datetime.strptime",
    "numpy.nan",
    "pandas.io.data.CUR_DAY",
    "pandas.io.data.CUR_MONTH",
    "pandas.io.data.CUR_YEAR",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pandas.io.data.Options._try_parse_dates": {
  "data": {
   "lineno": 967,
   "symbols_in_volume": [
    "ValueError",
    "datetime.date",
    "hasattr",
    "len",
    "pandas.io.data.CUR_MONTH",
    "pandas.io.data.CUR_YEAR"
   ]
  },
  "type": "function"
 },
 "pandas.io.data.Options._underlying_price_and_time_from_url": {
  "data": {
   "lineno": 731
  },
  "type": "function"
 },
 "pandas.io.data.Options._underlying_price_from_root": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "numpy.nan",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pandas.io.data.Options._validate_expiry": {
  "data": {
   "lineno": 1017,
   "symbols_in_volume": [
    "hasattr",
    "pandas.DatetimeIndex",
    "pandas.core.datetools.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.io.data.Options._yahoo_url_from_expiry": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "pandas.io.data.Options.chop_data": {
  "data": {
   "lineno": 945,
   "symbols_in_volume": [
    "AttributeError",
    "max",
    "min",
    "numpy.isnan",
    "numpy.nan",
    "numpy.where",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.io.data.Options.expiry_dates": {
  "data": {
   "lineno": 1157,
   "symbols_in_volume": [
    "AttributeError",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.io.data.Options.get_all_data": {
  "data": {
   "lineno": 1093,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "pandas.io.data.Options.get_call_data": {
  "data": {
   "lineno": 779
  },
  "type": "function"
 },
 "pandas.io.data.Options.get_forward_data": {
  "data": {
   "lineno": 1032,
   "symbols_in_volume": [
    "FutureWarning",
    "datetime.date.today",
    "pandas.io.data.warnings",
    "pandas.tseries.offsets.MonthEnd"
   ]
  },
  "type": "function"
 },
 "pandas.io.data.Options.get_near_stock_price": {
  "data": {
   "lineno": 903
  },
  "type": "function"
 },
 "pandas.io.data.Options.get_options_data": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "f",
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "pandas.io.data.Options.get_put_data": {
  "data": {
   "lineno": 840
  },
  "type": "function"
 },
 "pandas.io.data.PandasError": {
  "data": {
   "shadows": "pandas.core.common.PandasError"
  },
  "type": "import"
 },
 "pandas.io.data.Panel": {
  "data": {
   "shadows": "pandas.Panel"
  },
  "type": "import"
 },
 "pandas.io.data.RemoteDataError": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "IOError",
    "pandas.core.common.PandasError"
   ]
  },
  "type": "class"
 },
 "pandas.io.data.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.io.data.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.io.data.SymbolWarning": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "pandas.io.data.ZipFile": {
  "data": {
   "shadows": "pandas.io.common.ZipFile"
  },
  "type": "import"
 },
 "pandas.io.data._FAMAFRENCH_URL": {
  "data": {
   "lineno": 520
  },
  "type": "constant"
 },
 "pandas.io.data._FRED_URL": {
  "data": {
   "lineno": 479
  },
  "type": "constant"
 },
 "pandas.io.data._HISTORICAL_GOOGLE_URL": {
  "data": {
   "lineno": 227
  },
  "type": "constant"
 },
 "pandas.io.data._HISTORICAL_YAHOO_URL": {
  "data": {
   "lineno": 204
  },
  "type": "constant"
 },
 "pandas.io.data._YAHOO_COMPONENTS_URL": {
  "data": {
   "lineno": 285
  },
  "type": "constant"
 },
 "pandas.io.data._YAHOO_QUOTE_URL": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "pandas.io.data._adjust_prices": {
  "data": {
   "lineno": 248
  },
  "type": "function"
 },
 "pandas.io.data._calc_return_index": {
  "data": {
   "lineno": 265
  },
  "type": "function"
 },
 "pandas.io.data._dl_mult_symbols": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "AttributeError",
    "IOError",
    "len",
    "method",
    "method.__name__",
    "numpy.nan",
    "pandas.Panel",
    "pandas.io.data.RemoteDataError",
    "pandas.io.data.SymbolWarning",
    "pandas.io.data._in_chunks",
    "pandas.io.data.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.io.data._get_data_from": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "pandas.DataFrame",
    "pandas.compat.string_types",
    "pandas.io.data._adjust_prices",
    "pandas.io.data._calc_return_index",
    "pandas.io.data._dl_mult_symbols",
    "pandas.io.data._source_functions",
    "src_fn"
   ]
  },
  "type": "function"
 },
 "pandas.io.data._get_hist_google": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "pandas.io.common.urlencode",
    "pandas.io.data._HISTORICAL_GOOGLE_URL",
    "pandas.io.data._retry_read_url",
    "pandas.io.data._sanitize_dates"
   ]
  },
  "type": "function"
 },
 "pandas.io.data._get_hist_yahoo": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "pandas.io.data._HISTORICAL_YAHOO_URL",
    "pandas.io.data._retry_read_url",
    "pandas.io.data._sanitize_dates"
   ]
  },
  "type": "function"
 },
 "pandas.io.data._in_chunks": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "len",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.io.data._network_error_classes": {
  "data": {
   "shadows": "pandas.util.testing._network_error_classes"
  },
  "type": "import"
 },
 "pandas.io.data._retry_read_url": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "AttributeError",
    "IOError",
    "len",
    "pandas.compat.StringIO",
    "pandas.compat.bytes_to_str",
    "pandas.compat.range",
    "pandas.io.common.urlopen",
    "pandas.io.data.time",
    "pandas.read_csv",
    "pandas.util.testing._network_error_classes"
   ]
  },
  "type": "function"
 },
 "pandas.io.data._sanitize_dates": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.datetime.today",
    "pandas.core.datetools.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.io.data._source_functions": {
  "data": {
   "lineno": 371
  },
  "type": "constant"
 },
 "pandas.io.data._two_char": {
  "data": {
   "lineno": 565
  },
  "type": "function"
 },
 "pandas.io.data._yahoo_codes": {
  "data": {
   "lineno": 122
  },
  "type": "constant"
 },
 "pandas.io.data.bytes_to_str": {
  "data": {
   "shadows": "pandas.compat.bytes_to_str"
  },
  "type": "import"
 },
 "pandas.io.data.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.io.data.concat": {
  "data": {
   "shadows": "pandas.concat"
  },
  "type": "import"
 },
 "pandas.io.data.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "pandas.io.data.dt": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pandas.io.data.get_components_yahoo": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.common.urlopen",
    "pandas.io.data._YAHOO_COMPONENTS_URL"
   ]
  },
  "type": "function"
 },
 "pandas.io.data.get_data_famafrench": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "int",
    "len",
    "numpy.array",
    "numpy.median",
    "numpy.where",
    "pandas.DataFrame",
    "pandas.compat.lmap",
    "pandas.compat.zip",
    "pandas.io.common.ZipFile",
    "pandas.io.common.urlopen",
    "pandas.io.data._FAMAFRENCH_URL",
    "pandas.io.data.tempfile"
   ]
  },
  "type": "function"
 },
 "pandas.io.data.get_data_fred": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.datetime.today",
    "fetch_data",
    "pandas.compat.zip",
    "pandas.concat",
    "pandas.core.common.is_list_like",
    "pandas.io.data._FRED_URL",
    "pandas.io.data._sanitize_dates"
   ]
  },
  "type": "function"
 },
 "pandas.io.data.get_data_fred.fetch_data": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "IOError",
    "KeyError",
    "pandas.io.common.urlopen",
    "pandas.read_csv"
   ]
  },
  "type": "function"
 },
 "pandas.io.data.get_data_google": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "pandas.io.data._get_data_from"
   ]
  },
  "type": "function"
 },
 "pandas.io.data.get_data_yahoo": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "ValueError",
    "pandas.io.data._get_data_from"
   ]
  },
  "type": "function"
 },
 "pandas.io.data.get_quote_google": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pandas.io.data.get_quote_yahoo": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "ValueError",
    "collections.defaultdict",
    "enumerate",
    "float",
    "isinstance",
    "list",
    "pandas.DataFrame",
    "pandas.compat.itervalues",
    "pandas.compat.string_types",
    "pandas.io.common.urlopen",
    "pandas.io.data._YAHOO_QUOTE_URL",
    "pandas.io.data._yahoo_codes"
   ]
  },
  "type": "function"
 },
 "pandas.io.data.is_list_like": {
  "data": {
   "shadows": "pandas.core.common.is_list_like"
  },
  "type": "import"
 },
 "pandas.io.data.lmap": {
  "data": {
   "shadows": "pandas.compat.lmap"
  },
  "type": "import"
 },
 "pandas.io.data.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.io.data.parse": {
  "data": {
   "shadows": "lxml.html.parse"
  },
  "type": "import"
 },
 "pandas.io.data.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.io.data.read_csv": {
  "data": {
   "shadows": "pandas.read_csv"
  },
  "type": "import"
 },
 "pandas.io.data.read_html": {
  "data": {
   "shadows": "pandas.io.html.read_html"
  },
  "type": "import"
 },
 "pandas.io.data.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pandas.io.data.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pandas.io.data.to_datetime": {
  "data": {
   "shadows": "pandas.core.datetools.to_datetime"
  },
  "type": "import"
 },
 "pandas.io.data.urlencode": {
  "data": {
   "shadows": "pandas.io.common.urlencode"
  },
  "type": "import"
 },
 "pandas.io.data.urlopen": {
  "data": {
   "shadows": "pandas.io.common.urlopen"
  },
  "type": "import"
 },
 "pandas.io.data.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.io.data.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.io.excel": {
  "data": {
   "symbols_in_volume": [
    "pandas.io.excel._Openpyxl1Writer",
    "pandas.io.excel._Openpyxl20Writer",
    "pandas.io.excel._Openpyxl22Writer",
    "pandas.io.excel._OpenpyxlWriter",
    "pandas.io.excel._XlsxWriter",
    "pandas.io.excel._XlwtWriter",
    "pandas.io.excel.register_writer"
   ]
  },
  "type": "module"
 },
 "pandas.io.excel.Alignment": {
  "data": {
   "shadows": "openpyxl.styles.Alignment"
  },
  "type": "import"
 },
 "pandas.io.excel.Border": {
  "data": {
   "shadows": "openpyxl.styles.Border"
  },
  "type": "import"
 },
 "pandas.io.excel.Color": {
  "data": {
   "shadows": "openpyxl.styles.Color"
  },
  "type": "import"
 },
 "pandas.io.excel.DataFrame": {
  "data": {
   "shadows": "pandas.core.frame.DataFrame"
  },
  "type": "import"
 },
 "pandas.io.excel.EmptyDataError": {
  "data": {
   "shadows": "pandas.io.common.EmptyDataError"
  },
  "type": "import"
 },
 "pandas.io.excel.ExcelFile": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.io.excel.ExcelFile.__enter__": {
  "data": {
   "lineno": 491
  },
  "type": "function"
 },
 "pandas.io.excel.ExcelFile.__exit__": {
  "data": {
   "lineno": 494
  },
  "type": "function"
 },
 "pandas.io.excel.ExcelFile.__init__": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "hasattr",
    "int",
    "isinstance",
    "pandas.compat.map",
    "pandas.compat.string_types",
    "pandas.io.common._is_url",
    "pandas.io.common._urlopen",
    "pandas.io.common.get_filepath_or_buffer",
    "pandas.io.excel.xlrd",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel.ExcelFile._parse_excel": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "FutureWarning",
    "NotImplementedError",
    "_parse_cell",
    "distutils.version.LooseVersion",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "max",
    "pandas.compat.range",
    "pandas.compat.string_types",
    "pandas.compat.zip",
    "pandas.core.common.is_integer",
    "pandas.core.common.is_list_like",
    "pandas.core.frame.DataFrame",
    "pandas.io.common.EmptyDataError",
    "pandas.io.common._validate_header_arg",
    "pandas.io.excel._fill_mi_header",
    "pandas.io.excel._pop_header_name",
    "pandas.io.excel._trim_excel_header",
    "pandas.io.excel.xlrd",
    "pandas.io.parsers.TextParser",
    "print",
    "set",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel.ExcelFile._parse_excel._parse_cell": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "bool",
    "datetime.MINYEAR",
    "datetime.datetime",
    "datetime.time",
    "int",
    "numpy.nan",
    "xlrd.XL_CELL_BOOLEAN",
    "xlrd.XL_CELL_DATE",
    "xlrd.XL_CELL_ERROR",
    "xlrd.XL_CELL_NUMBER",
    "xlrd.xldate.xldate_as_datetime",
    "xlrd.xldate.xldate_as_tuple"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel.ExcelFile._should_parse": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "_range2cols",
    "int",
    "isinstance",
    "pandas.compat.string_types"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel.ExcelFile._should_parse._range2cols": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "_excel2num",
    "pandas.compat.lrange"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel.ExcelFile._should_parse._range2cols._excel2num": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "ord",
    "pandas.compat.reduce"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel.ExcelFile.close": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel.ExcelFile.parse": {
  "data": {
   "lineno": 232
  },
  "type": "function"
 },
 "pandas.io.excel.ExcelFile.sheet_names": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel.ExcelWriter": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "object",
    "pandas.compat.add_metaclass",
    "pandas.io.excel.abc"
   ]
  },
  "type": "class"
 },
 "pandas.io.excel.ExcelWriter.__enter__": {
  "data": {
   "lineno": 696
  },
  "type": "function"
 },
 "pandas.io.excel.ExcelWriter.__exit__": {
  "data": {
   "lineno": 699
  },
  "type": "function"
 },
 "pandas.io.excel.ExcelWriter.__init__": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "isinstance",
    "pandas.compat.string_types",
    "pandas.io.excel.os"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel.ExcelWriter.__new__": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "isinstance",
    "issubclass",
    "object.__new__",
    "pandas.compat.string_types",
    "pandas.core.config.get_option",
    "pandas.io.excel.ExcelWriter",
    "pandas.io.excel.get_writer",
    "pandas.io.excel.os"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel.ExcelWriter._get_sheet_name": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel.ExcelWriter.check_extension": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "classmethod",
    "pandas.compat.u",
    "pandas.formats.printing.pprint_thing"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel.ExcelWriter.close": {
  "data": {
   "lineno": 702
  },
  "type": "function"
 },
 "pandas.io.excel.ExcelWriter.engine": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "pandas.io.excel.abc"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel.ExcelWriter.save": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "pandas.io.excel.abc"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel.ExcelWriter.supported_extensions": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "pandas.io.excel.abc"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel.ExcelWriter.write_cells": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "pandas.io.excel.abc"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel.Font": {
  "data": {
   "shadows": "openpyxl.styles.Font"
  },
  "type": "import"
 },
 "pandas.io.excel.GradientFill": {
  "data": {
   "shadows": "openpyxl.styles.GradientFill"
  },
  "type": "import"
 },
 "pandas.io.excel.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.io.excel.MINYEAR": {
  "data": {
   "shadows": "datetime.MINYEAR"
  },
  "type": "import"
 },
 "pandas.io.excel.NumberFormat": {
  "data": {
   "shadows": "openpyxl.styles.NumberFormat"
  },
  "type": "import"
 },
 "pandas.io.excel.PatternFill": {
  "data": {
   "shadows": "openpyxl.styles.PatternFill"
  },
  "type": "import"
 },
 "pandas.io.excel.Period": {
  "data": {
   "shadows": "pandas.tseries.period.Period"
  },
  "type": "import"
 },
 "pandas.io.excel.Protection": {
  "data": {
   "shadows": "openpyxl.styles.Protection"
  },
  "type": "import"
 },
 "pandas.io.excel.Side": {
  "data": {
   "shadows": "openpyxl.styles.Side"
  },
  "type": "import"
 },
 "pandas.io.excel.Style": {
  "data": {
   "shadows": "openpyxl.style.Style"
  },
  "type": "import"
 },
 "pandas.io.excel.TextParser": {
  "data": {
   "shadows": "pandas.io.parsers.TextParser"
  },
  "type": "import"
 },
 "pandas.io.excel.Workbook": {
  "data": {
   "shadows": "openpyxl.workbook.Workbook"
  },
  "type": "import"
 },
 "pandas.io.excel.XL_CELL_BOOLEAN": {
  "data": {
   "shadows": "xlrd.XL_CELL_BOOLEAN"
  },
  "type": "import"
 },
 "pandas.io.excel.XL_CELL_DATE": {
  "data": {
   "shadows": "xlrd.XL_CELL_DATE"
  },
  "type": "import"
 },
 "pandas.io.excel.XL_CELL_ERROR": {
  "data": {
   "shadows": "xlrd.XL_CELL_ERROR"
  },
  "type": "import"
 },
 "pandas.io.excel.XL_CELL_NUMBER": {
  "data": {
   "shadows": "xlrd.XL_CELL_NUMBER"
  },
  "type": "import"
 },
 "pandas.io.excel._Openpyxl1Writer": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "pandas.io.excel.ExcelWriter"
   ]
  },
  "type": "class"
 },
 "pandas.io.excel._Openpyxl1Writer.__init__": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "ValueError",
    "openpyxl.workbook.Workbook",
    "pandas.compat.openpyxl_compat.is_compat",
    "pandas.io.excel._Openpyxl1Writer",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._Openpyxl1Writer._convert_to_style": {
  "data": {
   "lineno": 795,
   "symbols_in_volume": [
    "classmethod",
    "openpyxl.style.Style"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._Openpyxl1Writer.save": {
  "data": {
   "lineno": 728
  },
  "type": "function"
 },
 "pandas.io.excel._Openpyxl1Writer.write_cells": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": [
    "datetime.date",
    "datetime.datetime",
    "isinstance",
    "openpyxl.cell.get_column_letter",
    "pandas.compat.range",
    "pandas.compat.string_types",
    "pandas.io.excel._conv_value"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._Openpyxl20Writer": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "pandas.io.excel._Openpyxl1Writer"
   ]
  },
  "type": "class"
 },
 "pandas.io.excel._Openpyxl20Writer._convert_to_alignment": {
  "data": {
   "lineno": 1165,
   "symbols_in_volume": [
    "classmethod",
    "openpyxl.styles.Alignment"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._Openpyxl20Writer._convert_to_border": {
  "data": {
   "lineno": 1122,
   "symbols_in_volume": [
    "classmethod",
    "openpyxl.styles.Border"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._Openpyxl20Writer._convert_to_color": {
  "data": {
   "lineno": 930,
   "symbols_in_volume": [
    "classmethod",
    "isinstance",
    "openpyxl.styles.Color",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._Openpyxl20Writer._convert_to_fill": {
  "data": {
   "lineno": 1023,
   "symbols_in_volume": [
    "TypeError",
    "classmethod",
    "openpyxl.styles.GradientFill",
    "openpyxl.styles.PatternFill"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._Openpyxl20Writer._convert_to_font": {
  "data": {
   "lineno": 958,
   "symbols_in_volume": [
    "classmethod",
    "openpyxl.styles.Font"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._Openpyxl20Writer._convert_to_number_format": {
  "data": {
   "lineno": 1188,
   "symbols_in_volume": [
    "classmethod",
    "openpyxl.styles.NumberFormat"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._Openpyxl20Writer._convert_to_protection": {
  "data": {
   "lineno": 1210,
   "symbols_in_volume": [
    "classmethod",
    "openpyxl.styles.Protection"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._Openpyxl20Writer._convert_to_side": {
  "data": {
   "lineno": 1087,
   "symbols_in_volume": [
    "classmethod",
    "isinstance",
    "openpyxl.styles.Side",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._Openpyxl20Writer._convert_to_stop": {
  "data": {
   "lineno": 1006,
   "symbols_in_volume": [
    "classmethod",
    "pandas.compat.map"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._Openpyxl20Writer._convert_to_style_kwargs": {
  "data": {
   "lineno": 891,
   "symbols_in_volume": [
    "_conv_to_x",
    "classmethod",
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._Openpyxl20Writer.write_cells": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": [
    "datetime.date",
    "datetime.datetime",
    "isinstance",
    "openpyxl.cell.get_column_letter",
    "pandas.compat.range",
    "pandas.io.excel._conv_value"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._Openpyxl22Writer": {
  "data": {
   "lineno": 1232,
   "symbols_in_volume": [
    "pandas.io.excel._Openpyxl20Writer"
   ]
  },
  "type": "class"
 },
 "pandas.io.excel._Openpyxl22Writer.write_cells": {
  "data": {
   "lineno": 1239,
   "symbols_in_volume": [
    "pandas.compat.range",
    "pandas.io.excel._conv_value",
    "setattr",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._OpenpyxlWriter": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "pandas.io.excel._Openpyxl1Writer"
   ]
  },
  "type": "class"
 },
 "pandas.io.excel._XlsxWriter": {
  "data": {
   "lineno": 1424,
   "symbols_in_volume": [
    "pandas.io.excel.ExcelWriter"
   ]
  },
  "type": "class"
 },
 "pandas.io.excel._XlsxWriter.__init__": {
  "data": {
   "lineno": 1428,
   "symbols_in_volume": [
    "pandas.io.excel._XlsxWriter",
    "pandas.io.excel.xlsxwriter",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._XlsxWriter._convert_to_style": {
  "data": {
   "lineno": 1489
  },
  "type": "function"
 },
 "pandas.io.excel._XlsxWriter.save": {
  "data": {
   "lineno": 1440
  },
  "type": "function"
 },
 "pandas.io.excel._XlsxWriter.write_cells": {
  "data": {
   "lineno": 1446,
   "symbols_in_volume": [
    "datetime.date",
    "datetime.datetime",
    "isinstance",
    "pandas.io.excel._conv_value",
    "pandas.json.dumps"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._XlwtWriter": {
  "data": {
   "lineno": 1301,
   "symbols_in_volume": [
    "pandas.io.excel.ExcelWriter"
   ]
  },
  "type": "class"
 },
 "pandas.io.excel._XlwtWriter.__init__": {
  "data": {
   "lineno": 1305,
   "symbols_in_volume": [
    "pandas.io.excel._XlwtWriter",
    "pandas.io.excel.xlwt",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._XlwtWriter._convert_to_style": {
  "data": {
   "lineno": 1400,
   "symbols_in_volume": [
    "classmethod",
    "pandas.io.excel.xlwt"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._XlwtWriter._style_to_xlwt": {
  "data": {
   "lineno": 1366,
   "symbols_in_volume": [
    "classmethod",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._XlwtWriter.save": {
  "data": {
   "lineno": 1317
  },
  "type": "function"
 },
 "pandas.io.excel._XlwtWriter.write_cells": {
  "data": {
   "lineno": 1323,
   "symbols_in_volume": [
    "datetime.date",
    "datetime.datetime",
    "isinstance",
    "pandas.io.excel._conv_value",
    "pandas.json.dumps"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel.__all__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pandas.io.excel._conv_value": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "isinstance",
    "pandas.core.common.is_bool",
    "pandas.core.common.is_float",
    "pandas.core.common.is_integer",
    "pandas.core.common.is_list_like",
    "pandas.tseries.period.Period",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._fill_mi_header": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "len",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._is_url": {
  "data": {
   "shadows": "pandas.io.common._is_url"
  },
  "type": "import"
 },
 "pandas.io.excel._pop_header_name": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "max",
    "none_fill",
    "pandas.core.common.is_list_like"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._trim_excel_header": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel._urlopen": {
  "data": {
   "shadows": "pandas.io.common._urlopen"
  },
  "type": "import"
 },
 "pandas.io.excel._validate_header_arg": {
  "data": {
   "shadows": "pandas.io.common._validate_header_arg"
  },
  "type": "import"
 },
 "pandas.io.excel._writer_extensions": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pandas.io.excel._writers": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pandas.io.excel.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "pandas.io.excel.add_metaclass": {
  "data": {
   "shadows": "pandas.compat.add_metaclass"
  },
  "type": "import"
 },
 "pandas.io.excel.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.io.excel.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.io.excel.config": {
  "data": {
   "shadows": "pandas.core.config"
  },
  "type": "import"
 },
 "pandas.io.excel.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "pandas.io.excel.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.io.excel.get_column_letter": {
  "data": {
   "shadows": "openpyxl.cell.get_column_letter"
  },
  "type": "import"
 },
 "pandas.io.excel.get_filepath_or_buffer": {
  "data": {
   "shadows": "pandas.io.common.get_filepath_or_buffer"
  },
  "type": "import"
 },
 "pandas.io.excel.get_writer": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "ImportError",
    "KeyError",
    "ValueError",
    "distutils.version.LooseVersion",
    "pandas.io.excel._writers",
    "pandas.io.excel.openpyxl"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel.json": {
  "data": {
   "shadows": "pandas.json"
  },
  "type": "import"
 },
 "pandas.io.excel.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.io.excel.map": {
  "data": {
   "shadows": "pandas.compat.map"
  },
  "type": "import"
 },
 "pandas.io.excel.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.io.excel.openpyxl": {
  "data": {
   "shadows": "openpyxl"
  },
  "type": "import"
 },
 "pandas.io.excel.openpyxl_compat": {
  "data": {
   "shadows": "pandas.compat.openpyxl_compat"
  },
  "type": "import"
 },
 "pandas.io.excel.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.io.excel.pprint_thing": {
  "data": {
   "shadows": "pandas.formats.printing.pprint_thing"
  },
  "type": "import"
 },
 "pandas.io.excel.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.io.excel.read_excel": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "isinstance",
    "pandas.io.excel.ExcelFile"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel.reduce": {
  "data": {
   "shadows": "pandas.compat.reduce"
  },
  "type": "import"
 },
 "pandas.io.excel.register_writer": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ValueError",
    "pandas.compat.callable",
    "pandas.core.config.register_option",
    "pandas.io.excel._writer_extensions",
    "pandas.io.excel._writers",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.excel.string_types": {
  "data": {
   "shadows": "pandas.compat.string_types"
  },
  "type": "import"
 },
 "pandas.io.excel.time": {
  "data": {
   "shadows": "datetime.time"
  },
  "type": "import"
 },
 "pandas.io.excel.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.io.excel.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "pandas.io.excel.xldate": {
  "data": {
   "shadows": "xlrd.xldate"
  },
  "type": "import"
 },
 "pandas.io.excel.xlrd": {
  "data": {
   "shadows": "xlrd"
  },
  "type": "import"
 },
 "pandas.io.excel.xlsxwriter": {
  "data": {
   "shadows": "xlsxwriter"
  },
  "type": "import"
 },
 "pandas.io.excel.xlwt": {
  "data": {
   "shadows": "xlwt"
  },
  "type": "import"
 },
 "pandas.io.excel.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.io.html": {
  "data": {
   "symbols_in_volume": [
    "pandas.compat.binary_type",
    "pandas.compat.string_types",
    "pandas.io.html._BeautifulSoupHtml5LibFrameParser",
    "pandas.io.html._LxmlFrameParser",
    "pandas.io.html.re"
   ]
  },
  "type": "module"
 },
 "pandas.io.html.AbstractMethodError": {
  "data": {
   "shadows": "pandas.core.common.AbstractMethodError"
  },
  "type": "import"
 },
 "pandas.io.html.BeautifulSoup": {
  "data": {
   "shadows": "bs4.BeautifulSoup"
  },
  "type": "import"
 },
 "pandas.io.html.EmptyDataError": {
  "data": {
   "shadows": "pandas.io.common.EmptyDataError"
  },
  "type": "import"
 },
 "pandas.io.html.HTMLParser": {
  "data": {
   "shadows": "lxml.html.HTMLParser"
  },
  "type": "import"
 },
 "pandas.io.html.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.io.html.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.io.html.SoupStrainer": {
  "data": {
   "shadows": "bs4.SoupStrainer"
  },
  "type": "import"
 },
 "pandas.io.html.TextParser": {
  "data": {
   "shadows": "pandas.io.parsers.TextParser"
  },
  "type": "import"
 },
 "pandas.io.html.XMLSyntaxError": {
  "data": {
   "shadows": "lxml.etree.XMLSyntaxError"
  },
  "type": "import"
 },
 "pandas.io.html._BeautifulSoupHtml5LibFrameParser": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "pandas.io.html._HtmlFrameParser"
   ]
  },
  "type": "class"
 },
 "pandas.io.html._BeautifulSoupHtml5LibFrameParser.__init__": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "bs4.SoupStrainer",
    "pandas.io.html._BeautifulSoupHtml5LibFrameParser",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._BeautifulSoupHtml5LibFrameParser._build_doc": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "bs4.BeautifulSoup"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._BeautifulSoupHtml5LibFrameParser._parse_tables": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "ValueError",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._BeautifulSoupHtml5LibFrameParser._parse_tbody": {
  "data": {
   "lineno": 415
  },
  "type": "function"
 },
 "pandas.io.html._BeautifulSoupHtml5LibFrameParser._parse_td": {
  "data": {
   "lineno": 403
  },
  "type": "function"
 },
 "pandas.io.html._BeautifulSoupHtml5LibFrameParser._parse_tfoot": {
  "data": {
   "lineno": 418
  },
  "type": "function"
 },
 "pandas.io.html._BeautifulSoupHtml5LibFrameParser._parse_th": {
  "data": {
   "lineno": 409
  },
  "type": "function"
 },
 "pandas.io.html._BeautifulSoupHtml5LibFrameParser._parse_thead": {
  "data": {
   "lineno": 412
  },
  "type": "function"
 },
 "pandas.io.html._BeautifulSoupHtml5LibFrameParser._parse_tr": {
  "data": {
   "lineno": 406
  },
  "type": "function"
 },
 "pandas.io.html._BeautifulSoupHtml5LibFrameParser._setup_build_doc": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "ValueError",
    "pandas.io.html._read"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._BeautifulSoupHtml5LibFrameParser._text_getter": {
  "data": {
   "lineno": 400
  },
  "type": "function"
 },
 "pandas.io.html._HAS_BS4": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pandas.io.html._HAS_HTML5LIB": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pandas.io.html._HAS_LXML": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pandas.io.html._HtmlFrameParser": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.io.html._HtmlFrameParser.__init__": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "pandas.io.html._HtmlFrameParser._build_doc": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "pandas.core.common.AbstractMethodError"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._HtmlFrameParser._build_table": {
  "data": {
   "lineno": 348
  },
  "type": "function"
 },
 "pandas.io.html._HtmlFrameParser._parse_raw_data": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "pandas.io.html._remove_whitespace"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._HtmlFrameParser._parse_raw_tbody": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._HtmlFrameParser._parse_raw_tfoot": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.atleast_1d",
    "pandas.compat.lmap"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._HtmlFrameParser._parse_raw_thead": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.atleast_1d",
    "pandas.compat.lmap"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._HtmlFrameParser._parse_tables": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "pandas.core.common.AbstractMethodError"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._HtmlFrameParser._parse_tbody": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "pandas.core.common.AbstractMethodError"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._HtmlFrameParser._parse_td": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "pandas.core.common.AbstractMethodError"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._HtmlFrameParser._parse_tfoot": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "pandas.core.common.AbstractMethodError"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._HtmlFrameParser._parse_thead": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "pandas.core.common.AbstractMethodError"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._HtmlFrameParser._parse_tr": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "pandas.core.common.AbstractMethodError"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._HtmlFrameParser._text_getter": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "pandas.core.common.AbstractMethodError"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._HtmlFrameParser.parse_tables": {
  "data": {
   "lineno": 195
  },
  "type": "function"
 },
 "pandas.io.html._IMPORTS": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pandas.io.html._LxmlFrameParser": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "pandas.io.html._HtmlFrameParser"
   ]
  },
  "type": "class"
 },
 "pandas.io.html._LxmlFrameParser.__init__": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "pandas.io.html._LxmlFrameParser",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._LxmlFrameParser._build_doc": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "AttributeError",
    "IOError",
    "UnicodeDecodeError",
    "ValueError",
    "hasattr",
    "lxml.etree.XMLSyntaxError",
    "lxml.html.HTMLParser",
    "lxml.html.fromstring",
    "lxml.html.parse",
    "pandas.io.common._is_url",
    "pandas.io.common.parse_url",
    "pandas.io.html._valid_schemes"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._LxmlFrameParser._parse_raw_tfoot": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "pandas.io.html._remove_whitespace"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._LxmlFrameParser._parse_raw_thead": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "pandas.io.html._remove_whitespace"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._LxmlFrameParser._parse_tables": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "ValueError",
    "pandas.compat.u",
    "pandas.io.html._build_xpath_expr",
    "pandas.io.html._re_namespace"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._LxmlFrameParser._parse_tbody": {
  "data": {
   "lineno": 584
  },
  "type": "function"
 },
 "pandas.io.html._LxmlFrameParser._parse_td": {
  "data": {
   "lineno": 504
  },
  "type": "function"
 },
 "pandas.io.html._LxmlFrameParser._parse_tfoot": {
  "data": {
   "lineno": 590
  },
  "type": "function"
 },
 "pandas.io.html._LxmlFrameParser._parse_thead": {
  "data": {
   "lineno": 587
  },
  "type": "function"
 },
 "pandas.io.html._LxmlFrameParser._parse_tr": {
  "data": {
   "lineno": 507
  },
  "type": "function"
 },
 "pandas.io.html._LxmlFrameParser._text_getter": {
  "data": {
   "lineno": 501
  },
  "type": "function"
 },
 "pandas.io.html._RE_WHITESPACE": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "pandas.io.html._build_xpath_expr": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "pandas.compat.iteritems",
    "pandas.compat.u"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._data_to_frame": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "pandas.io.html._expand_elements",
    "pandas.io.html._get_skiprows",
    "pandas.io.parsers.TextParser"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._expand_elements": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "len",
    "pandas.Series",
    "pandas.compat.iteritems",
    "pandas.compat.lmap"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._get_skiprows": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "pandas.compat.lrange",
    "pandas.core.common.is_list_like",
    "pandas.io.html.numbers",
    "slice",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._importers": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ImportError",
    "pandas.io.html._HAS_BS4",
    "pandas.io.html._HAS_HTML5LIB",
    "pandas.io.html._HAS_LXML",
    "pandas.io.html._IMPORTS"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._is_url": {
  "data": {
   "shadows": "pandas.io.common._is_url"
  },
  "type": "import"
 },
 "pandas.io.html._parse": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "Exception",
    "pandas.compat.raise_with_traceback",
    "pandas.io.common.EmptyDataError",
    "pandas.io.html._data_to_frame",
    "pandas.io.html._parser_dispatch",
    "pandas.io.html._validate_flavor",
    "pandas.io.html.re",
    "parser"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._parser_dispatch": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "distutils.version.LooseVersion",
    "list",
    "pandas.io.html._HAS_BS4",
    "pandas.io.html._HAS_HTML5LIB",
    "pandas.io.html._HAS_LXML",
    "pandas.io.html._valid_parsers",
    "pandas.io.html.bs4"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._print_as_set": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "pandas.formats.printing.pprint_thing"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._re_namespace": {
  "data": {
   "lineno": 476
  },
  "type": "constant"
 },
 "pandas.io.html._read": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "hasattr",
    "isinstance",
    "open",
    "pandas.io.common._is_url",
    "pandas.io.common.urlopen",
    "pandas.io.html.char_types",
    "pandas.io.html.os",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._remove_whitespace": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "pandas.io.html._RE_WHITESPACE"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._valid_parsers": {
  "data": {
   "lineno": 638
  },
  "type": "constant"
 },
 "pandas.io.html._valid_schemes": {
  "data": {
   "lineno": 477
  },
  "type": "constant"
 },
 "pandas.io.html._validate_flavor": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "all",
    "isinstance",
    "pandas.compat.string_types",
    "pandas.io.html._print_as_set",
    "pandas.io.html._valid_parsers",
    "pandas.io.html.collections",
    "set",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.io.html._validate_header_arg": {
  "data": {
   "shadows": "pandas.io.common._validate_header_arg"
  },
  "type": "import"
 },
 "pandas.io.html.binary_type": {
  "data": {
   "shadows": "pandas.compat.binary_type"
  },
  "type": "import"
 },
 "pandas.io.html.bs4": {
  "data": {
   "shadows": "bs4"
  },
  "type": "import"
 },
 "pandas.io.html.char_types": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "pandas.io.html.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "pandas.io.html.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.io.html.fromstring": {
  "data": {
   "shadows": "lxml.html.fromstring"
  },
  "type": "import"
 },
 "pandas.io.html.html5lib": {
  "data": {
   "shadows": "html5lib"
  },
  "type": "import"
 },
 "pandas.io.html.iteritems": {
  "data": {
   "shadows": "pandas.compat.iteritems"
  },
  "type": "import"
 },
 "pandas.io.html.lmap": {
  "data": {
   "shadows": "pandas.compat.lmap"
  },
  "type": "import"
 },
 "pandas.io.html.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.io.html.lxml": {
  "data": {
   "shadows": "lxml"
  },
  "type": "import"
 },
 "pandas.io.html.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.io.html.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "pandas.io.html.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.io.html.parse": {
  "data": {
   "shadows": "lxml.html.parse"
  },
  "type": "import"
 },
 "pandas.io.html.parse_url": {
  "data": {
   "shadows": "pandas.io.common.parse_url"
  },
  "type": "import"
 },
 "pandas.io.html.pprint_thing": {
  "data": {
   "shadows": "pandas.formats.printing.pprint_thing"
  },
  "type": "import"
 },
 "pandas.io.html.raise_with_traceback": {
  "data": {
   "shadows": "pandas.compat.raise_with_traceback"
  },
  "type": "import"
 },
 "pandas.io.html.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pandas.io.html.read_html": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pandas.io.common._validate_header_arg",
    "pandas.io.html._importers",
    "pandas.io.html._parse",
    "pandas.io.html.numbers"
   ]
  },
  "type": "function"
 },
 "pandas.io.html.string_types": {
  "data": {
   "shadows": "pandas.compat.string_types"
  },
  "type": "import"
 },
 "pandas.io.html.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.io.html.urlopen": {
  "data": {
   "shadows": "pandas.io.common.urlopen"
  },
  "type": "import"
 },
 "pandas.io.json": {
  "data": {
   "symbols_in_volume": [
    "pandas.json.dumps",
    "pandas.json.loads"
   ]
  },
  "type": "module"
 },
 "pandas.io.json.AbstractMethodError": {
  "data": {
   "shadows": "pandas.core.common.AbstractMethodError"
  },
  "type": "import"
 },
 "pandas.io.json.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.io.json.FrameParser": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "pandas.io.json.Parser"
   ]
  },
  "type": "class"
 },
 "pandas.io.json.FrameParser._parse_no_numpy": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "dict",
    "pandas.DataFrame",
    "pandas.compat.iteritems",
    "pandas.io.json.loads",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.FrameParser._parse_numpy": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "dict",
    "pandas.DataFrame",
    "pandas.compat.iteritems",
    "pandas.io.json.loads",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.FrameParser._process_converter": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "f",
    "filt",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.FrameParser._try_convert_dates": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "is_ok",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.FrameParser._try_convert_dates.is_ok": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "isinstance",
    "pandas.compat.string_types"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.FrameParser._try_convert_types": {
  "data": {
   "lineno": 534
  },
  "type": "function"
 },
 "pandas.io.json.FrameWriter": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "pandas.io.json.Writer"
   ]
  },
  "type": "class"
 },
 "pandas.io.json.FrameWriter._format_axes": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.Parser": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "object",
    "pandas.compat.long"
   ]
  },
  "type": "class"
 },
 "pandas.io.json.Parser.__init__": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "ValueError",
    "numpy"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.Parser._convert_axes": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.Parser._try_convert_data": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "len",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.Parser._try_convert_dates": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "pandas.core.common.AbstractMethodError"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.Parser._try_convert_to_date": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "ValueError",
    "issubclass",
    "len",
    "numpy.number",
    "pandas.isnull",
    "pandas.to_datetime",
    "pandas.tslib.iNaT"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.Parser._try_convert_types": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "pandas.core.common.AbstractMethodError"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.Parser.check_keys_split": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "ValueError",
    "pandas.compat.u",
    "pandas.formats.printing.pprint_thing",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.Parser.parse": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "numpy"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.io.json.SeriesParser": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "pandas.io.json.Parser"
   ]
  },
  "type": "class"
 },
 "pandas.io.json.SeriesParser._parse_no_numpy": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "dict",
    "pandas.Series",
    "pandas.compat.iteritems",
    "pandas.io.json.loads",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.SeriesParser._parse_numpy": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "dict",
    "pandas.Series",
    "pandas.compat.iteritems",
    "pandas.io.json.loads",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.SeriesParser._try_convert_types": {
  "data": {
   "lineno": 451
  },
  "type": "function"
 },
 "pandas.io.json.SeriesWriter": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "pandas.io.json.Writer"
   ]
  },
  "type": "class"
 },
 "pandas.io.json.SeriesWriter._format_axes": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.Writer": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.io.json.Writer.__init__": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "pandas.io.json.Writer._format_axes": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "pandas.core.common.AbstractMethodError"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.Writer.write": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "pandas.io.json.dumps"
   ]
  },
  "type": "function"
 },
 "pandas.io.json._json": {
  "data": {
   "shadows": "pandas.json"
  },
  "type": "import"
 },
 "pandas.io.json.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.io.json.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pandas.io.json.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "pandas.io.json.dumps": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "pandas.io.json.get_filepath_or_buffer": {
  "data": {
   "shadows": "pandas.io.common.get_filepath_or_buffer"
  },
  "type": "import"
 },
 "pandas.io.json.iNaT": {
  "data": {
   "shadows": "pandas.tslib.iNaT"
  },
  "type": "import"
 },
 "pandas.io.json.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.io.json.json_normalize": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "ValueError",
    "_recursive_extract",
    "any",
    "collections.defaultdict",
    "dict",
    "enumerate",
    "isinstance",
    "list",
    "numpy.array",
    "pandas.DataFrame",
    "pandas.compat.iteritems",
    "pandas.compat.itervalues",
    "pandas.io.json.nested_to_record"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.json_normalize._pull_field": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.json_normalize._recursive_extract": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "_pull_field",
    "_recursive_extract",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.loads": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "pandas.io.json.long": {
  "data": {
   "shadows": "pandas.compat.long"
  },
  "type": "import"
 },
 "pandas.io.json.nested_to_record": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "pandas.io.json.copy",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.io.json.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.io.json.pprint_thing": {
  "data": {
   "shadows": "pandas.formats.printing.pprint_thing"
  },
  "type": "import"
 },
 "pandas.io.json.read_json": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "bool",
    "dict",
    "hasattr",
    "isinstance",
    "numpy",
    "open",
    "pandas.compat.string_types",
    "pandas.io.common.get_filepath_or_buffer",
    "pandas.io.json.FrameParser",
    "pandas.io.json.SeriesParser",
    "pandas.io.json.os"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.to_datetime": {
  "data": {
   "shadows": "pandas.to_datetime"
  },
  "type": "import"
 },
 "pandas.io.json.to_json": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "NotImplementedError",
    "isinstance",
    "open",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.string_types",
    "pandas.io.json.FrameWriter",
    "pandas.io.json.SeriesWriter"
   ]
  },
  "type": "function"
 },
 "pandas.io.json.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.io.packers": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "hasattr",
    "numpy",
    "numpy.dtype",
    "numpy.float128",
    "numpy.float32",
    "numpy.float64",
    "pandas.compat.u",
    "pandas.io.packers._check_blosc",
    "pandas.io.packers._check_zlib",
    "pandas.io.packers.c2f_dict",
    "textwrap.dedent"
   ]
  },
  "type": "module"
 },
 "pandas.io.packers.BlockIndex": {
  "data": {
   "shadows": "pandas.sparse.array.BlockIndex"
  },
  "type": "import"
 },
 "pandas.io.packers.BlockManager": {
  "data": {
   "shadows": "pandas.core.internals.BlockManager"
  },
  "type": "import"
 },
 "pandas.io.packers.Categorical": {
  "data": {
   "shadows": "pandas.Categorical"
  },
  "type": "import"
 },
 "pandas.io.packers.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.io.packers.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.io.packers.ExtType": {
  "data": {
   "shadows": "pandas.msgpack.ExtType"
  },
  "type": "import"
 },
 "pandas.io.packers.Float64Index": {
  "data": {
   "shadows": "pandas.Float64Index"
  },
  "type": "import"
 },
 "pandas.io.packers.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.io.packers.Int64Index": {
  "data": {
   "shadows": "pandas.Int64Index"
  },
  "type": "import"
 },
 "pandas.io.packers.IntIndex": {
  "data": {
   "shadows": "pandas.sparse.array.IntIndex"
  },
  "type": "import"
 },
 "pandas.io.packers.Iterator": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.io.packers.Iterator.__init__": {
  "data": {
   "lineno": 761
  },
  "type": "function"
 },
 "pandas.io.packers.Iterator.__iter__": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "isinstance",
    "open",
    "pandas.compat.BytesIO",
    "pandas.compat.string_types",
    "pandas.io.packers.os",
    "pandas.io.packers.unpack"
   ]
  },
  "type": "function"
 },
 "pandas.io.packers.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.io.packers.NDFrame": {
  "data": {
   "shadows": "pandas.core.generic.NDFrame"
  },
  "type": "import"
 },
 "pandas.io.packers.NaT": {
  "data": {
   "shadows": "pandas.NaT"
  },
  "type": "import"
 },
 "pandas.io.packers.NaTType": {
  "data": {
   "shadows": "pandas.tslib.NaTType"
  },
  "type": "import"
 },
 "pandas.io.packers.Packer": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "pandas.msgpack.Packer"
   ]
  },
  "type": "class"
 },
 "pandas.io.packers.Packer.__init__": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "pandas.io.packers.encode",
    "pandas.msgpack.Packer",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.packers.Panel": {
  "data": {
   "shadows": "pandas.Panel"
  },
  "type": "import"
 },
 "pandas.io.packers.PerformanceWarning": {
  "data": {
   "shadows": "pandas.core.common.PerformanceWarning"
  },
  "type": "import"
 },
 "pandas.io.packers.Period": {
  "data": {
   "shadows": "pandas.Period"
  },
  "type": "import"
 },
 "pandas.io.packers.PeriodIndex": {
  "data": {
   "shadows": "pandas.PeriodIndex"
  },
  "type": "import"
 },
 "pandas.io.packers.RangeIndex": {
  "data": {
   "shadows": "pandas.RangeIndex"
  },
  "type": "import"
 },
 "pandas.io.packers.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.io.packers.SparseDataFrame": {
  "data": {
   "shadows": "pandas.sparse.api.SparseDataFrame"
  },
  "type": "import"
 },
 "pandas.io.packers.SparsePanel": {
  "data": {
   "shadows": "pandas.sparse.api.SparsePanel"
  },
  "type": "import"
 },
 "pandas.io.packers.SparseSeries": {
  "data": {
   "shadows": "pandas.sparse.api.SparseSeries"
  },
  "type": "import"
 },
 "pandas.io.packers.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.io.packers.Unpacker": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "pandas.msgpack.Unpacker"
   ]
  },
  "type": "class"
 },
 "pandas.io.packers.Unpacker.__init__": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "pandas.io.packers.decode",
    "pandas.msgpack.ExtType",
    "pandas.msgpack.Unpacker",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.packers._BadMove": {
  "data": {
   "shadows": "pandas.util._move.BadMove"
  },
  "type": "import"
 },
 "pandas.io.packers._Packer": {
  "data": {
   "shadows": "pandas.msgpack.Packer"
  },
  "type": "import"
 },
 "pandas.io.packers._Unpacker": {
  "data": {
   "shadows": "pandas.msgpack.Unpacker"
  },
  "type": "import"
 },
 "pandas.io.packers._check_blosc": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "function"
 },
 "pandas.io.packers._check_zlib": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "function"
 },
 "pandas.io.packers._move_into_mutable_buffer": {
  "data": {
   "shadows": "pandas.util._move.move_into_mutable_buffer"
  },
  "type": "import"
 },
 "pandas.io.packers.blosc": {
  "data": {
   "shadows": "blosc"
  },
  "type": "import"
 },
 "pandas.io.packers.c2f": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "ftype",
    "numpy.typeDict",
    "pandas.io.packers.c2f_dict"
   ]
  },
  "type": "function"
 },
 "pandas.io.packers.c2f_dict": {
  "data": {
   "lineno": 238
  },
  "type": "constant"
 },
 "pandas.io.packers.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.io.packers.compressor": {
  "data": {
   "lineno": 114
  },
  "type": "constant"
 },
 "pandas.io.packers.convert": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "numpy.object_",
    "pandas.core.common.is_categorical_dtype",
    "pandas.core.common.is_object_dtype",
    "pandas.core.common.needs_i8_conversion",
    "pandas.io.packers._check_blosc",
    "pandas.io.packers._check_zlib",
    "pandas.io.packers.blosc",
    "pandas.io.packers.compressor",
    "pandas.io.packers.zlib",
    "pandas.msgpack.ExtType"
   ]
  },
  "type": "function"
 },
 "pandas.io.packers.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "pandas.io.packers.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.io.packers.decode": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "complex",
    "create_block",
    "datetime.timedelta",
    "dateutil.parser.parse",
    "dict",
    "dtype",
    "dtype.type",
    "from_codes",
    "getattr",
    "globals",
    "int",
    "isinstance",
    "list",
    "numpy.datetime64",
    "numpy.int64",
    "numpy.timedelta64",
    "numpy.typeDict",
    "pandas.NaT",
    "pandas.Period",
    "pandas.Timestamp",
    "pandas.core.common.pandas_dtype",
    "pandas.core.internals.BlockManager",
    "pandas.io.packers.c2f",
    "pandas.io.packers.dtype_for",
    "pandas.io.packers.unconvert",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.io.packers.decode.create_block": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "getattr",
    "pandas.core.internals",
    "pandas.core.internals.make_block",
    "pandas.io.packers.dtype_for",
    "pandas.io.packers.unconvert"
   ]
  },
  "type": "function"
 },
 "pandas.io.packers.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "pandas.io.packers.dtype_dict": {
  "data": {
   "lineno": 218
  },
  "type": "constant"
 },
 "pandas.io.packers.dtype_for": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "numpy.typeDict.get",
    "pandas.io.packers.dtype_dict"
   ]
  },
  "type": "function"
 },
 "pandas.io.packers.encode": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "Exception",
    "NotImplementedError",
    "complex",
    "datetime.date",
    "datetime.datetime",
    "datetime.timedelta",
    "getattr",
    "isinstance",
    "issubclass",
    "numpy.datetime64",
    "numpy.iscomplexobj",
    "numpy.ndarray",
    "numpy.number",
    "numpy.timedelta64",
    "pandas.Categorical",
    "pandas.DatetimeIndex",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.RangeIndex",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.compat.u",
    "pandas.compat.u_safe",
    "pandas.core.generic.NDFrame",
    "pandas.io.packers.compressor",
    "pandas.io.packers.convert",
    "pandas.sparse.api.SparseDataFrame",
    "pandas.sparse.api.SparsePanel",
    "pandas.sparse.api.SparseSeries",
    "pandas.sparse.array.BlockIndex",
    "pandas.sparse.array.IntIndex",
    "pandas.tslib.NaTType",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.io.packers.get_filepath_or_buffer": {
  "data": {
   "shadows": "pandas.io.common.get_filepath_or_buffer"
  },
  "type": "import"
 },
 "pandas.io.packers.internals": {
  "data": {
   "shadows": "pandas.core.internals"
  },
  "type": "import"
 },
 "pandas.io.packers.is_categorical_dtype": {
  "data": {
   "shadows": "pandas.core.common.is_categorical_dtype"
  },
  "type": "import"
 },
 "pandas.io.packers.is_object_dtype": {
  "data": {
   "shadows": "pandas.core.common.is_object_dtype"
  },
  "type": "import"
 },
 "pandas.io.packers.make_block": {
  "data": {
   "shadows": "pandas.core.internals.make_block"
  },
  "type": "import"
 },
 "pandas.io.packers.needs_i8_conversion": {
  "data": {
   "shadows": "pandas.core.common.needs_i8_conversion"
  },
  "type": "import"
 },
 "pandas.io.packers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.io.packers.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.io.packers.pack": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "pandas.io.packers.encode",
    "pandas.msgpack.Packer"
   ]
  },
  "type": "function"
 },
 "pandas.io.packers.pandas_dtype": {
  "data": {
   "shadows": "pandas.core.common.pandas_dtype"
  },
  "type": "import"
 },
 "pandas.io.packers.parse": {
  "data": {
   "shadows": "dateutil.parser.parse"
  },
  "type": "import"
 },
 "pandas.io.packers.read_msgpack": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "hasattr",
    "isinstance",
    "open",
    "pandas.compat.BytesIO",
    "pandas.compat.binary_type",
    "pandas.compat.callable",
    "pandas.compat.string_types",
    "pandas.io.common.get_filepath_or_buffer",
    "pandas.io.packers.Iterator",
    "pandas.io.packers.os",
    "read"
   ]
  },
  "type": "function"
 },
 "pandas.io.packers.read_msgpack.read": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "len",
    "list",
    "pandas.io.packers.unpack"
   ]
  },
  "type": "function"
 },
 "pandas.io.packers.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.io.packers.to_msgpack": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "isinstance",
    "open",
    "pandas.compat.BytesIO",
    "pandas.compat.string_types",
    "pandas.compat.u",
    "pandas.io.packers.compressor",
    "writer"
   ]
  },
  "type": "function"
 },
 "pandas.io.packers.to_msgpack.writer": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "pandas.io.packers.pack"
   ]
  },
  "type": "function"
 },
 "pandas.io.packers.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.io.packers.u_safe": {
  "data": {
   "shadows": "pandas.compat.u_safe"
  },
  "type": "import"
 },
 "pandas.io.packers.unconvert": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "ValueError",
    "decompress",
    "isinstance",
    "len",
    "numpy.array",
    "numpy.frombuffer",
    "numpy.fromstring",
    "object",
    "pandas.core.common.PerformanceWarning",
    "pandas.core.common.is_categorical_dtype",
    "pandas.core.common.is_object_dtype",
    "pandas.core.common.pandas_dtype",
    "pandas.io.packers._check_blosc",
    "pandas.io.packers._check_zlib",
    "pandas.io.packers.blosc",
    "pandas.io.packers.warnings",
    "pandas.io.packers.zlib",
    "pandas.msgpack.ExtType",
    "pandas.util._move.BadMove",
    "pandas.util._move.move_into_mutable_buffer"
   ]
  },
  "type": "function"
 },
 "pandas.io.packers.unpack": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "pandas.io.packers.decode",
    "pandas.msgpack.ExtType",
    "pandas.msgpack.Unpacker"
   ]
  },
  "type": "function"
 },
 "pandas.io.packers.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.io.packers.zlib": {
  "data": {
   "shadows": "zlib"
  },
  "type": "import"
 },
 "pandas.io.pickle": {
  "data": {},
  "type": "module"
 },
 "pandas.io.pickle.BytesIO": {
  "data": {
   "shadows": "pandas.compat.BytesIO"
  },
  "type": "import"
 },
 "pandas.io.pickle.PY3": {
  "data": {
   "shadows": "pandas.compat.PY3"
  },
  "type": "import"
 },
 "pandas.io.pickle._pickle_array": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "numpy.lib.format.write_array",
    "numpy.ndarray",
    "pandas.compat.BytesIO"
   ]
  },
  "type": "function"
 },
 "pandas.io.pickle._unpickle_array": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "bytes",
    "numpy.lib.format.read_array",
    "pandas.compat.BytesIO",
    "pandas.core.common._NS_DTYPE",
    "pandas.core.common.is_datetime64_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.io.pickle.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.io.pickle.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.io.pickle.pc": {
  "data": {
   "shadows": "pandas.compat.pickle_compat"
  },
  "type": "import"
 },
 "pandas.io.pickle.pkl": {
  "data": {
   "shadows": "pandas.compat.cPickle"
  },
  "type": "import"
 },
 "pandas.io.pickle.read_array": {
  "data": {
   "shadows": "numpy.lib.format.read_array"
  },
  "type": "import"
 },
 "pandas.io.pickle.read_pickle": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "pandas.compat.PY3",
    "try_read"
   ]
  },
  "type": "function"
 },
 "pandas.io.pickle.read_pickle.try_read": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "Exception",
    "open",
    "pandas.compat.cPickle.load",
    "pandas.compat.pickle_compat.load"
   ]
  },
  "type": "function"
 },
 "pandas.io.pickle.to_pickle": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "open",
    "pandas.compat.cPickle.HIGHEST_PROTOCOL",
    "pandas.compat.cPickle.dump"
   ]
  },
  "type": "function"
 },
 "pandas.io.pickle.write_array": {
  "data": {
   "shadows": "numpy.lib.format.write_array"
  },
  "type": "import"
 },
 "pandas.io.sas": {
  "data": {},
  "type": "module"
 },
 "pandas.io.sas.sas7bdat": {
  "data": {},
  "type": "module"
 },
 "pandas.io.sas.sas7bdat.BaseIterator": {
  "data": {
   "shadows": "pandas.io.common.BaseIterator"
  },
  "type": "import"
 },
 "pandas.io.sas.sas7bdat.Parser": {
  "data": {
   "shadows": "pandas.io.sas.saslib.Parser"
  },
  "type": "import"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "pandas.io.common.BaseIterator"
   ]
  },
  "type": "class"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader.__init__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "isinstance",
    "open",
    "pandas.compat.string_types",
    "pandas.io.common.get_filepath_or_buffer"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._chunk_to_dataframe": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.float64",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.datetime",
    "pandas.to_timedelta",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._get_properties": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pandas.datetime",
    "pandas.io.sas.sas_constants.align_1_checker_value",
    "pandas.io.sas.sas_constants.align_1_length",
    "pandas.io.sas.sas_constants.align_1_offset",
    "pandas.io.sas.sas_constants.align_2_length",
    "pandas.io.sas.sas_constants.align_2_offset",
    "pandas.io.sas.sas_constants.align_2_value",
    "pandas.io.sas.sas_constants.dataset_length",
    "pandas.io.sas.sas_constants.dataset_offset",
    "pandas.io.sas.sas_constants.date_created_length",
    "pandas.io.sas.sas_constants.date_created_offset",
    "pandas.io.sas.sas_constants.date_modified_length",
    "pandas.io.sas.sas_constants.date_modified_offset",
    "pandas.io.sas.sas_constants.encoding_length",
    "pandas.io.sas.sas_constants.encoding_names",
    "pandas.io.sas.sas_constants.encoding_offset",
    "pandas.io.sas.sas_constants.endianness_length",
    "pandas.io.sas.sas_constants.endianness_offset",
    "pandas.io.sas.sas_constants.file_type_length",
    "pandas.io.sas.sas_constants.file_type_offset",
    "pandas.io.sas.sas_constants.header_size_length",
    "pandas.io.sas.sas_constants.header_size_offset",
    "pandas.io.sas.sas_constants.magic",
    "pandas.io.sas.sas_constants.os_maker_length",
    "pandas.io.sas.sas_constants.os_maker_offset",
    "pandas.io.sas.sas_constants.os_name_length",
    "pandas.io.sas.sas_constants.os_name_offset",
    "pandas.io.sas.sas_constants.os_version_number_length",
    "pandas.io.sas.sas_constants.os_version_number_offset",
    "pandas.io.sas.sas_constants.page_bit_offset_x64",
    "pandas.io.sas.sas_constants.page_bit_offset_x86",
    "pandas.io.sas.sas_constants.page_count_length",
    "pandas.io.sas.sas_constants.page_count_offset",
    "pandas.io.sas.sas_constants.page_size_length",
    "pandas.io.sas.sas_constants.page_size_offset",
    "pandas.io.sas.sas_constants.platform_length",
    "pandas.io.sas.sas_constants.platform_offset",
    "pandas.io.sas.sas_constants.sas_release_length",
    "pandas.io.sas.sas_constants.sas_release_offset",
    "pandas.io.sas.sas_constants.sas_server_type_length",
    "pandas.io.sas.sas_constants.sas_server_type_offset",
    "pandas.io.sas.sas_constants.subheader_pointer_length_x64",
    "pandas.io.sas.sas_constants.subheader_pointer_length_x86",
    "pandas.io.sas.sas_constants.u64_byte_checker_value",
    "pandas.to_timedelta",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._get_subheader_index": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "ValueError",
    "pandas.io.sas.sas_constants.compressed_subheader_id",
    "pandas.io.sas.sas_constants.compressed_subheader_type",
    "pandas.io.sas.sas_constants.index.dataSubheaderIndex",
    "pandas.io.sas.sas_constants.subheader_signature_to_index.get"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._parse_metadata": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._process_columnattributes_subheader": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.empty",
    "numpy.int64",
    "pandas.io.sas.sas_constants.column_data_length_length",
    "pandas.io.sas.sas_constants.column_data_length_offset",
    "pandas.io.sas.sas_constants.column_data_offset_offset",
    "pandas.io.sas.sas_constants.column_type_length",
    "pandas.io.sas.sas_constants.column_type_offset",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._process_columnlist_subheader": {
  "data": {
   "lineno": 508
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._process_columnname_subheader": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "pandas.io.sas.sas_constants.column_name_length_length",
    "pandas.io.sas.sas_constants.column_name_length_offset",
    "pandas.io.sas.sas_constants.column_name_offset_length",
    "pandas.io.sas.sas_constants.column_name_offset_offset",
    "pandas.io.sas.sas_constants.column_name_pointer_length",
    "pandas.io.sas.sas_constants.column_name_text_subheader_length",
    "pandas.io.sas.sas_constants.column_name_text_subheader_offset",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._process_columnsize_subheader": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._process_columntext_subheader": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "pandas.io.sas.sas_constants.compression_literals",
    "pandas.io.sas.sas_constants.rle_compression",
    "pandas.io.sas.sas_constants.text_block_size_length"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._process_format_subheader": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "len",
    "min",
    "pandas.io.sas.sas7bdat._column",
    "pandas.io.sas.sas_constants.column_format_length_length",
    "pandas.io.sas.sas_constants.column_format_length_offset",
    "pandas.io.sas.sas_constants.column_format_offset_length",
    "pandas.io.sas.sas_constants.column_format_offset_offset",
    "pandas.io.sas.sas_constants.column_format_text_subheader_index_length",
    "pandas.io.sas.sas_constants.column_format_text_subheader_index_offset",
    "pandas.io.sas.sas_constants.column_label_length_length",
    "pandas.io.sas.sas_constants.column_label_length_offset",
    "pandas.io.sas.sas_constants.column_label_offset_length",
    "pandas.io.sas.sas_constants.column_label_offset_offset",
    "pandas.io.sas.sas_constants.column_label_text_subheader_index_length",
    "pandas.io.sas.sas_constants.column_label_text_subheader_index_offset"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._process_page_meta": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "pandas.io.sas.sas_constants.page_amd_type",
    "pandas.io.sas.sas_constants.page_meta_type",
    "pandas.io.sas.sas_constants.page_mix_types"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._process_page_metadata": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "pandas.io.sas.sas_constants.subheader_pointers_offset",
    "pandas.io.sas.sas_constants.truncated_subheader_id",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._process_rowsize_subheader": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "pandas.io.sas.sas_constants.col_count_p1_multiplier",
    "pandas.io.sas.sas_constants.col_count_p2_multiplier",
    "pandas.io.sas.sas_constants.row_count_offset_multiplier",
    "pandas.io.sas.sas_constants.row_count_on_mix_page_offset_multiplier",
    "pandas.io.sas.sas_constants.row_length_offset_multiplier"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._process_subheader": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "ValueError",
    "pandas.io.sas.sas_constants.index.columnAttributesIndex",
    "pandas.io.sas.sas_constants.index.columnListIndex",
    "pandas.io.sas.sas_constants.index.columnNameIndex",
    "pandas.io.sas.sas_constants.index.columnSizeIndex",
    "pandas.io.sas.sas_constants.index.columnTextIndex",
    "pandas.io.sas.sas_constants.index.dataSubheaderIndex",
    "pandas.io.sas.sas_constants.index.formatAndLabelIndex",
    "pandas.io.sas.sas_constants.index.rowSizeIndex",
    "pandas.io.sas.sas_constants.index.subheaderCountsIndex",
    "processor"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._process_subheader_counts": {
  "data": {
   "lineno": 400
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._process_subheader_pointers": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "pandas.io.sas.sas7bdat._subheader_pointer"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._read_bytes": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._read_float": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "ValueError",
    "pandas.io.sas.sas7bdat.struct"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._read_int": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "ValueError",
    "pandas.io.sas.sas7bdat.struct"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._read_next_page": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pandas.io.sas.sas_constants.page_data_type",
    "pandas.io.sas.sas_constants.page_meta_type",
    "pandas.io.sas.sas_constants.page_mix_types"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._read_page_header": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "pandas.io.sas.sas_constants.block_count_length",
    "pandas.io.sas.sas_constants.block_count_offset",
    "pandas.io.sas.sas_constants.page_type_length",
    "pandas.io.sas.sas_constants.page_type_offset",
    "pandas.io.sas.sas_constants.subheader_count_length",
    "pandas.io.sas.sas_constants.subheader_count_offset"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader._read_subheader_signature": {
  "data": {
   "lineno": 333
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat.SAS7BDATReader.read": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.object",
    "numpy.uint8",
    "pandas.io.sas.saslib.Parser"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas7bdat._column": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.io.sas.sas7bdat._subheader_pointer": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.io.sas.sas7bdat.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.io.sas.sas7bdat.const": {
  "data": {
   "shadows": "pandas.io.sas.sas_constants"
  },
  "type": "import"
 },
 "pandas.io.sas.sas7bdat.get_filepath_or_buffer": {
  "data": {
   "shadows": "pandas.io.common.get_filepath_or_buffer"
  },
  "type": "import"
 },
 "pandas.io.sas.sas7bdat.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.io.sas.sas7bdat.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.io.sas.sas7bdat.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "pandas.io.sas.sas_constants": {
  "data": {
   "symbols_in_volume": [
    "pandas.io.sas.sas_constants.index",
    "pandas.io.sas.sas_constants.rdc_compression",
    "pandas.io.sas.sas_constants.rle_compression"
   ]
  },
  "type": "module"
 },
 "pandas.io.sas.sas_constants.align_1_checker_value": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.align_1_length": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.align_1_offset": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.align_1_value": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.align_2_length": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.align_2_offset": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.align_2_value": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.block_count_length": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.block_count_offset": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.col_count_p1_multiplier": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.col_count_p2_multiplier": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.column_data_length_length": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.column_data_length_offset": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.column_data_offset_offset": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.column_format_length_length": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.column_format_length_offset": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.column_format_offset_length": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.column_format_offset_offset": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.column_format_text_subheader_index_length": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.column_format_text_subheader_index_offset": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.column_label_length_length": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.column_label_length_offset": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.column_label_offset_length": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.column_label_offset_offset": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.column_label_text_subheader_index_length": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.column_label_text_subheader_index_offset": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.column_name_length_length": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.column_name_length_offset": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.column_name_offset_length": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.column_name_offset_offset": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.column_name_pointer_length": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.column_name_text_subheader_length": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.column_name_text_subheader_offset": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.column_type_length": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.column_type_offset": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.compressed_subheader_id": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.compressed_subheader_type": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.compression_literals": {
  "data": {
   "lineno": 97
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.dataset_length": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.dataset_offset": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.date_created_length": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.date_created_offset": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.date_modified_length": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.date_modified_offset": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.encoding_length": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.encoding_names": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.encoding_offset": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.endianness_length": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.endianness_offset": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.file_type_length": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.file_type_offset": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.header_size_length": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.header_size_offset": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.index": {
  "data": {
   "lineno": 105
  },
  "type": "class"
 },
 "pandas.io.sas.sas_constants.magic": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.os_maker_length": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.os_maker_offset": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.os_name_length": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.os_name_offset": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.os_version_number_length": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.os_version_number_offset": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.page_amd_type": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.page_bit_offset_x64": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.page_bit_offset_x86": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.page_comp_type": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.page_count_length": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.page_count_offset": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.page_data_type": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.page_meta_type": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.page_metc_type": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.page_mix_types": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.page_size_length": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.page_size_offset": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.page_type_length": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.page_type_offset": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.platform_length": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.platform_offset": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.rdc_compression": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.rle_compression": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.row_count_offset_multiplier": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.row_count_on_mix_page_offset_multiplier": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.row_length_offset_multiplier": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.sas_release_length": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.sas_release_offset": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.sas_server_type_length": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.sas_server_type_offset": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.subheader_count_length": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.subheader_count_offset": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.subheader_pointer_length_x64": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.subheader_pointer_length_x86": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.subheader_pointers_offset": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.subheader_signature_to_index": {
  "data": {
   "lineno": 117
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.text_block_size_length": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.truncated_subheader_id": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_constants.u64_byte_checker_value": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_xport": {
  "data": {
   "symbols_in_volume": [
    "pandas.io.sas.sas_xport._base_params_doc",
    "pandas.io.sas.sas_xport._format_params_doc",
    "pandas.io.sas.sas_xport._iterator_doc",
    "pandas.io.sas.sas_xport._params2_doc"
   ]
  },
  "type": "module"
 },
 "pandas.io.sas.sas_xport.Appender": {
  "data": {
   "shadows": "pandas.util.decorators.Appender"
  },
  "type": "import"
 },
 "pandas.io.sas.sas_xport.BaseIterator": {
  "data": {
   "shadows": "pandas.io.common.BaseIterator"
  },
  "type": "import"
 },
 "pandas.io.sas.sas_xport.XportReader": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "__doc__",
    "pandas.io.common.BaseIterator",
    "pandas.io.sas.sas_xport._xport_reader_doc"
   ]
  },
  "type": "class"
 },
 "pandas.io.sas.sas_xport.XportReader.__init__": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "bytes",
    "isinstance",
    "open",
    "pandas.compat.BytesIO",
    "pandas.compat.text_type",
    "pandas.io.common.get_filepath_or_buffer",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas_xport.XportReader.__next__": {
  "data": {
   "lineno": 354
  },
  "type": "function"
 },
 "pandas.io.sas.sas_xport.XportReader._get_row": {
  "data": {
   "lineno": 256
  },
  "type": "function"
 },
 "pandas.io.sas.sas_xport.XportReader._missing_double": {
  "data": {
   "lineno": 411
  },
  "type": "function"
 },
 "pandas.io.sas.sas_xport.XportReader._read_header": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "ValueError",
    "dict",
    "enumerate",
    "int",
    "len",
    "numpy.dtype",
    "pandas.io.sas.sas_xport._correct_header1",
    "pandas.io.sas.sas_xport._correct_header2",
    "pandas.io.sas.sas_xport._correct_line1",
    "pandas.io.sas.sas_xport._correct_obs_header",
    "pandas.io.sas.sas_xport._fieldkeys",
    "pandas.io.sas.sas_xport._parse_date",
    "pandas.io.sas.sas_xport._split_line",
    "pandas.io.sas.sas_xport.struct",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas_xport.XportReader._record_count": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "len",
    "numpy.flatnonzero",
    "numpy.frombuffer",
    "numpy.uint64",
    "pandas.io.sas.sas_xport.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas_xport.XportReader.get_chunk": {
  "data": {
   "lineno": 394
  },
  "type": "function"
 },
 "pandas.io.sas.sas_xport.XportReader.read": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "StopIteration",
    "enumerate",
    "min",
    "numpy.frombuffer",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.PY3",
    "pandas.io.sas.sas_xport._handle_truncated_float_vec",
    "pandas.io.sas.sas_xport._parse_float_vec",
    "pandas.io.sas.sas_xport._read_method_doc",
    "pandas.util.decorators.Appender",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas_xport._base_params_doc": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_xport._correct_header1": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_xport._correct_header2": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_xport._correct_line1": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_xport._correct_obs_header": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_xport._fieldkeys": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_xport._format_params_doc": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_xport._handle_truncated_float_vec": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "len",
    "numpy.dtype",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas_xport._iterator_doc": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_xport._params2_doc": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_xport._parse_date": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "ValueError",
    "datetime.datetime.strptime",
    "pandas.NaT"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas_xport._parse_float_vec": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "len",
    "numpy.dtype",
    "numpy.empty",
    "numpy.uint8",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pandas.io.sas.sas_xport._read_method_doc": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_xport._read_sas_doc": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_xport._split_line": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "pandas.io.sas.sas_xport._xport_reader_doc": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "pandas.io.sas.sas_xport.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.io.sas.sas_xport.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.io.sas.sas_xport.get_filepath_or_buffer": {
  "data": {
   "shadows": "pandas.io.common.get_filepath_or_buffer"
  },
  "type": "import"
 },
 "pandas.io.sas.sas_xport.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.io.sas.sas_xport.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.io.sas.sas_xport.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "pandas.io.sas.sas_xport.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.io.sas.sasreader": {
  "data": {},
  "type": "module"
 },
 "pandas.io.sas.sasreader.SAS7BDATReader": {
  "data": {
   "shadows": "pandas.io.sas.sas7bdat.SAS7BDATReader"
  },
  "type": "import"
 },
 "pandas.io.sas.sasreader.XportReader": {
  "data": {
   "shadows": "pandas.io.sas.sas_xport.XportReader"
  },
  "type": "import"
 },
 "pandas.io.sas.sasreader.read_sas": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "ValueError",
    "format",
    "format.lower",
    "pandas.io.sas.sas7bdat.SAS7BDATReader",
    "pandas.io.sas.sas_xport.XportReader"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata": {
  "data": {
   "symbols_in_volume": [
    "pandas.io.stata._chunksize_params",
    "pandas.io.stata._encoding_params",
    "pandas.io.stata._iterator_params",
    "pandas.io.stata._statafile_processing_params1",
    "pandas.io.stata._statafile_processing_params2",
    "pandas.io.stata.datetime"
   ]
  },
  "type": "module"
 },
 "pandas.io.stata.Appender": {
  "data": {
   "shadows": "pandas.util.decorators.Appender"
  },
  "type": "import"
 },
 "pandas.io.stata.BaseIterator": {
  "data": {
   "shadows": "pandas.io.common.BaseIterator"
  },
  "type": "import"
 },
 "pandas.io.stata.BytesIO": {
  "data": {
   "shadows": "pandas.compat.BytesIO"
  },
  "type": "import"
 },
 "pandas.io.stata.Categorical": {
  "data": {
   "shadows": "pandas.core.categorical.Categorical"
  },
  "type": "import"
 },
 "pandas.io.stata.DataFrame": {
  "data": {
   "shadows": "pandas.core.frame.DataFrame"
  },
  "type": "import"
 },
 "pandas.io.stata.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.io.stata.InvalidColumnName": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "Warning"
   ]
  },
  "type": "class"
 },
 "pandas.io.stata.NaT": {
  "data": {
   "shadows": "pandas.tslib.NaT"
  },
  "type": "import"
 },
 "pandas.io.stata.PossiblePrecisionLoss": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "Warning"
   ]
  },
  "type": "class"
 },
 "pandas.io.stata.Series": {
  "data": {
   "shadows": "pandas.core.series.Series"
  },
  "type": "import"
 },
 "pandas.io.stata.StataMissingValue": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "chr",
    "pandas.compat.long",
    "pandas.compat.range",
    "pandas.core.base.StringMixin",
    "pandas.io.stata.struct",
    "property"
   ]
  },
  "type": "class"
 },
 "pandas.io.stata.StataMissingValue.__eq__": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataMissingValue.__init__": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "float",
    "pandas.compat.long"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataMissingValue.__repr__": {
  "data": {
   "lineno": 771
  },
  "type": "function"
 },
 "pandas.io.stata.StataMissingValue.__unicode__": {
  "data": {
   "lineno": 768
  },
  "type": "function"
 },
 "pandas.io.stata.StataMissingValue.get_base_missing_value": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int8"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataParser": {
  "data": {
   "lineno": 796,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.io.stata.StataParser.__init__": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "dict",
    "list",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int8",
    "numpy.uint8",
    "pandas.compat.lrange",
    "pandas.compat.lzip",
    "pandas.compat.range",
    "pandas.io.stata.struct",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader": {
  "data": {
   "lineno": 910,
   "symbols_in_volume": [
    "__doc__",
    "pandas.io.common.BaseIterator",
    "pandas.io.stata.StataParser",
    "pandas.io.stata._stata_reader_doc"
   ]
  },
  "type": "class"
 },
 "pandas.io.stata.StataReader.__enter__": {
  "data": {
   "lineno": 962
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader.__exit__": {
  "data": {
   "lineno": 966
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader.__init__": {
  "data": {
   "lineno": 913,
   "symbols_in_volume": [
    "bytes",
    "isinstance",
    "open",
    "pandas.compat.BytesIO",
    "pandas.compat.text_type",
    "pandas.io.common.get_filepath_or_buffer",
    "pandas.io.stata.StataReader",
    "pandas.io.stata._set_endianness",
    "pandas.io.stata.sys",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader.__next__": {
  "data": {
   "lineno": 1383
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader._calcsize": {
  "data": {
   "lineno": 1263,
   "symbols_in_volume": [
    "int",
    "pandas.io.stata.struct",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader._decode": {
  "data": {
   "lineno": 1267
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader._do_convert_categoricals": {
  "data": {
   "lineno": 1629,
   "symbols_in_volume": [
    "list",
    "pandas.compat.iterkeys",
    "pandas.compat.zip",
    "pandas.core.categorical.Categorical",
    "pandas.core.frame.DataFrame.from_items",
    "pandas.core.series.Series"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader._do_convert_missing": {
  "data": {
   "lineno": 1555,
   "symbols_in_volume": [
    "enumerate",
    "numpy.argwhere",
    "numpy.float32",
    "numpy.float64",
    "numpy.logical_or",
    "numpy.nan",
    "numpy.object",
    "numpy.unique",
    "pandas.core.series.Series",
    "pandas.io.stata.StataMissingValue"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader._do_select_columns": {
  "data": {
   "lineno": 1598,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader._get_data_label": {
  "data": {
   "lineno": 1144,
   "symbols_in_volume": [
    "pandas.io.stata.struct"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader._get_dtypes": {
  "data": {
   "lineno": 1059,
   "symbols_in_volume": [
    "f",
    "pandas.compat.range",
    "pandas.io.stata.struct"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader._get_dtypes.f": {
  "data": {
   "lineno": 1077,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader._get_fmtlist": {
  "data": {
   "lineno": 1100,
   "symbols_in_volume": [
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader._get_lbllist": {
  "data": {
   "lineno": 1114,
   "symbols_in_volume": [
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader._get_nobs": {
  "data": {
   "lineno": 1136,
   "symbols_in_volume": [
    "pandas.io.stata.struct"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader._get_seek_variable_labels": {
  "data": {
   "lineno": 1169,
   "symbols_in_volume": [
    "ValueError",
    "pandas.io.stata.struct"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader._get_time_stamp": {
  "data": {
   "lineno": 1157,
   "symbols_in_volume": [
    "ValueError",
    "pandas.io.stata.struct"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader._get_varlist": {
  "data": {
   "lineno": 1090,
   "symbols_in_volume": [
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader._get_vlblist": {
  "data": {
   "lineno": 1124,
   "symbols_in_volume": [
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader._insert_strls": {
  "data": {
   "lineno": 1589,
   "symbols_in_volume": [
    "enumerate",
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader._null_terminate": {
  "data": {
   "lineno": 1271,
   "symbols_in_volume": [
    "pandas.compat.PY3"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader._read_header": {
  "data": {
   "lineno": 977,
   "symbols_in_volume": [
    "int",
    "len",
    "pandas.compat.lmap",
    "pandas.io.stata.struct",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader._read_new_header": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "pandas.io.stata._version_error",
    "pandas.io.stata.struct"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader._read_old_header": {
  "data": {
   "lineno": 1182,
   "symbols_in_volume": [
    "ValueError",
    "numpy.frombuffer",
    "numpy.uint8",
    "ord",
    "pandas.compat.range",
    "pandas.io.stata._version_error",
    "pandas.io.stata.struct"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader._read_strls": {
  "data": {
   "lineno": 1341,
   "symbols_in_volume": [
    "pandas.io.stata.struct"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader._read_value_labels": {
  "data": {
   "lineno": 1283,
   "symbols_in_volume": [
    "dict",
    "numpy.argsort",
    "numpy.frombuffer",
    "pandas.compat.range",
    "pandas.io.stata.struct"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader.close": {
  "data": {
   "lineno": 970,
   "symbols_in_volume": [
    "IOError"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader.data": {
  "data": {
   "lineno": 1371,
   "symbols_in_volume": [
    "Exception",
    "pandas.io.stata._data_method_doc",
    "pandas.io.stata.warnings",
    "pandas.util.decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader.data_label": {
  "data": {
   "lineno": 1655
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader.get_chunk": {
  "data": {
   "lineno": 1386
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader.read": {
  "data": {
   "lineno": 1403,
   "symbols_in_volume": [
    "StopIteration",
    "enumerate",
    "int",
    "len",
    "min",
    "numpy.arange",
    "numpy.dtype",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.frombuffer",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.where",
    "object",
    "pandas.compat.lmap",
    "pandas.compat.zip",
    "pandas.core.frame.DataFrame",
    "pandas.core.frame.DataFrame.from_items",
    "pandas.core.frame.DataFrame.from_records",
    "pandas.core.series.Series",
    "pandas.io.stata._date_formats",
    "pandas.io.stata._read_method_doc",
    "pandas.io.stata._stata_elapsed_date_to_datetime_vec",
    "pandas.util.decorators.Appender",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader.value_labels": {
  "data": {
   "lineno": 1665
  },
  "type": "function"
 },
 "pandas.io.stata.StataReader.variable_labels": {
  "data": {
   "lineno": 1659,
   "symbols_in_volume": [
    "dict",
    "pandas.compat.zip"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataValueLabel": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.io.stata.StataValueLabel.__init__": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.int32",
    "pandas.compat.string_types",
    "pandas.compat.zip",
    "pandas.io.stata.ValueLabelTypeMismatch",
    "pandas.io.stata.value_label_mismatch_doc",
    "pandas.io.stata.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataValueLabel._encode": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "pandas.compat.PY3"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataValueLabel.generate_value_label": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "pandas.compat.BytesIO",
    "pandas.compat.range",
    "pandas.io.stata._pad_bytes",
    "pandas.io.stata.struct"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataWriter": {
  "data": {
   "lineno": 1802,
   "symbols_in_volume": [
    "pandas.io.stata.StataParser"
   ]
  },
  "type": "class"
 },
 "pandas.io.stata.StataWriter.__init__": {
  "data": {
   "lineno": 1848,
   "symbols_in_volume": [
    "numpy.int16",
    "numpy.int32",
    "numpy.int8",
    "pandas.io.stata.StataWriter",
    "pandas.io.stata._open_file_binary_write",
    "pandas.io.stata._set_endianness",
    "pandas.io.stata.sys",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataWriter._check_column_names": {
  "data": {
   "lineno": 1932,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "len",
    "list",
    "min",
    "pandas.compat.string_types",
    "pandas.compat.text_type",
    "pandas.compat.zip",
    "pandas.io.stata.InvalidColumnName",
    "pandas.io.stata.invalid_name_doc",
    "pandas.io.stata.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataWriter._null_terminate": {
  "data": {
   "lineno": 2176,
   "symbols_in_volume": [
    "pandas.compat.PY3"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataWriter._prepare_categoricals": {
  "data": {
   "lineno": 1877,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "get_base_missing_value",
    "numpy.array",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "pandas.compat.zip",
    "pandas.core.common.is_categorical_dtype",
    "pandas.core.frame.DataFrame.from_items",
    "pandas.io.stata.StataMissingValue",
    "pandas.io.stata.StataValueLabel"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataWriter._prepare_data": {
  "data": {
   "lineno": 2138,
   "symbols_in_volume": [
    "enumerate",
    "numpy.dtype",
    "numpy.fromiter",
    "ord",
    "pandas.compat.zip",
    "pandas.io.stata._datetime_to_stata_elapsed_vec",
    "pandas.io.stata._pad_bytes",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataWriter._prepare_pandas": {
  "data": {
   "lineno": 2005,
   "symbols_in_volume": [
    "numpy.dtype",
    "pandas.io.stata._cast_to_stata_types",
    "pandas.io.stata._convert_datetime_to_stata_type",
    "pandas.io.stata._dtype_to_default_stata_fmt",
    "pandas.io.stata._dtype_to_stata_type",
    "pandas.io.stata._maybe_convert_to_int_keys"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataWriter._replace_nans": {
  "data": {
   "lineno": 1917,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataWriter._write": {
  "data": {
   "lineno": 1867,
   "symbols_in_volume": [
    "pandas.compat.PY3"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataWriter._write_data": {
  "data": {
   "lineno": 2172
  },
  "type": "function"
 },
 "pandas.io.stata.StataWriter._write_descriptors": {
  "data": {
   "lineno": 2099,
   "symbols_in_volume": [
    "pandas.compat.range",
    "pandas.io.stata._pad_bytes"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataWriter._write_header": {
  "data": {
   "lineno": 2068,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pandas.io.stata._pad_bytes",
    "pandas.io.stata.datetime",
    "pandas.io.stata.struct"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataWriter._write_value_labels": {
  "data": {
   "lineno": 2063
  },
  "type": "function"
 },
 "pandas.io.stata.StataWriter._write_variable_labels": {
  "data": {
   "lineno": 2132,
   "symbols_in_volume": [
    "pandas.compat.range",
    "pandas.io.stata._pad_bytes"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StataWriter.write_file": {
  "data": {
   "lineno": 2051,
   "symbols_in_volume": [
    "pandas.io.stata._pad_bytes"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.StringMixin": {
  "data": {
   "shadows": "pandas.core.base.StringMixin"
  },
  "type": "import"
 },
 "pandas.io.stata.Timestamp": {
  "data": {
   "shadows": "pandas.tslib.Timestamp"
  },
  "type": "import"
 },
 "pandas.io.stata.ValueLabelTypeMismatch": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "Warning"
   ]
  },
  "type": "class"
 },
 "pandas.io.stata._cast_to_stata_types": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "numpy.bool",
    "numpy.float64",
    "numpy.iinfo",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint8",
    "pandas.io.stata.PossiblePrecisionLoss",
    "pandas.io.stata.precision_loss_doc",
    "pandas.io.stata.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata._chunksize_params": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "pandas.io.stata._convert_datetime_to_stata_type": {
  "data": {
   "lineno": 1698,
   "symbols_in_volume": [
    "ValueError",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata._data_method_doc": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "pandas.io.stata._date_formats": {
  "data": {
   "lineno": 174
  },
  "type": "constant"
 },
 "pandas.io.stata._datetime_to_stata_elapsed_vec": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "ValueError",
    "numpy.float64",
    "numpy.int",
    "pandas.core.common.is_datetime64_dtype",
    "pandas.core.series.Series",
    "pandas.io.stata.stata_epoch",
    "pandas.io.stata.struct",
    "pandas.isnull",
    "pandas.to_datetime",
    "parse_dates_safe",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata._datetime_to_stata_elapsed_vec.parse_dates_safe": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "ValueError",
    "numpy.int64",
    "numpy.vectorize",
    "pandas.DatetimeIndex",
    "pandas.core.common.is_datetime64_dtype",
    "pandas.core.frame.DataFrame",
    "pandas.io.stata.datetime",
    "pandas.io.stata.stata_epoch",
    "pandas.lib.infer_dtype",
    "pandas.to_datetime",
    "v"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata._dtype_to_default_stata_fmt": {
  "data": {
   "lineno": 1764,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "max",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int8",
    "numpy.object_",
    "pandas.core.common._ensure_object",
    "pandas.io.stata.excessive_string_length_error",
    "pandas.lib.infer_dtype",
    "pandas.lib.max_len_string_array",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata._dtype_to_stata_type": {
  "data": {
   "lineno": 1725,
   "symbols_in_volume": [
    "ValueError",
    "chr",
    "max",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int8",
    "numpy.object_",
    "numpy.string_",
    "pandas.core.common._ensure_object",
    "pandas.lib.max_len_string_array"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata._encoding_params": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pandas.io.stata._iterator_params": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "pandas.io.stata._maybe_convert_to_int_keys": {
  "data": {
   "lineno": 1709,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata._open_file_binary_write": {
  "data": {
   "lineno": 1675,
   "symbols_in_volume": [
    "hasattr",
    "open"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata._pad_bytes": {
  "data": {
   "lineno": 1691,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata._read_method_doc": {
  "data": {
   "lineno": 117
  },
  "type": "constant"
 },
 "pandas.io.stata._read_stata_doc": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "pandas.io.stata._set_endianness": {
  "data": {
   "lineno": 1682,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata._stata_elapsed_date_to_datetime_vec": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "ValueError",
    "convert_delta_safe",
    "convert_year_days_safe",
    "convert_year_month_safe",
    "numpy.int64",
    "numpy.isnan",
    "numpy.object",
    "numpy.ones_like",
    "pandas.NaT",
    "pandas.core.series.Series",
    "pandas.io.stata.datetime",
    "pandas.io.stata.stata_epoch",
    "pandas.tslib.NaT",
    "pandas.tslib.Timestamp.max.days",
    "pandas.tslib.Timestamp.max.year",
    "pandas.tslib.Timestamp.min.days",
    "pandas.tslib.Timestamp.min.year",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata._stata_elapsed_date_to_datetime_vec.convert_delta_safe": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "ValueError",
    "dateutil.relativedelta.relativedelta",
    "getattr",
    "int",
    "pandas.core.series.Series",
    "pandas.to_datetime",
    "pandas.to_timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata._stata_elapsed_date_to_datetime_vec.convert_year_days_safe": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "dateutil.relativedelta.relativedelta",
    "getattr",
    "int",
    "pandas.compat.zip",
    "pandas.core.series.Series",
    "pandas.io.stata.datetime",
    "pandas.to_datetime",
    "pandas.to_timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata._stata_elapsed_date_to_datetime_vec.convert_year_month_safe": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "getattr",
    "pandas.compat.zip",
    "pandas.core.series.Series",
    "pandas.io.stata.datetime",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata._stata_reader_doc": {
  "data": {
   "lineno": 133
  },
  "type": "constant"
 },
 "pandas.io.stata._statafile_processing_params1": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pandas.io.stata._statafile_processing_params2": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "pandas.io.stata._version_error": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pandas.io.stata.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.io.stata.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.io.stata.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pandas.io.stata.excessive_string_length_error": {
  "data": {
   "lineno": 438
  },
  "type": "constant"
 },
 "pandas.io.stata.get_filepath_or_buffer": {
  "data": {
   "shadows": "pandas.io.common.get_filepath_or_buffer"
  },
  "type": "import"
 },
 "pandas.io.stata.infer_dtype": {
  "data": {
   "shadows": "pandas.lib.infer_dtype"
  },
  "type": "import"
 },
 "pandas.io.stata.invalid_name_doc": {
  "data": {
   "lineno": 468
  },
  "type": "constant"
 },
 "pandas.io.stata.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.io.stata.lmap": {
  "data": {
   "shadows": "pandas.compat.lmap"
  },
  "type": "import"
 },
 "pandas.io.stata.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.io.stata.lzip": {
  "data": {
   "shadows": "pandas.compat.lzip"
  },
  "type": "import"
 },
 "pandas.io.stata.max_len_string_array": {
  "data": {
   "shadows": "pandas.lib.max_len_string_array"
  },
  "type": "import"
 },
 "pandas.io.stata.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.io.stata.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.io.stata.precision_loss_doc": {
  "data": {
   "lineno": 448
  },
  "type": "constant"
 },
 "pandas.io.stata.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.io.stata.read_stata": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "StopIteration",
    "pandas.io.stata.StataReader",
    "pandas.io.stata._read_stata_doc",
    "pandas.util.decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.io.stata.relativedelta": {
  "data": {
   "shadows": "dateutil.relativedelta.relativedelta"
  },
  "type": "import"
 },
 "pandas.io.stata.stata_epoch": {
  "data": {
   "lineno": 177
  },
  "type": "constant"
 },
 "pandas.io.stata.string_types": {
  "data": {
   "shadows": "pandas.compat.string_types"
  },
  "type": "import"
 },
 "pandas.io.stata.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "pandas.io.stata.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.io.stata.text_type": {
  "data": {
   "shadows": "pandas.compat.text_type"
  },
  "type": "import"
 },
 "pandas.io.stata.to_datetime": {
  "data": {
   "shadows": "pandas.to_datetime"
  },
  "type": "import"
 },
 "pandas.io.stata.to_timedelta": {
  "data": {
   "shadows": "pandas.to_timedelta"
  },
  "type": "import"
 },
 "pandas.io.stata.value_label_mismatch_doc": {
  "data": {
   "lineno": 457
  },
  "type": "constant"
 },
 "pandas.io.stata.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "pandas.io.stata.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.io.stata.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.io.tests": {
  "data": {},
  "type": "module"
 },
 "pandas.io.tests.json": {
  "data": {},
  "type": "module"
 },
 "pandas.io.tests.json.test_json_norm": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.io.tests.json.test_json_norm.nose"
   ]
  },
  "type": "module"
 },
 "pandas.io.tests.json.test_json_norm.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.io.tests.json.test_json_norm.TestJSONNormalize": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.json.test_json_norm.TestJSONNormalize.setUp": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_json_norm.TestJSONNormalize.test_meta_name_conflict": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "ValueError",
    "pandas.io.json.json_normalize"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_json_norm.TestJSONNormalize.test_more_deeply_nested": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.json.json_normalize",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_json_norm.TestJSONNormalize.test_record_prefix": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DataFrame",
    "pandas.io.json.json_normalize",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_json_norm.TestJSONNormalize.test_shallow_nested": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.json.json_normalize",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_json_norm.TestJSONNormalize.test_simple_normalize": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DataFrame",
    "pandas.io.json.json_normalize",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_json_norm.TestJSONNormalize.test_simple_records": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.json.json_normalize",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_json_norm.TestNestedToRecord": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.json.test_json_norm.TestNestedToRecord.test_flat_stays_flat": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "dict",
    "pandas.io.json.nested_to_record"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_json_norm.TestNestedToRecord.test_nested_flattens": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "dict",
    "pandas.io.json.nested_to_record"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_json_norm.TestNestedToRecord.test_one_level_deep_flattens": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "dict",
    "pandas.io.json.nested_to_record"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_json_norm._assert_equal_data": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_json_norm.json_normalize": {
  "data": {
   "shadows": "pandas.io.json.json_normalize"
  },
  "type": "import"
 },
 "pandas.io.tests.json.test_json_norm.nested_to_record": {
  "data": {
   "shadows": "pandas.io.json.nested_to_record"
  },
  "type": "import"
 },
 "pandas.io.tests.json.test_json_norm.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.io.tests.json.test_json_norm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.io.tests.json.test_json_norm.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.io.tests.json.test_pandas": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dict",
    "len",
    "list",
    "numpy.arange",
    "numpy.int64",
    "pandas.CategoricalIndex",
    "pandas.DataFrame",
    "pandas.compat.iteritems",
    "pandas.io.tests.json.test_pandas._cat_frame",
    "pandas.io.tests.json.test_pandas._frame",
    "pandas.io.tests.json.test_pandas._seriesd",
    "pandas.io.tests.json.test_pandas._tsd",
    "pandas.io.tests.json.test_pandas.cat",
    "pandas.io.tests.json.test_pandas.nose",
    "pandas.util.testing.getSeriesData",
    "pandas.util.testing.getTimeSeriesData",
    "reversed"
   ]
  },
  "type": "module"
 },
 "pandas.io.tests.json.test_pandas.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.io.tests.json.test_pandas.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.io.tests.json.test_pandas.OrderedDict": {
  "data": {
   "shadows": "pandas.compat.OrderedDict"
  },
  "type": "import"
 },
 "pandas.io.tests.json.test_pandas.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.io.tests.json.test_pandas.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.setUp": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.io.tests.json.test_pandas._cat_frame",
    "pandas.io.tests.json.test_pandas._frame",
    "pandas.io.tests.json.test_pandas._frame2",
    "pandas.io.tests.json.test_pandas._intframe",
    "pandas.io.tests.json.test_pandas._mixed_frame",
    "pandas.io.tests.json.test_pandas._tsframe",
    "pandas.util.testing.get_data_path",
    "pandas.util.testing.makeObjectSeries",
    "pandas.util.testing.makeStringSeries",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.tearDown": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_axis_dates": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "pandas.read_json",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_blocks_compat_GH9037": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.OrderedDict",
    "pandas.date_range",
    "pandas.read_json",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_categorical": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_convert_dates": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.read_json",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_convert_dates_infer": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas.json.dumps",
    "pandas.read_json",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_date_format_frame": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "ValueError",
    "test_w_date"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_date_format_frame.test_w_date": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas.read_json",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_date_format_series": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Series",
    "pandas.Timestamp",
    "test_w_date"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_date_format_series.test_w_date": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "pandas.NaT",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.read_json",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_date_unit": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas.read_json",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_datetime_tz": {
  "data": {
   "lineno": 869,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_default_handler": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "object",
    "pandas.DataFrame",
    "pandas.read_json",
    "pandas.util.testing.assert_frame_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_default_handler_indirect": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": [
    "complex",
    "float",
    "pandas.DataFrame",
    "pandas.io.json.dumps"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_default_handler_indirect.default": {
  "data": {
   "lineno": 821,
   "symbols_in_volume": [
    "complex",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_default_handler_numpy_unsupported_dtype": {
  "data": {
   "lineno": 835,
   "symbols_in_volume": [
    "complex",
    "float",
    "pandas.DataFrame",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_default_handler_raises": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": [
    "TypeError",
    "complex",
    "object",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_default_handler_raises.my_handler_raises": {
  "data": {
   "lineno": 847,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_doc_example": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "list",
    "numpy.bool_",
    "numpy.int64",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.compat.lrange",
    "pandas.date_range",
    "pandas.read_json",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_frame_double_encoded_labels": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "pandas.DataFrame",
    "pandas.read_json",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_frame_empty": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "dict",
    "pandas.DataFrame",
    "pandas.read_json",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_frame_empty_mixedtype": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "dict",
    "pandas.DataFrame",
    "pandas.read_json",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_frame_from_json_bad_data": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "pandas.compat.StringIO",
    "pandas.read_json",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_frame_from_json_nones": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "numpy.NINF",
    "numpy.inf",
    "numpy.isnan",
    "pandas.DataFrame",
    "pandas.read_json"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_frame_from_json_precise_float": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.read_json",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_frame_from_json_to_json": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "ValueError",
    "_check_all_orients",
    "_check_orient",
    "numpy.float64",
    "numpy.int",
    "numpy.zeros",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.compat.range",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_frame_from_json_to_json._check_all_orients": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "_check_orient"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_frame_from_json_to_json._check_orient": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "isinstance",
    "numpy",
    "numpy.datetime64",
    "pandas.DatetimeIndex",
    "pandas.read_json",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_frame_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_frame_mixedtype_orient": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.read_json",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_frame_non_unique_columns": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "ValueError",
    "_check",
    "numpy.testing.assert_equal",
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.read_json",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_frame_non_unique_columns._check": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "pandas.read_json",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_frame_non_unique_index": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "ValueError",
    "numpy.testing.assert_equal",
    "pandas.DataFrame",
    "pandas.read_json",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_frame_to_json_except": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_misc_example": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "AssertionError",
    "pandas.DataFrame",
    "pandas.read_json",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_mixed_timedelta_datetime": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": [
    "datetime.timedelta",
    "object",
    "pandas.DataFrame",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.read_json",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_path": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "pandas.read_json",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_reconstruction_index": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.read_json",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_round_trip_exception_": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "pandas.read_csv",
    "pandas.read_json",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_series_from_json_precise_float": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.read_json",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_series_from_json_to_json": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "_check_all_orients",
    "numpy.float64",
    "numpy.int",
    "numpy.object_",
    "pandas.Series",
    "pandas.compat.lrange",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_series_from_json_to_json._check_all_orients": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "_check_orient"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_series_from_json_to_json._check_orient": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "numpy",
    "pandas.read_json",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_series_non_unique_index": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "ValueError",
    "numpy.testing.assert_equal",
    "pandas.Series",
    "pandas.read_json",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_series_to_json_except": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_sparse": {
  "data": {
   "lineno": 887,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_timedelta": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "datetime.timedelta",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.date_range",
    "pandas.read_json",
    "pandas.to_datetime",
    "pandas.to_timedelta",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_typ": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.read_json",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_tz_is_utc": {
  "data": {
   "lineno": 903,
   "symbols_in_volume": [
    "pandas.Timestamp",
    "pandas.json.dumps"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_tz_range_is_utc": {
  "data": {
   "lineno": 921,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.date_range",
    "pandas.json.dumps"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_url": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "pandas.read_json",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_v12_compat": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.io.tests.json.test_pandas.os",
    "pandas.read_json",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.TestPandasContainer.test_weird_nested_json": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "pandas.read_json"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.json.test_pandas.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.io.tests.json.test_pandas._cat_frame": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pandas.io.tests.json.test_pandas._frame": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pandas.io.tests.json.test_pandas._frame2": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pandas.io.tests.json.test_pandas._intframe": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pandas.io.tests.json.test_pandas._mixed_frame": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pandas.io.tests.json.test_pandas._seriesd": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pandas.io.tests.json.test_pandas._tsd": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "pandas.io.tests.json.test_pandas._tsframe": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "pandas.io.tests.json.test_pandas.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.io.tests.json.test_pandas.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.io.tests.json.test_pandas.assert_index_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_index_equal"
  },
  "type": "import"
 },
 "pandas.io.tests.json.test_pandas.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.io.tests.json.test_pandas.cat": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pandas.io.tests.json.test_pandas.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.io.tests.json.test_pandas.dumps": {
  "data": {
   "shadows": "pandas.io.json.dumps"
  },
  "type": "import"
 },
 "pandas.io.tests.json.test_pandas.ensure_clean": {
  "data": {
   "shadows": "pandas.util.testing.ensure_clean"
  },
  "type": "import"
 },
 "pandas.io.tests.json.test_pandas.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.io.tests.json.test_pandas.network": {
  "data": {
   "shadows": "pandas.util.testing.network"
  },
  "type": "import"
 },
 "pandas.io.tests.json.test_pandas.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.io.tests.json.test_pandas.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.io.tests.json.test_pandas.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.io.tests.json.test_pandas.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.io.tests.json.test_pandas.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.io.tests.json.test_pandas.read_json": {
  "data": {
   "shadows": "pandas.read_json"
  },
  "type": "import"
 },
 "pandas.io.tests.json.test_pandas.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.io.tests.json.test_pandas.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.io.tests.parser": {
  "data": {},
  "type": "module"
 },
 "pandas.io.tests.parser.c_parser_only": {
  "data": {},
  "type": "module"
 },
 "pandas.io.tests.parser.c_parser_only.CParserTests": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.parser.c_parser_only.CParserTests.test_1000_sep_with_decimal": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_equal",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.c_parser_only.CParserTests.test_buffer_overflow": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "Exception",
    "pandas.compat.StringIO",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.c_parser_only.CParserTests.test_buffer_rd_bytes": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "Exception",
    "pandas.compat.StringIO",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.c_parser_only.CParserTests.test_compact_ints": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "numpy.dtype",
    "pandas.compat.StringIO",
    "pandas.compat.is_platform_windows",
    "pandas.compat.range",
    "pandas.io.tests.parser.c_parser_only.nose",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.c_parser_only.CParserTests.test_compact_ints_as_recarray": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "numpy.dtype",
    "pandas.compat.StringIO",
    "pandas.compat.is_platform_windows",
    "pandas.compat.range",
    "pandas.io.tests.parser.c_parser_only.nose",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.c_parser_only.CParserTests.test_custom_lineterminator": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.c_parser_only.CParserTests.test_delim_whitespace_custom_terminator": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.c_parser_only.CParserTests.test_disable_bool_parsing": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "object",
    "object.all",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.c_parser_only.CParserTests.test_dtype_and_names_error": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "ValueError",
    "numpy.int32",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.c_parser_only.CParserTests.test_empty_pass_dtype": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.object",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.c_parser_only.CParserTests.test_empty_with_dup_column_pass_dtype_by_indexes": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.StringIO",
    "pandas.concat",
    "pandas.io.tests.parser.c_parser_only.nose",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.c_parser_only.CParserTests.test_empty_with_dup_column_pass_dtype_by_names": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.StringIO",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.c_parser_only.CParserTests.test_empty_with_index_pass_dtype": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "numpy.empty",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.c_parser_only.CParserTests.test_empty_with_mangled_column_pass_dtype_by_indexes": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "numpy.empty",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.c_parser_only.CParserTests.test_empty_with_mangled_column_pass_dtype_by_names": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "numpy.empty",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.c_parser_only.CParserTests.test_empty_with_multiindex_pass_dtype": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.object",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.c_parser_only.CParserTests.test_euro_decimal_format": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "float",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.c_parser_only.CParserTests.test_grow_boundary_at_cap": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "pandas.compat.range",
    "test_empty_header_read"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.c_parser_only.CParserTests.test_grow_boundary_at_cap.test_empty_header_read": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.compat.range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.c_parser_only.CParserTests.test_inf_parsing": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "float",
    "pandas.Series",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.c_parser_only.CParserTests.test_memory_map": {
  "data": {
   "lineno": 337
  },
  "type": "function"
 },
 "pandas.io.tests.parser.c_parser_only.CParserTests.test_na_trailing_columns": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.c_parser_only.CParserTests.test_parse_dates_empty_string": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.c_parser_only.CParserTests.test_parse_ragged_csv": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.c_parser_only.CParserTests.test_pass_dtype": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.c_parser_only.CParserTests.test_pass_dtype_as_recarray": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.compat.is_platform_windows",
    "pandas.io.tests.parser.c_parser_only.nose"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.c_parser_only.CParserTests.test_passing_dtype": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "TypeError",
    "float",
    "list",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.ensure_clean",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.c_parser_only.CParserTests.test_precise_conversion": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "decimal.Decimal",
    "error",
    "float",
    "max",
    "numpy.linspace",
    "pandas.compat.StringIO",
    "pandas.util.testing._skip_if_32bit",
    "sum"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.c_parser_only.CParserTests.test_precise_conversion.error": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "abs",
    "decimal.Decimal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.c_parser_only.CParserTests.test_raise_on_no_columns": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "ValueError",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.c_parser_only.CParserTests.test_raise_on_passed_int_dtype_with_nas": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "ValueError",
    "numpy.int64",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.c_parser_only.CParserTests.test_tokenize_CR_with_quoting": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.c_parser_only.CParserTests.test_usecols_dtypes": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.float.all",
    "numpy.int.all",
    "object.all",
    "pandas.compat.StringIO",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.c_parser_only.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.c_parser_only.Decimal": {
  "data": {
   "shadows": "decimal.Decimal"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.c_parser_only.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.c_parser_only.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.c_parser_only.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.c_parser_only.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.c_parser_only.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.c_parser_only.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.c_parser_only.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.c_parser_only.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.c_parser_only.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.c_parser_only.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.c_parser_only.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.comment": {
  "data": {},
  "type": "module"
 },
 "pandas.io.tests.parser.comment.CommentTests": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.parser.comment.CommentTests.test_comment": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.comment.CommentTests.test_comment_header": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.comment.CommentTests.test_comment_skiprows": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.comment.CommentTests.test_comment_skiprows_header": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.comment.CommentTests.test_custom_comment_char": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.comment.CommentTests.test_line_comment": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.comment.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.comment.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.comment.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.comment.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.common": {
  "data": {},
  "type": "module"
 },
 "pandas.io.tests.parser.common.BytesIO": {
  "data": {
   "shadows": "pandas.compat.BytesIO"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.common.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.common.DtypeWarning": {
  "data": {
   "shadows": "pandas.io.common.DtypeWarning"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.common.EmptyDataError": {
  "data": {
   "shadows": "pandas.io.common.EmptyDataError"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.common.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.common.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.common.PY3": {
  "data": {
   "shadows": "pandas.compat.PY3"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.common.ParserTests": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.parser.common.ParserTests.test_1000_sep": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_catch_too_many_names": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "ValueError",
    "pandas.compat.StringIO",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_chunk_begins_with_newline_whitespace": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_chunks_have_consistent_numerical_type": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "numpy.float",
    "numpy.float64",
    "pandas.compat.StringIO",
    "pandas.compat.range",
    "pandas.util.testing.assert_produces_warning",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_csv_mixed_type": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_dialect": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.io.tests.parser.common.csv",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_dialect_str": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.io.tests.parser.common.csv",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_duplicate_columns": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "getattr",
    "list",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_empty_decimal_marker": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ValueError",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_empty_lines": {
  "data": {
   "lineno": 1110,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_empty_with_index": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_empty_with_multiindex": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_empty_with_nrows_chunksize": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": [
    "iter",
    "next",
    "pandas.DataFrame",
    "pandas.DataFrame.from_records",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_empty_with_reversed_multiindex": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_eof_states": {
  "data": {
   "lineno": 939,
   "symbols_in_volume": [
    "Exception",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_escapechar": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "numpy.array_equal",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_file": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "numpy.testing.decorators.slow",
    "pandas.io.common.URLError",
    "pandas.io.tests.parser.common.nose",
    "pandas.io.tests.parser.common.os",
    "pandas.io.tests.parser.common.platform",
    "pandas.io.tests.parser.common.sys",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.get_data_path"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_float_parser": {
  "data": {
   "lineno": 865,
   "symbols_in_volume": [
    "float",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_get_chunk_passed_chunksize": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "len",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_ignore_leading_whitespace": {
  "data": {
   "lineno": 814,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_int64_min_issues": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_int64_overflow": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": [
    "OverflowError",
    "numpy.iinfo",
    "numpy.int64",
    "object",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_int_conversion": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.int64",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_integer_overflow_bug": {
  "data": {
   "lineno": 794,
   "symbols_in_volume": [
    "numpy.float64",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_iteration_open_handle": {
  "data": {
   "lineno": 1218,
   "symbols_in_volume": [
    "Exception",
    "open",
    "pandas.Series",
    "pandas.compat.PY3",
    "pandas.io.tests.parser.common.nose",
    "pandas.io.tests.parser.common.sys",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_iterator": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "len",
    "list",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.concat",
    "pandas.io.parsers.TextFileReader",
    "pandas.io.parsers.TextParser",
    "pandas.io.tests.parser.common.csv",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_malformed": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "Exception",
    "pandas.compat.StringIO",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_missing_trailing_delimiters": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_multi_index_no_level_names": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_multiple_skts_example": {
  "data": {
   "lineno": 131
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_no_unnamed_index": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_nonexistent_path": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "IOError",
    "pandas.util.testing.rands"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_nrows_and_chunksize_raises_notimplemented": {
  "data": {
   "lineno": 821,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_parse_bools": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "numpy.bool_",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_parse_integers_above_fp_precision": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "numpy.array_equal",
    "pandas.DataFrame",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_pass_names_with_index": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_quoting": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "Exception",
    "len",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_raise_on_sep_with_delim_whitespace": {
  "data": {
   "lineno": 1086,
   "symbols_in_volume": [
    "ValueError",
    "pandas.compat.StringIO",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_read_chunksize": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "list",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_read_chunksize_named": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "list",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_read_csv": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "pandas.compat.PY3",
    "pandas.compat.is_platform_windows",
    "pandas.compat.text_type",
    "pandas.compat.u"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_read_csv_dataframe": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.datetime64",
    "numpy.float64",
    "pandas.lib.Timestamp",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_read_csv_no_index_name": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.datetime64",
    "numpy.float64",
    "pandas.lib.Timestamp",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_read_csv_parse_simple_list": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_read_duplicate_index_explicit": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_read_duplicate_index_implicit": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_read_empty_with_usecols": {
  "data": {
   "lineno": 1037,
   "symbols_in_volume": [
    "numpy.float64",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.io.common.EmptyDataError",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_read_nrows": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_read_table_unicode": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "pandas.compat.BytesIO",
    "pandas.compat.text_type",
    "pandas.compat.u",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_read_table_wrong_num_columns": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "ValueError",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_read_text_list": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.io.parsers.TextParser",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_regex_separator": {
  "data": {
   "lineno": 1150,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.io.tests.parser.common.re",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_scientific_no_exponent": {
  "data": {
   "lineno": 872,
   "symbols_in_volume": [
    "pandas.DataFrame.from_items",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_single_char_leading_whitespace": {
  "data": {
   "lineno": 1092,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_skipinitialspace": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.compat.lrange",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_squeeze": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.Series",
    "pandas.compat.StringIO",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_squeeze_no_view": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_trailing_delimiters": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_trailing_spaces": {
  "data": {
   "lineno": 1061,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_uneven_lines_with_usecols": {
  "data": {
   "lineno": 1010,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.io.tests.parser.common.csv",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_unicode_encoding": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "pandas.compat.u",
    "pandas.util.testing.get_data_path"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_unnamed_columns": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_url": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "pandas.io.tests.parser.common.os",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.get_data_path",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_utf16_bom_skiprows": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "bytes",
    "io.TextIOWrapper",
    "open",
    "pandas.compat.BytesIO",
    "pandas.compat.PY3",
    "pandas.compat.u",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean",
    "pandas.util.testing.rands"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_utf16_example": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "len",
    "open",
    "pandas.compat.BytesIO",
    "pandas.compat.PY3",
    "pandas.util.testing.get_data_path"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_verbose_import": {
  "data": {
   "lineno": 1169,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.io.tests.parser.common.sys"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_warn_if_chunks_have_mismatched_type": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "numpy.object",
    "pandas.compat.StringIO",
    "pandas.compat.range",
    "pandas.io.common.DtypeWarning",
    "pandas.util.testing.assert_produces_warning",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.ParserTests.test_whitespace_lines": {
  "data": {
   "lineno": 1136,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.common.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.common.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.common.TextFileReader": {
  "data": {
   "shadows": "pandas.io.parsers.TextFileReader"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.common.TextIOWrapper": {
  "data": {
   "shadows": "io.TextIOWrapper"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.common.TextParser": {
  "data": {
   "shadows": "pandas.io.parsers.TextParser"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.common.Timestamp": {
  "data": {
   "shadows": "pandas.lib.Timestamp"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.common.URLError": {
  "data": {
   "shadows": "pandas.io.common.URLError"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.common.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.common.csv": {
  "data": {
   "shadows": "csv"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.common.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.common.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.common.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.common.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.common.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.common.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.common.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.common.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.common.slow": {
  "data": {
   "shadows": "numpy.testing.decorators.slow"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.common.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.common.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.common.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.compression": {
  "data": {},
  "type": "module"
 },
 "pandas.io.tests.parser.compression.CompressionTests": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.parser.compression.CompressionTests.test_bz2": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "open",
    "pandas.compat.PY3",
    "pandas.io.tests.parser.compression.bz2",
    "pandas.io.tests.parser.compression.nose",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.compression.CompressionTests.test_gzip": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "ImportError",
    "open",
    "pandas.io.tests.parser.compression.gzip",
    "pandas.io.tests.parser.compression.nose",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.compression.CompressionTests.test_read_csv_infer_compression": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "open",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.compression.CompressionTests.test_xz": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "open",
    "pandas.util.testing._skip_if_no_lzma",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.compression.CompressionTests.test_zip": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "open",
    "pandas.io.tests.parser.compression.nose",
    "pandas.io.tests.parser.compression.zipfile",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.compression.bz2": {
  "data": {
   "shadows": "bz2"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.compression.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.compression.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.compression.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.compression.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.compression.zipfile": {
  "data": {
   "shadows": "zipfile"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.converters": {
  "data": {},
  "type": "module"
 },
 "pandas.io.tests.parser.converters.ConverterTests": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.parser.converters.ConverterTests.test_converter_index_col_bug": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.converters.ConverterTests.test_converter_return_string_bug": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "float",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.converters.ConverterTests.test_converters": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "datetime.datetime",
    "int",
    "pandas.compat.StringIO",
    "pandas.compat.parse_date",
    "pandas.lib.Timestamp",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.converters.ConverterTests.test_converters_corner_with_nas": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "hash",
    "numpy.int64",
    "pandas.compat.StringIO",
    "pandas.io.tests.parser.converters.nose",
    "pandas.isnull",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.converters.ConverterTests.test_converters_corner_with_nas.convert_days": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "int",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.converters.ConverterTests.test_converters_corner_with_nas.convert_days_sentinel": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "int",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.converters.ConverterTests.test_converters_corner_with_nas.convert_score": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.nan",
    "pandas.compat.lmap"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.converters.ConverterTests.test_converters_euro_decimal_format": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "float",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.converters.ConverterTests.test_converters_no_implicit_conv": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "object",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.converters.ConverterTests.test_converters_type_must_be_dict": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "TypeError",
    "pandas.compat.StringIO",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.converters.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.converters.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.converters.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.converters.Timestamp": {
  "data": {
   "shadows": "pandas.lib.Timestamp"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.converters.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.converters.lmap": {
  "data": {
   "shadows": "pandas.compat.lmap"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.converters.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.converters.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.converters.parse_date": {
  "data": {
   "shadows": "pandas.compat.parse_date"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.converters.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.converters.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.header": {
  "data": {},
  "type": "module"
 },
 "pandas.io.tests.parser.header.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.header.HeaderTests": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.parser.header.HeaderTests.test_bool_header_arg": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "TypeError",
    "pandas.compat.StringIO",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.header.HeaderTests.test_header_multi_index": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "ValueError",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeCustomDataframe"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.header.HeaderTests.test_header_multiindex_common_format": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.StringIO",
    "pandas.compat.u",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.header.HeaderTests.test_header_names_backward_compat": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.header.HeaderTests.test_header_not_first_line": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.header.HeaderTests.test_header_with_index_col": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.header.HeaderTests.test_no_header": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.header.HeaderTests.test_no_header_prefix": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.header.HeaderTests.test_read_only_header_no_rows": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.header.HeaderTests.test_read_with_bad_header": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ValueError",
    "pandas.compat.StringIO",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.header.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.header.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.header.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.header.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.header.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.header.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.header.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.index_col": {
  "data": {},
  "type": "module"
 },
 "pandas.io.tests.parser.index_col.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.index_col.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.index_col.IndexColTests": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.parser.index_col.IndexColTests.test_empty_index_col_scenarios": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_arrays",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.index_col.IndexColTests.test_empty_with_index_col_false": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.index_col.IndexColTests.test_index_col_is_true": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "ValueError",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.index_col.IndexColTests.test_index_col_named": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.index_col.IndexColTests.test_infer_index_col": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.index_col.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.index_col.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.index_col.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.multithread": {
  "data": {},
  "type": "module"
 },
 "pandas.io.tests.parser.multithread.BytesIO": {
  "data": {
   "shadows": "pandas.compat.BytesIO"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.multithread.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.multithread.MultithreadTests": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.parser.multithread.MultithreadTests._generate_multithread_dataframe": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "multiprocessing.pool.ThreadPool",
    "pandas.compat.range",
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.multithread.MultithreadTests._generate_multithread_dataframe.reader": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.multithread.MultithreadTests.test_multithread_path_multipart_read_csv": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "pandas.io.tests.parser.multithread._construct_dataframe",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.multithread.MultithreadTests.test_multithread_stringio_read_csv": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "multiprocessing.pool.ThreadPool",
    "pandas.compat.BytesIO",
    "pandas.compat.range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.multithread.ThreadPool": {
  "data": {
   "shadows": "multiprocessing.pool.ThreadPool"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.multithread._construct_dataframe": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.multithread.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.multithread.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.multithread.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.multithread.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.multithread.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.na_values": {
  "data": {},
  "type": "module"
 },
 "pandas.io.tests.parser.na_values.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.na_values.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.na_values.NAvaluesTests": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.parser.na_values.NAvaluesTests.test_bool_na_values": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "object",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.na_values.NAvaluesTests.test_custom_na_values": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.na_values.NAvaluesTests.test_default_na_values": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "enumerate",
    "f",
    "len",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.compat.range",
    "pandas.io.parsers._NA_VALUES",
    "pandas.util.testing.assert_frame_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.na_values.NAvaluesTests.test_default_na_values.f": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "pandas.io.tests.parser.na_values.NAvaluesTests.test_detect_string_na": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.na_values.NAvaluesTests.test_na_value_dict": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.na_values.NAvaluesTests.test_na_values_keep_default": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.na_values.NAvaluesTests.test_non_string_na_values": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.na_values.NAvaluesTests.test_skiprow_with_newline": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.na_values.NAvaluesTests.test_skiprow_with_newline_and_quote": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.na_values.NAvaluesTests.test_skiprow_with_quote": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.na_values.NAvaluesTests.test_skiprows_lineterminator": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.na_values.NAvaluesTests.test_string_nas": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.na_values.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.na_values.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.na_values.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.na_values.parsers": {
  "data": {
   "shadows": "pandas.io.parsers"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.na_values.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.na_values.read_csv": {
  "data": {
   "shadows": "pandas.read_csv"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.na_values.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.parse_dates": {
  "data": {},
  "type": "module"
 },
 "pandas.io.tests.parser.parse_dates.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.parse_dates.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.parse_dates.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.parse_dates.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.parse_dates.ParseDatesTests": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.parser.parse_dates.ParseDatesTests.test_csv_custom_parser": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "datetime.datetime.strptime",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.parse_dates.ParseDatesTests.test_date_parser_int_bug": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.parse_dates.ParseDatesTests.test_date_parser_int_bug.f": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "datetime.datetime.utcfromtimestamp",
    "int"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.parse_dates.ParseDatesTests.test_multi_index_parse_dates": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.datetime64",
    "pandas.compat.StringIO",
    "pandas.lib.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.parse_dates.ParseDatesTests.test_multiple_date_col": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.parse_dates.ParseDatesTests.test_multiple_date_col.func": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "pandas.io.parsers._concat_date_cols",
    "pandas.lib.try_parse_dates"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.parse_dates.ParseDatesTests.test_multiple_date_col_multiple_index": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.parse_dates.ParseDatesTests.test_multiple_date_col_name_collision": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "ValueError",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.parse_dates.ParseDatesTests.test_multiple_date_col_named_components": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.parse_dates.ParseDatesTests.test_multiple_date_col_timestamp_parse": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.lib.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.parse_dates.ParseDatesTests.test_multiple_date_cols_chunked": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "list",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.parse_dates.ParseDatesTests.test_multiple_date_cols_index": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.parse_dates.ParseDatesTests.test_multiple_date_cols_int_cast": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.io.date_converters.parse_date_time"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.parse_dates.ParseDatesTests.test_multiple_date_cols_with_header": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.compat.string_types"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.parse_dates.ParseDatesTests.test_nat_parse": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "dict",
    "numpy.asarray",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.parse_dates.ParseDatesTests.test_parse_dates_column_list": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "datetime.datetime",
    "list",
    "pandas.compat.StringIO",
    "pandas.compat.lmap",
    "pandas.compat.lrange",
    "pandas.core.datetools.to_datetime",
    "pandas.lib.Timestamp",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.parse_dates.ParseDatesTests.test_parse_dates_custom_euroformat": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "TypeError",
    "datetime.datetime",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.compat.StringIO",
    "pandas.compat.parse_date",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.parse_dates.ParseDatesTests.test_parse_dates_implicit_first_col": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.datetime64",
    "pandas.compat.StringIO",
    "pandas.lib.Timestamp",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.parse_dates.ParseDatesTests.test_parse_dates_string": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.tseries.index.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.parse_dates.ParseDatesTests.test_parse_tz_aware": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "AssertionError",
    "pandas.compat.StringIO",
    "pandas.io.tests.parser.parse_dates.pytz",
    "pandas.tseries.tools.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.parse_dates.ParseDatesTests.test_read_with_parse_dates_invalid_type": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "pandas.compat.StringIO",
    "pandas.util.testing.assertRaisesRegexp",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.parse_dates.ParseDatesTests.test_read_with_parse_dates_scalar_non_bool": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "TypeError",
    "pandas.compat.StringIO",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.parse_dates.ParseDatesTests.test_separator_date_conflict": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.parse_dates.ParseDatesTests.test_yy_format_with_yearfirst": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "datetime.datetime",
    "distutils.version.LooseVersion",
    "object",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.compat.StringIO",
    "pandas.io.tests.parser.parse_dates.dateutil",
    "pandas.io.tests.parser.parse_dates.nose",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.parse_dates.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.parse_dates.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.parse_dates.Timestamp": {
  "data": {
   "shadows": "pandas.lib.Timestamp"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.parse_dates.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.parse_dates.conv": {
  "data": {
   "shadows": "pandas.io.date_converters"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.parse_dates.date_range": {
  "data": {
   "shadows": "pandas.tseries.index.date_range"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.parse_dates.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.parse_dates.dateutil": {
  "data": {
   "shadows": "dateutil"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.parse_dates.lib": {
  "data": {
   "shadows": "pandas.lib"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.parse_dates.lmap": {
  "data": {
   "shadows": "pandas.compat.lmap"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.parse_dates.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.parse_dates.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.parse_dates.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.parse_dates.parse_date": {
  "data": {
   "shadows": "pandas.compat.parse_date"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.parse_dates.parsers": {
  "data": {
   "shadows": "pandas.io.parsers"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.parse_dates.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.parse_dates.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.parse_dates.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.parse_dates.to_datetime": {
  "data": {
   "shadows": "pandas.core.datetools.to_datetime"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.parse_dates.tools": {
  "data": {
   "shadows": "pandas.tseries.tools"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.python_parser_only": {
  "data": {},
  "type": "module"
 },
 "pandas.io.tests.parser.python_parser_only.BytesIO": {
  "data": {
   "shadows": "pandas.compat.BytesIO"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.python_parser_only.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.python_parser_only.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.python_parser_only.PythonParserTests": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.parser.python_parser_only.PythonParserTests.test_BytesIO_input": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.BytesIO",
    "pandas.compat.PY3",
    "pandas.io.tests.parser.python_parser_only.nose",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.python_parser_only.PythonParserTests.test_decompression_regex_sep": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "open",
    "pandas.io.tests.parser.python_parser_only.bz2",
    "pandas.io.tests.parser.python_parser_only.gzip",
    "pandas.io.tests.parser.python_parser_only.nose",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.python_parser_only.PythonParserTests.test_negative_skipfooter_raises": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ValueError",
    "pandas.compat.StringIO",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.python_parser_only.PythonParserTests.test_read_table_buglet_4x_multiindex": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame.from_records",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.python_parser_only.PythonParserTests.test_single_line": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.io.tests.parser.python_parser_only.sys",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.python_parser_only.PythonParserTests.test_skip_footer": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.python_parser_only.PythonParserTests.test_sniff_delimiter": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "io.TextIOWrapper",
    "pandas.Index",
    "pandas.compat.BytesIO",
    "pandas.compat.PY3",
    "pandas.compat.StringIO",
    "pandas.compat.u",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.python_parser_only.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.python_parser_only.TextIOWrapper": {
  "data": {
   "shadows": "io.TextIOWrapper"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.python_parser_only.bz2": {
  "data": {
   "shadows": "bz2"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.python_parser_only.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.python_parser_only.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.python_parser_only.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.python_parser_only.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.python_parser_only.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.python_parser_only.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.skiprows": {
  "data": {},
  "type": "module"
 },
 "pandas.io.tests.parser.skiprows.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.skiprows.SkipRowsTests": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.parser.skiprows.SkipRowsTests.test_deep_skiprows": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.compat.range",
    "pandas.util.testing.assert_frame_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.skiprows.SkipRowsTests.test_skiprows_blank": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.skiprows.SkipRowsTests.test_skiprows_bug": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.skiprows.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.skiprows.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.skiprows.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.skiprows.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.skiprows.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.skiprows.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.test_network": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.io.tests.parser.test_network.nose"
   ]
  },
  "type": "module"
 },
 "pandas.io.tests.parser.test_network.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.test_network.TestS3": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.parser.test_network.TestS3.setUp": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ImportError",
    "pandas.io.tests.parser.test_network.nose"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.test_network.TestS3.test_infer_s3_compression": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame",
    "pandas.io.parsers.read_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.get_data_path",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.test_network.TestS3.test_parse_public_s3_bucket": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pandas.DataFrame",
    "pandas.compat.PY2",
    "pandas.io.parsers.read_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.get_data_path",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.test_network.TestS3.test_parse_public_s3_bucket_chunked": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pandas.DataFrame",
    "pandas.compat.PY2",
    "pandas.io.parsers.read_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.get_data_path",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.test_network.TestS3.test_parse_public_s3_bucket_chunked_python": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame",
    "pandas.io.parsers.read_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.get_data_path",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.test_network.TestS3.test_parse_public_s3_bucket_nrows": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pandas.DataFrame",
    "pandas.compat.PY2",
    "pandas.io.parsers.read_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.get_data_path",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.test_network.TestS3.test_parse_public_s3_bucket_nrows_python": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame",
    "pandas.io.parsers.read_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.get_data_path",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.test_network.TestS3.test_parse_public_s3_bucket_python": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame",
    "pandas.io.parsers.read_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.get_data_path",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.test_network.TestS3.test_parse_public_s3a_bucket": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame",
    "pandas.io.parsers.read_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.get_data_path",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.test_network.TestS3.test_parse_public_s3n_bucket": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame",
    "pandas.io.parsers.read_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.get_data_path",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.test_network.TestS3.test_s3_fails": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "pandas.io.parsers.read_csv",
    "pandas.io.tests.parser.test_network.boto",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.test_network.TestUrlGz": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.parser.test_network.TestUrlGz.setUp": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "pandas.io.parsers.read_table",
    "pandas.io.tests.parser.test_network.os",
    "pandas.util.testing.get_data_path"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.test_network.TestUrlGz.test_url_gz": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "pandas.io.parsers.read_table",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.test_network.TestUrlGz.test_url_gz_infer": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "pandas.io.parsers.read_table",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.test_network.boto": {
  "data": {
   "shadows": "boto"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.test_network.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.test_network.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.test_network.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.test_network.read_csv": {
  "data": {
   "shadows": "pandas.io.parsers.read_csv"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.test_network.read_table": {
  "data": {
   "shadows": "pandas.io.parsers.read_table"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.test_network.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.test_parsers": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.io.tests.parser.test_parsers.nose"
   ]
  },
  "type": "module"
 },
 "pandas.io.tests.parser.test_parsers.AbstractMethodError": {
  "data": {
   "shadows": "pandas.core.common.AbstractMethodError"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.test_parsers.BaseParser": {
  "data": {
   "lineno": 26
  },
  "type": "class"
 },
 "pandas.io.tests.parser.test_parsers.BaseParser.float_precision_choices": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "pandas.core.common.AbstractMethodError"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.test_parsers.BaseParser.read_csv": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.test_parsers.BaseParser.read_table": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.test_parsers.BaseParser.setUp": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "pandas.io.tests.parser.test_parsers.os",
    "pandas.util.testing.get_data_path"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.test_parsers.TestCParserHighMemory": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "pandas.io.tests.parser.test_parsers.BaseParser",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.parser.test_parsers.TestCParserHighMemory.read_csv": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "pandas.read_csv"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.test_parsers.TestCParserHighMemory.read_table": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "pandas.read_table"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.test_parsers.TestCParserLowMemory": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "pandas.io.tests.parser.test_parsers.BaseParser",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.parser.test_parsers.TestCParserLowMemory.read_csv": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "pandas.read_csv"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.test_parsers.TestCParserLowMemory.read_table": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "pandas.read_table"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.test_parsers.TestPythonParser": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "pandas.io.tests.parser.test_parsers.BaseParser",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.parser.test_parsers.TestPythonParser.read_csv": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "pandas.read_csv"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.test_parsers.TestPythonParser.read_table": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "pandas.read_table"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.test_parsers.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.test_parsers.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.test_parsers.read_csv": {
  "data": {
   "shadows": "pandas.read_csv"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.test_parsers.read_table": {
  "data": {
   "shadows": "pandas.read_table"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.test_parsers.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.test_read_fwf": {
  "data": {},
  "type": "module"
 },
 "pandas.io.tests.parser.test_read_fwf.BytesIO": {
  "data": {
   "shadows": "pandas.compat.BytesIO"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.test_read_fwf.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.test_read_fwf.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.test_read_fwf.TestFwfParsing": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.parser.test_read_fwf.TestFwfParsing.test_1000_fwf": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.io.parsers.read_fwf",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.test_read_fwf.TestFwfParsing.test_BytesIO_input": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.BytesIO",
    "pandas.compat.PY3",
    "pandas.io.parsers.read_fwf",
    "pandas.io.tests.parser.test_read_fwf.nose",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.test_read_fwf.TestFwfParsing.test_bool_header_arg": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "TypeError",
    "pandas.compat.StringIO",
    "pandas.io.parsers.read_fwf",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.test_read_fwf.TestFwfParsing.test_comment_fwf": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.compat.StringIO",
    "pandas.io.parsers.read_fwf",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.test_read_fwf.TestFwfParsing.test_full_file": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.io.parsers.read_fwf",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.test_read_fwf.TestFwfParsing.test_full_file_with_missing": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.io.parsers.read_fwf",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.test_read_fwf.TestFwfParsing.test_full_file_with_spaces": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.io.parsers.read_fwf",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.test_read_fwf.TestFwfParsing.test_full_file_with_spaces_and_missing": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.io.parsers.read_fwf",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.test_read_fwf.TestFwfParsing.test_fwf": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ValueError",
    "pandas.compat.StringIO",
    "pandas.io.parsers.read_csv",
    "pandas.io.parsers.read_fwf",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.test_read_fwf.TestFwfParsing.test_fwf_colspecs_None": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.io.parsers.read_fwf",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.test_read_fwf.TestFwfParsing.test_fwf_colspecs_is_list_or_tuple": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "TypeError",
    "pandas.compat.StringIO",
    "pandas.io.parsers.FixedWidthReader",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.test_read_fwf.TestFwfParsing.test_fwf_colspecs_is_list_or_tuple_of_two_element_tuples": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "TypeError",
    "pandas.compat.StringIO",
    "pandas.io.parsers.read_fwf",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.test_read_fwf.TestFwfParsing.test_fwf_compression": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "ImportError",
    "bytes",
    "compresser",
    "pandas.compat.PY3",
    "pandas.compat.StringIO",
    "pandas.io.parsers.read_fwf",
    "pandas.io.tests.parser.test_read_fwf.bz2",
    "pandas.io.tests.parser.test_read_fwf.gzip",
    "pandas.io.tests.parser.test_read_fwf.nose",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.test_read_fwf.TestFwfParsing.test_fwf_for_uint8": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "int",
    "len",
    "object",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.io.parsers.read_fwf",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.test_read_fwf.TestFwfParsing.test_fwf_regression": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "datetime.datetime.strptime",
    "len",
    "pandas.compat.StringIO",
    "pandas.io.parsers.read_fwf"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.test_read_fwf.TestFwfParsing.test_messed_up_data": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.io.parsers.read_fwf",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.test_read_fwf.TestFwfParsing.test_multiple_delimiters": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.io.parsers.read_fwf",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.test_read_fwf.TestFwfParsing.test_variable_width_unicode": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "pandas.compat.BytesIO",
    "pandas.compat.PY3",
    "pandas.io.parsers.read_fwf",
    "pandas.io.tests.parser.test_read_fwf.nose",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.test_read_fwf.bz2": {
  "data": {
   "shadows": "bz2"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.test_read_fwf.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.test_read_fwf.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.test_read_fwf.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.test_read_fwf.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.test_read_fwf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.test_read_fwf.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.test_read_fwf.read_csv": {
  "data": {
   "shadows": "pandas.io.parsers.read_csv"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.test_read_fwf.read_fwf": {
  "data": {
   "shadows": "pandas.io.parsers.read_fwf"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.test_read_fwf.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.test_unsupported": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.io.tests.parser.test_unsupported.nose"
   ]
  },
  "type": "module"
 },
 "pandas.io.tests.parser.test_unsupported.CParserError": {
  "data": {
   "shadows": "pandas.io.common.CParserError"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.test_unsupported.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.test_unsupported.TestUnsupportedFeatures": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.parser.test_unsupported.TestUnsupportedFeatures.test_c_engine": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "pandas.compat.StringIO",
    "pandas.io.common.CParserError",
    "pandas.io.parsers.ParserWarning",
    "pandas.io.parsers.read_csv",
    "pandas.io.parsers.read_table",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.test_unsupported.TestUnsupportedFeatures.test_python_engine": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "ValueError",
    "object",
    "pandas.compat.StringIO",
    "pandas.io.parsers._python_unsupported",
    "pandas.io.parsers.read_csv",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.test_unsupported.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.test_unsupported.parsers": {
  "data": {
   "shadows": "pandas.io.parsers"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.test_unsupported.py_unsupported": {
  "data": {
   "shadows": "pandas.io.parsers._python_unsupported"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.test_unsupported.read_csv": {
  "data": {
   "shadows": "pandas.io.parsers.read_csv"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.test_unsupported.read_table": {
  "data": {
   "shadows": "pandas.io.parsers.read_table"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.test_unsupported.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.usecols": {
  "data": {},
  "type": "module"
 },
 "pandas.io.tests.parser.usecols.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.usecols.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.usecols.Timestamp": {
  "data": {
   "shadows": "pandas.lib.Timestamp"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.usecols.UsecolsTests": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.parser.usecols.UsecolsTests.test_raise_on_mixed_dtype_usecols": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ValueError",
    "pandas.compat.StringIO",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.usecols.UsecolsTests.test_usecols": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.usecols.UsecolsTests.test_usecols_implicit_index_col": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.usecols.UsecolsTests.test_usecols_index_col_False": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.usecols.UsecolsTests.test_usecols_index_col_conflict": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.usecols.UsecolsTests.test_usecols_regex_sep": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.usecols.UsecolsTests.test_usecols_with_integer_like_header": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.usecols.UsecolsTests.test_usecols_with_parse_dates": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.lib.Timestamp",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.usecols.UsecolsTests.test_usecols_with_parse_dates_and_full_names": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.lib.Timestamp",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.usecols.UsecolsTests.test_usecols_with_parse_dates_and_usecol_names": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.lib.Timestamp",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.usecols.UsecolsTests.test_usecols_with_whitespace": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.parser.usecols.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.io.tests.parser.usecols.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.io.tests.sas.test_sas7bdat": {
  "data": {},
  "type": "module"
 },
 "pandas.io.tests.sas.test_sas7bdat.PY2": {
  "data": {
   "shadows": "pandas.compat.PY2"
  },
  "type": "import"
 },
 "pandas.io.tests.sas.test_sas7bdat.SAS7BDATReader": {
  "data": {
   "shadows": "pandas.io.sas.sas7bdat.SAS7BDATReader"
  },
  "type": "import"
 },
 "pandas.io.tests.sas.test_sas7bdat.TestSAS7BDAT": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.sas.test_sas7bdat.TestSAS7BDAT.setUp": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.dtype",
    "numpy.float64",
    "numpy.int64",
    "pandas.compat.PY2",
    "pandas.datetime",
    "pandas.io.tests.sas.test_sas7bdat.os",
    "pandas.read_csv",
    "pandas.to_timedelta",
    "pandas.util.testing.get_data_path",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.sas.test_sas7bdat.TestSAS7BDAT.test_from_buffer": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "open",
    "pandas.io.tests.sas.test_sas7bdat.io",
    "pandas.io.tests.sas.test_sas7bdat.os",
    "pandas.read_sas",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.sas.test_sas7bdat.TestSAS7BDAT.test_from_file": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "pandas.io.tests.sas.test_sas7bdat.os",
    "pandas.read_sas",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.sas.test_sas7bdat.TestSAS7BDAT.test_from_iterator": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "open",
    "pandas.io.tests.sas.test_sas7bdat.io",
    "pandas.io.tests.sas.test_sas7bdat.os",
    "pandas.read_sas",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.sas.test_sas7bdat.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "pandas.io.tests.sas.test_sas7bdat.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.io.tests.sas.test_sas7bdat.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.io.tests.sas.test_sas7bdat.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.io.tests.sas.test_sas7bdat.test_12659": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "numpy.float64",
    "pandas.io.tests.sas.test_sas7bdat.os",
    "pandas.read_csv",
    "pandas.read_sas",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.get_data_path"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.sas.test_sas7bdat.test_airline": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "numpy.float64",
    "pandas.io.tests.sas.test_sas7bdat.os",
    "pandas.read_csv",
    "pandas.read_sas",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.get_data_path"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.sas.test_sas7bdat.test_encoding_options": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "AttributeError",
    "pandas.io.sas.sas7bdat.SAS7BDATReader",
    "pandas.io.tests.sas.test_sas7bdat.os",
    "pandas.read_sas",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.get_data_path",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.sas.test_sas7bdat.test_productsales": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "numpy.float64",
    "pandas.io.tests.sas.test_sas7bdat.os",
    "pandas.read_csv",
    "pandas.read_sas",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.get_data_path"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.sas.test_sas7bdat.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.io.tests.sas.test_xport": {
  "data": {},
  "type": "module"
 },
 "pandas.io.tests.sas.test_xport.TestXport": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.sas.test_xport.TestXport.setUp": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "pandas.io.tests.sas.test_xport.os",
    "pandas.util.testing.get_data_path"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.sas.test_xport.TestXport.test1_basic": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "pandas.io.sas.sasreader.read_sas",
    "pandas.io.tests.sas.test_xport.numeric_as_float",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.sas.test_xport.TestXport.test1_incremental": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "pandas.concat",
    "pandas.io.sas.sasreader.read_sas",
    "pandas.io.tests.sas.test_xport.numeric_as_float",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.sas.test_xport.TestXport.test1_index": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "pandas.io.sas.sasreader.read_sas",
    "pandas.io.tests.sas.test_xport.numeric_as_float",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.sas.test_xport.TestXport.test2": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "pandas.io.sas.sasreader.read_sas",
    "pandas.io.tests.sas.test_xport.numeric_as_float",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.sas.test_xport.TestXport.test_multiple_types": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "pandas.io.sas.sasreader.read_sas",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.sas.test_xport.TestXport.test_truncated_float_support": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "pandas.io.sas.sasreader.read_sas",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.sas.test_xport.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.io.tests.sas.test_xport.numeric_as_float": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.sas.test_xport.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.io.tests.sas.test_xport.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.io.tests.sas.test_xport.read_sas": {
  "data": {
   "shadows": "pandas.io.sas.sasreader.read_sas"
  },
  "type": "import"
 },
 "pandas.io.tests.sas.test_xport.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.io.tests.test_clipboard": {
  "data": {
   "symbols_in_volume": [
    "OSError",
    "pandas.io.tests.test_clipboard.nose"
   ]
  },
  "type": "module"
 },
 "pandas.io.tests.test_clipboard.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.io.tests.test_clipboard.TestClipboard": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase",
    "pandas.util.testing.disabled"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_clipboard.TestClipboard.check_round_trip_frame": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "pandas.read_clipboard",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_clipboard.TestClipboard.setUpClass": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "classmethod",
    "float",
    "list",
    "numpy.arange",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.get_option",
    "pandas.io.tests.test_clipboard.TestClipboard",
    "pandas.util.testing.makeCustomDataframe",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_clipboard.TestClipboard.tearDownClass": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "classmethod",
    "pandas.io.tests.test_clipboard.TestClipboard",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_clipboard.TestClipboard.test_read_clipboard_infer_excel": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "pandas.read_clipboard",
    "pandas.util.clipboard.clipboard_set",
    "pandas.util.testing.assert_frame_equal",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_clipboard.TestClipboard.test_round_trip_frame": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "pandas.io.tests.test_clipboard.TestClipboard.test_round_trip_frame_sep": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "pandas.io.tests.test_clipboard.TestClipboard.test_round_trip_frame_string": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "pandas.io.tests.test_clipboard.clipboard_set": {
  "data": {
   "shadows": "pandas.util.clipboard.clipboard_set"
  },
  "type": "import"
 },
 "pandas.io.tests.test_clipboard.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "pandas.io.tests.test_clipboard.disabled": {
  "data": {
   "shadows": "pandas.util.testing.disabled"
  },
  "type": "import"
 },
 "pandas.io.tests.test_clipboard.get_option": {
  "data": {
   "shadows": "pandas.get_option"
  },
  "type": "import"
 },
 "pandas.io.tests.test_clipboard.mkdf": {
  "data": {
   "shadows": "pandas.util.testing.makeCustomDataframe"
  },
  "type": "import"
 },
 "pandas.io.tests.test_clipboard.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.io.tests.test_clipboard.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.io.tests.test_clipboard.pandas.util.clipboard": {
  "data": {
   "shadows": "pandas.util.clipboard"
  },
  "type": "import"
 },
 "pandas.io.tests.test_clipboard.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.io.tests.test_clipboard.randint": {
  "data": {
   "shadows": "numpy.random.randint"
  },
  "type": "import"
 },
 "pandas.io.tests.test_clipboard.read_clipboard": {
  "data": {
   "shadows": "pandas.read_clipboard"
  },
  "type": "import"
 },
 "pandas.io.tests.test_clipboard.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.io.tests.test_common": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "pandas.io.tests.test_common.LocalPath": {
  "data": {
   "shadows": "py.path.local"
  },
  "type": "import"
 },
 "pandas.io.tests.test_common.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "pandas.io.tests.test_common.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.io.tests.test_common.TestCommonIOCapabilities": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_common.TestCommonIOCapabilities.test_expand_user": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "os.path.isabs",
    "pandas.io.common._expand_user",
    "pandas.io.tests.test_common.os"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_common.TestCommonIOCapabilities.test_expand_user_normal_path": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "pandas.io.common._expand_user",
    "pandas.io.tests.test_common.os"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_common.TestCommonIOCapabilities.test_get_filepath_or_buffer_with_buffer": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.io.common.get_filepath_or_buffer"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_common.TestCommonIOCapabilities.test_get_filepath_or_buffer_with_path": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "os.path.isabs",
    "pandas.io.common.get_filepath_or_buffer",
    "pandas.io.tests.test_common.os"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_common.TestCommonIOCapabilities.test_iterator": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "len",
    "next",
    "pandas.compat.StringIO",
    "pandas.concat",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_common.TestCommonIOCapabilities.test_stringify_path_localpath": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "pandas.io.common._stringify_path",
    "pandas.io.tests.test_common.os",
    "pandas.util.testing._skip_if_no_localpath",
    "py.path.local"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_common.TestCommonIOCapabilities.test_stringify_path_pathlib": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "pandas.io.common._stringify_path",
    "pandas.io.tests.test_common.os",
    "pandas.util.testing._skip_if_no_pathlib",
    "pathlib.Path"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_common.common": {
  "data": {
   "shadows": "pandas.io.common"
  },
  "type": "import"
 },
 "pandas.io.tests.test_common.concat": {
  "data": {
   "shadows": "pandas.concat"
  },
  "type": "import"
 },
 "pandas.io.tests.test_common.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "pandas.io.tests.test_common.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.io.tests.test_common.read_csv": {
  "data": {
   "shadows": "pandas.read_csv"
  },
  "type": "import"
 },
 "pandas.io.tests.test_common.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.io.tests.test_data": {
  "data": {
   "symbols_in_volume": [
    "FutureWarning",
    "__name__",
    "pandas.compat.PY3",
    "pandas.io.tests.test_data.nose",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "module"
 },
 "pandas.io.tests.test_data.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.io.tests.test_data.DataReader": {
  "data": {
   "shadows": "pandas.io.data.DataReader"
  },
  "type": "import"
 },
 "pandas.io.tests.test_data.HTTPError": {
  "data": {
   "shadows": "urllib2.HTTPError"
  },
  "type": "import"
 },
 "pandas.io.tests.test_data.RemoteDataError": {
  "data": {
   "shadows": "pandas.io.data.RemoteDataError"
  },
  "type": "import"
 },
 "pandas.io.tests.test_data.SymbolWarning": {
  "data": {
   "shadows": "pandas.io.data.SymbolWarning"
  },
  "type": "import"
 },
 "pandas.io.tests.test_data.TestDataReader": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_data.TestDataReader.test_is_s3_url": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "pandas.io.common._is_s3_url"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestDataReader.test_read_famafrench": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "dict",
    "pandas.io.data.DataReader",
    "pandas.io.tests.test_data.nose",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestDataReader.test_read_fred": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.data.DataReader",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestDataReader.test_read_google": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.data.DataReader",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestDataReader.test_read_yahoo": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.data.DataReader",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestFred": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_data.TestFred.test_fred": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "Exception",
    "datetime.datetime",
    "int",
    "pandas.io.data.DataReader",
    "pandas.io.tests.test_data.nose",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestFred.test_fred_multi": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.DataFrame",
    "pandas.io.data.DataReader",
    "pandas.io.tests.test_data.nose",
    "pandas.tslib.Timestamp",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestFred.test_fred_multi_bad_series": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "pandas.io.data.DataReader",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.network",
    "urllib2.HTTPError"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestFred.test_fred_nan": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.io.data.DataReader",
    "pandas.isnull",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestFred.test_fred_part2": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.io.data.get_data_fred",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestFred.test_fred_parts": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.floating",
    "numpy.issubdtype",
    "pandas.io.data.get_data_fred",
    "pandas.io.tests.test_data.nose",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestFred.test_invalid_series": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "Exception",
    "pandas.io.data.get_data_fred",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestGoogle": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_data.TestGoogle.setUpClass": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "classmethod",
    "pandas.io.tests.test_data.TestGoogle",
    "pandas.io.tests.test_data.nose",
    "pandas.util.testing.get_locales",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestGoogle.tearDownClass": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "classmethod",
    "pandas.io.tests.test_data.TestGoogle",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestGoogle.test_dtypes": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "numpy.issubdtype",
    "numpy.number",
    "pandas.io.data",
    "pandas.io.data.Close.dtype",
    "pandas.io.data.High.dtype",
    "pandas.io.data.Low.dtype",
    "pandas.io.data.Open.dtype",
    "pandas.io.data.Volume.dtype",
    "pandas.io.data.get_data_google",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestGoogle.test_get_goog_volume": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "pandas.io.data.get_data_google",
    "pandas.util.testing.network",
    "pandas.util.testing.set_locale"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestGoogle.test_get_multi1": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "AttributeError",
    "hasattr",
    "pandas.io.data.get_data_google",
    "pandas.util.testing.network",
    "pandas.util.testing.set_locale"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestGoogle.test_get_multi2": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "numpy.floating",
    "numpy.issubdtype",
    "pandas.io.data.get_data_google",
    "pandas.io.tests.test_data.assert_n_failed_equals_n_null_columns",
    "pandas.io.tests.test_data.warnings",
    "pandas.util.testing.network",
    "pandas.util.testing.set_locale"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestGoogle.test_get_multi_all_invalid": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "pandas.io.data.RemoteDataError",
    "pandas.io.data.SymbolWarning",
    "pandas.io.data.get_data_google",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestGoogle.test_get_multi_invalid": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "pandas.io.data.SymbolWarning",
    "pandas.io.data.get_data_google",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestGoogle.test_get_quote_fails": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.Series",
    "pandas.io.data.get_quote_google",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestGoogle.test_google": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "Exception",
    "datetime.datetime",
    "pandas.io.data.DataReader",
    "pandas.util.testing.network",
    "pandas.util.testing.set_locale"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestGoogle.test_unicode_date": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "pandas.io.data",
    "pandas.io.data.get_data_google",
    "pandas.io.data.index.name",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestOptionsWarnings": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_data.TestOptionsWarnings.setUpClass": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "classmethod",
    "pandas.io.tests.test_data.TestOptionsWarnings",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestOptionsWarnings.tearDownClass": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "classmethod",
    "pandas.io.tests.test_data.TestOptionsWarnings",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestOptionsWarnings.test_options_source_warning": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "pandas.io.data.Options",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestYahoo": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_data.TestYahoo.setUpClass": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "classmethod",
    "pandas.io.tests.test_data.TestYahoo",
    "pandas.io.tests.test_data._skip_if_no_lxml",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestYahoo.test_get_components_dax": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "pandas.io.data.get_components_yahoo",
    "pandas.io.tests.test_data.nose",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestYahoo.test_get_components_dow_jones": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "pandas.io.data.get_components_yahoo",
    "pandas.io.tests.test_data.nose",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestYahoo.test_get_components_nasdaq_100": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "pandas.io.data.get_components_yahoo",
    "pandas.io.tests.test_data.nose",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestYahoo.test_get_data_interval": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pandas.io.data.get_data_yahoo",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestYahoo.test_get_data_multiple_symbols": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "pandas.io.data.get_data_yahoo",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestYahoo.test_get_data_multiple_symbols_two_dates": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.floating",
    "numpy.issubdtype",
    "pandas.io.data.get_data_yahoo",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestYahoo.test_get_data_single_symbol": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "pandas.io.data.get_data_yahoo",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestYahoo.test_get_date_ret_index": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "hasattr",
    "numpy.floating",
    "numpy.issubdtype",
    "pandas.io.data.get_data_yahoo",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestYahoo.test_get_quote_series": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.io.data.get_quote_yahoo",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestYahoo.test_get_quote_string": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "pandas.io.data._yahoo_codes.update",
    "pandas.io.data.get_quote_yahoo",
    "pandas.isnull",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestYahoo.test_get_quote_stringlist": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "pandas.io.data.get_quote_yahoo",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestYahoo.test_yahoo": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.io.data.DataReader",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestYahoo.test_yahoo_fails": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "Exception",
    "datetime.datetime",
    "pandas.io.data.DataReader",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestYahooOptions": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_data.TestYahooOptions.setUpClass": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "classmethod",
    "pandas.Timestamp.today",
    "pandas.io.data.Options",
    "pandas.io.tests.test_data.TestYahooOptions",
    "pandas.io.tests.test_data._skip_if_no_bs",
    "pandas.io.tests.test_data._skip_if_no_lxml",
    "pandas.io.tests.test_data.nose",
    "pandas.io.tests.test_data.os",
    "pandas.offsets.MonthBegin",
    "pandas.util.testing.get_data_path",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestYahooOptions.tearDownClass": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "classmethod",
    "pandas.io.tests.test_data.TestYahooOptions",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestYahooOptions.test_chop": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestYahooOptions.test_chop_out_of_strike_range": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestYahooOptions.test_empty_table": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "len",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestYahooOptions.test_get_all_data": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "len",
    "pandas.io.data",
    "pandas.io.data.RemoteDataError",
    "pandas.io.tests.test_data.nose",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestYahooOptions.test_get_all_data_calls_only": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "len",
    "pandas.io.data",
    "pandas.io.data.RemoteDataError",
    "pandas.io.tests.test_data.nose",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestYahooOptions.test_get_call_data": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "len",
    "pandas.io.data.RemoteDataError",
    "pandas.io.tests.test_data.nose",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestYahooOptions.test_get_data_with_list": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "len",
    "pandas.io.data",
    "pandas.io.data.RemoteDataError",
    "pandas.io.tests.test_data.nose",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestYahooOptions.test_get_expiry_dates": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "len",
    "pandas.io.data.RemoteDataError",
    "pandas.io.tests.test_data.nose",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestYahooOptions.test_get_near_stock_price": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "len",
    "pandas.io.data.RemoteDataError",
    "pandas.io.tests.test_data.nose",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestYahooOptions.test_get_options_data": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pandas.io.data.RemoteDataError",
    "pandas.io.tests.test_data.nose",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestYahooOptions.test_get_put_data": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "len",
    "pandas.io.data.RemoteDataError",
    "pandas.io.tests.test_data.nose",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestYahooOptions.test_get_underlying_price": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "float",
    "pandas.io.data.Options",
    "pandas.io.data.RemoteDataError",
    "pandas.io.tests.test_data.nose",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestYahooOptions.test_month_year": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "len",
    "pandas.io.data",
    "pandas.io.data.RemoteDataError",
    "pandas.io.tests.test_data.nose",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestYahooOptions.test_sample_page_chg_float": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestYahooOptions.test_sample_page_price_quote_time1": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "complex",
    "datetime.datetime",
    "float",
    "int",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.TestYahooOptions.test_sample_page_price_quote_time2": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "complex",
    "datetime.datetime",
    "float",
    "int",
    "pandas.Timestamp",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.io.tests.test_data._is_s3_url": {
  "data": {
   "shadows": "pandas.io.common._is_s3_url"
  },
  "type": "import"
 },
 "pandas.io.tests.test_data._skip_if_no_bs": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ImportError",
    "pandas.io.tests.test_data.nose"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data._skip_if_no_lxml": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ImportError",
    "pandas.io.tests.test_data.nose"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data._yahoo_codes": {
  "data": {
   "shadows": "pandas.io.data._yahoo_codes"
  },
  "type": "import"
 },
 "pandas.io.tests.test_data.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "pandas.io.tests.test_data.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.io.tests.test_data.assert_n_failed_equals_n_null_columns": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "dict",
    "len",
    "nose.tools.assert_equal",
    "pandas.Series",
    "pandas.compat.iteritems",
    "pandas.io.data.SymbolWarning",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_data.assert_produces_warning": {
  "data": {
   "shadows": "pandas.util.testing.assert_produces_warning"
  },
  "type": "import"
 },
 "pandas.io.tests.test_data.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.io.tests.test_data.bs4": {
  "data": {
   "shadows": "bs4"
  },
  "type": "import"
 },
 "pandas.io.tests.test_data.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.io.tests.test_data.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.io.tests.test_data.html5lib": {
  "data": {
   "shadows": "html5lib"
  },
  "type": "import"
 },
 "pandas.io.tests.test_data.lxml": {
  "data": {
   "shadows": "lxml"
  },
  "type": "import"
 },
 "pandas.io.tests.test_data.network": {
  "data": {
   "shadows": "pandas.util.testing.network"
  },
  "type": "import"
 },
 "pandas.io.tests.test_data.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.io.tests.test_data.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.io.tests.test_data.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.io.tests.test_data.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.io.tests.test_data.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.io.tests.test_data.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.io.tests.test_data.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.io.tests.test_data.web": {
  "data": {
   "shadows": "pandas.io.data"
  },
  "type": "import"
 },
 "pandas.io.tests.test_date_converters": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.io.tests.test_date_converters.nose"
   ]
  },
  "type": "module"
 },
 "pandas.io.tests.test_date_converters.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.io.tests.test_date_converters.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.io.tests.test_date_converters.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.io.tests.test_date_converters.TestConverters": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_date_converters.TestConverters.setUp": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.array",
    "object"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_date_converters.TestConverters.test_dateparser_resolution_if_not_ns": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.StringIO",
    "pandas.compat.numpy.np_array_datetime64_compat",
    "pandas.io.parsers.read_csv",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_date_converters.TestConverters.test_dateparser_resolution_if_not_ns.date_parser": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "datetime.date",
    "datetime.datetime",
    "pandas.compat.numpy.np_array_datetime64_compat"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_date_converters.TestConverters.test_datetime_fractional_seconds": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.compat.StringIO",
    "pandas.io.date_converters.parse_all_fields",
    "pandas.io.parsers.read_table"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_date_converters.TestConverters.test_datetime_six_col": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.compat.StringIO",
    "pandas.io.date_converters.parse_all_fields",
    "pandas.io.parsers.read_table"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_date_converters.TestConverters.test_generic": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "datetime.date",
    "int",
    "pandas.compat.StringIO",
    "pandas.io.parsers.read_table"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_date_converters.TestConverters.test_parse_date_fields": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.array",
    "pandas.compat.StringIO",
    "pandas.io.date_converters.parse_date_fields",
    "pandas.io.parsers.read_table"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_date_converters.TestConverters.test_parse_date_time": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.compat.StringIO",
    "pandas.io.date_converters.parse_date_time",
    "pandas.io.parsers.read_csv",
    "pandas.io.parsers.read_table"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_date_converters.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.io.tests.test_date_converters.conv": {
  "data": {
   "shadows": "pandas.io.date_converters"
  },
  "type": "import"
 },
 "pandas.io.tests.test_date_converters.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "pandas.io.tests.test_date_converters.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.io.tests.test_date_converters.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.io.tests.test_date_converters.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.io.tests.test_date_converters.np_array_datetime64_compat": {
  "data": {
   "shadows": "pandas.compat.numpy.np_array_datetime64_compat"
  },
  "type": "import"
 },
 "pandas.io.tests.test_date_converters.read_csv": {
  "data": {
   "shadows": "pandas.io.parsers.read_csv"
  },
  "type": "import"
 },
 "pandas.io.tests.test_date_converters.read_table": {
  "data": {
   "shadows": "pandas.io.parsers.read_table"
  },
  "type": "import"
 },
 "pandas.io.tests.test_date_converters.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.DataFrame",
    "pandas.io.tests.test_excel._frame",
    "pandas.io.tests.test_excel._mixed_frame",
    "pandas.io.tests.test_excel._seriesd",
    "pandas.io.tests.test_excel.nose",
    "pandas.util.testing.getSeriesData",
    "pandas.util.testing.getTimeSeriesData",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "module"
 },
 "pandas.io.tests.test_excel.BytesIO": {
  "data": {
   "shadows": "pandas.compat.BytesIO"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel.ExcelCell": {
  "data": {
   "shadows": "pandas.formats.format.ExcelCell"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel.ExcelFile": {
  "data": {
   "shadows": "pandas.io.excel.ExcelFile"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel.ExcelWriter": {
  "data": {
   "shadows": "pandas.io.excel.ExcelWriter"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel.ExcelWriterBase": {
  "data": {
   "lineno": 892,
   "symbols_in_volume": [
    "pandas.io.tests.test_excel.SharedItems"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_excel.ExcelWriterBase.setUp": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "pandas.core.config.get_option",
    "pandas.core.config.set_option",
    "pandas.io.tests.test_excel.ExcelWriterBase",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ExcelWriterBase.tearDown": {
  "data": {
   "lineno": 911,
   "symbols_in_volume": [
    "pandas.core.config.set_option"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ExcelWriterBase.test_basics_with_nan": {
  "data": {
   "lineno": 1006,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.io.tests.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ExcelWriterBase.test_bool_types": {
  "data": {
   "lineno": 1052,
   "symbols_in_volume": [
    "numpy.bool8",
    "numpy.bool_",
    "pandas.DataFrame",
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.read_excel",
    "pandas.io.tests.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ExcelWriterBase.test_bytes_io": {
  "data": {
   "lineno": 1679,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.BytesIO",
    "pandas.io.excel.ExcelWriter",
    "pandas.io.excel.read_excel",
    "pandas.io.tests.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ExcelWriterBase.test_colaliases": {
  "data": {
   "lineno": 1099,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Index",
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.read_excel",
    "pandas.io.tests.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ExcelWriterBase.test_datetimes": {
  "data": {
   "lineno": 1654,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.DataFrame.from_items",
    "pandas.io.excel.read_excel",
    "pandas.io.tests.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ExcelWriterBase.test_duplicated_columns": {
  "data": {
   "lineno": 1595,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.excel.read_excel",
    "pandas.io.tests.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ExcelWriterBase.test_excel_010_hemstring": {
  "data": {
   "lineno": 1513,
   "symbols_in_volume": [
    "NotImplementedError",
    "len",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.io.tests.test_excel._skip_if_no_xlrd",
    "pandas.io.tests.test_excel.nose",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.makeCustomDataframe",
    "roundtrip"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ExcelWriterBase.test_excel_010_hemstring.roundtrip": {
  "data": {
   "lineno": 1523,
   "symbols_in_volume": [
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.read_excel",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ExcelWriterBase.test_excel_010_hemstring_raises_NotImplementedError": {
  "data": {
   "lineno": 1566,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.io.tests.test_excel._skip_if_no_xlrd",
    "pandas.io.tests.test_excel.nose",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.makeCustomDataframe",
    "roundtrip2"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ExcelWriterBase.test_excel_010_hemstring_raises_NotImplementedError.roundtrip2": {
  "data": {
   "lineno": 1578,
   "symbols_in_volume": [
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.read_excel",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ExcelWriterBase.test_excel_date_datetime_format": {
  "data": {
   "lineno": 1211,
   "symbols_in_volume": [
    "datetime.date",
    "datetime.datetime",
    "pandas.DataFrame",
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.ExcelWriter",
    "pandas.io.excel.read_excel",
    "pandas.io.tests.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ExcelWriterBase.test_excel_roundtrip_datetime": {
  "data": {
   "lineno": 1197,
   "symbols_in_volume": [
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.read_excel",
    "pandas.io.tests.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ExcelWriterBase.test_excel_roundtrip_indexname": {
  "data": {
   "lineno": 1181,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.read_excel",
    "pandas.io.tests.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ExcelWriterBase.test_excel_sheet_by_name_raise": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.read_excel",
    "pandas.io.tests.test_excel._skip_if_no_xlrd",
    "pandas.io.tests.test_excel.xlrd",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ExcelWriterBase.test_excelwriter_contextmanager": {
  "data": {
   "lineno": 928,
   "symbols_in_volume": [
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.ExcelWriter",
    "pandas.io.excel.read_excel",
    "pandas.io.tests.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ExcelWriterBase.test_float_types": {
  "data": {
   "lineno": 1040,
   "symbols_in_volume": [
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.random.random_sample",
    "pandas.DataFrame",
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.read_excel",
    "pandas.io.tests.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ExcelWriterBase.test_inf_roundtrip": {
  "data": {
   "lineno": 1064,
   "symbols_in_volume": [
    "numpy.inf",
    "pandas.DataFrame",
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.read_excel",
    "pandas.io.tests.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ExcelWriterBase.test_int_types": {
  "data": {
   "lineno": 1015,
   "symbols_in_volume": [
    "float",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.read_excel",
    "pandas.io.tests.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ExcelWriterBase.test_invalid_columns": {
  "data": {
   "lineno": 1638,
   "symbols_in_volume": [
    "KeyError",
    "pandas.DataFrame",
    "pandas.io.excel.read_excel",
    "pandas.io.tests.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ExcelWriterBase.test_mixed": {
  "data": {
   "lineno": 986,
   "symbols_in_volume": [
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.read_excel",
    "pandas.io.tests.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ExcelWriterBase.test_roundtrip": {
  "data": {
   "lineno": 942,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.io.excel.read_excel",
    "pandas.io.tests.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ExcelWriterBase.test_roundtrip_indexlabels": {
  "data": {
   "lineno": 1119,
   "symbols_in_volume": [
    "bool",
    "numpy.int64",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.read_excel",
    "pandas.io.tests.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ExcelWriterBase.test_sheets": {
  "data": {
   "lineno": 1074,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "numpy.testing.assert_equal",
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.ExcelWriter",
    "pandas.io.excel.read_excel",
    "pandas.io.tests.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ExcelWriterBase.test_swapped_columns": {
  "data": {
   "lineno": 1624,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.excel.read_excel",
    "pandas.io.tests.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ExcelWriterBase.test_to_excel_float_format": {
  "data": {
   "lineno": 1357,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.read_excel",
    "pandas.io.tests.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ExcelWriterBase.test_to_excel_multiindex": {
  "data": {
   "lineno": 1262,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.MultiIndex.from_arrays",
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.read_excel",
    "pandas.io.tests.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ExcelWriterBase.test_to_excel_multiindex_cols": {
  "data": {
   "lineno": 1285,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.MultiIndex.from_arrays",
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.map",
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.read_excel",
    "pandas.io.tests.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ExcelWriterBase.test_to_excel_multiindex_dates": {
  "data": {
   "lineno": 1314,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.MultiIndex.from_arrays",
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.read_excel",
    "pandas.io.tests.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ExcelWriterBase.test_to_excel_multiindex_no_write_index": {
  "data": {
   "lineno": 1332,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.read_excel",
    "pandas.io.tests.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ExcelWriterBase.test_to_excel_output_encoding": {
  "data": {
   "lineno": 1374,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.excel.read_excel",
    "pandas.io.tests.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ExcelWriterBase.test_to_excel_periodindex": {
  "data": {
   "lineno": 1249,
   "symbols_in_volume": [
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.read_excel",
    "pandas.io.tests.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ExcelWriterBase.test_to_excel_unicode_filename": {
  "data": {
   "lineno": 1389,
   "symbols_in_volume": [
    "UnicodeEncodeError",
    "open",
    "pandas.DataFrame",
    "pandas.compat.u",
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.read_excel",
    "pandas.io.tests.test_excel._skip_if_no_xlrd",
    "pandas.io.tests.test_excel.nose",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ExcelWriterBase.test_tsframe": {
  "data": {
   "lineno": 995,
   "symbols_in_volume": [
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.read_excel",
    "pandas.io.tests.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ExcelWriterBase.test_write_lists_dict": {
  "data": {
   "lineno": 1692,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.excel.read_excel",
    "pandas.io.tests.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ExcelWriterEngineTests": {
  "data": {
   "lineno": 2129,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_excel.ExcelWriterEngineTests.test_ExcelWriter_dispatch": {
  "data": {
   "lineno": 2131,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "pandas.compat.openpyxl_compat.is_compat",
    "pandas.io.excel.ExcelWriter",
    "pandas.io.excel._Openpyxl1Writer",
    "pandas.io.excel._XlsxWriter",
    "pandas.io.excel._XlwtWriter",
    "pandas.io.tests.test_excel._skip_if_no_openpyxl",
    "pandas.io.tests.test_excel._skip_if_no_xlwt",
    "pandas.io.tests.test_excel.nose",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ExcelWriterEngineTests.test_register_writer": {
  "data": {
   "lineno": 2153,
   "symbols_in_volume": [
    "check_called",
    "func",
    "pandas.io.excel.ExcelWriter",
    "pandas.io.excel.register_writer",
    "pandas.option_context",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.makeCustomDataframe",
    "pandas.util.testing.makePanel"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ExcelWriterEngineTests.test_register_writer.DummyClass": {
  "data": {
   "lineno": 2158,
   "symbols_in_volume": [
    "pandas.io.excel.ExcelWriter"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_excel.ExcelWriterEngineTests.test_register_writer.DummyClass.save": {
  "data": {
   "lineno": 2164
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ExcelWriterEngineTests.test_register_writer.DummyClass.write_cells": {
  "data": {
   "lineno": 2167
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ExcelWriterEngineTests.test_register_writer.check_called": {
  "data": {
   "lineno": 2170,
   "symbols_in_volume": [
    "func",
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel.LocalPath": {
  "data": {
   "shadows": "py.path.local"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel.Openpyxl20Tests": {
  "data": {
   "lineno": 1786,
   "symbols_in_volume": [
    "pandas.io.tests.test_excel.ExcelWriterBase",
    "pandas.io.tests.test_excel.raise_on_incompat_version",
    "pandas.io.tests.test_excel.skip_openpyxl_gt21",
    "pandas.util.testing.TestCase",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_excel.Openpyxl20Tests.test_to_excel_styleconverter": {
  "data": {
   "lineno": 1793,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "openpyxl.styles.Alignment",
    "openpyxl.styles.Border",
    "openpyxl.styles.Color",
    "openpyxl.styles.Font",
    "openpyxl.styles.NumberFormat",
    "openpyxl.styles.PatternFill",
    "openpyxl.styles.Protection",
    "openpyxl.styles.Side",
    "openpyxl.styles.borders.BORDER_THIN",
    "pandas.io.excel._Openpyxl20Writer._convert_to_style_kwargs",
    "pandas.io.tests.test_excel.openpyxl"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.Openpyxl20Tests.test_write_cells_merge_styled": {
  "data": {
   "lineno": 1853,
   "symbols_in_volume": [
    "openpyxl.styles.Style",
    "pandas.formats.format.ExcelCell",
    "pandas.io.excel._Openpyxl20Writer",
    "pandas.io.excel._Openpyxl20Writer._convert_to_style_kwargs",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.Openpyxl22Tests": {
  "data": {
   "lineno": 1902,
   "symbols_in_volume": [
    "pandas.io.tests.test_excel.ExcelWriterBase",
    "pandas.io.tests.test_excel.raise_on_incompat_version",
    "pandas.io.tests.test_excel.skip_openpyxl_lt22",
    "pandas.util.testing.TestCase",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_excel.Openpyxl22Tests.test_to_excel_styleconverter": {
  "data": {
   "lineno": 1909,
   "symbols_in_volume": [
    "openpyxl.styles.Alignment",
    "openpyxl.styles.Border",
    "openpyxl.styles.Color",
    "openpyxl.styles.Font",
    "openpyxl.styles.PatternFill",
    "openpyxl.styles.Protection",
    "openpyxl.styles.Side",
    "openpyxl.styles.borders.BORDER_THIN",
    "pandas.io.excel._Openpyxl22Writer._convert_to_style_kwargs"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.Openpyxl22Tests.test_write_cells_merge_styled": {
  "data": {
   "lineno": 1963,
   "symbols_in_volume": [
    "pandas.compat.openpyxl_compat.is_compat",
    "pandas.formats.format.ExcelCell",
    "pandas.io.excel._Openpyxl22Writer",
    "pandas.io.excel._Openpyxl22Writer._convert_to_style_kwargs",
    "pandas.io.tests.test_excel.nose",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.OpenpyxlTests": {
  "data": {
   "lineno": 1734,
   "symbols_in_volume": [
    "pandas.io.tests.test_excel.ExcelWriterBase",
    "pandas.io.tests.test_excel.raise_on_incompat_version",
    "pandas.util.testing.TestCase",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_excel.OpenpyxlTests.test_to_excel_styleconverter": {
  "data": {
   "lineno": 1740,
   "symbols_in_volume": [
    "pandas.compat.openpyxl_compat.is_compat",
    "pandas.io.excel._Openpyxl1Writer._convert_to_style",
    "pandas.io.tests.test_excel._skip_if_no_openpyxl",
    "pandas.io.tests.test_excel.nose",
    "pandas.io.tests.test_excel.openpyxl"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.OpenpyxlTests_NoMerge": {
  "data": {
   "lineno": 2102,
   "symbols_in_volume": [
    "pandas.io.tests.test_excel.ExcelWriterBase",
    "pandas.io.tests.test_excel._skip_if_no_openpyxl",
    "pandas.util.testing.TestCase",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_excel.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel.ReadingTestsBase": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "pandas.io.tests.test_excel.SharedItems"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_excel.ReadingTestsBase.setUp": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "pandas.io.tests.test_excel.ReadingTestsBase",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ReadingTestsBase.test_excel_cell_error_na": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ReadingTestsBase.test_excel_passes_na": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.io.excel.read_excel",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ReadingTestsBase.test_excel_stop_iterator": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ReadingTestsBase.test_excel_table": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ReadingTestsBase.test_excel_table_sheet_by_index": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "pandas.io.excel.read_excel",
    "pandas.io.tests.test_excel.xlrd",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ReadingTestsBase.test_parse_cols_int": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ReadingTestsBase.test_parse_cols_list": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ReadingTestsBase.test_parse_cols_str": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ReadingTestsBase.test_read_excel_blank": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ReadingTestsBase.test_read_excel_blank_with_header": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ReadingTestsBase.test_read_one_empty_col_no_header": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.excel.read_excel",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ReadingTestsBase.test_read_one_empty_col_with_header": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.io.excel.read_excel",
    "pandas.io.tests.test_excel._skip_if_no_openpyxl",
    "pandas.io.tests.test_excel._skip_if_no_xlwt",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ReadingTestsBase.test_reader_converters": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "int",
    "numpy.nan",
    "pandas.DataFrame.from_items",
    "pandas.util.testing.assert_frame_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ReadingTestsBase.test_reader_special_dtypes": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "datetime.datetime",
    "enumerate",
    "float",
    "pandas.DataFrame.from_items",
    "pandas.util.testing.assert_frame_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ReadingTestsBase.test_reading_all_sheets": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "pandas.util.testing.assert_contains_all"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ReadingTestsBase.test_reading_all_sheets_with_blank": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "pandas.util.testing.assert_contains_all"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ReadingTestsBase.test_reading_multiple_specific_sheets": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "len",
    "list",
    "pandas.util.testing.assert_contains_all",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.ReadingTestsBase.test_set_column_names_in_parameter": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.ExcelWriter",
    "pandas.io.excel.read_excel",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.SharedItems": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_excel.SharedItems.get_csv_refdf": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "pandas.io.parsers.read_csv",
    "pandas.io.tests.test_excel.os"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.SharedItems.get_exceldf": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "pandas.io.excel.read_excel",
    "pandas.io.tests.test_excel.os"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.SharedItems.get_excelfile": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "pandas.io.excel.ExcelFile",
    "pandas.io.tests.test_excel.os"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.SharedItems.setUp": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "pandas.io.tests.test_excel._frame",
    "pandas.io.tests.test_excel._frame2",
    "pandas.io.tests.test_excel._mixed_frame",
    "pandas.io.tests.test_excel._tsframe",
    "pandas.util.testing.get_data_path"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.URLError": {
  "data": {
   "shadows": "pandas.io.common.URLError"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel.XlrdTests": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "pandas.io.tests.test_excel.ReadingTestsBase"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_excel.XlrdTests.test_creating_and_reading_multiple_sheets": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "dict",
    "pandas.compat.iteritems",
    "pandas.io.excel.ExcelWriter",
    "pandas.io.excel.read_excel",
    "pandas.io.tests.test_excel._skip_if_no_openpyxl",
    "pandas.io.tests.test_excel._skip_if_no_xlwt",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean",
    "tdf",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.XlrdTests.test_creating_and_reading_multiple_sheets.tdf": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.XlrdTests.test_excel_multindex_roundtrip": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.compat.range",
    "pandas.io.tests.test_excel._skip_if_no_xlsxwriter",
    "pandas.read_excel",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean",
    "pandas.util.testing.makeCustomDataframe"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.XlrdTests.test_excel_oldindex_format": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.array",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.io.tests.test_excel.os",
    "pandas.read_excel",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.XlrdTests.test_excel_read_buffer": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "open",
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.read_excel",
    "pandas.io.tests.test_excel.os",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.XlrdTests.test_read_excel_bool_header_arg": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": [
    "TypeError",
    "pandas.io.tests.test_excel.os",
    "pandas.read_excel",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.XlrdTests.test_read_excel_chunksize": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.io.tests.test_excel.os",
    "pandas.read_excel",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.XlrdTests.test_read_excel_date_parser": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.datetime.strptime",
    "pandas.io.tests.test_excel.os",
    "pandas.read_excel",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.XlrdTests.test_read_excel_multiindex": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.Timestamp",
    "pandas.compat.range",
    "pandas.io.excel.read_excel",
    "pandas.io.tests.test_excel.os",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.XlrdTests.test_read_excel_parse_dates": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.io.tests.test_excel.os",
    "pandas.read_excel",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.XlrdTests.test_read_excel_skiprows_list": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.io.tests.test_excel.os",
    "pandas.read_excel",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.XlrdTests.test_read_excel_squeeze": {
  "data": {
   "lineno": 855,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.io.tests.test_excel.os",
    "pandas.read_excel",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.XlrdTests.test_read_from_file_url": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "numpy.testing.decorators.slow",
    "pandas.io.common.URLError",
    "pandas.io.excel.read_excel",
    "pandas.io.tests.test_excel.nose",
    "pandas.io.tests.test_excel.os",
    "pandas.io.tests.test_excel.platform",
    "pandas.io.tests.test_excel.sys",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.XlrdTests.test_read_from_http_url": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "pandas.io.excel.read_excel",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.XlrdTests.test_read_from_pathlib_path": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "pandas.io.excel.read_excel",
    "pandas.io.tests.test_excel.os",
    "pandas.util.testing._skip_if_no_pathlib",
    "pandas.util.testing.assert_frame_equal",
    "pathlib.Path"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.XlrdTests.test_read_from_py_localpath": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "pandas.io.excel.read_excel",
    "pandas.io.tests.test_excel.os",
    "pandas.util.testing._skip_if_no_localpath",
    "pandas.util.testing.assert_frame_equal",
    "py.path.local"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.XlrdTests.test_read_from_s3_url": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "pandas.io.excel.read_excel",
    "pandas.io.tests.test_excel._skip_if_no_boto",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.XlrdTests.test_read_xlrd_Book": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.read_excel",
    "pandas.io.tests.test_excel._skip_if_no_xlwt",
    "pandas.io.tests.test_excel.xlrd",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.XlrdTests.test_reader_closes_file": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "open",
    "pandas.io.excel.ExcelFile",
    "pandas.io.excel.read_excel",
    "pandas.io.tests.test_excel.os"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.XlrdTests.test_reader_seconds": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "datetime.time",
    "distutils.version.LooseVersion",
    "pandas.DataFrame.from_items",
    "pandas.io.tests.test_excel.xlrd",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.XlsReaderTests": {
  "data": {
   "lineno": 874,
   "symbols_in_volume": [
    "pandas.io.tests.test_excel.XlrdTests",
    "pandas.io.tests.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.TestCase",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_excel.XlsmReaderTests": {
  "data": {
   "lineno": 886,
   "symbols_in_volume": [
    "pandas.io.tests.test_excel.XlrdTests",
    "pandas.io.tests.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.TestCase",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_excel.XlsxReaderTests": {
  "data": {
   "lineno": 880,
   "symbols_in_volume": [
    "pandas.io.tests.test_excel.XlrdTests",
    "pandas.io.tests.test_excel._skip_if_no_xlrd",
    "pandas.util.testing.TestCase",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_excel.XlsxWriterTests": {
  "data": {
   "lineno": 2056,
   "symbols_in_volume": [
    "pandas.io.tests.test_excel.ExcelWriterBase",
    "pandas.io.tests.test_excel._skip_if_no_xlsxwriter",
    "pandas.util.testing.TestCase",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_excel.XlsxWriterTests.test_column_format": {
  "data": {
   "lineno": 2061,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.excel.ExcelWriter",
    "pandas.io.tests.test_excel._skip_if_no_openpyxl",
    "pandas.io.tests.test_excel._skip_if_no_xlsxwriter",
    "pandas.io.tests.test_excel.openpyxl",
    "pandas.io.tests.test_excel.warnings",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.XlsxWriterTests_NoMerge": {
  "data": {
   "lineno": 2120,
   "symbols_in_volume": [
    "pandas.io.tests.test_excel.ExcelWriterBase",
    "pandas.io.tests.test_excel._skip_if_no_xlsxwriter",
    "pandas.util.testing.TestCase",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_excel.XlwtTests": {
  "data": {
   "lineno": 1999,
   "symbols_in_volume": [
    "pandas.io.tests.test_excel.ExcelWriterBase",
    "pandas.io.tests.test_excel._skip_if_no_xlwt",
    "pandas.util.testing.TestCase",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_excel.XlwtTests.test_excel_multiindex_columns_and_index_true": {
  "data": {
   "lineno": 2015,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.io.tests.test_excel._skip_if_no_xlwt",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.XlwtTests.test_excel_multiindex_index": {
  "data": {
   "lineno": 2024,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.io.tests.test_excel._skip_if_no_xlwt",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.XlwtTests.test_excel_raise_error_on_multiindex_columns_and_no_index": {
  "data": {
   "lineno": 2004,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.io.tests.test_excel._skip_if_no_xlwt",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.XlwtTests.test_to_excel_styleconverter": {
  "data": {
   "lineno": 2034,
   "symbols_in_volume": [
    "pandas.io.excel._XlwtWriter._convert_to_style",
    "pandas.io.tests.test_excel._skip_if_no_xlwt",
    "pandas.io.tests.test_excel.xlwt"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.XlwtTests_NoMerge": {
  "data": {
   "lineno": 2111,
   "symbols_in_volume": [
    "pandas.io.tests.test_excel.ExcelWriterBase",
    "pandas.io.tests.test_excel._skip_if_no_xlwt",
    "pandas.util.testing.TestCase",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_excel._Openpyxl1Writer": {
  "data": {
   "shadows": "pandas.io.excel._Openpyxl1Writer"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel._Openpyxl20Writer": {
  "data": {
   "shadows": "pandas.io.excel._Openpyxl20Writer"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel._Openpyxl22Writer": {
  "data": {
   "shadows": "pandas.io.excel._Openpyxl22Writer"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel._XlsxWriter": {
  "data": {
   "shadows": "pandas.io.excel._XlsxWriter"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel._XlwtWriter": {
  "data": {
   "shadows": "pandas.io.excel._XlwtWriter"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel._frame": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "pandas.io.tests.test_excel._frame2": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "pandas.io.tests.test_excel._mixed_frame": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "pandas.io.tests.test_excel._seriesd": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "pandas.io.tests.test_excel._skip_if_no_boto": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ImportError",
    "pandas.io.tests.test_excel.nose"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel._skip_if_no_excelsuite": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "pandas.io.tests.test_excel._skip_if_no_openpyxl",
    "pandas.io.tests.test_excel._skip_if_no_xlrd",
    "pandas.io.tests.test_excel._skip_if_no_xlwt"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel._skip_if_no_openpyxl": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ImportError",
    "pandas.io.tests.test_excel.nose"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel._skip_if_no_xlrd": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ImportError",
    "int",
    "pandas.compat.map",
    "pandas.io.tests.test_excel.nose",
    "pandas.io.tests.test_excel.xlrd",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel._skip_if_no_xlsxwriter": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "ImportError",
    "pandas.io.tests.test_excel.nose"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel._skip_if_no_xlwt": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ImportError",
    "pandas.io.tests.test_excel.nose"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel._tsd": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "pandas.io.tests.test_excel._tsframe": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "pandas.io.tests.test_excel.boto": {
  "data": {
   "shadows": "boto"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel.ensure_clean": {
  "data": {
   "shadows": "pandas.util.testing.ensure_clean"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel.get_option": {
  "data": {
   "shadows": "pandas.core.config.get_option"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel.iteritems": {
  "data": {
   "shadows": "pandas.compat.iteritems"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel.map": {
  "data": {
   "shadows": "pandas.compat.map"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel.mkdf": {
  "data": {
   "shadows": "pandas.util.testing.makeCustomDataframe"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel.openpyxl": {
  "data": {
   "shadows": "openpyxl"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel.openpyxl_compat": {
  "data": {
   "shadows": "pandas.compat.openpyxl_compat"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel.raise_on_incompat_version": {
  "data": {
   "lineno": 1723
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.raise_on_incompat_version.versioned_raise_on_incompat_version": {
  "data": {
   "lineno": 1724,
   "symbols_in_volume": [
    "dir",
    "filter",
    "getattr",
    "pandas.io.tests.test_excel.operator",
    "pandas.io.tests.test_excel.raise_wrapper",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.raise_wrapper": {
  "data": {
   "lineno": 1707
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.raise_wrapper.versioned_raise_wrapper": {
  "data": {
   "lineno": 1708
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.raise_wrapper.versioned_raise_wrapper.wrapped": {
  "data": {
   "lineno": 1709,
   "symbols_in_volume": [
    "ValueError",
    "orig_method",
    "pandas.compat.openpyxl_compat.is_compat",
    "pandas.io.tests.test_excel._skip_if_no_openpyxl",
    "pandas.io.tests.test_excel.functools",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel.read_csv": {
  "data": {
   "shadows": "pandas.io.parsers.read_csv"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel.read_excel": {
  "data": {
   "shadows": "pandas.io.excel.read_excel"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel.register_writer": {
  "data": {
   "shadows": "pandas.io.excel.register_writer"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel.set_option": {
  "data": {
   "shadows": "pandas.core.config.set_option"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel.skip_openpyxl_gt21": {
  "data": {
   "lineno": 1770
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.skip_openpyxl_gt21.setUpClass": {
  "data": {
   "lineno": 1773,
   "symbols_in_volume": [
    "classmethod",
    "distutils.version.LooseVersion",
    "pandas.io.tests.test_excel._skip_if_no_openpyxl",
    "pandas.io.tests.test_excel.nose",
    "pandas.io.tests.test_excel.openpyxl",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.skip_openpyxl_lt22": {
  "data": {
   "lineno": 1887
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.skip_openpyxl_lt22.setUpClass": {
  "data": {
   "lineno": 1890,
   "symbols_in_volume": [
    "classmethod",
    "distutils.version.LooseVersion",
    "pandas.io.tests.test_excel._skip_if_no_openpyxl",
    "pandas.io.tests.test_excel.nose",
    "pandas.io.tests.test_excel.openpyxl",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_excel.slow": {
  "data": {
   "shadows": "numpy.testing.decorators.slow"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel.styles": {
  "data": {
   "shadows": "openpyxl.styles"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel.time": {
  "data": {
   "shadows": "datetime.time"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel.xlrd": {
  "data": {
   "shadows": "xlrd"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel.xlsxwriter": {
  "data": {
   "shadows": "xlsxwriter"
  },
  "type": "import"
 },
 "pandas.io.tests.test_excel.xlwt": {
  "data": {
   "shadows": "xlwt"
  },
  "type": "import"
 },
 "pandas.io.tests.test_ga": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pandas.compat.PY3",
    "pandas.io.tests.test_ga.nose",
    "pandas.io.tests.test_ga.warnings"
   ]
  },
  "type": "module"
 },
 "pandas.io.tests.test_ga.AuthenticationConfigError": {
  "data": {
   "shadows": "pandas.io.auth.AuthenticationConfigError"
  },
  "type": "import"
 },
 "pandas.io.tests.test_ga.GAnalytics": {
  "data": {
   "shadows": "pandas.io.ga.GAnalytics"
  },
  "type": "import"
 },
 "pandas.io.tests.test_ga.TestGoogle": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_ga.TestGoogle.test_getdata": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "len",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.io.auth.AuthenticationConfigError",
    "pandas.io.ga.GAnalytics",
    "pandas.io.ga.read_ga",
    "pandas.io.tests.test_ga.nose",
    "pandas.offsets.Day",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.with_connectivity_check"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_ga.TestGoogle.test_iterator": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "len",
    "next",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.io.auth.AuthenticationConfigError",
    "pandas.io.ga.GAnalytics",
    "pandas.io.tests.test_ga.nose",
    "pandas.util.testing.with_connectivity_check"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_ga.TestGoogle.test_remove_token_store": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "open",
    "pandas.io.auth.DEFAULT_TOKEN_FILE",
    "pandas.io.auth.reset_default_token_store",
    "pandas.io.tests.test_ga.os"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_ga.TestGoogle.test_segment": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "isinstance",
    "len",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.io.auth.AuthenticationConfigError",
    "pandas.io.ga.GAnalytics",
    "pandas.io.ga.read_ga",
    "pandas.io.tests.test_ga.nose",
    "pandas.offsets.Day",
    "pandas.util.testing.with_connectivity_check"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_ga.TestGoogle.test_v2_advanced_segment_format": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "pandas.io.ga.format_query",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_ga.TestGoogle.test_v2_dynamic_segment_format": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "pandas.io.ga.format_query",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_ga.TestGoogle.test_v3_advanced_segment_common_format": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "pandas.io.ga.format_query",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_ga.TestGoogle.test_v3_advanced_segment_weird_format": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "pandas.io.ga.format_query",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_ga.TestGoogle.test_v3_advanced_segment_with_underscore_format": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "pandas.io.ga.format_query",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_ga.apiclient": {
  "data": {
   "shadows": "apiclient"
  },
  "type": "import"
 },
 "pandas.io.tests.test_ga.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.io.tests.test_ga.auth": {
  "data": {
   "shadows": "pandas.io.auth"
  },
  "type": "import"
 },
 "pandas.io.tests.test_ga.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.io.tests.test_ga.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.io.tests.test_ga.ga": {
  "data": {
   "shadows": "pandas.io.ga"
  },
  "type": "import"
 },
 "pandas.io.tests.test_ga.httplib2": {
  "data": {
   "shadows": "httplib2"
  },
  "type": "import"
 },
 "pandas.io.tests.test_ga.network": {
  "data": {
   "shadows": "pandas.util.testing.network"
  },
  "type": "import"
 },
 "pandas.io.tests.test_ga.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.io.tests.test_ga.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.io.tests.test_ga.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.io.tests.test_ga.read_ga": {
  "data": {
   "shadows": "pandas.io.ga.read_ga"
  },
  "type": "import"
 },
 "pandas.io.tests.test_ga.reset_default_token_store": {
  "data": {
   "shadows": "pandas.io.auth.reset_default_token_store"
  },
  "type": "import"
 },
 "pandas.io.tests.test_ga.slow": {
  "data": {
   "shadows": "numpy.testing.decorators.slow"
  },
  "type": "import"
 },
 "pandas.io.tests.test_ga.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.io.tests.test_ga.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.io.tests.test_ga.with_connectivity_check": {
  "data": {
   "shadows": "pandas.util.testing.with_connectivity_check"
  },
  "type": "import"
 },
 "pandas.io.tests.test_gbq": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.io.tests.test_gbq.DATASET_ID",
    "pandas.io.tests.test_gbq.TABLE_ID",
    "pandas.io.tests.test_gbq.nose",
    "pandas.io.tests.test_gbq.platform"
   ]
  },
  "type": "module"
 },
 "pandas.io.tests.test_gbq.AccessTokenRefreshError": {
  "data": {
   "shadows": "oauth2client.client.AccessTokenRefreshError"
  },
  "type": "import"
 },
 "pandas.io.tests.test_gbq.DATASET_ID": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "pandas.io.tests.test_gbq.DESTINATION_TABLE": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pandas.io.tests.test_gbq.DataFrame": {
  "data": {
   "shadows": "pandas.core.frame.DataFrame"
  },
  "type": "import"
 },
 "pandas.io.tests.test_gbq.GBQUnitTests": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_gbq.GBQUnitTests.setUp": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "pandas.io.tests.test_gbq.test_requirements"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.GBQUnitTests.test_read_gbq_with_corrupted_private_key_json_should_fail": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "pandas.io.gbq.InvalidPrivateKeyFormat",
    "pandas.io.gbq.read_gbq",
    "pandas.io.tests.test_gbq.PRIVATE_KEY_JSON_CONTENTS",
    "pandas.io.tests.test_gbq._skip_if_no_private_key_contents",
    "pandas.io.tests.test_gbq.re",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.GBQUnitTests.test_read_gbq_with_empty_private_key_file_should_fail": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "pandas.io.gbq.InvalidPrivateKeyFormat",
    "pandas.io.gbq.read_gbq",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.GBQUnitTests.test_read_gbq_with_empty_private_key_json_should_fail": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "pandas.io.gbq.InvalidPrivateKeyFormat",
    "pandas.io.gbq.read_gbq",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.GBQUnitTests.test_read_gbq_with_invalid_private_key_json_should_fail": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "pandas.io.gbq.InvalidPrivateKeyFormat",
    "pandas.io.gbq.read_gbq",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.GBQUnitTests.test_read_gbq_with_no_project_id_given_should_fail": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "TypeError",
    "pandas.io.gbq.read_gbq",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.GBQUnitTests.test_read_gbq_with_private_key_json_wrong_types_should_fail": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "pandas.io.gbq.InvalidPrivateKeyFormat",
    "pandas.io.gbq.read_gbq",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.GBQUnitTests.test_should_return_bigquery_booleans_as_python_booleans": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "pandas.io.gbq._parse_entry",
    "pandas.util.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.GBQUnitTests.test_should_return_bigquery_floats_as_python_floats": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "float",
    "pandas.io.gbq._parse_entry",
    "pandas.util.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.GBQUnitTests.test_should_return_bigquery_integers_as_python_floats": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "float",
    "pandas.io.gbq._parse_entry",
    "pandas.util.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.GBQUnitTests.test_should_return_bigquery_strings_as_python_strings": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "pandas.io.gbq._parse_entry",
    "pandas.util.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.GBQUnitTests.test_should_return_bigquery_timestamps_as_numpy_datetime": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "pandas.compat.numpy.np_datetime64_compat",
    "pandas.io.gbq._parse_entry",
    "pandas.util.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.GBQUnitTests.test_that_parse_data_works_properly": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "pandas.core.frame.DataFrame",
    "pandas.io.gbq._parse_data",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.GBQUnitTests.test_to_gbq_should_fail_if_invalid_table_name_passed": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "pandas.core.frame.DataFrame",
    "pandas.io.gbq.NotFoundException",
    "pandas.io.gbq.to_gbq",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.GBQUnitTests.test_to_gbq_with_no_project_id_given_should_fail": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "TypeError",
    "pandas.core.frame.DataFrame",
    "pandas.io.gbq.to_gbq",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.HttpError": {
  "data": {
   "shadows": "apiclient.errors.HttpError"
  },
  "type": "import"
 },
 "pandas.io.tests.test_gbq.NaT": {
  "data": {
   "shadows": "pandas.NaT"
  },
  "type": "import"
 },
 "pandas.io.tests.test_gbq.OAuth2WebServerFlow": {
  "data": {
   "shadows": "oauth2client.client.OAuth2WebServerFlow"
  },
  "type": "import"
 },
 "pandas.io.tests.test_gbq.PRIVATE_KEY_JSON_CONTENTS": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "pandas.io.tests.test_gbq.PRIVATE_KEY_JSON_PATH": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pandas.io.tests.test_gbq.PROJECT_ID": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pandas.io.tests.test_gbq.ServiceAccountCredentials": {
  "data": {
   "shadows": "oauth2client.service_account.ServiceAccountCredentials"
  },
  "type": "import"
 },
 "pandas.io.tests.test_gbq.SignedJwtAssertionCredentials": {
  "data": {
   "shadows": "oauth2client.client.SignedJwtAssertionCredentials"
  },
  "type": "import"
 },
 "pandas.io.tests.test_gbq.Storage": {
  "data": {
   "shadows": "oauth2client.file.Storage"
  },
  "type": "import"
 },
 "pandas.io.tests.test_gbq.StrictVersion": {
  "data": {
   "shadows": "distutils.version.StrictVersion"
  },
  "type": "import"
 },
 "pandas.io.tests.test_gbq.TABLE_ID": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pandas.io.tests.test_gbq.TestGBQConnectorIntegration": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_gbq.TestGBQConnectorIntegration.setUp": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "pandas.io.gbq.GbqConnector",
    "pandas.io.tests.test_gbq.PROJECT_ID",
    "pandas.io.tests.test_gbq._skip_if_no_project_id",
    "pandas.io.tests.test_gbq.test_requirements"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestGBQConnectorIntegration.test_should_be_able_to_get_a_bigquery_service": {
  "data": {
   "lineno": 204
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestGBQConnectorIntegration.test_should_be_able_to_get_results_from_query": {
  "data": {
   "lineno": 212
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestGBQConnectorIntegration.test_should_be_able_to_get_schema_from_query": {
  "data": {
   "lineno": 208
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestGBQConnectorIntegration.test_should_be_able_to_get_valid_credentials": {
  "data": {
   "lineno": 200
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestGBQConnectorIntegration.test_should_be_able_to_make_a_connector": {
  "data": {
   "lineno": 196
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestGBQConnectorServiceAccountKeyContentsIntegration": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_gbq.TestGBQConnectorServiceAccountKeyContentsIntegration.setUp": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "pandas.io.gbq.GbqConnector",
    "pandas.io.tests.test_gbq.PRIVATE_KEY_JSON_CONTENTS",
    "pandas.io.tests.test_gbq.PROJECT_ID",
    "pandas.io.tests.test_gbq._skip_if_no_private_key_contents",
    "pandas.io.tests.test_gbq._skip_if_no_project_id",
    "pandas.io.tests.test_gbq.test_requirements"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestGBQConnectorServiceAccountKeyContentsIntegration.test_should_be_able_to_get_a_bigquery_service": {
  "data": {
   "lineno": 266
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestGBQConnectorServiceAccountKeyContentsIntegration.test_should_be_able_to_get_results_from_query": {
  "data": {
   "lineno": 274
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestGBQConnectorServiceAccountKeyContentsIntegration.test_should_be_able_to_get_schema_from_query": {
  "data": {
   "lineno": 270
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestGBQConnectorServiceAccountKeyContentsIntegration.test_should_be_able_to_get_valid_credentials": {
  "data": {
   "lineno": 262
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestGBQConnectorServiceAccountKeyContentsIntegration.test_should_be_able_to_make_a_connector": {
  "data": {
   "lineno": 258
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestGBQConnectorServiceAccountKeyPathIntegration": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_gbq.TestGBQConnectorServiceAccountKeyPathIntegration.setUp": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "pandas.io.gbq.GbqConnector",
    "pandas.io.tests.test_gbq.PRIVATE_KEY_JSON_PATH",
    "pandas.io.tests.test_gbq.PROJECT_ID",
    "pandas.io.tests.test_gbq._skip_if_no_private_key_path",
    "pandas.io.tests.test_gbq._skip_if_no_project_id",
    "pandas.io.tests.test_gbq.test_requirements"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestGBQConnectorServiceAccountKeyPathIntegration.test_should_be_able_to_get_a_bigquery_service": {
  "data": {
   "lineno": 235
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestGBQConnectorServiceAccountKeyPathIntegration.test_should_be_able_to_get_results_from_query": {
  "data": {
   "lineno": 243
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestGBQConnectorServiceAccountKeyPathIntegration.test_should_be_able_to_get_schema_from_query": {
  "data": {
   "lineno": 239
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestGBQConnectorServiceAccountKeyPathIntegration.test_should_be_able_to_get_valid_credentials": {
  "data": {
   "lineno": 231
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestGBQConnectorServiceAccountKeyPathIntegration.test_should_be_able_to_make_a_connector": {
  "data": {
   "lineno": 227
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestReadGBQIntegration": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_gbq.TestReadGBQIntegration.setUp": {
  "data": {
   "lineno": 365
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestReadGBQIntegration.setUpClass": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "classmethod",
    "pandas.io.tests.test_gbq._skip_if_no_project_id",
    "pandas.io.tests.test_gbq.test_requirements"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestReadGBQIntegration.tearDown": {
  "data": {
   "lineno": 378
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestReadGBQIntegration.tearDownClass": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestReadGBQIntegration.test_bad_project_id": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "pandas.io.gbq.GenericGBQException",
    "pandas.io.gbq.read_gbq",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestReadGBQIntegration.test_bad_table_name": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "pandas.io.gbq.GenericGBQException",
    "pandas.io.gbq.read_gbq",
    "pandas.io.tests.test_gbq.PROJECT_ID",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestReadGBQIntegration.test_column_order": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "pandas.core.frame.DataFrame",
    "pandas.io.gbq.read_gbq",
    "pandas.io.tests.test_gbq.PROJECT_ID",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestReadGBQIntegration.test_column_order_plus_index": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "pandas.core.frame.DataFrame",
    "pandas.io.gbq.read_gbq",
    "pandas.io.tests.test_gbq.PROJECT_ID",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestReadGBQIntegration.test_download_dataset_larger_than_200k_rows": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "len",
    "pandas.io.gbq.read_gbq",
    "pandas.io.tests.test_gbq.PROJECT_ID"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestReadGBQIntegration.test_index_column": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "pandas.core.frame.DataFrame",
    "pandas.io.gbq.read_gbq",
    "pandas.io.tests.test_gbq.PROJECT_ID",
    "pandas.util.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestReadGBQIntegration.test_malformed_query": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "pandas.io.gbq.GenericGBQException",
    "pandas.io.gbq.read_gbq",
    "pandas.io.tests.test_gbq.PROJECT_ID",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestReadGBQIntegration.test_should_properly_handle_arbitrary_timestamp": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "numpy.datetime64",
    "pandas.core.frame.DataFrame",
    "pandas.io.gbq.read_gbq",
    "pandas.io.tests.test_gbq.PROJECT_ID",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestReadGBQIntegration.test_should_properly_handle_empty_strings": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "pandas.core.frame.DataFrame",
    "pandas.io.gbq.read_gbq",
    "pandas.io.tests.test_gbq.PROJECT_ID",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestReadGBQIntegration.test_should_properly_handle_false_boolean": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "pandas.core.frame.DataFrame",
    "pandas.io.gbq.read_gbq",
    "pandas.io.tests.test_gbq.PROJECT_ID",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestReadGBQIntegration.test_should_properly_handle_null_boolean": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "pandas.core.frame.DataFrame",
    "pandas.io.gbq.read_gbq",
    "pandas.io.tests.test_gbq.PROJECT_ID",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestReadGBQIntegration.test_should_properly_handle_null_floats": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.core.frame.DataFrame",
    "pandas.io.gbq.read_gbq",
    "pandas.io.tests.test_gbq.PROJECT_ID",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestReadGBQIntegration.test_should_properly_handle_null_integers": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.core.frame.DataFrame",
    "pandas.io.gbq.read_gbq",
    "pandas.io.tests.test_gbq.PROJECT_ID",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestReadGBQIntegration.test_should_properly_handle_null_strings": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "pandas.core.frame.DataFrame",
    "pandas.io.gbq.read_gbq",
    "pandas.io.tests.test_gbq.PROJECT_ID",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestReadGBQIntegration.test_should_properly_handle_null_timestamp": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "pandas.NaT",
    "pandas.core.frame.DataFrame",
    "pandas.io.gbq.read_gbq",
    "pandas.io.tests.test_gbq.PROJECT_ID",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestReadGBQIntegration.test_should_properly_handle_timestamp_unix_epoch": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "numpy.datetime64",
    "pandas.core.frame.DataFrame",
    "pandas.io.gbq.read_gbq",
    "pandas.io.tests.test_gbq.PROJECT_ID",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestReadGBQIntegration.test_should_properly_handle_true_boolean": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "pandas.core.frame.DataFrame",
    "pandas.io.gbq.read_gbq",
    "pandas.io.tests.test_gbq.PROJECT_ID",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestReadGBQIntegration.test_should_properly_handle_valid_floats": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "pandas.core.frame.DataFrame",
    "pandas.io.gbq.read_gbq",
    "pandas.io.tests.test_gbq.PROJECT_ID",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestReadGBQIntegration.test_should_properly_handle_valid_integers": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "pandas.core.frame.DataFrame",
    "pandas.io.gbq.read_gbq",
    "pandas.io.tests.test_gbq.PROJECT_ID",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestReadGBQIntegration.test_should_properly_handle_valid_strings": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "pandas.core.frame.DataFrame",
    "pandas.io.gbq.read_gbq",
    "pandas.io.tests.test_gbq.PROJECT_ID",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestReadGBQIntegration.test_should_read_as_service_account_with_key_contents": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "pandas.core.frame.DataFrame",
    "pandas.io.gbq.read_gbq",
    "pandas.io.tests.test_gbq.PRIVATE_KEY_JSON_CONTENTS",
    "pandas.io.tests.test_gbq.PROJECT_ID",
    "pandas.io.tests.test_gbq._skip_if_no_private_key_contents",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestReadGBQIntegration.test_should_read_as_service_account_with_key_path": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "pandas.core.frame.DataFrame",
    "pandas.io.gbq.read_gbq",
    "pandas.io.tests.test_gbq.PRIVATE_KEY_JSON_PATH",
    "pandas.io.tests.test_gbq.PROJECT_ID",
    "pandas.io.tests.test_gbq._skip_if_no_private_key_path",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestReadGBQIntegration.test_unicode_string_conversion_and_normalization": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "pandas.compat.PY3",
    "pandas.compat.u",
    "pandas.core.frame.DataFrame",
    "pandas.io.gbq.read_gbq",
    "pandas.io.tests.test_gbq.PROJECT_ID",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestReadGBQIntegration.test_zero_rows": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "float",
    "numpy.dtype",
    "numpy.zeros",
    "object",
    "pandas.core.frame.DataFrame",
    "pandas.io.gbq.read_gbq",
    "pandas.io.tests.test_gbq.PROJECT_ID"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestToGBQIntegration": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_gbq.TestToGBQIntegration.create_table_data_dataset_does_not_exist": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "pandas.io.gbq._Table",
    "pandas.io.gbq._generate_bq_schema",
    "pandas.io.tests.test_gbq.DATASET_ID",
    "pandas.io.tests.test_gbq.PROJECT_ID",
    "pandas.io.tests.test_gbq.TABLE_ID",
    "pandas.io.tests.test_gbq.make_mixed_dataframe_v2"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestToGBQIntegration.setUp": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "pandas.io.gbq._Dataset",
    "pandas.io.gbq._Table",
    "pandas.io.tests.test_gbq.DATASET_ID",
    "pandas.io.tests.test_gbq.PROJECT_ID"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestToGBQIntegration.setUpClass": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "classmethod",
    "pandas.io.gbq._Dataset",
    "pandas.io.tests.test_gbq.DATASET_ID",
    "pandas.io.tests.test_gbq.PROJECT_ID",
    "pandas.io.tests.test_gbq._skip_if_no_project_id",
    "pandas.io.tests.test_gbq.clean_gbq_environment",
    "pandas.io.tests.test_gbq.test_requirements"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestToGBQIntegration.tearDown": {
  "data": {
   "lineno": 582
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestToGBQIntegration.tearDownClass": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "classmethod",
    "pandas.io.tests.test_gbq.clean_gbq_environment"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestToGBQIntegration.test_create_dataset": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "pandas.io.tests.test_gbq.DATASET_ID"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestToGBQIntegration.test_create_table": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "pandas.io.tests.test_gbq.TABLE_ID"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestToGBQIntegration.test_dataset_does_not_exist": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": [
    "pandas.io.tests.test_gbq.DATASET_ID"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestToGBQIntegration.test_dataset_exists": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "pandas.io.tests.test_gbq.DATASET_ID"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestToGBQIntegration.test_delete_dataset": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "pandas.io.tests.test_gbq.DATASET_ID"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestToGBQIntegration.test_delete_table": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "pandas.io.tests.test_gbq.TABLE_ID"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestToGBQIntegration.test_generate_schema": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "pandas.io.gbq._generate_bq_schema",
    "pandas.util.testing.makeMixedDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestToGBQIntegration.test_google_upload_errors_should_raise_exception": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "pandas.compat.range",
    "pandas.core.frame.DataFrame",
    "pandas.io.gbq.StreamingInsertError",
    "pandas.io.gbq.to_gbq",
    "pandas.io.tests.test_gbq.DESTINATION_TABLE",
    "pandas.io.tests.test_gbq.PROJECT_ID",
    "pandas.io.tests.test_gbq.pytz",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestToGBQIntegration.test_list_dataset": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "pandas.io.tests.test_gbq.DATASET_ID"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestToGBQIntegration.test_list_table": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "pandas.io.tests.test_gbq.DATASET_ID",
    "pandas.io.tests.test_gbq.TABLE_ID"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestToGBQIntegration.test_list_table_zero_results": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "len",
    "pandas.io.gbq._Dataset",
    "pandas.io.tests.test_gbq.DATASET_ID",
    "pandas.io.tests.test_gbq.PROJECT_ID"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestToGBQIntegration.test_table_does_not_exist": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "pandas.io.tests.test_gbq.TABLE_ID"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestToGBQIntegration.test_upload_data": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "pandas.io.gbq.read_gbq",
    "pandas.io.gbq.to_gbq",
    "pandas.io.tests.test_gbq.DESTINATION_TABLE",
    "pandas.io.tests.test_gbq.PROJECT_ID",
    "pandas.io.tests.test_gbq.make_mixed_dataframe_v2",
    "time.sleep"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestToGBQIntegration.test_upload_data_if_table_exists_append": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "pandas.io.gbq.InvalidSchema",
    "pandas.io.gbq.read_gbq",
    "pandas.io.gbq.to_gbq",
    "pandas.io.tests.test_gbq.DESTINATION_TABLE",
    "pandas.io.tests.test_gbq.PROJECT_ID",
    "pandas.io.tests.test_gbq.make_mixed_dataframe_v2",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.makeMixedDataFrame",
    "time.sleep"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestToGBQIntegration.test_upload_data_if_table_exists_fail": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "pandas.io.gbq.TableCreationError",
    "pandas.io.gbq._generate_bq_schema",
    "pandas.io.gbq.to_gbq",
    "pandas.io.tests.test_gbq.DESTINATION_TABLE",
    "pandas.io.tests.test_gbq.PROJECT_ID",
    "pandas.io.tests.test_gbq.TABLE_ID",
    "pandas.io.tests.test_gbq.make_mixed_dataframe_v2",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestToGBQIntegration.test_upload_data_if_table_exists_replace": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "pandas.io.gbq.read_gbq",
    "pandas.io.gbq.to_gbq",
    "pandas.io.tests.test_gbq.DESTINATION_TABLE",
    "pandas.io.tests.test_gbq.PROJECT_ID",
    "pandas.io.tests.test_gbq.make_mixed_dataframe_v2",
    "pandas.util.testing.makeMixedDataFrame",
    "time.sleep"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestToGBQIntegrationServiceAccountKeyContents": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_gbq.TestToGBQIntegrationServiceAccountKeyContents.setUp": {
  "data": {
   "lineno": 851
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestToGBQIntegrationServiceAccountKeyContents.setUpClass": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": [
    "classmethod",
    "pandas.io.tests.test_gbq.PRIVATE_KEY_JSON_CONTENTS",
    "pandas.io.tests.test_gbq._skip_if_no_private_key_contents",
    "pandas.io.tests.test_gbq._skip_if_no_project_id",
    "pandas.io.tests.test_gbq.clean_gbq_environment",
    "pandas.io.tests.test_gbq.test_requirements"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestToGBQIntegrationServiceAccountKeyContents.tearDown": {
  "data": {
   "lineno": 865
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestToGBQIntegrationServiceAccountKeyContents.tearDownClass": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "classmethod",
    "pandas.io.tests.test_gbq.PRIVATE_KEY_JSON_CONTENTS",
    "pandas.io.tests.test_gbq.clean_gbq_environment"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestToGBQIntegrationServiceAccountKeyContents.test_upload_data_as_service_account_with_key_contents": {
  "data": {
   "lineno": 871,
   "symbols_in_volume": [
    "pandas.io.gbq.read_gbq",
    "pandas.io.gbq.to_gbq",
    "pandas.io.tests.test_gbq.DESTINATION_TABLE",
    "pandas.io.tests.test_gbq.PRIVATE_KEY_JSON_CONTENTS",
    "pandas.io.tests.test_gbq.PROJECT_ID",
    "pandas.io.tests.test_gbq.make_mixed_dataframe_v2",
    "time.sleep"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestToGBQIntegrationServiceAccountKeyPath": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_gbq.TestToGBQIntegrationServiceAccountKeyPath.setUp": {
  "data": {
   "lineno": 792
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestToGBQIntegrationServiceAccountKeyPath.setUpClass": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "classmethod",
    "pandas.io.tests.test_gbq.PRIVATE_KEY_JSON_PATH",
    "pandas.io.tests.test_gbq._skip_if_no_private_key_path",
    "pandas.io.tests.test_gbq._skip_if_no_project_id",
    "pandas.io.tests.test_gbq.clean_gbq_environment",
    "pandas.io.tests.test_gbq.test_requirements"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestToGBQIntegrationServiceAccountKeyPath.tearDown": {
  "data": {
   "lineno": 806
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestToGBQIntegrationServiceAccountKeyPath.tearDownClass": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "classmethod",
    "pandas.io.tests.test_gbq.PRIVATE_KEY_JSON_PATH",
    "pandas.io.tests.test_gbq.clean_gbq_environment"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.TestToGBQIntegrationServiceAccountKeyPath.test_upload_data_as_service_account_with_key_path": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": [
    "pandas.io.gbq.read_gbq",
    "pandas.io.gbq.to_gbq",
    "pandas.io.tests.test_gbq.DESTINATION_TABLE",
    "pandas.io.tests.test_gbq.PRIVATE_KEY_JSON_PATH",
    "pandas.io.tests.test_gbq.PROJECT_ID",
    "pandas.io.tests.test_gbq.make_mixed_dataframe_v2",
    "time.sleep"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.VERSION": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pandas.io.tests.test_gbq._GOOGLE_API_CLIENT_INSTALLED": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pandas.io.tests.test_gbq._GOOGLE_API_CLIENT_VALID_VERSION": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pandas.io.tests.test_gbq._HTTPLIB2_INSTALLED": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pandas.io.tests.test_gbq._IMPORTS": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pandas.io.tests.test_gbq._SETUPTOOLS_INSTALLED": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pandas.io.tests.test_gbq._skip_if_no_private_key_contents": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "pandas.io.tests.test_gbq.PRIVATE_KEY_JSON_CONTENTS",
    "pandas.io.tests.test_gbq._skip_if_no_private_key_path",
    "pandas.io.tests.test_gbq._skip_if_no_project_id",
    "pandas.io.tests.test_gbq.nose"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq._skip_if_no_private_key_path": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "pandas.io.tests.test_gbq.PRIVATE_KEY_JSON_PATH",
    "pandas.io.tests.test_gbq.nose"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq._skip_if_no_project_id": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pandas.io.tests.test_gbq.PROJECT_ID",
    "pandas.io.tests.test_gbq.nose"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq._test_imports": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "ImportError",
    "distutils.version.StrictVersion",
    "pandas.compat.PY3",
    "pandas.io.tests.test_gbq._GOOGLE_API_CLIENT_INSTALLED",
    "pandas.io.tests.test_gbq._GOOGLE_API_CLIENT_VALID_VERSION",
    "pandas.io.tests.test_gbq._HTTPLIB2_INSTALLED",
    "pandas.io.tests.test_gbq._SETUPTOOLS_INSTALLED",
    "pandas.io.tests.test_gbq.pkg_resources"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.build": {
  "data": {
   "shadows": "apiclient.discovery.build"
  },
  "type": "import"
 },
 "pandas.io.tests.test_gbq.clean_gbq_environment": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "pandas.compat.range",
    "pandas.io.gbq._Dataset",
    "pandas.io.gbq._Table",
    "pandas.io.tests.test_gbq.DATASET_ID",
    "pandas.io.tests.test_gbq.PROJECT_ID",
    "pandas.io.tests.test_gbq.TABLE_ID",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.io.tests.test_gbq.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.io.tests.test_gbq.gbq": {
  "data": {
   "shadows": "pandas.io.gbq"
  },
  "type": "import"
 },
 "pandas.io.tests.test_gbq.httplib2": {
  "data": {
   "shadows": "httplib2"
  },
  "type": "import"
 },
 "pandas.io.tests.test_gbq.make_mixed_dataframe_v2": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "bool",
    "datetime.datetime.now",
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.compat.range",
    "pandas.core.frame.DataFrame",
    "pandas.io.tests.test_gbq.pytz",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.io.tests.test_gbq.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.io.tests.test_gbq.np_datetime64_compat": {
  "data": {
   "shadows": "pandas.compat.numpy.np_datetime64_compat"
  },
  "type": "import"
 },
 "pandas.io.tests.test_gbq.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pandas.io.tests.test_gbq.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "pandas.io.tests.test_gbq.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "pandas.io.tests.test_gbq.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.io.tests.test_gbq.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pandas.io.tests.test_gbq.run_flow": {
  "data": {
   "shadows": "oauth2client.tools.run_flow"
  },
  "type": "import"
 },
 "pandas.io.tests.test_gbq.sleep": {
  "data": {
   "shadows": "time.sleep"
  },
  "type": "import"
 },
 "pandas.io.tests.test_gbq.test_generate_bq_schema_deprecated": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.io.gbq.generate_bq_schema",
    "pandas.io.tests.test_gbq.make_mixed_dataframe_v2",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.test_requirements": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "ImportError",
    "NotImplementedError",
    "pandas.io.tests.test_gbq._test_imports",
    "pandas.io.tests.test_gbq.nose"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_gbq.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.io.tests.test_gbq.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.io.tests.test_html": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__import__",
    "__name__",
    "importlib.import_module",
    "pandas.io.tests.test_html.nose",
    "pandas.util.testing.get_data_path"
   ]
  },
  "type": "module"
 },
 "pandas.io.tests.test_html.BeautifulSoup": {
  "data": {
   "shadows": "bs4.BeautifulSoup"
  },
  "type": "import"
 },
 "pandas.io.tests.test_html.BytesIO": {
  "data": {
   "shadows": "pandas.compat.BytesIO"
  },
  "type": "import"
 },
 "pandas.io.tests.test_html.CParserError": {
  "data": {
   "shadows": "pandas.parser.CParserError"
  },
  "type": "import"
 },
 "pandas.io.tests.test_html.DATA_PATH": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "pandas.io.tests.test_html.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.io.tests.test_html.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.io.tests.test_html.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.io.tests.test_html.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.io.tests.test_html.ReadHtmlMixin": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_html.ReadHtmlMixin.read_html": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "pandas.io.html.read_html"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.io.tests.test_html.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.io.tests.test_html.TestReadHtml": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "pandas.io.tests.test_html.DATA_PATH",
    "pandas.io.tests.test_html.ReadHtmlMixin",
    "pandas.io.tests.test_html.os",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_html.TestReadHtml._bank_data": {
  "data": {
   "lineno": 310
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.setUpClass": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "classmethod",
    "pandas.io.tests.test_html.TestReadHtml",
    "pandas.io.tests.test_html._skip_if_none_of",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_bad_url_protocol": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "pandas.io.common.URLError",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_banklist": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "numpy.testing.decorators.slow",
    "pandas.io.tests.test_html.assert_framelist_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_banklist_header": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "numpy.testing.decorators.slow",
    "pandas.Timestamp",
    "pandas.io.tests.test_html.DATA_PATH",
    "pandas.io.tests.test_html.os",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_banklist_header.try_remove_ws": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "AttributeError",
    "pandas.io.html._remove_whitespace"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_banklist_no_match": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_banklist_url": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "pandas.io.tests.test_html.assert_framelist_equal",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_bool_header_arg": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "TypeError",
    "pandas.io.html.read_html",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_computer_sales_page": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "pandas.io.tests.test_html.DATA_PATH",
    "pandas.io.tests.test_html.os",
    "pandas.parser.CParserError",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_countries_municipalities": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.io.tests.test_html.assert_framelist_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_different_number_of_rows": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_empty_tables": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.io.tests.test_html.assert_framelist_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_file_like": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "open",
    "pandas.io.tests.test_html.assert_framelist_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_file_url": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "list",
    "numpy.testing.decorators.slow",
    "pandas.DataFrame",
    "pandas.io.common.file_path_to_url",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_gold_canyon": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "numpy.testing.decorators.slow",
    "open"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_header_and_index_no_types": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "pandas.io.tests.test_html.assert_framelist_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_header_and_index_with_types": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "pandas.io.tests.test_html.assert_framelist_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_header_and_one_column": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_index": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "pandas.io.tests.test_html.assert_framelist_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_infer_types": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "pandas.io.tests.test_html.assert_framelist_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_invalid_table_attrs": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "ValueError",
    "numpy.testing.decorators.slow",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_invalid_url": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "ValueError",
    "pandas.io.common.URLError",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_equal",
    "pandas.util.testing.network",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_multiindex_header": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "numpy.testing.decorators.slow",
    "pandas.MultiIndex",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_multiindex_header_index": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "numpy.testing.decorators.slow",
    "pandas.MultiIndex",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_multiindex_header_index_skiprows": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "numpy.testing.decorators.slow",
    "pandas.MultiIndex",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_multiindex_header_skiprows": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "numpy.testing.decorators.slow",
    "pandas.MultiIndex",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_multiindex_header_skiprows_tuples": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "numpy.testing.decorators.slow",
    "pandas.Index",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_multiindex_index": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "numpy.testing.decorators.slow",
    "pandas.MultiIndex",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_multiple_matches": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "len",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_negative_skiprows": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "ValueError",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_nyse_wsj_commas_table": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.io.tests.test_html.DATA_PATH",
    "pandas.io.tests.test_html.os"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_parse_dates_combine": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_parse_dates_list": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_python_docs_table": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "pandas.util.testing.network",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_regex_idempotency": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "list",
    "numpy.testing.decorators.slow",
    "pandas.DataFrame",
    "pandas.io.common.file_path_to_url",
    "pandas.io.tests.test_html.re",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_skiprows_int": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "pandas.io.tests.test_html.assert_framelist_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_skiprows_invalid": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "TypeError",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_skiprows_list": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "pandas.io.tests.test_html.assert_framelist_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_skiprows_ndarray": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.io.tests.test_html.assert_framelist_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_skiprows_set": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "pandas.io.tests.test_html.assert_framelist_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_skiprows_slice": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "pandas.io.tests.test_html.assert_framelist_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_skiprows_slice_long": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "pandas.io.tests.test_html.assert_framelist_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_skiprows_slice_short": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "pandas.io.tests.test_html.assert_framelist_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_skiprows_xrange": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_spam_header": {
  "data": {
   "lineno": 169
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_spam_no_match": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_spam_no_types": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "pandas.io.tests.test_html.assert_framelist_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_spam_url": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "pandas.io.tests.test_html.assert_framelist_equal",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_spam_with_types": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "pandas.io.tests.test_html.assert_framelist_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_string": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "open",
    "pandas.io.tests.test_html.assert_framelist_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_string_io": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "open",
    "pandas.compat.StringIO",
    "pandas.io.tests.test_html.assert_framelist_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_tfoot_read": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_thousands_macau_index_col": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "any",
    "numpy.testing.decorators.slow",
    "pandas.io.tests.test_html.DATA_PATH",
    "pandas.io.tests.test_html.os"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_thousands_macau_stats": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "any",
    "numpy.testing.decorators.slow",
    "pandas.io.tests.test_html.DATA_PATH",
    "pandas.io.tests.test_html.os"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_to_html_compat": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "float",
    "numpy.random.rand",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeCustomDataframe"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtml.test_wikipedia_states_table": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "numpy.dtype",
    "pandas.io.tests.test_html.DATA_PATH",
    "pandas.io.tests.test_html.nose",
    "pandas.io.tests.test_html.os"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtmlEncoding": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "pandas.io.tests.test_html.DATA_PATH",
    "pandas.io.tests.test_html.glob",
    "pandas.io.tests.test_html.os",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_html.TestReadHtmlEncoding.read_file_like": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "open",
    "pandas.compat.BytesIO"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtmlEncoding.read_filename": {
  "data": {
   "lineno": 692
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtmlEncoding.read_html": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "pandas.io.html.read_html"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtmlEncoding.read_string": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtmlEncoding.setUpClass": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "classmethod",
    "pandas.io.tests.test_html.TestReadHtmlEncoding",
    "pandas.io.tests.test_html._skip_if_none_of",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtmlEncoding.test_encode": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "Exception",
    "pandas.compat.is_platform_windows",
    "pandas.io.tests.test_html._lang_enc",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtmlEncodingLxml": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "pandas.io.tests.test_html.TestReadHtmlEncoding"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_html.TestReadHtmlEncodingLxml.setUpClass": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "classmethod",
    "pandas.io.tests.test_html.TestReadHtmlEncodingLxml",
    "pandas.io.tests.test_html._skip_if_no",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtmlLxml": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "pandas.io.tests.test_html.ReadHtmlMixin",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_html.TestReadHtmlLxml.setUpClass": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": [
    "classmethod",
    "pandas.io.tests.test_html.TestReadHtmlLxml",
    "pandas.io.tests.test_html._skip_if_no",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtmlLxml.test_computer_sales_page": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "pandas.io.tests.test_html.DATA_PATH",
    "pandas.io.tests.test_html.os"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtmlLxml.test_data_fail": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "lxml.etree.XMLSyntaxError",
    "pandas.io.tests.test_html.DATA_PATH",
    "pandas.io.tests.test_html.os",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtmlLxml.test_fallback_success": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "numpy.testing.decorators.slow",
    "pandas.io.tests.test_html.DATA_PATH",
    "pandas.io.tests.test_html._skip_if_none_of",
    "pandas.io.tests.test_html.os"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtmlLxml.test_parse_dates_combine": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtmlLxml.test_parse_dates_list": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.TestReadHtmlLxml.test_works_on_valid_markup": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.io.tests.test_html.DATA_PATH",
    "pandas.io.tests.test_html.os",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.io.tests.test_html.URLError": {
  "data": {
   "shadows": "pandas.io.common.URLError"
  },
  "type": "import"
 },
 "pandas.io.tests.test_html.XMLSyntaxError": {
  "data": {
   "shadows": "lxml.etree.XMLSyntaxError"
  },
  "type": "import"
 },
 "pandas.io.tests.test_html._have_module": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ImportError",
    "importlib.import_module"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html._lang_enc": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "pandas.io.tests.test_html.os"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html._remove_whitespace": {
  "data": {
   "shadows": "pandas.io.html._remove_whitespace"
  },
  "type": "import"
 },
 "pandas.io.tests.test_html._skip_if_no": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "pandas.io.tests.test_html._have_module",
    "pandas.io.tests.test_html.nose"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html._skip_if_none_of": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "isinstance",
    "pandas.compat.string_types",
    "pandas.io.tests.test_html._have_module",
    "pandas.io.tests.test_html._skip_if_no",
    "pandas.io.tests.test_html.bs4",
    "pandas.io.tests.test_html.nose",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.assert_framelist_equal": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "all",
    "isinstance",
    "len",
    "pandas.DataFrame",
    "pandas.compat.map",
    "pandas.compat.zip",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.bs4": {
  "data": {
   "shadows": "bs4"
  },
  "type": "import"
 },
 "pandas.io.tests.test_html.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.io.tests.test_html.file_path_to_url": {
  "data": {
   "shadows": "pandas.io.common.file_path_to_url"
  },
  "type": "import"
 },
 "pandas.io.tests.test_html.get_elements_from_file": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "bs4.BeautifulSoup",
    "pandas.io.common.file_path_to_url",
    "pandas.io.common.urlopen",
    "pandas.io.tests.test_html._skip_if_none_of"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.get_lxml_elements": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "lxml.html.parse",
    "pandas.io.tests.test_html._skip_if_no"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "pandas.io.tests.test_html.import_module": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "pandas.io.tests.test_html.is_platform_windows": {
  "data": {
   "shadows": "pandas.compat.is_platform_windows"
  },
  "type": "import"
 },
 "pandas.io.tests.test_html.map": {
  "data": {
   "shadows": "pandas.compat.map"
  },
  "type": "import"
 },
 "pandas.io.tests.test_html.mkdf": {
  "data": {
   "shadows": "pandas.util.testing.makeCustomDataframe"
  },
  "type": "import"
 },
 "pandas.io.tests.test_html.network": {
  "data": {
   "shadows": "pandas.util.testing.network"
  },
  "type": "import"
 },
 "pandas.io.tests.test_html.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.io.tests.test_html.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.io.tests.test_html.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.io.tests.test_html.parse": {
  "data": {
   "shadows": "lxml.html.parse"
  },
  "type": "import"
 },
 "pandas.io.tests.test_html.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.io.tests.test_html.rand": {
  "data": {
   "shadows": "numpy.random.rand"
  },
  "type": "import"
 },
 "pandas.io.tests.test_html.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pandas.io.tests.test_html.read_csv": {
  "data": {
   "shadows": "pandas.read_csv"
  },
  "type": "import"
 },
 "pandas.io.tests.test_html.read_html": {
  "data": {
   "shadows": "pandas.io.html.read_html"
  },
  "type": "import"
 },
 "pandas.io.tests.test_html.slow": {
  "data": {
   "shadows": "numpy.testing.decorators.slow"
  },
  "type": "import"
 },
 "pandas.io.tests.test_html.string_types": {
  "data": {
   "shadows": "pandas.compat.string_types"
  },
  "type": "import"
 },
 "pandas.io.tests.test_html.test_bs4_finds_tables": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "numpy.testing.decorators.slow",
    "pandas.io.tests.test_html.DATA_PATH",
    "pandas.io.tests.test_html.get_elements_from_file",
    "pandas.io.tests.test_html.os",
    "pandas.io.tests.test_html.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.test_bs4_version_fails": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "AssertionError",
    "distutils.version.LooseVersion",
    "pandas.io.html.read_html",
    "pandas.io.tests.test_html.DATA_PATH",
    "pandas.io.tests.test_html._skip_if_none_of",
    "pandas.io.tests.test_html.bs4",
    "pandas.io.tests.test_html.os",
    "pandas.util.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.test_invalid_flavor": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "ValueError",
    "pandas.io.html.read_html",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.test_lxml_finds_tables": {
  "data": {
   "lineno": 814,
   "symbols_in_volume": [
    "numpy.testing.decorators.slow",
    "pandas.io.tests.test_html.DATA_PATH",
    "pandas.io.tests.test_html.get_lxml_elements",
    "pandas.io.tests.test_html.os"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.test_lxml_finds_tbody": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "numpy.testing.decorators.slow",
    "pandas.io.tests.test_html.DATA_PATH",
    "pandas.io.tests.test_html.get_lxml_elements",
    "pandas.io.tests.test_html.os"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.test_same_ordering": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": [
    "pandas.io.html.read_html",
    "pandas.io.tests.test_html.DATA_PATH",
    "pandas.io.tests.test_html._skip_if_none_of",
    "pandas.io.tests.test_html.assert_framelist_equal",
    "pandas.io.tests.test_html.os"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_html.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.io.tests.test_html.urlopen": {
  "data": {
   "shadows": "pandas.io.common.urlopen"
  },
  "type": "import"
 },
 "pandas.io.tests.test_html.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.io.tests.test_html.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.io.tests.test_packers": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "numpy.nan"
   ]
  },
  "type": "module"
 },
 "pandas.io.tests.test_packers.Categorical": {
  "data": {
   "shadows": "pandas.Categorical"
  },
  "type": "import"
 },
 "pandas.io.tests.test_packers.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.io.tests.test_packers.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.io.tests.test_packers.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.io.tests.test_packers.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.io.tests.test_packers.NaT": {
  "data": {
   "shadows": "pandas.NaT"
  },
  "type": "import"
 },
 "pandas.io.tests.test_packers.Panel": {
  "data": {
   "shadows": "pandas.Panel"
  },
  "type": "import"
 },
 "pandas.io.tests.test_packers.PerformanceWarning": {
  "data": {
   "shadows": "pandas.core.common.PerformanceWarning"
  },
  "type": "import"
 },
 "pandas.io.tests.test_packers.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.io.tests.test_packers.TestAPI": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "pandas.io.tests.test_packers.TestPackers"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_packers.TestAPI.test_invalid_arg": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "A",
    "ValueError",
    "pandas.io.packers.read_msgpack",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestAPI.test_invalid_arg.A": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_packers.TestAPI.test_invalid_arg.A.__init__": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestAPI.test_iterator_with_string_io": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "enumerate",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.io.packers.read_msgpack",
    "pandas.io.packers.to_msgpack",
    "pandas.util.testing.assert_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestAPI.test_string_io": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "numpy.random.randn",
    "open",
    "pandas.DataFrame",
    "pandas.compat.BytesIO",
    "pandas.io.packers.read_msgpack",
    "pandas.io.packers.to_msgpack",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestBasic": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "pandas.io.tests.test_packers.TestPackers"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_packers.TestBasic.test_datetimes": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "numpy.datetime64",
    "pandas.io.tests.test_packers.datetime",
    "pandas.io.tests.test_packers.nose",
    "pandas.io.tests.test_packers.sys"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestBasic.test_nat": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "pandas.NaT"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestBasic.test_timedeltas": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "numpy.timedelta64",
    "pandas.io.tests.test_packers.datetime"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestBasic.test_timestamp": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestCategorical": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "pandas.io.tests.test_packers.TestPackers"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_packers.TestCategorical.setUp": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.io.tests.test_packers.TestCategorical",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestCategorical.test_basic": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "pandas.util.testing.assert_categorical_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestCompression": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "pandas.io.tests.test_packers.TestPackers"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_packers.TestCompression._test_compression": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestCompression._test_compression_warns_when_decompress_caches": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "globals",
    "numpy.dtype",
    "numpy.timedelta64",
    "pandas.core.common.PerformanceWarning",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.patch",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestCompression._test_compression_warns_when_decompress_caches.decompress": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "bytearray",
    "real_decompress"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestCompression._test_small_strings_no_warn": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "ord",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestCompression.setUp": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "ImportError",
    "dict",
    "list",
    "numpy.arange",
    "numpy.float64",
    "numpy.int32",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.io.tests.test_packers.TestCompression",
    "pandas.io.tests.test_packers.datetime",
    "range",
    "sqlalchemy.create_engine",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestCompression.test_compression_blosc": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "pandas.io.tests.test_packers._BLOSC_INSTALLED",
    "pandas.io.tests.test_packers.nose"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestCompression.test_compression_warns_when_decompress_caches_blosc": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "pandas.io.tests.test_packers._BLOSC_INSTALLED",
    "pandas.io.tests.test_packers.nose"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestCompression.test_compression_warns_when_decompress_caches_zlib": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "pandas.io.tests.test_packers._ZLIB_INSTALLED",
    "pandas.io.tests.test_packers.nose"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestCompression.test_compression_zlib": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "pandas.io.tests.test_packers._ZLIB_INSTALLED",
    "pandas.io.tests.test_packers.nose"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestCompression.test_plain": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestCompression.test_readonly_axis_blosc": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.io.tests.test_packers._BLOSC_INSTALLED",
    "pandas.io.tests.test_packers.nose"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestCompression.test_readonly_axis_blosc_to_sql": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.io.tests.test_packers._BLOSC_INSTALLED",
    "pandas.io.tests.test_packers.nose",
    "pandas.io.tests.test_packers.pandas",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestCompression.test_readonly_axis_zlib": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestCompression.test_readonly_axis_zlib_to_sql": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.io.tests.test_packers._ZLIB_INSTALLED",
    "pandas.io.tests.test_packers.nose",
    "pandas.io.tests.test_packers.pandas",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestCompression.test_small_strings_no_warn_blosc": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "pandas.io.tests.test_packers._BLOSC_INSTALLED",
    "pandas.io.tests.test_packers.nose"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestCompression.test_small_strings_no_warn_zlib": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "pandas.io.tests.test_packers._ZLIB_INSTALLED",
    "pandas.io.tests.test_packers.nose"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestEncoding": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "pandas.io.tests.test_packers.TestPackers"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_packers.TestEncoding.setUp": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "dict",
    "list",
    "numpy.arange",
    "numpy.int32",
    "pandas.DataFrame",
    "pandas.compat.u",
    "pandas.date_range",
    "pandas.io.tests.test_packers.TestEncoding",
    "pandas.io.tests.test_packers.datetime",
    "range",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestEncoding.test_default_encoding": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "pandas.compat.itervalues",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestEncoding.test_utf": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "pandas.compat.itervalues",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestIndex": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "pandas.io.tests.test_packers.TestPackers"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_packers.TestIndex.setUp": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.MultiIndex.from_tuples",
    "pandas.bdate_range",
    "pandas.date_range",
    "pandas.io.tests.test_packers.TestIndex",
    "pandas.period_range",
    "pandas.util.testing.makeDateIndex",
    "pandas.util.testing.makeFloatIndex",
    "pandas.util.testing.makeIntIndex",
    "pandas.util.testing.makeRangeIndex",
    "pandas.util.testing.makeStringIndex",
    "super",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestIndex.test_basic_index": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestIndex.test_multi_index": {
  "data": {
   "lineno": 302
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestIndex.test_unicode": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "pandas.util.testing.makeUnicodeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestMsgpack": {
  "data": {
   "lineno": 774
  },
  "type": "class"
 },
 "pandas.io.tests.test_packers.TestMsgpack.check_min_structure": {
  "data": {
   "lineno": 802
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestMsgpack.compare": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "KeyError",
    "comparator",
    "distutils.version.LooseVersion",
    "getattr",
    "pandas.io.packers.read_msgpack",
    "pandas.io.tests.test_packers.check_arbitrary"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestMsgpack.compare_frame_dt_mixed_tzs": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "object",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestMsgpack.compare_series_dt_tz": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "object",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestMsgpack.read_msgpacks": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "ImportError",
    "pandas.compat.PY3",
    "pandas.io.tests.test_packers.os",
    "pandas.util.testing.get_data_path",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestMsgpack.setUp": {
  "data": {
   "lineno": 789,
   "symbols_in_volume": [
    "pandas.compat.u",
    "pandas.io.tests.generate_legacy_storage_files.create_data",
    "pandas.io.tests.generate_legacy_storage_files.create_msgpack_data",
    "pandas.util.testing.rands"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestMsgpack.test_msgpack": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": [
    "pandas.io.tests.test_packers.os",
    "pandas.util.testing.get_data_path"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestNDFrame": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "pandas.io.tests.test_packers.TestPackers"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_packers.TestNDFrame.setUp": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "dict",
    "numpy.nan",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.Panel",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.io.tests.test_packers.TestNDFrame",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestNDFrame.test_basic_frame": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestNDFrame.test_basic_panel": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "pandas.tests.test_panel.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestNDFrame.test_dataframe_duplicate_column_names": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestNDFrame.test_iterator": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "enumerate",
    "pandas.io.packers.read_msgpack",
    "pandas.io.packers.to_msgpack",
    "pandas.io.tests.test_packers.check_arbitrary",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestNDFrame.test_multi": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "pandas.io.tests.test_packers.check_arbitrary",
    "pandas.util.testing.assert_frame_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestNDFrame.tests_datetimeindex_freq_issue": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestNumpy": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "pandas.io.tests.test_packers.TestPackers"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_packers.TestNumpy.test_dict_complex": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestNumpy.test_dict_float": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestNumpy.test_dict_numpy_complex": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "numpy.complex128",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestNumpy.test_dict_numpy_float": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "numpy.float32",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestNumpy.test_list_float": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "numpy.random.rand",
    "pandas.util.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestNumpy.test_list_float_complex": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.random.rand",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestNumpy.test_list_mixed": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "numpy.complex128",
    "numpy.float32",
    "pandas.compat.u",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestNumpy.test_list_numpy_float": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.random.rand",
    "pandas.util.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestNumpy.test_list_numpy_float_complex": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "hasattr",
    "numpy",
    "numpy.allclose",
    "numpy.complex128",
    "numpy.float32",
    "numpy.random.rand",
    "pandas.io.tests.test_packers.nose",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestNumpy.test_numpy_array_complex": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "all",
    "map",
    "numpy.complex128",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestNumpy.test_numpy_array_float": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "numpy.random.rand",
    "pandas.util.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestNumpy.test_numpy_scalar_complex": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.complex64",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestNumpy.test_numpy_scalar_float": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.random.rand",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestNumpy.test_scalar_complex": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestNumpy.test_scalar_float": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "numpy.random.rand",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestPackers": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_packers.TestPackers.encode_decode": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "pandas.io.packers.read_msgpack",
    "pandas.io.packers.to_msgpack",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestPackers.setUp": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "pandas.util.testing.rands"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestPackers.tearDown": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestSeries": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "pandas.io.tests.test_packers.TestPackers"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_packers.TestSeries.setUp": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.io.tests.test_packers.TestSeries",
    "pandas.tslib.iNaT",
    "pandas.util.testing.makeObjectSeries",
    "pandas.util.testing.makeStringSeries",
    "range",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestSeries.test_basic": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestSparse": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "pandas.io.tests.test_packers.TestPackers"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_packers.TestSparse._check_roundtrip": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestSparse.test_sparse_frame": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestSparse.test_sparse_panel": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "dict",
    "pandas.Panel",
    "pandas.io.tests.test_packers.warnings",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.makeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.TestSparse.test_sparse_series": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeStringSeries"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.io.tests.test_packers._BLOSC_INSTALLED": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pandas.io.tests.test_packers._ZLIB_INSTALLED": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pandas.io.tests.test_packers._multiprocess_can_split_": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pandas.io.tests.test_packers.assert_categorical_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_categorical_equal"
  },
  "type": "import"
 },
 "pandas.io.tests.test_packers.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.io.tests.test_packers.assert_index_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_index_equal"
  },
  "type": "import"
 },
 "pandas.io.tests.test_packers.assert_panel_equal": {
  "data": {
   "shadows": "pandas.tests.test_panel.assert_panel_equal"
  },
  "type": "import"
 },
 "pandas.io.tests.test_packers.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.io.tests.test_packers.bdate_range": {
  "data": {
   "shadows": "pandas.bdate_range"
  },
  "type": "import"
 },
 "pandas.io.tests.test_packers.blosc": {
  "data": {
   "shadows": "blosc"
  },
  "type": "import"
 },
 "pandas.io.tests.test_packers.check_arbitrary": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Panel",
    "pandas.Series",
    "pandas.tests.test_panel.assert_panel_equal",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_packers.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.io.tests.test_packers.create_data": {
  "data": {
   "shadows": "pandas.io.tests.generate_legacy_storage_files.create_data"
  },
  "type": "import"
 },
 "pandas.io.tests.test_packers.create_engine": {
  "data": {
   "shadows": "sqlalchemy.create_engine"
  },
  "type": "import"
 },
 "pandas.io.tests.test_packers.create_msgpack_data": {
  "data": {
   "shadows": "pandas.io.tests.generate_legacy_storage_files.create_msgpack_data"
  },
  "type": "import"
 },
 "pandas.io.tests.test_packers.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.io.tests.test_packers.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pandas.io.tests.test_packers.ensure_clean": {
  "data": {
   "shadows": "pandas.util.testing.ensure_clean"
  },
  "type": "import"
 },
 "pandas.io.tests.test_packers.nan": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pandas.io.tests.test_packers.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.io.tests.test_packers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.io.tests.test_packers.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.io.tests.test_packers.pandas": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.io.tests.test_packers.patch": {
  "data": {
   "shadows": "pandas.util.testing.patch"
  },
  "type": "import"
 },
 "pandas.io.tests.test_packers.period_range": {
  "data": {
   "shadows": "pandas.period_range"
  },
  "type": "import"
 },
 "pandas.io.tests.test_packers.read_msgpack": {
  "data": {
   "shadows": "pandas.io.packers.read_msgpack"
  },
  "type": "import"
 },
 "pandas.io.tests.test_packers.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.io.tests.test_packers.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.io.tests.test_packers.to_msgpack": {
  "data": {
   "shadows": "pandas.io.packers.to_msgpack"
  },
  "type": "import"
 },
 "pandas.io.tests.test_packers.tslib": {
  "data": {
   "shadows": "pandas.tslib"
  },
  "type": "import"
 },
 "pandas.io.tests.test_packers.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.io.tests.test_packers.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.io.tests.test_packers.zlib": {
  "data": {
   "shadows": "zlib"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pickle": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.io.tests.test_pickle.nose"
   ]
  },
  "type": "module"
 },
 "pandas.io.tests.test_pickle.Day": {
  "data": {
   "shadows": "pandas.tseries.offsets.Day"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pickle.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pickle.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pickle.MonthEnd": {
  "data": {
   "shadows": "pandas.tseries.offsets.MonthEnd"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pickle.TestPickle": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "pandas.io.tests.test_pickle.TestPickle._validate_frequency": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "isinstance",
    "pandas.io.tests.test_pickle.pandas",
    "pandas.tseries.offsets.Day",
    "pandas.util.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pickle.TestPickle._validate_periodindex": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "pandas.tseries.offsets.MonthEnd",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_equal",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pickle.TestPickle._validate_timeseries": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "pandas.util.testing.assert_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pickle.TestPickle.compare": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "comparator",
    "getattr",
    "pandas.io.tests.test_pickle.pandas",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pickle.TestPickle.compare_element": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "comparator",
    "getattr",
    "isinstance",
    "pandas.Index",
    "pandas.util.testing",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pickle.TestPickle.compare_frame_dt_mixed_tzs": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "object",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pickle.TestPickle.compare_series_dt_tz": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "object",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pickle.TestPickle.read_pickles": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "pandas.compat.is_platform_little_endian",
    "pandas.io.tests.test_pickle.nose",
    "pandas.io.tests.test_pickle.os",
    "pandas.util.testing.get_data_path",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pickle.TestPickle.setUp": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "pandas.compat.u",
    "pandas.io.tests.generate_legacy_storage_files.create_pickle_data",
    "pandas.util.testing.rands"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pickle.TestPickle.test_pickles": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "pandas.io.tests.test_pickle.os",
    "pandas.util.testing.get_data_path"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pickle.TestPickle.test_round_trip_current": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "c_unpickler",
    "pandas.io.tests.test_pickle.pandas",
    "pandas.util.testing.ensure_clean",
    "python_unpickler",
    "writer"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pickle.TestPickle.test_round_trip_current.c_pickler": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "cPickle.dump",
    "open"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pickle.TestPickle.test_round_trip_current.c_unpickler": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "cPickle.load",
    "open"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pickle.TestPickle.test_round_trip_current.python_pickler": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "open",
    "pickle.dump"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pickle.TestPickle.test_round_trip_current.python_unpickler": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "open",
    "pickle.load"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pickle.c_pickle": {
  "data": {
   "shadows": "cPickle"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pickle.create_pickle_data": {
  "data": {
   "shadows": "pandas.io.tests.generate_legacy_storage_files.create_pickle_data"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pickle.is_platform_little_endian": {
  "data": {
   "shadows": "pandas.compat.is_platform_little_endian"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pickle.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pickle.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pickle.pandas": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pickle.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pickle.python_pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pickle.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pickle.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "distutils.version.LooseVersion",
    "pandas.compat.PY3",
    "pandas.compat.is_platform_windows",
    "pandas.io.pytables._tables",
    "pandas.io.tests.test_pytables.nose",
    "pandas.io.tests.test_pytables.tables"
   ]
  },
  "type": "module"
 },
 "pandas.io.tests.test_pytables.AttributeConflictWarning": {
  "data": {
   "shadows": "pandas.io.pytables.AttributeConflictWarning"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.Base": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_pytables.Base.setUp": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.io.tests.test_pytables.warnings",
    "pandas.util.testing.rands"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.Base.setUpClass": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "classmethod",
    "pandas.io.tests.test_pytables.Base",
    "pandas.util.testing.reset_testing_mode",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.Base.tearDown": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.Base.tearDownClass": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "classmethod",
    "pandas.io.tests.test_pytables.Base",
    "pandas.util.testing.set_testing_mode",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.Categorical": {
  "data": {
   "shadows": "pandas.Categorical"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.ClosedFileError": {
  "data": {
   "shadows": "pandas.io.pytables.ClosedFileError"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.DuplicateWarning": {
  "data": {
   "shadows": "pandas.io.pytables.DuplicateWarning"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.HDFStore": {
  "data": {
   "shadows": "pandas.io.pytables.HDFStore"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.IncompatibilityWarning": {
  "data": {
   "shadows": "pandas.io.pytables.IncompatibilityWarning"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.Int64Index": {
  "data": {
   "shadows": "pandas.Int64Index"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.PY3": {
  "data": {
   "shadows": "pandas.compat.PY3"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.PY35": {
  "data": {
   "shadows": "pandas.compat.PY35"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.Panel": {
  "data": {
   "shadows": "pandas.Panel"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.PerformanceWarning": {
  "data": {
   "shadows": "pandas.io.pytables.PerformanceWarning"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.PossibleDataLossError": {
  "data": {
   "shadows": "pandas.io.pytables.PossibleDataLossError"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.RangeIndex": {
  "data": {
   "shadows": "pandas.RangeIndex"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.TableIterator": {
  "data": {
   "shadows": "pandas.io.pytables.TableIterator"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.Term": {
  "data": {
   "shadows": "pandas.io.pytables.Term"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.TestHDFComplexValues": {
  "data": {
   "lineno": 4840,
   "symbols_in_volume": [
    "pandas.io.tests.test_pytables.Base"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_pytables.TestHDFComplexValues.test_complex_across_dimensions": {
  "data": {
   "lineno": 4933,
   "symbols_in_volume": [
    "comp",
    "list",
    "numpy.array",
    "pandas.DataFrame",
    "pandas.Panel",
    "pandas.Series",
    "pandas.io.pytables.read_hdf",
    "pandas.io.tests.test_pytables.ensure_clean_path",
    "pandas.io.tests.test_pytables.pandas",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel4d_equal",
    "pandas.util.testing.assert_panel_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFComplexValues.test_complex_across_dimensions_fixed": {
  "data": {
   "lineno": 4918,
   "symbols_in_volume": [
    "comp",
    "list",
    "numpy.array",
    "pandas.DataFrame",
    "pandas.Panel",
    "pandas.Series",
    "pandas.io.pytables.read_hdf",
    "pandas.io.tests.test_pytables.ensure_clean_path",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.assert_series_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFComplexValues.test_complex_append": {
  "data": {
   "lineno": 4972,
   "symbols_in_volume": [
    "numpy.complex128",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.io.tests.test_pytables.pandas",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFComplexValues.test_complex_fixed": {
  "data": {
   "lineno": 4843,
   "symbols_in_volume": [
    "list",
    "numpy.complex128",
    "numpy.complex64",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.io.pytables.read_hdf",
    "pandas.io.tests.test_pytables.ensure_clean_path",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFComplexValues.test_complex_indexing_error": {
  "data": {
   "lineno": 4949,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "numpy.array",
    "numpy.complex128",
    "pandas.DataFrame",
    "pandas.io.tests.test_pytables.ensure_clean_store"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFComplexValues.test_complex_mixed_fixed": {
  "data": {
   "lineno": 4880,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.complex128",
    "numpy.complex64",
    "pandas.DataFrame",
    "pandas.io.pytables.read_hdf",
    "pandas.io.tests.test_pytables.ensure_clean_path",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFComplexValues.test_complex_mixed_table": {
  "data": {
   "lineno": 4896,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.complex128",
    "numpy.complex64",
    "pandas.DataFrame",
    "pandas.io.pytables.Term",
    "pandas.io.pytables.read_hdf",
    "pandas.io.tests.test_pytables.ensure_clean_path",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFComplexValues.test_complex_series_error": {
  "data": {
   "lineno": 4960,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "numpy.array",
    "pandas.Series",
    "pandas.io.pytables.read_hdf",
    "pandas.io.tests.test_pytables.ensure_clean_path",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFComplexValues.test_complex_table": {
  "data": {
   "lineno": 4861,
   "symbols_in_volume": [
    "list",
    "numpy.complex128",
    "numpy.complex64",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.io.pytables.read_hdf",
    "pandas.io.tests.test_pytables.ensure_clean_path",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "pandas.io.tests.test_pytables.Base",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_pytables.TestHDFStore._check_double_roundtrip": {
  "data": {
   "lineno": 4177,
   "symbols_in_volume": [
    "comparator",
    "pandas.io.tests.test_pytables._default_compressor",
    "pandas.io.tests.test_pytables.ensure_clean_store"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore._check_roundtrip": {
  "data": {
   "lineno": 4166,
   "symbols_in_volume": [
    "comparator",
    "pandas.io.tests.test_pytables._default_compressor",
    "pandas.io.tests.test_pytables.ensure_clean_store"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore._check_roundtrip_table": {
  "data": {
   "lineno": 4191,
   "symbols_in_volume": [
    "comparator",
    "pandas.io.tests.test_pytables._default_compressor",
    "pandas.io.tests.test_pytables.ensure_clean_store"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_api": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "IOError",
    "TypeError",
    "ValueError",
    "pandas.io.pytables.read_hdf",
    "pandas.io.tests.test_pytables._maybe_remove",
    "pandas.io.tests.test_pytables.ensure_clean_path",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_api_default_format": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "ValueError",
    "pandas.io.pytables.HDFStore",
    "pandas.io.pytables.get_store",
    "pandas.io.tests.test_pytables._maybe_remove",
    "pandas.io.tests.test_pytables.ensure_clean_path",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.io.tests.test_pytables.pandas",
    "pandas.util.testing.makeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_append": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "numpy.random.randint",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.io.tests.test_pytables._maybe_remove",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.io.tests.test_pytables.tables",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel4d_equal",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.makePanel",
    "pandas.util.testing.makePanel4D",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_append_all_nans": {
  "data": {
   "lineno": 1057,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Panel",
    "pandas.Timestamp",
    "pandas.io.pytables.read_hdf",
    "pandas.io.tests.test_pytables._maybe_remove",
    "pandas.io.tests.test_pytables.datetime",
    "pandas.io.tests.test_pytables.ensure_clean_path",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.io.tests.test_pytables.pandas",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_append_diff_item_order": {
  "data": {
   "lineno": 1632,
   "symbols_in_volume": [
    "ValueError",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.makePanel"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_append_frame_column_oriented": {
  "data": {
   "lineno": 1154,
   "symbols_in_volume": [
    "TypeError",
    "pandas.io.pytables.Term",
    "pandas.io.tests.test_pytables._maybe_remove",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_append_hierarchical": {
  "data": {
   "lineno": 1643,
   "symbols_in_volume": [
    "index",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex",
    "pandas.io.pytables.read_hdf",
    "pandas.io.tests.test_pytables.ensure_clean_path",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_append_misc": {
  "data": {
   "lineno": 1814,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "check",
    "list",
    "numpy.arange",
    "numpy.random.rand",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Panel",
    "pandas.Timestamp",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel4d_equal",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.makeDataFrame",
    "pandas.util.testing.makePanel",
    "pandas.util.testing.makePanel4D"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_append_misc.check": {
  "data": {
   "lineno": 1838,
   "symbols_in_volume": [
    "comparator",
    "pandas.io.tests.test_pytables.ensure_clean_store"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_append_raise": {
  "data": {
   "lineno": 1896,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "len",
    "numpy.arange",
    "numpy.nan",
    "numpy.object_",
    "object",
    "pandas.Series",
    "pandas.io.tests.test_pytables.datetime",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.makeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_append_series": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.io.pytables.Term",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeStringSeries",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_append_some_nans": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.io.tests.test_pytables._maybe_remove",
    "pandas.io.tests.test_pytables.datetime",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_append_to_multiple": {
  "data": {
   "lineno": 4000,
   "symbols_in_volume": [
    "ValueError",
    "pandas.concat",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_append_to_multiple_dropna": {
  "data": {
   "lineno": 4025,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.concat",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_append_with_data_columns": {
  "data": {
   "lineno": 1402,
   "symbols_in_volume": [
    "check_col",
    "index",
    "numpy.nan",
    "numpy.random.randn",
    "numpy.random.seed",
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.io.pytables.Term",
    "pandas.io.tests.test_pytables._maybe_remove",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.makePanel",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_append_with_data_columns.check_col": {
  "data": {
   "lineno": 1440,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_append_with_diff_col_name_types_raises_value_error": {
  "data": {
   "lineno": 4558,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.randn",
    "object",
    "pandas.DataFrame",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.rands"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_append_with_different_block_ordering": {
  "data": {
   "lineno": 1179,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.io.tests.test_pytables.ensure_clean_store"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_append_with_strings": {
  "data": {
   "lineno": 1289,
   "symbols_in_volume": [
    "ValueError",
    "check_col",
    "dict",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.concat",
    "pandas.io.tests.test_pytables._maybe_remove",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.makePanel",
    "pandas.util.testing.makeTimeDataFrame",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_append_with_strings.check_col": {
  "data": {
   "lineno": 1363,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_append_with_timedelta": {
  "data": {
   "lineno": 2091,
   "symbols_in_volume": [
    "datetime.timedelta",
    "dict",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.compat.range",
    "pandas.io.pytables.Term",
    "pandas.io.tests.test_pytables._maybe_remove",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_backwards_compat_without_term_object": {
  "data": {
   "lineno": 2537,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.random.randn",
    "pandas.Panel",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.io.tests.test_pytables.datetime",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_calendar_roundtrip_issue": {
  "data": {
   "lineno": 2066,
   "symbols_in_volume": [
    "numpy.datetime64",
    "pandas.Series",
    "pandas.date_range",
    "pandas.io.tests.test_pytables.datetime",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.io.tests.test_pytables.pandas",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_can_serialize_dates": {
  "data": {
   "lineno": 2814,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.bdate_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_categorical": {
  "data": {
   "lineno": 4583,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "list",
    "numpy.nan",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.concat",
    "pandas.io.tests.test_pytables._maybe_remove",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_column_multiindex": {
  "data": {
   "lineno": 1668,
   "symbols_in_volume": [
    "ValueError",
    "index",
    "isinstance",
    "list",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Int64Index",
    "pandas.MultiIndex.from_tuples",
    "pandas.RangeIndex",
    "pandas.concat",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_colums_multiindex_modified": {
  "data": {
   "lineno": 4717,
   "symbols_in_volume": [
    "list",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.io.pytables.read_hdf",
    "pandas.io.tests.test_pytables.ensure_clean_path"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_contains": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.io.tests.test_pytables.tables",
    "pandas.io.tests.test_pytables.warnings",
    "pandas.util.testing.makeDataFrame",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_context": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pandas.DataFrame",
    "pandas.io.pytables.HDFStore",
    "pandas.io.tests.test_pytables.create_tempfile",
    "pandas.io.tests.test_pytables.safe_remove",
    "pandas.util.testing.makeDataFrame",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_conv_read_write": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "dict",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.io.pytables.read_hdf",
    "pandas.io.tests.test_pytables.create_tempfile",
    "pandas.io.tests.test_pytables.safe_remove",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeDataFrame",
    "pandas.util.testing.makePanel",
    "pandas.util.testing.makeStringSeries",
    "pandas.util.testing.makeTimeSeries",
    "roundtrip"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_conv_read_write.roundtrip": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "pandas.io.pytables.read_hdf"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_coordinates": {
  "data": {
   "lineno": 3900,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "len",
    "numpy.arange",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.Index",
    "pandas.compat.lrange",
    "pandas.concat",
    "pandas.date_range",
    "pandas.io.tests.test_pytables._maybe_remove",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_copy": {
  "data": {
   "lineno": 4381,
   "symbols_in_volume": [
    "do_copy",
    "pandas.io.pytables.HDFStore",
    "pandas.io.tests.test_pytables.create_tempfile",
    "pandas.io.tests.test_pytables.safe_remove",
    "pandas.util.testing.makeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_copy.do_copy": {
  "data": {
   "lineno": 4383,
   "symbols_in_volume": [
    "f",
    "pandas.io.pytables.HDFStore",
    "pandas.io.tests.test_pytables.os",
    "pandas.io.tests.test_pytables.safe_close",
    "pandas.io.tests.test_pytables.safe_remove",
    "pandas.io.tests.test_pytables.tempfile",
    "pandas.util.testing.get_data_path",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_create_table_index": {
  "data": {
   "lineno": 1573,
   "symbols_in_volume": [
    "TypeError",
    "col",
    "pandas.io.tests.test_pytables._maybe_remove",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.makePanel",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_create_table_index.col": {
  "data": {
   "lineno": 1577,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_duplicate_column_name": {
  "data": {
   "lineno": 4679,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.io.pytables.read_hdf",
    "pandas.io.tests.test_pytables.ensure_clean_path",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_empty_series": {
  "data": {
   "lineno": 2809,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.int64",
    "numpy.object",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_empty_series_frame": {
  "data": {
   "lineno": 2796,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_encoding": {
  "data": {
   "lineno": 954,
   "symbols_in_volume": [
    "dict",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.io.pytables.Term",
    "pandas.io.tests.test_pytables._maybe_remove",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.io.tests.test_pytables.nose",
    "pandas.io.tests.test_pytables.sys",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_factory_fun": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pandas.DataFrame",
    "pandas.io.pytables.get_store",
    "pandas.io.tests.test_pytables.create_tempfile",
    "pandas.io.tests.test_pytables.safe_remove",
    "pandas.util.testing.makeDataFrame",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_float_index": {
  "data": {
   "lineno": 2684,
   "symbols_in_volume": [
    "index",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_flush": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_frame": {
  "data": {
   "lineno": 2762,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.io.tests.test_pytables.skip_compression",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeDataFrame",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_frame_select": {
  "data": {
   "lineno": 3618,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pandas.io.pytables.Term",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_frame_select_complex": {
  "data": {
   "lineno": 3651,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_frame_select_complex2": {
  "data": {
   "lineno": 3702,
   "symbols_in_volume": [
    "index",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.range",
    "pandas.io.pytables.HDFStore",
    "pandas.io.pytables.Term",
    "pandas.io.pytables.read_hdf",
    "pandas.io.tests.test_pytables.ensure_clean_path",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_get": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "KeyError",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_getattr": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeTimeDataFrame",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_index_types": {
  "data": {
   "lineno": 2704,
   "symbols_in_volume": [
    "Warning",
    "datetime.datetime.date.today",
    "datetime.datetime.datetime",
    "datetime.datetime.datetime.today",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.compat.PY35",
    "pandas.io.pytables.PerformanceWarning",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_invalid_complib": {
  "data": {
   "lineno": 4819,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.io.tests.test_pytables.ensure_clean_path"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_invalid_filtering": {
  "data": {
   "lineno": 3771,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_invalid_terms": {
  "data": {
   "lineno": 2353,
   "symbols_in_volume": [
    "SyntaxError",
    "TypeError",
    "ValueError",
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.io.pytables.Term",
    "pandas.io.pytables.read_hdf",
    "pandas.io.tests.test_pytables.ensure_clean_path",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.makePanel",
    "pandas.util.testing.makePanel4D",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_iter_empty": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "list",
    "pandas.io.tests.test_pytables.ensure_clean_store"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_keys": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "len",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.makeDataFrame",
    "pandas.util.testing.makePanel",
    "pandas.util.testing.makeStringSeries",
    "pandas.util.testing.makeTimeSeries",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_latin_encoding": {
  "data": {
   "lineno": 971,
   "symbols_in_volume": [
    "TypeError",
    "_try_decode",
    "numpy.nan",
    "object",
    "pandas.compat.PY2",
    "pandas.io.tests.test_pytables.pandas",
    "roundtrip"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_latin_encoding._try_decode": {
  "data": {
   "lineno": 988,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_latin_encoding.roundtrip": {
  "data": {
   "lineno": 1001,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.io.pytables.read_hdf",
    "pandas.io.tests.test_pytables.ensure_clean_path",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_legacy_0_10_read": {
  "data": {
   "lineno": 4357,
   "symbols_in_volume": [
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.get_data_path",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_legacy_0_11_read": {
  "data": {
   "lineno": 4366,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.io.tests.test_pytables.os",
    "pandas.util.testing.get_data_path",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_legacy_read": {
  "data": {
   "lineno": 4325,
   "symbols_in_volume": [
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.get_data_path"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_legacy_table_read": {
  "data": {
   "lineno": 4334,
   "symbols_in_volume": [
    "Exception",
    "pandas.io.pytables.IncompatibilityWarning",
    "pandas.io.pytables.Term",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.get_data_path"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_legacy_table_write": {
  "data": {
   "lineno": 4443,
   "symbols_in_volume": [
    "dict",
    "index",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex",
    "pandas.compat.lrange",
    "pandas.io.pytables.HDFStore",
    "pandas.io.tests.test_pytables.nose",
    "pandas.io.tests.test_pytables.pandas",
    "pandas.util.testing.get_data_path",
    "pandas.util.testing.makeDataFrame",
    "pandas.util.testing.makePanel"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_long": {
  "data": {
   "lineno": 2977,
   "symbols_in_volume": [
    "pandas.util.testing.makePanel"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_long._check": {
  "data": {
   "lineno": 2978,
   "symbols_in_volume": [
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_long_strings": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.rands_array"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_longpanel": {
  "data": {
   "lineno": 2987
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_mode": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "check",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_mode.check": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "IOError",
    "KeyError",
    "f",
    "pandas.io.pytables.HDFStore",
    "pandas.io.pytables.read_hdf",
    "pandas.io.tests.test_pytables.ensure_clean_path",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_mode.check.f": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "pandas.io.pytables.HDFStore"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_multiple_open_close": {
  "data": {
   "lineno": 4202,
   "symbols_in_volume": [
    "ValueError",
    "f",
    "len",
    "pandas.io.pytables.ClosedFileError",
    "pandas.io.pytables.HDFStore",
    "pandas.io.pytables._table_file_open_policy_is_strict",
    "pandas.io.tests.test_pytables.ensure_clean_path",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.makeDataFrame",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_multiple_open_close.f": {
  "data": {
   "lineno": 4301
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_nan_selection_bug_4858": {
  "data": {
   "lineno": 4109,
   "symbols_in_volume": [
    "dict",
    "distutils.version.LooseVersion",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.io.tests.test_pytables.nose",
    "pandas.io.tests.test_pytables.tables",
    "pandas.util.testing.assert_frame_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_ndim_indexables": {
  "data": {
   "lineno": 1221,
   "symbols_in_volume": [
    "ValueError",
    "check_indexers",
    "pandas.io.pytables.Term",
    "pandas.io.tests.test_pytables._maybe_remove",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_panel4d_equal",
    "pandas.util.testing.makePanel4D"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_ndim_indexables.check_indexers": {
  "data": {
   "lineno": 1228,
   "symbols_in_volume": [
    "enumerate",
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_open_args": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "pandas.io.pytables.HDFStore",
    "pandas.io.tests.test_pytables.ensure_clean_path",
    "pandas.io.tests.test_pytables.os",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_overwrite_node": {
  "data": {
   "lineno": 2990,
   "symbols_in_volume": [
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeTimeDataFrame",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_panel_select": {
  "data": {
   "lineno": 3598,
   "symbols_in_volume": [
    "len",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.makePanel"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_pass_spec_to_storer": {
  "data": {
   "lineno": 1804,
   "symbols_in_volume": [
    "TypeError",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.makeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_preserve_timedeltaindex_type": {
  "data": {
   "lineno": 4704,
   "symbols_in_volume": [
    "numpy.random.normal",
    "pandas.DataFrame",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_put": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "ValueError",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeDataFrame",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_put_compression": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "ValueError",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_put_compression_blosc": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "ValueError",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.io.tests.test_pytables.nose",
    "pandas.io.tests.test_pytables.skip_compression",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeDataFrame",
    "pandas.util.testing.skip_if_no_package"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_put_integer": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_put_mixed_type": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Timestamp",
    "pandas.io.pytables.PerformanceWarning",
    "pandas.io.tests.test_pytables._maybe_remove",
    "pandas.io.tests.test_pytables.datetime",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.io.tests.test_pytables.warnings",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_put_string_index": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_pytables_native2_read": {
  "data": {
   "lineno": 4313,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.PY35",
    "pandas.compat.is_platform_windows",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.io.tests.test_pytables.nose",
    "pandas.util.testing.get_data_path",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_pytables_native_read": {
  "data": {
   "lineno": 4305,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.get_data_path"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_query_with_nested_special_character": {
  "data": {
   "lineno": 4573,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_read_column": {
  "data": {
   "lineno": 3835,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "ValueError",
    "f",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.io.tests.test_pytables._maybe_remove",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_read_column.f": {
  "data": {
   "lineno": 3846
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_read_hdf_errors": {
  "data": {
   "lineno": 4805,
   "symbols_in_volume": [
    "IOError",
    "NotImplementedError",
    "list",
    "numpy.random.rand",
    "open",
    "pandas.DataFrame",
    "pandas.io.pytables.HDFStore",
    "pandas.io.pytables.read_hdf",
    "pandas.io.tests.test_pytables.ensure_clean_path"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_read_hdf_iterator": {
  "data": {
   "lineno": 4789,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "next",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.io.pytables.TableIterator",
    "pandas.io.pytables.read_hdf",
    "pandas.io.tests.test_pytables.ensure_clean_path",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_read_hdf_open_store": {
  "data": {
   "lineno": 4771,
   "symbols_in_volume": [
    "list",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.io.pytables.HDFStore",
    "pandas.io.pytables.read_hdf",
    "pandas.io.tests.test_pytables.ensure_clean_path",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_read_nokey": {
  "data": {
   "lineno": 4828,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.io.pytables.read_hdf",
    "pandas.io.tests.test_pytables.ensure_clean_path",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_remove": {
  "data": {
   "lineno": 2134,
   "symbols_in_volume": [
    "KeyError",
    "len",
    "pandas.io.tests.test_pytables._maybe_remove",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeDataFrame",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_remove_crit": {
  "data": {
   "lineno": 2281,
   "symbols_in_volume": [
    "len",
    "pandas.Index",
    "pandas.io.pytables.Term",
    "pandas.io.tests.test_pytables._maybe_remove",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.makePanel"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_remove_startstop": {
  "data": {
   "lineno": 2207,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.io.pytables.Term",
    "pandas.io.tests.test_pytables._maybe_remove",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.makePanel"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_remove_where": {
  "data": {
   "lineno": 2171,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "pandas.io.pytables.Term",
    "pandas.io.tests.test_pytables._maybe_remove",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.makePanel"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_reopen_handle": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "len",
    "pandas.io.pytables.HDFStore",
    "pandas.io.pytables.PossibleDataLossError",
    "pandas.io.tests.test_pytables.ensure_clean_path",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_repr": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Timestamp",
    "pandas.io.pytables.PerformanceWarning",
    "pandas.io.tests.test_pytables.datetime",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.io.tests.test_pytables.warnings",
    "pandas.util.testing.makeDataFrame",
    "pandas.util.testing.makePanel",
    "pandas.util.testing.makeStringSeries",
    "pandas.util.testing.makeTimeSeries",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_retain_index_attributes": {
  "data": {
   "lineno": 3521,
   "symbols_in_volume": [
    "dict",
    "getattr",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.compat.lrange",
    "pandas.date_range",
    "pandas.io.pytables.AttributeConflictWarning",
    "pandas.io.tests.test_pytables._maybe_remove",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_retain_index_attributes2": {
  "data": {
   "lineno": 3564,
   "symbols_in_volume": [
    "Warning",
    "dict",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.PY35",
    "pandas.compat.lrange",
    "pandas.date_range",
    "pandas.io.pytables.AttributeConflictWarning",
    "pandas.io.pytables.read_hdf",
    "pandas.io.tests.test_pytables.ensure_clean_path",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_round_trip_equals": {
  "data": {
   "lineno": 4693,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.pytables.read_hdf",
    "pandas.io.tests.test_pytables.ensure_clean_path",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_same_name_scoping": {
  "data": {
   "lineno": 2594,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.io.tests.test_pytables.pandas",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_select": {
  "data": {
   "lineno": 3031,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.Panel",
    "pandas.compat.range",
    "pandas.date_range",
    "pandas.io.pytables.Term",
    "pandas.io.tests.test_pytables._maybe_remove",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.makePanel",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_select_as_multiple": {
  "data": {
   "lineno": 4051,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "ValueError",
    "pandas.concat",
    "pandas.io.pytables.Term",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_select_columns_in_where": {
  "data": {
   "lineno": 1773,
   "symbols_in_volume": [
    "index",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex",
    "pandas.Series",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_select_dtypes": {
  "data": {
   "lineno": 3097,
   "symbols_in_volume": [
    "dict",
    "list",
    "numpy.arange",
    "numpy.float64",
    "numpy.nan",
    "numpy.random.rand",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.bdate_range",
    "pandas.compat.range",
    "pandas.io.pytables.Term",
    "pandas.io.tests.test_pytables._maybe_remove",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeDataFrame",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_select_filter_corner": {
  "data": {
   "lineno": 4149,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.io.pytables.Term",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_select_iterator": {
  "data": {
   "lineno": 3253,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "pandas.concat",
    "pandas.io.pytables.read_hdf",
    "pandas.io.tests.test_pytables._maybe_remove",
    "pandas.io.tests.test_pytables.ensure_clean_path",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_select_iterator_complete_8014": {
  "data": {
   "lineno": 3330,
   "symbols_in_volume": [
    "pandas.concat",
    "pandas.io.tests.test_pytables._maybe_remove",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_select_iterator_many_empty_frames": {
  "data": {
   "lineno": 3460,
   "symbols_in_volume": [
    "int",
    "len",
    "pandas.concat",
    "pandas.io.tests.test_pytables._maybe_remove",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_equal",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_select_iterator_non_complete_8014": {
  "data": {
   "lineno": 3404,
   "symbols_in_volume": [
    "len",
    "pandas.concat",
    "pandas.io.tests.test_pytables._maybe_remove",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_select_with_dups": {
  "data": {
   "lineno": 2907,
   "symbols_in_volume": [
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.concat",
    "pandas.date_range",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_select_with_many_inputs": {
  "data": {
   "lineno": 3206,
   "symbols_in_volume": [
    "dict",
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Timestamp",
    "pandas.bdate_range",
    "pandas.compat.range",
    "pandas.io.pytables.Term",
    "pandas.io.tests.test_pytables._maybe_remove",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_series": {
  "data": {
   "lineno": 2617,
   "symbols_in_volume": [
    "numpy.asarray",
    "object",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeStringSeries",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_sparse_frame": {
  "data": {
   "lineno": 2649,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_sparse_panel": {
  "data": {
   "lineno": 2667,
   "symbols_in_volume": [
    "dict",
    "pandas.Panel",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.makeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_sparse_series": {
  "data": {
   "lineno": 2633,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeStringSeries"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_sparse_with_compression": {
  "data": {
   "lineno": 2999,
   "symbols_in_volume": [
    "numpy.random.binomial",
    "numpy.zeros",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_start_stop": {
  "data": {
   "lineno": 4131,
   "symbols_in_volume": [
    "dict",
    "len",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.io.pytables.Term",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_store_datetime_fractional_secs": {
  "data": {
   "lineno": 4467,
   "symbols_in_volume": [
    "datetime.datetime.datetime",
    "pandas.Series",
    "pandas.io.tests.test_pytables.ensure_clean_store"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_store_datetime_mixed": {
  "data": {
   "lineno": 4542,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_store_hierarchical": {
  "data": {
   "lineno": 2821,
   "symbols_in_volume": [
    "index",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_store_index_name": {
  "data": {
   "lineno": 2840,
   "symbols_in_volume": [
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.makeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_store_index_types": {
  "data": {
   "lineno": 916,
   "symbols_in_volume": [
    "TypeError",
    "check",
    "index",
    "pandas.compat.PY3",
    "pandas.io.pytables.PerformanceWarning",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.makeDateIndex",
    "pandas.util.testing.makeFloatIndex",
    "pandas.util.testing.makeIntIndex",
    "pandas.util.testing.makePeriodIndex",
    "pandas.util.testing.makeStringIndex",
    "pandas.util.testing.makeUnicodeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_store_index_types.check": {
  "data": {
   "lineno": 922,
   "symbols_in_volume": [
    "format",
    "index",
    "len",
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.io.tests.test_pytables._maybe_remove",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_store_mixed": {
  "data": {
   "lineno": 2858,
   "symbols_in_volume": [
    "_make_one",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.io.tests.test_pytables.skip_compression",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_store_mixed._make_one": {
  "data": {
   "lineno": 2860,
   "symbols_in_volume": [
    "pandas.util.testing.makeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_store_multiindex": {
  "data": {
   "lineno": 1718,
   "symbols_in_volume": [
    "ValueError",
    "make_index",
    "numpy.zeros",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.io.tests.test_pytables._maybe_remove",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_store_multiindex.make_index": {
  "data": {
   "lineno": 1724,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.range",
    "pandas.io.tests.test_pytables.datetime"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_store_series_name": {
  "data": {
   "lineno": 2849,
   "symbols_in_volume": [
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.makeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_string_select": {
  "data": {
   "lineno": 3788,
   "symbols_in_volume": [
    "Exception",
    "numpy.nan",
    "pandas.formats.printing.pprint_thing",
    "pandas.io.pytables.Term",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.isnull",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_table_index_incompatible_dtypes": {
  "data": {
   "lineno": 1936,
   "symbols_in_volume": [
    "TypeError",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.io.tests.test_pytables.ensure_clean_store"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_table_mixed_dtypes": {
  "data": {
   "lineno": 1988,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Timestamp",
    "pandas.io.tests.test_pytables.datetime",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel4d_equal",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.makeDataFrame",
    "pandas.util.testing.makePanel",
    "pandas.util.testing.makePanel4D"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_table_values_dtypes_roundtrip": {
  "data": {
   "lineno": 1946,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "numpy.array",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_term_compat": {
  "data": {
   "lineno": 2487,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.Panel",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.io.pytables.Term",
    "pandas.io.tests.test_pytables.datetime",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_terms": {
  "data": {
   "lineno": 2401,
   "symbols_in_volume": [
    "FutureWarning",
    "NotImplementedError",
    "TypeError",
    "dict",
    "pandas.Panel",
    "pandas.Panel.fromDict",
    "pandas.io.pytables.Term",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_panel4d_equal",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.makeDataFrame",
    "pandas.util.testing.makePanel",
    "pandas.util.testing.makePanel4D"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_timeseries_preepoch": {
  "data": {
   "lineno": 2750,
   "symbols_in_volume": [
    "OverflowError",
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.bdate_range",
    "pandas.io.tests.test_pytables.nose",
    "pandas.io.tests.test_pytables.sys",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_to_hdf_with_object_column_names": {
  "data": {
   "lineno": 4740,
   "symbols_in_volume": [
    "ValueError",
    "index",
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.PY3",
    "pandas.io.tests.test_pytables.ensure_clean_path",
    "pandas.io.tests.test_pytables.pandas",
    "pandas.util.testing.makeCategoricalIndex",
    "pandas.util.testing.makeDateIndex",
    "pandas.util.testing.makeFloatIndex",
    "pandas.util.testing.makeIntIndex",
    "pandas.util.testing.makePeriodIndex",
    "pandas.util.testing.makeStringIndex",
    "pandas.util.testing.makeTimedeltaIndex",
    "pandas.util.testing.makeUnicodeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_tseries_indices_frame": {
  "data": {
   "lineno": 4496,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeDateIndex",
    "pandas.util.testing.makePeriodIndex",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_tseries_indices_series": {
  "data": {
   "lineno": 4475,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeDateIndex",
    "pandas.util.testing.makePeriodIndex",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_tuple_index": {
  "data": {
   "lineno": 2691,
   "symbols_in_volume": [
    "Warning",
    "col",
    "numpy.arange",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.PY35",
    "pandas.io.pytables.PerformanceWarning",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_unicode_index": {
  "data": {
   "lineno": 4517,
   "symbols_in_volume": [
    "f",
    "pandas.compat.u",
    "pandas.io.pytables.PerformanceWarning",
    "pandas.io.tests.test_pytables.compat_assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_unicode_index.f": {
  "data": {
   "lineno": 4521,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_unicode_longer_encoded": {
  "data": {
   "lineno": 4527,
   "symbols_in_volume": [
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.io.tests.test_pytables.pandas",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_unimplemented_dtypes_table_columns": {
  "data": {
   "lineno": 2038,
   "symbols_in_volume": [
    "TypeError",
    "f",
    "pandas.compat.PY3",
    "pandas.compat.u",
    "pandas.io.tests.test_pytables.datetime",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.makeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_versioning": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "Exception",
    "pandas.io.tests.test_pytables._maybe_remove",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.makeDataFrame",
    "pandas.util.testing.makeTimeDataFrame",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_wide": {
  "data": {
   "lineno": 2897,
   "symbols_in_volume": [
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.makePanel"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_wide_table": {
  "data": {
   "lineno": 2902,
   "symbols_in_volume": [
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.makePanel"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestHDFStore.test_wide_table_dups": {
  "data": {
   "lineno": 2966,
   "symbols_in_volume": [
    "pandas.io.pytables.DuplicateWarning",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.makePanel"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestTimezones": {
  "data": {
   "lineno": 4983,
   "symbols_in_volume": [
    "pandas.io.tests.test_pytables.Base",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_pytables.TestTimezones._compare_with_tz": {
  "data": {
   "lineno": 4985,
   "symbols_in_volume": [
    "AssertionError",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestTimezones.test_append_with_timezones_dateutil": {
  "data": {
   "lineno": 4997,
   "symbols_in_volume": [
    "ValueError",
    "datetime.timedelta",
    "dict",
    "gettz",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.compat.lrange",
    "pandas.compat.range",
    "pandas.date_range",
    "pandas.io.pytables.Term",
    "pandas.io.tests.test_pytables._maybe_remove",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.tslib.maybe_get_tz",
    "pandas.util.testing._skip_if_no_dateutil",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestTimezones.test_append_with_timezones_pytz": {
  "data": {
   "lineno": 5073,
   "symbols_in_volume": [
    "ValueError",
    "datetime.timedelta",
    "dict",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.compat.lrange",
    "pandas.compat.range",
    "pandas.date_range",
    "pandas.io.pytables.Term",
    "pandas.io.tests.test_pytables._maybe_remove",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestTimezones.test_dst_transitions": {
  "data": {
   "lineno": 5266,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.io.tests.test_pytables._maybe_remove",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.io.tests.test_pytables.pandas",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestTimezones.test_fixed_offset_tz": {
  "data": {
   "lineno": 5192,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.io.tests.test_pytables.ensure_clean_store"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestTimezones.test_legacy_datetimetz_object": {
  "data": {
   "lineno": 5254,
   "symbols_in_volume": [
    "dict",
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.compat.range",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.get_data_path"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestTimezones.test_store_timezone": {
  "data": {
   "lineno": 5202,
   "symbols_in_volume": [
    "datetime.datetime.date",
    "pandas.DataFrame",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.io.tests.test_pytables.nose",
    "pandas.io.tests.test_pytables.os",
    "pandas.io.tests.test_pytables.platform",
    "pandas.util.testing.assert_frame_equal",
    "setTZ"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestTimezones.test_store_timezone.setTZ": {
  "data": {
   "lineno": 5227,
   "symbols_in_volume": [
    "pandas.io.tests.test_pytables.os",
    "pandas.io.tests.test_pytables.time"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestTimezones.test_timezones_fixed": {
  "data": {
   "lineno": 5171,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.date_range",
    "pandas.io.tests.test_pytables._maybe_remove",
    "pandas.io.tests.test_pytables.ensure_clean_store",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.TestTimezones.test_tseries_select_index_column": {
  "data": {
   "lineno": 5139,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.date_range",
    "pandas.io.tests.test_pytables.ensure_clean_store"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables._default_compressor": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "pandas.io.tests.test_pytables._maybe_remove": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables._multiprocess_can_split_": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "pandas.io.tests.test_pytables._tables": {
  "data": {
   "shadows": "pandas.io.pytables._tables"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables._test_sort": {
  "data": {
   "lineno": 5282,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pandas.DataFrame",
    "pandas.Panel",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.assert_panel4d_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_panel4d_equal"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.assert_panel_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_panel_equal"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.assert_produces_warning": {
  "data": {
   "shadows": "pandas.util.testing.assert_produces_warning"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.bdate_range": {
  "data": {
   "shadows": "pandas.bdate_range"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.compat_assert_produces_warning": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "f",
    "pandas.compat.PY3",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.concat": {
  "data": {
   "shadows": "pandas.concat"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.create_tempfile": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "pandas.io.tests.test_pytables.os",
    "pandas.io.tests.test_pytables.tempfile"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.ensure_clean_path": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "isinstance",
    "list",
    "pandas.io.tests.test_pytables.create_tempfile",
    "pandas.io.tests.test_pytables.safe_remove"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.ensure_clean_store": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "len",
    "pandas.io.pytables.HDFStore",
    "pandas.io.tests.test_pytables.create_tempfile",
    "pandas.io.tests.test_pytables.os",
    "pandas.io.tests.test_pytables.safe_close",
    "pandas.io.tests.test_pytables.safe_remove"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.get_store": {
  "data": {
   "shadows": "pandas.io.pytables.get_store"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.is_platform_windows": {
  "data": {
   "shadows": "pandas.compat.is_platform_windows"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.maybe_get_tz": {
  "data": {
   "shadows": "pandas.tslib.maybe_get_tz"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.pandas": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.pprint_thing": {
  "data": {
   "shadows": "pandas.formats.printing.pprint_thing"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.pytables": {
  "data": {
   "shadows": "pandas.io.pytables"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.read_hdf": {
  "data": {
   "shadows": "pandas.io.pytables.read_hdf"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.safe_close": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.safe_remove": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "pandas.io.tests.test_pytables.os"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_pytables.skip_compression": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "pandas.io.tests.test_pytables.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.tables": {
  "data": {
   "shadows": "tables"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.timedelta_range": {
  "data": {
   "shadows": "pandas.timedelta_range"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.io.tests.test_pytables.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.io.tests.test_sql": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "bool",
    "datetime.datetime",
    "float",
    "int",
    "numpy.float64",
    "numpy.str_",
    "pandas.compat.binary_type",
    "pandas.compat.text_type",
    "pandas.core.datetools.format",
    "pandas.io.tests.test_sql.nose",
    "str",
    "type"
   ]
  },
  "type": "module"
 },
 "pandas.io.tests.test_sql.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.io.tests.test_sql.Error": {
  "data": {
   "shadows": "pymysql.err.Error"
  },
  "type": "import"
 },
 "pandas.io.tests.test_sql.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.io.tests.test_sql.MixInBase": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_sql.MixInBase.tearDown": {
  "data": {
   "lineno": 180
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.io.tests.test_sql.MySQLMixIn": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "pandas.io.tests.test_sql.MixInBase"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_sql.MySQLMixIn._close_conn": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "pymysql.err.Error"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.MySQLMixIn._get_all_tables": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.MySQLMixIn.drop_table": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "pandas.io.sql._get_valid_mysql_name"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.PandasSQLTest": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "pandas.io.tests.test_sql.unittest"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_sql.PandasSQLTest._check_iris_loaded_frame": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "issubclass",
    "numpy.floating",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.PandasSQLTest._count_rows": {
  "data": {
   "lineno": 348
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.PandasSQLTest._execute_sql": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.PandasSQLTest._get_exec": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.PandasSQLTest._load_iris_data": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "next",
    "pandas.io.tests.test_sql.SQL_STRINGS",
    "pandas.io.tests.test_sql.csv",
    "pandas.io.tests.test_sql.io",
    "pandas.io.tests.test_sql.os",
    "pandas.util.testing.get_data_path"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.PandasSQLTest._load_iris_view": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "pandas.io.tests.test_sql.SQL_STRINGS"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.PandasSQLTest._load_raw_sql": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "pandas.io.tests.test_sql.SQL_STRINGS"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.PandasSQLTest._load_test1_data": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.PandasSQLTest._load_test2_data": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "dict",
    "pandas.DataFrame",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.PandasSQLTest._load_test3_data": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.PandasSQLTest._read_sql_iris": {
  "data": {
   "lineno": 353
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.PandasSQLTest._read_sql_iris_named_parameter": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "pandas.io.tests.test_sql.SQL_STRINGS"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.PandasSQLTest._read_sql_iris_parameter": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "pandas.io.tests.test_sql.SQL_STRINGS"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.PandasSQLTest._roundtrip": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.PandasSQLTest._to_sql": {
  "data": {
   "lineno": 369
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.PandasSQLTest._to_sql_append": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.PandasSQLTest._to_sql_empty": {
  "data": {
   "lineno": 379
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.PandasSQLTest._to_sql_fail": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.PandasSQLTest._to_sql_replace": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.PandasSQLTest._to_sql_save_index": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "pandas.DataFrame.from_records"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.PandasSQLTest._transaction_test": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "Exception",
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.SQLALCHEMY_INSTALLED": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "pandas.io.tests.test_sql.SQLAlchemyMixIn": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "pandas.io.tests.test_sql.MixInBase"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_sql.SQLAlchemyMixIn._close_conn": {
  "data": {
   "lineno": 234
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.SQLAlchemyMixIn._get_all_tables": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "pandas.io.tests.test_sql.sqlalchemy"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.SQLAlchemyMixIn.drop_table": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "pandas.io.sql.SQLDatabase"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.SQL_STRINGS": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "pandas.io.tests.test_sql.SQLiteMixIn": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "pandas.io.tests.test_sql.MixInBase"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_sql.SQLiteMixIn._close_conn": {
  "data": {
   "lineno": 219
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.SQLiteMixIn._get_all_tables": {
  "data": {
   "lineno": 214
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.SQLiteMixIn.drop_table": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "pandas.io.sql._get_valid_sqlite_name"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.io.tests.test_sql.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.io.tests.test_sql.TestMySQLAlchemy": {
  "data": {
   "lineno": 1870,
   "symbols_in_volume": [
    "pandas.io.tests.test_sql._TestMySQLAlchemy",
    "pandas.io.tests.test_sql._TestSQLAlchemy"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_sql.TestMySQLAlchemyConn": {
  "data": {
   "lineno": 1874,
   "symbols_in_volume": [
    "pandas.io.tests.test_sql._TestMySQLAlchemy",
    "pandas.io.tests.test_sql._TestSQLAlchemyConn"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_sql.TestMySQLLegacy": {
  "data": {
   "lineno": 2070,
   "symbols_in_volume": [
    "pandas.io.tests.test_sql.MySQLMixIn",
    "pandas.io.tests.test_sql.TestSQLiteFallback"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_sql.TestMySQLLegacy._count_rows": {
  "data": {
   "lineno": 2101
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestMySQLLegacy._get_index_columns": {
  "data": {
   "lineno": 2127,
   "symbols_in_volume": [
    "list",
    "pandas.io.sql.read_sql_query",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestMySQLLegacy.connect": {
  "data": {
   "lineno": 2096,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestMySQLLegacy.setUp": {
  "data": {
   "lineno": 2108,
   "symbols_in_volume": [
    "pandas.io.sql.SQLiteDatabase",
    "pandas.io.tests.test_sql.nose"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestMySQLLegacy.setUpClass": {
  "data": {
   "lineno": 2077,
   "symbols_in_volume": [
    "classmethod",
    "pandas.io.tests.test_sql.nose"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestMySQLLegacy.setup_driver": {
  "data": {
   "lineno": 2088,
   "symbols_in_volume": [
    "ImportError",
    "classmethod",
    "pandas.io.tests.test_sql.nose",
    "pandas.io.tests.test_sql.pymysql"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestMySQLLegacy.test_a_deprecation": {
  "data": {
   "lineno": 2119,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.io.sql.has_table",
    "pandas.io.sql.to_sql",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestMySQLLegacy.test_illegal_names": {
  "data": {
   "lineno": 2150,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestMySQLLegacy.test_to_sql_save_index": {
  "data": {
   "lineno": 2147
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestPostgreSQLAlchemy": {
  "data": {
   "lineno": 1878,
   "symbols_in_volume": [
    "pandas.io.tests.test_sql._TestPostgreSQLAlchemy",
    "pandas.io.tests.test_sql._TestSQLAlchemy"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_sql.TestPostgreSQLAlchemyConn": {
  "data": {
   "lineno": 1882,
   "symbols_in_volume": [
    "pandas.io.tests.test_sql._TestPostgreSQLAlchemy",
    "pandas.io.tests.test_sql._TestSQLAlchemyConn"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_sql.TestSQLApi": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "pandas.io.tests.test_sql.SQLAlchemyMixIn",
    "pandas.io.tests.test_sql._TestSQLApi"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_sql.TestSQLApi._get_index_columns": {
  "data": {
   "lineno": 933,
   "symbols_in_volume": [
    "sqlalchemy.engine.reflection.Inspector.from_engine"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestSQLApi._make_iris_table_metadata": {
  "data": {
   "lineno": 969,
   "symbols_in_volume": [
    "pandas.io.tests.test_sql.sqlalchemy"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestSQLApi.connect": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": [
    "pandas.io.tests.test_sql.SQLALCHEMY_INSTALLED",
    "pandas.io.tests.test_sql.nose",
    "pandas.io.tests.test_sql.sqlalchemy"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestSQLApi.test_not_reflect_all_tables": {
  "data": {
   "lineno": 903,
   "symbols_in_volume": [
    "len",
    "pandas.io.sql.read_sql_query",
    "pandas.io.sql.read_sql_table",
    "pandas.io.tests.test_sql.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestSQLApi.test_query_by_select_obj": {
  "data": {
   "lineno": 990,
   "symbols_in_volume": [
    "pandas.io.sql.read_sql",
    "pandas.io.tests.test_sql.sqlalchemy",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestSQLApi.test_query_by_text_obj": {
  "data": {
   "lineno": 982,
   "symbols_in_volume": [
    "pandas.io.sql.read_sql",
    "pandas.io.tests.test_sql.sqlalchemy",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestSQLApi.test_read_sql_delegate": {
  "data": {
   "lineno": 892,
   "symbols_in_volume": [
    "pandas.io.sql.read_sql",
    "pandas.io.sql.read_sql_query",
    "pandas.io.sql.read_sql_table",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestSQLApi.test_read_table_columns": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "pandas.io.sql.read_sql_table",
    "pandas.io.sql.to_sql"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestSQLApi.test_read_table_index_col": {
  "data": {
   "lineno": 871,
   "symbols_in_volume": [
    "pandas.io.sql.read_sql_table",
    "pandas.io.sql.to_sql"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestSQLApi.test_sqlalchemy_type_mapping": {
  "data": {
   "lineno": 940,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame",
    "pandas.io.sql.SQLDatabase",
    "pandas.io.sql.SQLTable",
    "pandas.to_datetime",
    "sqlalchemy.sql.sqltypes.DateTime"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestSQLApi.test_to_sql_read_sql_with_database_uri": {
  "data": {
   "lineno": 950,
   "symbols_in_volume": [
    "pandas.io.sql.read_sql",
    "pandas.io.sql.read_sql_query",
    "pandas.io.sql.read_sql_table",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestSQLApi.test_warning_case_insensitive_table_name": {
  "data": {
   "lineno": 919,
   "symbols_in_volume": [
    "len",
    "pandas.io.tests.test_sql.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestSQLApiConn": {
  "data": {
   "lineno": 1024,
   "symbols_in_volume": [
    "pandas.io.tests.test_sql.TestSQLApi",
    "pandas.io.tests.test_sql._EngineToConnMixin"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_sql.TestSQLiteAlchemy": {
  "data": {
   "lineno": 1886,
   "symbols_in_volume": [
    "pandas.io.tests.test_sql._TestSQLAlchemy",
    "pandas.io.tests.test_sql._TestSQLiteAlchemy"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_sql.TestSQLiteAlchemyConn": {
  "data": {
   "lineno": 1890,
   "symbols_in_volume": [
    "pandas.io.tests.test_sql._TestSQLAlchemyConn",
    "pandas.io.tests.test_sql._TestSQLiteAlchemy"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_sql.TestSQLiteFallback": {
  "data": {
   "lineno": 1897,
   "symbols_in_volume": [
    "pandas.io.tests.test_sql.PandasSQLTest",
    "pandas.io.tests.test_sql.SQLiteMixIn"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_sql.TestSQLiteFallback._get_index_columns": {
  "data": {
   "lineno": 1985,
   "symbols_in_volume": [
    "pandas.io.sql.read_sql_query"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestSQLiteFallback._get_sqlite_column_type": {
  "data": {
   "lineno": 2002,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestSQLiteFallback.connect": {
  "data": {
   "lineno": 1904,
   "symbols_in_volume": [
    "classmethod",
    "pandas.io.tests.test_sql.sqlite3"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestSQLiteFallback.setUp": {
  "data": {
   "lineno": 1908,
   "symbols_in_volume": [
    "pandas.io.sql.SQLiteDatabase"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestSQLiteFallback.test_create_and_drop_table": {
  "data": {
   "lineno": 1944,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestSQLiteFallback.test_datetime_date": {
  "data": {
   "lineno": 1964,
   "symbols_in_volume": [
    "datetime.date",
    "pandas.DataFrame",
    "pandas.io.sql.read_sql_query",
    "pandas.util.testing.assert_frame_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestSQLiteFallback.test_datetime_time": {
  "data": {
   "lineno": 1975,
   "symbols_in_volume": [
    "datetime.time",
    "pandas.DataFrame",
    "pandas.io.sql.read_sql_query",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestSQLiteFallback.test_dtype": {
  "data": {
   "lineno": 2009,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "pandas.DataFrame",
    "pandas.io.tests.test_sql.nose"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestSQLiteFallback.test_execute_sql": {
  "data": {
   "lineno": 1961
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestSQLiteFallback.test_illegal_names": {
  "data": {
   "lineno": 2048,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "pandas.DataFrame",
    "pandas.io.sql.table_exists"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestSQLiteFallback.test_invalid_flavor": {
  "data": {
   "lineno": 1916,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.io.sql.SQLiteDatabase"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestSQLiteFallback.test_notnull_dtype": {
  "data": {
   "lineno": 2028,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.io.tests.test_sql.nose"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestSQLiteFallback.test_read_sql": {
  "data": {
   "lineno": 1920
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestSQLiteFallback.test_read_sql_named_parameter": {
  "data": {
   "lineno": 1926
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestSQLiteFallback.test_read_sql_parameter": {
  "data": {
   "lineno": 1923
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestSQLiteFallback.test_roundtrip": {
  "data": {
   "lineno": 1958
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestSQLiteFallback.test_to_sql": {
  "data": {
   "lineno": 1929
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestSQLiteFallback.test_to_sql_append": {
  "data": {
   "lineno": 1941
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestSQLiteFallback.test_to_sql_empty": {
  "data": {
   "lineno": 1932
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestSQLiteFallback.test_to_sql_fail": {
  "data": {
   "lineno": 1935
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestSQLiteFallback.test_to_sql_replace": {
  "data": {
   "lineno": 1938
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestSQLiteFallback.test_to_sql_save_index": {
  "data": {
   "lineno": 1996
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestSQLiteFallback.test_transactions": {
  "data": {
   "lineno": 1999
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestSQLiteFallbackApi": {
  "data": {
   "lineno": 1028,
   "symbols_in_volume": [
    "pandas.io.tests.test_sql.SQLiteMixIn",
    "pandas.io.tests.test_sql._TestSQLApi"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_sql.TestSQLiteFallbackApi._get_sqlite_column_type": {
  "data": {
   "lineno": 1088,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestSQLiteFallbackApi.connect": {
  "data": {
   "lineno": 1036,
   "symbols_in_volume": [
    "pandas.io.tests.test_sql.sqlite3"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestSQLiteFallbackApi.test_get_schema2": {
  "data": {
   "lineno": 1072,
   "symbols_in_volume": [
    "pandas.io.sql.get_schema"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestSQLiteFallbackApi.test_read_sql_delegate": {
  "data": {
   "lineno": 1057,
   "symbols_in_volume": [
    "pandas.io.sql.DatabaseError",
    "pandas.io.sql.read_sql",
    "pandas.io.sql.read_sql_query",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestSQLiteFallbackApi.test_safe_names_warning": {
  "data": {
   "lineno": 1064,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.sql.to_sql",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestSQLiteFallbackApi.test_sql_open_close": {
  "data": {
   "lineno": 1039,
   "symbols_in_volume": [
    "pandas.io.sql.read_sql_query",
    "pandas.io.sql.to_sql",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestSQLiteFallbackApi.test_sqlite_type_mapping": {
  "data": {
   "lineno": 1095,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.sql.SQLiteDatabase",
    "pandas.io.sql.SQLiteTable",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestSQLiteFallbackApi.test_tquery": {
  "data": {
   "lineno": 1077,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.io.sql.tquery",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestSQLiteFallbackApi.test_uquery": {
  "data": {
   "lineno": 1083,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.io.sql.uquery",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestXMySQL": {
  "data": {
   "lineno": 2465,
   "symbols_in_volume": [
    "pandas.io.tests.test_sql.MySQLMixIn",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_sql.TestXMySQL._check_roundtrip": {
  "data": {
   "lineno": 2661,
   "symbols_in_volume": [
    "len",
    "pandas.Index",
    "pandas.compat.lrange",
    "pandas.io.sql.read_sql",
    "pandas.io.sql.to_sql",
    "pandas.io.tests.test_sql._skip_if_no_pymysql",
    "pandas.io.tests.test_sql.warnings",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestXMySQL.setUp": {
  "data": {
   "lineno": 2496,
   "symbols_in_volume": [
    "pandas.io.tests.test_sql._skip_if_no_pymysql",
    "pandas.io.tests.test_sql.nose",
    "pandas.io.tests.test_sql.pymysql"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestXMySQL.setUpClass": {
  "data": {
   "lineno": 2467,
   "symbols_in_volume": [
    "classmethod",
    "pandas.io.tests.test_sql._skip_if_no_pymysql",
    "pandas.io.tests.test_sql.nose",
    "pandas.io.tests.test_sql.pymysql"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestXMySQL.test_basic": {
  "data": {
   "lineno": 2522,
   "symbols_in_volume": [
    "pandas.io.tests.test_sql._skip_if_no_pymysql",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestXMySQL.test_chunksize_read_type": {
  "data": {
   "lineno": 2548,
   "symbols_in_volume": [
    "next",
    "pandas.io.sql.to_sql",
    "pandas.io.tests.test_sql._skip_if_no_pymysql",
    "pandas.read_sql_query",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestXMySQL.test_execute": {
  "data": {
   "lineno": 2563,
   "symbols_in_volume": [
    "pandas.io.sql.execute",
    "pandas.io.sql.get_schema",
    "pandas.io.sql.read_sql",
    "pandas.io.tests.test_sql._skip_if_no_pymysql",
    "pandas.io.tests.test_sql.warnings",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeDataFrame",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestXMySQL.test_execute_closed_connection": {
  "data": {
   "lineno": 2629,
   "symbols_in_volume": [
    "Exception",
    "pandas.compat.StringIO",
    "pandas.io.sql.execute",
    "pandas.io.sql.tquery",
    "pandas.io.tests.test_sql._skip_if_no_pymysql",
    "pandas.io.tests.test_sql.sys"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestXMySQL.test_execute_fail": {
  "data": {
   "lineno": 2602,
   "symbols_in_volume": [
    "Exception",
    "pandas.compat.StringIO",
    "pandas.io.sql.execute",
    "pandas.io.tests.test_sql._skip_if_no_pymysql",
    "pandas.io.tests.test_sql.sys"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestXMySQL.test_if_exists": {
  "data": {
   "lineno": 2757,
   "symbols_in_volume": [
    "ValueError",
    "clean_up",
    "pandas.DataFrame",
    "pandas.io.sql.to_sql",
    "pandas.io.sql.tquery",
    "pandas.io.tests.test_sql._skip_if_no_pymysql"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestXMySQL.test_if_exists.clean_up": {
  "data": {
   "lineno": 2765
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestXMySQL.test_keyword_as_column_names": {
  "data": {
   "lineno": 2751,
   "symbols_in_volume": [
    "numpy.ones",
    "pandas.DataFrame",
    "pandas.io.sql.to_sql",
    "pandas.io.tests.test_sql._skip_if_no_pymysql"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestXMySQL.test_na_roundtrip": {
  "data": {
   "lineno": 2657,
   "symbols_in_volume": [
    "pandas.io.tests.test_sql._skip_if_no_pymysql"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestXMySQL.test_schema": {
  "data": {
   "lineno": 2583,
   "symbols_in_volume": [
    "len",
    "pandas.io.sql.get_schema",
    "pandas.io.tests.test_sql._skip_if_no_pymysql",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestXMySQL.test_tquery": {
  "data": {
   "lineno": 2699,
   "symbols_in_volume": [
    "ImportError",
    "pandas.Series",
    "pandas.compat.StringIO",
    "pandas.io.sql.DatabaseError",
    "pandas.io.sql.to_sql",
    "pandas.io.sql.tquery",
    "pandas.io.tests.test_sql.nose",
    "pandas.io.tests.test_sql.sys",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestXMySQL.test_uquery": {
  "data": {
   "lineno": 2725,
   "symbols_in_volume": [
    "ImportError",
    "pandas.compat.StringIO",
    "pandas.io.sql.DatabaseError",
    "pandas.io.sql.to_sql",
    "pandas.io.sql.tquery",
    "pandas.io.sql.uquery",
    "pandas.io.tests.test_sql.nose",
    "pandas.io.tests.test_sql.sys",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestXMySQL.test_write_row_by_row": {
  "data": {
   "lineno": 2527,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.io.sql.get_schema",
    "pandas.io.sql.read_sql",
    "pandas.io.sql.tquery",
    "pandas.io.tests.test_sql._skip_if_no_pymysql",
    "pandas.io.tests.test_sql.format_query",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestXSQLite": {
  "data": {
   "lineno": 2217,
   "symbols_in_volume": [
    "pandas.io.tests.test_sql.SQLiteMixIn",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_sql.TestXSQLite._check_roundtrip": {
  "data": {
   "lineno": 2330,
   "symbols_in_volume": [
    "len",
    "pandas.Index",
    "pandas.compat.lrange",
    "pandas.io.sql.read_sql",
    "pandas.io.sql.to_sql",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestXSQLite.setUp": {
  "data": {
   "lineno": 2219,
   "symbols_in_volume": [
    "pandas.io.tests.test_sql.sqlite3"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestXSQLite.test_basic": {
  "data": {
   "lineno": 2222,
   "symbols_in_volume": [
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestXSQLite.test_execute": {
  "data": {
   "lineno": 2247,
   "symbols_in_volume": [
    "pandas.io.sql.execute",
    "pandas.io.sql.get_schema",
    "pandas.io.sql.read_sql",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeDataFrame",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestXSQLite.test_execute_closed_connection": {
  "data": {
   "lineno": 2302,
   "symbols_in_volume": [
    "Exception",
    "pandas.compat.StringIO",
    "pandas.io.sql.execute",
    "pandas.io.sql.tquery",
    "pandas.io.tests.test_sql.sys"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestXSQLite.test_execute_fail": {
  "data": {
   "lineno": 2278,
   "symbols_in_volume": [
    "Exception",
    "pandas.compat.StringIO",
    "pandas.io.sql.execute",
    "pandas.io.tests.test_sql.sys"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestXSQLite.test_if_exists": {
  "data": {
   "lineno": 2407,
   "symbols_in_volume": [
    "ValueError",
    "clean_up",
    "pandas.DataFrame",
    "pandas.io.sql.to_sql",
    "pandas.io.sql.tquery"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestXSQLite.test_if_exists.clean_up": {
  "data": {
   "lineno": 2414
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestXSQLite.test_keyword_as_column_names": {
  "data": {
   "lineno": 2387,
   "symbols_in_volume": [
    "numpy.ones",
    "pandas.DataFrame",
    "pandas.io.sql.to_sql"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestXSQLite.test_na_roundtrip": {
  "data": {
   "lineno": 2327
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestXSQLite.test_onecolumn_of_integer": {
  "data": {
   "lineno": 2391,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.sql.read_sql",
    "pandas.io.sql.to_sql",
    "pandas.util.testing.assert_frame_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestXSQLite.test_schema": {
  "data": {
   "lineno": 2262,
   "symbols_in_volume": [
    "len",
    "pandas.io.sql.get_schema",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestXSQLite.test_tquery": {
  "data": {
   "lineno": 2351,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.StringIO",
    "pandas.io.sql.DatabaseError",
    "pandas.io.sql.to_sql",
    "pandas.io.sql.tquery",
    "pandas.io.tests.test_sql.sys",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestXSQLite.test_uquery": {
  "data": {
   "lineno": 2369,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.io.sql.DatabaseError",
    "pandas.io.sql.to_sql",
    "pandas.io.sql.tquery",
    "pandas.io.sql.uquery",
    "pandas.io.tests.test_sql.sys",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.TestXSQLite.test_write_row_by_row": {
  "data": {
   "lineno": 2226,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.io.sql.get_schema",
    "pandas.io.sql.read_sql",
    "pandas.io.sql.tquery",
    "pandas.io.tests.test_sql.format_query",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.io.tests.test_sql._EngineToConnMixin": {
  "data": {
   "lineno": 1002,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_sql._EngineToConnMixin.setUp": {
  "data": {
   "lineno": 1007,
   "symbols_in_volume": [
    "pandas.io.sql.SQLDatabase",
    "pandas.io.tests.test_sql._EngineToConnMixin",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._EngineToConnMixin.tearDown": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": [
    "pandas.io.sql.SQLDatabase",
    "pandas.io.tests.test_sql._EngineToConnMixin",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestMySQLAlchemy": {
  "data": {
   "lineno": 1716,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_sql._TestMySQLAlchemy.connect": {
  "data": {
   "lineno": 1723,
   "symbols_in_volume": [
    "classmethod",
    "pandas.io.tests.test_sql.sqlalchemy"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestMySQLAlchemy.setup_driver": {
  "data": {
   "lineno": 1728,
   "symbols_in_volume": [
    "ImportError",
    "classmethod",
    "pandas.io.tests.test_sql.nose"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestMySQLAlchemy.test_default_type_conversion": {
  "data": {
   "lineno": 1736,
   "symbols_in_volume": [
    "issubclass",
    "numpy.floating",
    "numpy.integer",
    "pandas.io.sql.read_sql_table"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestMySQLAlchemy.test_read_procedure": {
  "data": {
   "lineno": 1754,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.sql.read_sql",
    "pandas.io.sql.read_sql_query",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestPostgreSQLAlchemy": {
  "data": {
   "lineno": 1785,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_sql._TestPostgreSQLAlchemy.connect": {
  "data": {
   "lineno": 1792,
   "symbols_in_volume": [
    "classmethod",
    "pandas.io.tests.test_sql.sqlalchemy"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestPostgreSQLAlchemy.setup_driver": {
  "data": {
   "lineno": 1797,
   "symbols_in_volume": [
    "ImportError",
    "classmethod",
    "pandas.io.tests.test_sql.nose"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestPostgreSQLAlchemy.test_schema_support": {
  "data": {
   "lineno": 1805,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pandas.DataFrame",
    "pandas.concat",
    "pandas.io.sql.SQLDatabase",
    "pandas.io.sql.read_sql_table",
    "pandas.io.tests.test_sql.sqlalchemy",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy": {
  "data": {
   "lineno": 1111,
   "symbols_in_volume": [
    "pandas.io.tests.test_sql.PandasSQLTest",
    "pandas.io.tests.test_sql.SQLAlchemyMixIn"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy._get_index_columns": {
  "data": {
   "lineno": 1504,
   "symbols_in_volume": [
    "sqlalchemy.engine.reflection.Inspector.from_engine"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy.connect": {
  "data": {
   "lineno": 1151,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy.setUp": {
  "data": {
   "lineno": 1134
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy.setUpClass": {
  "data": {
   "lineno": 1121,
   "symbols_in_volume": [
    "classmethod",
    "pandas.io.tests.test_sql.nose",
    "pandas.io.tests.test_sql.sqlalchemy"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy.setup_connect": {
  "data": {
   "lineno": 1155,
   "symbols_in_volume": [
    "pandas.io.sql.SQLDatabase",
    "pandas.io.tests.test_sql.nose",
    "pandas.io.tests.test_sql.sqlalchemy"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy.setup_driver": {
  "data": {
   "lineno": 1147,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy.setup_import": {
  "data": {
   "lineno": 1141,
   "symbols_in_volume": [
    "classmethod",
    "pandas.io.tests.test_sql.SQLALCHEMY_INSTALLED",
    "pandas.io.tests.test_sql.nose"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy.test_aread_sql": {
  "data": {
   "lineno": 1165
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy.test_bigint": {
  "data": {
   "lineno": 1254,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.sql.read_sql_table",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy.test_connectable_issue_example": {
  "data": {
   "lineno": 1609,
   "symbols_in_volume": [
    "main",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy.test_connectable_issue_example.bar": {
  "data": {
   "lineno": 1617
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy.test_connectable_issue_example.foo": {
  "data": {
   "lineno": 1613,
   "symbols_in_volume": [
    "pandas.io.sql.read_sql_query"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy.test_connectable_issue_example.main": {
  "data": {
   "lineno": 1621
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy.test_create_table": {
  "data": {
   "lineno": 1189,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.sql.SQLDatabase"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy.test_date_parsing": {
  "data": {
   "lineno": 1344,
   "symbols_in_volume": [
    "issubclass",
    "numpy.datetime64",
    "pandas.io.sql.read_sql_table"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy.test_datetime": {
  "data": {
   "lineno": 1378,
   "symbols_in_volume": [
    "isinstance",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.compat.string_types",
    "pandas.date_range",
    "pandas.io.sql.read_sql_query",
    "pandas.io.sql.read_sql_table",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy.test_datetime_NaT": {
  "data": {
   "lineno": 1398,
   "symbols_in_volume": [
    "isinstance",
    "numpy.arange",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.string_types",
    "pandas.date_range",
    "pandas.io.sql.read_sql_query",
    "pandas.io.sql.read_sql_table",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy.test_datetime_date": {
  "data": {
   "lineno": 1417,
   "symbols_in_volume": [
    "datetime.date",
    "pandas.DataFrame",
    "pandas.io.sql.read_sql_table",
    "pandas.to_datetime",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy.test_datetime_time": {
  "data": {
   "lineno": 1425,
   "symbols_in_volume": [
    "datetime.time",
    "pandas.DataFrame",
    "pandas.io.sql.read_sql_query",
    "pandas.io.sql.read_sql_table",
    "pandas.io.sql.to_sql",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy.test_datetime_with_timezone": {
  "data": {
   "lineno": 1270,
   "symbols_in_volume": [
    "check",
    "hasattr",
    "list",
    "pandas.concat",
    "pandas.core.common.is_datetime64_dtype",
    "pandas.core.common.is_datetime64tz_dtype",
    "pandas.core.common.is_object_dtype",
    "pandas.io.sql.read_sql_table",
    "pandas.io.tests.test_sql.nose",
    "pandas.read_sql_query",
    "pandas.util.testing.assert_series_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy.test_datetime_with_timezone.check": {
  "data": {
   "lineno": 1275,
   "symbols_in_volume": [
    "AssertionError",
    "pandas.Timestamp",
    "pandas.core.common.is_datetime64_dtype",
    "pandas.core.common.is_datetime64tz_dtype",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy.test_default_date_load": {
  "data": {
   "lineno": 1262,
   "symbols_in_volume": [
    "issubclass",
    "numpy.datetime64",
    "pandas.io.sql.read_sql_table"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy.test_default_type_conversion": {
  "data": {
   "lineno": 1237,
   "symbols_in_volume": [
    "issubclass",
    "numpy.bool_",
    "numpy.floating",
    "numpy.integer",
    "numpy.object",
    "pandas.io.sql.read_sql_table"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy.test_double_precision": {
  "data": {
   "lineno": 1580,
   "symbols_in_volume": [
    "isinstance",
    "numpy.round",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.io.sql.read_sql_table",
    "pandas.io.tests.test_sql.sqlalchemy",
    "sqlalchemy.sql.sqltypes.BigInteger",
    "sqlalchemy.sql.sqltypes.Float",
    "sqlalchemy.sql.sqltypes.Integer",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy.test_drop_table": {
  "data": {
   "lineno": 1200,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.sql.SQLDatabase"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy.test_dtype": {
  "data": {
   "lineno": 1534,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pandas.DataFrame",
    "pandas.io.tests.test_sql.sqlalchemy",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy.test_execute_sql": {
  "data": {
   "lineno": 1220
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy.test_get_schema_create_table": {
  "data": {
   "lineno": 1517,
   "symbols_in_volume": [
    "pandas.io.sql.get_schema",
    "pandas.io.sql.read_sql_table",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy.test_mixed_dtype_insert": {
  "data": {
   "lineno": 1448,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.int32",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.io.sql.read_sql_table",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy.test_nan_fullcolumn": {
  "data": {
   "lineno": 1473,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.io.sql.read_sql_query",
    "pandas.io.sql.read_sql_table",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy.test_nan_numeric": {
  "data": {
   "lineno": 1460,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.io.sql.read_sql_query",
    "pandas.io.sql.read_sql_table",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy.test_nan_string": {
  "data": {
   "lineno": 1488,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.io.sql.read_sql_query",
    "pandas.io.sql.read_sql_table",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy.test_notnull_dtype": {
  "data": {
   "lineno": 1555,
   "symbols_in_volume": [
    "datetime.datetime",
    "isinstance",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.io.sql.read_sql_table",
    "pandas.io.tests.test_sql.sqlalchemy",
    "sqlalchemy.sql.sqltypes.Boolean",
    "sqlalchemy.sql.sqltypes.DateTime",
    "sqlalchemy.sql.sqltypes.Float",
    "sqlalchemy.sql.sqltypes.Integer"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy.test_read_sql_named_parameter": {
  "data": {
   "lineno": 1171
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy.test_read_sql_parameter": {
  "data": {
   "lineno": 1168
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy.test_read_table": {
  "data": {
   "lineno": 1223,
   "symbols_in_volume": [
    "pandas.io.sql.read_sql_table"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy.test_read_table_absent": {
  "data": {
   "lineno": 1233,
   "symbols_in_volume": [
    "ValueError",
    "pandas.io.sql.read_sql_table"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy.test_read_table_columns": {
  "data": {
   "lineno": 1227,
   "symbols_in_volume": [
    "pandas.io.sql.read_sql_table",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy.test_roundtrip": {
  "data": {
   "lineno": 1217
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy.test_temporary_table": {
  "data": {
   "lineno": 1631,
   "symbols_in_volume": [
    "Session",
    "Temporary",
    "Temporary.spam",
    "pandas.DataFrame",
    "pandas.io.sql.read_sql_query",
    "pandas.io.tests.test_sql.sqlalchemy",
    "pandas.util.testing.assert_frame_equal",
    "sqlalchemy.ext.declarative.declarative_base",
    "sqlalchemy.orm.session",
    "sqlalchemy.orm.session.add",
    "sqlalchemy.orm.session.connection",
    "sqlalchemy.orm.session.flush",
    "sqlalchemy.orm.session.sessionmaker",
    "sqlalchemy.orm.session.transaction"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy.test_temporary_table.Temporary": {
  "data": {
   "lineno": 1636,
   "symbols_in_volume": [
    "id",
    "pandas.io.tests.test_sql.sqlalchemy"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy.test_to_sql": {
  "data": {
   "lineno": 1174
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy.test_to_sql_append": {
  "data": {
   "lineno": 1186
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy.test_to_sql_empty": {
  "data": {
   "lineno": 1177
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy.test_to_sql_fail": {
  "data": {
   "lineno": 1180
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy.test_to_sql_replace": {
  "data": {
   "lineno": 1183
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy.test_to_sql_save_index": {
  "data": {
   "lineno": 1511
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemy.test_transactions": {
  "data": {
   "lineno": 1514
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemyConn": {
  "data": {
   "lineno": 1657,
   "symbols_in_volume": [
    "pandas.io.tests.test_sql._EngineToConnMixin",
    "pandas.io.tests.test_sql._TestSQLAlchemy"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_sql._TestSQLAlchemyConn.test_transactions": {
  "data": {
   "lineno": 1659,
   "symbols_in_volume": [
    "pandas.io.tests.test_sql.nose"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLApi": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "pandas.io.tests.test_sql.PandasSQLTest"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_sql._TestSQLApi.setUp": {
  "data": {
   "lineno": 508
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLApi.test_categorical": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.sql.read_sql_query",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLApi.test_chunksize_read": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.concat",
    "pandas.io.sql.read_sql_query",
    "pandas.io.sql.read_sql_table",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLApi.test_complex": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLApi.test_date_and_index": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "issubclass",
    "numpy.datetime64",
    "pandas.io.sql.read_sql_query"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLApi.test_date_parsing": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "issubclass",
    "numpy.datetime64",
    "pandas.io.sql.read_sql_query"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLApi.test_execute_sql": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "pandas.io.sql.execute",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLApi.test_get_schema": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "pandas.io.sql.get_schema"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLApi.test_get_schema_dtypes": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.sql.get_schema",
    "pandas.io.tests.test_sql.sqlalchemy"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLApi.test_get_schema_keys": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.sql.get_schema"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLApi.test_integer_col_names": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.io.sql.to_sql"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLApi.test_multiindex_roundtrip": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "pandas.DataFrame.from_records",
    "pandas.io.sql.read_sql_query",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLApi.test_read_sql_iris": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "pandas.io.sql.read_sql_query"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLApi.test_read_sql_view": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "pandas.io.sql.read_sql_query"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLApi.test_roundtrip": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "int",
    "pandas.io.sql.read_sql_query",
    "pandas.io.sql.to_sql",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLApi.test_roundtrip_chunksize": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "pandas.io.sql.read_sql_query",
    "pandas.io.sql.to_sql",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLApi.test_timedelta": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "UserWarning",
    "pandas.Series",
    "pandas.io.sql.read_sql_query",
    "pandas.to_timedelta",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLApi.test_to_sql": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "pandas.io.sql.has_table",
    "pandas.io.sql.to_sql"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLApi.test_to_sql_append": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "len",
    "pandas.io.sql.has_table",
    "pandas.io.sql.to_sql"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLApi.test_to_sql_fail": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "ValueError",
    "pandas.io.sql.has_table",
    "pandas.io.sql.to_sql"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLApi.test_to_sql_index_label": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.io.sql.read_sql_query",
    "pandas.io.sql.to_sql"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLApi.test_to_sql_index_label_multiindex": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.compat.range",
    "pandas.io.sql.read_sql_query",
    "pandas.io.sql.to_sql"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLApi.test_to_sql_panel": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.io.sql.to_sql",
    "pandas.util.testing.makePanel"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLApi.test_to_sql_replace": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "len",
    "pandas.io.sql.has_table",
    "pandas.io.sql.to_sql"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLApi.test_to_sql_series": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Series",
    "pandas.io.sql.read_sql_query",
    "pandas.io.sql.to_sql",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLApi.test_to_sql_type_mapping": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "pandas.io.sql.read_sql",
    "pandas.io.sql.to_sql",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLApi.test_unicode_column_name": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLiteAlchemy": {
  "data": {
   "lineno": 1664,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_sql._TestSQLiteAlchemy.connect": {
  "data": {
   "lineno": 1671,
   "symbols_in_volume": [
    "classmethod",
    "pandas.io.tests.test_sql.sqlalchemy"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLiteAlchemy.setup_driver": {
  "data": {
   "lineno": 1675,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLiteAlchemy.test_bigint_warning": {
  "data": {
   "lineno": 1705,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "pandas.io.sql.read_sql_table",
    "pandas.io.tests.test_sql.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLiteAlchemy.test_default_date_load": {
  "data": {
   "lineno": 1698,
   "symbols_in_volume": [
    "issubclass",
    "numpy.datetime64",
    "pandas.io.sql.read_sql_table"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._TestSQLiteAlchemy.test_default_type_conversion": {
  "data": {
   "lineno": 1680,
   "symbols_in_volume": [
    "issubclass",
    "numpy.floating",
    "numpy.integer",
    "pandas.io.sql.read_sql_table"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql._formatters": {
  "data": {
   "lineno": 2181
  },
  "type": "constant"
 },
 "pandas.io.tests.test_sql._skip_if_no_pymysql": {
  "data": {
   "lineno": 2210,
   "symbols_in_volume": [
    "ImportError",
    "pandas.io.tests.test_sql.nose"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.io.tests.test_sql.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.io.tests.test_sql.concat": {
  "data": {
   "shadows": "pandas.concat"
  },
  "type": "import"
 },
 "pandas.io.tests.test_sql.csv": {
  "data": {
   "shadows": "csv"
  },
  "type": "import"
 },
 "pandas.io.tests.test_sql.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "pandas.io.tests.test_sql.date_format": {
  "data": {
   "shadows": "pandas.core.datetools.format"
  },
  "type": "import"
 },
 "pandas.io.tests.test_sql.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.io.tests.test_sql.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.io.tests.test_sql.declarative": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative"
  },
  "type": "import"
 },
 "pandas.io.tests.test_sql.format_query": {
  "data": {
   "lineno": 2195,
   "symbols_in_volume": [
    "float",
    "formatter",
    "isinstance",
    "pandas.io.sql",
    "pandas.io.tests.test_sql._formatters",
    "pandas.isnull",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_sql.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "pandas.io.tests.test_sql.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.io.tests.test_sql.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.io.tests.test_sql.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.io.tests.test_sql.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.io.tests.test_sql.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.io.tests.test_sql.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.io.tests.test_sql.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.io.tests.test_sql.psycopg2": {
  "data": {
   "shadows": "psycopg2"
  },
  "type": "import"
 },
 "pandas.io.tests.test_sql.pymysql": {
  "data": {
   "shadows": "pymysql"
  },
  "type": "import"
 },
 "pandas.io.tests.test_sql.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.io.tests.test_sql.read_sql_query": {
  "data": {
   "shadows": "pandas.io.sql.read_sql_query"
  },
  "type": "import"
 },
 "pandas.io.tests.test_sql.read_sql_table": {
  "data": {
   "shadows": "pandas.io.sql.read_sql_table"
  },
  "type": "import"
 },
 "pandas.io.tests.test_sql.reflection": {
  "data": {
   "shadows": "sqlalchemy.engine.reflection"
  },
  "type": "import"
 },
 "pandas.io.tests.test_sql.sa_session": {
  "data": {
   "shadows": "sqlalchemy.orm.session"
  },
  "type": "import"
 },
 "pandas.io.tests.test_sql.sql": {
  "data": {
   "shadows": "pandas.io.sql"
  },
  "type": "import"
 },
 "pandas.io.tests.test_sql.sqlalchemy": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "pandas.io.tests.test_sql.sqlalchemy.schema": {
  "data": {
   "shadows": "sqlalchemy.schema"
  },
  "type": "import"
 },
 "pandas.io.tests.test_sql.sqlite3": {
  "data": {
   "shadows": "sqlite3"
  },
  "type": "import"
 },
 "pandas.io.tests.test_sql.sqltypes": {
  "data": {
   "shadows": "sqlalchemy.sql.sqltypes"
  },
  "type": "import"
 },
 "pandas.io.tests.test_sql.string_types": {
  "data": {
   "shadows": "pandas.compat.string_types"
  },
  "type": "import"
 },
 "pandas.io.tests.test_sql.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.io.tests.test_sql.time": {
  "data": {
   "shadows": "datetime.time"
  },
  "type": "import"
 },
 "pandas.io.tests.test_sql.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.io.tests.test_sql.to_datetime": {
  "data": {
   "shadows": "pandas.to_datetime"
  },
  "type": "import"
 },
 "pandas.io.tests.test_sql.to_timedelta": {
  "data": {
   "shadows": "pandas.to_timedelta"
  },
  "type": "import"
 },
 "pandas.io.tests.test_sql.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pandas.io.tests.test_sql.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.io.tests.test_stata": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.io.tests.test_stata.nose"
   ]
  },
  "type": "module"
 },
 "pandas.io.tests.test_stata.DataFrame": {
  "data": {
   "shadows": "pandas.core.frame.DataFrame"
  },
  "type": "import"
 },
 "pandas.io.tests.test_stata.InvalidColumnName": {
  "data": {
   "shadows": "pandas.io.stata.InvalidColumnName"
  },
  "type": "import"
 },
 "pandas.io.tests.test_stata.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.io.tests.test_stata.NaT": {
  "data": {
   "shadows": "pandas.tslib.NaT"
  },
  "type": "import"
 },
 "pandas.io.tests.test_stata.PossiblePrecisionLoss": {
  "data": {
   "shadows": "pandas.io.stata.PossiblePrecisionLoss"
  },
  "type": "import"
 },
 "pandas.io.tests.test_stata.Series": {
  "data": {
   "shadows": "pandas.core.frame.Series"
  },
  "type": "import"
 },
 "pandas.io.tests.test_stata.StataMissingValue": {
  "data": {
   "shadows": "pandas.io.stata.StataMissingValue"
  },
  "type": "import"
 },
 "pandas.io.tests.test_stata.StataReader": {
  "data": {
   "shadows": "pandas.io.stata.StataReader"
  },
  "type": "import"
 },
 "pandas.io.tests.test_stata.TestStata": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_stata.TestStata.read_csv": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "pandas.io.parsers.read_csv"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.read_dta": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "pandas.io.stata.read_stata"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.setUp": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "pandas.io.tests.test_stata.os",
    "pandas.util.testing.get_data_path"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.test_105": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.int16",
    "numpy.int8",
    "pandas.DataFrame",
    "pandas.io.tests.test_stata.os",
    "pandas.read_stata",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.test_big_dates": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "datetime.datetime",
    "dict",
    "len",
    "numpy.object",
    "pandas.core.frame.DataFrame",
    "pandas.io.stata.read_stata",
    "pandas.tslib.NaT",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.test_bool_uint": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "numpy.bool",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int8",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint8",
    "pandas.core.frame.DataFrame",
    "pandas.core.frame.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.test_categorical_order": {
  "data": {
   "lineno": 921,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.float32",
    "pandas.Categorical.from_codes",
    "pandas.Series",
    "pandas.core.common.is_categorical_dtype",
    "pandas.core.frame.DataFrame.from_items",
    "pandas.io.stata.read_stata",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.test_categorical_ordering": {
  "data": {
   "lineno": 975,
   "symbols_in_volume": [
    "pandas.core.common.is_categorical_dtype",
    "pandas.io.stata.read_stata",
    "pandas.util.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.test_categorical_sorting": {
  "data": {
   "lineno": 959,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Categorical.from_codes",
    "pandas.Series",
    "pandas.io.stata.read_stata",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.test_categorical_warnings_and_errors": {
  "data": {
   "lineno": 878,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pandas.DataFrame.from_records",
    "pandas.concat",
    "pandas.io.tests.test_stata.warnings",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.test_categorical_with_stata_missing_values": {
  "data": {
   "lineno": 908,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame.from_records",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.test_categorical_writing": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.concat",
    "pandas.core.frame.DataFrame.from_records",
    "pandas.io.tests.test_stata.warnings",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.test_data_method": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "pandas.io.stata.StataReader",
    "pandas.io.tests.test_stata.warnings",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.test_date_export_formats": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "datetime.datetime",
    "dict",
    "len",
    "pandas.core.frame.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.test_dates_invalid_column": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.core.frame.DataFrame",
    "pandas.io.stata.InvalidColumnName",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.test_drop_column": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "ValueError",
    "datetime.datetime.strptime",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int8",
    "pandas.io.stata.read_stata",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.test_dtype_conversion": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "datetime.datetime.strptime",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int8",
    "pandas.io.stata.read_stata",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.test_encoding": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "pandas.compat.PY3",
    "pandas.compat.string_types",
    "pandas.io.stata.read_stata",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.test_excessively_long_string": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "ValueError",
    "pandas.core.frame.DataFrame",
    "pandas.core.frame.Series",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.ensure_clean",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.test_iterator": {
  "data": {
   "lineno": 1029,
   "symbols_in_volume": [
    "list",
    "pandas.concat",
    "pandas.io.stata.read_stata",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.test_large_value_conversion": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "pandas.core.frame.DataFrame",
    "pandas.core.frame.Series",
    "pandas.io.stata.PossiblePrecisionLoss",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.test_minimal_size_col": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "int",
    "pandas.core.frame.DataFrame",
    "pandas.core.frame.Series",
    "pandas.io.stata.StataReader",
    "pandas.util.testing.ensure_clean",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.test_missing_value_conversion": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "pandas.compat.iterkeys",
    "pandas.core.frame.DataFrame",
    "pandas.io.stata.StataMissingValue",
    "pandas.io.stata.read_stata",
    "pandas.util.testing.assert_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.test_missing_value_generator": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "chr",
    "pandas.core.frame.DataFrame",
    "pandas.io.stata.StataMissingValue",
    "pandas.io.stata.StataReader",
    "pandas.io.tests.test_stata.struct",
    "pandas.util.testing.ensure_clean",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.test_nan_to_missing_value": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float32",
    "numpy.float64",
    "numpy.nan",
    "pandas.core.frame.DataFrame",
    "pandas.core.frame.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.test_no_index": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "KeyError",
    "numpy.arange",
    "numpy.reshape",
    "pandas.core.frame.DataFrame",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.test_numeric_column_names": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "int",
    "list",
    "map",
    "numpy.arange",
    "numpy.reshape",
    "pandas.core.frame.DataFrame",
    "pandas.io.stata.InvalidColumnName",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.test_read_chunks_115": {
  "data": {
   "lineno": 1055,
   "symbols_in_volume": [
    "StopIteration",
    "pandas.io.stata.read_stata",
    "pandas.io.tests.test_stata.warnings",
    "pandas.util.testing.assert_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.test_read_chunks_117": {
  "data": {
   "lineno": 991,
   "symbols_in_volume": [
    "StopIteration",
    "pandas.io.stata.read_stata",
    "pandas.io.tests.test_stata.warnings",
    "pandas.util.testing.assert_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.test_read_chunks_columns": {
  "data": {
   "lineno": 1095,
   "symbols_in_volume": [
    "pandas.io.stata.read_stata",
    "pandas.util.testing.assert_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.test_read_dta1": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.nan",
    "pandas.core.frame.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.test_read_dta12": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "pandas.core.frame.DataFrame.from_records",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.test_read_dta18": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.nan",
    "pandas.core.frame.DataFrame.from_records",
    "pandas.io.stata.StataReader",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_dict_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.test_read_dta2": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "UserWarning",
    "datetime.datetime",
    "distutils.version.LooseVersion",
    "len",
    "pandas.NaT",
    "pandas.core.frame.DataFrame.from_records",
    "pandas.io.tests.test_stata.nose",
    "pandas.io.tests.test_stata.sys",
    "pandas.io.tests.test_stata.warnings",
    "pandas.util.testing.assert_equal",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.test_read_dta3": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.int16",
    "numpy.int8",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.test_read_dta4": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.concat",
    "pandas.core.frame.DataFrame.from_records",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.test_read_empty_dta": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "pandas.core.frame.DataFrame",
    "pandas.io.stata.read_stata",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.test_read_write_dta10": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "numpy.datetime64",
    "numpy.int32",
    "object",
    "pandas.core.frame.DataFrame",
    "pandas.core.frame.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.test_read_write_dta11": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "len",
    "numpy.int32",
    "pandas.compat.u",
    "pandas.core.frame.DataFrame",
    "pandas.io.tests.test_stata.warnings",
    "pandas.util.testing.assert_equal",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.test_read_write_dta12": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "len",
    "numpy.int32",
    "pandas.core.frame.DataFrame",
    "pandas.io.tests.test_stata.warnings",
    "pandas.util.testing.assert_equal",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.test_read_write_dta13": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "pandas.core.frame.DataFrame",
    "pandas.core.frame.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.test_read_write_dta5": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.core.frame.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.test_read_write_reread_dta14": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "numpy.float32",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.test_read_write_reread_dta15": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "datetime.datetime.strptime",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int8",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.test_stata_doc_examples": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "list",
    "numpy.random.randn",
    "pandas.core.frame.DataFrame",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.test_string_no_dates": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "numpy.float64",
    "pandas.core.frame.DataFrame",
    "pandas.core.frame.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.test_timestamp_and_label": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.datetime.datetime.strptime",
    "pandas.core.frame.DataFrame",
    "pandas.io.stata.StataReader",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.test_variable_labels": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "pandas.compat.iteritems",
    "pandas.io.stata.StataReader"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.test_write_dta6": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "numpy.int32",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.test_write_missing_strings": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "pandas.core.frame.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.TestStata.test_write_preserves_original": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "numpy.random.randn",
    "numpy.random.seed",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_stata.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.io.tests.test_stata.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.io.tests.test_stata.dt": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.io.tests.test_stata.is_categorical_dtype": {
  "data": {
   "shadows": "pandas.core.common.is_categorical_dtype"
  },
  "type": "import"
 },
 "pandas.io.tests.test_stata.iterkeys": {
  "data": {
   "shadows": "pandas.compat.iterkeys"
  },
  "type": "import"
 },
 "pandas.io.tests.test_stata.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.io.tests.test_stata.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.io.tests.test_stata.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.io.tests.test_stata.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.io.tests.test_stata.read_csv": {
  "data": {
   "shadows": "pandas.io.parsers.read_csv"
  },
  "type": "import"
 },
 "pandas.io.tests.test_stata.read_stata": {
  "data": {
   "shadows": "pandas.io.stata.read_stata"
  },
  "type": "import"
 },
 "pandas.io.tests.test_stata.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "pandas.io.tests.test_stata.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.io.tests.test_stata.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.io.tests.test_stata.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.io.tests.test_wb": {
  "data": {
   "symbols_in_volume": [
    "FutureWarning",
    "__name__",
    "pandas.io.tests.test_wb.nose",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "module"
 },
 "pandas.io.tests.test_wb.TestWB": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.io.tests.test_wb.TestWB.test_wdi_download": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.testing.decorators.slow",
    "pandas.io.tests.test_wb.pandas",
    "pandas.io.wb.download",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_wb.TestWB.test_wdi_download_w_crash_inducing_countrycode": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.testing.decorators.slow",
    "pandas.io.tests.test_wb.nose",
    "pandas.io.wb.download",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_wb.TestWB.test_wdi_download_w_retired_indicator": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.testing.decorators.slow",
    "pandas.io.tests.test_wb.nose",
    "pandas.io.wb.download",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_wb.TestWB.test_wdi_get_countries": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.testing.decorators.slow",
    "pandas.io.wb.get_countries",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_wb.TestWB.test_wdi_search": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "numpy.testing.decorators.slow",
    "pandas.io.wb.search",
    "pandas.util.testing.network"
   ]
  },
  "type": "function"
 },
 "pandas.io.tests.test_wb.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.io.tests.test_wb.download": {
  "data": {
   "shadows": "pandas.io.wb.download"
  },
  "type": "import"
 },
 "pandas.io.tests.test_wb.get_countries": {
  "data": {
   "shadows": "pandas.io.wb.get_countries"
  },
  "type": "import"
 },
 "pandas.io.tests.test_wb.network": {
  "data": {
   "shadows": "pandas.util.testing.network"
  },
  "type": "import"
 },
 "pandas.io.tests.test_wb.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.io.tests.test_wb.pandas": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.io.tests.test_wb.search": {
  "data": {
   "shadows": "pandas.io.wb.search"
  },
  "type": "import"
 },
 "pandas.io.tests.test_wb.slow": {
  "data": {
   "shadows": "numpy.testing.decorators.slow"
  },
  "type": "import"
 },
 "pandas.io.tests.test_wb.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.io.tests.test_wb.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.io.wb": {
  "data": {
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.io.wb.warnings"
   ]
  },
  "type": "module"
 },
 "pandas.io.wb._cached_series": {
  "data": {
   "lineno": 272
  },
  "type": "constant"
 },
 "pandas.io.wb._get_data": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "pandas.io.common.urlopen",
    "pandas.io.json.loads",
    "pandas.io.wb.pandas",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.io.wb.country_codes": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pandas.io.wb.download": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.setdiff1d",
    "pandas.compat.reduce",
    "pandas.io.wb._get_data",
    "pandas.io.wb.country_codes",
    "pandas.io.wb.warnings",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.io.wb.get_countries": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "pandas.io.common.urlopen",
    "pandas.io.json.loads",
    "pandas.io.wb.pandas"
   ]
  },
  "type": "function"
 },
 "pandas.io.wb.get_indicators": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "get_value",
    "pandas.compat.lrange",
    "pandas.io.common.urlopen",
    "pandas.io.json.loads",
    "pandas.io.wb.pandas"
   ]
  },
  "type": "function"
 },
 "pandas.io.wb.get_indicators.get_value": {
  "data": {
   "lineno": 259
  },
  "type": "function"
 },
 "pandas.io.wb.json": {
  "data": {
   "shadows": "pandas.io.json"
  },
  "type": "import"
 },
 "pandas.io.wb.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.io.wb.map": {
  "data": {
   "shadows": "pandas.compat.map"
  },
  "type": "import"
 },
 "pandas.io.wb.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.io.wb.pandas": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.io.wb.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.io.wb.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.io.wb.reduce": {
  "data": {
   "shadows": "pandas.compat.reduce"
  },
  "type": "import"
 },
 "pandas.io.wb.search": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "pandas.io.wb._cached_series",
    "pandas.io.wb.get_indicators",
    "pandas.io.wb.pandas",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.io.wb.urlopen": {
  "data": {
   "shadows": "pandas.io.common.urlopen"
  },
  "type": "import"
 },
 "pandas.io.wb.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.lib": {
  "data": {
   "shadows": "pandas.lib"
  },
  "type": "import"
 },
 "pandas.melt": {
  "data": {
   "shadows": "pandas.core.reshape.melt"
  },
  "type": "import"
 },
 "pandas.merge": {
  "data": {
   "shadows": "pandas.tools.merge.merge"
  },
  "type": "import"
 },
 "pandas.missing_dependencies": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "pandas.module": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pandas.msgpack": {
  "data": {
   "symbols_in_volume": [
    "pandas.msgpack._unpacker.unpack",
    "pandas.msgpack._unpacker.unpackb",
    "pandas.msgpack.pack",
    "pandas.msgpack.packb"
   ]
  },
  "type": "module"
 },
 "pandas.msgpack.ExtType": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "class"
 },
 "pandas.msgpack.ExtType.__new__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "bytes",
    "int",
    "isinstance",
    "pandas.msgpack.ExtType",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.msgpack.Packer": {
  "data": {
   "shadows": "pandas.msgpack._packer.Packer"
  },
  "type": "import"
 },
 "pandas.msgpack.Unpacker": {
  "data": {
   "shadows": "pandas.msgpack._unpacker.Unpacker"
  },
  "type": "import"
 },
 "pandas.msgpack._version": {
  "data": {},
  "type": "module"
 },
 "pandas.msgpack._version.version": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "pandas.msgpack.dump": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "pandas.msgpack.dumps": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "pandas.msgpack.exceptions": {
  "data": {},
  "type": "module"
 },
 "pandas.msgpack.exceptions.BufferFull": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "pandas.msgpack.exceptions.UnpackException"
   ]
  },
  "type": "class"
 },
 "pandas.msgpack.exceptions.ExtraData": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "pandas.msgpack.exceptions.ExtraData.__init__": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "pandas.msgpack.exceptions.ExtraData.__str__": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "pandas.msgpack.exceptions.OutOfData": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "pandas.msgpack.exceptions.UnpackException"
   ]
  },
  "type": "class"
 },
 "pandas.msgpack.exceptions.PackException": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "pandas.msgpack.exceptions.PackValueError": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ValueError",
    "pandas.msgpack.exceptions.PackException"
   ]
  },
  "type": "class"
 },
 "pandas.msgpack.exceptions.UnpackException": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "pandas.msgpack.exceptions.UnpackValueError": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ValueError",
    "pandas.msgpack.exceptions.UnpackException"
   ]
  },
  "type": "class"
 },
 "pandas.msgpack.load": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "pandas.msgpack.loads": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "pandas.msgpack.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "pandas.msgpack.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.msgpack.pack": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "pandas.msgpack._packer.Packer"
   ]
  },
  "type": "function"
 },
 "pandas.msgpack.packb": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "pandas.msgpack._packer.Packer"
   ]
  },
  "type": "function"
 },
 "pandas.msgpack.unpack": {
  "data": {
   "shadows": "pandas.msgpack._unpacker.unpack"
  },
  "type": "import"
 },
 "pandas.msgpack.unpackb": {
  "data": {
   "shadows": "pandas.msgpack._unpacker.unpackb"
  },
  "type": "import"
 },
 "pandas.msgpack.version": {
  "data": {
   "shadows": "pandas.msgpack._version.version"
  },
  "type": "import"
 },
 "pandas.ordered_merge": {
  "data": {
   "shadows": "pandas.tools.merge.ordered_merge"
  },
  "type": "import"
 },
 "pandas.pandas.core.config_init": {
  "data": {
   "shadows": "pandas.core.config_init"
  },
  "type": "import"
 },
 "pandas.pandas.util.testing": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.pivot_table": {
  "data": {
   "shadows": "pandas.tools.pivot.pivot_table"
  },
  "type": "import"
 },
 "pandas.plot_params": {
  "data": {
   "shadows": "pandas.tools.plotting.plot_params"
  },
  "type": "import"
 },
 "pandas.qcut": {
  "data": {
   "shadows": "pandas.tools.tile.qcut"
  },
  "type": "import"
 },
 "pandas.rpy": {
  "data": {
   "symbols_in_volume": [
    "FutureWarning",
    "ImportError",
    "pandas.rpy.warnings"
   ]
  },
  "type": "module"
 },
 "pandas.rpy.base": {
  "data": {},
  "type": "module"
 },
 "pandas.rpy.base.lm": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.rpy.base.lm.__init__": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "pandas.rpy.base.util": {
  "data": {
   "shadows": "pandas.rpy.util"
  },
  "type": "import"
 },
 "pandas.rpy.mass": {
  "data": {},
  "type": "module"
 },
 "pandas.rpy.mass.rlm": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.rpy.vars": {
  "data": {},
  "type": "module"
 },
 "pandas.rpy.vars.VAR": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.rpy.vars.VAR.__init__": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "pandas.rpy.vars.util": {
  "data": {
   "shadows": "pandas.rpy.util"
  },
  "type": "import"
 },
 "pandas.rpy.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.sandbox": {
  "data": {},
  "type": "module"
 },
 "pandas.sandbox.qtpandas": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "PyQt4.QtCore.QVariant",
    "PySide.QtGui.QApplication",
    "__name__",
    "pandas.sandbox.qtpandas.Form",
    "pandas.sandbox.qtpandas.app",
    "pandas.sandbox.qtpandas.form",
    "pandas.sandbox.qtpandas.sys",
    "pandas.sandbox.qtpandas.warnings"
   ]
  },
  "type": "module"
 },
 "pandas.sandbox.qtpandas.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.sandbox.qtpandas.DataFrameModel": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "PySide.QtCore.QAbstractTableModel"
   ]
  },
  "type": "class"
 },
 "pandas.sandbox.qtpandas.DataFrameModel.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.sandbox.qtpandas.DataFrameModel",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.sandbox.qtpandas.DataFrameModel.columnCount": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "PySide.QtCore.QModelIndex"
   ]
  },
  "type": "function"
 },
 "pandas.sandbox.qtpandas.DataFrameModel.data": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "PyQt4.QtCore.QVariant",
    "PySide.QtCore.Qt.DisplayRole",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.sandbox.qtpandas.DataFrameModel.flags": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "PySide.QtCore.Qt.ItemIsEditable",
    "pandas.sandbox.qtpandas.DataFrameModel",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.sandbox.qtpandas.DataFrameModel.headerData": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "IndexError",
    "PyQt4.QtCore.QVariant",
    "PySide.QtCore.Qt.DisplayRole",
    "PySide.QtCore.Qt.Horizontal",
    "PySide.QtCore.Qt.Vertical"
   ]
  },
  "type": "function"
 },
 "pandas.sandbox.qtpandas.DataFrameModel.rowCount": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "PySide.QtCore.QModelIndex"
   ]
  },
  "type": "function"
 },
 "pandas.sandbox.qtpandas.DataFrameModel.setData": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "hasattr",
    "object"
   ]
  },
  "type": "function"
 },
 "pandas.sandbox.qtpandas.DataFrameModel.setDataFrame": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "pandas.sandbox.qtpandas.DataFrameModel.signalUpdate": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "pandas.sandbox.qtpandas.DataFrameWidget": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "PySide.QtGui.QWidget"
   ]
  },
  "type": "class"
 },
 "pandas.sandbox.qtpandas.DataFrameWidget.__init__": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "PySide.QtGui.QTableView",
    "PySide.QtGui.QVBoxLayout",
    "pandas.sandbox.qtpandas.DataFrameModel",
    "pandas.sandbox.qtpandas.DataFrameWidget",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.sandbox.qtpandas.DataFrameWidget.setDataFrame": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "pandas.sandbox.qtpandas.Form": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "PySide.QtGui.QDialog"
   ]
  },
  "type": "class"
 },
 "pandas.sandbox.qtpandas.Form.__init__": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "PySide.QtGui.QVBoxLayout",
    "pandas.sandbox.qtpandas.DataFrameWidget",
    "pandas.sandbox.qtpandas.Form",
    "pandas.sandbox.qtpandas.testDf",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.sandbox.qtpandas.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.sandbox.qtpandas.QAbstractTableModel": {
  "data": {
   "shadows": "PySide.QtCore.QAbstractTableModel"
  },
  "type": "import"
 },
 "pandas.sandbox.qtpandas.QApplication": {
  "data": {
   "shadows": "PySide.QtGui.QApplication"
  },
  "type": "import"
 },
 "pandas.sandbox.qtpandas.QDialog": {
  "data": {
   "shadows": "PySide.QtGui.QDialog"
  },
  "type": "import"
 },
 "pandas.sandbox.qtpandas.QModelIndex": {
  "data": {
   "shadows": "PySide.QtCore.QModelIndex"
  },
  "type": "import"
 },
 "pandas.sandbox.qtpandas.QTableView": {
  "data": {
   "shadows": "PySide.QtGui.QTableView"
  },
  "type": "import"
 },
 "pandas.sandbox.qtpandas.QVBoxLayout": {
  "data": {
   "shadows": "PySide.QtGui.QVBoxLayout"
  },
  "type": "import"
 },
 "pandas.sandbox.qtpandas.QVariant": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "pandas.sandbox.qtpandas.QWidget": {
  "data": {
   "shadows": "PySide.QtGui.QWidget"
  },
  "type": "import"
 },
 "pandas.sandbox.qtpandas.Qt": {
  "data": {
   "shadows": "PySide.QtCore.Qt"
  },
  "type": "import"
 },
 "pandas.sandbox.qtpandas.app": {
  "data": {
   "lineno": 142
  },
  "type": "constant"
 },
 "pandas.sandbox.qtpandas.form": {
  "data": {
   "lineno": 143
  },
  "type": "constant"
 },
 "pandas.sandbox.qtpandas.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.sandbox.qtpandas.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.sandbox.qtpandas.testDf": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.sandbox.qtpandas.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.scatter_matrix": {
  "data": {
   "shadows": "pandas.tools.plotting.scatter_matrix"
  },
  "type": "import"
 },
 "pandas.show_versions": {
  "data": {
   "shadows": "pandas.util.print_versions.show_versions"
  },
  "type": "import"
 },
 "pandas.sparse": {
  "data": {},
  "type": "module"
 },
 "pandas.sparse.api": {
  "data": {},
  "type": "module"
 },
 "pandas.sparse.api.SparseArray": {
  "data": {
   "shadows": "pandas.sparse.array.SparseArray"
  },
  "type": "import"
 },
 "pandas.sparse.api.SparseDataFrame": {
  "data": {
   "shadows": "pandas.sparse.frame.SparseDataFrame"
  },
  "type": "import"
 },
 "pandas.sparse.api.SparseList": {
  "data": {
   "shadows": "pandas.sparse.list.SparseList"
  },
  "type": "import"
 },
 "pandas.sparse.api.SparsePanel": {
  "data": {
   "shadows": "pandas.sparse.panel.SparsePanel"
  },
  "type": "import"
 },
 "pandas.sparse.api.SparseSeries": {
  "data": {
   "shadows": "pandas.sparse.series.SparseSeries"
  },
  "type": "import"
 },
 "pandas.sparse.api.SparseTimeSeries": {
  "data": {
   "shadows": "pandas.sparse.series.SparseTimeSeries"
  },
  "type": "import"
 },
 "pandas.sparse.list": {
  "data": {},
  "type": "module"
 },
 "pandas.sparse.list.PandasObject": {
  "data": {
   "shadows": "pandas.core.base.PandasObject"
  },
  "type": "import"
 },
 "pandas.sparse.list.SparseArray": {
  "data": {
   "shadows": "pandas.sparse.array.SparseArray"
  },
  "type": "import"
 },
 "pandas.sparse.list.SparseList": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "pandas.core.base.PandasObject"
   ]
  },
  "type": "class"
 },
 "pandas.sparse.list.SparseList.__getitem__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.list.SparseList.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.list.SparseList.__len__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "len",
    "sum"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.list.SparseList.__setitem__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.list.SparseList.__unicode__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "object.__repr__",
    "pandas.formats.printing.pprint_thing",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.list.SparseList._consolidate_inplace": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "numpy.concatenate",
    "pandas.sparse.array.SparseArray",
    "pandas.sparse.list._concat_sparse_indexes"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.list.SparseList.append": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "pandas.lib.isscalar",
    "pandas.sparse.array.SparseArray"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.list.SparseList.consolidate": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "pandas.sparse.list.SparseList.copy": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "list",
    "pandas.sparse.list.SparseList"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.list.SparseList.is_consolidated": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.list.SparseList.nchunks": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.list.SparseList.to_array": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "pandas.sparse.list._concat_sparse_indexes": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "numpy.concatenate",
    "pandas._sparse.IntIndex"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.list.lib": {
  "data": {
   "shadows": "pandas.lib"
  },
  "type": "import"
 },
 "pandas.sparse.list.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.sparse.list.pprint_thing": {
  "data": {
   "shadows": "pandas.formats.printing.pprint_thing"
  },
  "type": "import"
 },
 "pandas.sparse.list.splib": {
  "data": {
   "shadows": "pandas._sparse"
  },
  "type": "import"
 },
 "pandas.sparse.panel": {
  "data": {
   "symbols_in_volume": [
    "pandas.core.ops.add_special_arithmetic_methods",
    "pandas.core.ops.panel_special_funcs",
    "pandas.sparse.panel.SparsePanel"
   ]
  },
  "type": "module"
 },
 "pandas.sparse.panel.DataFrame": {
  "data": {
   "shadows": "pandas.core.frame.DataFrame"
  },
  "type": "import"
 },
 "pandas.sparse.panel.Index": {
  "data": {
   "shadows": "pandas.core.index.Index"
  },
  "type": "import"
 },
 "pandas.sparse.panel.MultiIndex": {
  "data": {
   "shadows": "pandas.core.index.MultiIndex"
  },
  "type": "import"
 },
 "pandas.sparse.panel.Panel": {
  "data": {
   "shadows": "pandas.core.panel.Panel"
  },
  "type": "import"
 },
 "pandas.sparse.panel.SparseDataFrame": {
  "data": {
   "shadows": "pandas.sparse.frame.SparseDataFrame"
  },
  "type": "import"
 },
 "pandas.sparse.panel.SparsePanel": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "pandas.core.panel.Panel",
    "pandas.sparse.panel.SparsePanelAxis",
    "pandas.util.decorators.deprecate",
    "property"
   ]
  },
  "type": "class"
 },
 "pandas.sparse.panel.SparsePanel.__array_wrap__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "pandas.sparse.panel.SparsePanel"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.panel.SparsePanel.__delitem__": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "len",
    "pandas.compat.lrange"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.panel.SparsePanel.__getstate__": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "pandas.io.pickle._pickle_array"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.panel.SparsePanel.__init__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "FutureWarning",
    "TypeError",
    "ValueError",
    "dict",
    "isinstance",
    "numpy.nan",
    "numpy.ndarray",
    "pandas.compat.zip",
    "pandas.core.index.Index",
    "pandas.core.index._ensure_index",
    "pandas.sparse.frame.SparseDataFrame",
    "pandas.sparse.panel._convert_frames",
    "pandas.sparse.panel.warnings",
    "sorted",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.panel.SparsePanel.__setitem__": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "pandas.core.frame.DataFrame",
    "pandas.core.index.Index",
    "pandas.sparse.frame.SparseDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.panel.SparsePanel.__setstate__": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "pandas.core.index._ensure_index",
    "pandas.io.pickle._unpickle_array"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.panel.SparsePanel._combine": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "dict",
    "func",
    "isinstance",
    "pandas.core.frame.DataFrame",
    "pandas.core.panel.Panel",
    "pandas.lib.isscalar"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.panel.SparsePanel._combineFrame": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "func",
    "pandas.compat.zip",
    "pandas.sparse.frame.SparseDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.panel.SparsePanel._combinePanel": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "func",
    "isinstance",
    "pandas.sparse.panel.SparsePanel"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.panel.SparsePanel._consolidate_inplace": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "pandas.sparse.panel.SparsePanel._get_item_cache": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "pandas.sparse.panel.SparsePanel._get_items": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "pandas.sparse.panel.SparsePanel._ixs": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "pandas.core.common.is_list_like"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.panel.SparsePanel._new_like": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "pandas.sparse.panel.SparsePanel"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.panel.SparsePanel._set_items": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "NotImplementedError",
    "dict",
    "isinstance",
    "pandas.compat.zip",
    "pandas.core.index.MultiIndex",
    "pandas.core.index._ensure_index"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.panel.SparsePanel._slice": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "pandas.sparse.panel.SparsePanel.as_matrix": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "pandas.sparse.panel.SparsePanel.copy": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "dict",
    "pandas.compat.iteritems",
    "pandas.sparse.panel.SparsePanel"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.panel.SparsePanel.from_dict": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "classmethod",
    "pandas.sparse.panel.SparsePanel"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.panel.SparsePanel.major_xs": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "dict",
    "pandas.core.frame.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.panel.SparsePanel.minor_xs": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "dict",
    "pandas.sparse.frame.SparseDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.panel.SparsePanel.mod": {
  "data": {
   "lineno": 504
  },
  "type": "function"
 },
 "pandas.sparse.panel.SparsePanel.pow": {
  "data": {
   "lineno": 500
  },
  "type": "function"
 },
 "pandas.sparse.panel.SparsePanel.reindex": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "dict",
    "pandas.compat.iteritems",
    "pandas.core.common._all_none",
    "pandas.core.common._mut_exclusive",
    "pandas.sparse.panel.SparsePanel"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.panel.SparsePanel.set_value": {
  "data": {
   "lineno": 221
  },
  "type": "function"
 },
 "pandas.sparse.panel.SparsePanel.to_dense": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "pandas.core.panel.Panel"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.panel.SparsePanel.to_frame": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "numpy.column_stack",
    "numpy.zeros",
    "pandas.core.frame.DataFrame",
    "pandas.core.index.MultiIndex",
    "pandas.sparse.panel._stack_sparse_info"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.panel.SparsePanel.values": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "numpy.array",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.panel.SparsePanelAxis": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.sparse.panel.SparsePanelAxis.__get__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.panel.SparsePanelAxis.__init__": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "pandas.sparse.panel.SparsePanelAxis.__set__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "NotImplementedError",
    "isinstance",
    "pandas.compat.itervalues",
    "pandas.core.index.MultiIndex",
    "pandas.core.index._ensure_index",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.panel.SparseWidePanel": {
  "data": {
   "lineno": 512
  },
  "type": "constant"
 },
 "pandas.sparse.panel._convert_frames": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "isinstance",
    "numpy.nan",
    "pandas.compat.iteritems",
    "pandas.core.index._ensure_index",
    "pandas.core.panel._get_combined_index",
    "pandas.sparse.frame.SparseDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.panel._ensure_index": {
  "data": {
   "shadows": "pandas.core.index._ensure_index"
  },
  "type": "import"
 },
 "pandas.sparse.panel._get_combined_index": {
  "data": {
   "shadows": "pandas.core.panel._get_combined_index"
  },
  "type": "import"
 },
 "pandas.sparse.panel._pickle_array": {
  "data": {
   "shadows": "pandas.io.pickle._pickle_array"
  },
  "type": "import"
 },
 "pandas.sparse.panel._stack_sparse_info": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.isnan",
    "numpy.repeat",
    "pandas.compat.iteritems"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.panel._unpickle_array": {
  "data": {
   "shadows": "pandas.io.pickle._unpickle_array"
  },
  "type": "import"
 },
 "pandas.sparse.panel.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.sparse.panel.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.sparse.panel.deprecate": {
  "data": {
   "shadows": "pandas.util.decorators.deprecate"
  },
  "type": "import"
 },
 "pandas.sparse.panel.lib": {
  "data": {
   "shadows": "pandas.lib"
  },
  "type": "import"
 },
 "pandas.sparse.panel.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.sparse.panel.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.sparse.panel.ops": {
  "data": {
   "shadows": "pandas.core.ops"
  },
  "type": "import"
 },
 "pandas.sparse.panel.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.sparse.panel.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.sparse.scipy_sparse": {
  "data": {},
  "type": "module"
 },
 "pandas.sparse.scipy_sparse.Index": {
  "data": {
   "shadows": "pandas.core.index.Index"
  },
  "type": "import"
 },
 "pandas.sparse.scipy_sparse.MultiIndex": {
  "data": {
   "shadows": "pandas.core.index.MultiIndex"
  },
  "type": "import"
 },
 "pandas.sparse.scipy_sparse.OrderedDict": {
  "data": {
   "shadows": "pandas.compat.OrderedDict"
  },
  "type": "import"
 },
 "pandas.sparse.scipy_sparse.Series": {
  "data": {
   "shadows": "pandas.core.series.Series"
  },
  "type": "import"
 },
 "pandas.sparse.scipy_sparse._check_is_partition": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ValueError",
    "set",
    "set.intersection",
    "set.union"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.scipy_sparse._coo_to_sparse_series": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "pandas.core.index.MultiIndex.from_arrays",
    "pandas.core.index.MultiIndex.from_product",
    "pandas.core.series.Series",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.scipy_sparse._sparse_series_to_coo": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pandas.sparse.scipy_sparse._to_ijv"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.scipy_sparse._to_ijv": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "get_indexers",
    "pandas.sparse.scipy_sparse._check_is_partition",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.scipy_sparse._to_ijv.get_indexers": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "_get_index_subset_to_coord_dict",
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.scipy_sparse._to_ijv.get_indexers._get_index_subset_to_coord_dict": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "_get_label_to_i_dict",
    "len",
    "list",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.core.series.Series",
    "robust_get_level_values",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.scipy_sparse._to_ijv.get_indexers._get_index_subset_to_coord_dict.robust_get_level_values": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.scipy_sparse._to_ijv.get_indexers._get_label_to_i_dict": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "enumerate",
    "list",
    "pandas.compat.OrderedDict",
    "pandas.compat.lmap",
    "pandas.core.index.Index",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.scipy_sparse.lmap": {
  "data": {
   "shadows": "pandas.compat.lmap"
  },
  "type": "import"
 },
 "pandas.sparse.scipy_sparse.scipy.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "pandas.sparse.tests": {
  "data": {},
  "type": "module"
 },
 "pandas.sparse.tests.test_array": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.sparse.tests.test_array.nose"
   ]
  },
  "type": "module"
 },
 "pandas.sparse.tests.test_array.IntIndex": {
  "data": {
   "shadows": "pandas._sparse.IntIndex"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_array.SparseArray": {
  "data": {
   "shadows": "pandas.sparse.api.SparseArray"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_array.TestSparseArray": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.sparse.tests.test_array.TestSparseArray.setUp": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.sparse.api.SparseArray"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArray.test_astype": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "TypeError",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArray.test_bad_take": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "IndexError",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArray.test_binary_operators": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "_check_inplace_op",
    "_check_op",
    "getattr",
    "numpy.nan",
    "numpy.random.randn",
    "op",
    "pandas.sparse.api.SparseArray",
    "pandas.sparse.tests.test_array.operator"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArray.test_binary_operators._check_inplace_op": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "NotImplementedError",
    "op"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArray.test_binary_operators._check_op": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "ValueError",
    "op",
    "pandas.sparse.api.SparseArray",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_sp_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArray.test_constructor_bool": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "bool",
    "numpy.array",
    "numpy.asarray",
    "pandas.sparse.api.SparseArray",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArray.test_constructor_bool_fill_value": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "numpy.bool",
    "pandas.sparse.api.SparseArray"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArray.test_constructor_copy": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "pandas.sparse.api.SparseArray"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArray.test_constructor_dtype": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.int64",
    "numpy.isnan",
    "numpy.nan",
    "pandas.sparse.api.SparseArray"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArray.test_constructor_float32": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.asarray",
    "numpy.float32",
    "numpy.nan",
    "pandas.sparse.api.SparseArray",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArray.test_constructor_from_sparse": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "pandas.sparse.api.SparseArray",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArray.test_constructor_from_too_large_array": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "TypeError",
    "numpy.arange",
    "pandas.sparse.api.SparseArray",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArray.test_constructor_spindex_dtype": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.int64",
    "numpy.isnan",
    "numpy.nan",
    "pandas._sparse.IntIndex",
    "pandas.sparse.api.SparseArray",
    "pandas.util.testing.assert_sp_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArray.test_copy_shallow": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "_get_base"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArray.test_copy_shallow._get_base": {
  "data": {
   "lineno": 318
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArray.test_fillna": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.sparse.api.SparseArray",
    "pandas.util.testing.assert_sp_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArray.test_fillna_overlap": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.sparse.api.SparseArray",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_sp_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArray.test_generator_warnings": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "DeprecationWarning",
    "PendingDeprecationWarning",
    "len",
    "pandas.sparse.api.SparseArray",
    "pandas.sparse.tests.test_array.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArray.test_get_item": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "IndexError",
    "len",
    "numpy.isnan",
    "pandas.sparse.tests.test_array.re",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArray.test_getitem": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "_checkit",
    "len",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArray.test_getitem._checkit": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArray.test_getslice": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "pandas.sparse.api.SparseArray",
    "pandas.util.testing.assert_sp_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArray.test_getslice_tuple": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "IndexError",
    "numpy.array",
    "numpy.nan",
    "pandas.sparse.api.SparseArray",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_sp_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArray.test_pickle": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "_check_roundtrip"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArray.test_pickle._check_roundtrip": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "pandas.util.testing.assert_sp_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArray.test_set_item": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "TypeError",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArray.test_set_item.setitem": {
  "data": {
   "lineno": 240
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArray.test_set_item.setslice": {
  "data": {
   "lineno": 243
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArray.test_take": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.isscalar",
    "numpy.take",
    "pandas._np_version_under1p8",
    "pandas.sparse.api.SparseArray",
    "pandas.util.testing.assert_sp_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArray.test_take_fill_value": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "numpy.take",
    "pandas.sparse.api.SparseArray",
    "pandas.util.testing.assert_sp_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArray.test_take_filling": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "numpy.array",
    "numpy.nan",
    "pandas.sparse.api.SparseArray",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_sp_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArray.test_take_filling_all_nan": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "IndexError",
    "numpy.array",
    "numpy.nan",
    "pandas.sparse.api.SparseArray",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_sp_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArray.test_take_filling_fill_value": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "numpy.array",
    "numpy.nan",
    "pandas.sparse.api.SparseArray",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_sp_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArray.test_take_invalid_kwargs": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArray.test_take_negative": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "numpy.take",
    "pandas.sparse.api.SparseArray",
    "pandas.util.testing.assert_sp_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArray.test_to_dense": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.sparse.api.SparseArray",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArray.test_values_asarray": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "numpy.asarray",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArrayAnalytics": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.sparse.tests.test_array.TestSparseArrayAnalytics.test_cumsum": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "float",
    "numpy.arange",
    "numpy.array",
    "numpy.nan",
    "pandas.sparse.api.SparseArray",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_sp_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArrayAnalytics.test_mean": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "float",
    "numpy.arange",
    "numpy.nan",
    "pandas.sparse.api.SparseArray"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArrayAnalytics.test_numpy_cumsum": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "numpy.arange",
    "numpy.array",
    "numpy.cumsum",
    "numpy.int64",
    "numpy.nan",
    "pandas.sparse.api.SparseArray",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_sp_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArrayAnalytics.test_numpy_mean": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "numpy.arange",
    "numpy.int64",
    "numpy.mean",
    "numpy.nan",
    "pandas.sparse.api.SparseArray",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArrayAnalytics.test_numpy_sum": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "numpy.arange",
    "numpy.int64",
    "numpy.nan",
    "numpy.sum",
    "pandas.sparse.api.SparseArray",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArrayAnalytics.test_sum": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "float",
    "numpy.arange",
    "numpy.nan",
    "pandas.sparse.api.SparseArray"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArrayArithmetic": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.sparse.tests.test_array.TestSparseArrayArithmetic._check_comparison_ops": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "_check",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArrayArithmetic._check_comparison_ops._check": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "bool",
    "numpy.bool",
    "pandas.sparse.api.SparseArray",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArrayArithmetic._check_numeric_ops": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArrayArithmetic.test_float_array": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.sparse.api.SparseArray"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArrayArithmetic.test_float_array_comparison": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.sparse.api.SparseArray"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArrayArithmetic.test_float_array_different_kind": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.sparse.api.SparseArray"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArrayArithmetic.test_float_same_index": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.sparse.api.SparseArray"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArrayArithmetic.test_float_same_index_comparison": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.sparse.api.SparseArray"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArrayArithmetic.test_float_scalar": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.sparse.api.SparseArray"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array.TestSparseArrayArithmetic.test_float_scalar_comparison": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.sparse.api.SparseArray"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_array._np_version_under1p8": {
  "data": {
   "shadows": "pandas._np_version_under1p8"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_array.assertRaisesRegexp": {
  "data": {
   "shadows": "pandas.util.testing.assertRaisesRegexp"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_array.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_array.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_array.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_array.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_array.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_array.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_array.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_array.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_array.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_combine_concat": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.sparse.tests.test_combine_concat.nose"
   ]
  },
  "type": "module"
 },
 "pandas.sparse.tests.test_combine_concat.TestSparseDataFrameConcat": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.sparse.tests.test_combine_concat.TestSparseDataFrameConcat.setUp": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_combine_concat.TestSparseDataFrameConcat.test_concat": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.concat",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_combine_concat.TestSparseDataFrameConcat.test_concat_axis1": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.SparseDataFrame",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_combine_concat.TestSparseDataFrameConcat.test_concat_different_columns": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.SparseDataFrame",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_combine_concat.TestSparseDataFrameConcat.test_concat_different_fill_value": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.concat",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_combine_concat.TestSparseDataFrameConcat.test_concat_series": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.concat",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_combine_concat.TestSparseDataFrameConcat.test_concat_sparse_dense": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "pandas.SparseDataFrame",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_combine_concat.TestSparseSeriesConcat": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.sparse.tests.test_combine_concat.TestSparseSeriesConcat.test_concat": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.Series",
    "pandas.SparseSeries",
    "pandas.concat",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_combine_concat.TestSparseSeriesConcat.test_concat_axis1": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.Series",
    "pandas.SparseDataFrame",
    "pandas.SparseSeries",
    "pandas.concat",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_combine_concat.TestSparseSeriesConcat.test_concat_axis1_different_fill": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.Series",
    "pandas.SparseDataFrame",
    "pandas.SparseSeries",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_combine_concat.TestSparseSeriesConcat.test_concat_different_fill": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.Series",
    "pandas.SparseSeries",
    "pandas.concat",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_combine_concat.TestSparseSeriesConcat.test_concat_different_kind": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.Series",
    "pandas.SparseSeries",
    "pandas.concat",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_combine_concat.TestSparseSeriesConcat.test_concat_sparse_dense": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.Series",
    "pandas.SparseSeries",
    "pandas.concat",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_combine_concat.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_combine_concat.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_combine_concat.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_combine_concat.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_frame": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.sparse.tests.test_frame.nose"
   ]
  },
  "type": "module"
 },
 "pandas.sparse.tests.test_frame.BlockIndex": {
  "data": {
   "shadows": "pandas._sparse.BlockIndex"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_frame.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_frame.DatetimeIndex": {
  "data": {
   "shadows": "pandas.tseries.index.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_frame.IntIndex": {
  "data": {
   "shadows": "pandas._sparse.IntIndex"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_frame.Panel": {
  "data": {
   "shadows": "pandas.Panel"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_frame.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_frame.SharedWithSparse": {
  "data": {
   "shadows": "pandas.tests.frame.test_misc_api.SharedWithSparse"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_frame.SparseDataFrame": {
  "data": {
   "shadows": "pandas.sparse.api.SparseDataFrame"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_frame.SparseSeries": {
  "data": {
   "shadows": "pandas.sparse.api.SparseSeries"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "pandas.sparse.api.SparseDataFrame",
    "pandas.tests.frame.test_misc_api.SharedWithSparse",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame._check_all": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "check_func"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame._check_frame_ops": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "_compare_to_dense",
    "enumerate",
    "getattr",
    "op",
    "pandas.sparse.api.SparseSeries",
    "pandas.sparse.tests.test_frame.operator"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame._check_frame_ops._compare_to_dense": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "isinstance",
    "op",
    "pandas.DataFrame",
    "pandas.sparse.api.SparseDataFrame",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.setUp": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.isnan",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.bdate_range",
    "pandas.sparse.api.SparseDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_append": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_apply": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "numpy.sqrt",
    "numpy.sum",
    "pandas.core.nanops.nansum",
    "pandas.sparse.api.SparseDataFrame",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_apply_nonuq": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_applymap": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "pandas.sparse.api.SparseDataFrame",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_array_interface": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "numpy.sqrt",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_as_blocks": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.sparse.api.SparseDataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_as_matrix": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.sparse.api.SparseDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_astype": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "Exception",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_combine_add": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_combine_first": {
  "data": {
   "lineno": 795,
   "symbols_in_volume": [
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_constructor": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "TypeError",
    "numpy.arange",
    "pandas._sparse.IntIndex",
    "pandas.compat.iteritems",
    "pandas.sparse.api.SparseDataFrame",
    "pandas.sparse.api.SparseSeries",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_sp_frame_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_constructor_convert_index_once": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.compat.lrange",
    "pandas.sparse.api.SparseDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_constructor_dataframe": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "pandas.sparse.api.SparseDataFrame",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_constructor_empty": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "len",
    "pandas.sparse.api.SparseDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_constructor_from_series": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "float",
    "numpy.NaN",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.sparse.api.SparseDataFrame",
    "pandas.sparse.api.SparseSeries",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_constructor_ndarray": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pandas.sparse.api.SparseDataFrame",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_copy": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "pandas.sparse.api.SparseDataFrame",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_corr": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_count": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_delitem": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_dense_to_sparse": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "float",
    "numpy.isnan",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas._sparse.BlockIndex",
    "pandas._sparse.IntIndex",
    "pandas.sparse.api.SparseDataFrame",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_density": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "pandas.sparse.api.SparseDataFrame",
    "pandas.sparse.api.SparseSeries"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_describe": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "numpy.nan",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_dtypes": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_fancy_index_misc": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_fill_value_when_combine_const": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.sparse.api.SparseDataFrame",
    "pandas.util.testing.assert_sp_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_fillna": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_fillna_fill_value": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.SparseDataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_getitem": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "Exception",
    "pandas.sparse.api.SparseDataFrame",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_getitem_overload": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "Exception",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_icol": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "isinstance",
    "pandas.sparse.api.SparseDataFrame",
    "pandas.sparse.api.SparseSeries",
    "pandas.util.testing.assert_sp_series_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_isin": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_join": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_nan_columnname": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_numpy_transpose": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "ValueError",
    "numpy.transpose",
    "pandas.sparse.api.SparseDataFrame",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_op_corners": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.tseries.index.DatetimeIndex",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_pickle": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "_test_roundtrip",
    "pandas.DataFrame",
    "pandas.sparse.api.SparseDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_pickle._test_roundtrip": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_reindex": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "_check_frame"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_reindex._check_frame": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.isnan",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_reindex_fill_value": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "pandas.bdate_range",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_rename": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_scalar_ops": {
  "data": {
   "lineno": 340
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_set_columns": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "Exception",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_set_index": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "Exception",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_set_value": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "list",
    "object"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_setitem": {
  "data": {
   "lineno": 414
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_setitem._check_frame": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "Exception",
    "len",
    "numpy.random.randn",
    "pandas.sparse.api.SparseSeries",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_setitem_array": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_setitem_corner": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_shape": {
  "data": {
   "lineno": 202
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_shift": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "_check"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_shift._check": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "pandas.core.datetools.bday",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_sparse_pow_issue": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "pandas.sparse.api.SparseDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_sparse_series_ops": {
  "data": {
   "lineno": 263
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_sparse_series_ops_fill": {
  "data": {
   "lineno": 272
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_sparse_series_ops_i": {
  "data": {
   "lineno": 266
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_sparse_series_ops_z": {
  "data": {
   "lineno": 269
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_sparse_to_dense": {
  "data": {
   "lineno": 260
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_stack_sparse_frame": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "Exception",
    "_check"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_stack_sparse_frame._check": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "pandas.Panel.from_dict",
    "pandas.sparse.frame.stack_sparse_frame"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_str": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_take": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_to_dense": {
  "data": {
   "lineno": 706
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_to_dense._check": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_transpose": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "_check"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrame.test_transpose._check": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrameAnalytics": {
  "data": {
   "lineno": 853,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrameAnalytics.setUp": {
  "data": {
   "lineno": 854,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "pandas.bdate_range",
    "pandas.sparse.api.SparseDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrameAnalytics.test_cumsum": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": [
    "pandas.sparse.api.SparseDataFrame",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.TestSparseDataFrameAnalytics.test_numpy_cumsum": {
  "data": {
   "lineno": 869,
   "symbols_in_volume": [
    "ValueError",
    "numpy.cumsum",
    "numpy.int64",
    "pandas.sparse.api.SparseDataFrame",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_frame.bdate_range": {
  "data": {
   "shadows": "pandas.bdate_range"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_frame.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_frame.datetools": {
  "data": {
   "shadows": "pandas.core.datetools"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_frame.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_frame.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_frame.nanops": {
  "data": {
   "shadows": "pandas.core.nanops"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_frame.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_frame.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_frame.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_frame.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_frame.spf": {
  "data": {
   "shadows": "pandas.sparse.frame"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_frame.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_indexing": {
  "data": {},
  "type": "module"
 },
 "pandas.sparse.tests.test_indexing.TestSparseDataFrameIndexing": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.sparse.tests.test_indexing.TestSparseDataFrameIndexing.test_at": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "list",
    "numpy.isnan",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_indexing.TestSparseDataFrameIndexing.test_at_fill_value": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "list",
    "numpy.isnan",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_indexing.TestSparseDataFrameIndexing.test_getitem": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_sp_frame_equal",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_indexing.TestSparseDataFrameIndexing.test_getitem_fill_value": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_sp_frame_equal",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_indexing.TestSparseDataFrameIndexing.test_iat": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "list",
    "numpy.isnan",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_indexing.TestSparseDataFrameIndexing.test_iat_fill_value": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "list",
    "numpy.isnan",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_indexing.TestSparseDataFrameIndexing.test_iloc": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "IndexError",
    "numpy.isnan",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_sp_frame_equal",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_indexing.TestSparseDataFrameIndexing.test_iloc_slice": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_indexing.TestSparseDataFrameIndexing.test_loc": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "list",
    "numpy.isnan",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_sp_frame_equal",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_indexing.TestSparseDataFrameIndexing.test_loc_index": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "list",
    "numpy.isnan",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_sp_frame_equal",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_indexing.TestSparseDataFrameIndexing.test_loc_slice": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_indexing.TestSparseDataFrameIndexing.test_reindex": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_indexing.TestSparseDataFrameIndexing.test_reindex_fill_value": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_indexing.TestSparseDataFrameIndexing.test_take": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_indexing.TestSparseDataFrameIndexing.test_take_fill_value": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_indexing.TestSparseSeriesIndexing": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.sparse.tests.test_indexing.TestSparseSeriesIndexing.test_at": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "list",
    "numpy.isnan",
    "numpy.nan",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_indexing.TestSparseSeriesIndexing.test_at_fill_value": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "list",
    "numpy.isnan",
    "numpy.nan",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_indexing.TestSparseSeriesIndexing.test_get": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "list",
    "numpy.isnan",
    "numpy.nan",
    "pandas.SparseSeries"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_indexing.TestSparseSeriesIndexing.test_getitem": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_indexing.TestSparseSeriesIndexing.test_getitem_ellipsis": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.SparseSeries",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_indexing.TestSparseSeriesIndexing.test_getitem_fill_value": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_indexing.TestSparseSeriesIndexing.test_getitem_slice": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_indexing.TestSparseSeriesIndexing.test_getitem_slice_fill_value": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_indexing.TestSparseSeriesIndexing.test_iat": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.nan",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_indexing.TestSparseSeriesIndexing.test_iat_fill_value": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.nan",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_indexing.TestSparseSeriesIndexing.test_iloc": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "IndexError",
    "numpy.isnan",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_indexing.TestSparseSeriesIndexing.test_iloc_fill_value": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_indexing.TestSparseSeriesIndexing.test_iloc_slice": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_indexing.TestSparseSeriesIndexing.test_iloc_slice_fill_value": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_indexing.TestSparseSeriesIndexing.test_loc": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_indexing.TestSparseSeriesIndexing.test_loc_index": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "list",
    "numpy.isnan",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_indexing.TestSparseSeriesIndexing.test_loc_index_fill_value": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "list",
    "numpy.isnan",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_indexing.TestSparseSeriesIndexing.test_loc_slice": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_indexing.TestSparseSeriesIndexing.test_loc_slice_fill_value": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_indexing.TestSparseSeriesIndexing.test_reindex": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_indexing.TestSparseSeriesIndexing.test_reindex_fill_value": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_indexing.TestSparseSeriesIndexing.test_take": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_indexing.TestSparseSeriesIndexing.test_take_fill_value": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_indexing.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_indexing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_indexing.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_indexing.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_libsparse": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dict",
    "pandas.sparse.tests.test_libsparse.TestSparseOperators",
    "pandas.sparse.tests.test_libsparse.check_ops",
    "pandas.sparse.tests.test_libsparse.g",
    "pandas.sparse.tests.test_libsparse.make_optestf",
    "pandas.sparse.tests.test_libsparse.nose",
    "setattr"
   ]
  },
  "type": "module"
 },
 "pandas.sparse.tests.test_libsparse.BlockIndex": {
  "data": {
   "shadows": "pandas.sparse.array.BlockIndex"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_libsparse.IntIndex": {
  "data": {
   "shadows": "pandas.sparse.array.IntIndex"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_libsparse.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_libsparse.TEST_LENGTH": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pandas.sparse.tests.test_libsparse.TestBlockIndex": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.sparse.tests.test_libsparse.TestBlockIndex.test_block_internal": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int32",
    "pandas.sparse.array.BlockIndex",
    "pandas.sparse.array._make_index",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_libsparse.TestBlockIndex.test_check_integrity": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "Exception",
    "pandas.sparse.array.BlockIndex"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_libsparse.TestBlockIndex.test_equals": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "pandas.sparse.array.BlockIndex"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_libsparse.TestBlockIndex.test_to_block_index": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "pandas.sparse.array.BlockIndex"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_libsparse.TestBlockIndex.test_to_int_index": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "pandas.sparse.array.BlockIndex"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_libsparse.TestIntIndex": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.sparse.tests.test_libsparse.TestIntIndex.test_equals": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "pandas.sparse.array.IntIndex"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_libsparse.TestIntIndex.test_int_internal": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int32",
    "pandas.sparse.array.IntIndex",
    "pandas.sparse.array._make_index",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_libsparse.TestIntIndex.test_to_block_index": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "_check_case",
    "pandas.sparse.tests.test_libsparse.check_cases"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_libsparse.TestIntIndex.test_to_block_index._check_case": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "pandas.sparse.array.BlockIndex",
    "pandas.sparse.tests.test_libsparse.TEST_LENGTH",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_libsparse.TestIntIndex.test_to_int_index": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "pandas.sparse.array.IntIndex"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_libsparse.TestSparseIndexCommon": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.sparse.tests.test_libsparse.TestSparseIndexCommon.test_lookup": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int32",
    "pandas.sparse.array._make_index",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_libsparse.TestSparseIndexCommon.test_lookup_array": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int32",
    "pandas.sparse.array._make_index"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_libsparse.TestSparseIndexCommon.test_lookup_basics": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "_check",
    "pandas.sparse.array.BlockIndex"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_libsparse.TestSparseIndexCommon.test_lookup_basics._check": {
  "data": {
   "lineno": 263
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_libsparse.TestSparseIndexUnion": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.sparse.tests.test_libsparse.TestSparseIndexUnion.test_index_make_union": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "_check_case"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_libsparse.TestSparseIndexUnion.test_index_make_union._check_case": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "isinstance",
    "numpy.testing.assert_equal",
    "pandas.sparse.array.BlockIndex",
    "pandas.sparse.array.IntIndex",
    "pandas.sparse.tests.test_libsparse.TEST_LENGTH"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_libsparse.TestSparseIndexUnion.test_intindex_make_union": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.int32",
    "pandas.sparse.array.IntIndex",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_libsparse.TestSparseOperators": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.sparse.tests.test_libsparse.TestSparseOperators._op_tests": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "_check_case",
    "pandas.sparse.tests.test_libsparse.check_cases"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_libsparse.TestSparseOperators._op_tests._check_case": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_equal",
    "pandas.Series",
    "pandas.sparse.array.BlockIndex",
    "pandas.sparse.tests.test_libsparse.TEST_LENGTH",
    "python_op",
    "sparse_op"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_libsparse._make_index": {
  "data": {
   "shadows": "pandas.sparse.array._make_index"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_libsparse.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_libsparse.check_cases": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "_check_case",
    "_check_case_dict",
    "pandas.sparse.tests.test_libsparse.delete_blocks",
    "pandas.sparse.tests.test_libsparse.no_intersect",
    "pandas.sparse.tests.test_libsparse.plain_case",
    "pandas.sparse.tests.test_libsparse.skip_block",
    "pandas.sparse.tests.test_libsparse.split_blocks"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_libsparse.check_cases._check_case_dict": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "_check_case"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_libsparse.check_ops": {
  "data": {
   "lineno": 475
  },
  "type": "constant"
 },
 "pandas.sparse.tests.test_libsparse.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_libsparse.delete_blocks": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pandas.sparse.tests.test_libsparse.g": {
  "data": {
   "lineno": 489
  },
  "type": "constant"
 },
 "pandas.sparse.tests.test_libsparse.make_optestf": {
  "data": {
   "lineno": 478
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_libsparse.make_optestf.f": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "getattr",
    "pandas._sparse",
    "pandas.sparse.tests.test_libsparse.operator",
    "python_op",
    "sparse_op"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_libsparse.no_intersect": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pandas.sparse.tests.test_libsparse.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_libsparse.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_libsparse.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_libsparse.plain_case": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pandas.sparse.tests.test_libsparse.skip_block": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "pandas.sparse.tests.test_libsparse.splib": {
  "data": {
   "shadows": "pandas._sparse"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_libsparse.split_blocks": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pandas.sparse.tests.test_libsparse.test_intersect": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "_check_case",
    "pandas.compat.is_platform_windows",
    "pandas.sparse.tests.test_libsparse.check_cases",
    "pandas.sparse.tests.test_libsparse.nose"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_libsparse.test_intersect._check_case": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "_check_correct",
    "_check_length_exc",
    "pandas.sparse.array.BlockIndex",
    "pandas.sparse.tests.test_libsparse.TEST_LENGTH"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_libsparse.test_intersect._check_correct": {
  "data": {
   "lineno": 285
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_libsparse.test_intersect._check_length_exc": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "Exception",
    "pandas.sparse.tests.test_libsparse.nose"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_libsparse.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_list": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.sparse.tests.test_list.nose"
   ]
  },
  "type": "module"
 },
 "pandas.sparse.tests.test_list.SparseArray": {
  "data": {
   "shadows": "pandas.sparse.api.SparseArray"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_list.SparseList": {
  "data": {
   "shadows": "pandas.sparse.api.SparseList"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_list.TestSparseList": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pandas.sparse.tests.test_list.unittest"
   ]
  },
  "type": "class"
 },
 "pandas.sparse.tests.test_list.TestSparseList.setUp": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_list.TestSparseList.test_append_na": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "pandas.sparse.api.SparseArray",
    "pandas.sparse.api.SparseList",
    "pandas.util.testing.assert_sp_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_list.TestSparseList.test_append_zero": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "pandas.sparse.api.SparseArray",
    "pandas.sparse.api.SparseList",
    "pandas.util.testing.assert_sp_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_list.TestSparseList.test_consolidate": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "pandas.sparse.api.SparseArray",
    "pandas.sparse.api.SparseList",
    "pandas.util.testing.assert_sp_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_list.TestSparseList.test_constructor": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "pandas.sparse.api.SparseList",
    "pandas.util.testing.assert_sp_list_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_list.TestSparseList.test_copy": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "pandas.sparse.api.SparseArray",
    "pandas.sparse.api.SparseList",
    "pandas.util.testing.assert_sp_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_list.TestSparseList.test_getitem": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "len",
    "pandas.compat.range",
    "pandas.sparse.api.SparseList",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_list.TestSparseList.test_len": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "len",
    "pandas.sparse.api.SparseList"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_list.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_list.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_list.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_list.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_list.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_list.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_panel": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.sparse.tests.test_panel.nose"
   ]
  },
  "type": "module"
 },
 "pandas.sparse.tests.test_panel.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_panel.Index": {
  "data": {
   "shadows": "pandas.core.index.Index"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_panel.Panel": {
  "data": {
   "shadows": "pandas.Panel"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_panel.SparsePanel": {
  "data": {
   "shadows": "pandas.sparse.api.SparsePanel"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_panel.SparseSeries": {
  "data": {
   "shadows": "pandas.sparse.api.SparseSeries"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_panel.TestSparsePanel": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "pandas.tests.test_panel.SafeForLongAndSparse",
    "pandas.tests.test_panel.SafeForSparse",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.sparse.tests.test_panel.TestSparsePanel._test_op": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "FutureWarning",
    "op",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_sp_frame_equal",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_panel.TestSparsePanel.setUp": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.sparse.api.SparsePanel",
    "pandas.sparse.tests.test_panel.panel_data1",
    "pandas.sparse.tests.test_panel.panel_data2",
    "pandas.sparse.tests.test_panel.panel_data3",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_panel.TestSparsePanel.test_constructor": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "FutureWarning",
    "TypeError",
    "ValueError",
    "pandas.sparse.api.SparsePanel",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_panel.TestSparsePanel.test_constructor_empty": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "FutureWarning",
    "len",
    "pandas.sparse.api.SparsePanel",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_panel.TestSparsePanel.test_copy": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_sp_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_panel.TestSparsePanel.test_delitem_pop": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "KeyError",
    "pandas.Index",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_panel.TestSparsePanel.test_dense_to_sparse": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "pandas.Panel.from_dict",
    "pandas.sparse.api.SparseSeries",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_panel.TestSparsePanel.test_deprecation": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.sparse.api.SparsePanel",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_panel.TestSparsePanel.test_from_dict": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.sparse.api.SparsePanel.from_dict",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_sp_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_panel.TestSparsePanel.test_long_to_wide_sparse": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_panel.TestSparsePanel.test_major_xs": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "_dense_comp"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_panel.TestSparsePanel.test_major_xs._dense_comp": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_panel.TestSparsePanel.test_minor_xs": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "_dense_comp"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_panel.TestSparsePanel.test_minor_xs._dense_comp": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_panel.TestSparsePanel.test_operators": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "_check_ops"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_panel.TestSparsePanel.test_operators._check_ops": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "_dense_comp",
    "_mixed_comp",
    "pandas.Panel.multiply",
    "pandas.Panel.subtract"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_panel.TestSparsePanel.test_operators._check_ops._dense_comp": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "FutureWarning",
    "op",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_panel.TestSparsePanel.test_operators._check_ops._mixed_comp": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "FutureWarning",
    "op",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_panel.TestSparsePanel.test_pickle": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "_test_roundtrip"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_panel.TestSparsePanel.test_pickle._test_roundtrip": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "pandas.core.index.Index",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_sp_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_panel.TestSparsePanel.test_reindex": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "Exception",
    "FutureWarning",
    "ValueError",
    "_compare_with_dense",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_panel.TestSparsePanel.test_reindex._compare_with_dense": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_panel.TestSparsePanel.test_set_value": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "_check_loc"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_panel.TestSparsePanel.test_set_value._check_loc": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_panel.TestSparsePanel.test_setitem": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "Exception",
    "pandas.Index",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_panel.TestSparsePanel.test_to_dense": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "pandas.Panel.from_dict",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_panel.TestSparsePanel.test_to_frame": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "Exception",
    "FutureWarning",
    "_compare_with_dense",
    "pandas.sparse.api.SparsePanel",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_panel.TestSparsePanel.test_to_frame._compare_with_dense": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_panel.TestSparsePanel.test_values": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_panel.bdate_range": {
  "data": {
   "shadows": "pandas.bdate_range"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_panel.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_panel.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_panel.panel_data1": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.bdate_range"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_panel.panel_data2": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.bdate_range"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_panel.panel_data3": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.bdate_range"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_panel.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_panel.test_panel": {
  "data": {
   "shadows": "pandas.tests.test_panel"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_panel.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_series": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.sparse.tests.test_series.nose"
   ]
  },
  "type": "module"
 },
 "pandas.sparse.tests.test_series.BDay": {
  "data": {
   "shadows": "pandas.core.datetools.BDay"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_series.BlockIndex": {
  "data": {
   "shadows": "pandas._sparse.BlockIndex"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_series.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_series.IntIndex": {
  "data": {
   "shadows": "pandas._sparse.IntIndex"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_series.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_series.SharedWithSparse": {
  "data": {
   "shadows": "pandas.tests.series.test_misc_api.SharedWithSparse"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_series.SparseSeries": {
  "data": {
   "shadows": "pandas.sparse.api.SparseSeries"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_series.TestSparseHandlingMultiIndexes": {
  "data": {
   "lineno": 889,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.sparse.tests.test_series.TestSparseHandlingMultiIndexes.setUp": {
  "data": {
   "lineno": 890,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseHandlingMultiIndexes.test_round_trip_preserve_multiindex_names": {
  "data": {
   "lineno": 905,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseHandlingMultiIndexes.test_to_sparse_preserve_multiindex_names_columns": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "pandas.tests.series.test_misc_api.SharedWithSparse",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries._check_all": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "check_func"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.setUp": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "len",
    "pandas.bdate_range",
    "pandas.sparse.api.SparseSeries",
    "pandas.sparse.tests.test_series._test_data1",
    "pandas.sparse.tests.test_series._test_data1_zero",
    "pandas.sparse.tests.test_series._test_data2",
    "pandas.sparse.tests.test_series._test_data2_zero"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_TimeSeries_deprecation": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.SparseTimeSeries",
    "pandas.date_range",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_abs": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "abs",
    "numpy.abs",
    "pandas.sparse.api.SparseSeries",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_astype": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "Exception",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_binary_operators": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "_check_inplace_op",
    "getattr",
    "op",
    "pandas.sparse.tests.test_series.nose",
    "pandas.sparse.tests.test_series.operator"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_binary_operators._check_inplace_op": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "iop",
    "op",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_combine_first": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": [
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_construct_DataFrame_with_sp_series": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.assert_sp_series_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_constructor": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "_check_const",
    "len",
    "numpy.isnan",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "pandas._sparse.BlockIndex",
    "pandas._sparse.IntIndex",
    "pandas.bdate_range",
    "pandas.sparse.api.SparseSeries",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_constructor._check_const": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "pandas.sparse.api.SparseSeries",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_constructor_dtype": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.int64",
    "numpy.isnan",
    "numpy.nan",
    "pandas.sparse.api.SparseSeries"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_constructor_empty": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "len",
    "pandas.sparse.api.SparseSeries"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_constructor_ndarray": {
  "data": {
   "lineno": 290
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_constructor_nonnan": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "numpy.testing.assert_equal",
    "pandas.sparse.api.SparseSeries"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_constructor_scalar": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.nan",
    "pandas.core.common.isnull",
    "pandas.sparse.api.SparseSeries"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_copy_astype": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "numpy.float64",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_dense_to_sparse": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "len",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_dropna": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "pandas.sparse.api.SparseSeries",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_fill_value_corner": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": [
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_fill_value_when_combine_const": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "pandas.sparse.api.SparseSeries"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_fillna": {
  "data": {
   "lineno": 682
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_get_get_value": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "len",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_getitem": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "Exception",
    "_check_getitem",
    "len",
    "pandas.core.datetools.BDay"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_getitem._check_getitem": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "len",
    "pandas.compat.iteritems",
    "pandas.compat.range",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_getitem_slice": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "pandas.sparse.api.SparseSeries",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_groupby": {
  "data": {
   "lineno": 685
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_homogenize": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "TypeError",
    "_check_matches",
    "numpy.arange",
    "pandas._sparse.BlockIndex",
    "pandas.sparse.api.SparseSeries",
    "pandas.sparse.frame.homogenize",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_homogenize._check_matches": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "enumerate",
    "pandas.compat.iteritems",
    "pandas.sparse.api.SparseSeries",
    "pandas.sparse.frame.homogenize"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_iter": {
  "data": {
   "lineno": 676
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_iteration_and_str": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_kind": {
  "data": {
   "lineno": 349
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_numpy_take": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "ValueError",
    "numpy.empty",
    "numpy.take",
    "pandas.sparse.api.SparseSeries",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_operators": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "check",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_operators._check_op": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "isinstance",
    "op",
    "pandas.sparse.api.SparseSeries",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_operators.check": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "_check_op",
    "pandas.sparse.tests.test_series.operator"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_pickle": {
  "data": {
   "lineno": 370
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_pickle._test_roundtrip": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_reductions": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "_compare_all",
    "numpy.NaN",
    "numpy.random.randn",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_reductions._compare_all": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "_compare_with_dense",
    "op"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_reductions._compare_with_dense": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "getattr",
    "op"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_reindex": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "_compare_with_series",
    "list",
    "numpy.arange",
    "numpy.repeat",
    "pandas.sparse.api.SparseSeries",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_reindex._compare_with_series": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_repr": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_series_density": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_set_value": {
  "data": {
   "lineno": 425
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_setitem": {
  "data": {
   "lineno": 494
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_setslice": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_shape": {
  "data": {
   "lineno": 334
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_shift": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "pandas.bdate_range",
    "pandas.core.datetools.bday",
    "pandas.sparse.api.SparseSeries",
    "pandas.sparse.tests.test_series._dense_series_compare",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_shift_dtype": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "numpy.int64",
    "pandas.Series",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_shift_dtype_fill_value": {
  "data": {
   "lineno": 853,
   "symbols_in_volume": [
    "numpy.int64",
    "pandas.Series",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_shift_nan": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_sparse_reindex": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "TypeError",
    "_check_all",
    "numpy.arange",
    "numpy.nan",
    "pandas._sparse.IntIndex",
    "pandas.sparse.api.SparseSeries",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_sparse_reindex._check": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.sparse.api.SparseSeries",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_sparse_reindex._check_all": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "_check_with_fill_value",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_sparse_reindex._check_with_fill_value": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "_check",
    "numpy.nan",
    "pandas._sparse.IntIndex"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_sparse_to_dense": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "numpy.isfinite",
    "numpy.testing.assert_equal",
    "pandas.sparse.tests.test_series._test_data1",
    "pandas.sparse.tests.test_series._test_data1_zero"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_take": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "Exception",
    "len",
    "numpy.nan",
    "numpy.ones",
    "numpy.repeat",
    "pandas.Series",
    "pandas.sparse.api.SparseSeries",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_take._compare_with_dense": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "_compare"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_take._compare_with_dense._compare": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "pandas.sparse.api.SparseSeries",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_to_dense_fill_value": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.sparse.api.SparseSeries",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_to_dense_preserve_name": {
  "data": {
   "lineno": 216
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_to_frame": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.SparseDataFrame",
    "pandas.SparseSeries",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeries.test_truncate": {
  "data": {
   "lineno": 679
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeriesAnalytics": {
  "data": {
   "lineno": 1222,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.sparse.tests.test_series.TestSparseSeriesAnalytics.setUp": {
  "data": {
   "lineno": 1223,
   "symbols_in_volume": [
    "pandas.sparse.api.SparseSeries",
    "pandas.sparse.tests.test_series._test_data1",
    "pandas.sparse.tests.test_series._test_data1_zero"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeriesAnalytics.test_cumsum": {
  "data": {
   "lineno": 1232,
   "symbols_in_volume": [
    "pandas.sparse.api.SparseSeries",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeriesAnalytics.test_numpy_cumsum": {
  "data": {
   "lineno": 1243,
   "symbols_in_volume": [
    "ValueError",
    "numpy.cumsum",
    "numpy.int64",
    "pandas.sparse.api.SparseSeries",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeriesScipyInteraction": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.sparse.tests.test_series.TestSparseSeriesScipyInteraction._check_results_to_coo": {
  "data": {
   "lineno": 1034,
   "symbols_in_volume": [
    "check",
    "numpy.testing.assert_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeriesScipyInteraction._run_test": {
  "data": {
   "lineno": 1022,
   "symbols_in_volume": [
    "check"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeriesScipyInteraction.setUp": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.MultiIndex.from_tuples",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.tools.util.cartesian_product",
    "pandas.util.testing._skip_if_no_scipy",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeriesScipyInteraction.test_concat": {
  "data": {
   "lineno": 1046,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.Series",
    "pandas.SparseSeries",
    "pandas.concat",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeriesScipyInteraction.test_concat_axis1": {
  "data": {
   "lineno": 1067,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.Series",
    "pandas.SparseDataFrame",
    "pandas.SparseSeries",
    "pandas.concat",
    "pandas.util.testing.assert_sp_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeriesScipyInteraction.test_concat_axis1_different_fill": {
  "data": {
   "lineno": 1098,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.Series",
    "pandas.SparseDataFrame",
    "pandas.SparseSeries",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeriesScipyInteraction.test_concat_different_fill": {
  "data": {
   "lineno": 1080,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.Series",
    "pandas.SparseSeries",
    "pandas.concat",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeriesScipyInteraction.test_concat_different_kind": {
  "data": {
   "lineno": 1111,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.Series",
    "pandas.SparseSeries",
    "pandas.concat",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeriesScipyInteraction.test_concat_sparse_dense": {
  "data": {
   "lineno": 1128,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.Series",
    "pandas.SparseSeries",
    "pandas.concat",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeriesScipyInteraction.test_from_coo_dense_index": {
  "data": {
   "lineno": 1011,
   "symbols_in_volume": [
    "check",
    "pandas.sparse.api.SparseSeries.from_coo",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeriesScipyInteraction.test_from_coo_nodense_index": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": [
    "check",
    "check.dropna",
    "pandas.sparse.api.SparseSeries.from_coo",
    "pandas.util.testing.assert_sp_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeriesScipyInteraction.test_to_coo_bad_ilevel": {
  "data": {
   "lineno": 1002,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeriesScipyInteraction.test_to_coo_bad_partition_nonnull_intersection": {
  "data": {
   "lineno": 989,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeriesScipyInteraction.test_to_coo_bad_partition_small_union": {
  "data": {
   "lineno": 993,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeriesScipyInteraction.test_to_coo_duplicate_index_entries": {
  "data": {
   "lineno": 1006,
   "symbols_in_volume": [
    "ValueError",
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeriesScipyInteraction.test_to_coo_integer_names_integer_row_levels_nosort": {
  "data": {
   "lineno": 977
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeriesScipyInteraction.test_to_coo_nlevels_less_than_two": {
  "data": {
   "lineno": 997,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeriesScipyInteraction.test_to_coo_text_names_integer_row_levels_nosort": {
  "data": {
   "lineno": 955
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeriesScipyInteraction.test_to_coo_text_names_integer_row_levels_sort": {
  "data": {
   "lineno": 961
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeriesScipyInteraction.test_to_coo_text_names_text_row_levels_nosort": {
  "data": {
   "lineno": 983
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeriesScipyInteraction.test_to_coo_text_names_text_row_levels_nosort_col_level_single": {
  "data": {
   "lineno": 969
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeriesScipyInteraction.test_value_counts": {
  "data": {
   "lineno": 1160,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.SparseSeries",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeriesScipyInteraction.test_value_counts_dup": {
  "data": {
   "lineno": 1176,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.SparseSeries",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.TestSparseSeriesScipyInteraction.test_value_counts_int": {
  "data": {
   "lineno": 1197,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.SparseSeries",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series._dense_series_compare": {
  "data": {
   "lineno": 1215,
   "symbols_in_volume": [
    "f",
    "isinstance",
    "pandas.sparse.api.SparseSeries",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series._test_data1": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "float",
    "numpy.arange",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series._test_data1_zero": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.isnan",
    "pandas.sparse.tests.test_series._test_data1"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series._test_data2": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "float",
    "numpy.arange",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series._test_data2_zero": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "numpy.isnan",
    "pandas.sparse.tests.test_series._test_data2"
   ]
  },
  "type": "function"
 },
 "pandas.sparse.tests.test_series.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_series.bdate_range": {
  "data": {
   "shadows": "pandas.bdate_range"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_series.cartesian_product": {
  "data": {
   "shadows": "pandas.tools.util.cartesian_product"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_series.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_series.datetools": {
  "data": {
   "shadows": "pandas.core.datetools"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_series.isnull": {
  "data": {
   "shadows": "pandas.core.common.isnull"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_series.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_series.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_series.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_series.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_series.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_series.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_series.scipy.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_series.spf": {
  "data": {
   "shadows": "pandas.sparse.frame"
  },
  "type": "import"
 },
 "pandas.sparse.tests.test_series.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.stats": {
  "data": {},
  "type": "module"
 },
 "pandas.stats.api": {
  "data": {},
  "type": "module"
 },
 "pandas.stats.api.fama_macbeth": {
  "data": {
   "shadows": "pandas.stats.fama_macbeth.fama_macbeth"
  },
  "type": "import"
 },
 "pandas.stats.api.ols": {
  "data": {
   "shadows": "pandas.stats.interface.ols"
  },
  "type": "import"
 },
 "pandas.stats.common": {
  "data": {
   "symbols_in_volume": [
    "list",
    "pandas.stats.common._WINDOW_TYPES",
    "set"
   ]
  },
  "type": "module"
 },
 "pandas.stats.common._ADDITIONAL_CLUSTER_TYPES": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "pandas.stats.common._WINDOW_TYPES": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "pandas.stats.common._get_cluster_type": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ValueError",
    "pandas.stats.common._ADDITIONAL_CLUSTER_TYPES",
    "pandas.stats.common._get_window_type",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.stats.common._get_window_type": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ValueError",
    "pandas.stats.common._WINDOW_TYPES",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.stats.common.banner": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.stats.interface": {
  "data": {},
  "type": "module"
 },
 "pandas.stats.interface.DataFrame": {
  "data": {
   "shadows": "pandas.core.api.DataFrame"
  },
  "type": "import"
 },
 "pandas.stats.interface.MovingOLS": {
  "data": {
   "shadows": "pandas.stats.ols.MovingOLS"
  },
  "type": "import"
 },
 "pandas.stats.interface.MovingPanelOLS": {
  "data": {
   "shadows": "pandas.stats.plm.MovingPanelOLS"
  },
  "type": "import"
 },
 "pandas.stats.interface.MultiIndex": {
  "data": {
   "shadows": "pandas.core.api.MultiIndex"
  },
  "type": "import"
 },
 "pandas.stats.interface.NonPooledPanelOLS": {
  "data": {
   "shadows": "pandas.stats.plm.NonPooledPanelOLS"
  },
  "type": "import"
 },
 "pandas.stats.interface.OLS": {
  "data": {
   "shadows": "pandas.stats.ols.OLS"
  },
  "type": "import"
 },
 "pandas.stats.interface.Panel": {
  "data": {
   "shadows": "pandas.core.api.Panel"
  },
  "type": "import"
 },
 "pandas.stats.interface.PanelOLS": {
  "data": {
   "shadows": "pandas.stats.plm.PanelOLS"
  },
  "type": "import"
 },
 "pandas.stats.interface.Series": {
  "data": {
   "shadows": "pandas.core.api.Series"
  },
  "type": "import"
 },
 "pandas.stats.interface.common": {
  "data": {
   "shadows": "pandas.stats.common"
  },
  "type": "import"
 },
 "pandas.stats.interface.ols": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "klass",
    "pandas.core.api.DataFrame",
    "pandas.core.api.MultiIndex",
    "pandas.core.api.Panel",
    "pandas.core.api.Series",
    "pandas.stats.common._get_window_type",
    "pandas.stats.ols.MovingOLS",
    "pandas.stats.ols.OLS",
    "pandas.stats.plm.MovingPanelOLS",
    "pandas.stats.plm.NonPooledPanelOLS",
    "pandas.stats.plm.PanelOLS"
   ]
  },
  "type": "function"
 },
 "pandas.stats.math": {
  "data": {},
  "type": "module"
 },
 "pandas.stats.math.SL": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "pandas.stats.math.calc_F": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "len",
    "numpy.dot",
    "pandas.stats.math.inv",
    "scipy.stats.f.cdf"
   ]
  },
  "type": "function"
 },
 "pandas.stats.math.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pandas.stats.math.f": {
  "data": {
   "shadows": "scipy.stats.f"
  },
  "type": "import"
 },
 "pandas.stats.math.inv": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.linalg.LinAlgError",
    "numpy.linalg.inv",
    "numpy.linalg.pinv"
   ]
  },
  "type": "function"
 },
 "pandas.stats.math.is_psd": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "numpy.isreal",
    "numpy.linalg.eigvals"
   ]
  },
  "type": "function"
 },
 "pandas.stats.math.linalg": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "pandas.stats.math.newey_west": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "int",
    "numpy.ceil",
    "numpy.dot",
    "pandas.compat.range",
    "pandas.stats.math.is_psd"
   ]
  },
  "type": "function"
 },
 "pandas.stats.math.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.stats.math.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.stats.math.rank": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.add.reduce",
    "numpy.alltrue",
    "numpy.asarray",
    "numpy.equal",
    "numpy.greater",
    "numpy.int32",
    "scipy.linalg.svdvals"
   ]
  },
  "type": "function"
 },
 "pandas.stats.math.solve": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.linalg.LinAlgError",
    "numpy.linalg.pinv",
    "numpy.linalg.solve"
   ]
  },
  "type": "function"
 },
 "pandas.stats.misc": {
  "data": {},
  "type": "module"
 },
 "pandas.stats.misc.DataFrame": {
  "data": {
   "shadows": "pandas.core.api.DataFrame"
  },
  "type": "import"
 },
 "pandas.stats.misc.NaN": {
  "data": {
   "shadows": "numpy.NaN"
  },
  "type": "import"
 },
 "pandas.stats.misc.Series": {
  "data": {
   "shadows": "pandas.core.api.Series"
  },
  "type": "import"
 },
 "pandas.stats.misc._bucket_labels": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "len",
    "numpy.NaN",
    "numpy.arange",
    "numpy.array_split",
    "numpy.asarray",
    "numpy.empty",
    "numpy.isfinite"
   ]
  },
  "type": "function"
 },
 "pandas.stats.misc._bucketpanel_by": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "dict",
    "list",
    "numpy.unique",
    "pandas.core.common.isnull",
    "pandas.stats.misc._bucket_labels",
    "pandas.stats.misc._uniquify",
    "pandas.stats.misc.bucketcat"
   ]
  },
  "type": "function"
 },
 "pandas.stats.misc._bucketpanel_by.relabel": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "int",
    "pandas.core.common.notnull"
   ]
  },
  "type": "function"
 },
 "pandas.stats.misc._bucketpanel_cat": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "numpy.ceil",
    "numpy.log10",
    "numpy.unique",
    "pandas.compat.zip",
    "pandas.core.common.notnull",
    "pandas.stats.misc._intern",
    "pandas.stats.misc.bucketcat"
   ]
  },
  "type": "function"
 },
 "pandas.stats.misc._intern": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "pandas.stats.misc._split_quantile": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.array_split",
    "numpy.asarray",
    "numpy.isfinite"
   ]
  },
  "type": "function"
 },
 "pandas.stats.misc._uniquify": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "max"
   ]
  },
  "type": "function"
 },
 "pandas.stats.misc.bucket": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "len",
    "numpy.NaN",
    "numpy.arange",
    "numpy.empty",
    "pandas.core.api.DataFrame",
    "pandas.stats.misc._split_quantile"
   ]
  },
  "type": "function"
 },
 "pandas.stats.misc.bucketcat": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.asarray",
    "numpy.unique",
    "pandas.core.api.DataFrame",
    "pandas.core.api.Series",
    "pandas.core.common.notnull"
   ]
  },
  "type": "function"
 },
 "pandas.stats.misc.bucketpanel": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "Exception",
    "len",
    "pandas.stats.misc._bucketpanel_by",
    "pandas.stats.misc._bucketpanel_cat"
   ]
  },
  "type": "function"
 },
 "pandas.stats.misc.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.stats.misc.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.stats.misc.correl_ts": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "pandas.compat.iteritems",
    "pandas.core.api.Series",
    "pandas.stats.misc.zscore"
   ]
  },
  "type": "function"
 },
 "pandas.stats.misc.correl_xs": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "pandas.stats.misc.correl_ts"
   ]
  },
  "type": "function"
 },
 "pandas.stats.misc.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.stats.misc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.stats.misc.percentileRank": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "fun",
    "isinstance",
    "numpy.NaN",
    "pandas.compat.iteritems",
    "pandas.core.api.DataFrame",
    "pandas.core.api.Series",
    "pandas.core.series.remove_na",
    "pandas.stats.misc.percentileofscore"
   ]
  },
  "type": "function"
 },
 "pandas.stats.misc.percentileofscore": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "len",
    "numpy.any",
    "numpy.append",
    "numpy.array",
    "numpy.mean",
    "numpy.sort",
    "pandas.compat.lrange",
    "sum"
   ]
  },
  "type": "function"
 },
 "pandas.stats.misc.remove_na": {
  "data": {
   "shadows": "pandas.core.series.remove_na"
  },
  "type": "import"
 },
 "pandas.stats.misc.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.stats.misc.zscore": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "pandas.stats.moments": {
  "data": {
   "symbols_in_volume": [
    "pandas.stats.moments._ddof_kw",
    "pandas.stats.moments._expanding_func",
    "pandas.stats.moments._rolling_func",
    "pandas.stats.moments.ewmstd"
   ]
  },
  "type": "module"
 },
 "pandas.stats.moments.Appender": {
  "data": {
   "shadows": "pandas.util.decorators.Appender"
  },
  "type": "import"
 },
 "pandas.stats.moments.DataFrame": {
  "data": {
   "shadows": "pandas.core.api.DataFrame"
  },
  "type": "import"
 },
 "pandas.stats.moments.Series": {
  "data": {
   "shadows": "pandas.core.api.Series"
  },
  "type": "import"
 },
 "pandas.stats.moments.Substitution": {
  "data": {
   "shadows": "pandas.util.decorators.Substitution"
  },
  "type": "import"
 },
 "pandas.stats.moments.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pandas.stats.moments._bias_kw": {
  "data": {
   "lineno": 175
  },
  "type": "constant"
 },
 "pandas.stats.moments._binary_arg": {
  "data": {
   "lineno": 154
  },
  "type": "constant"
 },
 "pandas.stats.moments._binary_arg_flex": {
  "data": {
   "lineno": 149
  },
  "type": "constant"
 },
 "pandas.stats.moments._ddof_kw": {
  "data": {
   "lineno": 170
  },
  "type": "constant"
 },
 "pandas.stats.moments._doc_template": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pandas.stats.moments._ewm_kw": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "pandas.stats.moments._ewm_notes": {
  "data": {
   "lineno": 100
  },
  "type": "constant"
 },
 "pandas.stats.moments._expanding_func": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "f"
   ]
  },
  "type": "function"
 },
 "pandas.stats.moments._expanding_func.f": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "pandas.stats.moments._doc_template",
    "pandas.stats.moments._expanding_kw",
    "pandas.stats.moments._type_of_input_retval",
    "pandas.stats.moments._unary_arg",
    "pandas.stats.moments.ensure_compat",
    "pandas.util.decorators.Appender",
    "pandas.util.decorators.Substitution"
   ]
  },
  "type": "function"
 },
 "pandas.stats.moments._expanding_kw": {
  "data": {
   "lineno": 129
  },
  "type": "constant"
 },
 "pandas.stats.moments._flex_retval": {
  "data": {
   "lineno": 140
  },
  "type": "constant"
 },
 "pandas.stats.moments._pairwise_arg": {
  "data": {
   "lineno": 158
  },
  "type": "constant"
 },
 "pandas.stats.moments._pairwise_kw": {
  "data": {
   "lineno": 162
  },
  "type": "constant"
 },
 "pandas.stats.moments._pairwise_retval": {
  "data": {
   "lineno": 145
  },
  "type": "constant"
 },
 "pandas.stats.moments._roll_kw": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pandas.stats.moments._roll_notes": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "pandas.stats.moments._rolling_func": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "f"
   ]
  },
  "type": "function"
 },
 "pandas.stats.moments._rolling_func.f": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "pandas.stats.moments._doc_template",
    "pandas.stats.moments._roll_kw",
    "pandas.stats.moments._roll_notes",
    "pandas.stats.moments._type_of_input_retval",
    "pandas.stats.moments._unary_arg",
    "pandas.stats.moments.ensure_compat",
    "pandas.util.decorators.Appender",
    "pandas.util.decorators.Substitution"
   ]
  },
  "type": "function"
 },
 "pandas.stats.moments._type_of_input_retval": {
  "data": {
   "lineno": 138
  },
  "type": "constant"
 },
 "pandas.stats.moments._unary_arg": {
  "data": {
   "lineno": 147
  },
  "type": "constant"
 },
 "pandas.stats.moments.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pandas.stats.moments.ensure_compat": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "AssertionError",
    "FutureWarning",
    "f",
    "getattr",
    "isinstance",
    "len",
    "numpy.ndarray",
    "pandas.core.api.DataFrame",
    "pandas.core.api.Series",
    "pandas.stats.moments.warnings",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.stats.moments.ensure_compat.f": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "pandas.lib.isscalar",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.stats.moments.ewma": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "pandas.stats.moments._doc_template",
    "pandas.stats.moments._ewm_kw",
    "pandas.stats.moments._ewm_notes",
    "pandas.stats.moments._type_of_input_retval",
    "pandas.stats.moments._unary_arg",
    "pandas.stats.moments.ensure_compat",
    "pandas.util.decorators.Appender",
    "pandas.util.decorators.Substitution"
   ]
  },
  "type": "function"
 },
 "pandas.stats.moments.ewmcorr": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "pandas.stats.moments._binary_arg_flex",
    "pandas.stats.moments._doc_template",
    "pandas.stats.moments._ewm_kw",
    "pandas.stats.moments._ewm_notes",
    "pandas.stats.moments._pairwise_kw",
    "pandas.stats.moments._type_of_input_retval",
    "pandas.stats.moments.ensure_compat",
    "pandas.util.decorators.Appender",
    "pandas.util.decorators.Substitution"
   ]
  },
  "type": "function"
 },
 "pandas.stats.moments.ewmcov": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "pandas.stats.moments._binary_arg_flex",
    "pandas.stats.moments._doc_template",
    "pandas.stats.moments._ewm_kw",
    "pandas.stats.moments._ewm_notes",
    "pandas.stats.moments._pairwise_kw",
    "pandas.stats.moments._type_of_input_retval",
    "pandas.stats.moments.ensure_compat",
    "pandas.util.decorators.Appender",
    "pandas.util.decorators.Substitution"
   ]
  },
  "type": "function"
 },
 "pandas.stats.moments.ewmstd": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "pandas.stats.moments._bias_kw",
    "pandas.stats.moments._doc_template",
    "pandas.stats.moments._ewm_kw",
    "pandas.stats.moments._ewm_notes",
    "pandas.stats.moments._type_of_input_retval",
    "pandas.stats.moments._unary_arg",
    "pandas.stats.moments.ensure_compat",
    "pandas.util.decorators.Appender",
    "pandas.util.decorators.Substitution"
   ]
  },
  "type": "function"
 },
 "pandas.stats.moments.ewmvar": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "pandas.stats.moments._bias_kw",
    "pandas.stats.moments._doc_template",
    "pandas.stats.moments._ewm_kw",
    "pandas.stats.moments._ewm_notes",
    "pandas.stats.moments._type_of_input_retval",
    "pandas.stats.moments._unary_arg",
    "pandas.stats.moments.ensure_compat",
    "pandas.util.decorators.Appender",
    "pandas.util.decorators.Substitution"
   ]
  },
  "type": "function"
 },
 "pandas.stats.moments.ewmvol": {
  "data": {
   "lineno": 385
  },
  "type": "constant"
 },
 "pandas.stats.moments.expanding_apply": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "pandas.stats.moments.ensure_compat"
   ]
  },
  "type": "function"
 },
 "pandas.stats.moments.expanding_corr": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "pandas.stats.moments._binary_arg_flex",
    "pandas.stats.moments._doc_template",
    "pandas.stats.moments._expanding_kw",
    "pandas.stats.moments._flex_retval",
    "pandas.stats.moments._pairwise_kw",
    "pandas.stats.moments.ensure_compat",
    "pandas.util.decorators.Appender",
    "pandas.util.decorators.Substitution"
   ]
  },
  "type": "function"
 },
 "pandas.stats.moments.expanding_count": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "pandas.stats.moments.ensure_compat"
   ]
  },
  "type": "function"
 },
 "pandas.stats.moments.expanding_cov": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "pandas.stats.moments._binary_arg_flex",
    "pandas.stats.moments._ddof_kw",
    "pandas.stats.moments._doc_template",
    "pandas.stats.moments._expanding_kw",
    "pandas.stats.moments._flex_retval",
    "pandas.stats.moments._pairwise_kw",
    "pandas.stats.moments.ensure_compat",
    "pandas.util.decorators.Appender",
    "pandas.util.decorators.Substitution"
   ]
  },
  "type": "function"
 },
 "pandas.stats.moments.expanding_kurt": {
  "data": {
   "lineno": 687
  },
  "type": "constant"
 },
 "pandas.stats.moments.expanding_max": {
  "data": {
   "lineno": 674
  },
  "type": "constant"
 },
 "pandas.stats.moments.expanding_mean": {
  "data": {
   "lineno": 677
  },
  "type": "constant"
 },
 "pandas.stats.moments.expanding_median": {
  "data": {
   "lineno": 678
  },
  "type": "constant"
 },
 "pandas.stats.moments.expanding_min": {
  "data": {
   "lineno": 675
  },
  "type": "constant"
 },
 "pandas.stats.moments.expanding_quantile": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "pandas.stats.moments.ensure_compat"
   ]
  },
  "type": "function"
 },
 "pandas.stats.moments.expanding_skew": {
  "data": {
   "lineno": 686
  },
  "type": "constant"
 },
 "pandas.stats.moments.expanding_std": {
  "data": {
   "lineno": 680
  },
  "type": "constant"
 },
 "pandas.stats.moments.expanding_sum": {
  "data": {
   "lineno": 676
  },
  "type": "constant"
 },
 "pandas.stats.moments.expanding_var": {
  "data": {
   "lineno": 683
  },
  "type": "constant"
 },
 "pandas.stats.moments.lib": {
  "data": {
   "shadows": "pandas.lib"
  },
  "type": "import"
 },
 "pandas.stats.moments.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.stats.moments.rolling_apply": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "pandas.stats.moments.ensure_compat"
   ]
  },
  "type": "function"
 },
 "pandas.stats.moments.rolling_corr": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "pandas.stats.moments._binary_arg_flex",
    "pandas.stats.moments._doc_template",
    "pandas.stats.moments._flex_retval",
    "pandas.stats.moments._pairwise_kw",
    "pandas.stats.moments._roll_kw",
    "pandas.stats.moments._roll_notes",
    "pandas.stats.moments.ensure_compat",
    "pandas.util.decorators.Appender",
    "pandas.util.decorators.Substitution"
   ]
  },
  "type": "function"
 },
 "pandas.stats.moments.rolling_count": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "pandas.stats.moments.ensure_compat"
   ]
  },
  "type": "function"
 },
 "pandas.stats.moments.rolling_cov": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "pandas.stats.moments._binary_arg_flex",
    "pandas.stats.moments._ddof_kw",
    "pandas.stats.moments._doc_template",
    "pandas.stats.moments._flex_retval",
    "pandas.stats.moments._pairwise_kw",
    "pandas.stats.moments._roll_kw",
    "pandas.stats.moments._roll_notes",
    "pandas.stats.moments.ensure_compat",
    "pandas.util.decorators.Appender",
    "pandas.util.decorators.Substitution"
   ]
  },
  "type": "function"
 },
 "pandas.stats.moments.rolling_kurt": {
  "data": {
   "lineno": 488
  },
  "type": "constant"
 },
 "pandas.stats.moments.rolling_max": {
  "data": {
   "lineno": 476
  },
  "type": "constant"
 },
 "pandas.stats.moments.rolling_mean": {
  "data": {
   "lineno": 479
  },
  "type": "constant"
 },
 "pandas.stats.moments.rolling_median": {
  "data": {
   "lineno": 480
  },
  "type": "constant"
 },
 "pandas.stats.moments.rolling_min": {
  "data": {
   "lineno": 477
  },
  "type": "constant"
 },
 "pandas.stats.moments.rolling_quantile": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "pandas.stats.moments.ensure_compat"
   ]
  },
  "type": "function"
 },
 "pandas.stats.moments.rolling_skew": {
  "data": {
   "lineno": 487
  },
  "type": "constant"
 },
 "pandas.stats.moments.rolling_std": {
  "data": {
   "lineno": 481
  },
  "type": "constant"
 },
 "pandas.stats.moments.rolling_sum": {
  "data": {
   "lineno": 478
  },
  "type": "constant"
 },
 "pandas.stats.moments.rolling_var": {
  "data": {
   "lineno": 484
  },
  "type": "constant"
 },
 "pandas.stats.moments.rolling_window": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "pandas.stats.moments.ensure_compat"
   ]
  },
  "type": "function"
 },
 "pandas.stats.moments.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.stats.tests": {
  "data": {},
  "type": "module"
 },
 "pandas.stats.tests.common": {
  "data": {
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.bdate_range",
    "pandas.stats.tests.common.K",
    "pandas.stats.tests.common.N",
    "pandas.stats.tests.common.start",
    "pandas.stats.tests.common.string"
   ]
  },
  "type": "module"
 },
 "pandas.stats.tests.common.BaseTest": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.stats.tests.common.BaseTest.createData1": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.NaN"
   ]
  },
  "type": "function"
 },
 "pandas.stats.tests.common.BaseTest.createData2": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.NaN",
    "numpy.array",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.stats.tests.common.BaseTest.createData3": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.array",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.stats.tests.common.BaseTest.setUp": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "pandas.stats.tests.common.check_for_scipy",
    "pandas.stats.tests.common.check_for_statsmodels",
    "pandas.stats.tests.common.getBasicDatasets"
   ]
  },
  "type": "function"
 },
 "pandas.stats.tests.common.COLS": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pandas.stats.tests.common.DATE_RANGE": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "pandas.stats.tests.common.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.stats.tests.common.K": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pandas.stats.tests.common.N": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pandas.stats.tests.common.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.stats.tests.common.bdate_range": {
  "data": {
   "shadows": "pandas.bdate_range"
  },
  "type": "import"
 },
 "pandas.stats.tests.common.check_for_scipy": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ImportError",
    "pandas.stats.tests.common.nose"
   ]
  },
  "type": "function"
 },
 "pandas.stats.tests.common.check_for_statsmodels": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ImportError",
    "pandas.stats.tests.common.nose"
   ]
  },
  "type": "function"
 },
 "pandas.stats.tests.common.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.stats.tests.common.getBasicDatasets": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "pandas.stats.tests.common.makeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.stats.tests.common.makeDataFrame": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.stats.tests.common.COLS",
    "pandas.stats.tests.common.DATE_RANGE",
    "pandas.stats.tests.common.K",
    "pandas.stats.tests.common.N"
   ]
  },
  "type": "function"
 },
 "pandas.stats.tests.common.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.stats.tests.common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.stats.tests.common.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "pandas.stats.tests.common.sm": {
  "data": {
   "shadows": "scikits.statsmodels.api"
  },
  "type": "import"
 },
 "pandas.stats.tests.common.start": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "pandas.stats.tests.common.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "pandas.stats.tests.common.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.stats.tests.test_fama_macbeth": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.stats.tests.test_fama_macbeth.nose"
   ]
  },
  "type": "module"
 },
 "pandas.stats.tests.test_fama_macbeth.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.stats.tests.test_fama_macbeth.Panel": {
  "data": {
   "shadows": "pandas.Panel"
  },
  "type": "import"
 },
 "pandas.stats.tests.test_fama_macbeth.TestFamaMacBeth": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "pandas.stats.tests.test_fama_macbeth.TestFamaMacBeth._check_stuff_works": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.stats.tests.test_fama_macbeth.TestFamaMacBeth.checkFamaMacBethExtended": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "FutureWarning",
    "assert_almost_equal",
    "len",
    "pandas.compat.range",
    "pandas.stats.api.fama_macbeth",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.stats.tests.test_fama_macbeth.TestFamaMacBeth.testFamaMacBethRolling": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "dict",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Panel.from_dict"
   ]
  },
  "type": "function"
 },
 "pandas.stats.tests.test_fama_macbeth.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.stats.tests.test_fama_macbeth.fama_macbeth": {
  "data": {
   "shadows": "pandas.stats.api.fama_macbeth"
  },
  "type": "import"
 },
 "pandas.stats.tests.test_fama_macbeth.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.stats.tests.test_fama_macbeth.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.stats.tests.test_fama_macbeth.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.stats.tests.test_fama_macbeth.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.stats.tests.test_math": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pandas.stats.tests.test_math.nose"
   ]
  },
  "type": "module"
 },
 "pandas.stats.tests.test_math.DataFrame": {
  "data": {
   "shadows": "pandas.core.api.DataFrame"
  },
  "type": "import"
 },
 "pandas.stats.tests.test_math.Series": {
  "data": {
   "shadows": "pandas.core.api.Series"
  },
  "type": "import"
 },
 "pandas.stats.tests.test_math.TestMath": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.stats.tests.test_math.TestMath.setUp": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.NaN",
    "numpy.arange",
    "numpy.random.randn",
    "pandas.core.api.DataFrame",
    "pandas.core.api.Series",
    "pandas.core.api.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.stats.tests.test_math.TestMath.test_inv_illformed": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "pandas.core.api.DataFrame",
    "pandas.stats.math.inv"
   ]
  },
  "type": "function"
 },
 "pandas.stats.tests.test_math.TestMath.test_rank_1d": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "pandas.core.api.Series",
    "pandas.stats.math.rank"
   ]
  },
  "type": "function"
 },
 "pandas.stats.tests.test_math.TestMath.test_solve_rect": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.allclose",
    "numpy.random.randn",
    "pandas.core.api.Series",
    "pandas.ols",
    "pandas.stats.math.solve",
    "pandas.stats.tests.test_math._have_statsmodels",
    "pandas.stats.tests.test_math.nose",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.stats.tests.test_math._have_statsmodels": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pandas.stats.tests.test_math.date_range": {
  "data": {
   "shadows": "pandas.core.api.date_range"
  },
  "type": "import"
 },
 "pandas.stats.tests.test_math.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.stats.tests.test_math.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.stats.tests.test_math.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.stats.tests.test_math.ols": {
  "data": {
   "shadows": "pandas.ols"
  },
  "type": "import"
 },
 "pandas.stats.tests.test_math.pmath": {
  "data": {
   "shadows": "pandas.stats.math"
  },
  "type": "import"
 },
 "pandas.stats.tests.test_math.randn": {
  "data": {
   "shadows": "numpy.random.randn"
  },
  "type": "import"
 },
 "pandas.stats.tests.test_math.sm": {
  "data": {
   "shadows": "scikits.statsmodels.api"
  },
  "type": "import"
 },
 "pandas.stats.tests.test_math.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.stats.tests.test_var": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pandas.stats.tests.test_var.nose",
    "pandas.stats.tests.test_var.unittest",
    "pandas.stats.var",
    "reload"
   ]
  },
  "type": "module"
 },
 "pandas.stats.tests.test_var.CheckVAR": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.stats.tests.test_var.CheckVAR.test_aic": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.stats.tests.test_var.CheckVAR.test_bic": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.stats.tests.test_var.CheckVAR.test_bse": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "pandas.stats.tests.test_var.DECIMAL_4",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.stats.tests.test_var.CheckVAR.test_detsig": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.stats.tests.test_var.CheckVAR.test_df_eq": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "pandas.stats.tests.test_var.CheckVAR.test_fpe": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.stats.tests.test_var.CheckVAR.test_hqic": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.stats.tests.test_var.CheckVAR.test_llf": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "eval",
    "len",
    "pandas.compat.range",
    "pandas.stats.tests.test_var.DECIMAL_2",
    "pandas.util.testing.assert_almost_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.stats.tests.test_var.CheckVAR.test_neqs": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "pandas.stats.tests.test_var.CheckVAR.test_nobs": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "pandas.stats.tests.test_var.CheckVAR.test_params": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "pandas.stats.tests.test_var.DECIMAL_3",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.stats.tests.test_var.CheckVAR.test_rmse": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "eval",
    "len",
    "pandas.compat.range",
    "pandas.stats.tests.test_var.DECIMAL_6",
    "pandas.util.testing.assert_almost_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.stats.tests.test_var.CheckVAR.test_rsquared": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "eval",
    "len",
    "pandas.compat.range",
    "pandas.stats.tests.test_var.DECIMAL_3",
    "pandas.util.testing.assert_almost_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.stats.tests.test_var.DECIMAL_2": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pandas.stats.tests.test_var.DECIMAL_3": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pandas.stats.tests.test_var.DECIMAL_4": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pandas.stats.tests.test_var.DECIMAL_5": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pandas.stats.tests.test_var.DECIMAL_6": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pandas.stats.tests.test_var.Foo": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.stats.tests.test_var.Foo.__init__": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "VAR2",
    "diff",
    "float",
    "log",
    "results.results_var.MacrodataResults",
    "scikits.statsmodels.datasets.macrodata.load"
   ]
  },
  "type": "function"
 },
 "pandas.stats.tests.test_var.TestCase": {
  "data": {
   "shadows": "numpy.testing.TestCase"
  },
  "type": "import"
 },
 "pandas.stats.tests.test_var.VAR": {
  "data": {
   "shadows": "pandas.stats.var.VAR"
  },
  "type": "import"
 },
 "pandas.stats.tests.test_var._pvar": {
  "data": {
   "shadows": "pandas.stats.var"
  },
  "type": "import"
 },
 "pandas.stats.tests.test_var.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.stats.tests.test_var.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "pandas.stats.tests.test_var.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.stats.tests.test_var.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.stats.tests.test_var.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.stats.tests.test_var.results_var": {
  "data": {
   "shadows": "results.results_var"
  },
  "type": "import"
 },
 "pandas.stats.tests.test_var.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "pandas.stats.tests.test_var.sm": {
  "data": {
   "shadows": "scikits.statsmodels"
  },
  "type": "import"
 },
 "pandas.stats.tests.test_var.sm_var": {
  "data": {
   "shadows": "scikits.statsmodels.tsa.var"
  },
  "type": "import"
 },
 "pandas.stats.tests.test_var.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pandas.test": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "pandas.tests": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.formats": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.formats.test_printing": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.tests.formats.test_printing.nose"
   ]
  },
  "type": "module"
 },
 "pandas.tests.formats.test_printing.TestFormattBase": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.formats.test_printing.TestFormattBase.test_adjoin": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "pandas.formats.printing.adjoin"
   ]
  },
  "type": "function"
 },
 "pandas.tests.formats.test_printing.TestFormattBase.test_adjoin_unicode": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "pandas.formats.format.EastAsianTextAdjustment",
    "pandas.formats.printing.adjoin"
   ]
  },
  "type": "function"
 },
 "pandas.tests.formats.test_printing.TestFormattBase.test_ambiguous_width": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "pandas.core.config.option_context",
    "pandas.formats.format.EastAsianTextAdjustment"
   ]
  },
  "type": "function"
 },
 "pandas.tests.formats.test_printing.TestFormattBase.test_east_asian_len": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "pandas.formats.format.EastAsianTextAdjustment"
   ]
  },
  "type": "function"
 },
 "pandas.tests.formats.test_printing.TestFormattBase.test_justify": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "just",
    "pandas.formats.format.EastAsianTextAdjustment"
   ]
  },
  "type": "function"
 },
 "pandas.tests.formats.test_printing.TestFormattBase.test_justify.just": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "pandas.tests.formats.test_printing._multiprocess_can_split_": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "pandas.tests.formats.test_printing.cf": {
  "data": {
   "shadows": "pandas.core.config"
  },
  "type": "import"
 },
 "pandas.tests.formats.test_printing.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.formats.test_printing.fmt": {
  "data": {
   "shadows": "pandas.formats.format"
  },
  "type": "import"
 },
 "pandas.tests.formats.test_printing.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tests.formats.test_printing.printing": {
  "data": {
   "shadows": "pandas.formats.printing"
  },
  "type": "import"
 },
 "pandas.tests.formats.test_printing.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "pandas.tests.formats.test_printing.test_adjoin": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "pandas.formats.printing.adjoin"
   ]
  },
  "type": "function"
 },
 "pandas.tests.formats.test_printing.test_repr_binary_type": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "TypeError",
    "btype",
    "pandas.compat.binary_type",
    "pandas.compat.bytes_to_str",
    "pandas.compat.text_type",
    "pandas.core.config.get_option",
    "pandas.formats.printing.pprint_thing",
    "pandas.tests.formats.test_printing.string",
    "pandas.util.testing.assert_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.formats.test_printing.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.formats.test_style": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "nose.SkipTest",
    "pandas.tests.formats.test_style.job_name",
    "pandas.tests.formats.test_style.os"
   ]
  },
  "type": "module"
 },
 "pandas.tests.formats.test_style.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.formats.test_style.SkipTest": {
  "data": {
   "shadows": "nose.SkipTest"
  },
  "type": "import"
 },
 "pandas.tests.formats.test_style.Styler": {
  "data": {
   "shadows": "pandas.formats.style.Styler"
  },
  "type": "import"
 },
 "pandas.tests.formats.test_style.TestCase": {
  "data": {
   "shadows": "pandas.util.testing.TestCase"
  },
  "type": "import"
 },
 "pandas.tests.formats.test_style.TestStyler": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.formats.test_style.TestStyler.setUp": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.random.permutation",
    "numpy.random.randn",
    "numpy.random.seed",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.formats.style.Styler",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.formats.test_style.TestStyler.setUp.h": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.formats.test_style.TestStyler.test_apply_axis": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.formats.test_style.TestStyler.test_apply_none": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.formats.test_style.TestStyler.test_apply_none.f": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "numpy.where",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.formats.test_style.TestStyler.test_apply_subset": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "pandas.IndexSlice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.formats.test_style.TestStyler.test_applymap_subset": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "pandas.IndexSlice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.formats.test_style.TestStyler.test_applymap_subset.f": {
  "data": {
   "lineno": 233
  },
  "type": "function"
 },
 "pandas.tests.formats.test_style.TestStyler.test_bar": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.formats.test_style.TestStyler.test_bar_0points": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.formats.test_style.TestStyler.test_caption": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "all",
    "pandas.formats.style.Styler"
   ]
  },
  "type": "function"
 },
 "pandas.tests.formats.test_style.TestStyler.test_clear": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.tests.formats.test_style.TestStyler.test_copy": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "pandas.tests.formats.test_style.copy"
   ]
  },
  "type": "function"
 },
 "pandas.tests.formats.test_style.TestStyler.test_deepcopy": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "pandas.tests.formats.test_style.copy"
   ]
  },
  "type": "function"
 },
 "pandas.tests.formats.test_style.TestStyler.test_display_dict": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "str.upper"
   ]
  },
  "type": "function"
 },
 "pandas.tests.formats.test_style.TestStyler.test_display_format": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "all",
    "len",
    "numpy.random.random",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.formats.test_style.TestStyler.test_display_format_raises": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "TypeError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.tests.formats.test_style.TestStyler.test_display_subset": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.IndexSlice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.formats.test_style.TestStyler.test_empty": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.formats.test_style.TestStyler.test_empty_index_name_doesnt_display": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.formats.test_style.TestStyler.test_export": {
  "data": {
   "lineno": 462
  },
  "type": "function"
 },
 "pandas.tests.formats.test_style.TestStyler.test_highlight_max": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "getattr",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.formats.test_style.TestStyler.test_highlight_null": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.formats.test_style.TestStyler.test_index_name": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.formats.test_style.TestStyler.test_multiindex_name": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.formats.test_style.TestStyler.test_nonunique_raises": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.formats.style.Styler",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.tests.formats.test_style.TestStyler.test_numeric_columns": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.formats.test_style.TestStyler.test_precision": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "pandas.formats.style.Styler",
    "pandas.option_context"
   ]
  },
  "type": "function"
 },
 "pandas.tests.formats.test_style.TestStyler.test_render": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.formats.style.Styler"
   ]
  },
  "type": "function"
 },
 "pandas.tests.formats.test_style.TestStyler.test_render_double": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.formats.style.Styler"
   ]
  },
  "type": "function"
 },
 "pandas.tests.formats.test_style.TestStyler.test_set_properties": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.formats.test_style.TestStyler.test_set_properties_subset": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.IndexSlice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.formats.test_style.TestStyler.test_table_attributes": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "pandas.formats.style.Styler"
   ]
  },
  "type": "function"
 },
 "pandas.tests.formats.test_style.TestStyler.test_table_styles": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "pandas.formats.style.Styler"
   ]
  },
  "type": "function"
 },
 "pandas.tests.formats.test_style.TestStyler.test_trim": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.tests.formats.test_style.TestStyler.test_update_ctx": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "pandas.tests.formats.test_style.TestStyler.test_update_ctx_flatten_multi": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.formats.test_style.TestStyler.test_update_ctx_flatten_multi_traliing_semi": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.formats.test_style.TestStyler.test_uuid": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "pandas.formats.style.Styler"
   ]
  },
  "type": "function"
 },
 "pandas.tests.formats.test_style.TestStylerMatplotlibDep": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase",
    "pandas.util.testing.mplskip"
   ]
  },
  "type": "class"
 },
 "pandas.tests.formats.test_style.TestStylerMatplotlibDep.test_background_gradient": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "all",
    "pandas.DataFrame",
    "pandas.IndexSlice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.formats.test_style.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pandas.tests.formats.test_style.jinja2": {
  "data": {
   "shadows": "jinja2"
  },
  "type": "import"
 },
 "pandas.tests.formats.test_style.job_name": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pandas.tests.formats.test_style.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.formats.test_style.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.tests.formats.test_style.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.formats.test_style.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.common": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "int",
    "pandas.DataFrame",
    "pandas.compat.iteritems",
    "pandas.tests.frame.common._frame",
    "pandas.tests.frame.common._mixed_frame",
    "pandas.tests.frame.common._seriesd",
    "pandas.tests.frame.common._tsd",
    "pandas.util.testing.getSeriesData",
    "pandas.util.testing.getTimeSeriesData"
   ]
  },
  "type": "module"
 },
 "pandas.tests.frame.common.TestData": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.common.TestData.all_mixed": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "pandas.DataFrame",
    "pandas.util.decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.common.TestData.empty": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.common.TestData.frame": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "pandas.tests.frame.common._frame",
    "pandas.util.decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.common.TestData.frame2": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "pandas.tests.frame.common._frame2",
    "pandas.util.decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.common.TestData.intframe": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "dict",
    "numpy.int64",
    "pandas.DataFrame",
    "pandas.compat.iteritems",
    "pandas.tests.frame.common._intframe",
    "pandas.util.decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.common.TestData.mixed_float": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.tests.frame.common._frame",
    "pandas.util.decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.common.TestData.mixed_float2": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.tests.frame.common._frame2",
    "pandas.util.decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.common.TestData.mixed_frame": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "pandas.tests.frame.common._mixed_frame",
    "pandas.util.decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.common.TestData.mixed_int": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "len",
    "numpy.ones",
    "pandas.DataFrame",
    "pandas.tests.frame.common._intframe",
    "pandas.util.decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.common.TestData.simple": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DataFrame",
    "pandas.util.decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.common.TestData.ts1": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "pandas.util.decorators.cache_readonly",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.common.TestData.ts2": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "pandas.util.decorators.cache_readonly",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.common.TestData.tsframe": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "pandas.tests.frame.common._tsframe",
    "pandas.util.decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.common.TestData.tzframe": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.date_range",
    "pandas.util.decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.common._check_mixed_float": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "pandas.compat.string_types"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.common._check_mixed_int": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "pandas.compat.string_types"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.common._frame": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "pandas.tests.frame.common._frame2": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pandas.tests.frame.common._intframe": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pandas.tests.frame.common._mixed_frame": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "pandas.tests.frame.common._seriesd": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "pandas.tests.frame.common._tsd": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "pandas.tests.frame.common._tsframe": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pandas.tests.frame.common.cache_readonly": {
  "data": {
   "shadows": "pandas.util.decorators.cache_readonly"
  },
  "type": "import"
 },
 "pandas.tests.frame.common.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.frame.common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.common.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.frame.common.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_alter_axes": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.test_alter_axes.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_alter_axes.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_alter_axes.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_alter_axes.RangeIndex": {
  "data": {
   "shadows": "pandas.RangeIndex"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_alter_axes.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_alter_axes.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_assign_columns": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_construction_with_categorical_index": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.makeCategoricalIndex",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_rename": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "TypeError",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal",
    "str.lower",
    "str.upper"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_rename_bug": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_rename_inplace": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_rename_nocopy": {
  "data": {
   "lineno": 375
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_rename_objects": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "str.upper"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_reorder_levels": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.MultiIndex",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_reset_index": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_reset_index_multiindex_col": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "numpy.hstack",
    "numpy.random.randn",
    "object",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_arrays",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_reset_index_range": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.RangeIndex",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_reset_index_right_dtype": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float64",
    "numpy.sqrt",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_reset_index_with_datetimeindex_cols": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_set_columns": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.arange",
    "pandas.Index",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_set_index": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.arange",
    "pandas.Index",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_set_index2": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_arrays",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_set_index_bug": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_set_index_cast": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.int32",
    "pandas.DataFrame",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_set_index_cast_datetimeindex": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta",
    "numpy.array",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.tests.frame.test_alter_axes.pytz",
    "pandas.to_datetime",
    "pandas.tseries.tools.to_datetime",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_set_index_empty_column": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "dict",
    "pandas.DataFrame",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_set_index_multiindexcolumns": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_set_index_names": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "isinstance",
    "pandas.MultiIndex",
    "pandas.MultiIndex.from_arrays",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.makeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_set_index_nonuniq": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.TestDataFrameAlterAxes.test_set_index_pass_arrays": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_alter_axes.assertRaisesRegexp": {
  "data": {
   "shadows": "pandas.util.testing.assertRaisesRegexp"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_alter_axes.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_alter_axes.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_alter_axes.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_alter_axes.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_alter_axes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_alter_axes.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_alter_axes.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_alter_axes.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_alter_axes.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_alter_axes.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.tests.frame.test_analytics.nose"
   ]
  },
  "type": "module"
 },
 "pandas.tests.frame.test_analytics.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics._check_bool_op": {
  "data": {
   "lineno": 1150,
   "symbols_in_volume": [
    "NonzeroFail",
    "ValueError",
    "alternative",
    "f",
    "getattr",
    "len",
    "numpy.NaN",
    "numpy.nan",
    "numpy.random.randn",
    "object",
    "pandas.DataFrame",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics._check_bool_op.NonzeroFail": {
  "data": {
   "lineno": 1198
  },
  "type": "class"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics._check_bool_op.NonzeroFail.__nonzero__": {
  "data": {
   "lineno": 1200,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics._check_bool_op.skipna_wrapper": {
  "data": {
   "lineno": 1163,
   "symbols_in_volume": [
    "alternative"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics._check_bool_op.wrapper": {
  "data": {
   "lineno": 1167,
   "symbols_in_volume": [
    "alternative"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics._check_method": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics._check_stat_op": {
  "data": {
   "lineno": 796,
   "symbols_in_volume": [
    "ValueError",
    "_f",
    "alternative",
    "f",
    "getattr",
    "len",
    "numpy.NaN",
    "numpy.isnan",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.date_range",
    "pandas.util.testing._incompat_bottleneck_version",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics._check_stat_op.skipna_wrapper": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "alternative",
    "len",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics._check_stat_op.wrapper": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "alternative"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_any_all": {
  "data": {
   "lineno": 1120,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.any",
    "numpy.random.randn",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_bool_describe_in_mixed_frame": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_built_in_round": {
  "data": {
   "lineno": 1958,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.PY3",
    "pandas.tests.frame.test_analytics.nose",
    "pandas.util.testing.assert_frame_equal",
    "round"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_clip": {
  "data": {
   "lineno": 1975
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_clip_against_frame": {
  "data": {
   "lineno": 2027,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_clip_against_series": {
  "data": {
   "lineno": 2003,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_corr_constant": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.isnull",
    "pandas.util.testing._skip_if_no_scipy"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_corr_int": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_corr_int_and_boolean": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "numpy.ones",
    "pandas.DataFrame",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_corr_kendall": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.util.testing._skip_if_no_scipy"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_corr_non_numeric": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_corr_nooverlap": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.isnull",
    "pandas.util.testing._skip_if_no_scipy"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_corr_pearson": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.util.testing._skip_if_no_scipy"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_corr_spearman": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.util.testing._skip_if_no_scipy"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_corrwith": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_corrwith_matches_corrcoef": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.corrcoef",
    "pandas.DataFrame",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_corrwith_series": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_corrwith_with_objects": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_count": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.notnull",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_count_objects": {
  "data": {
   "lineno": 1069,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_cov": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "len",
    "numpy.cov",
    "numpy.linspace",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.isnull",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_cummax": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "numpy.shape",
    "pandas.DataFrame",
    "pandas.Series.cummax",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_cummin": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "numpy.shape",
    "pandas.DataFrame",
    "pandas.Series.cummin",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_cumprod": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "int",
    "numpy.int32",
    "numpy.nan",
    "numpy.shape",
    "pandas.Series.cumprod",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_cumsum": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "numpy.shape",
    "pandas.DataFrame",
    "pandas.Series.cumsum",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_cumsum_corner": {
  "data": {
   "lineno": 1076,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.compat.lrange"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_dataframe_clip": {
  "data": {
   "lineno": 1987,
   "symbols_in_volume": [
    "max",
    "min",
    "numpy.random.randn",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_describe_categorical_columns": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "pandas.CategoricalIndex",
    "pandas.DataFrame",
    "pandas.util.testing.assert_categorical_equal",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_describe_datetime_columns": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_dot": {
  "data": {
   "lineno": 2044,
   "symbols_in_volume": [
    "ValueError",
    "numpy.dot",
    "numpy.random.rand",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "reversed"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_drop_duplicates": {
  "data": {
   "lineno": 1390,
   "symbols_in_volume": [
    "FutureWarning",
    "len",
    "numpy.array",
    "numpy.iinfo",
    "numpy.int64",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_equal",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_drop_duplicates_NA": {
  "data": {
   "lineno": 1571,
   "symbols_in_volume": [
    "FutureWarning",
    "len",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_drop_duplicates_NA_for_take_all": {
  "data": {
   "lineno": 1666,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_drop_duplicates_for_take_all": {
  "data": {
   "lineno": 1504,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_drop_duplicates_inplace": {
  "data": {
   "lineno": 1700,
   "symbols_in_volume": [
    "FutureWarning",
    "len",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_drop_duplicates_tuple": {
  "data": {
   "lineno": 1538,
   "symbols_in_volume": [
    "FutureWarning",
    "len",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_idxmax": {
  "data": {
   "lineno": 1103,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.Series.idxmax",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_idxmin": {
  "data": {
   "lineno": 1089,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.Series.idxmin",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_isin": {
  "data": {
   "lineno": 1264,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_isin_against_series": {
  "data": {
   "lineno": 1353,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_isin_df": {
  "data": {
   "lineno": 1310,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_isin_df_dupe_values": {
  "data": {
   "lineno": 1325,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_isin_dict": {
  "data": {
   "lineno": 1281,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_isin_dupe_self": {
  "data": {
   "lineno": 1344,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_isin_empty": {
  "data": {
   "lineno": 1275,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_isin_multiIndex": {
  "data": {
   "lineno": 1363,
   "symbols_in_volume": [
    "numpy.bool",
    "numpy.ones",
    "numpy.zeros",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_isin_with_string_scalar": {
  "data": {
   "lineno": 1299,
   "symbols_in_volume": [
    "TypeError",
    "pandas.DataFrame",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_kurt": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_kurt.alt": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "scipy.stats.kurtosis"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_mad": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_max": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_mean": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_mean_corner": {
  "data": {
   "lineno": 1034,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_median": {
  "data": {
   "lineno": 388
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_median.wrapper": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "numpy.median",
    "numpy.nan",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_median_corner": {
  "data": {
   "lineno": 1058
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_median_corner.wrapper": {
  "data": {
   "lineno": 1059,
   "symbols_in_volume": [
    "numpy.median",
    "numpy.nan",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_min": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_mode": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range",
    "pandas.formats.printing.pprint_thing",
    "pandas.util.testing.assert_frame_equal",
    "reversed"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_nlargest": {
  "data": {
   "lineno": 1226,
   "symbols_in_volume": [
    "list",
    "numpy.random.permutation",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "string.ascii_lowercase"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_nlargest_multiple_columns": {
  "data": {
   "lineno": 1235,
   "symbols_in_volume": [
    "list",
    "numpy.random.permutation",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "string.ascii_lowercase"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_nsmallest": {
  "data": {
   "lineno": 1244,
   "symbols_in_volume": [
    "list",
    "numpy.random.permutation",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "string.ascii_lowercase"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_nsmallest_multiple_columns": {
  "data": {
   "lineno": 1252,
   "symbols_in_volume": [
    "list",
    "numpy.random.permutation",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "string.ascii_lowercase"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_numeric_only_flag": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "TypeError",
    "getattr",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_numpy_round": {
  "data": {
   "lineno": 1919,
   "symbols_in_volume": [
    "ValueError",
    "numpy.round",
    "pandas.DataFrame",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_operators_timedelta64": {
  "data": {
   "lineno": 934,
   "symbols_in_volume": [
    "abs",
    "datetime.timedelta",
    "dict",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.tseries.timedeltas._coerce_scalar_to_timedelta_type",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_product": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_rank": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "float",
    "numpy.apply_along_axis",
    "numpy.inf",
    "numpy.isnan",
    "numpy.nan",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_frame_equal",
    "scipy.stats.rankdata"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_rank2": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.datetime.now",
    "datetime.timedelta",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_rank_axis": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_rank_na_option": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "numpy.apply_along_axis",
    "numpy.inf",
    "numpy.nan",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_almost_equal",
    "scipy.stats.rankdata"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_reduce_mixed_frame": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_round": {
  "data": {
   "lineno": 1796,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "distutils.version.LooseVersion",
    "numpy.nan",
    "numpy.round",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.tests.frame.test_analytics.sys",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_round_issue": {
  "data": {
   "lineno": 1945,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.random",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_round_mixed_type": {
  "data": {
   "lineno": 1930,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_sem": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "len",
    "numpy.random.random",
    "numpy.repeat",
    "numpy.sqrt",
    "numpy.std",
    "pandas.core.nanops._USE_BOTTLENECK",
    "pandas.core.nanops.nansem",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_skew": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": [
    "pandas.util.testing._skip_if_no_scipy"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_skew.alt": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "scipy.stats.skew"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_sort_invalid_kwargs": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "FutureWarning",
    "TypeError",
    "ValueError",
    "pandas.DataFrame",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_stat_operators_attempt_obj_array": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "getattr",
    "numpy.nan",
    "numpy.object_",
    "object",
    "pandas.DataFrame",
    "pandas.util.testing._incompat_bottleneck_version",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_stats_mixed_type": {
  "data": {
   "lineno": 1051
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_sum": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_sum_bool": {
  "data": {
   "lineno": 1028,
   "symbols_in_volume": [
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_sum_bools": {
  "data": {
   "lineno": 1082,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_sum_corner": {
  "data": {
   "lineno": 1013,
   "symbols_in_volume": [
    "len",
    "pandas.Series",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_sum_object": {
  "data": {
   "lineno": 1021,
   "symbols_in_volume": [
    "datetime.timedelta",
    "int",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.TestDataFrameAnalytics.test_var_std": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "numpy.random.random",
    "numpy.repeat",
    "numpy.std",
    "numpy.var",
    "pandas.core.nanops._USE_BOTTLENECK",
    "pandas.core.nanops.nanvar",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_analytics.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics._coerce": {
  "data": {
   "shadows": "pandas.tseries.timedeltas._coerce_scalar_to_timedelta_type"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.ascii_lowercase": {
  "data": {
   "shadows": "string.ascii_lowercase"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.assertRaisesRegexp": {
  "data": {
   "shadows": "pandas.util.testing.assertRaisesRegexp"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.assert_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.kurtosis": {
  "data": {
   "shadows": "scipy.stats.kurtosis"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.nanops": {
  "data": {
   "shadows": "pandas.core.nanops"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.notnull": {
  "data": {
   "shadows": "pandas.notnull"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.printing": {
  "data": {
   "shadows": "pandas.formats.printing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.randn": {
  "data": {
   "shadows": "numpy.random.randn"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.rankdata": {
  "data": {
   "shadows": "scipy.stats.rankdata"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.skew": {
  "data": {
   "shadows": "scipy.stats.skew"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_analytics.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_apply": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.test_apply.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_apply.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_apply.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_apply.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.mean",
    "numpy.sqrt",
    "pandas.DataFrame",
    "pandas.core.common.CategoricalDtype",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_attach_name": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "len",
    "numpy.repeat",
    "numpy.tile",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_axis1": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_broadcast": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "numpy.mean",
    "pandas.compat.iteritems"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_bug": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "datetime.datetime",
    "f",
    "pandas.DataFrame",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_bug.f": {
  "data": {
   "lineno": 288
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_convert_objects": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_dict": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "dict",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_differently_indexed": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "dict",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series.describe",
    "pandas.compat.iteritems",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_empty": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.nan",
    "numpy.sqrt",
    "object",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_empty_infer_type": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "_check",
    "pandas.DataFrame",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_empty_infer_type._check": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "_checkit",
    "f",
    "isinstance",
    "numpy.array",
    "numpy.ndarray",
    "pandas.tests.frame.test_apply.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_empty_infer_type._check._checkit": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "f",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_ignore_failures": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "numpy.mean",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_mixed_datetimelike": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.to_timedelta",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_mixed_dtype_corner": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_modify_traceback": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "AttributeError",
    "len",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_modify_traceback.transform": {
  "data": {
   "lineno": 261
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_modify_traceback.transform2": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "pandas.notnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_multi_index": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "max",
    "min",
    "pandas.DataFrame",
    "pandas.MultiIndex",
    "pandas.MultiIndex.from_arrays",
    "pandas.Series",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_non_numpy_dtype": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Timedelta",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_raw": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "numpy.mean",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_reduce_Series": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.nan",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_standard_nonunique": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_with_args_kwds": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_with_args_kwds.add_some": {
  "data": {
   "lineno": 199
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_with_args_kwds.agg_and_add": {
  "data": {
   "lineno": 202
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_with_args_kwds.subtract_and_divide": {
  "data": {
   "lineno": 205
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_apply_yield_list": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "list",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_applymap": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "f",
    "numpy.random.random",
    "object",
    "pandas.DataFrame",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_frame_equal",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.TestDataFrameApply.test_applymap_box": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Period",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_apply.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_apply.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_apply.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_apply.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_apply.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_apply.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_apply.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_apply.notnull": {
  "data": {
   "shadows": "pandas.notnull"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_apply.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_apply.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_apply.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_apply.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_apply.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_axis_select_reindex": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.test_axis_select_reindex.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_axis_select_reindex.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_axis_select_reindex.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_axis_select_reindex.PerformanceWarning": {
  "data": {
   "shadows": "pandas.core.common.PerformanceWarning"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_axis_select_reindex.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex._check_align": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex._check_align_fill": {
  "data": {
   "lineno": 525
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_align": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_align_fill_method_inner": {
  "data": {
   "lineno": 501
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_align_fill_method_left": {
  "data": {
   "lineno": 513
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_align_fill_method_outer": {
  "data": {
   "lineno": 507
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_align_fill_method_right": {
  "data": {
   "lineno": 519
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_align_int_fill_bug": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.arange",
    "numpy.ones",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_align_multiindex": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_product",
    "pandas.util.testing.assert_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_align_series_combinations": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_drop": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.compat.lzip",
    "pandas.util.testing.assert_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_drop_col_still_multiindex": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "isinstance",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex",
    "pandas.MultiIndex.from_tuples",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_drop_multiindex_not_lexsorted": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.core.common.PerformanceWarning",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_drop_names": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "pandas.DataFrame",
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_filter": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "object",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.compat.u",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_filter_corner": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_filter_regex_search": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_merge_join_different_levels": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "UserWarning",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.merge",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.isnan",
    "pandas.Index",
    "pandas.compat.iteritems",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_axes": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.ones",
    "pandas.DataFrame",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_axis": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "ValueError",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_boolean": {
  "data": {
   "lineno": 789,
   "symbols_in_volume": [
    "bool",
    "numpy.arange",
    "numpy.object_",
    "numpy.ones",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_columns": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "numpy.isnan",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_corner": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "numpy.float64",
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_dups": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_fill_value": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_int": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_like": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_multi": {
  "data": {
   "lineno": 855,
   "symbols_in_volume": [
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_name_remains": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_nan": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_objects": {
  "data": {
   "lineno": 802
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_reindex_with_nans": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_select": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "f",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.TestDataFrameSelectReindex.test_take": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "IndexError",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_axis_select_reindex.assertRaisesRegexp": {
  "data": {
   "shadows": "pandas.util.testing.assertRaisesRegexp"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_axis_select_reindex.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_axis_select_reindex.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_axis_select_reindex.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_axis_select_reindex.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_axis_select_reindex.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_axis_select_reindex.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_axis_select_reindex.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_axis_select_reindex.lzip": {
  "data": {
   "shadows": "pandas.compat.lzip"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_axis_select_reindex.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_axis_select_reindex.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_axis_select_reindex.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_axis_select_reindex.random": {
  "data": {
   "shadows": "numpy.random"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_axis_select_reindex.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_axis_select_reindex.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_block_internals": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.test_block_internals.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_block_internals.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_block_internals.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_block_internals.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_as_matrix_consolidate": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_as_matrix_lcd": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_as_matrix_numeric_cols": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_boolean_set_uncons": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_cast_internals": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "int",
    "numpy.int32",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_consolidate": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "len",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_consolidate_datetime64": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.compat.StringIO",
    "pandas.read_csv",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_consolidate_inplace": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "chr",
    "ord",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_construction_with_conversions": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.datetime64",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_construction_with_mixed": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.datetime.now",
    "datetime.timedelta",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_constructor_compound_dtypes": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "NotImplementedError",
    "f",
    "pandas.compat.is_platform_windows"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_constructor_compound_dtypes.f": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "datetime.datetime",
    "list",
    "pandas.DataFrame",
    "pandas.tests.frame.test_block_internals.itertools"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_constructor_with_convert": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.asarray",
    "numpy.complex_",
    "numpy.float_",
    "numpy.int64",
    "numpy.nan",
    "numpy.object_",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_convert_objects": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "len",
    "numpy.float64",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_convert_objects_no_conversion": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_copy": {
  "data": {
   "lineno": 334
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_copy_blocks": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_equals_different_blocks": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_get_X_columns": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_get_numeric_data": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.dtype",
    "numpy.e",
    "numpy.float_",
    "numpy.int_",
    "numpy.object_",
    "numpy.pi",
    "pandas.DataFrame",
    "pandas.DataFrame.from_dict",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_is_mixed_type": {
  "data": {
   "lineno": 388
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_modify_values": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_no_copy_blocks": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_pickle": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_stale_cached_series_bug_473": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "numpy.NaN",
    "numpy.random.random",
    "pandas.DataFrame",
    "pandas.isnull",
    "pandas.option_context",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.TestDataFrameBlockInternals.test_strange_column_corruption_issue": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.isnull",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_block_internals.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_block_internals.assertRaisesRegexp": {
  "data": {
   "shadows": "pandas.util.testing.assertRaisesRegexp"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_block_internals.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_block_internals.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_block_internals.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_block_internals.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_block_internals.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_block_internals.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_block_internals.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_block_internals.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_block_internals.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_block_internals.option_context": {
  "data": {
   "shadows": "pandas.option_context"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_block_internals.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_block_internals.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_block_internals.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_block_internals.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_combine_concat": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.test_combine_concat.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_combine_concat.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_combine_concat.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_combine_concat.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameCombineConcat": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameCombineConcat.test_append_dtypes": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "numpy.nan",
    "object",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameCombineConcat.test_append_empty_dataframe": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameCombineConcat.test_append_list_of_series_dicts": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameCombineConcat.test_append_series_dict": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameCombineConcat.test_combine_first": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameCombineConcat.test_combine_first_mixed": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.lrange"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameCombineConcat.test_combine_first_mixed_bug": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "datetime.datetime",
    "len",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameCombineConcat.test_combine_multiple_frames_dtypes": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "dict",
    "numpy.float32",
    "numpy.float64",
    "numpy.ones",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.concat",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameCombineConcat.test_combine_multiple_tzs": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "dict",
    "object",
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameCombineConcat.test_join_multiindex_leftright": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameCombineConcat.test_join_str_datetime": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "datetime.datetime",
    "len",
    "pandas.DataFrame",
    "pandas.compat.lrange"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameCombineConcat.test_update": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameCombineConcat.test_update_dtypes": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameCombineConcat.test_update_filtered": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameCombineConcat.test_update_from_non_df": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameCombineConcat.test_update_nooverwrite": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.TestDataFrameCombineConcat.test_update_raise": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_combine_concat.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_combine_concat.assertRaisesRegexp": {
  "data": {
   "shadows": "pandas.util.testing.assertRaisesRegexp"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_combine_concat.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_combine_concat.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_combine_concat.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_combine_concat.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_combine_concat.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_combine_concat.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_combine_concat.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_combine_concat.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_combine_concat.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.test_constructors.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.DatetimeTZDtype": {
  "data": {
   "shadows": "pandas.types.api.DatetimeTZDtype"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.Decimal": {
  "data": {
   "shadows": "decimal.Decimal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.MIXED_FLOAT_DTYPES": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pandas.tests.frame.test_constructors.MIXED_INT_DTYPES": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pandas.tests.frame.test_constructors.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.OrderedDict": {
  "data": {
   "shadows": "pandas.compat.OrderedDict"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.PandasError": {
  "data": {
   "shadows": "pandas.core.common.PandasError"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors._check_basic_constructor": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "ValueError",
    "empty",
    "float",
    "len",
    "numpy.int64",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_DataFrame": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "numpy.int64",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_Series_copy_bug": {
  "data": {
   "lineno": 973,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_Series_differently_indexed": {
  "data": {
   "lineno": 1065,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_Series_named": {
  "data": {
   "lineno": 1028,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_arrays_and_scalars": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_bool": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "bool",
    "numpy.bool_",
    "numpy.ones",
    "numpy.zeros",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_cast_failure": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "ValueError",
    "numpy.float64",
    "numpy.ones",
    "object",
    "pandas.DataFrame",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_column_duplicates": {
  "data": {
   "lineno": 1154,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.DataFrame.from_items",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_complex_dtypes": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "numpy.complex128",
    "numpy.complex64",
    "numpy.random.rand",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_corner": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "int",
    "list",
    "numpy.object_",
    "object",
    "pandas.DataFrame",
    "pandas.compat.lrange"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_dict": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.isnull",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_dict_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_dict_block": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_dict_cast": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "dict",
    "float",
    "len",
    "numpy.float64",
    "numpy.object_",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.compat.zip",
    "pandas.util.testing.makeStringIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_dict_datetime64_index": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "create_data",
    "datetime.datetime.strptime",
    "numpy.datetime64",
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_dict_datetime64_index.create_data": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "constructor",
    "dict",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_dict_dont_upcast": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_dict_multiindex": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "check",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_dict_of_tuples": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "dict",
    "list",
    "pandas.DataFrame",
    "pandas.compat.iteritems",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_dict_timedelta64_index": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "create_data",
    "datetime.timedelta",
    "numpy.timedelta64",
    "pandas.DataFrame",
    "pandas.Timedelta",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_dict_timedelta64_index.create_data": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "constructor",
    "dict",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_dtype_copy": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "float",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_dtype_list_data": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "object",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_dtype_nocast_view": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_empty_list": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "empty_gen",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_empty_list.empty_gen": {
  "data": {
   "lineno": 802
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_empty_with_string_dtype": {
  "data": {
   "lineno": 1170,
   "symbols_in_volume": [
    "numpy.str_",
    "numpy.unicode_",
    "object",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_error_msgs": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.arange",
    "numpy.empty",
    "numpy.random.rand",
    "numpy.zeros",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_for_list_with_dtypes": {
  "data": {
   "lineno": 1505,
   "symbols_in_volume": [
    "datetime.datetime",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.dtype",
    "numpy.float_",
    "numpy.int_",
    "numpy.object_",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.compat.range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_frame_copy": {
  "data": {
   "lineno": 1572,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_from_items": {
  "data": {
   "lineno": 1094,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "list",
    "numpy.float64",
    "pandas.DataFrame",
    "pandas.DataFrame.from_items",
    "pandas.lib.list_to_object_array",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_frame_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_generator": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_iterator": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_iterator_failure": {
  "data": {
   "lineno": 1150,
   "symbols_in_volume": [
    "TypeError",
    "iter",
    "pandas.DataFrame",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_list_frames": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "dict",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_list_of_derived_dicts": {
  "data": {
   "lineno": 949,
   "symbols_in_volume": [
    "CustomDict",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_list_of_derived_dicts.CustomDict": {
  "data": {
   "lineno": 950,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_list_of_dicts": {
  "data": {
   "lineno": 878,
   "symbols_in_volume": [
    "dict",
    "len",
    "pandas.DataFrame",
    "pandas.DataFrame.from_dict",
    "pandas.compat.OrderedDict",
    "pandas.compat.range",
    "pandas.compat.zip",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_list_of_lists": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.object_",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.core.common.is_integer_dtype",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_list_of_series": {
  "data": {
   "lineno": 895,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.DataFrame.from_dict",
    "pandas.Index",
    "pandas.Series",
    "pandas.compat.OrderedDict",
    "pandas.compat.range",
    "pandas.compat.zip",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_lists_to_object_dtype": {
  "data": {
   "lineno": 1631,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.object_",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_manager_resize": {
  "data": {
   "lineno": 1085,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_maskedarray": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "float",
    "numpy.all",
    "numpy.asarray",
    "numpy.ma.masked_all",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_maskedarray_nonfloat": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "bool",
    "int",
    "len",
    "numpy.all",
    "numpy.asarray",
    "numpy.float64",
    "numpy.int64",
    "numpy.ma.copy",
    "numpy.ma.masked_all",
    "object",
    "pandas.DataFrame",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_miscast_na_int_dtype": {
  "data": {
   "lineno": 1145,
   "symbols_in_volume": [
    "numpy.int64",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_mix_series_nonseries": {
  "data": {
   "lineno": 1137,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "pandas.DataFrame",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_mixed": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "numpy.object_",
    "pandas.DataFrame",
    "pandas.util.testing.getMixedTypeDict"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_mixed_dict_and_Series": {
  "data": {
   "lineno": 977,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_mixed_dtypes": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "_check_mixed_dtypes",
    "_make_mixed_dtypes_df",
    "dict"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_mixed_dtypes._check_mixed_dtypes": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "pandas.tests.frame.test_constructors.MIXED_FLOAT_DTYPES",
    "pandas.tests.frame.test_constructors.MIXED_INT_DTYPES"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_mixed_dtypes._make_mixed_dtypes_df": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "dict",
    "numpy.array",
    "numpy.random.rand",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.compat.lzip",
    "pandas.tests.frame.test_constructors.MIXED_FLOAT_DTYPES",
    "pandas.tests.frame.test_constructors.MIXED_INT_DTYPES"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_more": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.float64",
    "numpy.ones",
    "numpy.random.randn",
    "object",
    "pandas.DataFrame",
    "pandas.core.common.PandasError",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_mrecarray": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "assert_fr_equal",
    "dict",
    "hasattr",
    "numpy.array",
    "numpy.ma.masked_all",
    "numpy.ma.masked_array",
    "numpy.ma.mrecords.fromarrays",
    "pandas.DataFrame",
    "pandas.compat.zip",
    "pandas.tests.frame.test_constructors.functools",
    "pandas.tests.frame.test_constructors.itertools",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_multi_index": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_namedtuples": {
  "data": {
   "lineno": 1001,
   "symbols_in_volume": [
    "collections.namedtuple",
    "list",
    "named_tuple",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_ndarray": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "len",
    "numpy.ones",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_ndarray_copy": {
  "data": {
   "lineno": 1578,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_ordereddict": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.compat.OrderedDict",
    "pandas.compat.lrange",
    "pandas.compat.zip",
    "pandas.tests.frame.test_constructors.random"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_orient": {
  "data": {
   "lineno": 1015,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame.from_dict",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_overflow_int64": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.uint64",
    "numpy.zeros",
    "object",
    "pandas.DataFrame",
    "pandas.compat.long",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_period": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.PeriodIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_ragged": {
  "data": {
   "lineno": 961,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_rec": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_scalar": {
  "data": {
   "lineno": 967,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_scalar_inference": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.bool_",
    "numpy.complex128",
    "numpy.float64",
    "numpy.int64",
    "numpy.object_",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_sequence_like": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": [
    "DummyContainer",
    "list",
    "pandas.DataFrame",
    "pandas.DataFrame.from_items",
    "pandas.compat.range",
    "pandas.tests.frame.test_constructors.array",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_sequence_like.DummyContainer": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": [
    "pandas.tests.frame.test_constructors.collections"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_sequence_like.DummyContainer.__getitem__": {
  "data": {
   "lineno": 833
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_sequence_like.DummyContainer.__init__": {
  "data": {
   "lineno": 830
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_sequence_like.DummyContainer.__len__": {
  "data": {
   "lineno": 836
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_series_copy": {
  "data": {
   "lineno": 1588,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_single_value": {
  "data": {
   "lineno": 1183,
   "symbols_in_volume": [
    "TypeError",
    "float",
    "numpy.array",
    "numpy.zeros",
    "object",
    "pandas.DataFrame",
    "pandas.core.common.PandasError",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_subclass_dict": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "collections.defaultdict",
    "dict",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.iteritems",
    "pandas.compat.range",
    "pandas.util.testing.TestSubDict",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_tuples": {
  "data": {
   "lineno": 996,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_with_datetime_tz": {
  "data": {
   "lineno": 1326,
   "symbols_in_volume": [
    "dict",
    "id",
    "numpy.array",
    "numpy.dtype",
    "object",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.NaT",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.compat.range",
    "pandas.concat",
    "pandas.date_range",
    "pandas.notnull",
    "pandas.types.api.DatetimeTZDtype",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_with_datetimes": {
  "data": {
   "lineno": 1205,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.arange",
    "numpy.array",
    "numpy.dtype",
    "numpy.float_",
    "numpy.int_",
    "numpy.object_",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.tests.frame.test_constructors.pytz",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_with_embedded_frames": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_with_nas": {
  "data": {
   "lineno": 1596,
   "symbols_in_volume": [
    "check",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_with_nas.check": {
  "data": {
   "lineno": 1600,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "numpy.arange",
    "numpy.nan",
    "pandas.compat.range",
    "pandas.isnull",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_constructor_with_nas.check.f": {
  "data": {
   "lineno": 1613,
   "symbols_in_volume": [
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_bad_index_column": {
  "data": {
   "lineno": 1974,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.DataFrame.from_records",
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_columns_not_modified": {
  "data": {
   "lineno": 1729,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame.from_records"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_decimal": {
  "data": {
   "lineno": 1741,
   "symbols_in_volume": [
    "decimal.Decimal",
    "numpy.float64",
    "numpy.isnan",
    "object",
    "pandas.DataFrame.from_records"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_dictlike": {
  "data": {
   "lineno": 1934,
   "symbols_in_volume": [
    "bool",
    "dict",
    "numpy.arange",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.DataFrame.from_records",
    "pandas.compat.iteritems",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_duplicates": {
  "data": {
   "lineno": 1753,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.DataFrame.from_records",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_empty": {
  "data": {
   "lineno": 1811,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.DataFrame.from_records",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_empty_with_nonempty_fields_gh3682": {
  "data": {
   "lineno": 1821,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "pandas.DataFrame.from_records",
    "pandas.Index",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_iterator": {
  "data": {
   "lineno": 1676,
   "symbols_in_volume": [
    "iter",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "pandas.DataFrame",
    "pandas.DataFrame.from_records",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_len0_with_columns": {
  "data": {
   "lineno": 2007,
   "symbols_in_volume": [
    "len",
    "numpy.array_equal",
    "pandas.DataFrame.from_records"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_lists_generator": {
  "data": {
   "lineno": 1712,
   "symbols_in_volume": [
    "len",
    "list_generator",
    "pandas.DataFrame",
    "pandas.DataFrame.from_records",
    "pandas.compat.range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_lists_generator.list_generator": {
  "data": {
   "lineno": 1713,
   "symbols_in_volume": [
    "len",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_misc_brokenness": {
  "data": {
   "lineno": 1778,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.DataFrame",
    "pandas.DataFrame.from_records",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_non_tuple": {
  "data": {
   "lineno": 1988,
   "symbols_in_volume": [
    "Record",
    "pandas.DataFrame.from_records",
    "pandas.compat.lmap",
    "pandas.util.testing.assert_frame_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_non_tuple.Record": {
  "data": {
   "lineno": 1989,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_non_tuple.Record.__getitem__": {
  "data": {
   "lineno": 1994
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_non_tuple.Record.__init__": {
  "data": {
   "lineno": 1991
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_non_tuple.Record.__iter__": {
  "data": {
   "lineno": 1997,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_nones": {
  "data": {
   "lineno": 1668,
   "symbols_in_volume": [
    "numpy.isnan",
    "pandas.DataFrame.from_records"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_sequencelike": {
  "data": {
   "lineno": 1862,
   "symbols_in_volume": [
    "bool",
    "len",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.dtype",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.random.randn",
    "numpy.recarray",
    "pandas.DataFrame",
    "pandas.DataFrame.from_records",
    "pandas.compat.iteritems",
    "pandas.compat.lrange",
    "pandas.compat.range",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "set",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_set_index_name": {
  "data": {
   "lineno": 1762,
   "symbols_in_volume": [
    "create_dict",
    "pandas.DataFrame.from_records",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_set_index_name.create_dict": {
  "data": {
   "lineno": 1763,
   "symbols_in_volume": [
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_to_records": {
  "data": {
   "lineno": 1637,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.arange",
    "numpy.zeros",
    "pandas.DataFrame",
    "pandas.DataFrame.from_records",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_tuples_generator": {
  "data": {
   "lineno": 1695,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "pandas.DataFrame.from_records",
    "pandas.compat.range",
    "pandas.util.testing.assert_frame_equal",
    "tuple_generator"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_tuples_generator.tuple_generator": {
  "data": {
   "lineno": 1696,
   "symbols_in_volume": [
    "len",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_with_datetimes": {
  "data": {
   "lineno": 1833,
   "symbols_in_volume": [
    "ValueError",
    "datetime.datetime",
    "numpy.array",
    "numpy.core.records.fromarrays",
    "pandas.DataFrame",
    "pandas.DataFrame.from_records",
    "pandas.compat.is_platform_little_endian",
    "pandas.tests.frame.test_constructors.nose",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_from_records_with_index_data": {
  "data": {
   "lineno": 1967,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.DataFrame.from_records",
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.TestDataFrameConstructors.test_nested_dict_frame_constructor": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.period_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_constructors.Timedelta": {
  "data": {
   "shadows": "pandas.Timedelta"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.array": {
  "data": {
   "shadows": "array"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.assertRaisesRegexp": {
  "data": {
   "shadows": "pandas.util.testing.assertRaisesRegexp"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.assert_numpy_array_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_numpy_array_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.is_platform_little_endian": {
  "data": {
   "shadows": "pandas.compat.is_platform_little_endian"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.lib": {
  "data": {
   "shadows": "pandas.lib"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.lmap": {
  "data": {
   "shadows": "pandas.compat.lmap"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.long": {
  "data": {
   "shadows": "pandas.compat.long"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.lzip": {
  "data": {
   "shadows": "pandas.compat.lzip"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.ma": {
  "data": {
   "shadows": "numpy.ma"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.mrecords": {
  "data": {
   "shadows": "numpy.ma.mrecords"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.notnull": {
  "data": {
   "shadows": "pandas.notnull"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.randn": {
  "data": {
   "shadows": "numpy.random.randn"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_constructors.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_convert_to": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.test_convert_to.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_convert_to.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_convert_to.Parser": {
  "data": {
   "shadows": "email.parser.Parser"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_convert_to.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_convert_to.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_convert_to.TestDataFrameConvertTo": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_convert_to.TestDataFrameConvertTo.test_to_dict": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "int",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.iteritems",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_convert_to.TestDataFrameConvertTo.test_to_dict_invalid_orient": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_convert_to.TestDataFrameConvertTo.test_to_dict_timestamp": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_convert_to.TestDataFrameConvertTo.test_to_records_dt64": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_convert_to.TestDataFrameConvertTo.test_to_records_floats": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "numpy.random.rand",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_convert_to.TestDataFrameConvertTo.test_to_records_index_name": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_convert_to.TestDataFrameConvertTo.test_to_records_with_Mapping_type": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "all",
    "email.parser.Parser",
    "pandas.DataFrame.from_records",
    "pandas.tests.frame.test_convert_to.collections",
    "pandas.tests.frame.test_convert_to.email"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_convert_to.TestDataFrameConvertTo.test_to_records_with_multindex": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "numpy.zeros",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_convert_to.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_convert_to.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_convert_to.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_convert_to.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_convert_to.email": {
  "data": {
   "shadows": "email"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_convert_to.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_convert_to.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_convert_to.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_convert_to.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_dtypes": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.test_dtypes.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_dtypes.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_dtypes.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_astype": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "_check_cast",
    "int",
    "numpy.array",
    "numpy.int32",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_astype._check_cast": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "list",
    "pandas.compat.iteritems",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_astype_cast_nan_int": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "ValueError",
    "numpy.int64",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_astype_str": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "list",
    "map",
    "numpy.NaN",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.compat.text_type",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal",
    "range",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_astype_with_exclude_string": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "int",
    "numpy.int32",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_astype_with_view": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.round"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_concat_empty_dataframe_dtypes": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "list",
    "numpy.bool_",
    "numpy.float64",
    "numpy.int32",
    "numpy.object_",
    "pandas.DataFrame",
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_dtypes_are_correct_after_column_slice": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "list",
    "numpy.float_",
    "odict",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.OrderedDict",
    "pandas.util.testing.assert_series_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_dtypes_gh8722": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "dict",
    "numpy.dtype",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.iteritems",
    "pandas.option_context",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_empty_frame_dtypes_ftypes": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "list",
    "numpy.bool",
    "numpy.dtype",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.object",
    "odict",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.OrderedDict",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_ftypes": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "dict",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_select_dtypes_bad_arg_raises": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.compat.u",
    "pandas.date_range",
    "pandas.util.testing.assertRaisesRegexp",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_select_dtypes_bad_datetime64": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.util.testing.assertRaisesRegexp",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_select_dtypes_empty": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "pandas.DataFrame",
    "pandas.util.testing.assertRaisesRegexp",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_select_dtypes_exclude": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "numpy.number",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_select_dtypes_exclude_include": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "numpy.bool_",
    "numpy.datetime64",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_select_dtypes_include": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "numpy.number",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_select_dtypes_not_an_attr_but_still_valid_dtype": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "hasattr",
    "list",
    "numpy",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_select_dtypes_raises_on_string": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "list",
    "pandas.DataFrame",
    "pandas.util.testing.assertRaisesRegexp",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_select_dtypes_str_raises": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "NameError",
    "TypeError",
    "list",
    "numpy.arange",
    "numpy.string_",
    "numpy.unicode_",
    "pandas.DataFrame",
    "pandas.compat.u",
    "pandas.date_range",
    "pandas.util.testing.assertRaisesRegexp",
    "range",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_select_dtypes_typecodes": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "list",
    "numpy.random.random",
    "numpy.typecodes",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeCustomDataframe"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.TestDataFrameDataTypes.test_timedeltas": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "datetime.timedelta",
    "dict",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_dtypes.Timedelta": {
  "data": {
   "shadows": "pandas.Timedelta"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_dtypes.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_dtypes.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_dtypes.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_dtypes.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_dtypes.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_dtypes.mkdf": {
  "data": {
   "shadows": "pandas.util.testing.makeCustomDataframe"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_dtypes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_dtypes.option_context": {
  "data": {
   "shadows": "pandas.option_context"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_dtypes.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_dtypes.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_dtypes.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_dtypes.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_dtypes.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.test_indexing.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.Decimal": {
  "data": {
   "shadows": "decimal.Decimal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.IndexingError": {
  "data": {
   "shadows": "pandas.core.indexing.IndexingError"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.SparseDataFrame": {
  "data": {
   "shadows": "pandas.sparse.api.SparseDataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_at_time_between_time_datetimeindex": {
  "data": {
   "lineno": 2007,
   "symbols_in_volume": [
    "datetime.time",
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_boolean_index_empty_corner": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "bool",
    "numpy.array",
    "numpy.empty",
    "pandas.DataFrame",
    "pandas.DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_boolean_indexing": {
  "data": {
   "lineno": 2149,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "len",
    "numpy.array",
    "numpy.ones",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_boolean_indexing_mixed": {
  "data": {
   "lineno": 2170,
   "symbols_in_volume": [
    "TypeError",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.long",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_delitem_corner": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": [
    "KeyError",
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_fancy_getitem_int_labels": {
  "data": {
   "lineno": 923,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_fancy_getitem_slice_mixed": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": [
    "numpy.float64",
    "pandas.core.common.SettingWithCopyError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_fancy_getitem_slice_mixed.f": {
  "data": {
   "lineno": 892
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_fancy_index_int_labels_exceptions": {
  "data": {
   "lineno": 942,
   "symbols_in_volume": [
    "KeyError",
    "numpy.arange",
    "numpy.random.randn",
    "pandas.DataFrame",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_fancy_setitem_int_labels": {
  "data": {
   "lineno": 897,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_get": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_get_set_value_no_partial_indexing": {
  "data": {
   "lineno": 1637,
   "symbols_in_volume": [
    "KeyError",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.lrange"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_get_value": {
  "data": {
   "lineno": 1539,
   "symbols_in_volume": [
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getattr": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "KeyError",
    "len",
    "numpy.random.randn",
    "pandas.compat.iteritems",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_boolean": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "dict",
    "numpy.nan",
    "numpy.where",
    "object",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_boolean_casting": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "float",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.isnull",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_boolean_iadd": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_boolean_list": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "_checkit",
    "numpy.arange",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_boolean_list._checkit": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_callable": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_dupe_cols": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "KeyError",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_empty_frame_with_boolean": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_fancy_1d": {
  "data": {
   "lineno": 1100,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_fancy_2d": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "ValueError",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_fancy_boolean": {
  "data": {
   "lineno": 1215,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_fancy_ints": {
  "data": {
   "lineno": 1255,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_fancy_scalar": {
  "data": {
   "lineno": 1192,
   "symbols_in_volume": [
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_fancy_slice_integers_step": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_iterator": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "iter",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_ix_boolean_duplicates_multiple": {
  "data": {
   "lineno": 1501,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_ix_float_duplicates": {
  "data": {
   "lineno": 1913,
   "symbols_in_volume": [
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_ix_mixed_integer": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "numpy.random.randn",
    "object",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_list": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "KeyError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_list_duplicates": {
  "data": {
   "lineno": 1528,
   "symbols_in_volume": [
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_setitem_boolean_misaligned": {
  "data": {
   "lineno": 1272,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_setitem_boolean_multi": {
  "data": {
   "lineno": 1286,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_setitem_fancy_exceptions": {
  "data": {
   "lineno": 1264,
   "symbols_in_volume": [
    "pandas.core.indexing.IndexingError",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_setitem_float_labels": {
  "data": {
   "lineno": 1302,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_setitem_float_labels.f": {
  "data": {
   "lineno": 1348
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_setitem_integer_slice_keyerrors": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "KeyError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_setitem_ix_bool_keyerror": {
  "data": {
   "lineno": 1518,
   "symbols_in_volume": [
    "KeyError",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_setitem_ix_duplicates": {
  "data": {
   "lineno": 1484,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_setitem_ix_negative_integers": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "chr",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.isnull",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_getitem_setitem_non_ix_labels": {
  "data": {
   "lineno": 1040,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_head_tail": {
  "data": {
   "lineno": 2646,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_icol": {
  "data": {
   "lineno": 1686,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.core.common.SettingWithCopyError",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_icol.f": {
  "data": {
   "lineno": 1709
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_icol_sparse_propegate_fill_value": {
  "data": {
   "lineno": 1760,
   "symbols_in_volume": [
    "len",
    "pandas.sparse.api.SparseDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_iget_value": {
  "data": {
   "lineno": 1765,
   "symbols_in_volume": [
    "FutureWarning",
    "enumerate",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_index_namedtuple": {
  "data": {
   "lineno": 2138,
   "symbols_in_volume": [
    "IndexType",
    "collections.namedtuple",
    "pandas.DataFrame",
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_irow": {
  "data": {
   "lineno": 1652,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.core.common.SettingWithCopyError",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_irow.f": {
  "data": {
   "lineno": 1674
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_irow_icol_duplicates": {
  "data": {
   "lineno": 1719,
   "symbols_in_volume": [
    "list",
    "numpy.random.rand",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_ix_align": {
  "data": {
   "lineno": 986,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_ix_dup": {
  "data": {
   "lineno": 1087,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_ix_frame_align": {
  "data": {
   "lineno": 1019,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_ix_multi_take": {
  "data": {
   "lineno": 1060,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_ix_multi_take_multiindex": {
  "data": {
   "lineno": 1080,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_ix_multi_take_nonint_index": {
  "data": {
   "lineno": 1073,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_lookup": {
  "data": {
   "lineno": 1546,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "alt",
    "numpy.bool_",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_series_equal",
    "testit"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_lookup.alt": {
  "data": {
   "lineno": 1547,
   "symbols_in_volume": [
    "pandas.compat.zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_lookup.testit": {
  "data": {
   "lineno": 1553,
   "symbols_in_volume": [
    "alt",
    "len",
    "list",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_mask": {
  "data": {
   "lineno": 2589,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_mask_callable": {
  "data": {
   "lineno": 2625,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_mask_edge_case_1xN_frame": {
  "data": {
   "lineno": 2618,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_mask_inplace": {
  "data": {
   "lineno": 2602,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_nested_exception": {
  "data": {
   "lineno": 1777,
   "symbols_in_volume": [
    "Exception",
    "UnboundLocalError",
    "list",
    "pandas.DataFrame",
    "repr",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_non_monotonic_reindex_methods": {
  "data": {
   "lineno": 1829,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_reindex_level": {
  "data": {
   "lineno": 1842,
   "symbols_in_volume": [
    "itertools.permutations",
    "list",
    "numpy.concatenate",
    "numpy.random.choice",
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.range",
    "verify",
    "verify_first_level"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_reindex_level.verify": {
  "data": {
   "lineno": 1853,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_reindex_level.verify_first_level": {
  "data": {
   "lineno": 1846,
   "symbols_in_volume": [
    "list",
    "numpy.concatenate",
    "numpy.nonzero",
    "pandas.compat.map",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_reindex_methods": {
  "data": {
   "lineno": 1793,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_set_value": {
  "data": {
   "lineno": 1581,
   "symbols_in_volume": [
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_set_value_resize": {
  "data": {
   "lineno": 1587,
   "symbols_in_volume": [
    "ValueError",
    "numpy.object_",
    "pandas.core.common.is_float_dtype",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_set_value_with_index_dtype_change": {
  "data": {
   "lineno": 1611,
   "symbols_in_volume": [
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.lrange"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setattr_column": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.lrange"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "KeyError",
    "len",
    "numpy.array",
    "numpy.nan",
    "numpy.object_",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.core.common.SettingWithCopyError",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_dict_equal",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem.f": {
  "data": {
   "lineno": 425
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_None": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_always_copy": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.notnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_ambig": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "decimal.Decimal",
    "len",
    "numpy.object_",
    "numpy.ones",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_boolean": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "TypeError",
    "numpy.abs",
    "numpy.nan",
    "numpy.putmask",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_boolean_column": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_callable": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_cast": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "issubclass",
    "len",
    "numpy.arange",
    "numpy.dtype",
    "numpy.float64",
    "numpy.int64",
    "numpy.int8",
    "numpy.integer",
    "numpy.nan",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_clear_caches": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_corner": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "len",
    "numpy.arange",
    "numpy.float64",
    "numpy.int64",
    "numpy.object_",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_corner2": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "numpy.random.random",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_datetime_coercion": {
  "data": {
   "lineno": 1977,
   "symbols_in_volume": [
    "datetime.date",
    "numpy.datetime64",
    "pandas.DataFrame",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_datetimelike_with_inference": {
  "data": {
   "lineno": 1986,
   "symbols_in_volume": [
    "datetime.timedelta",
    "list",
    "numpy.array",
    "numpy.datetime64",
    "numpy.dtype",
    "numpy.timedelta64",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_empty": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_empty_frame_with_boolean": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_fancy_1d": {
  "data": {
   "lineno": 1143,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_fancy_2d": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.lzip",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_fancy_boolean": {
  "data": {
   "lineno": 1239,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_fancy_mixed_2d": {
  "data": {
   "lineno": 962,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.isnull",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_fancy_scalar": {
  "data": {
   "lineno": 1201,
   "symbols_in_volume": [
    "enumerate",
    "numpy.random.randn",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_frame": {
  "data": {
   "lineno": 1423,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_frame_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_frame_align": {
  "data": {
   "lineno": 1476,
   "symbols_in_volume": [
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_list": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.int_",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.compat.range",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_list_not_dataframe": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_list_of_tuples": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.lzip",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_mulit_index": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "len",
    "numpy.random.randint",
    "numpy.random.shuffle",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_single_column_mixed": {
  "data": {
   "lineno": 1386,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_single_column_mixed_datetime": {
  "data": {
   "lineno": 1394,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.core.common.isnull",
    "pandas.tslib.iNaT",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_tuple": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_with_sparse_value": {
  "data": {
   "lineno": 1948,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_with_unaligned_sparse_value": {
  "data": {
   "lineno": 1955,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_setitem_with_unaligned_tz_aware_datetime_column": {
  "data": {
   "lineno": 1963,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_single_element_ix_dont_upcast": {
  "data": {
   "lineno": 1644,
   "symbols_in_volume": [
    "int",
    "issubclass",
    "numpy.integer",
    "pandas.core.common.is_integer"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_slice_floats": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "len",
    "numpy.random.rand",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_type_error_multiindex": {
  "data": {
   "lineno": 2671,
   "symbols_in_volume": [
    "TypeError",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "slice",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where": {
  "data": {
   "lineno": 2201,
   "symbols_in_volume": [
    "ValueError",
    "_check_align",
    "_check_get",
    "_check_set",
    "_safe_add",
    "all",
    "dict",
    "issubclass",
    "numpy.integer",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where._check_align": {
  "data": {
   "lineno": 2249,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "numpy.ndarray",
    "numpy.where",
    "pandas.Series",
    "pandas.lib.isscalar",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where._check_get": {
  "data": {
   "lineno": 2214,
   "symbols_in_volume": [
    "_safe_add",
    "numpy.where",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where._check_set": {
  "data": {
   "lineno": 2306,
   "symbols_in_volume": [
    "issubclass",
    "numpy.dtype",
    "numpy.integer",
    "numpy.nan",
    "pandas.compat.iteritems",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where._safe_add": {
  "data": {
   "lineno": 2205,
   "symbols_in_volume": [
    "dict",
    "is_ok",
    "pandas.DataFrame",
    "pandas.compat.iteritems"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where._safe_add.is_ok": {
  "data": {
   "lineno": 2207,
   "symbols_in_volume": [
    "issubclass",
    "numpy.floating",
    "numpy.integer"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where_align": {
  "data": {
   "lineno": 2424,
   "symbols_in_volume": [
    "create",
    "pandas.DataFrame",
    "pandas.notnull",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where_align.create": {
  "data": {
   "lineno": 2426,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where_axis": {
  "data": {
   "lineno": 2464,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.nan",
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where_bug": {
  "data": {
   "lineno": 2341,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where_callable": {
  "data": {
   "lineno": 2568,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where_complex": {
  "data": {
   "lineno": 2456,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where_datetime": {
  "data": {
   "lineno": 2395,
   "symbols_in_volume": [
    "datetime.datetime",
    "dict",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_where_none": {
  "data": {
   "lineno": 2408,
   "symbols_in_volume": [
    "TypeError",
    "float",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.isnull",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_xs": {
  "data": {
   "lineno": 2053,
   "symbols_in_volume": [
    "KeyError",
    "numpy.isnan",
    "numpy.object_",
    "pandas.DataFrame",
    "pandas.compat.iteritems",
    "pandas.core.datetools.bday",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_xs_corner": {
  "data": {
   "lineno": 2088,
   "symbols_in_volume": [
    "list",
    "object",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_xs_duplicates": {
  "data": {
   "lineno": 2108,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_xs_keep_level": {
  "data": {
   "lineno": 2115,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.TestDataFrameIndexing.test_xs_view": {
  "data": {
   "lineno": 2128,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.compat.lrange"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_indexing.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.assertRaises": {
  "data": {
   "shadows": "pandas.util.testing.assertRaises"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.assertRaisesRegexp": {
  "data": {
   "shadows": "pandas.util.testing.assertRaisesRegexp"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.assert_numpy_array_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_numpy_array_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.bday": {
  "data": {
   "shadows": "pandas.core.datetools.bday"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.lib": {
  "data": {
   "shadows": "pandas.lib"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.long": {
  "data": {
   "shadows": "pandas.compat.long"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.lzip": {
  "data": {
   "shadows": "pandas.compat.lzip"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.map": {
  "data": {
   "shadows": "pandas.compat.map"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.notnull": {
  "data": {
   "shadows": "pandas.notnull"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.permutations": {
  "data": {
   "shadows": "itertools.permutations"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.randn": {
  "data": {
   "shadows": "numpy.random.randn"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.time": {
  "data": {
   "shadows": "datetime.time"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.tslib": {
  "data": {
   "shadows": "pandas.tslib"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_indexing.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_misc_api": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.tests.frame.test_misc_api.nose"
   ]
  },
  "type": "module"
 },
 "pandas.tests.frame.test_misc_api.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_misc_api.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_misc_api.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_misc_api.SharedWithSparse": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_misc_api.SharedWithSparse.test_add_prefix_suffix": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "pandas.tests.frame.test_misc_api.SharedWithSparse.test_copy_index_name_checking": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_misc_api.SharedWithSparse.test_get_value": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_misc_api.SharedWithSparse.test_getitem_pop_assign_name": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "pandas.tests.frame.test_misc_api.SharedWithSparse.test_join_index": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_misc_api.SharedWithSparse.test_join_index_more": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_misc_api.SharedWithSparse.test_join_index_series": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "ValueError",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_misc_api.SharedWithSparse.test_join_overlap": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_misc_api.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_misc_api.TestDataFrameMisc": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.tests.frame.common.TestData",
    "pandas.tests.frame.test_misc_api.SharedWithSparse",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_misc_api.TestDataFrameMisc.test_array_interface": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "numpy.sqrt",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_frame_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_misc_api.TestDataFrameMisc.test_as_matrix": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "enumerate",
    "numpy.isnan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_misc_api.TestDataFrameMisc.test_axis_aliases": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_misc_api.TestDataFrameMisc.test_column_contains_typeerror": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_misc_api.TestDataFrameMisc.test_deepcopy": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "copy.deepcopy",
    "pandas.compat.iteritems"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_misc_api.TestDataFrameMisc.test_empty_nonzero": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_misc_api.TestDataFrameMisc.test_get_agg_axis": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_misc_api.TestDataFrameMisc.test_get_axis": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "ValueError",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_misc_api.TestDataFrameMisc.test_inplace_return_self": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "_check_f",
    "f",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_misc_api.TestDataFrameMisc.test_inplace_return_self._check_f": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "f"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_misc_api.TestDataFrameMisc.test_iter": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "list",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_misc_api.TestDataFrameMisc.test_iteritems": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.iteritems",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_misc_api.TestDataFrameMisc.test_iterkv_deprecation": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_misc_api.TestDataFrameMisc.test_iterkv_names": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "pandas.compat.iteritems"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_misc_api.TestDataFrameMisc.test_iterrows": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "enumerate",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_misc_api.TestDataFrameMisc.test_itertuples": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "dict",
    "distutils.version.LooseVersion",
    "enumerate",
    "hasattr",
    "list",
    "next",
    "numpy.integer",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.compat.range",
    "pandas.tests.frame.test_misc_api.sys",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_series_equal",
    "repr",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_misc_api.TestDataFrameMisc.test_keys": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "getkeys"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_misc_api.TestDataFrameMisc.test_len": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_misc_api.TestDataFrameMisc.test_more_asMatrix": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_misc_api.TestDataFrameMisc.test_new_empty_index": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_misc_api.TestDataFrameMisc.test_nonzero": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_misc_api.TestDataFrameMisc.test_not_hashable": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "TypeError",
    "hash",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_misc_api.TestDataFrameMisc.test_repr_with_mi_nat": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas.tests.frame.test_misc_api.nose",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_misc_api.TestDataFrameMisc.test_series_put_names": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "pandas.compat.iteritems"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_misc_api.TestDataFrameMisc.test_swapaxes": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_misc_api.TestDataFrameMisc.test_transpose": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.object_",
    "pandas.DataFrame",
    "pandas.compat.iteritems",
    "pandas.util.testing.getMixedTypeDict"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_misc_api.TestDataFrameMisc.test_transpose_get_view": {
  "data": {
   "lineno": 360
  },
  "type": "function"
 },
 "pandas.tests.frame.test_misc_api.TestDataFrameMisc.test_values": {
  "data": {
   "lineno": 328
  },
  "type": "function"
 },
 "pandas.tests.frame.test_misc_api.assertRaisesRegexp": {
  "data": {
   "shadows": "pandas.util.testing.assertRaisesRegexp"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_misc_api.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_misc_api.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_misc_api.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_misc_api.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_misc_api.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_misc_api.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_misc_api.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_misc_api.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_misc_api.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_misc_api.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_misc_api.randn": {
  "data": {
   "shadows": "numpy.random.randn"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_misc_api.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_misc_api.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_misc_api.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_missing": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.tests.frame.test_missing.nose"
   ]
  },
  "type": "module"
 },
 "pandas.tests.frame.test_missing.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_missing.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_missing.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_missing.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_missing.TestDataFrameInterpolate": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_missing.TestDataFrameInterpolate.test_interp_alt_scipy": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "numpy.int64",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.tests.frame.test_missing._skip_if_no_pchip",
    "pandas.tests.frame.test_missing.scipy",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameInterpolate.test_interp_bad_method": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameInterpolate.test_interp_basic": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameInterpolate.test_interp_combo": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameInterpolate.test_interp_ignore_all_good": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameInterpolate.test_interp_inplace": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameInterpolate.test_interp_inplace_row": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameInterpolate.test_interp_leading_nans": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameInterpolate.test_interp_nan_idx": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameInterpolate.test_interp_raise_on_only_mixed": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "TypeError",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameInterpolate.test_interp_rowwise": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameInterpolate.test_interp_various": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameInterpolate.test_rowwise_alt": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_bfill": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_dropEmptyRows": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_dropIncompleteRows": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_drop_and_dropna_caching": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_dropna": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_dropna_corner": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_dropna_multiple_axes": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_ffill": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_fill_corner": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_fill_value_when_combine_const": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_fillna": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "numpy.isnan",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas.tests.frame.common._check_mixed_float",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_fillna_col_reordering": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_fillna_columns": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "float",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_fillna_dataframe": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_fillna_datetime_columns": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_fillna_dict_series": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_fillna_dtype_conversion": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "dict",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_fillna_inplace": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_fillna_invalid_method": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "ValueError",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_fillna_invalid_value": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "TypeError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.TestDataFrameMissingData.test_fillna_skip_certain_blocks": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "int",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_missing._check_mixed_float": {
  "data": {
   "shadows": "pandas.tests.frame.common._check_mixed_float"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_missing._skip_if_no_pchip": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "ImportError",
    "pandas.tests.frame.test_missing.nose"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_missing.assertRaisesRegexp": {
  "data": {
   "shadows": "pandas.util.testing.assertRaisesRegexp"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_missing.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_missing.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_missing.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_missing.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_missing.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_missing.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_missing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_missing.pchip_interpolate": {
  "data": {
   "shadows": "scipy.interpolate.pchip_interpolate"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_missing.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_missing.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_missing.random": {
  "data": {
   "shadows": "numpy.random"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_missing.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_missing.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_mutate_columns": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.test_mutate_columns.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_mutate_columns.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_mutate_columns.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_mutate_columns.TestDataFrameMutateColumns": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_mutate_columns.TestDataFrameMutateColumns.test_assign": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_mutate_columns.TestDataFrameMutateColumns.test_assign_alphabetical": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_mutate_columns.TestDataFrameMutateColumns.test_assign_bad": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "TypeError",
    "pandas.DataFrame",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_mutate_columns.TestDataFrameMutateColumns.test_assign_multiple": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_mutate_columns.TestDataFrameMutateColumns.test_delitem": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "pandas.tests.frame.test_mutate_columns.TestDataFrameMutateColumns.test_insert": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "numpy.arange",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_mutate_columns.TestDataFrameMutateColumns.test_insert_benchmark": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.repeat",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.compat.range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_mutate_columns.TestDataFrameMutateColumns.test_insert_column_bug_4032": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_mutate_columns.TestDataFrameMutateColumns.test_insert_error_msmgs": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_mutate_columns.TestDataFrameMutateColumns.test_pop": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_mutate_columns.TestDataFrameMutateColumns.test_pop_non_unique_cols": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_mutate_columns.assertRaisesRegexp": {
  "data": {
   "shadows": "pandas.util.testing.assertRaisesRegexp"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_mutate_columns.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_mutate_columns.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_mutate_columns.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_mutate_columns.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_mutate_columns.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_mutate_columns.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_mutate_columns.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_nonunique_indexes": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.test_nonunique_indexes.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_nonunique_indexes.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_nonunique_indexes.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_nonunique_indexes.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_nonunique_indexes.TestDataFrameNonuniqueIndexes": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_nonunique_indexes.TestDataFrameNonuniqueIndexes.test_as_matrix_duplicates": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array_equal",
    "object",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_nonunique_indexes.TestDataFrameNonuniqueIndexes.test_column_dups2": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_nonunique_indexes.TestDataFrameNonuniqueIndexes.test_column_dups_indexing": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "ValueError",
    "check",
    "numpy.arange",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_nonunique_indexes.TestDataFrameNonuniqueIndexes.test_column_dups_indexing.check": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_nonunique_indexes.TestDataFrameNonuniqueIndexes.test_column_dups_indexing2": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.Timedelta",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_nonunique_indexes.TestDataFrameNonuniqueIndexes.test_column_dups_operations": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ValueError",
    "check",
    "dict",
    "getattr",
    "len",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.random.rand",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.DataFrame.from_items",
    "pandas.Index",
    "pandas.MultiIndex.from_tuples",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.compat.u",
    "pandas.concat",
    "pandas.date_range",
    "pandas.merge",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_frame_equal",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_nonunique_indexes.TestDataFrameNonuniqueIndexes.test_column_dups_operations.check": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_nonunique_indexes.TestDataFrameNonuniqueIndexes.test_columns_with_dups": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "Exception",
    "len",
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_nonunique_indexes.TestDataFrameNonuniqueIndexes.test_set_value_by_index": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "float",
    "list",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.util.testing.assert_series_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_nonunique_indexes.assertRaisesRegexp": {
  "data": {
   "shadows": "pandas.util.testing.assertRaisesRegexp"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_nonunique_indexes.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_nonunique_indexes.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_nonunique_indexes.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_nonunique_indexes.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_nonunique_indexes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_nonunique_indexes.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_nonunique_indexes.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_nonunique_indexes.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_nonunique_indexes.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.tests.frame.test_operators.nose"
   ]
  },
  "type": "module"
 },
 "pandas.tests.frame.test_operators.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators._test_op": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "ValueError",
    "op",
    "pandas.util.testing.assert_series_equal",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_arith_flex_frame": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "aliases",
    "aliases.get",
    "dict",
    "f",
    "getattr",
    "numpy.nan",
    "numpy.ones",
    "op",
    "pandas.compat.PY3",
    "pandas.formats.printing.pprint_thing",
    "pandas.tests.frame.common._check_mixed_float",
    "pandas.tests.frame.common._check_mixed_int",
    "pandas.tests.frame.test_operators.operator",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_frame_equal",
    "r_f"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_arith_flex_series": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "f",
    "getattr",
    "numpy.arange",
    "numpy.inf",
    "numpy.nan",
    "op",
    "pandas.DataFrame",
    "pandas.tests.frame.test_operators.operator",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_arith_getitem_commute": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.tests.frame.test_operators.operator"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_arith_mixed": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_arith_non_pandas_object": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "list",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_binary_ops_align": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "getattr",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.ones",
    "op",
    "opa",
    "pandas.DataFrame",
    "pandas.IndexSlice",
    "pandas.MultiIndex.from_product",
    "pandas.Series",
    "pandas.concat",
    "pandas.tests.frame.test_operators.operator",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_bool_flex_frame": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "ValueError",
    "_check_unaligned_frame",
    "_test_seq",
    "datetime.datetime.now",
    "f",
    "getattr",
    "numpy.array",
    "numpy.nan",
    "numpy.ones",
    "numpy.random.randn",
    "o",
    "op",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.tests.frame.test_operators.operator",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_bool_flex_frame._check_unaligned_frame": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "meth",
    "op",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_bool_flex_frame._test_seq": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "list",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_boolean_comparison": {
  "data": {
   "lineno": 923,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.array_equal",
    "numpy.atleast_2d",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_combineAdd": {
  "data": {
   "lineno": 993,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.arange",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.tests.frame.test_operators.operator",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_combineFrame": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "dict",
    "numpy.isnan",
    "numpy.nan",
    "pandas.tests.frame.common._check_mixed_float",
    "pandas.util.testing.assert_dict_equal",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_combineFunc": {
  "data": {
   "lineno": 859,
   "symbols_in_volume": [
    "dict",
    "len",
    "pandas.compat.iteritems",
    "pandas.tests.frame.common._check_mixed_float"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_combineMult": {
  "data": {
   "lineno": 1039,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_combineSeries": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": [
    "dict",
    "len",
    "numpy.isnan",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.iteritems",
    "pandas.tests.frame.common._check_mixed_float",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_combine_generic": {
  "data": {
   "lineno": 1053,
   "symbols_in_volume": [
    "numpy.add",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_comparison_invalid": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "check",
    "len",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_comparison_invalid.check": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_comparisons": {
  "data": {
   "lineno": 874,
   "symbols_in_volume": [
    "numpy.ones",
    "pandas.tests.frame.test_operators.operator",
    "pandas.util.testing.makeTimeDataFrame",
    "test_comp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_comparisons.test_comp": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": [
    "ValueError",
    "func",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_div": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "numpy.array_equal",
    "numpy.inf",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_float_none_comparison": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": [
    "TypeError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.lrange"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_inplace_ops_alignment": {
  "data": {
   "lineno": 1069,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_inplace_ops_identity": {
  "data": {
   "lineno": 1116,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_invert": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_logical_operators": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "_check_bin_op",
    "_check_unary_op",
    "pandas.DataFrame",
    "pandas.tests.frame.test_operators.operator"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_logical_operators._check_bin_op": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "numpy.bool_",
    "op",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_logical_operators._check_unary_op": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "numpy.bool_",
    "op",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_logical_typeerror": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "TypeError",
    "pandas.compat.PY3",
    "pandas.tests.frame.test_operators.nose"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_logical_with_nas": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_modulo": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "numpy.array_equal",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_neg": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_operators": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.isnan",
    "numpy.nan",
    "numpy.random.random",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.iteritems",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_operators_boolean": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "TypeError",
    "f",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_operators_boolean.f": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_operators_none_as_na": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "numpy.nan",
    "object",
    "op",
    "pandas.DataFrame",
    "pandas.core.common.isnull",
    "pandas.tests.frame.test_operators.operator",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_ops_np_scalar": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "f",
    "list",
    "numpy.array",
    "numpy.inf",
    "numpy.nan",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_string_comparison": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.TestDataFrameOperators.test_timestamp_compare": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "getattr",
    "left_f",
    "len",
    "list",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.tests.frame.test_operators.operator",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.rands",
    "right_f"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_operators.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators._check_mixed_float": {
  "data": {
   "shadows": "pandas.tests.frame.common._check_mixed_float"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators._check_mixed_int": {
  "data": {
   "shadows": "pandas.tests.frame.common._check_mixed_int"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators.assertRaisesRegexp": {
  "data": {
   "shadows": "pandas.util.testing.assertRaisesRegexp"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators.assert_numpy_array_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_numpy_array_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators.printing": {
  "data": {
   "shadows": "pandas.formats.printing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators.random": {
  "data": {
   "shadows": "numpy.random"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_operators.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_quantile": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.test_quantile.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_quantile.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_quantile.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_quantile.TestDataFrameQuantile": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_quantile.TestDataFrameQuantile.test_quantile": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.percentile",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_quantile.TestDataFrameQuantile.test_quantile_axis_parameter": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_quantile.TestDataFrameQuantile.test_quantile_box": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.Series",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_quantile.TestDataFrameQuantile.test_quantile_datetime": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_quantile.TestDataFrameQuantile.test_quantile_interpolation": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.isnan",
    "numpy.percentile",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas._np_version_under1p11",
    "pandas._np_version_under1p9",
    "pandas.tests.frame.test_quantile.nose",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_quantile.TestDataFrameQuantile.test_quantile_interpolation_np_lt_1p9": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "ValueError",
    "numpy.percentile",
    "pandas.DataFrame",
    "pandas._np_version_under1p9",
    "pandas.tests.frame.test_quantile.nose",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_quantile.TestDataFrameQuantile.test_quantile_invalid": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "ValueError",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_quantile.TestDataFrameQuantile.test_quantile_multi": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_quantile.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_quantile._np_version_under1p11": {
  "data": {
   "shadows": "pandas._np_version_under1p11"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_quantile._np_version_under1p9": {
  "data": {
   "shadows": "pandas._np_version_under1p9"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_quantile.assertRaisesRegexp": {
  "data": {
   "shadows": "pandas.util.testing.assertRaisesRegexp"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_quantile.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_quantile.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_quantile.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_quantile.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_quantile.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_quantile.percentile": {
  "data": {
   "shadows": "numpy.percentile"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_quantile.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_quantile.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.tests.frame.test_query_eval.nose"
   ]
  },
  "type": "module"
 },
 "pandas.tests.frame.test_query_eval.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval.ENGINES": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pandas.tests.frame.test_query_eval.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval.NumExprClobberingError": {
  "data": {
   "shadows": "pandas.computation.engines.NumExprClobberingError"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval.PARSERS": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pandas.tests.frame.test_query_eval.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval.TestCompat": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_query_eval.TestCompat.setUp": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestCompat.test_query_None": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestCompat.test_query_default": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestCompat.test_query_numexpr": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ImportError",
    "pandas.computation._NUMEXPR_INSTALLED",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestCompat.test_query_python": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEval": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEval.test_ops": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "dict",
    "eval",
    "getattr",
    "list",
    "numpy.isnan",
    "numpy.nan",
    "numpy.random.randn",
    "numpy.tile",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEval.test_query_non_str": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEvalNumExprPandas": {
  "data": {
   "lineno": 1078,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEvalNumExprPandas.setUp": {
  "data": {
   "lineno": 1087,
   "symbols_in_volume": [
    "list",
    "numpy.random.randn",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEvalNumExprPandas.setUpClass": {
  "data": {
   "lineno": 1080,
   "symbols_in_volume": [
    "classmethod",
    "pandas.tests.frame.test_query_eval.TestDataFrameEvalNumExprPandas",
    "pandas.util.testing.skip_if_no_ne",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEvalNumExprPandas.tearDown": {
  "data": {
   "lineno": 1090
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEvalNumExprPandas.test_bool_arith_expr": {
  "data": {
   "lineno": 1098,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEvalNumExprPandas.test_invalid_type_for_operator_raises": {
  "data": {
   "lineno": 1104,
   "symbols_in_volume": [
    "TypeError",
    "pandas.DataFrame",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEvalNumExprPandas.test_simple_expr": {
  "data": {
   "lineno": 1093,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEvalNumExprPython": {
  "data": {
   "lineno": 1115,
   "symbols_in_volume": [
    "pandas.tests.frame.test_query_eval.TestDataFrameEvalNumExprPandas"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEvalNumExprPython.setUpClass": {
  "data": {
   "lineno": 1117,
   "symbols_in_volume": [
    "classmethod",
    "pandas.tests.frame.test_query_eval.TestDataFrameEvalNumExprPython",
    "pandas.util.testing.skip_if_no_ne",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEvalPythonPandas": {
  "data": {
   "lineno": 1125,
   "symbols_in_volume": [
    "pandas.tests.frame.test_query_eval.TestDataFrameEvalNumExprPandas"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEvalPythonPandas.setUpClass": {
  "data": {
   "lineno": 1127,
   "symbols_in_volume": [
    "classmethod",
    "pandas.tests.frame.test_query_eval.TestDataFrameEvalPythonPandas",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEvalPythonPython": {
  "data": {
   "lineno": 1134,
   "symbols_in_volume": [
    "pandas.tests.frame.test_query_eval.TestDataFrameEvalNumExprPython"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameEvalPythonPython.setUpClass": {
  "data": {
   "lineno": 1136,
   "symbols_in_volume": [
    "classmethod",
    "pandas.tests.frame.test_query_eval.TestDataFrameEvalPythonPython",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.setUpClass": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "classmethod",
    "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas",
    "pandas.util.testing.skip_if_no_ne",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.tearDownClass": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "classmethod",
    "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_at_inside_string": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.tests.frame.test_query_eval.skip_if_no_pandas_parser",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_chained_cmp_and_in": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.tests.frame.test_query_eval.skip_if_no_pandas_parser",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_date_index_query": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_date_index_query_with_NaT": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_date_index_query_with_NaT_duplicates": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_date_query_no_attribute_access": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_date_query_with_NaT": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "numpy.random.rand",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_date_query_with_attribute_access": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.tests.frame.test_query_eval.skip_if_no_pandas_parser",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_date_query_with_non_date": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "TypeError",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_index_resolvers_come_after_columns_with_the_same_name": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "numpy.r_",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_inf": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "dict",
    "f",
    "numpy.inf",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.compat.zip",
    "pandas.tests.frame.test_query_eval.operator",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_local_syntax": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.tests.frame.test_query_eval.skip_if_no_pandas_parser",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_local_variable_with_in": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.tests.frame.test_query_eval.skip_if_no_pandas_parser",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_nested_raises_on_local_self_reference": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.computation.ops.UndefinedVariableError",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_nested_scope": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.eval",
    "pandas.tests.frame.test_query_eval.skip_if_no_pandas_parser",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_query": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_query_builtin": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "list",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.computation.engines.NumExprClobberingError",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_query_doesnt_pickup_local": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "list",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.computation.ops.UndefinedVariableError",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_query_index_with_name": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.compat.range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_query_index_without_name": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_query_scope": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.computation.ops.UndefinedVariableError",
    "pandas.tests.frame.test_query_eval.skip_if_no_pandas_parser",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_query_syntax_error": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "SyntaxError",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas.test_query_undefined_local": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "list",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.computation.ops.UndefinedVariableError",
    "pandas.tests.frame.test_query_eval.skip_if_no_pandas_parser",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPython": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPython.setUpClass": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "classmethod",
    "pandas.tests.frame.common.TestData",
    "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPython",
    "pandas.util.testing.skip_if_no_ne",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPython.test_date_index_query": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPython.test_date_index_query_with_NaT": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPython.test_date_index_query_with_NaT_duplicates": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.random.rand",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.date_range",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPython.test_date_query_no_attribute_access": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPython.test_date_query_with_NaT": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "numpy.random.rand",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPython.test_nested_scope": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "SyntaxError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.computation.ops.UndefinedVariableError",
    "pandas.eval",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryPythonPandas": {
  "data": {
   "lineno": 821,
   "symbols_in_volume": [
    "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPandas"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryPythonPandas.setUpClass": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": [
    "classmethod",
    "pandas.tests.frame.common.TestData",
    "pandas.tests.frame.test_query_eval.TestDataFrameQueryPythonPandas",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryPythonPandas.test_query_builtin": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "list",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryPythonPython": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "pandas.tests.frame.test_query_eval.TestDataFrameQueryNumExprPython"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryPythonPython.setUpClass": {
  "data": {
   "lineno": 844,
   "symbols_in_volume": [
    "classmethod",
    "pandas.tests.frame.common.TestData",
    "pandas.tests.frame.test_query_eval.TestDataFrameQueryPythonPython",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryPythonPython.test_query_builtin": {
  "data": {
   "lineno": 850,
   "symbols_in_volume": [
    "list",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryStrings": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryStrings.check_object_array_eq_ne": {
  "data": {
   "lineno": 972,
   "symbols_in_volume": [
    "list",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryStrings.check_query_lex_compare_strings": {
  "data": {
   "lineno": 1032,
   "symbols_in_volume": [
    "func",
    "list",
    "numpy.arange",
    "numpy.random.choice",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.tests.frame.test_query_eval.operator",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryStrings.check_query_single_element_booleans": {
  "data": {
   "lineno": 1051,
   "symbols_in_volume": [
    "bool",
    "len",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryStrings.check_query_string_scalar_variable": {
  "data": {
   "lineno": 1064,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryStrings.check_query_with_nested_special_character": {
  "data": {
   "lineno": 1018,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.tests.frame.test_query_eval.skip_if_no_pandas_parser",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryStrings.check_query_with_nested_strings": {
  "data": {
   "lineno": 990,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.read_csv",
    "pandas.tests.frame.test_query_eval.skip_if_no_pandas_parser",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryStrings.check_query_with_string_columns": {
  "data": {
   "lineno": 947,
   "symbols_in_volume": [
    "NotImplementedError",
    "list",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryStrings.check_str_list_query_method": {
  "data": {
   "lineno": 908,
   "symbols_in_volume": [
    "NotImplementedError",
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.zip",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryStrings.check_str_query_method": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": [
    "NotImplementedError",
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.zip",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryStrings.test_object_array_eq_ne": {
  "data": {
   "lineno": 986,
   "symbols_in_volume": [
    "itertools.product",
    "pandas.tests.frame.test_query_eval.ENGINES",
    "pandas.tests.frame.test_query_eval.PARSERS"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryStrings.test_query_lex_compare_strings": {
  "data": {
   "lineno": 1047,
   "symbols_in_volume": [
    "itertools.product",
    "pandas.tests.frame.test_query_eval.ENGINES",
    "pandas.tests.frame.test_query_eval.PARSERS"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryStrings.test_query_single_element_booleans": {
  "data": {
   "lineno": 1060,
   "symbols_in_volume": [
    "itertools.product",
    "pandas.tests.frame.test_query_eval.ENGINES",
    "pandas.tests.frame.test_query_eval.PARSERS"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryStrings.test_query_string_scalar_variable": {
  "data": {
   "lineno": 1073,
   "symbols_in_volume": [
    "itertools.product",
    "pandas.tests.frame.test_query_eval.ENGINES"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryStrings.test_query_with_nested_special_character": {
  "data": {
   "lineno": 1027,
   "symbols_in_volume": [
    "itertools.product",
    "pandas.tests.frame.test_query_eval.ENGINES",
    "pandas.tests.frame.test_query_eval.PARSERS"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryStrings.test_query_with_nested_string": {
  "data": {
   "lineno": 1014,
   "symbols_in_volume": [
    "itertools.product",
    "pandas.tests.frame.test_query_eval.ENGINES",
    "pandas.tests.frame.test_query_eval.PARSERS"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryStrings.test_query_with_string_columns": {
  "data": {
   "lineno": 968,
   "symbols_in_volume": [
    "itertools.product",
    "pandas.tests.frame.test_query_eval.ENGINES",
    "pandas.tests.frame.test_query_eval.PARSERS"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryStrings.test_str_list_query_method": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "itertools.product",
    "pandas.tests.frame.test_query_eval.ENGINES",
    "pandas.tests.frame.test_query_eval.PARSERS"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryStrings.test_str_query_method": {
  "data": {
   "lineno": 900,
   "symbols_in_volume": [
    "itertools.product",
    "pandas.tests.frame.test_query_eval.ENGINES",
    "pandas.tests.frame.test_query_eval.PARSERS"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryWithMultiIndex": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryWithMultiIndex.check_query_multiindex_get_index_resolvers": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "AssertionError",
    "isinstance",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeCustomDataframe",
    "to_series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryWithMultiIndex.check_query_multiindex_get_index_resolvers.to_series": {
  "data": {
   "lineno": 345
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryWithMultiIndex.check_query_with_named_multiindex": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "numpy.random.choice",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryWithMultiIndex.check_query_with_partially_named_multiindex": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.choice",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryWithMultiIndex.check_query_with_unnamed_multiindex": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "numpy.random.choice",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryWithMultiIndex.check_raise_on_panel4d_with_multiindex": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "NotImplementedError",
    "len",
    "pandas.eval",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.makeCustomIndex",
    "pandas.util.testing.makePanel4D",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryWithMultiIndex.check_raise_on_panel_with_multiindex": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "NotImplementedError",
    "len",
    "pandas.eval",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.makeCustomIndex",
    "pandas.util.testing.makePanel",
    "pandas.util.testing.skip_if_no_ne"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryWithMultiIndex.test_query_multiindex_get_index_resolvers": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "itertools.product",
    "pandas.tests.frame.test_query_eval.ENGINES"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryWithMultiIndex.test_query_with_named_multiindex": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "itertools.product",
    "pandas.tests.frame.test_query_eval.ENGINES"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryWithMultiIndex.test_query_with_partially_named_multiindex": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "itertools.product",
    "pandas.tests.frame.test_query_eval.ENGINES"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryWithMultiIndex.test_query_with_unnamed_multiindex": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "itertools.product",
    "pandas.tests.frame.test_query_eval.ENGINES"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryWithMultiIndex.test_raise_on_panel4d_with_multiindex": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "itertools.product",
    "pandas.tests.frame.test_query_eval.ENGINES",
    "pandas.tests.frame.test_query_eval.PARSERS"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.TestDataFrameQueryWithMultiIndex.test_raise_on_panel_with_multiindex": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "itertools.product",
    "pandas.tests.frame.test_query_eval.ENGINES",
    "pandas.tests.frame.test_query_eval.PARSERS"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.UndefinedVariableError": {
  "data": {
   "shadows": "pandas.computation.ops.UndefinedVariableError"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval._NUMEXPR_INSTALLED": {
  "data": {
   "shadows": "pandas.computation._NUMEXPR_INSTALLED"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval.assertRaises": {
  "data": {
   "shadows": "pandas.util.testing.assertRaises"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval.mkdf": {
  "data": {
   "shadows": "pandas.util.testing.makeCustomDataframe"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval.opr": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval.randn": {
  "data": {
   "shadows": "numpy.random.randn"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval.skip_if_no_ne": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "pandas.computation._NUMEXPR_INSTALLED",
    "pandas.tests.frame.test_query_eval.nose"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.skip_if_no_pandas_parser": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "pandas.tests.frame.test_query_eval.nose"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_query_eval.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_query_eval.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_replace": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.test_replace.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_replace.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_replace.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_replace.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_replace.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_regex_replace_dict_mixed": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_regex_replace_dict_nested": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_regex_replace_dict_nested_gh4115": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_regex_replace_list_mixed": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_regex_replace_list_mixed_inplace": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_regex_replace_list_obj": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_regex_replace_list_obj_inplace": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_regex_replace_list_to_scalar": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_regex_replace_numeric_to_object_conversion": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "numpy.object_",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_regex_replace_regex_list_to_numeric": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_regex_replace_scalar": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.tests.frame.test_replace.re",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_regex_replace_scalar_inplace": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.tests.frame.test_replace.re",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_regex_replace_series_of_regexes": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_regex_replace_str_to_numeric": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_bool_with_bool": {
  "data": {
   "lineno": 906,
   "symbols_in_volume": [
    "bool",
    "numpy.ones",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_bool_with_string": {
  "data": {
   "lineno": 895,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_convert": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "numpy.int64",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_datetime": {
  "data": {
   "lineno": 978,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.util.testing.assert_equal",
    "pandas.util.testing.assert_frame_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_datetimetz": {
  "data": {
   "lineno": 1001,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_dict_no_regex": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_dict_tuple_list_ordering_remains_the_same": {
  "data": {
   "lineno": 874,
   "symbols_in_volume": [
    "dict",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_doesnt_replace_without_regex": {
  "data": {
   "lineno": 885,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_dtypes": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "datetime.datetime.today",
    "numpy.int16",
    "numpy.int32",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_for_new_dtypes": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.nan",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_inplace": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "TypeError",
    "numpy.nan",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_input_formats": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "len",
    "numpy.inf",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.iteritems",
    "pandas.compat.range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_int_to_int_chain": {
  "data": {
   "lineno": 923,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.compat.range",
    "pandas.compat.zip",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_limit": {
  "data": {
   "lineno": 853
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_list": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_mixed": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_period": {
  "data": {
   "lineno": 947,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Period",
    "pandas.util.testing.assert_equal",
    "pandas.util.testing.assert_frame_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_pure_bool_with_string_no_op": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": [
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_regex_metachar": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_series_dict": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_series_no_regex": {
  "data": {
   "lineno": 865,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_simple_nested_dict": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_simple_nested_dict_with_nonexistent_value": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_str_to_str_chain": {
  "data": {
   "lineno": 928,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.compat.zip",
    "pandas.util.testing.assertRaisesRegexp",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_swapping_bug": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_truthy": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_value_is_none": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "TypeError",
    "numpy.nan",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.TestDataFrameReplace.test_replace_with_dict_with_bool_keys": {
  "data": {
   "lineno": 912,
   "symbols_in_volume": [
    "TypeError",
    "pandas.DataFrame",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_replace.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_replace.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_replace.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_replace.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_replace.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_replace.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_replace.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_replace.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_replace.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_replace.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_replace.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_replace.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_replace.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_replace.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_replace.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_repr_info": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.test_repr_info.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_repr_info.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_repr_info.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_bytestring_with_unicode": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "bytes",
    "pandas.DataFrame",
    "pandas.compat.PY3",
    "pandas.compat.u",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_info": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.tests.frame.test_repr_info.sys"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_info_duplicate_columns": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_info_duplicate_columns_shows_correct_dtypes": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_info_max_cols": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.option_context"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_info_memory_usage": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "abs",
    "enumerate",
    "len",
    "numpy.random.randint",
    "numpy.size",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.compat.StringIO",
    "pandas.tests.frame.test_repr_info.re",
    "pandas.tests.frame.test_repr_info.sys",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_info_shows_column_dtypes": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "enumerate",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_info_wide": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.reset_option",
    "pandas.set_option"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_latex_repr": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.option_context"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_repr": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_repr_big": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "numpy.testing.decorators.slow",
    "numpy.zeros",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_repr_column_name_unicode_truncation_bug": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_repr_dimensions": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.option_context",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_repr_empty": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_repr_mixed": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_repr_mixed_big": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "numpy.testing.decorators.slow",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.util.testing.makeStringIndex",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_repr_unicode": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.u",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_repr_unsortable": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "FutureWarning",
    "datetime.datetime.today",
    "datetime.timedelta",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.formats.format.set_option",
    "pandas.tests.frame.test_repr_info.warnings",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_unicode_string_with_unicode": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.PY3",
    "pandas.compat.text_type",
    "pandas.compat.u",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.TestDataFrameReprInfoEtc.test_very_wide_info_repr": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.rands_array",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_repr_info.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_repr_info.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_repr_info.fmt": {
  "data": {
   "shadows": "pandas.formats.format"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_repr_info.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_repr_info.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_repr_info.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_repr_info.option_context": {
  "data": {
   "shadows": "pandas.option_context"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_repr_info.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_repr_info.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_repr_info.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_repr_info.reset_option": {
  "data": {
   "shadows": "pandas.reset_option"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_repr_info.set_option": {
  "data": {
   "shadows": "pandas.set_option"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_repr_info.slow": {
  "data": {
   "shadows": "numpy.testing.decorators.slow"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_repr_info.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_repr_info.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_repr_info.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_repr_info.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_repr_info.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_reshape": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.test_reshape.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_reshape.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_reshape.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_reshape.Period": {
  "data": {
   "shadows": "pandas.Period"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_reshape.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_reshape.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_pivot": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makePanel"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_pivot_duplicates": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_pivot_empty": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_pivot_index_none": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_pivot_integer_bug": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_stack_datetime_column_multiIndex": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_stack_int_level_names": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_stack_ints": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.tests.frame.test_reshape.itertools",
    "pandas.util.testing.assert_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_stack_mixed_levels": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_stack_partial_multiIndex": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "_test_stack_with_multiindex",
    "len",
    "numpy.arange",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_stack_partial_multiIndex._test_stack_with_multiindex": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "len",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_stack_unstack": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_unstack_bool": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "object",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_unstack_dtypes": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "numpy.zeros",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_unstack_fill": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "list",
    "numpy.float",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.NaT",
    "pandas.Period",
    "pandas.Series",
    "pandas.Timedelta",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_unstack_level_binding": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_unstack_nan_index": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "len",
    "list",
    "map",
    "numpy.NaN",
    "numpy.arange",
    "numpy.array",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.tests.frame.test_reshape.itertools",
    "pandas.util.testing.assert_frame_equal",
    "range",
    "verify",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_unstack_nan_index.verify": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "map",
    "mk_list",
    "sorted",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_unstack_non_unique_index_names": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.TestDataFrameReshape.test_unstack_to_series": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "isinstance",
    "numpy.NaN",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_reshape.Timedelta": {
  "data": {
   "shadows": "pandas.Timedelta"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_reshape.assertRaisesRegexp": {
  "data": {
   "shadows": "pandas.util.testing.assertRaisesRegexp"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_reshape.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_reshape.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_reshape.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_reshape.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_reshape.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_reshape.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_reshape.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_reshape.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_reshape.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_reshape.randn": {
  "data": {
   "shadows": "numpy.random.randn"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_reshape.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_reshape.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_sorting": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.test_sorting.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_sorting.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_sorting.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_sorting.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSorting": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSorting.test_frame_column_inplace_sort_exception": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "ValueError",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSorting.test_sort_datetimes": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSorting.test_sort_index": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSorting.test_sort_index_categorical_index": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSorting.test_sort_index_different_sortorder": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.arange",
    "numpy.lexsort",
    "numpy.random.permutation",
    "numpy.random.randn",
    "numpy.tile",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSorting.test_sort_index_duplicates": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.lrange",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSorting.test_sort_index_inplace": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "id",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSorting.test_sort_index_multicolumn": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.arange",
    "numpy.lexsort",
    "numpy.random.randn",
    "numpy.tile",
    "pandas.DataFrame",
    "pandas.tests.frame.test_sorting.random",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSorting.test_sort_inplace": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSorting.test_sort_nan": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSorting.test_sort_values": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "FutureWarning",
    "list",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSorting.test_sortlevel": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSorting.test_stable_descending_multicolumn_sort": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.TestDataFrameSorting.test_stable_descending_sort": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_sorting.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_sorting.assertRaisesRegexp": {
  "data": {
   "shadows": "pandas.util.testing.assertRaisesRegexp"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_sorting.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_sorting.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_sorting.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_sorting.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_sorting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_sorting.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_sorting.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_sorting.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_subclass": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.test_subclass.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_subclass.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_subclass.Panel": {
  "data": {
   "shadows": "pandas.Panel"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_subclass.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_subclass.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_dataframe_metadata": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "pandas.util.testing.SubclassedDataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_frame_subclassing_and_slicing": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "CustomDataFrame",
    "isinstance",
    "pandas.MultiIndex.from_tuples",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_frame_subclassing_and_slicing.CustomDataFrame": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_frame_subclassing_and_slicing.CustomDataFrame.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_frame_subclassing_and_slicing.CustomDataFrame._constructor": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_frame_subclassing_and_slicing.CustomDataFrame.custom_frame_function": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_frame_subclassing_and_slicing.CustomSeries": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_frame_subclassing_and_slicing.CustomSeries._constructor": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_frame_subclassing_and_slicing.CustomSeries.custom_series_function": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_indexing_sliced": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "list",
    "pandas.util.testing.SubclassedDataFrame",
    "pandas.util.testing.SubclassedSeries",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_subclass_align": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.util.testing.SubclassedDataFrame",
    "pandas.util.testing.SubclassedSeries",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_subclass_align_combinations": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.SubclassedDataFrame",
    "pandas.util.testing.SubclassedSeries",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_subclass_attr_err_propagation": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "A",
    "AttributeError",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_subclass_attr_err_propagation.A": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_subclass_attr_err_propagation.A.bar": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_to_panel_expanddim": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "SubclassedFrame",
    "SubclassedPanel",
    "isinstance",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_to_panel_expanddim.SubclassedFrame": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_to_panel_expanddim.SubclassedFrame._constructor_expanddim": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_subclass.TestDataFrameSubclassing.test_to_panel_expanddim.SubclassedPanel": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "pandas.Panel"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_subclass.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_subclass.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_subclass.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_subclass.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_timeseries": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.test_timeseries.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_timeseries.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_timeseries.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_timeseries.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_timeseries.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_asfreq": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "pandas.core.datetools.bmonthEnd",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_asfreq_datetimeindex": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_diff": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_diff_axis": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_diff_float_n": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_diff_mixed_dtype": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.random.randn",
    "object",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_diff_neg_n": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_diff_timedelta": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "dict",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_first_last_valid": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_pct_change": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_pct_change_shift_over_nas": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_shift": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.nan",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.concat",
    "pandas.core.datetools.BDay",
    "pandas.core.datetools.bday",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_dict_equal",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makePeriodFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_shift_bool": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "object",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_shift_categorical": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_shift_empty": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_truncate": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "ValueError",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_truncate_copy": {
  "data": {
   "lineno": 293
  },
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.TestDataFrameTimeSeriesMethods.test_tshift": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.core.datetools.bday",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makePeriodFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_timeseries.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_timeseries.assertRaisesRegexp": {
  "data": {
   "shadows": "pandas.util.testing.assertRaisesRegexp"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_timeseries.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_timeseries.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_timeseries.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_timeseries.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_timeseries.datetools": {
  "data": {
   "shadows": "pandas.core.datetools"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_timeseries.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_timeseries.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_timeseries.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_timeseries.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_timeseries.randn": {
  "data": {
   "shadows": "numpy.random.randn"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_timeseries.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.frame.test_to_csv.CParserError": {
  "data": {
   "shadows": "pandas.parser.CParserError"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.MIXED_FLOAT_DTYPES": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pandas.tests.frame.test_to_csv.MIXED_INT_DTYPES": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pandas.tests.frame.test_to_csv.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.NaT": {
  "data": {
   "shadows": "pandas.NaT"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.TestData": {
  "data": {
   "shadows": "pandas.tests.frame.common.TestData"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "pandas.tests.frame.common.TestData",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_bug": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.DataFrame.from_csv",
    "pandas.compat.StringIO",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_chunking": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_cols_reordering": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "int",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean",
    "pandas.util.testing.makeCustomDataframe"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_compression_bz2": {
  "data": {
   "lineno": 970,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.read_csv",
    "pandas.tests.frame.test_to_csv.bz2",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_compression_gzip": {
  "data": {
   "lineno": 947,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.read_csv",
    "pandas.tests.frame.test_to_csv.gzip",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_compression_value_error": {
  "data": {
   "lineno": 1015,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.tests.frame.test_to_csv.zipfile",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_compression_xz": {
  "data": {
   "lineno": 993,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.import_lzma",
    "pandas.read_csv",
    "pandas.util.testing._skip_if_no_lzma",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_date_format": {
  "data": {
   "lineno": 1028,
   "symbols_in_volume": [
    "FutureWarning",
    "int",
    "pandas.DataFrame",
    "pandas.read_csv",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_dtnat": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "dict",
    "make_dtnat_arr",
    "numpy.testing.decorators.slow",
    "pandas.DataFrame",
    "pandas.DataFrame.from_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_dtnat.make_dtnat_arr": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "int",
    "len",
    "list",
    "numpy.random.randint",
    "pandas.NaT",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_dups_cols": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.compat.lrange",
    "pandas.compat.range",
    "pandas.concat",
    "pandas.read_csv",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean",
    "pandas.util.testing.makeCustomDataframe"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_float32_nanrep": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.nan",
    "numpy.random.randn",
    "open",
    "pandas.DataFrame",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_float_format": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_from_csv1": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.DataFrame.from_csv",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_from_csv2": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.DataFrame.from_csv",
    "pandas.Index",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_from_csv3": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "int",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.lmap",
    "pandas.concat",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_from_csv4": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Timedelta",
    "pandas.compat.range",
    "pandas.read_csv",
    "pandas.to_timedelta",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_from_csv5": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "converter",
    "pandas.read_csv",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_from_csv_categorical": {
  "data": {
   "lineno": 918,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_from_csv_w_all_infs": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.isinf",
    "pandas.DataFrame.from_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_from_csv_w_some_infs": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.isinf",
    "numpy.nan",
    "numpy.random.rand",
    "pandas.DataFrame.from_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_headers": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.DataFrame.from_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_index_no_leading_comma": {
  "data": {
   "lineno": 886,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_legacy_raises_on_dupe_cols": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "FutureWarning",
    "NotImplementedError",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.ensure_clean",
    "pandas.util.testing.makeCustomDataframe"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_line_terminators": {
  "data": {
   "lineno": 898,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_mixed": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "create_cols",
    "dict",
    "numpy.bool",
    "numpy.float64",
    "numpy.int64",
    "numpy.nan",
    "numpy.object",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.concat",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_mixed.create_cols": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_moar": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "_do_test",
    "int",
    "list",
    "numpy.testing.decorators.slow",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.util.testing.makeCustomDataframe"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_moar._do_test": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "dict",
    "list",
    "map",
    "numpy.array",
    "pandas.DataFrame.from_csv",
    "pandas.MultiIndex.from_arrays",
    "pandas.Timestamp",
    "pandas.compat.lmap",
    "pandas.compat.lrange",
    "pandas.compat.range",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_moar._do_test._to_uni": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "isinstance",
    "pandas.compat.text_type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_multiindex": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "TypeError",
    "_make_frame",
    "all",
    "len",
    "numpy.arange",
    "numpy.testing.assert_equal",
    "pandas.DataFrame.from_csv",
    "pandas.MultiIndex.from_arrays",
    "pandas.compat.lrange",
    "pandas.parser.CParserError",
    "pandas.read_csv",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean",
    "pandas.util.testing.makeCustomDataframe"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_multiindex._make_frame": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_new_dupe_cols": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "_check_df",
    "int",
    "pandas.util.testing.makeCustomDataframe"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_new_dupe_cols._check_df": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Series",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_no_index": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_path_is_none": {
  "data": {
   "lineno": 938,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_quote_none": {
  "data": {
   "lineno": 875,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.tests.frame.test_to_csv.csv"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_quoting": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.read_csv",
    "pandas.tests.frame.test_to_csv.csv"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_stringio": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_unicode": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.u",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_unicode_index_col": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.compat.u",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_unicodewriter_quoting": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.tests.frame.test_to_csv.csv"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_wide_frame_formatting": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.testing.decorators.slow",
    "pandas.DataFrame",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_with_dst_transitions": {
  "data": {
   "lineno": 1096,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "pandas.DataFrame",
    "pandas.Timedelta",
    "pandas.compat.range",
    "pandas.date_range",
    "pandas.read_csv",
    "pandas.read_pickle",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_with_mix_columns": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.TestDataFrameToCSV.test_to_csv_withcommas": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.DataFrame.from_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.frame.test_to_csv.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.assertRaisesRegexp": {
  "data": {
   "shadows": "pandas.util.testing.assertRaisesRegexp"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.assert_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.bz2": {
  "data": {
   "shadows": "bz2"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.csv": {
  "data": {
   "shadows": "csv"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.ensure_clean": {
  "data": {
   "shadows": "pandas.util.testing.ensure_clean"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.lmap": {
  "data": {
   "shadows": "pandas.compat.lmap"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.mkdf": {
  "data": {
   "shadows": "pandas.util.testing.makeCustomDataframe"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.read_csv": {
  "data": {
   "shadows": "pandas.read_csv"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.slow": {
  "data": {
   "shadows": "numpy.testing.decorators.slow"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.to_datetime": {
  "data": {
   "shadows": "pandas.to_datetime"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.frame.test_to_csv.zipfile": {
  "data": {
   "shadows": "zipfile"
  },
  "type": "import"
 },
 "pandas.tests.indexes": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.indexes.common": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.indexes.common.Base": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.common.Base.setup_indices": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_argsort": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_boolean_context_compat": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "ValueError",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_boolean_context_compat.f": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_compat": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_copy_and_deepcopy": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "copy.copy",
    "copy.deepcopy",
    "func",
    "isinstance",
    "pandas.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_create_index_existing_name": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_delete_base": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "isinstance",
    "len",
    "pandas.RangeIndex",
    "pandas.compat.iteritems",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_difference_base": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "klass",
    "list",
    "numpy.array",
    "pandas.CategoricalIndex",
    "pandas.DatetimeIndex",
    "pandas.MultiIndex",
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas.TimedeltaIndex",
    "pandas.compat.iteritems",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_dtype_str": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "isinstance",
    "pandas.PeriodIndex",
    "pandas.compat.string_types",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_duplicates": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "pandas.Index",
    "pandas.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_equals_op": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "numpy.array",
    "pandas.MultiIndex",
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_fillna": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "bool",
    "isinstance",
    "len",
    "numpy.array",
    "numpy.nan",
    "pandas.Int64Index",
    "pandas.MultiIndex",
    "pandas.PeriodIndex",
    "pandas.tseries.base.DatetimeIndexOpsMixin",
    "pandas.tslib.iNaT"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_hash_error": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "TypeError",
    "hash",
    "pandas.util.testing.assertRaisesRegexp",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_hasnans_isnans": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "len",
    "numpy.array",
    "numpy.nan",
    "pandas.Int64Index",
    "pandas.MultiIndex",
    "pandas.PeriodIndex",
    "pandas.tseries.base.DatetimeIndexOpsMixin",
    "pandas.tslib.iNaT"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_insert_base": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "len",
    "pandas.compat.iteritems"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_intersection_base": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "klass",
    "list",
    "numpy.array",
    "pandas.CategoricalIndex",
    "pandas.MultiIndex",
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas.compat.iteritems",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_logical_compat": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "TypeError",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_mutability": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "TypeError",
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_ndarray_compat_properties": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_numeric_compat": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "TypeError",
    "pandas.compat.PY3",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_numpy_argsort": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.argsort",
    "pandas.CategoricalIndex",
    "pandas.RangeIndex",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_numpy_array_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_numpy_repeat": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "ValueError",
    "numpy.repeat",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_numpy_ufuncs": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "Exception",
    "func",
    "isinstance",
    "len",
    "numpy.arccos",
    "numpy.arccosh",
    "numpy.arcsin",
    "numpy.arcsinh",
    "numpy.arctan",
    "numpy.arctanh",
    "numpy.cos",
    "numpy.cosh",
    "numpy.deg2rad",
    "numpy.exp",
    "numpy.exp2",
    "numpy.expm1",
    "numpy.isfinite",
    "numpy.isinf",
    "numpy.isnan",
    "numpy.log",
    "numpy.log10",
    "numpy.log1p",
    "numpy.log2",
    "numpy.ndarray",
    "numpy.rad2deg",
    "numpy.signbit",
    "numpy.sin",
    "numpy.sinh",
    "numpy.sqrt",
    "numpy.tan",
    "numpy.tanh",
    "pandas.Float64Index",
    "pandas.Index",
    "pandas.Int64Index",
    "pandas.compat.iteritems",
    "pandas.tseries.base.DatetimeIndexOpsMixin",
    "pandas.util.testing.assertNotIsInstance",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_order": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_pickle": {
  "data": {
   "lineno": 305
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_pickle_compat_construction": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_reindex_base": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_repeat": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.Index",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_repr_max_seq_item_setting": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "pandas.option_context",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_repr_roundtrip": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "eval",
    "pandas.util.testing.assert_index_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_set_name_methods": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pandas.MultiIndex",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_setops_errorcases": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "TypeError",
    "pandas.compat.iteritems",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_shift": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_sort": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_str": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_symmetric_difference": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "FutureWarning",
    "TypeError",
    "ValueError",
    "isinstance",
    "klass",
    "list",
    "numpy.array",
    "pandas.CategoricalIndex",
    "pandas.MultiIndex",
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas.compat.iteritems",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_take": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "AttributeError",
    "isinstance",
    "pandas.DatetimeIndex",
    "pandas.PeriodIndex",
    "pandas.TimedeltaIndex",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_take_invalid_kwargs": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_union_base": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "klass",
    "list",
    "numpy.array",
    "pandas.CategoricalIndex",
    "pandas.MultiIndex",
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas.compat.iteritems",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_view": {
  "data": {
   "lineno": 259
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_wrong_number_names": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "ValueError",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.test_wrong_number_names.testit": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.Base.verify_pickle": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "pandas.tests.indexes.common.CategoricalIndex": {
  "data": {
   "shadows": "pandas.CategoricalIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.common.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.common.Float64Index": {
  "data": {
   "shadows": "pandas.Float64Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.common.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.common.Int64Index": {
  "data": {
   "shadows": "pandas.Int64Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.common.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.common.PY3": {
  "data": {
   "shadows": "pandas.compat.PY3"
  },
  "type": "import"
 },
 "pandas.tests.indexes.common.PeriodIndex": {
  "data": {
   "shadows": "pandas.PeriodIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.common.RangeIndex": {
  "data": {
   "shadows": "pandas.RangeIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.common.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.indexes.common.TimedeltaIndex": {
  "data": {
   "shadows": "pandas.TimedeltaIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.common.assertRaisesRegexp": {
  "data": {
   "shadows": "pandas.util.testing.assertRaisesRegexp"
  },
  "type": "import"
 },
 "pandas.tests.indexes.common.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.indexes.common.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.common.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.common.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.indexes.common.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.indexes.test_base.CategoricalIndex": {
  "data": {
   "shadows": "pandas.CategoricalIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.Float64Index": {
  "data": {
   "shadows": "pandas.Float64Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.Index": {
  "data": {
   "shadows": "pandas.indexes.api.Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.Int64Index": {
  "data": {
   "shadows": "pandas.Int64Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.MultiIndex": {
  "data": {
   "shadows": "pandas.indexes.api.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.PY3": {
  "data": {
   "shadows": "pandas.compat.PY3"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.PeriodIndex": {
  "data": {
   "shadows": "pandas.PeriodIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.TestIndex": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "pandas.indexes.api.Index",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.test_base.TestIndex._check_method_works": {
  "data": {
   "lineno": 872,
   "symbols_in_volume": [
    "method"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.create_index": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "list",
    "pandas.indexes.api.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.setUp": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "dict",
    "pandas.compat.lzip",
    "pandas.indexes.api.Index",
    "pandas.indexes.api.MultiIndex.from_tuples",
    "pandas.util.testing.makeCategoricalIndex",
    "pandas.util.testing.makeDateIndex",
    "pandas.util.testing.makeFloatIndex",
    "pandas.util.testing.makeIntIndex",
    "pandas.util.testing.makePeriodIndex",
    "pandas.util.testing.makeStringIndex",
    "pandas.util.testing.makeTimedeltaIndex",
    "pandas.util.testing.makeUnicodeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_add": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "RuntimeWarning",
    "list",
    "numpy.append",
    "numpy.object_",
    "pandas.indexes.api.Index",
    "pandas.util.testing.assert_contains_all",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_add_string": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": [
    "pandas.indexes.api.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_append_empty_preserve_name": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "pandas.indexes.api.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_append_multiple": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "pandas.indexes.api.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_asof": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "datetime.timedelta",
    "numpy.isnan",
    "pandas.lib.Timestamp",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_asof_datetime_partial": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "isinstance",
    "pandas.date_range",
    "pandas.indexes.api.Index",
    "pandas.lib.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_astype": {
  "data": {
   "lineno": 310
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_boolean_cmp": {
  "data": {
   "lineno": 1247,
   "symbols_in_volume": [
    "bool",
    "numpy.array",
    "pandas.indexes.api.Index",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_booleanindex": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "bool",
    "enumerate",
    "len",
    "list",
    "numpy.repeat"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_comparators": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "_check",
    "len",
    "numpy.array",
    "pandas.tests.indexes.test_base.operator",
    "pandas.tseries.index._to_m8"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_comparators._check": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "numpy.ndarray",
    "op",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_construction_list_mixed_tuples": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "pandas.indexes.api.Index",
    "pandas.indexes.api.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.indexes.api.Index",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_contains_all",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor_corner": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "TypeError",
    "pandas.indexes.api.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor_dtypes": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "bool",
    "datetime.datetime",
    "datetime.timedelta",
    "float",
    "int",
    "numpy.array",
    "numpy.timedelta64",
    "object",
    "pandas.CategoricalIndex",
    "pandas.DatetimeIndex",
    "pandas.Float64Index",
    "pandas.Int64Index",
    "pandas.TimedeltaIndex",
    "pandas.compat.numpy.np_datetime64_compat",
    "pandas.indexes.api.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor_from_index_datetimetz": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor_from_index_period": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.period_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor_from_index_timedelta": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor_from_series": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "numpy.random.rand",
    "object",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.Series",
    "pandas.indexes.api.Index",
    "pandas.infer_freq",
    "pandas.lib.Timestamp",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor_from_series_datetimetz": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor_from_series_period": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.Series",
    "pandas.period_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor_from_series_timedelta": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.Series",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor_ndarray_like": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "ArrayLike",
    "numpy.arange",
    "numpy.array",
    "pandas.Index",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor_ndarray_like.ArrayLike": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor_ndarray_like.ArrayLike.__array__": {
  "data": {
   "lineno": 198
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor_ndarray_like.ArrayLike.__init__": {
  "data": {
   "lineno": 195
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_constructor_simple_new": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.indexes.api.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_conversion_preserves_name": {
  "data": {
   "lineno": 1459,
   "symbols_in_volume": [
    "pandas.tests.indexes.test_base.pandas"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_copy_and_deepcopy": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "int",
    "pandas.tests.indexes.test_base.TestIndex",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_delete": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "pandas.indexes.api.Index",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_difference": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "len",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_drop": {
  "data": {
   "lineno": 1105,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pandas.compat.lrange",
    "pandas.indexes.api.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_empty_fancy": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "IndexError",
    "numpy.array",
    "numpy.bool_",
    "numpy.float_",
    "numpy.int_"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_equals": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "pandas.indexes.api.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_equals_op_multiindex": {
  "data": {
   "lineno": 1437,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "pandas.compat.StringIO",
    "pandas.indexes.api.Index",
    "pandas.indexes.api.MultiIndex.from_tuples",
    "pandas.tests.indexes.test_base.pandas",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_fancy": {
  "data": {
   "lineno": 483
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_format": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "numpy.nan",
    "pandas.compat.is_platform_windows",
    "pandas.compat.u",
    "pandas.indexes.api.Index",
    "pandas.indexes.api.Index.format",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_format_datetime_with_time": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "datetime.datetime",
    "len",
    "pandas.indexes.api.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_format_none": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": [
    "pandas.indexes.api.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_format_with_name_time_info": {
  "data": {
   "lineno": 844,
   "symbols_in_volume": [
    "datetime.timedelta",
    "pandas.indexes.api.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_get_indexer": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": [
    "pandas.indexes.api.Index",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_get_indexer_invalid": {
  "data": {
   "lineno": 908,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "pandas.indexes.api.Index",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_get_indexer_nearest": {
  "data": {
   "lineno": 918,
   "symbols_in_volume": [
    "ValueError",
    "method",
    "numpy.arange",
    "pandas.compat.zip",
    "pandas.indexes.api.Index",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_get_indexer_nearest_decreasing": {
  "data": {
   "lineno": 947,
   "symbols_in_volume": [
    "method",
    "numpy.arange",
    "pandas.compat.zip",
    "pandas.indexes.api.Index",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_get_indexer_strings": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": [
    "TypeError",
    "pandas.Index",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_get_level_values": {
  "data": {
   "lineno": 1256
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_get_loc": {
  "data": {
   "lineno": 977,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "ValueError",
    "method",
    "pandas.Index",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_get_set_value": {
  "data": {
   "lineno": 1177,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_getitem": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.tseries.index._to_m8"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_groupby": {
  "data": {
   "lineno": 1431,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.compat.range",
    "pandas.indexes.api.Index",
    "pandas.util.testing.assert_dict_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_iadd_string": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_identical": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "pandas.indexes.api.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_index_ctor_infer_periodindex": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "pandas.PeriodIndex",
    "pandas.indexes.api.Index",
    "pandas.period_range",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_indexing_doesnt_change_class": {
  "data": {
   "lineno": 1319,
   "symbols_in_volume": [
    "numpy.object_",
    "pandas.indexes.api.Index",
    "pandas.tests.indexes.test_base.pandas"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_insert": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "pandas.indexes.api.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_intersection": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "pandas.indexes.api.Index",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_is_": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.ndarray",
    "pandas.compat.range",
    "pandas.indexes.api.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_is_all_dates": {
  "data": {
   "lineno": 803
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_is_monotonic_incomparable": {
  "data": {
   "lineno": 1172,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "pandas.indexes.api.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_is_numeric": {
  "data": {
   "lineno": 788
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_is_object": {
  "data": {
   "lineno": 795
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_isin": {
  "data": {
   "lineno": 1186,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.bool_",
    "pandas.indexes.api.Index",
    "pandas.util.testing.assert_numpy_array_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_isin_level_kwarg": {
  "data": {
   "lineno": 1221,
   "symbols_in_volume": [
    "check_idx",
    "pandas.Float64Index",
    "pandas.indexes.api.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_isin_level_kwarg.check_idx": {
  "data": {
   "lineno": 1222,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "numpy.array",
    "numpy.nan",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_isin_nan": {
  "data": {
   "lineno": 1204,
   "symbols_in_volume": [
    "float",
    "numpy.nan",
    "pandas.Float64Index",
    "pandas.indexes.api.Index",
    "pandas.tests.indexes.test_base.pandas",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_join_self": {
  "data": {
   "lineno": 1264,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_legacy_pickle_identity": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "pandas.read_pickle",
    "pandas.tests.indexes.test_base.os",
    "pandas.util.testing.get_data_path"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_logical_compat": {
  "data": {
   "lineno": 867
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_nan_first_take_datetime": {
  "data": {
   "lineno": 1339,
   "symbols_in_volume": [
    "pandas.indexes.api.Index",
    "pandas.lib.Timestamp",
    "pandas.tests.indexes.test_base.pandas",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_nanosecond_index_access": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DatetimeIndex",
    "pandas.Series",
    "pandas.compat.numpy.np_datetime64_compat",
    "pandas.compat.range",
    "pandas.lib.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_new_axis": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "numpy.ndarray",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_outer_join_sort": {
  "data": {
   "lineno": 1326,
   "symbols_in_volume": [
    "RuntimeWarning",
    "numpy.random.permutation",
    "object",
    "pandas.indexes.api.Index",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.makeDateIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_reindex_doesnt_preserve_type_if_target_is_empty_index": {
  "data": {
   "lineno": 1415,
   "symbols_in_volume": [
    "get_reindex_type",
    "list",
    "numpy.datetime64",
    "numpy.float64",
    "numpy.int64",
    "pandas.tests.indexes.test_base.pandas"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_reindex_doesnt_preserve_type_if_target_is_empty_index.get_reindex_type": {
  "data": {
   "lineno": 1419
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_reindex_preserves_name_if_target_is_list_or_ndarray": {
  "data": {
   "lineno": 1373,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.tests.indexes.test_base.pandas"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_reindex_preserves_type_if_target_is_empty_list_or_array": {
  "data": {
   "lineno": 1403,
   "symbols_in_volume": [
    "get_reindex_type",
    "list",
    "numpy.array",
    "numpy.int64",
    "numpy.object_",
    "pandas.tests.indexes.test_base.pandas"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_reindex_preserves_type_if_target_is_empty_list_or_array.get_reindex_type": {
  "data": {
   "lineno": 1407
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_slice_keep_name": {
  "data": {
   "lineno": 1260,
   "symbols_in_volume": [
    "pandas.indexes.api.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_slice_locs": {
  "data": {
   "lineno": 1008,
   "symbols_in_volume": [
    "TypeError",
    "float",
    "int",
    "len",
    "numpy.array",
    "pandas.indexes.api.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_slice_locs_dup": {
  "data": {
   "lineno": 1047,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "pandas.indexes.api.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_slice_locs_na": {
  "data": {
   "lineno": 1069,
   "symbols_in_volume": [
    "KeyError",
    "numpy.nan",
    "pandas.indexes.api.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_slice_locs_negative_step": {
  "data": {
   "lineno": 1079,
   "symbols_in_volume": [
    "check_slice",
    "list",
    "pandas.IndexSlice",
    "pandas.indexes.api.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_slice_locs_negative_step.check_slice": {
  "data": {
   "lineno": 1084,
   "symbols_in_volume": [
    "list",
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_str_attribute": {
  "data": {
   "lineno": 1275,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "method",
    "numpy.array",
    "numpy.nan",
    "numpy.ndarray",
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.indexes.api.Index",
    "pandas.indexes.api.Index.str",
    "pandas.indexes.api.MultiIndex.from_tuples",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeDateIndex",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_string_index_repr": {
  "data": {
   "lineno": 1465,
   "symbols_in_volume": [
    "coerce",
    "pandas.compat.PY3",
    "pandas.core.config.option_context",
    "pandas.tests.indexes.test_base.pandas",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_summary": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": [
    "pandas.indexes.api.Index",
    "pandas.indexes.api.Index.summary"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_symmetric_difference": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.indexes.api.Index",
    "pandas.indexes.api.MultiIndex.from_tuples",
    "pandas.isnull",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_tab_completion": {
  "data": {
   "lineno": 1311,
   "symbols_in_volume": [
    "dir",
    "list",
    "pandas.compat.range",
    "pandas.indexes.api.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_take_fill_value": {
  "data": {
   "lineno": 1345,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "list",
    "numpy.array",
    "numpy.nan",
    "pandas.tests.indexes.test_base.pandas",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_tuple_union_bug": {
  "data": {
   "lineno": 1146,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "pandas.tests.indexes.test_base.pandas"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_union": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "klass",
    "list",
    "numpy.array",
    "pandas.Series",
    "pandas.indexes.api.Index",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TestIndex.test_view_with_args": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.TimedeltaIndex": {
  "data": {
   "shadows": "pandas.TimedeltaIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.Timestamp": {
  "data": {
   "shadows": "pandas.lib.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base._get_combined_index": {
  "data": {
   "shadows": "pandas.core.index._get_combined_index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base._to_m8": {
  "data": {
   "shadows": "pandas.tseries.index._to_m8"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.cf": {
  "data": {
   "shadows": "pandas.core.config"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.is_platform_windows": {
  "data": {
   "shadows": "pandas.compat.is_platform_windows"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.lzip": {
  "data": {
   "shadows": "pandas.compat.lzip"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.np_datetime64_compat": {
  "data": {
   "shadows": "pandas.compat.numpy.np_datetime64_compat"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.pandas": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.period_range": {
  "data": {
   "shadows": "pandas.period_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.test_get_combined_index": {
  "data": {
   "lineno": 1619,
   "symbols_in_volume": [
    "pandas.core.index._get_combined_index",
    "pandas.indexes.api.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_base.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_base.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_category": {
  "data": {
   "symbols_in_volume": [
    "pandas.compat.PY3"
   ]
  },
  "type": "module"
 },
 "pandas.tests.indexes.test_category.Categorical": {
  "data": {
   "shadows": "pandas.Categorical"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_category.CategoricalIndex": {
  "data": {
   "shadows": "pandas.indexes.api.CategoricalIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_category.Index": {
  "data": {
   "shadows": "pandas.indexes.api.Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_category.PY3": {
  "data": {
   "shadows": "pandas.compat.PY3"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "pandas.indexes.api.CategoricalIndex",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.create_index": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "list",
    "pandas.indexes.api.CategoricalIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.setUp": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "dict",
    "pandas.util.testing.makeCategoricalIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_append": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "pandas.indexes.api.CategoricalIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_astype": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "pandas.indexes.api.CategoricalIndex",
    "pandas.indexes.api.Index",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_construction": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "pandas.Categorical",
    "pandas.indexes.api.CategoricalIndex",
    "pandas.indexes.api.Index",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_construction_with_dtype": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "pandas.compat.range",
    "pandas.indexes.api.CategoricalIndex",
    "pandas.indexes.api.Index",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_contains": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "FutureWarning",
    "list",
    "numpy.nan",
    "pandas.indexes.api.CategoricalIndex",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_delete": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "list",
    "pandas.indexes.api.CategoricalIndex",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_disallow_set_ops": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "TypeError",
    "pandas.Categorical",
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_duplicates": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "pandas.indexes.api.CategoricalIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_equals": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "FutureWarning",
    "TypeError",
    "ValueError",
    "list",
    "numpy.nan",
    "object",
    "pandas.Categorical",
    "pandas.indexes.api.CategoricalIndex",
    "pandas.indexes.api.Index",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_fillna_categorical": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.indexes.api.CategoricalIndex",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_get_indexer": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "NotImplementedError",
    "list",
    "pandas.indexes.api.CategoricalIndex",
    "pandas.indexes.api.Index",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_get_loc": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "KeyError",
    "list",
    "numpy.array",
    "pandas.indexes.api.CategoricalIndex",
    "pandas.indexes.api.Index",
    "pandas.util.testing.assertRaises",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_identical": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "pandas.indexes.api.CategoricalIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_insert": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "pandas.indexes.api.CategoricalIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_isin": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.nan",
    "pandas.indexes.api.CategoricalIndex",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_map": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "pandas.util.testing.assert_categorical_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_map.f": {
  "data": {
   "lineno": 224
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_method_delegation": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.nan",
    "pandas.indexes.api.CategoricalIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_min_max": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_reindex_base": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_reindex_dtype": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Categorical",
    "pandas.indexes.api.CategoricalIndex",
    "pandas.indexes.api.Index",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_reindexing": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.random.randint",
    "pandas.indexes.api.Index",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_repr_roundtrip": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "eval",
    "numpy.random.randint",
    "pandas.compat.PY3",
    "pandas.compat.text_type",
    "pandas.indexes.api.CategoricalIndex",
    "pandas.util.testing.assert_index_equal",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_string_categorical_index_repr": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "list",
    "pandas.CategoricalIndex",
    "pandas.compat.PY3",
    "pandas.core.config.option_context",
    "pandas.tests.indexes.test_category.unicode",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_take_fill_value": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "list",
    "numpy.array",
    "numpy.nan",
    "pandas.CategoricalIndex",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_categorical_equal",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_take_fill_value_datetime": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "numpy.array",
    "pandas.CategoricalIndex",
    "pandas.DatetimeIndex",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.TestCategoricalIndex.test_take_invalid_kwargs": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pandas.CategoricalIndex",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_category.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_category.cf": {
  "data": {
   "shadows": "pandas.core.config"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_category.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_category.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_category.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_category.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_category.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_category.unicode": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pandas.tests.indexes.test_datetimelike": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.indexes.test_datetimelike.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_datetimelike.DatetimeLike": {
  "data": {
   "lineno": 19
  },
  "type": "class"
 },
 "pandas.tests.indexes.test_datetimelike.DatetimeLike.test_shift_identity": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_datetimelike.DatetimeLike.test_str": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_datetimelike.DatetimeLike.test_view": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "pandas.tests.indexes.test_datetimelike.DatetimeLike",
    "pandas.util.testing.assert_index_equal",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_datetimelike.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_datetimelike.PeriodIndex": {
  "data": {
   "shadows": "pandas.PeriodIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_datetimelike.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_datetimelike.TestDatetimeIndex": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.tests.indexes.test_datetimelike.DatetimeLike",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.test_datetimelike.TestDatetimeIndex.create_index": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_datetimelike.TestDatetimeIndex.setUp": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "dict",
    "pandas.util.testing.makeDateIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_datetimelike.TestDatetimeIndex.test_construction_dti_with_mixed_timezones": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "pandas.DatetimeIndex",
    "pandas.lib.Timestamp",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_datetimelike.TestDatetimeIndex.test_construction_index_with_mixed_timezones": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DatetimeIndex",
    "pandas.Index",
    "pandas.lib.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_datetimelike.TestDatetimeIndex.test_construction_index_with_mixed_timezones_with_NaT": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DatetimeIndex",
    "pandas.Index",
    "pandas.NaT",
    "pandas.lib.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_datetimelike.TestDatetimeIndex.test_construction_with_alt": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DatetimeIndex",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_datetimelike.TestDatetimeIndex.test_fillna_datetime64": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "object",
    "pandas.DatetimeIndex",
    "pandas.Index",
    "pandas.NaT",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_datetimelike.TestDatetimeIndex.test_get_indexer": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Timedelta",
    "pandas.date_range",
    "pandas.to_timedelta",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_datetimelike.TestDatetimeIndex.test_get_loc": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "KeyError",
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "datetime.time",
    "datetime.timedelta",
    "numpy.timedelta64",
    "pandas.Timedelta",
    "pandas.date_range",
    "pandas.to_datetime",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_numpy_array_equal",
    "slice",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_datetimelike.TestDatetimeIndex.test_intersection": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "klass",
    "list",
    "numpy.array",
    "object",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_datetimelike.TestDatetimeIndex.test_nat": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DatetimeIndex",
    "pandas.NaT"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_datetimelike.TestDatetimeIndex.test_pickle_compat_construction": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_datetimelike.TestDatetimeIndex.test_reindex_preserves_tz_if_target_is_empty_list_or_array": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.date_range",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_datetimelike.TestDatetimeIndex.test_roundtrip_pickle_with_tz": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_datetimelike.TestDatetimeIndex.test_shift": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "pandas.DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_datetimelike.TestDatetimeIndex.test_time_loc": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "datetime.time",
    "numpy.arange",
    "numpy.array",
    "numpy.int64",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.date_range",
    "pandas.index._SIZE_CUTOFF",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_datetimelike.TestDatetimeIndex.test_time_overflow_for_32bit_machines": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "len",
    "numpy.int_",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_datetimelike.TestDatetimeIndex.test_ufunc_coercions": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "numpy.add",
    "numpy.array",
    "numpy.subtract",
    "numpy.timedelta64",
    "pandas.DatetimeIndex",
    "pandas.date_range",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_datetimelike.TestDatetimeIndex.test_union": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "klass",
    "list",
    "numpy.array",
    "pandas.Series",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_datetimelike.TestPeriodIndex": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "pandas.PeriodIndex",
    "pandas.tests.indexes.test_datetimelike.DatetimeLike",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.test_datetimelike.TestPeriodIndex.create_index": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "pandas.period_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_datetimelike.TestPeriodIndex.setUp": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "dict",
    "pandas.util.testing.makePeriodIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_datetimelike.TestPeriodIndex.test_fillna_period": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "ValueError",
    "object",
    "pandas.Index",
    "pandas.NaT",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_datetimelike.TestPeriodIndex.test_get_indexer": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "ValueError",
    "pandas.PeriodIndex",
    "pandas.period_range",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_datetimelike.TestPeriodIndex.test_get_loc": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "datetime.timedelta",
    "numpy.timedelta64",
    "pandas.Timedelta",
    "pandas.period_range",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assertRaisesRegexp",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_datetimelike.TestPeriodIndex.test_no_millisecond_field": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "AttributeError",
    "pandas.DatetimeIndex",
    "pandas.DatetimeIndex.millisecond"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_datetimelike.TestPeriodIndex.test_period_index_indexer": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.np.random.randn",
    "pandas.period_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_datetimelike.TestPeriodIndex.test_pickle_compat_construction": {
  "data": {
   "lineno": 598
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_datetimelike.TestPeriodIndex.test_repeat": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "pandas.PeriodIndex",
    "pandas.period_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_datetimelike.TestPeriodIndex.test_shift": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "pandas.PeriodIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_datetimelike.TestTimedeltaIndex": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "pandas.TimedeltaIndex",
    "pandas.tests.indexes.test_datetimelike.DatetimeLike",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.test_datetimelike.TestTimedeltaIndex.create_index": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "pandas.offsets.Hour",
    "pandas.to_timedelta",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_datetimelike.TestTimedeltaIndex.setUp": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "dict",
    "pandas.util.testing.makeTimedeltaIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_datetimelike.TestTimedeltaIndex.test_fillna_timedelta": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": [
    "object",
    "pandas.Index",
    "pandas.NaT",
    "pandas.Timedelta",
    "pandas.TimedeltaIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_datetimelike.TestTimedeltaIndex.test_get_indexer": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "pandas.Timedelta",
    "pandas.to_timedelta",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_datetimelike.TestTimedeltaIndex.test_get_loc": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "ValueError",
    "datetime.timedelta",
    "numpy.timedelta64",
    "pandas.Timedelta",
    "pandas.to_timedelta",
    "pandas.util.testing.assertRaisesRegexp",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_datetimelike.TestTimedeltaIndex.test_numeric_compat": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.arange",
    "numpy.array",
    "pandas.Series",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_datetimelike.TestTimedeltaIndex.test_pickle_compat_construction": {
  "data": {
   "lineno": 799
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_datetimelike.TestTimedeltaIndex.test_shift": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "pandas.TimedeltaIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_datetimelike.TestTimedeltaIndex.test_ufunc_coercions": {
  "data": {
   "lineno": 802,
   "symbols_in_volume": [
    "abs",
    "numpy.absolute",
    "numpy.divide",
    "numpy.multiply",
    "numpy.negative",
    "pandas.TimedeltaIndex",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_datetimelike.TimedeltaIndex": {
  "data": {
   "shadows": "pandas.TimedeltaIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_datetimelike.Timestamp": {
  "data": {
   "shadows": "pandas.lib.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_datetimelike._SIZE_CUTOFF": {
  "data": {
   "shadows": "pandas.index._SIZE_CUTOFF"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_datetimelike.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_datetimelike.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_datetimelike.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_datetimelike.period_range": {
  "data": {
   "shadows": "pandas.period_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_datetimelike.time": {
  "data": {
   "shadows": "datetime.time"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_datetimelike.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_datetimelike.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.indexes.test_multi.CategoricalIndex": {
  "data": {
   "shadows": "pandas.CategoricalIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.InvalidIndexError": {
  "data": {
   "shadows": "pandas.indexes.base.InvalidIndexError"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.PY3": {
  "data": {
   "shadows": "pandas.compat.PY3"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.PerformanceWarning": {
  "data": {
   "shadows": "pandas.core.common.PerformanceWarning"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "pandas.MultiIndex",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.assert_multiindex_copied": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_copy"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.check_level_names": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.create_index": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.setUp": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "dict",
    "numpy.array",
    "pandas.Index",
    "pandas.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.take_invalid_kwargs": {
  "data": {
   "lineno": 1623,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pandas.MultiIndex.from_product",
    "pandas.Timestamp",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_append": {
  "data": {
   "lineno": 662
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_argsort": {
  "data": {
   "lineno": 1354,
   "symbols_in_volume": [
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_astype": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "numpy.dtype",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_copy"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_boolean_context_compat2": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ValueError",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_boolean_context_compat2.f": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_bounds": {
  "data": {
   "lineno": 1133
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_bytestring_with_unicode": {
  "data": {
   "lineno": 1947,
   "symbols_in_volume": [
    "bytes",
    "pandas.DataFrame",
    "pandas.compat.PY3",
    "pandas.compat.u",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_changing_names": {
  "data": {
   "lineno": 534
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_consistency": {
  "data": {
   "lineno": 969,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.repeat",
    "pandas.MultiIndex",
    "pandas.compat.lrange"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_constructor_mismatched_label_levels": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "pandas.MultiIndex",
    "pandas.tests.indexes.test_multi.re",
    "pandas.tests.indexes.test_multi.warnings",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_constructor_no_levels": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pandas.MultiIndex",
    "pandas.tests.indexes.test_multi.re",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_constructor_single_level": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_contains": {
  "data": {
   "lineno": 796
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_copy": {
  "data": {
   "lineno": 516
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_copy_in_constructor": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_difference": {
  "data": {
   "lineno": 1278,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "pandas.MultiIndex",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_produces_warning",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_dims": {
  "data": {
   "lineno": 1408
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_drop": {
  "data": {
   "lineno": 1411,
   "symbols_in_volume": [
    "KeyError",
    "pandas.MultiIndex.from_tuples"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_drop_not_lexsorted": {
  "data": {
   "lineno": 1489,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.core.common.PerformanceWarning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_droplevel_multiple": {
  "data": {
   "lineno": 1479,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.compat.lrange"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_droplevel_with_names": {
  "data": {
   "lineno": 1463,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.compat.lrange"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_duplicate_meta_data": {
  "data": {
   "lineno": 1862,
   "symbols_in_volume": [
    "pandas.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_duplicate_names": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "KeyError",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_duplicates": {
  "data": {
   "lineno": 1760,
   "symbols_in_volume": [
    "check",
    "itertools.product",
    "len",
    "list",
    "numpy.arange",
    "numpy.nan",
    "numpy.random.choice",
    "numpy.random.permutation",
    "numpy.zeros",
    "pandas.MultiIndex",
    "pandas.MultiIndex.from_arrays",
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.range",
    "pandas.compat.u",
    "pandas.lib.duplicated",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.makeStringIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_duplicates.check": {
  "data": {
   "lineno": 1792,
   "symbols_in_volume": [
    "list",
    "map",
    "numpy.arange",
    "numpy.array",
    "numpy.insert",
    "numpy.tile",
    "pandas.MultiIndex",
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_equals": {
  "data": {
   "lineno": 1136,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.compat.lrange"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_equals_operator": {
  "data": {
   "lineno": 2094
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_format": {
  "data": {
   "lineno": 1070
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_format_integer_names": {
  "data": {
   "lineno": 1074,
   "symbols_in_volume": [
    "pandas.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_format_sparse_config": {
  "data": {
   "lineno": 1087,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.set_option",
    "pandas.tests.indexes.test_multi.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_format_sparse_display": {
  "data": {
   "lineno": 1079,
   "symbols_in_volume": [
    "pandas.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_from_arrays": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "list",
    "numpy.asarray",
    "pandas.Index",
    "pandas.MultiIndex.from_arrays",
    "pandas.NaT",
    "pandas.lib.Timestamp",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_from_arrays_index_series_datetimetz": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_arrays",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_from_arrays_index_series_period": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_arrays",
    "pandas.Series",
    "pandas.period_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_from_arrays_index_series_timedelta": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_arrays",
    "pandas.Series",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_from_product": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_product",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_from_product_datetimeindex": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_product",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.lib.list_to_object_array",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_from_tuples": {
  "data": {
   "lineno": 1347,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_from_tuples_index_values": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_tuples"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_get_indexer": {
  "data": {
   "lineno": 1013,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.compat.lrange",
    "pandas.indexes.base.InvalidIndexError",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_get_indexer_nearest": {
  "data": {
   "lineno": 1063,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_get_level_number_integer": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_get_level_values": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.CategoricalIndex",
    "pandas.MultiIndex",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_get_level_values_na": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.nan",
    "object",
    "pandas.DatetimeIndex",
    "pandas.MultiIndex.from_arrays",
    "pandas.NaT",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_get_loc": {
  "data": {
   "lineno": 829,
   "symbols_in_volume": [
    "KeyError",
    "NotImplementedError",
    "numpy.array",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.compat.lrange",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_get_loc_duplicates": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "pandas.Index",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_get_loc_level": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "KeyError",
    "numpy.array",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.compat.lrange",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_getitem": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_getitem_group_select": {
  "data": {
   "lineno": 824,
   "symbols_in_volume": [
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_groupby": {
  "data": {
   "lineno": 2070,
   "symbols_in_volume": [
    "dict",
    "numpy.array",
    "pandas.util.testing.assert_dict_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_identical": {
  "data": {
   "lineno": 1176,
   "symbols_in_volume": [
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_index_name_retained": {
  "data": {
   "lineno": 2081,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_inplace_mutation_resets_values": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "numpy.empty",
    "object",
    "pandas.MultiIndex",
    "pandas.compat.long",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_insert": {
  "data": {
   "lineno": 1511,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.linspace",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_intersection": {
  "data": {
   "lineno": 1255,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_tuples",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_is_": {
  "data": {
   "lineno": 1194,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.lrange",
    "pandas.compat.lzip",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_is_all_dates": {
  "data": {
   "lineno": 801
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_is_numeric": {
  "data": {
   "lineno": 804
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_isin": {
  "data": {
   "lineno": 1978,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.bool_",
    "pandas.MultiIndex.from_arrays",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_isin_level_kwarg": {
  "data": {
   "lineno": 2000,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "numpy.arange",
    "numpy.array",
    "pandas.MultiIndex.from_arrays",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_isin_nan": {
  "data": {
   "lineno": 1993,
   "symbols_in_volume": [
    "float",
    "numpy.nan",
    "pandas.MultiIndex.from_arrays",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_isnull_behavior": {
  "data": {
   "lineno": 1961,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.isnull",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_iter": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_join_level": {
  "data": {
   "lineno": 1641,
   "symbols_in_volume": [
    "TypeError",
    "_check_all",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_join_level._check_all": {
  "data": {
   "lineno": 1667,
   "symbols_in_volume": [
    "_check_how"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_join_level._check_how": {
  "data": {
   "lineno": 1642,
   "symbols_in_volume": [
    "bool",
    "numpy.array",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_join_multi": {
  "data": {
   "lineno": 1692,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "pandas.Index",
    "pandas.MultiIndex.from_product"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_join_self": {
  "data": {
   "lineno": 1685
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_labels_dtypes": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_product",
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_large_multiindex_error": {
  "data": {
   "lineno": 2098,
   "symbols_in_volume": [
    "KeyError",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.compat.range",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_legacy_pickle": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.PY3",
    "pandas.read_pickle",
    "pandas.tests.indexes.test_multi.nose",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.get_data_path"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_legacy_v2_unpickle": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.MultiIndex.from_tuples",
    "pandas.read_pickle",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.get_data_path"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_level_setting_resets_attributes": {
  "data": {
   "lineno": 1968,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_arrays"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_metadata_immutable": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "TypeError",
    "pandas.tests.indexes.test_multi.re",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_names": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "pandas.MultiIndex",
    "pandas.util.testing.assertRaisesRegexp",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_nlevels": {
  "data": {
   "lineno": 732
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_numpy_repeat": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.repeat",
    "pandas.MultiIndex.from_product",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_partial_string_timestamp_multiindex": {
  "data": {
   "lineno": 2115,
   "symbols_in_volume": [
    "KeyError",
    "pandas.DataFrame",
    "pandas.IndexSlice",
    "pandas.MultiIndex.from_product",
    "pandas.compat.range",
    "pandas.date_range",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_rangeindex_fallback_coercion_bug": {
  "data": {
   "lineno": 2197,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.tile",
    "pandas.DataFrame",
    "pandas.Int64Index",
    "pandas.MultiIndex.from_product",
    "pandas.compat.range",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_reference_duplicate_name": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_tuples"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_reindex": {
  "data": {
   "lineno": 1726,
   "symbols_in_volume": [
    "list",
    "pandas.MultiIndex",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_reindex_level": {
  "data": {
   "lineno": 1736,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "pandas.Index",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_reindex_lvl_preserves_names_when_target_is_list_or_array": {
  "data": {
   "lineno": 2055,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_product"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_reindex_lvl_preserves_type_if_target_is_empty_list_or_array": {
  "data": {
   "lineno": 2062,
   "symbols_in_volume": [
    "numpy.int64",
    "numpy.object_",
    "pandas.MultiIndex.from_product"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_reindex_preserves_names_when_target_is_list_or_ndarray": {
  "data": {
   "lineno": 2027,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.MultiIndex.from_product"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_reorder_levels": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "IndexError",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_repeat": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.MultiIndex.from_product",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_repr_roundtrip": {
  "data": {
   "lineno": 1885,
   "symbols_in_volume": [
    "eval",
    "list",
    "pandas.MultiIndex.from_product",
    "pandas.compat.PY3",
    "pandas.compat.range",
    "pandas.compat.text_type",
    "pandas.util.testing.assert_index_equal",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_repr_with_unicode_data": {
  "data": {
   "lineno": 1878,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.u",
    "pandas.core.config.option_context",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_roundtrip_pickle_with_tz": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_product",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_set_labels": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "assert_matching"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_set_labels.assert_matching": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "len",
    "numpy.asarray",
    "pandas.util.testing.assert_almost_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_set_levels": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "assert_matching"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_set_levels.assert_matching": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "len",
    "numpy.asarray",
    "pandas.util.testing.assert_almost_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_set_levels_labels_names_bad_input": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_set_name_methods": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "ValueError",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_set_value_keeps_names": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_shallow_copy": {
  "data": {
   "lineno": 521
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_slice_keep_name": {
  "data": {
   "lineno": 1956,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_tuples"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_slice_locs": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": [
    "datetime.timedelta",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.makeTimeDataFrame",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_slice_locs_not_contained": {
  "data": {
   "lineno": 944,
   "symbols_in_volume": [
    "len",
    "pandas.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_slice_locs_not_sorted": {
  "data": {
   "lineno": 915,
   "symbols_in_volume": [
    "KeyError",
    "numpy.array",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.compat.lrange",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_slice_locs_partial": {
  "data": {
   "lineno": 929,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_slice_locs_with_type_mismatch": {
  "data": {
   "lineno": 898,
   "symbols_in_volume": [
    "TypeError",
    "datetime.timedelta",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.makeCustomDataframe",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_sortlevel": {
  "data": {
   "lineno": 1359,
   "symbols_in_volume": [
    "list",
    "pandas.MultiIndex.from_tuples",
    "pandas.tests.indexes.test_multi.random",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_sortlevel_deterministic": {
  "data": {
   "lineno": 1387,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_tuples",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_sortlevel_not_sort_remaining": {
  "data": {
   "lineno": 1382,
   "symbols_in_volume": [
    "list",
    "pandas.MultiIndex.from_tuples"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_str": {
  "data": {
   "lineno": 1934
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_take_fill_value": {
  "data": {
   "lineno": 1583,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "numpy.array",
    "numpy.nan",
    "pandas.MultiIndex.from_product",
    "pandas.MultiIndex.from_tuples",
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_take_preserve_name": {
  "data": {
   "lineno": 1579
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_to_hierarchical": {
  "data": {
   "lineno": 1101,
   "symbols_in_volume": [
    "pandas.MultiIndex",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_tolist": {
  "data": {
   "lineno": 1873,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_truncate": {
  "data": {
   "lineno": 989,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.array",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.compat.lrange"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_unicode_string_with_unicode": {
  "data": {
   "lineno": 1938,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.PY3",
    "pandas.compat.text_type",
    "pandas.compat.u",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_union": {
  "data": {
   "lineno": 1221,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_tuples",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_values_boxed": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_tuples",
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas.lib.list_to_object_array",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.TestMultiIndex.test_view": {
  "data": {
   "lineno": 526
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_multi.Timestamp": {
  "data": {
   "shadows": "pandas.lib.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.assertRaises": {
  "data": {
   "shadows": "pandas.util.testing.assertRaises"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.assertRaisesRegexp": {
  "data": {
   "shadows": "pandas.util.testing.assertRaisesRegexp"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.assert_copy": {
  "data": {
   "shadows": "pandas.util.testing.assert_copy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.long": {
  "data": {
   "shadows": "pandas.compat.long"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.lzip": {
  "data": {
   "shadows": "pandas.compat.lzip"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_multi.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_numeric": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.indexes.test_numeric.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_numeric.Float64Index": {
  "data": {
   "shadows": "pandas.Float64Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_numeric.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_numeric.Int64Index": {
  "data": {
   "shadows": "pandas.Int64Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_numeric.Numeric": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "pandas.tests.indexes.test_numeric.Numeric.test_explicit_conversions": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.zeros",
    "pandas.Float64Index",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.Numeric.test_index_groupby": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.arange",
    "numpy.array",
    "numpy.nan",
    "pandas.Index",
    "pandas.NaT",
    "pandas.compat.range",
    "pandas.date_range",
    "pandas.lib.Timestamp",
    "pandas.tslib.datetime_to_datetime64"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.Numeric.test_modulo": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.Numeric.test_numeric_compat": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "numpy.arange",
    "numpy.array",
    "pandas.Float64Index",
    "pandas.Index",
    "pandas.RangeIndex",
    "pandas.Series",
    "pandas.compat.PY3",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.Numeric.test_ufunc_compat": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.sin",
    "pandas.Float64Index",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.PY3": {
  "data": {
   "shadows": "pandas.compat.PY3"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_numeric.RangeIndex": {
  "data": {
   "shadows": "pandas.RangeIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_numeric.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "pandas.Float64Index",
    "pandas.tests.indexes.test_numeric.Numeric",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.check_coerce": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "pandas.Float64Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.check_is_index": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "pandas.Float64Index",
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.create_index": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Float64Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.setUp": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "dict",
    "numpy.arange",
    "pandas.Float64Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_astype": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "TypeError",
    "object",
    "pandas.Float64Index",
    "pandas.Index",
    "pandas.Int64Index",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_astype_from_object": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "float",
    "numpy.nan",
    "pandas.Float64Index",
    "pandas.Index",
    "pandas.util.testing.assert_equal",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_constructor": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.nan",
    "pandas.Float64Index",
    "pandas.Index",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_constructor_coerce": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "object",
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_constructor_explicit": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "numpy.arange",
    "object",
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_constructor_invalid": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "TypeError",
    "pandas.Float64Index",
    "pandas.lib.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_contains_nans": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Float64Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_contains_not_nans": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Float64Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_doesnt_contain_all_the_things": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Float64Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_equals": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Float64Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_fillna_float64": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "float",
    "numpy.nan",
    "pandas.Float64Index",
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_get_indexer": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "pandas.Float64Index",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_get_loc": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "pandas.Float64Index",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_get_loc_na": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "KeyError",
    "isinstance",
    "numpy.nan",
    "pandas.Float64Index",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_nan_multiple_containment": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "numpy.pi",
    "pandas.Float64Index",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_repr_roundtrip": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "eval",
    "pandas.util.testing.assert_index_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestFloat64Index.test_take_fill_value": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "numpy.array",
    "numpy.nan",
    "pandas.Float64Index",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "pandas.Int64Index",
    "pandas.tests.indexes.test_numeric.Numeric",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.create_index": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Int64Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.setUp": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "dict",
    "numpy.arange",
    "pandas.Int64Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_bytestring_with_unicode": {
  "data": {
   "lineno": 873,
   "symbols_in_volume": [
    "bytes",
    "pandas.Index",
    "pandas.compat.PY3",
    "pandas.compat.lrange",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_cant_or_shouldnt_cast": {
  "data": {
   "lineno": 795,
   "symbols_in_volume": [
    "TypeError",
    "pandas.Int64Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_coerce_list": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "object",
    "pandas.Index",
    "pandas.Int64Index",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_constructor": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "TypeError",
    "cls",
    "iter",
    "numpy.array",
    "numpy.int64",
    "pandas.Index",
    "pandas.Int64Index",
    "pandas.Series",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_constructor_corner": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.int64",
    "object",
    "pandas.Int64Index",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_copy": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "pandas.Int64Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_dtype": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_equals": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "object",
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_get_indexer": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "pandas.Int64Index",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_get_indexer_backfill": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "pandas.Int64Index",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_get_indexer_pad": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "pandas.Int64Index",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_identical": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "object",
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_int_name_format": {
  "data": {
   "lineno": 843,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.compat.lrange",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_intersect_str_dates": {
  "data": {
   "lineno": 773,
   "symbols_in_volume": [
    "datetime.datetime",
    "len",
    "object",
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_intersection": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.intersect1d",
    "numpy.sort",
    "pandas.Index",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_is_monotonic": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "pandas.Int64Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_is_monotonic_na": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Index",
    "pandas.to_datetime",
    "pandas.to_timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_join_inner": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Int64Index",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_join_left": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "pandas.Index",
    "pandas.Int64Index",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_join_non_int_index": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "object",
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_join_non_unique": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "pandas.Index",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_join_outer": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "pandas.Int64Index",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_join_right": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "pandas.Index",
    "pandas.Int64Index",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_join_self": {
  "data": {
   "lineno": 756
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_logical_compat": {
  "data": {
   "lineno": 528
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_prevent_casting": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "numpy.object_"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_print_unicode_columns": {
  "data": {
   "lineno": 850,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.u",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_repr_roundtrip": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "eval",
    "pandas.util.testing.assert_index_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_repr_summary": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.Index",
    "pandas.core.config.option_context",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_slice_keep_name": {
  "data": {
   "lineno": 880,
   "symbols_in_volume": [
    "pandas.Int64Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_take_fill_value": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "numpy.array",
    "pandas.Int64Index",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_take_preserve_name": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "pandas.Int64Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_too_many_names": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "ValueError",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_too_many_names.testit": {
  "data": {
   "lineno": 415
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_ufunc_coercions": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.divide",
    "numpy.sqrt",
    "pandas.Float64Index",
    "pandas.Int64Index",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_unicode_string_with_unicode": {
  "data": {
   "lineno": 865,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.compat.PY3",
    "pandas.compat.lrange",
    "pandas.compat.text_type",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_union_noncomparable": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "datetime.timedelta",
    "numpy.concatenate",
    "object",
    "pandas.Index",
    "pandas.compat.range",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_view": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "pandas.Int64Index",
    "pandas.tests.indexes.test_numeric.TestInt64Index",
    "pandas.util.testing.assert_index_equal",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.TestInt64Index.test_view_Index": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_numeric.Timestamp": {
  "data": {
   "shadows": "pandas.lib.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_numeric.assertRaisesRegexp": {
  "data": {
   "shadows": "pandas.util.testing.assertRaisesRegexp"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_numeric.cf": {
  "data": {
   "shadows": "pandas.core.config"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_numeric.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_numeric.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_numeric.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_numeric.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_numeric.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_numeric.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_numeric.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_numeric.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_numeric.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_numeric.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_range": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.indexes.test_range.Float64Index": {
  "data": {
   "shadows": "pandas.Float64Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_range.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_range.Int64Index": {
  "data": {
   "shadows": "pandas.Int64Index"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_range.PY3": {
  "data": {
   "shadows": "pandas.compat.PY3"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_range.RangeIndex": {
  "data": {
   "shadows": "pandas.RangeIndex"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_range.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "pandas.RangeIndex",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.create_index": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "pandas.RangeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.setUp": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "dict",
    "pandas.RangeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_binops": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "itertools.combinations",
    "op",
    "pandas.Int64Index",
    "pandas.RangeIndex",
    "pandas.tests.indexes.test_range.operator",
    "pandas.util.testing.assert_index_equal",
    "pow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_cant_or_shouldnt_cast": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "TypeError",
    "pandas.RangeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_constructor": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "TypeError",
    "datetime.datetime",
    "numpy.arange",
    "numpy.array",
    "numpy.empty",
    "numpy.int64",
    "pandas.Index",
    "pandas.RangeIndex",
    "pandas.Series",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_constructor_corner": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.int64",
    "object",
    "pandas.RangeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_constructor_name": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.RangeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_constructor_range": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "TypeError",
    "pandas.Index",
    "pandas.RangeIndex",
    "pandas.RangeIndex.from_range",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_constructor_same": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "TypeError",
    "pandas.RangeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_copy": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "pandas.RangeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_delete": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "int",
    "len",
    "pandas.RangeIndex",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_dtype": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_duplicates": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_equals": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "pandas.RangeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_explicit_conversions": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.zeros",
    "pandas.Float64Index",
    "pandas.RangeIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_extended_gcd": {
  "data": {
   "lineno": 729
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_get_indexer": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.RangeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_get_indexer_backfill": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.RangeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_get_indexer_pad": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.RangeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_identical": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "isinstance",
    "object",
    "pandas.Index",
    "pandas.RangeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_insert": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "pandas.RangeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_intersect_str_dates": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "datetime.datetime",
    "len",
    "object",
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_intersection": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.asarray",
    "numpy.intersect1d",
    "numpy.sort",
    "pandas.Index",
    "pandas.RangeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_is_monotonic": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "pandas.RangeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_join_inner": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "pandas.Int64Index",
    "pandas.RangeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_join_left": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.int64",
    "pandas.Int64Index",
    "pandas.RangeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_join_non_int_index": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "object",
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_join_non_unique": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "pandas.Index",
    "pandas.Int64Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_join_outer": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "isinstance",
    "numpy.arange",
    "numpy.array",
    "numpy.int64",
    "pandas.Int64Index",
    "pandas.RangeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_join_right": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.int64",
    "pandas.Int64Index",
    "pandas.RangeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_join_self": {
  "data": {
   "lineno": 536
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_len_specialised": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.RangeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_logical_compat": {
  "data": {
   "lineno": 326
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_max_fitting_element": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "pandas.RangeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_min_fitting_element": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "pandas.RangeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_nbytes": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "int",
    "pandas.RangeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_numeric_compat2": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.RangeIndex",
    "pandas.compat.PY3",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_pickle_compat_construction": {
  "data": {
   "lineno": 774
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_prevent_casting": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "numpy.object_"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_print_unicode_columns": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.u",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_repr": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "eval",
    "pandas.RangeIndex",
    "pandas.compat.PY3",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_repr_roundtrip": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "eval",
    "pandas.util.testing.assert_index_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_slice_keep_name": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "pandas.RangeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_slice_specialised": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_take_fill_value": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "numpy.array",
    "pandas.Int64Index",
    "pandas.RangeIndex",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_take_preserve_name": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "pandas.RangeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_too_many_names": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ValueError",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_too_many_names.testit": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_ufunc_compat": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.sin",
    "pandas.Float64Index",
    "pandas.RangeIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_union": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "I64",
    "RI",
    "pandas.Int64Index",
    "pandas.RangeIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_union_noncomparable": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "datetime.timedelta",
    "numpy.concatenate",
    "object",
    "pandas.Index",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_view": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "pandas.RangeIndex",
    "pandas.tests.indexes.test_range.TestRangeIndex",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.TestRangeIndex.test_view_Index": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.indexes.test_range.assertRaisesRegexp": {
  "data": {
   "shadows": "pandas.util.testing.assertRaisesRegexp"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_range.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_range.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_range.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_range.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_range.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_range.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_range.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_range.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.indexes.test_range.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.series": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.series.common": {
  "data": {
   "symbols_in_volume": [
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "module"
 },
 "pandas.tests.series.common.TestData": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.series.common.TestData.empty": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.common.TestData.objSeries": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "pandas.util.decorators.cache_readonly",
    "pandas.util.testing.makeObjectSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.common.TestData.series": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "pandas.util.decorators.cache_readonly",
    "pandas.util.testing.makeStringSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.common.TestData.ts": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "pandas.tests.series.common._ts",
    "pandas.util.decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.common._ts": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "pandas.tests.series.common.cache_readonly": {
  "data": {
   "shadows": "pandas.util.decorators.cache_readonly"
  },
  "type": "import"
 },
 "pandas.tests.series.common.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.series.common.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.series.test_alter_axes": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.series.test_alter_axes.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.series.test_alter_axes.MultiIndex": {
  "data": {
   "shadows": "pandas.core.index.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.series.test_alter_axes.RangeIndex": {
  "data": {
   "shadows": "pandas.core.index.RangeIndex"
  },
  "type": "import"
 },
 "pandas.tests.series.test_alter_axes.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.series.test_alter_axes.TestSeriesAlterAxes": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.series.test_alter_axes.TestSeriesAlterAxes.test_rename": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "dict",
    "numpy.arange",
    "pandas.Index",
    "pandas.Series",
    "pandas.compat.zip",
    "pandas.util.testing.assert_series_equal",
    "renamer",
    "renamer.index.name",
    "renamer.rename"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_alter_axes.TestSeriesAlterAxes.test_rename_by_series": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing.assert_series_equal",
    "renamer"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_alter_axes.TestSeriesAlterAxes.test_rename_inplace": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "renamer"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_alter_axes.TestSeriesAlterAxes.test_rename_set_name": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "datetime.datetime",
    "list",
    "pandas.Series",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_alter_axes.TestSeriesAlterAxes.test_rename_set_name_inplace": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "datetime.datetime",
    "list",
    "numpy.array",
    "pandas.Series",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_alter_axes.TestSeriesAlterAxes.test_reorder_levels": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.core.index.MultiIndex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_alter_axes.TestSeriesAlterAxes.test_reset_index": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Index",
    "pandas.Series",
    "pandas.core.index.MultiIndex",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_alter_axes.TestSeriesAlterAxes.test_reset_index_range": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.core.index.RangeIndex",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_alter_axes.TestSeriesAlterAxes.test_set_index_makes_timeseries": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.makeDateIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_alter_axes.TestSeriesAlterAxes.test_set_name": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_alter_axes.TestSeriesAlterAxes.test_set_name_attribute": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_alter_axes.TestSeriesAlterAxes.test_setindex": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "len",
    "numpy.arange",
    "pandas.Index",
    "pandas.util.testing.assertIsInstance",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_alter_axes.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_alter_axes.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_alter_axes.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.series.test_alter_axes.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.series.test_alter_axes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.series.test_alter_axes.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.series.test_alter_axes.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_alter_axes.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.series.test_alter_axes.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.series.test_analytics.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.MultiIndex": {
  "data": {
   "shadows": "pandas.core.index.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics._check_accum_op": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "func",
    "getattr",
    "numpy",
    "numpy.NaN",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics._check_stat_op": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "ImportError",
    "pandas.core.nanops._USE_BOTTLENECK",
    "testit"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics._check_stat_op.testit": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "alternate",
    "bottleneck.__version__",
    "distutils.version.LooseVersion",
    "f",
    "float",
    "getattr",
    "list",
    "numpy.NaN",
    "numpy.isnan",
    "numpy.nan",
    "pandas.Series",
    "pandas.bdate_range",
    "pandas.compat.lrange",
    "pandas.compat.signature",
    "pandas.core.nanops._USE_BOTTLENECK",
    "pandas.date_range",
    "pandas.isnull",
    "pandas.notnull",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_all_any": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_all_any_params": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.isnan",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_apply_categorical": {
  "data": {
   "lineno": 1626,
   "symbols_in_volume": [
    "list",
    "numpy.object",
    "pandas.Categorical",
    "pandas.Series",
    "pandas.util.testing.assert_categorical_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_argsort": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "issubclass",
    "numpy.integer",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.compat.range",
    "pandas.isnull",
    "pandas.tseries.index.Timestamp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_argsort_stable": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.array_equal",
    "numpy.random.randint",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_built_in_round": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.PY3",
    "pandas.compat.lrange",
    "pandas.tests.series.test_analytics.nose",
    "round"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_clip": {
  "data": {
   "lineno": 1000,
   "symbols_in_volume": [
    "numpy.clip",
    "pandas.Series",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_clip_against_series": {
  "data": {
   "lineno": 1029,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_clip_types_and_nulls": {
  "data": {
   "lineno": 1014,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.Series",
    "pandas.isnull",
    "pandas.notnull",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_clip_with_datetimes": {
  "data": {
   "lineno": 1043,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.tseries.index.Timestamp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_compress": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "list",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_corr": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.nan",
    "pandas.isnull",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.makeTimeSeries",
    "scipy.stats.pearsonr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_corr_rank": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "pandas.Series",
    "pandas.tests.series.test_analytics.nose",
    "pandas.tests.series.test_analytics.scipy",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.makeTimeSeries",
    "scipy.stats.kendalltau",
    "scipy.stats.spearmanr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_count": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.NaN",
    "numpy.arange",
    "numpy.isfinite",
    "numpy.nan",
    "pandas.Series",
    "pandas.core.index.MultiIndex.from_arrays",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_cov": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.nan",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_cummax": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "numpy.NaN",
    "numpy.array",
    "numpy.maximum.accumulate"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_cummax_datetime64": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_cummax_timedelta64": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.to_timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_cummethods_bool": {
  "data": {
   "lineno": 1064,
   "symbols_in_volume": [
    "getattr",
    "itertools.product",
    "len",
    "numpy.cumprod",
    "numpy.cumsum",
    "numpy.nan",
    "object",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_cummethods_bool.cummax": {
  "data": {
   "lineno": 1070,
   "symbols_in_volume": [
    "numpy.maximum.accumulate"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_cummethods_bool.cummin": {
  "data": {
   "lineno": 1067,
   "symbols_in_volume": [
    "numpy.minimum.accumulate"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_cummin": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "numpy.NaN",
    "numpy.array",
    "numpy.minimum.accumulate"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_cummin_datetime64": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_cummin_timedelta64": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.to_timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_cumprod": {
  "data": {
   "lineno": 299
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_cumsum": {
  "data": {
   "lineno": 296
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_dot": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "numpy.all",
    "numpy.dot",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal",
    "reversed"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_drop_duplicates": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.Series",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_empty_timeseries_redections_return_nat": {
  "data": {
   "lineno": 1322,
   "symbols_in_volume": [
    "pandas.NaT",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_idxmax": {
  "data": {
   "lineno": 1237,
   "symbols_in_volume": [
    "numpy.NaN",
    "numpy.nan",
    "pandas.Series",
    "pandas.date_range",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_idxmin": {
  "data": {
   "lineno": 1195,
   "symbols_in_volume": [
    "numpy.NaN",
    "numpy.nan",
    "pandas.Series",
    "pandas.date_range",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_is_unique": {
  "data": {
   "lineno": 1391,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.randint",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_isin": {
  "data": {
   "lineno": 1101,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_isin_with_i8": {
  "data": {
   "lineno": 1118,
   "symbols_in_volume": [
    "numpy.datetime64",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.date_range",
    "pandas.to_timedelta",
    "pandas.util.testing.assert_series_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_isin_with_string_scalar": {
  "data": {
   "lineno": 1108,
   "symbols_in_volume": [
    "TypeError",
    "pandas.Series",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_kurt": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.ones",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.core.index.MultiIndex",
    "pandas.util.testing._skip_if_no_scipy",
    "scipy.stats.kurtosis"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_max": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_mean": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_median": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "int",
    "numpy.median",
    "numpy.ones",
    "pandas.Series",
    "pandas.compat.lrange"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_min": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_mode": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "numpy.random.shuffle",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_modulo": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "numpy.array_equal",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_nansum_buglet": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.nansum",
    "pandas.Series",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_npdiff": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.diff",
    "numpy.nan",
    "pandas.Series",
    "pandas.tests.series.test_analytics.nose",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_nsmallest_nlargest": {
  "data": {
   "lineno": 1533,
   "symbols_in_volume": [
    "FutureWarning",
    "TypeError",
    "ValueError",
    "itertools.product",
    "len",
    "method",
    "numpy.nan",
    "pandas.Series",
    "pandas.to_datetime",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_numpy_argmax": {
  "data": {
   "lineno": 1281,
   "symbols_in_volume": [
    "ValueError",
    "numpy.argmax",
    "numpy.random.randint",
    "pandas.Series",
    "pandas._np_version_under1p10",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_numpy_argmin": {
  "data": {
   "lineno": 1226,
   "symbols_in_volume": [
    "ValueError",
    "numpy.argmin",
    "numpy.random.randint",
    "pandas.Series",
    "pandas._np_version_under1p10",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_numpy_compress": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.compress",
    "pandas.Series",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_numpy_repeat": {
  "data": {
   "lineno": 1345,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.repeat",
    "pandas.Series",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_numpy_reshape": {
  "data": {
   "lineno": 1703,
   "symbols_in_volume": [
    "numpy.reshape",
    "pandas.Series",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_numpy_round": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "ValueError",
    "numpy.round",
    "pandas.Series",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_ops_consistency_on_empty": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "float",
    "pandas.NaT",
    "pandas.Series",
    "pandas.isnull",
    "pandas.tseries.tdi.Timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_order": {
  "data": {
   "lineno": 1503,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.NaN",
    "numpy.isnan",
    "numpy.sort",
    "pandas.Series",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_overflow": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.allclose",
    "numpy.arange",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_prod": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_prod_numpy16_bug": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.lrange"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_ptp": {
  "data": {
   "lineno": 1292,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "numpy.float64",
    "numpy.nan",
    "numpy.ptp",
    "numpy.random.randn",
    "pandas.MultiIndex.from_product",
    "pandas.Series",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_rank": {
  "data": {
   "lineno": 894,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.inf",
    "numpy.isnan",
    "numpy.nan",
    "numpy.random.permutation",
    "numpy.repeat",
    "pandas.NaT",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_series_equal",
    "scipy.stats.rankdata"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_rank_inf": {
  "data": {
   "lineno": 987,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.inf",
    "numpy.random.permutation",
    "pandas.Series",
    "pandas.tests.series.test_analytics.nose",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_rank_signature": {
  "data": {
   "lineno": 982,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_repeat": {
  "data": {
   "lineno": 1332,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_reshape_2d_return_array": {
  "data": {
   "lineno": 1682,
   "symbols_in_volume": [
    "numpy.random.random",
    "numpy.reshape",
    "pandas.Series",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_reshape_bad_kwarg": {
  "data": {
   "lineno": 1694,
   "symbols_in_volume": [
    "TypeError",
    "pandas.Series",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_reshape_non_2d": {
  "data": {
   "lineno": 1670,
   "symbols_in_volume": [
    "numpy.random.random",
    "pandas.Series",
    "pandas.util.testing.assert_numpy_array_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_round": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "numpy.round",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_search_sorted_datetime64_list": {
  "data": {
   "lineno": 1377,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_search_sorted_datetime64_scalar": {
  "data": {
   "lineno": 1370,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_searchsorted_numeric_dtypes_scalar": {
  "data": {
   "lineno": 1354,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Series",
    "pandas.util.testing.assert_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_searchsorted_numeric_dtypes_vector": {
  "data": {
   "lineno": 1364,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Series",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_searchsorted_sorter": {
  "data": {
   "lineno": 1384,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.array",
    "pandas.Series",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_sem": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "len",
    "numpy.sqrt",
    "numpy.std",
    "pandas.isnull",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_shift_categorical": {
  "data": {
   "lineno": 1651,
   "symbols_in_volume": [
    "numpy.all",
    "pandas.Series",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_shift_int": {
  "data": {
   "lineno": 1645,
   "symbols_in_volume": [
    "float",
    "int",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_skew": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.ones",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing._skip_if_no_scipy",
    "scipy.stats.skew"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_sort_API": {
  "data": {
   "lineno": 1471,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "pandas.Series",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.tests.series.test_analytics.random",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_sort_index": {
  "data": {
   "lineno": 1438,
   "symbols_in_volume": [
    "list",
    "pandas.tests.series.test_analytics.random",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_sort_index_inplace": {
  "data": {
   "lineno": 1451,
   "symbols_in_volume": [
    "list",
    "pandas.tests.series.test_analytics.random",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_sort_values": {
  "data": {
   "lineno": 1398,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "f",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_sort_values.f": {
  "data": {
   "lineno": 1419
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_sortlevel": {
  "data": {
   "lineno": 1609,
   "symbols_in_volume": [
    "list",
    "pandas.Series",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_sum": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_sum_inf": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.isinf",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.config.option_context",
    "pandas.core.nanops.nansum",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_sum_zero": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.empty",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.core.nanops.nansum"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_timedelta64_analytics": {
  "data": {
   "lineno": 1151,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.date_range",
    "pandas.tseries.index.Timestamp",
    "pandas.tseries.tdi.Timedelta",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_unique": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.nan",
    "object",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_unique_data_ownership": {
  "data": {
   "lineno": 1328,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_unstack": {
  "data": {
   "lineno": 1714,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays",
    "pandas.MultiIndex.from_tuples",
    "pandas.Series",
    "pandas.core.index.MultiIndex",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_value_counts_categorical_not_ordered": {
  "data": {
   "lineno": 1850,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_value_counts_categorical_ordered": {
  "data": {
   "lineno": 1830,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_value_counts_datetime": {
  "data": {
   "lineno": 1760,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DatetimeIndex",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_value_counts_datetime_tz": {
  "data": {
   "lineno": 1785,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DatetimeIndex",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_value_counts_nunique": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_value_counts_period": {
  "data": {
   "lineno": 1807,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.TestSeriesAnalytics.test_var_std": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "numpy.std",
    "numpy.var",
    "pandas.isnull",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_analytics.Timedelta": {
  "data": {
   "shadows": "pandas.tseries.tdi.Timedelta"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.Timestamp": {
  "data": {
   "shadows": "pandas.tseries.index.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics._np_version_under1p10": {
  "data": {
   "shadows": "pandas._np_version_under1p10"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.assert_index_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_index_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.bdate_range": {
  "data": {
   "shadows": "pandas.bdate_range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.bn": {
  "data": {
   "shadows": "bottleneck"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.cf": {
  "data": {
   "shadows": "pandas.core.config"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.kurtosis": {
  "data": {
   "shadows": "scipy.stats.kurtosis"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.nanops": {
  "data": {
   "shadows": "pandas.core.nanops"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.notnull": {
  "data": {
   "shadows": "pandas.notnull"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.rankdata": {
  "data": {
   "shadows": "scipy.stats.rankdata"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.skew": {
  "data": {
   "shadows": "scipy.stats.skew"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "pandas.tests.series.test_analytics.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.series.test_apply": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.series.test_apply.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.series.test_apply.Decimal": {
  "data": {
   "shadows": "decimal.Decimal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_apply.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.series.test_apply.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.series.test_apply.TestSeriesApply": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.series.test_apply.TestSeriesApply.test_apply": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.sqrt",
    "object",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.tests.series.test_apply.math",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesApply.test_apply_args": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "list",
    "pandas.Series",
    "pandas.util.testing.assertIsInstance",
    "str.split"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesApply.test_apply_box": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "pandas.Period",
    "pandas.Series",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesApply.test_apply_datetimetz": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "list",
    "numpy.int32",
    "pandas.Series",
    "pandas.date_range",
    "pandas.offsets.Day",
    "pandas.util.testing.assert_series_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesApply.test_apply_datetimetz.f": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pandas.Timestamp",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesApply.test_apply_dont_convert_dtype": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "object",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesApply.test_apply_same_length_inference_bug": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesMap": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.series.test_apply.TestSeriesMap.test_map": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.CategoricalIndex",
    "pandas.Index",
    "pandas.Series",
    "pandas.compat.iteritems",
    "pandas.util.testing.getMixedTypeDict"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesMap.test_map_box": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "pandas.Period",
    "pandas.Series",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesMap.test_map_categorical": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "NotImplementedError",
    "list",
    "numpy.object",
    "pandas.Categorical",
    "pandas.Series",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_categorical_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesMap.test_map_compat": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesMap.test_map_datetimetz": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "NotImplementedError",
    "list",
    "numpy.int32",
    "pandas.Series",
    "pandas.date_range",
    "pandas.offsets.Day",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_series_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesMap.test_map_datetimetz.f": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pandas.Timestamp",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesMap.test_map_decimal": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "decimal.Decimal",
    "numpy.object_",
    "pandas.util.testing.assertIsInstance",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesMap.test_map_dict_with_tuple_keys": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesMap.test_map_int": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "issubclass",
    "numpy.float_",
    "numpy.integer",
    "pandas.Series",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesMap.test_map_na_exclusion": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.TestSeriesMap.test_map_type_inference": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "issubclass",
    "numpy.integer",
    "numpy.where",
    "pandas.Series",
    "pandas.compat.lrange"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_apply.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_apply.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.series.test_apply.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tests.series.test_apply.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.series.test_apply.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pandas.tests.series.test_apply.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.series.test_apply.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.series.test_apply.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.series.test_combine_concat": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.series.test_combine_concat.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.series.test_combine_concat.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.series.test_combine_concat.TestSeriesCombine": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.series.test_combine_concat.TestSeriesCombine.test_append": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ValueError",
    "pandas.compat.iteritems"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_combine_concat.TestSeriesCombine.test_append_many": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_combine_concat.TestSeriesCombine.test_combine_first": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "float",
    "numpy.NaN",
    "numpy.isfinite",
    "pandas.Series",
    "pandas.util.testing.assert_dict_equal",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeIntIndex",
    "pandas.util.testing.makeStringIndex",
    "pandas.util.testing.randn"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_combine_concat.TestSeriesCombine.test_combine_first_dt64": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.NaN",
    "pandas.Series",
    "pandas.tseries.tools.to_datetime",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_combine_concat.TestSeriesCombine.test_concat_empty_series_dtypes": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "numpy.bool",
    "numpy.bool_",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.object_",
    "pandas.Series",
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_combine_concat.TestSeriesCombine.test_concat_empty_series_dtypes_roundtrips": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "get_result_type",
    "map",
    "numpy.dtype",
    "pandas.Series",
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_combine_concat.TestSeriesCombine.test_concat_empty_series_dtypes_roundtrips.float_result_type": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_combine_concat.TestSeriesCombine.test_concat_empty_series_dtypes_roundtrips.get_result_type": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "float_result_type",
    "int_result_type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_combine_concat.TestSeriesCombine.test_concat_empty_series_dtypes_roundtrips.int_result_type": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_combine_concat.TestSeriesCombine.test_update": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_combine_concat.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_combine_concat.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.series.test_combine_concat.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.series.test_combine_concat.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.series.test_combine_concat.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.series.test_combine_concat.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.series.test_combine_concat.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.series.test_combine_concat.to_datetime": {
  "data": {
   "shadows": "pandas.tseries.tools.to_datetime"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.series.test_constructors.DatetimeIndex": {
  "data": {
   "shadows": "pandas.tseries.index.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.MultiIndex": {
  "data": {
   "shadows": "pandas.core.index.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.OrderedDict": {
  "data": {
   "shadows": "pandas.compat.OrderedDict"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_TimeSeries_deprecation": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.TimeSeries",
    "pandas.date_range",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "Exception",
    "FutureWarning",
    "NotImplementedError",
    "id",
    "numpy.NaN",
    "numpy.arange",
    "numpy.object_",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.index.MultiIndex.from_arrays",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_cast": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_categorical": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Categorical",
    "pandas.Series",
    "pandas.core.common.is_categorical_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_corner": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_datelike_coercion": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "object",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.to_datetime",
    "pandas.tseries.index.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_default_index": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_dict": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makePeriodIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_dict_datetime64_index": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "create_data",
    "datetime.datetime.strptime",
    "numpy.datetime64",
    "pandas.Series",
    "pandas.tseries.index.Timestamp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_dict_datetime64_index.create_data": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "constructor",
    "dict",
    "pandas.compat.zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_dict_multiindex": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "check",
    "pandas.Index",
    "pandas.Series",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.util.testing.assert_series_equal",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_dict_timedelta_index": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.to_timedelta",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_dtype_datetime64": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "TypeError",
    "datetime.datetime",
    "numpy.array",
    "numpy.datetime64",
    "numpy.nan",
    "numpy.ndarray",
    "object",
    "pandas.NaT",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.date_range",
    "pandas.isnull",
    "pandas.tseries.index.Timestamp",
    "pandas.tslib.iNaT",
    "pandas.util.testing.assert_series_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_dtype_nocast": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "numpy.int64",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_dtype_timedelta64": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "datetime.timedelta",
    "numpy.nan",
    "numpy.timedelta64",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.tests.series.test_constructors.pandas",
    "pandas.tslib.NaT",
    "pandas.tslib.iNaT"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_dtype_timedelta64.f": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "datetime.timedelta",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_empty": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_generator": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.compat.range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_iterator": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "list",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_list_of_tuples": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "list",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_map": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "map",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.compat.range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_maskedarray": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "bool",
    "datetime.datetime",
    "float",
    "int",
    "numpy.ma.masked_all",
    "numpy.nan",
    "object",
    "pandas.Series",
    "pandas.tslib.iNaT",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_name_hashable": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.ones",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_name_unhashable": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "TypeError",
    "numpy.ones",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_pass_none": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.object_",
    "object",
    "pandas.Index",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_periodindex": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.period_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_sanitize": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dtype",
    "numpy.nan",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_series": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_set": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "TypeError",
    "frozenset",
    "pandas.Series",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_subclass_dict": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "dict",
    "pandas.Series",
    "pandas.compat.iteritems",
    "pandas.compat.range",
    "pandas.util.testing.TestSubDict",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_tuple_of_tuples": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "pandas.Series",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_constructor_with_datetime_tz": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "numpy.ndarray",
    "object",
    "pandas.DatetimeIndex",
    "pandas.NaT",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.concat",
    "pandas.core.common.is_datetime64tz_dtype",
    "pandas.date_range",
    "pandas.lib.infer_dtype",
    "pandas.tseries.index.DatetimeIndex",
    "pandas.tseries.index.Timestamp",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_fromDict": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "float",
    "numpy.float64",
    "numpy.object_",
    "pandas.Series",
    "pandas.util.testing.is_sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_fromValue": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "len",
    "numpy.NaN",
    "numpy.float_",
    "numpy.object_",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_orderedDict_ctor": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "all",
    "list",
    "pandas.compat.OrderedDict",
    "pandas.compat.range",
    "pandas.tests.series.test_constructors.pandas",
    "pandas.tests.series.test_constructors.random"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_orderedDict_subclass_ctor": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "A",
    "all",
    "list",
    "pandas.compat.range",
    "pandas.tests.series.test_constructors.pandas",
    "pandas.tests.series.test_constructors.random"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_orderedDict_subclass_ctor.A": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "pandas.compat.OrderedDict"
   ]
  },
  "type": "class"
 },
 "pandas.tests.series.test_constructors.TestSeriesConstructors.test_scalar_conversion": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "float",
    "int",
    "pandas.Series",
    "pandas.compat.long"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_constructors.Timestamp": {
  "data": {
   "shadows": "pandas.tseries.index.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.lib": {
  "data": {
   "shadows": "pandas.lib"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.long": {
  "data": {
   "shadows": "pandas.compat.long"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.ma": {
  "data": {
   "shadows": "numpy.ma"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.pandas": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.period_range": {
  "data": {
   "shadows": "pandas.period_range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.tslib": {
  "data": {
   "shadows": "pandas.tslib"
  },
  "type": "import"
 },
 "pandas.tests.series.test_constructors.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.tests.series.test_datetime_values": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.series.test_datetime_values.CombinedDatetimelikeProperties": {
  "data": {
   "shadows": "pandas.tseries.common.CombinedDatetimelikeProperties"
  },
  "type": "import"
 },
 "pandas.tests.series.test_datetime_values.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.series.test_datetime_values.DatetimeIndex": {
  "data": {
   "shadows": "pandas.tseries.index.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.series.test_datetime_values.DatetimeProperties": {
  "data": {
   "shadows": "pandas.tseries.common.DatetimeProperties"
  },
  "type": "import"
 },
 "pandas.tests.series.test_datetime_values.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.series.test_datetime_values.PeriodIndex": {
  "data": {
   "shadows": "pandas.tseries.period.PeriodIndex"
  },
  "type": "import"
 },
 "pandas.tests.series.test_datetime_values.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.series.test_datetime_values.TestSeriesDatetimeValues": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.series.test_datetime_values.TestSeriesDatetimeValues.test_between": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.bdate_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_datetime_values.TestSeriesDatetimeValues.test_dt_accessor_api": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "AttributeError",
    "hasattr",
    "list",
    "numpy.arange",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.Series.dt",
    "pandas.date_range",
    "pandas.tseries.common.CombinedDatetimelikeProperties",
    "pandas.tseries.common.DatetimeProperties",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_datetime_values.TestSeriesDatetimeValues.test_dt_accessor_no_new_attributes": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "AttributeError",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_datetime_values.TestSeriesDatetimeValues.test_dt_namespace_accessor": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ValueError",
    "compare",
    "get_dir",
    "getattr",
    "list",
    "numpy.array",
    "numpy.ndarray",
    "object",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.core.common.SettingWithCopyError",
    "pandas.date_range",
    "pandas.option_context",
    "pandas.period_range",
    "pandas.timedelta_range",
    "pandas.to_datetime",
    "pandas.tseries.index.DatetimeIndex",
    "pandas.tseries.period.PeriodIndex",
    "pandas.tseries.tdi.TimedeltaIndex",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal",
    "set",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_datetime_values.TestSeriesDatetimeValues.test_dt_namespace_accessor.compare": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "get_expected",
    "getattr",
    "pandas.core.common.is_list_like",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_datetime_values.TestSeriesDatetimeValues.test_dt_namespace_accessor.f": {
  "data": {
   "lineno": 269
  },
  "type": "function"
 },
 "pandas.tests.series.test_datetime_values.TestSeriesDatetimeValues.test_dt_namespace_accessor.get_dir": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "list",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_datetime_values.TestSeriesDatetimeValues.test_dt_namespace_accessor.get_expected": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "numpy.ndarray",
    "pandas.Index",
    "pandas.Series",
    "pandas.core.common.is_integer_dtype",
    "pandas.core.common.is_list_like"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_datetime_values.TestSeriesDatetimeValues.test_strftime": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.array",
    "object",
    "pandas.NaT",
    "pandas.Series",
    "pandas.date_range",
    "pandas.period_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_datetime_values.TestSeriesDatetimeValues.test_sub_of_datetime_from_TimeSeries": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.abs",
    "pandas.Series",
    "pandas.tseries.index.Timestamp",
    "pandas.tseries.timedeltas.to_timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_datetime_values.TestSeriesDatetimeValues.test_valid_dt_with_missing_values": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "datetime.date",
    "datetime.time",
    "getattr",
    "numpy.nan",
    "pandas.NaT",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_datetime_values.TimedeltaIndex": {
  "data": {
   "shadows": "pandas.tseries.tdi.TimedeltaIndex"
  },
  "type": "import"
 },
 "pandas.tests.series.test_datetime_values.Timestamp": {
  "data": {
   "shadows": "pandas.tseries.index.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.series.test_datetime_values.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_datetime_values.bdate_range": {
  "data": {
   "shadows": "pandas.bdate_range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_datetime_values.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.tests.series.test_datetime_values.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "pandas.tests.series.test_datetime_values.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_datetime_values.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.series.test_datetime_values.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.series.test_datetime_values.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.series.test_datetime_values.period_range": {
  "data": {
   "shadows": "pandas.period_range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_datetime_values.time": {
  "data": {
   "shadows": "datetime.time"
  },
  "type": "import"
 },
 "pandas.tests.series.test_datetime_values.timedelta_range": {
  "data": {
   "shadows": "pandas.timedelta_range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_datetime_values.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.series.test_datetime_values.to_timedelta": {
  "data": {
   "shadows": "pandas.tseries.timedeltas.to_timedelta"
  },
  "type": "import"
 },
 "pandas.tests.series.test_dtypes": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.series.test_dtypes.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.series.test_dtypes.TestSeriesDtypes": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.series.test_dtypes.TestSeriesDtypes.test_astype": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_dtypes.TestSeriesDtypes.test_astype_cast_nan_int": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ValueError",
    "numpy.int64",
    "numpy.nan",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_dtypes.TestSeriesDtypes.test_astype_cast_object_int": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.arange",
    "numpy.int64",
    "numpy.int8",
    "object",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_dtypes.TestSeriesDtypes.test_astype_datetimes": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.nan",
    "numpy.object_",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.compat.range",
    "pandas.tslib.iNaT"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_dtypes.TestSeriesDtypes.test_astype_str": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.str_",
    "pandas.Series",
    "pandas.compat.text_type",
    "pandas.tests.series.test_dtypes.string",
    "pandas.tseries.index.Timestamp",
    "pandas.tseries.tdi.Timedelta",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.rands",
    "set",
    "str",
    "tt"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_dtypes.TestSeriesDtypes.test_astype_unicode": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.PY3",
    "pandas.compat.text_type",
    "pandas.compat.u",
    "pandas.tests.series.test_dtypes.string",
    "pandas.tests.series.test_dtypes.sys",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.rands",
    "reload"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_dtypes.TestSeriesDtypes.test_complexx": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Series",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_dtypes.TestSeriesDtypes.test_dtype": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "numpy.dtype",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_dtypes.Timedelta": {
  "data": {
   "shadows": "pandas.tseries.tdi.Timedelta"
  },
  "type": "import"
 },
 "pandas.tests.series.test_dtypes.Timestamp": {
  "data": {
   "shadows": "pandas.tseries.index.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.series.test_dtypes.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_dtypes.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.series.test_dtypes.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.series.test_dtypes.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.series.test_dtypes.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.series.test_dtypes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.series.test_dtypes.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_dtypes.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "pandas.tests.series.test_dtypes.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.tests.series.test_dtypes.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.series.test_dtypes.tslib": {
  "data": {
   "shadows": "pandas.tslib"
  },
  "type": "import"
 },
 "pandas.tests.series.test_dtypes.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.series.test_indexing.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.IndexingError": {
  "data": {
   "shadows": "pandas.core.indexing.IndexingError"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.JOIN_TYPES": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pandas.tests.series.test_indexing.MultiIndex": {
  "data": {
   "shadows": "pandas.core.index.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_align": {
  "data": {
   "lineno": 1402,
   "symbols_in_volume": [
    "_check_align",
    "pandas.tests.series.test_indexing.JOIN_TYPES"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_align._check_align": {
  "data": {
   "lineno": 1403,
   "symbols_in_volume": [
    "len",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_align_fill_method": {
  "data": {
   "lineno": 1445,
   "symbols_in_volume": [
    "_check_align",
    "pandas.tests.series.test_indexing.JOIN_TYPES"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_align_fill_method._check_align": {
  "data": {
   "lineno": 1446,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_align_multiindex": {
  "data": {
   "lineno": 1518,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "pandas.Index",
    "pandas.MultiIndex.from_product",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_align_nocopy": {
  "data": {
   "lineno": 1480
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_align_sameindex": {
  "data": {
   "lineno": 1509
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_basic_getitem_setitem_corner": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_series_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_basic_getitem_with_labels": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.date_range",
    "pandas.tseries.index.Timestamp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_basic_indexing": {
  "data": {
   "lineno": 1244,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "numpy.random.randn",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_basic_setitem_with_labels": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "Exception",
    "numpy.array",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.date_range",
    "pandas.tseries.index.Timestamp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_cast_on_putmask": {
  "data": {
   "lineno": 1791,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_datetime_indexing": {
  "data": {
   "lineno": 1271,
   "symbols_in_volume": [
    "KeyError",
    "len",
    "pandas.Series",
    "pandas.date_range",
    "pandas.tseries.index.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_delitem": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "KeyError",
    "pandas.Index",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_delitem.f": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_drop": {
  "data": {
   "lineno": 1354,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_get": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DataFrame",
    "pandas.Float64Index",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_get_set_boolean_different_order": {
  "data": {
   "lineno": 1208,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_ambiguous_keyerror": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "KeyError",
    "pandas.Series",
    "pandas.compat.lrange"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_boolean": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "list",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_boolean_empty": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "numpy.int64",
    "numpy.nan",
    "object",
    "pandas.Index",
    "pandas.Series",
    "pandas.core.indexing.IndexingError",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_boolean_empty.f": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "bool",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_boolean_object": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "Exception",
    "numpy.nan",
    "object",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_box_float64": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "numpy.float64",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_callable": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "list",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_dataframe": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_dups": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "numpy.int64",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_dups_with_missing": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_fancy": {
  "data": {
   "lineno": 233
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_generator": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "iter",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_get": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "KeyError",
    "list",
    "pandas.Series",
    "pandas.core.datetools.bday"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_int64": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_negative_out_of_bounds": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "IndexError",
    "pandas.Series",
    "pandas.util.testing.rands_array"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_out_of_bounds": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "IndexError",
    "len",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_regression": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_setitem_boolean_corner": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "Exception",
    "pandas.core.datetools.bday"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_setitem_ellipsis": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "numpy.fix",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_setitem_integers": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_setitem_slice_bug": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_setitem_slice_integers": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_getitem_unordered_dup": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.lib.isscalar"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_head_tail": {
  "data": {
   "lineno": 1823,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_iget": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "FutureWarning",
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.compat.range",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_iget_nonunique": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_int_indexing": {
  "data": {
   "lineno": 1257,
   "symbols_in_volume": [
    "KeyError",
    "numpy.random.randn",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_ix_getitem": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_ix_getitem_iterator": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "iter",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_ix_getitem_not_monotonic": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "KeyError",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_ix_getitem_setitem_integer_slice_keyerrors": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "KeyError",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_series_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_ix_setitem": {
  "data": {
   "lineno": 1126,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_ix_setitem_boolean": {
  "data": {
   "lineno": 1193,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_ix_setitem_corner": {
  "data": {
   "lineno": 1202,
   "symbols_in_volume": [
    "Exception",
    "list"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_mask": {
  "data": {
   "lineno": 1057,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_mask_broadcast": {
  "data": {
   "lineno": 1092,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "numpy.arange",
    "numpy.array",
    "numpy.finfo",
    "numpy.float",
    "numpy.nan",
    "numpy.resize",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_mask_inplace": {
  "data": {
   "lineno": 1113,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_multilevel_preserve_name": {
  "data": {
   "lineno": 1829,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.index.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_pop": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_preserveRefs": {
  "data": {
   "lineno": 1349,
   "symbols_in_volume": [
    "numpy.NaN",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_reindex": {
  "data": {
   "lineno": 1550,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.isnan",
    "numpy.may_share_memory",
    "pandas.compat.iteritems"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_reindex_backfill": {
  "data": {
   "lineno": 1674
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_reindex_bool": {
  "data": {
   "lineno": 1691,
   "symbols_in_volume": [
    "bool",
    "len",
    "numpy.bool_",
    "numpy.object_",
    "numpy.zeros",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_reindex_bool_pad": {
  "data": {
   "lineno": 1707,
   "symbols_in_volume": [
    "bool",
    "len",
    "numpy.zeros",
    "pandas.Series",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_reindex_corner": {
  "data": {
   "lineno": 1601,
   "symbols_in_volume": [
    "Exception",
    "list",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_reindex_fill_value": {
  "data": {
   "lineno": 1731,
   "symbols_in_volume": [
    "issubclass",
    "numpy.integer",
    "numpy.nan",
    "object",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_reindex_int": {
  "data": {
   "lineno": 1677,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.float_",
    "numpy.int_",
    "numpy.zeros",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_reindex_like": {
  "data": {
   "lineno": 1714,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_reindex_nan": {
  "data": {
   "lineno": 1590,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_reindex_nearest": {
  "data": {
   "lineno": 1657,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.around",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_reindex_pad": {
  "data": {
   "lineno": 1616,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_select": {
  "data": {
   "lineno": 1781,
   "symbols_in_volume": [
    "len",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_set_value": {
  "data": {
   "lineno": 571
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_setitem": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "float",
    "numpy.NaN",
    "numpy.isnan",
    "pandas.DatetimeIndex",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeIntIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_setitem_ambiguous_keyerror": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_setitem_boolean": {
  "data": {
   "lineno": 1177,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_setitem_callable": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "list",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_setitem_dtypes": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_setitem_float_labels": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_setitem_na": {
  "data": {
   "lineno": 1225,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_setslice": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_slice": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_slice_can_reorder_not_uniquely_indexed": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_slice_float64": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_slice_float_get_set": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "TypeError",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_slice_float_get_set.f": {
  "data": {
   "lineno": 464
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_slice_floats2": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.arange",
    "numpy.random.rand",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_timedelta_assignment": {
  "data": {
   "lineno": 1292,
   "symbols_in_volume": [
    "datetime.timedelta",
    "numpy.nan",
    "pandas.Series",
    "pandas.tseries.tdi.Timedelta",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_type_promote_putmask": {
  "data": {
   "lineno": 1802,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_underlying_data_conversion": {
  "data": {
   "lineno": 1309,
   "symbols_in_volume": [
    "dict",
    "len",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.set_option",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_where": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "float",
    "numpy.arange",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.compat.range",
    "pandas.isnull",
    "pandas.util.testing.assert_series_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_where.f": {
  "data": {
   "lineno": 862
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_where_broadcast": {
  "data": {
   "lineno": 949,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "numpy.arange",
    "numpy.array",
    "numpy.finfo",
    "numpy.float",
    "numpy.nan",
    "numpy.resize",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_where_datetime": {
  "data": {
   "lineno": 1015,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_where_dups": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.concat",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_where_inplace": {
  "data": {
   "lineno": 980,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_where_numeric_with_string": {
  "data": {
   "lineno": 1152,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "pandas.Series",
    "pandas.core.common.is_integer",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_where_setitem_invalid": {
  "data": {
   "lineno": 886,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.int64",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_where_setitem_invalid.f": {
  "data": {
   "lineno": 938,
   "symbols_in_volume": [
    "list",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.TestSeriesIndexing.test_where_timedelta": {
  "data": {
   "lineno": 1036,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_indexing.Timedelta": {
  "data": {
   "shadows": "pandas.tseries.tdi.Timedelta"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.Timestamp": {
  "data": {
   "shadows": "pandas.tseries.index.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.datetools": {
  "data": {
   "shadows": "pandas.core.datetools"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.lib": {
  "data": {
   "shadows": "pandas.lib"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.series.test_indexing.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.series.test_internals": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.series.test_internals.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.series.test_internals.TestSeriesInternals": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.series.test_internals.TestSeriesInternals.test_convert": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.dtype",
    "numpy.nan",
    "pandas.Series",
    "pandas.lib.NaT",
    "pandas.tseries.index.Timestamp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_internals.TestSeriesInternals.test_convert_no_arg_error": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_internals.TestSeriesInternals.test_convert_objects": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "FutureWarning",
    "datetime.datetime",
    "numpy.nan",
    "pandas.Series",
    "pandas.lib.NaT",
    "pandas.tseries.index.Timestamp",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_internals.TestSeriesInternals.test_convert_objects_preserve_all_bool": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "FutureWarning",
    "bool",
    "object",
    "pandas.Series",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_internals.TestSeriesInternals.test_convert_objects_preserve_bool": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "FutureWarning",
    "object",
    "pandas.Series",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_internals.TestSeriesInternals.test_convert_preserve_all_bool": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "bool",
    "object",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_internals.TestSeriesInternals.test_convert_preserve_bool": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "object",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_internals.Timestamp": {
  "data": {
   "shadows": "pandas.tseries.index.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.series.test_internals.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_internals.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.series.test_internals.lib": {
  "data": {
   "shadows": "pandas.lib"
  },
  "type": "import"
 },
 "pandas.tests.series.test_internals.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.series.test_internals.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.series.test_internals.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.series.test_io": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.series.test_io.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.series.test_io.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.series.test_io.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.series.test_io.TestSeriesIO": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.series.test_io.TestSeriesIO._pickle_roundtrip_name": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "pandas.read_pickle",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_io.TestSeriesIO.test_from_csv": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "datetime.datetime",
    "open",
    "pandas.Series",
    "pandas.Series.from_csv",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_io.TestSeriesIO.test_pickle_preserve_name": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_io.TestSeriesIO.test_timeseries_periodindex": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.period_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_io.TestSeriesIO.test_to_csv": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "numpy.loadtxt",
    "pandas.tests.series.test_io.io",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_io.TestSeriesIO.test_to_csv_float_format": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.Series.from_csv",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_io.TestSeriesIO.test_to_csv_list_entries": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_io.TestSeriesIO.test_to_csv_path_is_none": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "pandas.Series",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_io.TestSeriesIO.test_to_csv_unicode_index": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.Series.from_csv",
    "pandas.compat.StringIO",
    "pandas.compat.u",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_io.TestSeriesIO.test_to_dict": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_io.TestSeriesIO.test_to_frame": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "dict",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_io.TestSeriesIO.test_to_frame_expanddim": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "SubclassedFrame",
    "SubclassedSeries",
    "isinstance",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_io.TestSeriesIO.test_to_frame_expanddim.SubclassedFrame": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "class"
 },
 "pandas.tests.series.test_io.TestSeriesIO.test_to_frame_expanddim.SubclassedSeries": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "class"
 },
 "pandas.tests.series.test_io.TestSeriesIO.test_to_frame_expanddim.SubclassedSeries._constructor_expanddim": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_io.TestSeriesIO.test_tolist": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_io.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_io.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_io.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_io.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.series.test_io.ensure_clean": {
  "data": {
   "shadows": "pandas.util.testing.ensure_clean"
  },
  "type": "import"
 },
 "pandas.tests.series.test_io.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "pandas.tests.series.test_io.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.series.test_io.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.series.test_io.period_range": {
  "data": {
   "shadows": "pandas.period_range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_io.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.series.test_io.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.series.test_misc_api": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.series.test_misc_api.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.series.test_misc_api.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.series.test_misc_api.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.series.test_misc_api.SharedWithSparse": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.series.test_misc_api.SharedWithSparse._pickle_roundtrip": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "pandas.read_pickle",
    "pandas.util.testing.ensure_clean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_misc_api.SharedWithSparse.test_append_preserve_name": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "pandas.tests.series.test_misc_api.SharedWithSparse.test_argsort_preserve_name": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "pandas.tests.series.test_misc_api.SharedWithSparse.test_binop_maybe_preserve_name": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_misc_api.SharedWithSparse.test_combine_first_name": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "pandas.tests.series.test_misc_api.SharedWithSparse.test_copy_index_name_checking": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "pandas.formats.printing.pprint_thing"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_misc_api.SharedWithSparse.test_copy_name": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "pandas.tests.series.test_misc_api.SharedWithSparse.test_getitem_preserve_name": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "pandas.tests.series.test_misc_api.SharedWithSparse.test_pickle": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_misc_api.SharedWithSparse.test_scalarop_preserve_name": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "pandas.tests.series.test_misc_api.SharedWithSparse.test_sort_index_name": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "pandas.tests.series.test_misc_api.SharedWithSparse.test_to_sparse_pass_name": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "pandas.tests.series.test_misc_api.TestSeriesMisc": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "pandas.tests.series.test_misc_api.SharedWithSparse",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.series.test_misc_api.TestSeriesMisc.test_axis_alias": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_misc_api.TestSeriesMisc.test_contains": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "pandas.util.testing.assert_contains_all"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_misc_api.TestSeriesMisc.test_copy": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "numpy.NaN",
    "numpy.arange",
    "numpy.isnan",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.tseries.index.Timestamp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_misc_api.TestSeriesMisc.test_iter": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_misc_api.TestSeriesMisc.test_iter_box": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "pandas.Period",
    "pandas.Series",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_misc_api.TestSeriesMisc.test_iteritems": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "hasattr",
    "pandas.compat.iteritems"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_misc_api.TestSeriesMisc.test_keys": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "getkeys"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_misc_api.TestSeriesMisc.test_ndarray_compat": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "list",
    "numpy.compress",
    "numpy.ones_like",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.date_range",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_misc_api.TestSeriesMisc.test_ndarray_compat.f": {
  "data": {
   "lineno": 289
  },
  "type": "function"
 },
 "pandas.tests.series.test_misc_api.TestSeriesMisc.test_not_hashable": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "TypeError",
    "hash",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_misc_api.TestSeriesMisc.test_numpy_unique": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_misc_api.TestSeriesMisc.test_raise_on_info": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_misc_api.TestSeriesMisc.test_str_attribute": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "pandas.Series",
    "pandas.Series.str",
    "pandas.compat.range",
    "pandas.util.testing.assert_series_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_misc_api.TestSeriesMisc.test_tab_completion": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "dir",
    "list",
    "pandas.Series",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_misc_api.TestSeriesMisc.test_values": {
  "data": {
   "lineno": 208
  },
  "type": "function"
 },
 "pandas.tests.series.test_misc_api.Timestamp": {
  "data": {
   "shadows": "pandas.tseries.index.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.series.test_misc_api.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_misc_api.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.series.test_misc_api.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_misc_api.ensure_clean": {
  "data": {
   "shadows": "pandas.util.testing.ensure_clean"
  },
  "type": "import"
 },
 "pandas.tests.series.test_misc_api.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.series.test_misc_api.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.series.test_misc_api.printing": {
  "data": {
   "shadows": "pandas.formats.printing"
  },
  "type": "import"
 },
 "pandas.tests.series.test_misc_api.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_misc_api.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.series.test_missing": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.tests.series.test_missing.nose"
   ]
  },
  "type": "module"
 },
 "pandas.tests.series.test_missing.Akima1DInterpolator": {
  "data": {
   "shadows": "scipy.interpolate.Akima1DInterpolator"
  },
  "type": "import"
 },
 "pandas.tests.series.test_missing.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.series.test_missing.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.series.test_missing.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interp_all_good": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interp_datetime64": {
  "data": {
   "lineno": 796,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interp_limit": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interp_limit_bad_direction": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interp_limit_before_ends": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interp_limit_direction": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interp_limit_forward": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interp_limit_no_nans": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interp_limit_to_ends": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interp_multiIndex": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.MultiIndex.from_tuples",
    "pandas.Series",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interp_nonmono_raise": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interp_quad": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interp_scipy_basic": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interpolate": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "len",
    "numpy.NaN",
    "numpy.arange",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interpolate_akima": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.Series",
    "pandas.tests.series.test_missing._skip_if_no_akima",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interpolate_corners": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interpolate_from_derivatives": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interpolate_index_values": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "float",
    "numpy.interp",
    "numpy.nan",
    "numpy.random.rand",
    "numpy.random.randn",
    "numpy.sort",
    "pandas.Series",
    "pandas.isnull",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interpolate_non_ts": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interpolate_pchip": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "numpy.random.uniform",
    "numpy.sort",
    "pandas.Index",
    "pandas.Series",
    "pandas.tests.series.test_missing._skip_if_no_pchip",
    "pandas.util.testing._skip_if_no_scipy"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_interpolate_piecewise_polynomial": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_nan_interpolate": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_nan_irregular_index": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_nan_str_index": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_no_order": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_spline": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_spline_error": {
  "data": {
   "lineno": 855,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.nan",
    "numpy.random.randint",
    "pandas.Series",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_spline_extrapolate": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.skip_if_no_package"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_spline_interpolation": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "numpy.random.randint",
    "pandas.Series",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesInterpolateData.test_spline_smooth": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing._skip_if_no_scipy"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_bfill": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "numpy.NaN",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeDateIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_datetime64_fillna": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.NaT",
    "pandas.Series",
    "pandas.tseries.index.Timestamp",
    "pandas.tslib.NaT",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_datetime64_tz_dropna": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.NaT",
    "pandas.Series",
    "pandas.tseries.index.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_datetime64_tz_fillna": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "object",
    "pandas.DatetimeIndex",
    "pandas.NaT",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.tseries.index.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_dropna_empty": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_dropna_no_nan": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_dropna_preserve_name": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_ffill": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "numpy.NaN",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeDateIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_fill_value_when_combine_const": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_fillna": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.NaN",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeDateIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_fillna_bug": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_fillna_inplace": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_fillna_int": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_fillna_invalid_method": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "ValueError",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_fillna_raise": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "TypeError",
    "numpy.random.randint",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_isnull": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "numpy.array_equal",
    "numpy.nan",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_isnull_for_inf": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.nan",
    "pandas.Series",
    "pandas.option_context",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_notnull": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "numpy.array_equal",
    "numpy.nan",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_pad_nan": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "float",
    "numpy.isnan",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_timedelta64_nan": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "datetime.timedelta",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.isnull",
    "pandas.tslib.NaT",
    "pandas.tslib.iNaT"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_timedelta_fillna": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "datetime.timedelta",
    "int",
    "numpy.nan",
    "numpy.timedelta64",
    "pandas.Series",
    "pandas.tseries.index.Timestamp",
    "pandas.tslib.NaT",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.TestSeriesMissingData.test_valid": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "len",
    "numpy.NaN",
    "pandas.util.testing.assert_dict_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.Timestamp": {
  "data": {
   "shadows": "pandas.tseries.index.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.series.test_missing._skip_if_no_akima": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ImportError",
    "pandas.tests.series.test_missing.nose"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing._skip_if_no_pchip": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ImportError",
    "pandas.tests.series.test_missing.nose"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_missing.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_missing.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_missing.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tests.series.test_missing.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.series.test_missing.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tests.series.test_missing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.series.test_missing.pchip_interpolate": {
  "data": {
   "shadows": "scipy.interpolate.pchip_interpolate"
  },
  "type": "import"
 },
 "pandas.tests.series.test_missing.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.series.test_missing.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_missing.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.series.test_missing.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.series.test_missing.tslib": {
  "data": {
   "shadows": "pandas.tslib"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.series.test_operators.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.Decimal": {
  "data": {
   "shadows": "decimal.Decimal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.NaT": {
  "data": {
   "shadows": "pandas.NaT"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_comparison_different_length": {
  "data": {
   "lineno": 990,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_comparison_invalid": {
  "data": {
   "lineno": 955,
   "symbols_in_volume": [
    "TypeError",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_comparison_label_based": {
  "data": {
   "lineno": 999,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_comparison_object_numeric_nas": {
  "data": {
   "lineno": 943,
   "symbols_in_volume": [
    "f",
    "float",
    "getattr",
    "numpy.random.randn",
    "object",
    "op",
    "pandas.Series",
    "pandas.tests.series.test_operators.operator",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_comparison_operators_with_nas": {
  "data": {
   "lineno": 902,
   "symbols_in_volume": [
    "bool",
    "f",
    "getattr",
    "numpy.nan",
    "object",
    "op",
    "pandas.Series",
    "pandas.bdate_range",
    "pandas.tests.series.test_operators.operator",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_comparison_tuples": {
  "data": {
   "lineno": 865,
   "symbols_in_volume": [
    "frozenset",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_comparisons": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.nanops.nangt",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_datetime64_with_index": {
  "data": {
   "lineno": 1378,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range",
    "pandas.tseries.index.Timestamp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_div": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "float",
    "numpy.array_equal",
    "numpy.inf",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_divide_decimal": {
  "data": {
   "lineno": 1362,
   "symbols_in_volume": [
    "decimal.Decimal",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_invert": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_more_na_comparisons": {
  "data": {
   "lineno": 970,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_ne": {
  "data": {
   "lineno": 1336,
   "symbols_in_volume": [
    "float",
    "pandas.Series",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_neg": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_object_comparisons": {
  "data": {
   "lineno": 850,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_op_method": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "check",
    "pandas.util.testing.makeFloatSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_op_method.check": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "alt",
    "getattr",
    "op",
    "pandas.Series",
    "pandas.compat.PY3",
    "pandas.tests.series.test_operators.operator",
    "pandas.util.testing.assert_almost_equal",
    "rop"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operators": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "check",
    "check_comparators"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operators._check_op": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "numpy.abs",
    "op",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operators.check": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "_check_op",
    "getattr",
    "pandas.tests.series.test_operators.operator"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operators.check_comparators": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "_check_op",
    "pandas.tests.series.test_operators.operator"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operators_bitwise": {
  "data": {
   "lineno": 1087,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "numpy.NaN",
    "numpy.int16",
    "numpy.int32",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operators_combine": {
  "data": {
   "lineno": 1278,
   "symbols_in_volume": [
    "_check_fill",
    "equiv_op",
    "getattr",
    "numpy.arange",
    "numpy.nan",
    "op",
    "pandas.Series",
    "pandas.Series.div",
    "pandas.Series.rdiv",
    "pandas.compat.PY3",
    "pandas.tests.series.test_operators.operator",
    "pandas.util.testing.assert_series_equal",
    "rop"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operators_combine._check_fill": {
  "data": {
   "lineno": 1279,
   "symbols_in_volume": [
    "len",
    "meth",
    "numpy.nan",
    "op",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.isnull",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operators_corner": {
  "data": {
   "lineno": 1210,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.isnan",
    "pandas.Index",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operators_datetimelike": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "TypeError",
    "datetime.timedelta",
    "numpy.nan",
    "pandas.Series",
    "pandas._np_version_under1p8",
    "pandas.date_range",
    "pandas.timedelta_range",
    "pandas.tseries.index.Timestamp",
    "pandas.util.testing.assert_series_equal",
    "run_ops"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operators_datetimelike.run_ops": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "TypeError",
    "getattr",
    "op",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operators_empty_int_corner": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "numpy.int32",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operators_frame": {
  "data": {
   "lineno": 1265,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operators_na_handling": {
  "data": {
   "lineno": 1342,
   "symbols_in_volume": [
    "datetime.date",
    "decimal.Decimal",
    "numpy.nan",
    "pandas.Series",
    "pandas.isnull",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operators_reverse_object": {
  "data": {
   "lineno": 1233,
   "symbols_in_volume": [
    "_check_op",
    "numpy.arange",
    "numpy.random.randn",
    "object",
    "pandas.Series",
    "pandas.tests.series.test_operators.operator"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operators_reverse_object._check_op": {
  "data": {
   "lineno": 1237,
   "symbols_in_volume": [
    "float",
    "op",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_operators_timedelta64": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "Exception",
    "datetime.datetime",
    "datetime.timedelta",
    "dict",
    "numpy.array",
    "numpy.int64",
    "numpy.timedelta64",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.date_range",
    "pandas.tseries.index.Timestamp",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_ops_datetimelike_align": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "datetime.timedelta",
    "numpy.nan",
    "pandas.NaT",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_ops_nat": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "TypeError",
    "numpy.nan",
    "pandas.NaT",
    "pandas.Series",
    "pandas.tseries.index.Timestamp",
    "pandas.tseries.tdi.Timedelta",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_scalar_na_cmp_corners": {
  "data": {
   "lineno": 1181,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "datetime.datetime",
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal",
    "tester"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_scalar_na_cmp_corners.tester": {
  "data": {
   "lineno": 1184
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_series_frame_radd_bug": {
  "data": {
   "lineno": 1248,
   "symbols_in_volume": [
    "TypeError",
    "datetime.datetime.now",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.tests.series.test_operators.operator",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.rands_array"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_sub_single_tz": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.tseries.tdi.Timedelta",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_timedelta64_conversions": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta",
    "numpy.nan",
    "numpy.object_",
    "numpy.timedelta64",
    "object",
    "pandas.Series",
    "pandas.date_range",
    "pandas.tseries.tdi.Timedelta",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_timedelta64_equal_timedelta_supported_ops": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "AssertionError",
    "datetime.timedelta",
    "itertools.product",
    "op",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.tests.series.test_operators.operator",
    "pandas.tseries.index.Timestamp",
    "pandas.util.testing.assert_series_equal",
    "timedelta64"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_timedelta64_equal_timedelta_supported_ops.timedelta64": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "itertools.starmap",
    "numpy.timedelta64",
    "pandas.compat.zip",
    "sum"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_timedelta64_operations_with_DateOffset": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "datetime.timedelta",
    "getattr",
    "op",
    "pandas.Series",
    "pandas.offsets",
    "pandas.offsets.Hour",
    "pandas.offsets.Minute",
    "pandas.offsets.Second",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_timedelta64_operations_with_integers": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "TypeError",
    "float",
    "getattr",
    "numpy.int64",
    "numpy.nan",
    "op",
    "pandas.Series",
    "pandas.date_range",
    "pandas.tseries.tdi.Timedelta",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_timedelta64_operations_with_timedeltas": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "datetime.timedelta",
    "pandas.Series",
    "pandas.to_timedelta",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_timedelta_series_ops": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.date_range",
    "pandas.timedelta_range",
    "pandas.tseries.index.Timestamp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.TestSeriesOperators.test_timedeltas_with_DateOffset": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "getattr",
    "numpy.timedelta64",
    "op",
    "pandas.Series",
    "pandas.offsets",
    "pandas.offsets.Milli",
    "pandas.offsets.Minute",
    "pandas.offsets.Second",
    "pandas.tseries.index.Timestamp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_operators.Timedelta": {
  "data": {
   "shadows": "pandas.tseries.tdi.Timedelta"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.Timestamp": {
  "data": {
   "shadows": "pandas.tseries.index.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators._np_version_under1p8": {
  "data": {
   "shadows": "pandas._np_version_under1p8"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.bdate_range": {
  "data": {
   "shadows": "pandas.bdate_range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.inf": {
  "data": {
   "shadows": "numpy.inf"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.nanops": {
  "data": {
   "shadows": "pandas.core.nanops"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.starmap": {
  "data": {
   "shadows": "itertools.starmap"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.timedelta_range": {
  "data": {
   "shadows": "pandas.timedelta_range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.series.test_operators.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.tests.series.test_quantile": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.series.test_quantile.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.series.test_quantile.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.series.test_quantile.TestSeriesQuantile": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.series.test_quantile.TestSeriesQuantile.test_datetime_timedelta_quantiles": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_quantile.TestSeriesQuantile.test_quantile": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ValueError",
    "numpy.percentile",
    "numpy.timedelta64",
    "object",
    "pandas.NaT",
    "pandas.Series",
    "pandas.to_timedelta",
    "pandas.tseries.index.Timestamp",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_quantile.TestSeriesQuantile.test_quantile_box": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "pandas.NaT",
    "pandas.Series",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_quantile.TestSeriesQuantile.test_quantile_interpolation": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "numpy.percentile",
    "pandas._np_version_under1p9",
    "pandas.tests.series.test_quantile.nose"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_quantile.TestSeriesQuantile.test_quantile_interpolation_dtype": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.percentile",
    "pandas.Series",
    "pandas._np_version_under1p9",
    "pandas.core.common.is_integer",
    "pandas.tests.series.test_quantile.nose"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_quantile.TestSeriesQuantile.test_quantile_interpolation_np_lt_1p9": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "ValueError",
    "numpy.percentile",
    "object",
    "pandas.Series",
    "pandas._np_version_under1p9",
    "pandas.tests.series.test_quantile.nose",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_quantile.TestSeriesQuantile.test_quantile_multi": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "float",
    "numpy.percentile",
    "pandas.Index",
    "pandas.Series",
    "pandas.tseries.index.Timestamp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_quantile.TestSeriesQuantile.test_quantile_nan": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_quantile.TestSeriesQuantile.test_quantile_nat": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "pandas.NaT",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_quantile.Timestamp": {
  "data": {
   "shadows": "pandas.tseries.index.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.series.test_quantile._np_version_under1p9": {
  "data": {
   "shadows": "pandas._np_version_under1p9"
  },
  "type": "import"
 },
 "pandas.tests.series.test_quantile.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.tests.series.test_quantile.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tests.series.test_quantile.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.series.test_quantile.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.series.test_quantile.percentile": {
  "data": {
   "shadows": "numpy.percentile"
  },
  "type": "import"
 },
 "pandas.tests.series.test_quantile.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.series.test_replace": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.series.test_replace.TestSeriesReplace": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.series.test_replace.TestSeriesReplace.test_replace": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.fabs",
    "numpy.inf",
    "numpy.nan",
    "numpy.random.randn",
    "object",
    "pandas.Series",
    "pandas.isnull",
    "pandas.lib.NaT",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeDateIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_replace.TestSeriesReplace.test_replace2": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "numpy.fabs",
    "numpy.nan",
    "numpy.random.randn",
    "object",
    "pandas.Series",
    "pandas.isnull",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeDateIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_replace.TestSeriesReplace.test_replace_bool_with_bool": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "len",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_replace.TestSeriesReplace.test_replace_bool_with_string": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_replace.TestSeriesReplace.test_replace_bool_with_string_no_op": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_replace.TestSeriesReplace.test_replace_gh5319": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_replace.TestSeriesReplace.test_replace_mixed_types": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "check_replace",
    "numpy.arange",
    "object",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_replace.TestSeriesReplace.test_replace_mixed_types.check_replace": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_replace.TestSeriesReplace.test_replace_with_dict_with_bool_keys": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "TypeError",
    "pandas.Series",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_replace.TestSeriesReplace.test_replace_with_single_list": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Series",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_replace.lib": {
  "data": {
   "shadows": "pandas.lib"
  },
  "type": "import"
 },
 "pandas.tests.series.test_replace.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.series.test_replace.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.series.test_replace.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.series.test_repr": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.series.test_repr.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.series.test_repr.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.series.test_repr.MultiIndex": {
  "data": {
   "shadows": "pandas.core.index.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.series.test_repr.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.series.test_repr.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.series.test_repr.TestSeriesRepr": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.series.test_repr.TestSeriesRepr.test_bytestring_with_unicode": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "bytes",
    "pandas.Series",
    "pandas.compat.PY3",
    "pandas.compat.u",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_repr.TestSeriesRepr.test_multilevel_name_print": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "len",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.core.index.MultiIndex",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_repr.TestSeriesRepr.test_name_printing": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.date_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_repr.TestSeriesRepr.test_repr": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "int",
    "numpy.NaN",
    "numpy.arange",
    "numpy.int64",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.util.testing.randn",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_repr.TestSeriesRepr.test_repr_bool_fails": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.StringIO",
    "pandas.compat.range",
    "pandas.tests.series.test_repr.sys",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_repr.TestSeriesRepr.test_repr_max_rows": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.range",
    "pandas.option_context",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_repr.TestSeriesRepr.test_repr_name_iterable_indexable": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "numpy.int64",
    "pandas.Series",
    "pandas.compat.u",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_repr.TestSeriesRepr.test_repr_should_return_str": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.u",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_repr.TestSeriesRepr.test_tidy_repr": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.u",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_repr.TestSeriesRepr.test_timeseries_repr_object_dtype": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta",
    "len",
    "numpy.random.randint",
    "numpy.random.randn",
    "object",
    "pandas.Index",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing.makeTimeSeries",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_repr.TestSeriesRepr.test_unicode_string_with_unicode": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.PY3",
    "pandas.compat.text_type",
    "pandas.compat.u",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_repr.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.series.test_repr.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_repr.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.series.test_repr.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.series.test_repr.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.series.test_repr.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.series.test_repr.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_repr.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.tests.series.test_repr.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.series.test_repr.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.series.test_repr.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.series.test_subclass": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.series.test_subclass.TestSeriesSubclassing": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.series.test_subclass.TestSeriesSubclassing.test_indexing_sliced": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "list",
    "pandas.util.testing.SubclassedSeries",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_subclass.TestSeriesSubclassing.test_to_frame": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "list",
    "pandas.util.testing.SubclassedDataFrame",
    "pandas.util.testing.SubclassedSeries",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_subclass.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.series.test_timeseries.DatetimeIndex": {
  "data": {
   "shadows": "pandas.tseries.index.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries.PeriodIndex": {
  "data": {
   "shadows": "pandas.PeriodIndex"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries.TestSeriesTimeSeries": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.series.test_timeseries.TestSeriesTimeSeries.test_asfreq": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "datetime.datetime",
    "len",
    "pandas.Series",
    "pandas.core.datetools.bday",
    "pandas.core.datetools.bmonthEnd"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestSeriesTimeSeries.test_asof": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "list",
    "numpy.NaN",
    "numpy.isnan",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.datetools.bday",
    "pandas.date_range",
    "pandas.notnull",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestSeriesTimeSeries.test_asof_more": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestSeriesTimeSeries.test_asof_periodindex": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "list",
    "numpy.NaN",
    "numpy.isnan",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas.core.datetools.bday",
    "pandas.date_range",
    "pandas.notnull",
    "pandas.period_range",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestSeriesTimeSeries.test_autocorr": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "len",
    "max",
    "numpy.isnan",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestSeriesTimeSeries.test_diff": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.date_range",
    "pandas.tseries.tdi.TimedeltaIndex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestSeriesTimeSeries.test_first_last_valid": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "numpy.NaN",
    "numpy.nan",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestSeriesTimeSeries.test_getitem_setitem_datetime_tz_dateutil": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "datetime.datetime",
    "dateutil.tz.tzutc",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.date_range",
    "pandas.tslib._dateutil_gettz",
    "pandas.util.testing._skip_if_no_dateutil",
    "pandas.util.testing.assert_series_equal",
    "pytz.timezone"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestSeriesTimeSeries.test_getitem_setitem_datetime_tz_pytz": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing._skip_if_no_pytz",
    "pandas.util.testing.assert_series_equal",
    "pytz.timezone"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestSeriesTimeSeries.test_getitem_setitem_datetimeindex": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestSeriesTimeSeries.test_getitem_setitem_periodindex": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.Series",
    "pandas.period_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestSeriesTimeSeries.test_mpl_compat_hack": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "numpy.newaxis",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestSeriesTimeSeries.test_pct_change": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestSeriesTimeSeries.test_pct_change_shift_over_nas": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestSeriesTimeSeries.test_shift": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.nan",
    "pandas.Series",
    "pandas.core.datetools.bday",
    "pandas.date_range",
    "pandas.tseries.tdi.TimedeltaIndex",
    "pandas.util.testing.assert_dict_equal",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makePeriodSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestSeriesTimeSeries.test_timeseries_coercion": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "FutureWarning",
    "len",
    "numpy.random.randn",
    "object",
    "pandas.Series",
    "pandas.tseries.index.DatetimeIndex",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.makeDateIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestSeriesTimeSeries.test_truncate": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pandas.core.datetools.bday",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TestSeriesTimeSeries.test_tshift": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "pandas.Index",
    "pandas.Series",
    "pandas.core.datetools.bday",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makePeriodSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.series.test_timeseries.TimedeltaIndex": {
  "data": {
   "shadows": "pandas.tseries.tdi.TimedeltaIndex"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries.datetools": {
  "data": {
   "shadows": "pandas.core.datetools"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries.gettz": {
  "data": {
   "shadows": "pandas.tslib._dateutil_gettz"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries.notnull": {
  "data": {
   "shadows": "pandas.notnull"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries.period_range": {
  "data": {
   "shadows": "pandas.period_range"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries.tz": {
  "data": {
   "shadows": "pytz.timezone"
  },
  "type": "import"
 },
 "pandas.tests.series.test_timeseries.tzutc": {
  "data": {
   "shadows": "dateutil.tz.tzutc"
  },
  "type": "import"
 },
 "pandas.tests.test_algos": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.tests.test_algos.nose"
   ]
  },
  "type": "module"
 },
 "pandas.tests.test_algos.Categorical": {
  "data": {
   "shadows": "pandas.core.api.Categorical"
  },
  "type": "import"
 },
 "pandas.tests.test_algos.CategoricalIndex": {
  "data": {
   "shadows": "pandas.core.api.CategoricalIndex"
  },
  "type": "import"
 },
 "pandas.tests.test_algos.GroupVarTestMixin": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_algos.GroupVarTestMixin.test_group_var_constant": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "numpy.ones",
    "numpy.zeros",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.GroupVarTestMixin.test_group_var_generic_1d": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan.astype",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.squeeze",
    "numpy.testing.assert_allclose",
    "numpy.tile",
    "numpy.zeros",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.GroupVarTestMixin.test_group_var_generic_1d_flat_labels": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan.astype",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.GroupVarTestMixin.test_group_var_generic_2d_all_finite": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan.astype",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.std",
    "numpy.testing.assert_allclose",
    "numpy.tile",
    "numpy.zeros",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.GroupVarTestMixin.test_group_var_generic_2d_some_nan": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "numpy.nan.astype",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.tile",
    "numpy.vstack",
    "numpy.zeros",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.RandomState": {
  "data": {
   "shadows": "numpy.random.RandomState"
  },
  "type": "import"
 },
 "pandas.tests.test_algos.Series": {
  "data": {
   "shadows": "pandas.core.api.Series"
  },
  "type": "import"
 },
 "pandas.tests.test_algos.TestFactorize": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_algos.TestFactorize.test_basic": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.float64",
    "numpy.int64",
    "object",
    "pandas.compat.range",
    "pandas.core.algorithms.factorize",
    "reversed"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestFactorize.test_datelike": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.Timestamp",
    "pandas.core.algorithms.factorize",
    "pandas.core.api.Series",
    "pandas.to_timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestFactorize.test_factorize_nan": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.array_equal",
    "numpy.nan",
    "pandas.hashtable.Factorizer",
    "pandas.isnull",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestFactorize.test_mixed": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.inf",
    "numpy.int64",
    "numpy.nan",
    "object",
    "pandas.core.algorithms.factorize",
    "pandas.core.api.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestFactorize.test_vector_resize": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "_test_vector_resize",
    "pandas.hashtable.Float64HashTable",
    "pandas.hashtable.Float64Vector",
    "pandas.hashtable.Int64HashTable",
    "pandas.hashtable.Int64Vector",
    "pandas.hashtable.ObjectVector",
    "pandas.hashtable.PyObjectHashTable",
    "tbl",
    "vect"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestFactorize.test_vector_resize._test_vector_resize": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestGroupVarFloat32": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "numpy.float32",
    "pandas.core.algorithms.algos.group_var_float32",
    "pandas.tests.test_algos.GroupVarTestMixin",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_algos.TestGroupVarFloat64": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "numpy.float64",
    "pandas.core.algorithms.algos.group_var_float64",
    "pandas.tests.test_algos.GroupVarTestMixin",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_algos.TestGroupVarFloat64.test_group_var_large_inputs": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "numpy.random.RandomState",
    "numpy.zeros",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestIndexer": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_algos.TestIndexer.test_outer_join_indexer": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "indexer",
    "numpy.arange",
    "numpy.array",
    "numpy.ndarray",
    "pandas.core.algorithms.algos.outer_join_indexer_float32",
    "pandas.core.algorithms.algos.outer_join_indexer_float64",
    "pandas.core.algorithms.algos.outer_join_indexer_int32",
    "pandas.core.algorithms.algos.outer_join_indexer_int64",
    "pandas.core.algorithms.algos.outer_join_indexer_object",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestIsin": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_algos.TestIsin.test_basic": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Series",
    "pandas.core.algorithms.isin",
    "pandas.date_range",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_numpy_array_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestIsin.test_invalid": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "TypeError",
    "pandas.core.algorithms.isin"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestIsin.test_large": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "bool",
    "len",
    "numpy.zeros",
    "pandas.core.algorithms.isin",
    "pandas.date_range",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestMatch": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_algos.TestMatch.test_ints": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.float32",
    "numpy.nan",
    "pandas.Series",
    "pandas.core.algorithms.match",
    "pandas.core.api.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestMatch.test_strings": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.core.algorithms.match",
    "pandas.core.api.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestUnique": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_algos.TestUnique.test_datetime64_dtype_array_returned": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.numpy.np_array_datetime64_compat",
    "pandas.core.algorithms.unique",
    "pandas.to_datetime",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestUnique.test_ints": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "numpy.ndarray",
    "numpy.random.randint",
    "pandas.core.algorithms.unique",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestUnique.test_object_refcount_bug": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "len",
    "pandas.compat.range",
    "pandas.core.algorithms.unique"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestUnique.test_objects": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "numpy.ndarray",
    "numpy.random.randint",
    "pandas.core.algorithms.unique",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestUnique.test_on_index_object": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.tile",
    "pandas.MultiIndex.from_arrays",
    "pandas.unique",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestUnique.test_timedelta64_dtype_array_returned": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Series",
    "pandas.core.algorithms.unique",
    "pandas.to_timedelta",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestValueCounts": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_algos.TestValueCounts.test_categorical": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "list",
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "pandas.Series",
    "pandas.core.api.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestValueCounts.test_categorical_nans": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "pandas.Series",
    "pandas.core.api.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestValueCounts.test_categorical_zeroes": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "list",
    "pandas.Categorical",
    "pandas.core.api.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestValueCounts.test_dropna": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.is_platform_32bit",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestValueCounts.test_value_counts": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.random.seed",
    "pandas.core.algorithms.value_counts",
    "pandas.core.api.Categorical",
    "pandas.core.api.CategoricalIndex",
    "pandas.core.api.Series",
    "pandas.tools.tile.cut",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestValueCounts.test_value_counts_bins": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "pandas.core.algorithms.value_counts"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestValueCounts.test_value_counts_dtypes": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "pandas.core.algorithms.value_counts",
    "pandas.core.api.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestValueCounts.test_value_counts_nat": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "len",
    "numpy.timedelta64",
    "pandas.NaT",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.core.algorithms.value_counts",
    "pandas.core.api.Series",
    "pandas.to_datetime",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.TestValueCounts.test_value_counts_normalized": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.nan",
    "numpy.object",
    "pandas.core.api.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.algos": {
  "data": {
   "shadows": "pandas.core.algorithms"
  },
  "type": "import"
 },
 "pandas.tests.test_algos.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.test_algos.cut": {
  "data": {
   "shadows": "pandas.tools.tile.cut"
  },
  "type": "import"
 },
 "pandas.tests.test_algos.hashtable": {
  "data": {
   "shadows": "pandas.hashtable"
  },
  "type": "import"
 },
 "pandas.tests.test_algos.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tests.test_algos.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.test_algos.np_array_datetime64_compat": {
  "data": {
   "shadows": "pandas.compat.numpy.np_array_datetime64_compat"
  },
  "type": "import"
 },
 "pandas.tests.test_algos.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.test_algos.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.test_algos.test_quantile": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.core.algorithms.quantile",
    "pandas.core.api.Series",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.test_unique_label_indices": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "len",
    "numpy.random.choice",
    "numpy.random.randint",
    "numpy.unique",
    "pandas.hashtable.unique_label_indices",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_algos.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.test_algos.unique_label_indices": {
  "data": {
   "shadows": "pandas.hashtable.unique_label_indices"
  },
  "type": "import"
 },
 "pandas.tests.test_base": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.tests.test_base.nose"
   ]
  },
  "type": "module"
 },
 "pandas.tests.test_base.CheckImmutable": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "object",
    "pandas.tests.test_base.re"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_base.CheckImmutable.check_mutable_error": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "TypeError",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.CheckImmutable.check_result": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.CheckImmutable.test_no_mutable_funcs": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.CheckImmutable.test_no_mutable_funcs.delitem": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "pandas.tests.test_base.CheckImmutable.test_no_mutable_funcs.delslice": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "pandas.tests.test_base.CheckImmutable.test_no_mutable_funcs.setitem": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "pandas.tests.test_base.CheckImmutable.test_no_mutable_funcs.setslice": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "pandas.tests.test_base.CheckImmutable.test_slicing_maintains_type": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "pandas.tests.test_base.CheckStringMixin": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_base.CheckStringMixin.test_string_methods_dont_fail": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "bytes",
    "pandas.compat.PY3",
    "repr",
    "str",
    "unicode"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.CheckStringMixin.test_tricky_container": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "bytes",
    "hasattr",
    "pandas.compat.PY3",
    "repr",
    "str",
    "unicode"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.test_base.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.test_base.DatetimeIndexOpsMixin": {
  "data": {
   "shadows": "pandas.tseries.base.DatetimeIndexOpsMixin"
  },
  "type": "import"
 },
 "pandas.tests.test_base.Float64HashTable": {
  "data": {
   "shadows": "pandas.hashtable.Float64HashTable"
  },
  "type": "import"
 },
 "pandas.tests.test_base.FrozenList": {
  "data": {
   "shadows": "pandas.core.base.FrozenList"
  },
  "type": "import"
 },
 "pandas.tests.test_base.FrozenNDArray": {
  "data": {
   "shadows": "pandas.core.base.FrozenNDArray"
  },
  "type": "import"
 },
 "pandas.tests.test_base.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.test_base.NoNewAttributesMixin": {
  "data": {
   "shadows": "pandas.core.base.NoNewAttributesMixin"
  },
  "type": "import"
 },
 "pandas.tests.test_base.Ops": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_base.Ops._allow_na_ops": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.Ops.check_ops_properties": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "filter",
    "getattr",
    "isinstance",
    "issubclass",
    "numpy.ndarray",
    "pandas.Index",
    "pandas.Series",
    "pandas.tseries.base.DatetimeIndexOpsMixin",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.Ops.setUp": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "getattr",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.util.testing.makeBoolIndex",
    "pandas.util.testing.makeDateIndex",
    "pandas.util.testing.makeFloatIndex",
    "pandas.util.testing.makeIntIndex",
    "pandas.util.testing.makePeriodIndex",
    "pandas.util.testing.makeStringIndex",
    "pandas.util.testing.makeUnicodeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.Ops.test_binary_ops_docs": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "getattr",
    "pandas.DataFrame",
    "pandas.Panel",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.PandasDelegate": {
  "data": {
   "shadows": "pandas.core.base.PandasDelegate"
  },
  "type": "import"
 },
 "pandas.tests.test_base.Panel": {
  "data": {
   "shadows": "pandas.Panel"
  },
  "type": "import"
 },
 "pandas.tests.test_base.PeriodIndex": {
  "data": {
   "shadows": "pandas.PeriodIndex"
  },
  "type": "import"
 },
 "pandas.tests.test_base.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.test_base.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.test_base.TestFloat64HashTable": {
  "data": {
   "lineno": 986,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_base.TestFloat64HashTable.test_lookup_nan": {
  "data": {
   "lineno": 988,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.nan",
    "pandas.hashtable.Float64HashTable"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestFrozenList": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "pandas.compat.u",
    "pandas.core.base.FrozenList",
    "pandas.tests.test_base.CheckImmutable",
    "pandas.tests.test_base.CheckStringMixin",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_base.TestFrozenList.setUp": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "pandas.core.base.FrozenList"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestFrozenList.test_add": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "pandas.core.base.FrozenList"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestFrozenList.test_inplace": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestFrozenNDArray": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "pandas.compat.u",
    "pandas.core.base.FrozenNDArray",
    "pandas.tests.test_base.CheckImmutable",
    "pandas.tests.test_base.CheckStringMixin",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_base.TestFrozenNDArray.setUp": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "pandas.core.base.FrozenNDArray"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestFrozenNDArray.test_shallow_copying": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "pandas.core.base.FrozenNDArray",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestFrozenNDArray.test_shallow_copying.testit": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestFrozenNDArray.test_values": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestIndexOps": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "pandas.tests.test_base.Ops"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_base.TestIndexOps.setUp": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "pandas.tests.test_base.TestIndexOps",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestIndexOps.test_duplicated_drop_duplicates": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "FutureWarning",
    "TypeError",
    "bool",
    "isinstance",
    "len",
    "list",
    "numpy.array",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestIndexOps.test_factorize": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.array",
    "numpy.concatenate",
    "pandas.Index",
    "pandas.Series",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestIndexOps.test_fillna": {
  "data": {
   "lineno": 892,
   "symbols_in_volume": [
    "get_fill_value",
    "isinstance",
    "klass",
    "list",
    "numpy.nan",
    "pandas.Index",
    "pandas.PeriodIndex",
    "pandas.tslib.iNaT",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestIndexOps.test_fillna.get_fill_value": {
  "data": {
   "lineno": 896,
   "symbols_in_volume": [
    "isinstance",
    "pandas.tseries.base.DatetimeIndexOpsMixin"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestIndexOps.test_memory_usage": {
  "data": {
   "lineno": 952,
   "symbols_in_volume": [
    "abs",
    "isinstance",
    "pandas.Series",
    "pandas.core.common.is_object_dtype",
    "pandas.tests.test_base.sys"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestIndexOps.test_nanops": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "datetime.datetime",
    "getattr",
    "klass",
    "numpy.arange",
    "numpy.nan",
    "pandas.Index",
    "pandas.NaT",
    "pandas.Series",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestIndexOps.test_ndarray_compat_properties": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "hasattr",
    "len",
    "pandas.Index",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestIndexOps.test_none_comparison": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "isinstance",
    "numpy.nan",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestIndexOps.test_ops": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "TypeError",
    "getattr",
    "isinstance",
    "pandas.Period",
    "pandas.PeriodIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestIndexOps.test_searchsorted": {
  "data": {
   "lineno": 976,
   "symbols_in_volume": [
    "len",
    "max",
    "numpy.searchsorted",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestIndexOps.test_value_counts_inferred": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "TypeError",
    "datetime.timedelta",
    "isinstance",
    "klass",
    "list",
    "numpy.array",
    "numpy.int64",
    "numpy.nan",
    "numpy.unique",
    "pandas.DatetimeIndex",
    "pandas.Index",
    "pandas.NaT",
    "pandas.Series",
    "pandas.Timedelta",
    "pandas.TimedeltaIndex",
    "pandas.compat.StringIO",
    "pandas.compat.numpy.np_array_datetime64_compat",
    "pandas.read_fwf",
    "pandas.to_datetime",
    "pandas.tslib.iNaT",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestIndexOps.test_value_counts_unique_nunique": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "isinstance",
    "klass",
    "len",
    "list",
    "numpy.nan",
    "numpy.repeat",
    "numpy.unique",
    "pandas.DatetimeIndex",
    "pandas.Index",
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas.core.common.is_datetimetz",
    "pandas.isnull",
    "pandas.tslib.iNaT",
    "pandas.util.testing.assert_series_equal",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestNoNewAttributesMixin": {
  "data": {
   "lineno": 1024,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_base.TestNoNewAttributesMixin.test_mixin": {
  "data": {
   "lineno": 1026,
   "symbols_in_volume": [
    "AttributeError",
    "T",
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestNoNewAttributesMixin.test_mixin.T": {
  "data": {
   "lineno": 1027,
   "symbols_in_volume": [
    "pandas.core.base.NoNewAttributesMixin"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_base.TestNoNewAttributesMixin.test_mixin.f": {
  "data": {
   "lineno": 1038
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestPandasDelegate": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_base.TestPandasDelegate.setUp": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestPandasDelegate.test_invalida_delgation": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "Delegate",
    "Delegator",
    "TypeError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestPandasDelegate.test_invalida_delgation.Delegate": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "pandas.core.base.PandasDelegate"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_base.TestPandasDelegate.test_invalida_delgation.Delegate.__init__": {
  "data": {
   "lineno": 175
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestPandasDelegate.test_invalida_delgation.Delegator": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "object",
    "property"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_base.TestPandasDelegate.test_invalida_delgation.Delegator._get_foo": {
  "data": {
   "lineno": 164
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestPandasDelegate.test_invalida_delgation.Delegator._set_foo": {
  "data": {
   "lineno": 161
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestPandasDelegate.test_invalida_delgation.Delegator.bar": {
  "data": {
   "lineno": 169
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestPandasDelegate.test_invalida_delgation.f": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestTranspose": {
  "data": {
   "lineno": 996,
   "symbols_in_volume": [
    "pandas.tests.test_base.Ops"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_base.TestTranspose.test_numpy_transpose": {
  "data": {
   "lineno": 1013,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.transpose",
    "pandas.Index",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestTranspose.test_transpose": {
  "data": {
   "lineno": 999,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Index",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.TestTranspose.test_transpose_non_default_axes": {
  "data": {
   "lineno": 1006,
   "symbols_in_volume": [
    "ValueError",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_base.Timedelta": {
  "data": {
   "shadows": "pandas.Timedelta"
  },
  "type": "import"
 },
 "pandas.tests.test_base.TimedeltaIndex": {
  "data": {
   "shadows": "pandas.TimedeltaIndex"
  },
  "type": "import"
 },
 "pandas.tests.test_base.assertIsInstance": {
  "data": {
   "shadows": "pandas.util.testing.assertIsInstance"
  },
  "type": "import"
 },
 "pandas.tests.test_base.assertRaisesRegexp": {
  "data": {
   "shadows": "pandas.util.testing.assertRaisesRegexp"
  },
  "type": "import"
 },
 "pandas.tests.test_base.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.tests.test_base.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.test_base.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.test_base.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tests.test_base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.test_base.np_array_datetime64_compat": {
  "data": {
   "shadows": "pandas.compat.numpy.np_array_datetime64_compat"
  },
  "type": "import"
 },
 "pandas.tests.test_base.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.test_base.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.test_base.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pandas.tests.test_base.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.tests.test_base.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.test_base.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.test_base.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.tests.test_categorical.nose"
   ]
  },
  "type": "module"
 },
 "pandas.tests.test_categorical.Categorical": {
  "data": {
   "shadows": "pandas.Categorical"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.CategoricalAccessor": {
  "data": {
   "shadows": "pandas.core.categorical.CategoricalAccessor"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.CategoricalIndex": {
  "data": {
   "shadows": "pandas.CategoricalIndex"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.DatetimeIndex": {
  "data": {
   "shadows": "pandas.tseries.index.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.MultiIndex": {
  "data": {
   "shadows": "pandas.core.index.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.PY3": {
  "data": {
   "shadows": "pandas.compat.PY3"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.PeriodIndex": {
  "data": {
   "shadows": "pandas.tseries.period.PeriodIndex"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.Properties": {
  "data": {
   "shadows": "pandas.tseries.common.Properties"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.StringMethods": {
  "data": {
   "shadows": "pandas.core.strings.StringMethods"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.TestCategorical": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_categorical.TestCategorical.setUp": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "pandas.Categorical.from_array"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_add_categories": {
  "data": {
   "lineno": 935,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.array",
    "pandas.Categorical",
    "pandas.Index",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_add_categories.f": {
  "data": {
   "lineno": 956
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_argsort": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Categorical",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_big_print": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "pandas.Categorical",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_categories_assigments": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "pandas.Categorical"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_categories_assigments.f": {
  "data": {
   "lineno": 742
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_categories_none": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "pandas.Categorical"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_codes_immutable": {
  "data": {
   "lineno": 1142,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.nan",
    "pandas.Categorical"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_codes_immutable.f": {
  "data": {
   "lineno": 1159
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_comparison_with_unknown_scalars": {
  "data": {
   "lineno": 1569,
   "symbols_in_volume": [
    "TypeError",
    "pandas.Categorical"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_comparisons": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "TypeError",
    "distutils.version.LooseVersion",
    "len",
    "list",
    "numpy.__version__",
    "numpy.array",
    "numpy.asarray",
    "numpy.random.permutation",
    "numpy.repeat",
    "pandas.Categorical",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_comparisons.f": {
  "data": {
   "lineno": 480
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_construction_with_ordered": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "pandas.Categorical"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_constructor": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "FutureWarning",
    "RuntimeWarning",
    "ValueError",
    "len",
    "numpy.array",
    "numpy.nan",
    "pandas.Categorical",
    "pandas.Series",
    "pandas.core.common.is_float_dtype",
    "pandas.core.common.is_integer_dtype",
    "pandas.core.common.is_object_dtype",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_constructor.f": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.nan",
    "pandas.Categorical",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_constructor_from_index_series_datetimetz": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "pandas.Categorical.from_array",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_constructor_from_index_series_period": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "pandas.Categorical.from_array",
    "pandas.Series",
    "pandas.period_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_constructor_from_index_series_timedelta": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "pandas.Categorical.from_array",
    "pandas.Series",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_constructor_unsortable": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "TypeError",
    "datetime.datetime.now",
    "distutils.version.LooseVersion",
    "numpy.__version__",
    "numpy.array",
    "pandas.Categorical.from_array",
    "pandas.compat.PY3"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_constructor_with_datetimelike": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.concatenate",
    "pandas.Categorical",
    "pandas.NaT",
    "pandas.Series",
    "pandas.date_range",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal",
    "repr",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_constructor_with_generator": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.compat.range",
    "pandas.core.index.MultiIndex.from_product",
    "xrange"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_constructor_with_index": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "list",
    "object",
    "pandas.Categorical",
    "pandas.CategoricalIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_datetime_categorical_comparison": {
  "data": {
   "lineno": 1557,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_deprecated_labels": {
  "data": {
   "lineno": 1527,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.nan",
    "pandas.Categorical",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_deprecated_levels": {
  "data": {
   "lineno": 1536,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.nan",
    "pandas.Categorical",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_describe": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.nan",
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_empty_print": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "pandas.Categorical",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_from_codes": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "numpy.random",
    "numpy.random.choice",
    "pandas.Categorical",
    "pandas.Categorical.from_codes"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_from_codes.f": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "pandas.Categorical.from_codes"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_getitem": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.asarray",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_getitem_listlike": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "numpy.int8",
    "numpy.random.randint",
    "numpy.random.seed",
    "pandas.Categorical"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_is_equal_dtype": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "list",
    "object",
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_isnull": {
  "data": {
   "lineno": 1122,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.array",
    "numpy.nan",
    "pandas.Categorical",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_map": {
  "data": {
   "lineno": 1583,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "pandas.Categorical",
    "pandas.util.testing.assert_categorical_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_memory_usage": {
  "data": {
   "lineno": 1466,
   "symbols_in_volume": [
    "abs",
    "pandas.Categorical",
    "pandas.tests.test_categorical.sys"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_min_max": {
  "data": {
   "lineno": 1173,
   "symbols_in_volume": [
    "TypeError",
    "numpy.isnan",
    "numpy.nan",
    "pandas.Categorical"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_mode": {
  "data": {
   "lineno": 1276,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Categorical"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_na_flags_int_categories": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.Categorical",
    "pandas.compat.lrange",
    "pandas.core.common.isnull",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_nan_handling": {
  "data": {
   "lineno": 1040,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "numpy.array",
    "numpy.nan",
    "numpy.object_",
    "pandas.Categorical",
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_nan_handling.f": {
  "data": {
   "lineno": 1116,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.Categorical",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_nbytes": {
  "data": {
   "lineno": 1461,
   "symbols_in_volume": [
    "pandas.Categorical"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_numpy_argsort": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "ValueError",
    "numpy.argsort",
    "numpy.array",
    "pandas.Categorical",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_ordered_api": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_periodindex": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Categorical.from_array",
    "pandas.PeriodIndex",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_print": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_print_none_width": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.core.config.option_context",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_reflected_comparison_with_scalars": {
  "data": {
   "lineno": 1563,
   "symbols_in_volume": [
    "pandas.Categorical"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_remove_categories": {
  "data": {
   "lineno": 975,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.Categorical"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_remove_categories.f": {
  "data": {
   "lineno": 996
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_remove_unused_categories": {
  "data": {
   "lineno": 1001,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.array",
    "numpy.nan",
    "numpy.random.choice",
    "pandas.Categorical"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_removed_names_produces_warning": {
  "data": {
   "lineno": 1548,
   "symbols_in_volume": [
    "UserWarning",
    "pandas.Categorical",
    "pandas.Categorical.from_codes",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_rename_categories": {
  "data": {
   "lineno": 867,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "pandas.Categorical"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_rename_categories.f": {
  "data": {
   "lineno": 892
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_reorder_categories": {
  "data": {
   "lineno": 897,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Categorical"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_reorder_categories.f": {
  "data": {
   "lineno": 930
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_searchsorted": {
  "data": {
   "lineno": 1480,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Categorical",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_set_categories": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Categorical"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_set_item_nan": {
  "data": {
   "lineno": 1399,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.array",
    "numpy.nan",
    "pandas.Categorical",
    "pandas.isnull",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_set_ordered": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.Categorical",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_setitem": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "len",
    "numpy.zeros",
    "pandas.Categorical.from_array"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_setitem_listlike": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "numpy.int8",
    "numpy.random.randint",
    "numpy.random.seed",
    "pandas.Categorical"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_shift": {
  "data": {
   "lineno": 1441,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Categorical"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_slicing_directly": {
  "data": {
   "lineno": 1390,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.util.testing.assert_equal",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_sort_values": {
  "data": {
   "lineno": 1309,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "pandas.Categorical"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_sort_values_na_position": {
  "data": {
   "lineno": 1346,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "object",
    "pandas.Categorical"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_unicode_print": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "_rep",
    "pandas.Categorical",
    "pandas.compat.PY3",
    "pandas.core.config.option_context",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_unique": {
  "data": {
   "lineno": 1214,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.nan",
    "object",
    "pandas.Categorical",
    "pandas.util.testing.assert_categorical_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategorical.test_unique_ordered": {
  "data": {
   "lineno": 1243,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.nan",
    "object",
    "pandas.Categorical",
    "pandas.util.testing.assert_categorical_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock": {
  "data": {
   "lineno": 1602,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.setUp": {
  "data": {
   "lineno": 1605,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.Categorical.from_array",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.cut"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_append": {
  "data": {
   "lineno": 3930,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_append.f": {
  "data": {
   "lineno": 3948
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_assigning_ops": {
  "data": {
   "lineno": 3331,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_assigning_ops.f": {
  "data": {
   "lineno": 3639
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_assignment_to_dataframe": {
  "data": {
   "lineno": 2031,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dtype",
    "numpy.random.randint",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.core.common.CategoricalDtype",
    "pandas.cut",
    "pandas.util.testing.assert_series_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_astype_categorical": {
  "data": {
   "lineno": 4114,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "numpy.array",
    "pandas.Categorical",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_categorical_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_astype_to_other": {
  "data": {
   "lineno": 4070,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "cmp",
    "int",
    "invalid",
    "numpy.array",
    "numpy.object_",
    "pandas.Categorical",
    "pandas.Categorical.from_array",
    "pandas.Series",
    "pandas.core.common.CategoricalDtype",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal",
    "valid"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_astype_to_other.cmp": {
  "data": {
   "lineno": 4087,
   "symbols_in_volume": [
    "numpy.sort",
    "numpy.unique",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_basic": {
  "data": {
   "lineno": 1660,
   "symbols_in_volume": [
    "len",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_cat_accessor": {
  "data": {
   "lineno": 1928,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.Categorical",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_cat_accessor_api": {
  "data": {
   "lineno": 4185,
   "symbols_in_volume": [
    "AttributeError",
    "hasattr",
    "invalid",
    "invalid.cat",
    "list",
    "pandas.Series",
    "pandas.Series.cat",
    "pandas.core.categorical.CategoricalAccessor",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_cat_accessor_no_new_attributes": {
  "data": {
   "lineno": 4197,
   "symbols_in_volume": [
    "AttributeError",
    "list",
    "pandas.Series",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_cat_equality": {
  "data": {
   "lineno": 3782,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "pandas.Categorical",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_cat_tab_completition": {
  "data": {
   "lineno": 4170,
   "symbols_in_volume": [
    "get_dir",
    "list",
    "pandas.Series",
    "pandas.util.testing.assert_almost_equal",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_cat_tab_completition.get_dir": {
  "data": {
   "lineno": 4177,
   "symbols_in_volume": [
    "list",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_frame": {
  "data": {
   "lineno": 2762,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.period_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_index_preserver": {
  "data": {
   "lineno": 3909,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_index_repr": {
  "data": {
   "lineno": 2609,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_index_repr_datetime": {
  "data": {
   "lineno": 2627,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "pandas.date_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_index_repr_datetime_ordered": {
  "data": {
   "lineno": 2647,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "pandas.date_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_index_repr_ordered": {
  "data": {
   "lineno": 2618,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_index_repr_period": {
  "data": {
   "lineno": 2677,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "pandas.period_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_index_repr_period_ordered": {
  "data": {
   "lineno": 2716,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "pandas.period_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_index_repr_timedelta": {
  "data": {
   "lineno": 2730,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "pandas.timedelta_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_index_repr_timedelta_ordered": {
  "data": {
   "lineno": 2746,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "pandas.timedelta_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_repr": {
  "data": {
   "lineno": 2110,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Categorical",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_repr_datetime": {
  "data": {
   "lineno": 2165,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.date_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_repr_datetime_ordered": {
  "data": {
   "lineno": 2225,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.date_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_repr_ordered": {
  "data": {
   "lineno": 2137,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Categorical",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_repr_period": {
  "data": {
   "lineno": 2259,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.period_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_repr_period_ordered": {
  "data": {
   "lineno": 2288,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.period_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_repr_timedelta": {
  "data": {
   "lineno": 2317,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.timedelta_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_repr_timedelta_ordered": {
  "data": {
   "lineno": 2350,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.timedelta_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_series_repr": {
  "data": {
   "lineno": 2383,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Categorical",
    "pandas.Series",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_series_repr_datetime": {
  "data": {
   "lineno": 2435,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.Series",
    "pandas.date_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_series_repr_datetime_ordered": {
  "data": {
   "lineno": 2464,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.Series",
    "pandas.date_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_series_repr_ordered": {
  "data": {
   "lineno": 2409,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Categorical",
    "pandas.Series",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_series_repr_period": {
  "data": {
   "lineno": 2493,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.Series",
    "pandas.period_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_series_repr_period_ordered": {
  "data": {
   "lineno": 2519,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.Series",
    "pandas.period_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_series_repr_timedelta": {
  "data": {
   "lineno": 2545,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.Series",
    "pandas.timedelta_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_categorical_series_repr_timedelta_ordered": {
  "data": {
   "lineno": 2577,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.Series",
    "pandas.timedelta_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_codes_dtypes": {
  "data": {
   "lineno": 1638,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_comparisons": {
  "data": {
   "lineno": 3691,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "numpy.array",
    "numpy.nan",
    "pandas.Categorical",
    "pandas.Series",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_comparisons.f": {
  "data": {
   "lineno": 3758
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_concat": {
  "data": {
   "lineno": 3834,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_concat.f": {
  "data": {
   "lineno": 3852,
   "symbols_in_volume": [
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_concat_categorical": {
  "data": {
   "lineno": 4396,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_concat_preserve": {
  "data": {
   "lineno": 3877,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_concat_preserve.f": {
  "data": {
   "lineno": 3884,
   "symbols_in_volume": [
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_construction_frame": {
  "data": {
   "lineno": 1777,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "list",
    "numpy.array",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_construction_series": {
  "data": {
   "lineno": 1753,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_count": {
  "data": {
   "lineno": 3054,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Categorical",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_creation_astype": {
  "data": {
   "lineno": 1714,
   "symbols_in_volume": [
    "list",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_describe": {
  "data": {
   "lineno": 2068,
   "symbols_in_volume": [
    "len",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_dt_accessor_api_for_categorical": {
  "data": {
   "lineno": 4279,
   "symbols_in_volume": [
    "AttributeError",
    "Exception",
    "dir",
    "getattr",
    "hasattr",
    "invalid",
    "invalid.dt",
    "isinstance",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.tseries.common.Properties",
    "pandas.tseries.index.DatetimeIndex._datetimelike_ops",
    "pandas.tseries.index.date_range",
    "pandas.tseries.period.PeriodIndex._datetimelike_ops",
    "pandas.tseries.period.period_range",
    "pandas.tseries.tdi.TimedeltaIndex._datetimelike_ops",
    "pandas.tseries.tdi.timedelta_range",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal",
    "print"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_dtypes": {
  "data": {
   "lineno": 1617,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.Series",
    "pandas.concat",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_groupby": {
  "data": {
   "lineno": 2926,
   "symbols_in_volume": [
    "len",
    "numpy.all",
    "numpy.max",
    "numpy.nan",
    "numpy.sum",
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_product",
    "pandas.Series",
    "pandas.cut",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_groupby.f": {
  "data": {
   "lineno": 2987
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_groupby_sort": {
  "data": {
   "lineno": 2791,
   "symbols_in_volume": [
    "float",
    "pandas.CategoricalIndex",
    "pandas.util.testing.assert_series_equal",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_info": {
  "data": {
   "lineno": 2778,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_merge": {
  "data": {
   "lineno": 3953,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.merge",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_min_max": {
  "data": {
   "lineno": 2803,
   "symbols_in_volume": [
    "TypeError",
    "numpy.isnan",
    "numpy.nan",
    "pandas.Categorical",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_mode": {
  "data": {
   "lineno": 2837,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_na_actions": {
  "data": {
   "lineno": 4024,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "numpy.nan",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_na_actions.f": {
  "data": {
   "lineno": 4043
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_nan_handling": {
  "data": {
   "lineno": 1904,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.array",
    "numpy.nan",
    "numpy.object_",
    "pandas.Categorical",
    "pandas.Series",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_numeric_like_ops": {
  "data": {
   "lineno": 4143,
   "symbols_in_volume": [
    "TypeError",
    "getattr",
    "numpy.log",
    "numpy.sum",
    "pandas.Categorical",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_numpy_repeat": {
  "data": {
   "lineno": 4008,
   "symbols_in_volume": [
    "ValueError",
    "numpy.repeat",
    "pandas.Categorical",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_numpy_reshape": {
  "data": {
   "lineno": 4016,
   "symbols_in_volume": [
    "ValueError",
    "numpy.reshape",
    "pandas.Categorical",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_pickle_v0_14_1": {
  "data": {
   "lineno": 4358,
   "symbols_in_volume": [
    "UserWarning",
    "pandas.Categorical",
    "pandas.read_pickle",
    "pandas.tests.test_categorical.os",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.get_data_path"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_pickle_v0_15_2": {
  "data": {
   "lineno": 4376,
   "symbols_in_volume": [
    "UserWarning",
    "pandas.Categorical",
    "pandas.read_pickle",
    "pandas.tests.test_categorical.os",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.get_data_path"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_pivot_table": {
  "data": {
   "lineno": 3038,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.Series",
    "pandas.pivot_table",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_reindex": {
  "data": {
   "lineno": 1845,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Categorical",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_repeat": {
  "data": {
   "lineno": 4001,
   "symbols_in_volume": [
    "pandas.Categorical"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_repr": {
  "data": {
   "lineno": 2090,
   "symbols_in_volume": [
    "list",
    "pandas.Categorical",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.core.config.option_context",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_reshaping": {
  "data": {
   "lineno": 1828,
   "symbols_in_volume": [
    "len",
    "list",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makePanel"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_sequence_like": {
  "data": {
   "lineno": 1942,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.util.testing.assert_almost_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_series_delegations": {
  "data": {
   "lineno": 1965,
   "symbols_in_volume": [
    "AttributeError",
    "Exception",
    "numpy.arange",
    "numpy.array",
    "pandas.Categorical",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_series_delegations.f": {
  "data": {
   "lineno": 2018
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_series_functions_no_warnings": {
  "data": {
   "lineno": 2024,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.cut",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_sideeffects_free": {
  "data": {
   "lineno": 1870,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Categorical",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_slicing": {
  "data": {
   "lineno": 3136,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.cut",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "reversed",
    "reversed.__array__"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_slicing_and_getting_ops": {
  "data": {
   "lineno": 3159,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.compat.string_types",
    "pandas.core.common.is_categorical_dtype",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_slicing_doc_examples": {
  "data": {
   "lineno": 3298,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_sort_values": {
  "data": {
   "lineno": 3061,
   "symbols_in_volume": [
    "FutureWarning",
    "getattr",
    "numpy.array",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_str_accessor_api_for_categorical": {
  "data": {
   "lineno": 4204,
   "symbols_in_volume": [
    "AttributeError",
    "dir",
    "getattr",
    "hasattr",
    "invalid",
    "invalid.str",
    "isinstance",
    "list",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.core.strings.StringMethods",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_to_records": {
  "data": {
   "lineno": 4122,
   "symbols_in_volume": [
    "list",
    "numpy.rec.array",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_value_counts": {
  "data": {
   "lineno": 2856,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TestCategoricalAsBlock.test_value_counts_with_nan": {
  "data": {
   "lineno": 2878,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.nan",
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "pandas.Series",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_categorical.TimedeltaIndex": {
  "data": {
   "shadows": "pandas.tseries.tdi.TimedeltaIndex"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.date_range": {
  "data": {
   "shadows": "pandas.tseries.index.date_range"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.option_context": {
  "data": {
   "shadows": "pandas.core.config.option_context"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.period_range": {
  "data": {
   "shadows": "pandas.tseries.period.period_range"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.timedelta_range": {
  "data": {
   "shadows": "pandas.tseries.tdi.timedelta_range"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.test_categorical.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.test_common": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.tests.test_common.nose"
   ]
  },
  "type": "module"
 },
 "pandas.tests.test_common.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.test_common.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.test_common.Float64Index": {
  "data": {
   "shadows": "pandas.Float64Index"
  },
  "type": "import"
 },
 "pandas.tests.test_common.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.tests.test_common.NaT": {
  "data": {
   "shadows": "pandas.tslib.NaT"
  },
  "type": "import"
 },
 "pandas.tests.test_common.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.test_common.TestConvert": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_common.TestConvert.test_possibly_convert_objects_copy": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.core.convert._possibly_convert_objects"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.TestInferDtype": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_common.TestInferDtype.test_infer_dtype_from_scalar": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "datetime.datetime.date",
    "datetime.datetime.datetime",
    "datetime.datetime.timedelta",
    "dtypec",
    "numpy.bool_",
    "numpy.complex128",
    "numpy.complex64",
    "numpy.complex_",
    "numpy.datetime64",
    "numpy.float",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.object_",
    "numpy.timedelta64",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.core.common._infer_dtype_from_scalar",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.TestIsNull": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_common.TestIsNull.test_0d_array": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "object",
    "pandas.core.common.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.TestMaybe": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_common.TestMaybe.test_maybe_convert_scalar": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.core.common._maybe_convert_scalar"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.TestMaybe.test_maybe_convert_string_to_array": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "pandas.core.common._maybe_convert_string_to_object",
    "pandas.util.testing.assert_numpy_array_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.TestNumberScalar": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_common.TestNumberScalar.test_is_bool": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta",
    "numpy.bool",
    "numpy.bool_",
    "numpy.complex128",
    "numpy.datetime64",
    "numpy.float64",
    "numpy.int64",
    "numpy.nan",
    "numpy.timedelta64",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.core.common.is_bool"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.TestNumberScalar.test_is_float": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta",
    "numpy.bool",
    "numpy.bool_",
    "numpy.complex128",
    "numpy.datetime64",
    "numpy.float64",
    "numpy.int64",
    "numpy.nan",
    "numpy.timedelta64",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.core.common.is_float"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.TestNumberScalar.test_is_integer": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta",
    "numpy.bool",
    "numpy.bool_",
    "numpy.complex128",
    "numpy.datetime64",
    "numpy.float64",
    "numpy.int64",
    "numpy.nan",
    "numpy.timedelta64",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.core.common.is_integer"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.TestNumberScalar.test_is_number": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta",
    "numpy.bool",
    "numpy.bool_",
    "numpy.complex128",
    "numpy.datetime64",
    "numpy.float64",
    "numpy.int64",
    "numpy.nan",
    "numpy.timedelta64",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.core.common.is_number"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.TimedeltaIndex": {
  "data": {
   "shadows": "pandas.TimedeltaIndex"
  },
  "type": "import"
 },
 "pandas.tests.test_common.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.test_common._multiprocess_can_split_": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pandas.tests.test_common.array_equivalent": {
  "data": {
   "shadows": "pandas.core.common.array_equivalent"
  },
  "type": "import"
 },
 "pandas.tests.test_common.cf": {
  "data": {
   "shadows": "pandas.core.config"
  },
  "type": "import"
 },
 "pandas.tests.test_common.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "pandas.tests.test_common.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.tests.test_common.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.test_common.convert": {
  "data": {
   "shadows": "pandas.core.convert"
  },
  "type": "import"
 },
 "pandas.tests.test_common.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.test_common.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pandas.tests.test_common.iNaT": {
  "data": {
   "shadows": "pandas.tslib.iNaT"
  },
  "type": "import"
 },
 "pandas.tests.test_common.isnull": {
  "data": {
   "shadows": "pandas.core.common.isnull"
  },
  "type": "import"
 },
 "pandas.tests.test_common.lmap": {
  "data": {
   "shadows": "pandas.compat.lmap"
  },
  "type": "import"
 },
 "pandas.tests.test_common.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.test_common.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tests.test_common.notnull": {
  "data": {
   "shadows": "pandas.core.common.notnull"
  },
  "type": "import"
 },
 "pandas.tests.test_common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.test_common.npr": {
  "data": {
   "shadows": "numpy.random"
  },
  "type": "import"
 },
 "pandas.tests.test_common.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "pandas.tests.test_common.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.test_common.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.test_common.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pandas.tests.test_common.test_all_not_none": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "pandas.core.common._all_not_none"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_any_none": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "pandas.core.common._any_none"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_array_equivalent": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.DatetimeIndex",
    "pandas.Float64Index",
    "pandas.TimedeltaIndex",
    "pandas.core.common.array_equivalent"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_datetimeindex_from_empty_datetime64_array": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "pandas.DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_dict_compat": {
  "data": {
   "lineno": 802,
   "symbols_in_volume": [
    "numpy.datetime64",
    "pandas.Timestamp",
    "pandas.core.common._dict_compat"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_difference": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "pandas.core.common.difference",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_downcast_conv": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array_equal",
    "numpy.bool_",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.nan",
    "object",
    "pandas.core.common._possibly_downcast_to_dtype",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_ensure_int32": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.int32",
    "numpy.int64",
    "pandas.core.common._ensure_int32"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_get_callable_name": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "functools.partial",
    "getname",
    "pandas.core.common._get_callable_name",
    "somecall"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_get_callable_name.fn": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_get_callable_name.somecall": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_common.test_get_callable_name.somecall.__call__": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_groupby": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "pandas.core.common.groupby"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_intersection": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "pandas.core.common.intersection",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_is_dict_like": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.core.common.is_dict_like"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_is_hashable": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "HashableClass",
    "OldStyleClass",
    "UnhashableClass1",
    "UnhashableClass2",
    "hash",
    "isinstance",
    "numpy.array",
    "numpy.float64",
    "pandas.compat.PY2",
    "pandas.core.common.is_hashable",
    "pandas.tests.test_common.collections",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_is_hashable.HashableClass": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_common.test_is_hashable.OldStyleClass": {
  "data": {
   "lineno": 636
  },
  "type": "class"
 },
 "pandas.tests.test_common.test_is_hashable.UnhashableClass1": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_common.test_is_hashable.UnhashableClass2": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_common.test_is_hashable.UnhashableClass2.__hash__": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_is_list_like": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "object",
    "pandas.Series",
    "pandas.core.common.is_list_like",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_is_named_tuple": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "list",
    "pandas.Series",
    "pandas.core.common.is_named_tuple",
    "pandas.tests.test_common.collections"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_is_re": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "object",
    "pandas.core.common.is_re",
    "pandas.tests.test_common.re"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_is_recompilable": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "object",
    "pandas.compat.u",
    "pandas.core.common.is_re_compilable",
    "pandas.tests.test_common.re"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_is_sequence": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "A",
    "is_seq",
    "numpy.int64",
    "pandas.compat.u",
    "pandas.core.common.is_sequence"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_is_sequence.A": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_common.test_is_sequence.A.__getitem__": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_isnull": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "isinstance",
    "numpy.NaN",
    "numpy.inf",
    "pandas.Series",
    "pandas.core.common.isnull",
    "pandas.util.testing.add_nans",
    "pandas.util.testing.add_nans_panel4d",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel4d_equal",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.makeFloatSeries",
    "pandas.util.testing.makeMixedDataFrame",
    "pandas.util.testing.makeObjectSeries",
    "pandas.util.testing.makePanel",
    "pandas.util.testing.makePanel4D",
    "pandas.util.testing.makePeriodFrame",
    "pandas.util.testing.makePeriodPanel",
    "pandas.util.testing.makePeriodSeries",
    "pandas.util.testing.makeStringSeries",
    "pandas.util.testing.makeTimeDataFrame",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_isnull_datetime": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "numpy.asarray",
    "pandas.DatetimeIndex",
    "pandas.core.common.isnull",
    "pandas.core.common.notnull",
    "pandas.date_range",
    "pandas.tslib.iNaT"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_isnull_lists": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array_equal",
    "pandas.compat.u",
    "pandas.core.common.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_isnull_nat": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array_equal",
    "object",
    "pandas.core.common.isnull",
    "pandas.tslib.NaT"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_isnull_numpy_nat": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.datetime64",
    "numpy.timedelta64",
    "pandas.core.common.isnull",
    "pandas.tslib.NaT",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_iterpairs": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "list",
    "pandas.core.common.iterpairs"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_map_indices_py": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "pandas.core.common.map_indices_py"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_maybe_match_name": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.core.common._maybe_match_name"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_mut_exclusive": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "TypeError",
    "pandas.core.common._mut_exclusive",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_nan_to_nat_conversions": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "dict",
    "distutils.version.LooseVersion",
    "numpy.__version__",
    "numpy.asarray",
    "numpy.datetime64",
    "numpy.int64",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.compat.lrange",
    "pandas.core.common.isnull",
    "pandas.tslib.iNaT",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_notnull": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "isinstance",
    "numpy.NaN",
    "numpy.array",
    "numpy.inf",
    "pandas.Series",
    "pandas.core.common.isnull",
    "pandas.core.common.notnull",
    "pandas.core.config.option_context",
    "pandas.util.testing.makeFloatSeries",
    "pandas.util.testing.makeObjectSeries",
    "pandas.util.testing.makePeriodSeries",
    "pandas.util.testing.makeStringSeries",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_random_state": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.random.RandomState",
    "pandas.core.common._random_state",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_split_ranges": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "_bin",
    "int",
    "len",
    "list",
    "pandas.compat.lmap",
    "pandas.compat.range",
    "test_locs"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_split_ranges._bin": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "pandas.compat.range",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_split_ranges.test_locs": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "pandas.core.common.split_ranges",
    "sum"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.test_union": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "pandas.core.common.union",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_common.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.test_common.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.test_common.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.test_compat": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.test_compat.TestBuiltinIterators": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_compat.TestBuiltinIterators.check_result": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "len",
    "list",
    "pandas.compat.zip",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_compat.TestBuiltinIterators.test_dict_iterators": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "pandas.compat.iteritems",
    "pandas.compat.iterkeys",
    "pandas.compat.itervalues",
    "pandas.compat.next"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_compat.TestBuiltinIterators.test_filter": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "list",
    "pandas.compat.builtins.filter",
    "pandas.compat.builtins.range",
    "pandas.compat.filter",
    "pandas.compat.lfilter"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_compat.TestBuiltinIterators.test_map": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "list",
    "pandas.compat.builtins.map",
    "pandas.compat.builtins.range",
    "pandas.compat.lmap",
    "pandas.compat.map"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_compat.TestBuiltinIterators.test_range": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "list",
    "pandas.compat.builtins.range",
    "pandas.compat.lrange",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_compat.TestBuiltinIterators.test_zip": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "list",
    "pandas.compat.builtins.range",
    "pandas.compat.builtins.zip",
    "pandas.compat.lzip",
    "pandas.compat.zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_compat.builtins": {
  "data": {
   "shadows": "pandas.compat.builtins"
  },
  "type": "import"
 },
 "pandas.tests.test_compat.filter": {
  "data": {
   "shadows": "pandas.compat.filter"
  },
  "type": "import"
 },
 "pandas.tests.test_compat.iteritems": {
  "data": {
   "shadows": "pandas.compat.iteritems"
  },
  "type": "import"
 },
 "pandas.tests.test_compat.iterkeys": {
  "data": {
   "shadows": "pandas.compat.iterkeys"
  },
  "type": "import"
 },
 "pandas.tests.test_compat.itervalues": {
  "data": {
   "shadows": "pandas.compat.itervalues"
  },
  "type": "import"
 },
 "pandas.tests.test_compat.lfilter": {
  "data": {
   "shadows": "pandas.compat.lfilter"
  },
  "type": "import"
 },
 "pandas.tests.test_compat.lmap": {
  "data": {
   "shadows": "pandas.compat.lmap"
  },
  "type": "import"
 },
 "pandas.tests.test_compat.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.test_compat.lzip": {
  "data": {
   "shadows": "pandas.compat.lzip"
  },
  "type": "import"
 },
 "pandas.tests.test_compat.map": {
  "data": {
   "shadows": "pandas.compat.map"
  },
  "type": "import"
 },
 "pandas.tests.test_compat.next": {
  "data": {
   "shadows": "pandas.compat.next"
  },
  "type": "import"
 },
 "pandas.tests.test_compat.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.test_compat.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.test_compat.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.tests.test_config": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.test_config.TestConfig": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "pandas.tests.test_config.unittest"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_config.TestConfig.__init__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "copy.deepcopy",
    "getattr",
    "pandas.core.config",
    "pandas.tests.test_config.TestConfig",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.setUp": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.tearDown": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_api": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "hasattr",
    "pandas"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_attribute_access": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "KeyError",
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_attribute_access.f": {
  "data": {
   "lineno": 397
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_attribute_access.f2": {
  "data": {
   "lineno": 400
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_attribute_access.f3": {
  "data": {
   "lineno": 403
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_callback": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "v"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_callback.callback": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "v.append"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_case_insensitive": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_config_prefix": {
  "data": {
   "lineno": 327
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_deprecate_option": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "KeyError",
    "len",
    "pandas.tests.test_config.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_describe_option": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_get_option": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_is_one_of_factory": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ValueError",
    "v"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_option_context_scope": {
  "data": {
   "lineno": 427
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_register_option": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "KeyError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_reset_option": {
  "data": {
   "lineno": 216
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_reset_option_all": {
  "data": {
   "lineno": 235
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_set_ContextManager": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "eq"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_set_ContextManager.eq": {
  "data": {
   "lineno": 379
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_set_option": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_set_option_empty_args": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_set_option_invalid_single_argument_type": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_set_option_multiple": {
  "data": {
   "lineno": 179
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_set_option_uneven_args": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_config.TestConfig.test_validation": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_config.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "pandas.tests.test_config.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.test_config.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pandas.tests.test_config.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.tests.test_expressions": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "dict",
    "list",
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.computation.expressions._USE_NUMEXPR",
    "pandas.core.api.DataFrame",
    "pandas.core.api.Panel",
    "pandas.tests.test_expressions._frame",
    "pandas.tests.test_expressions._frame2",
    "pandas.tests.test_expressions._integer",
    "pandas.tests.test_expressions._integer2",
    "pandas.tests.test_expressions._mixed",
    "pandas.tests.test_expressions._mixed2",
    "pandas.tests.test_expressions.msg",
    "pandas.tests.test_expressions.nose"
   ]
  },
  "type": "module"
 },
 "pandas.tests.test_expressions.DataFrame": {
  "data": {
   "shadows": "pandas.core.api.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.test_expressions.Panel": {
  "data": {
   "shadows": "pandas.core.api.Panel"
  },
  "type": "import"
 },
 "pandas.tests.test_expressions.TestExpressions": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_expressions.TestExpressions.run_arithmetic_test": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "Exception",
    "assert_func",
    "getattr",
    "op",
    "op.__name__",
    "pandas.compat.PY3",
    "pandas.computation.expressions._MIN_ELEMENTS",
    "pandas.computation.expressions.set_use_numexpr",
    "pandas.formats.printing.pprint_thing",
    "pandas.tests.test_expressions.nose",
    "pandas.tests.test_expressions.operator"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.run_binary_test": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "Exception",
    "assert_func",
    "getattr",
    "op",
    "op.__name__",
    "pandas.computation.expressions._MIN_ELEMENTS",
    "pandas.computation.expressions.get_test_result",
    "pandas.computation.expressions.set_test_mode",
    "pandas.computation.expressions.set_use_numexpr",
    "pandas.formats.printing.pprint_thing",
    "pandas.tests.test_expressions.nose",
    "pandas.tests.test_expressions.operator",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.run_frame": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "pandas.computation.expressions.set_use_numexpr",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.run_panel": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "assert_func",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.run_series": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.setUp": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "pandas.computation.expressions._MIN_ELEMENTS",
    "pandas.tests.test_expressions._frame",
    "pandas.tests.test_expressions._frame2",
    "pandas.tests.test_expressions._integer",
    "pandas.tests.test_expressions._mixed",
    "pandas.tests.test_expressions._mixed2"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.tearDown": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "pandas.computation.expressions._MIN_ELEMENTS"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_binary_ops": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "pandas.computation.expressions.set_numexpr_threads",
    "pandas.computation.expressions.set_use_numexpr",
    "testit"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_binary_ops.testit": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "getattr",
    "op",
    "pandas.computation.expressions._can_use_numexpr",
    "pandas.computation.expressions.evaluate",
    "pandas.tests.test_expressions.operator",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_bool_ops_raise_on_arithmetic": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "f",
    "getattr",
    "numpy.random.rand",
    "op",
    "pandas.compat.PY3",
    "pandas.core.api.DataFrame",
    "pandas.tests.test_expressions.msg",
    "pandas.tests.test_expressions.operator",
    "pandas.tests.test_expressions.re",
    "pandas.util.testing.assertRaisesRegexp",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_bool_ops_warn_on_arithmetic": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "f",
    "fe",
    "getattr",
    "numpy.random.rand",
    "op",
    "pandas.core.api.DataFrame",
    "pandas.tests.test_expressions.operator",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.use_numexpr",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_boolean_ops": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "pandas.computation.expressions.set_numexpr_threads",
    "pandas.computation.expressions.set_use_numexpr",
    "testit"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_boolean_ops.testit": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "getattr",
    "op",
    "pandas.computation.expressions._can_use_numexpr",
    "pandas.computation.expressions.evaluate",
    "pandas.tests.test_expressions.operator",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_float_arithemtic": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_float_arithemtic_frame": {
  "data": {
   "lineno": 199
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_float_arithmetic_series": {
  "data": {
   "lineno": 202
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_float_panel": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.testing.decorators.slow",
    "pandas.tests.test_expressions._frame2_panel"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_integer_arithmetic": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_integer_arithmetic_frame": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_integer_arithmetic_series": {
  "data": {
   "lineno": 192
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_integer_panel": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "numpy.random.randint",
    "numpy.testing.decorators.slow",
    "pandas.tests.test_expressions._integer2_panel"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_integer_with_zeros": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "numpy.random.randint",
    "numpy.shape",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_invalid": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "pandas.computation.expressions._can_use_numexpr",
    "pandas.tests.test_expressions.operator"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_mixed_arithmetic": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_mixed_arithmetic_frame": {
  "data": {
   "lineno": 214
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_mixed_arithmetic_series": {
  "data": {
   "lineno": 220
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_mixed_panel": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "numpy.random.randint",
    "numpy.testing.decorators.slow",
    "pandas.tests.test_expressions._mixed2_panel"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_panel4d": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.testing.decorators.slow",
    "pandas.util.testing.assert_panel4d_equal",
    "pandas.util.testing.makePanel4D"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_where": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "pandas.computation.expressions.set_numexpr_threads",
    "pandas.computation.expressions.set_use_numexpr",
    "testit"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions.TestExpressions.test_where.testit": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "numpy.bool_",
    "numpy.empty",
    "numpy.where",
    "pandas.computation.expressions.where",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_expressions._frame": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pandas.tests.test_expressions._frame2": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pandas.tests.test_expressions._frame2_panel": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "pandas.tests.test_expressions._frame_panel": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "pandas.tests.test_expressions._integer": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pandas.tests.test_expressions._integer2": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "pandas.tests.test_expressions._integer2_panel": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "pandas.tests.test_expressions._integer_panel": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "pandas.tests.test_expressions._mixed": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pandas.tests.test_expressions._mixed2": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pandas.tests.test_expressions._mixed2_panel": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "pandas.tests.test_expressions._mixed_panel": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "pandas.tests.test_expressions.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_expressions.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_expressions.assert_panel4d_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_panel4d_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_expressions.assert_panel_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_panel_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_expressions.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_expressions.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.test_expressions.expr": {
  "data": {
   "shadows": "pandas.computation.expressions"
  },
  "type": "import"
 },
 "pandas.tests.test_expressions.msg": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pandas.tests.test_expressions.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tests.test_expressions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.test_expressions.numexpr": {
  "data": {
   "shadows": "numexpr"
  },
  "type": "import"
 },
 "pandas.tests.test_expressions.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "pandas.tests.test_expressions.pprint_thing": {
  "data": {
   "shadows": "pandas.formats.printing.pprint_thing"
  },
  "type": "import"
 },
 "pandas.tests.test_expressions.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.test_expressions.randn": {
  "data": {
   "shadows": "numpy.random.randn"
  },
  "type": "import"
 },
 "pandas.tests.test_expressions.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pandas.tests.test_expressions.slow": {
  "data": {
   "shadows": "numpy.testing.decorators.slow"
  },
  "type": "import"
 },
 "pandas.tests.test_expressions.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.test_generic": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.tests.test_generic.nose"
   ]
  },
  "type": "module"
 },
 "pandas.tests.test_generic.DataArray": {
  "data": {
   "shadows": "xarray.DataArray"
  },
  "type": "import"
 },
 "pandas.tests.test_generic.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.test_generic.Dataset": {
  "data": {
   "shadows": "xarray.Dataset"
  },
  "type": "import"
 },
 "pandas.tests.test_generic.Generic": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_generic.Generic._axes": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "pandas.tests.test_generic.Generic._compare": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "pandas.tests.test_generic.Generic._construct": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "Exception",
    "int",
    "isinstance",
    "numpy.empty",
    "numpy.prod",
    "numpy.random.randn",
    "numpy.repeat",
    "pandas.lib.isscalar",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.Generic._ndim": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.Generic.check_metadata": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.Generic.setUp": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "pandas.tests.test_generic.Generic.test_api_compat": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "f",
    "f.__name__",
    "f.__qualname__.endswith",
    "getattr",
    "pandas.compat.PY3"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.Generic.test_clip": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "isinstance",
    "len",
    "numpy.arange",
    "pandas.Panel",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.Generic.test_constructor_compound_dtypes": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "NotImplementedError",
    "f"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.Generic.test_constructor_compound_dtypes.f": {
  "data": {
   "lineno": 253
  },
  "type": "function"
 },
 "pandas.tests.test_generic.Generic.test_downcast": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.Generic.test_get_default": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Series",
    "pandas.compat.zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.Generic.test_get_numeric_data": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.Generic.test_head_tail": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "NotImplementedError",
    "getattr",
    "index",
    "len",
    "pandas.tests.test_generic.nose",
    "pandas.util.testing.makeDateIndex",
    "pandas.util.testing.makeFloatIndex",
    "pandas.util.testing.makeIntIndex",
    "pandas.util.testing.makePeriodIndex",
    "pandas.util.testing.makeStringIndex",
    "pandas.util.testing.makeUnicodeIndex",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.Generic.test_metadata_propagation": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.Generic.test_nonzero": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.Generic.test_nonzero.f": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "pandas.formats.printing.pprint_thing"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.Generic.test_numpy_1_7_compat_numeric_methods": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "f",
    "getattr",
    "numpy"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.Generic.test_numpy_clip": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.clip",
    "pandas.Panel",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.Generic.test_rename": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "list",
    "pandas.Series",
    "setattr",
    "str.lower"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.Generic.test_rename_axis": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "getattr",
    "list",
    "pandas.Series",
    "setattr",
    "str.lower"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.Generic.test_sample": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.inf",
    "numpy.nan",
    "numpy.random.RandomState",
    "numpy.random.randint",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.Generic.test_size_compat": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "len",
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.Generic.test_split_compat": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "len",
    "numpy.array_split"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.Generic.test_stat_non_defaults_args": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.Generic.test_stat_unexpected_keyword": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "TypeError",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.Generic.test_unexpected_keyword": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "TypeError",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.test_generic.MultiIndex": {
  "data": {
   "shadows": "pandas.core.index.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.test_generic.PY3": {
  "data": {
   "shadows": "pandas.compat.PY3"
  },
  "type": "import"
 },
 "pandas.tests.test_generic.Panel": {
  "data": {
   "shadows": "pandas.Panel"
  },
  "type": "import"
 },
 "pandas.tests.test_generic.Panel4D": {
  "data": {
   "shadows": "pandas.Panel4D"
  },
  "type": "import"
 },
 "pandas.tests.test_generic.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.test_generic.TestDataFrame": {
  "data": {
   "lineno": 859,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.tests.test_generic.Generic",
    "pandas.util.testing.TestCase",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_generic.TestDataFrame.test_describe": {
  "data": {
   "lineno": 920,
   "symbols_in_volume": [
    "pandas.util.testing.makeDataFrame",
    "pandas.util.testing.makeMixedDataFrame",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestDataFrame.test_describe_empty_int_columns": {
  "data": {
   "lineno": 987,
   "symbols_in_volume": [
    "float",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.isnull",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestDataFrame.test_describe_multi_index_df_column_names": {
  "data": {
   "lineno": 1144,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestDataFrame.test_describe_no_numeric": {
  "data": {
   "lineno": 973,
   "symbols_in_volume": [
    "dict",
    "min",
    "pandas.DataFrame",
    "pandas.compat.iteritems",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestDataFrame.test_describe_objects": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestDataFrame.test_describe_percentiles_equivalence": {
  "data": {
   "lineno": 938,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestDataFrame.test_describe_percentiles_insert_median": {
  "data": {
   "lineno": 944,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestDataFrame.test_describe_percentiles_percent_or_raw": {
  "data": {
   "lineno": 925,
   "symbols_in_volume": [
    "ValueError",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.makeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestDataFrame.test_describe_timedelta": {
  "data": {
   "lineno": 1116,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.to_timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestDataFrame.test_describe_typefiltering": {
  "data": {
   "lineno": 1035,
   "symbols_in_volume": [
    "dict",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestDataFrame.test_describe_typefiltering_category_bool": {
  "data": {
   "lineno": 1094,
   "symbols_in_volume": [
    "dict",
    "numpy.arange",
    "numpy.generic",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestDataFrame.test_describe_typefiltering_dupcol": {
  "data": {
   "lineno": 1121,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.concat",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestDataFrame.test_describe_typefiltering_groupby": {
  "data": {
   "lineno": 1132,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestDataFrame.test_get_numeric_data_preserve_dtype": {
  "data": {
   "lineno": 912,
   "symbols_in_volume": [
    "object",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestDataFrame.test_metadata_propagation_indiv": {
  "data": {
   "lineno": 1166,
   "symbols_in_volume": [
    "list",
    "numpy.random.randint",
    "numpy.random.randn",
    "numpy.random.seed",
    "pandas.DataFrame",
    "pandas.DataFrame.__finalize__",
    "pandas.DataFrame._metadata",
    "pandas.concat",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestDataFrame.test_metadata_propagation_indiv.finalize": {
  "data": {
   "lineno": 1218,
   "symbols_in_volume": [
    "getattr",
    "object.__setattr__"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestDataFrame.test_nonzero_single_element": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestDataFrame.test_pct_change": {
  "data": {
   "lineno": 1325,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float64",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestDataFrame.test_rename_mi": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.core.index.MultiIndex.from_tuples",
    "str.lower"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestDataFrame.test_set_attribute": {
  "data": {
   "lineno": 1313,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestDataFrame.test_set_axis_name": {
  "data": {
   "lineno": 869,
   "symbols_in_volume": [
    "operator.methodcaller",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestDataFrame.test_set_axis_name_mi": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": [
    "list",
    "numpy.empty",
    "operator.methodcaller",
    "pandas.DataFrame",
    "pandas.core.index.MultiIndex.from_tuples"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestDataFrame.test_to_xarray": {
  "data": {
   "lineno": 1343,
   "symbols_in_volume": [
    "index",
    "len",
    "list",
    "numpy.arange",
    "object",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.compat.range",
    "pandas.date_range",
    "pandas.util.testing._skip_if_no_xarray",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeCategoricalIndex",
    "pandas.util.testing.makeDateIndex",
    "pandas.util.testing.makeFloatIndex",
    "pandas.util.testing.makeIntIndex",
    "pandas.util.testing.makePeriodIndex",
    "pandas.util.testing.makeStringIndex",
    "pandas.util.testing.makeTimedeltaIndex",
    "pandas.util.testing.makeUnicodeIndex",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestDataFrame.test_tz_convert_and_localize": {
  "data": {
   "lineno": 1239,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "getattr",
    "numpy.ones",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.compat.range",
    "pandas.core.index.MultiIndex.from_arrays",
    "pandas.date_range",
    "pandas.period_range",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestNDFrame": {
  "data": {
   "lineno": 1460,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_generic.TestNDFrame.test_describe_raises": {
  "data": {
   "lineno": 1814,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.makePanel"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestNDFrame.test_equals": {
  "data": {
   "lineno": 1724,
   "symbols_in_volume": [
    "f",
    "index",
    "numpy.arange",
    "numpy.nan",
    "numpy.random.random",
    "object",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestNDFrame.test_numpy_squeeze": {
  "data": {
   "lineno": 1616,
   "symbols_in_volume": [
    "ValueError",
    "numpy.squeeze",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeFloatSeries",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestNDFrame.test_numpy_transpose": {
  "data": {
   "lineno": 1647,
   "symbols_in_volume": [
    "ValueError",
    "numpy.transpose",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel4d_equal",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeFloatSeries",
    "pandas.util.testing.makePanel",
    "pandas.util.testing.makePanel4D",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestNDFrame.test_pipe": {
  "data": {
   "lineno": 1818,
   "symbols_in_volume": [
    "f",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestNDFrame.test_pipe_panel": {
  "data": {
   "lineno": 1846,
   "symbols_in_volume": [
    "ValueError",
    "f",
    "pandas.DataFrame",
    "pandas.Panel",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestNDFrame.test_pipe_tuple": {
  "data": {
   "lineno": 1828,
   "symbols_in_volume": [
    "f",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestNDFrame.test_pipe_tuple_error": {
  "data": {
   "lineno": 1837,
   "symbols_in_volume": [
    "ValueError",
    "f",
    "pandas.DataFrame",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestNDFrame.test_sample": {
  "data": {
   "lineno": 1463,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "pandas.DataFrame",
    "pandas.Panel",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestNDFrame.test_squeeze": {
  "data": {
   "lineno": 1580,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Panel",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel4d_equal",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeFloatSeries",
    "pandas.util.testing.makeObjectSeries",
    "pandas.util.testing.makePanel",
    "pandas.util.testing.makePanel4D",
    "pandas.util.testing.makeStringSeries",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestNDFrame.test_take": {
  "data": {
   "lineno": 1672,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Panel",
    "pandas.Panel4D",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel4d_equal",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeFloatSeries",
    "pandas.util.testing.makeObjectSeries",
    "pandas.util.testing.makePanel",
    "pandas.util.testing.makePanel4D",
    "pandas.util.testing.makeStringSeries",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestNDFrame.test_take_invalid_kwargs": {
  "data": {
   "lineno": 1704,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.makeFloatSeries",
    "pandas.util.testing.makePanel",
    "pandas.util.testing.makePanel4D",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestNDFrame.test_transpose": {
  "data": {
   "lineno": 1627,
   "symbols_in_volume": [
    "TypeError",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel4d_equal",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeFloatSeries",
    "pandas.util.testing.makeObjectSeries",
    "pandas.util.testing.makePanel",
    "pandas.util.testing.makePanel4D",
    "pandas.util.testing.makeStringSeries",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestPanel": {
  "data": {
   "lineno": 1413,
   "symbols_in_volume": [
    "pandas.Panel",
    "pandas.tests.test_generic.Generic",
    "pandas.util.testing.TestCase",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_generic.TestPanel.test_to_xarray": {
  "data": {
   "lineno": 1417,
   "symbols_in_volume": [
    "len",
    "list",
    "pandas.util.testing._skip_if_no_xarray",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.makePanel",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestPanel4D": {
  "data": {
   "lineno": 1435,
   "symbols_in_volume": [
    "pandas.Panel4D",
    "pandas.tests.test_generic.Generic",
    "pandas.util.testing.TestCase",
    "pandas.util.testing.assert_panel4d_equal"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_generic.TestPanel4D.test_sample": {
  "data": {
   "lineno": 1439,
   "symbols_in_volume": [
    "pandas.tests.test_generic.nose"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestPanel4D.test_to_xarray": {
  "data": {
   "lineno": 1442,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "pandas.util.testing._skip_if_no_xarray",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.makePanel4D",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestSeries": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.tests.test_generic.Generic",
    "pandas.util.testing.TestCase",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_generic.TestSeries.setUp": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "pandas.util.testing.makeStringSeries",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestSeries.test_describe": {
  "data": {
   "lineno": 770
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestSeries.test_describe_empty": {
  "data": {
   "lineno": 794,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestSeries.test_describe_none": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestSeries.test_describe_objects": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "len",
    "list",
    "max",
    "min",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestSeries.test_get_numeric_data_preserve_dtype": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "object",
    "pandas.Index",
    "pandas.Series",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestSeries.test_metadata_propagation_indiv": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "numpy.random.rand",
    "pandas.Series",
    "pandas.Series.__finalize__",
    "pandas.Series._metadata",
    "pandas.compat.range",
    "pandas.concat",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestSeries.test_metadata_propagation_indiv.finalize": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "getattr",
    "object.__setattr__"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestSeries.test_nonzero_single_element": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "numpy.nan",
    "pandas.NaT",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestSeries.test_rename_mi": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.core.index.MultiIndex.from_tuples",
    "str.lower"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestSeries.test_set_axis_name": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "operator.methodcaller",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestSeries.test_set_axis_name_mi": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "operator.methodcaller",
    "pandas.Series",
    "pandas.core.index.MultiIndex.from_tuples"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestSeries.test_set_axis_name_raises": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Series",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestSeries.test_to_xarray": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": [
    "index",
    "len",
    "list",
    "pandas.MultiIndex.from_product",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing._skip_if_no_xarray",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeCategoricalIndex",
    "pandas.util.testing.makeDateIndex",
    "pandas.util.testing.makeFloatIndex",
    "pandas.util.testing.makeIntIndex",
    "pandas.util.testing.makePeriodIndex",
    "pandas.util.testing.makeStringIndex",
    "pandas.util.testing.makeTimedeltaIndex",
    "pandas.util.testing.makeUnicodeIndex",
    "testit",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.TestSeries.test_to_xarray.testit": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "index",
    "len",
    "list",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal",
    "repr",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_generic.assertRaisesRegexp": {
  "data": {
   "shadows": "pandas.util.testing.assertRaisesRegexp"
  },
  "type": "import"
 },
 "pandas.tests.test_generic.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_generic.assert_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_generic.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_generic.assert_panel4d_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_panel4d_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_generic.assert_panel_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_panel_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_generic.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_generic.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.test_generic.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.test_generic.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tests.test_generic.lib": {
  "data": {
   "shadows": "pandas.lib"
  },
  "type": "import"
 },
 "pandas.tests.test_generic.methodcaller": {
  "data": {
   "shadows": "operator.methodcaller"
  },
  "type": "import"
 },
 "pandas.tests.test_generic.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.test_generic.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tests.test_generic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.test_generic.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.test_generic.period_range": {
  "data": {
   "shadows": "pandas.period_range"
  },
  "type": "import"
 },
 "pandas.tests.test_generic.printing": {
  "data": {
   "shadows": "pandas.formats.printing"
  },
  "type": "import"
 },
 "pandas.tests.test_generic.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.test_generic.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.test_generic.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.tests.test_graphics_others": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.tests.test_graphics_others.nose"
   ]
  },
  "type": "module"
 },
 "pandas.tests.test_graphics_others.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.test_graphics_others.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.tests.test_graphics_others.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.test_graphics_others.Rectangle": {
  "data": {
   "shadows": "matplotlib.patches.Rectangle"
  },
  "type": "import"
 },
 "pandas.tests.test_graphics_others.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.test_graphics_others.TestDataFrameGroupByPlots": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "pandas.tests.test_graphics.TestPlotBase",
    "pandas.util.testing.mplskip"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_graphics_others.TestDataFrameGroupByPlots.test_axis_share_x": {
  "data": {
   "lineno": 941,
   "symbols_in_volume": [
    "numpy.testing.decorators.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_graphics_others.TestDataFrameGroupByPlots.test_axis_share_xy": {
  "data": {
   "lineno": 968,
   "symbols_in_volume": [
    "numpy.testing.decorators.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_graphics_others.TestDataFrameGroupByPlots.test_axis_share_y": {
  "data": {
   "lineno": 955,
   "symbols_in_volume": [
    "numpy.testing.decorators.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_graphics_others.TestDataFrameGroupByPlots.test_boxplot_legacy": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "list",
    "numpy.random.rand",
    "numpy.testing.decorators.slow",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.lzip",
    "pandas.compat.range",
    "pandas.tests.test_graphics._check_plot_works",
    "pandas.tests.test_graphics_others.string",
    "pandas.tests.test_graphics_others.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_graphics_others.TestDataFrameGroupByPlots.test_grouped_box_layout": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "ValueError",
    "numpy.testing.decorators.slow",
    "pandas.tests.test_graphics._check_plot_works"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_graphics_others.TestDataFrameGroupByPlots.test_grouped_box_multiple_axes": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "list",
    "numpy.array",
    "numpy.testing.decorators.slow",
    "pandas.tests.test_graphics_others.warnings",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_graphics_others.TestDataFrameGroupByPlots.test_grouped_box_return_type": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.ndarray",
    "numpy.random.randn",
    "numpy.testing.decorators.slow",
    "pandas.DataFrame",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_graphics_others.TestDataFrameGroupByPlots.test_grouped_hist_layout": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": [
    "ValueError",
    "numpy.testing.decorators.slow",
    "pandas.tests.test_graphics._check_plot_works",
    "pandas.util.testing.close"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_graphics_others.TestDataFrameGroupByPlots.test_grouped_hist_legacy": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "AttributeError",
    "FutureWarning",
    "isinstance",
    "matplotlib.patches.Rectangle",
    "numpy.random.randint",
    "numpy.random.randn",
    "numpy.testing.decorators.slow",
    "pandas.DataFrame",
    "pandas.tools.plotting.grouped_hist",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.close"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_graphics_others.TestDataFrameGroupByPlots.test_grouped_hist_legacy2": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "len",
    "numpy.random.choice",
    "numpy.random.normal",
    "numpy.testing.decorators.slow",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.RNGContext",
    "pandas.util.testing.close"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_graphics_others.TestDataFrameGroupByPlots.test_grouped_hist_multiple_axes": {
  "data": {
   "lineno": 921,
   "symbols_in_volume": [
    "ValueError",
    "numpy.testing.decorators.slow",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_graphics_others.TestDataFrameGroupByPlots.test_grouped_plot_fignums": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "len",
    "numpy.random.choice",
    "numpy.random.normal",
    "numpy.testing.decorators.slow",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.RNGContext",
    "pandas.util.testing.close"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_graphics_others.TestDataFramePlots": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "pandas.tests.test_graphics.TestPlotBase",
    "pandas.util.testing.mplskip"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_graphics_others.TestDataFramePlots.setUp": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.uniform",
    "pandas.DataFrame",
    "pandas.read_csv",
    "pandas.tests.test_graphics.TestPlotBase.setUp",
    "pandas.tests.test_graphics.curpath",
    "pandas.tests.test_graphics_others.matplotlib",
    "pandas.tests.test_graphics_others.os",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_graphics_others.TestDataFramePlots.test_andrews_curves": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "FutureWarning",
    "matplotlib.cm.jet",
    "numpy.linspace",
    "numpy.random.rand",
    "numpy.testing.decorators.slow",
    "pandas.DataFrame",
    "pandas.compat.lmap",
    "pandas.tests.test_graphics._check_plot_works",
    "pandas.tools.plotting.andrews_curves",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_graphics_others.TestDataFramePlots.test_boxplot_axis_limits": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "_check_ax_limits",
    "numpy.random.randint",
    "numpy.testing.decorators.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_graphics_others.TestDataFramePlots.test_boxplot_axis_limits._check_ax_limits": {
  "data": {
   "lineno": 273
  },
  "type": "function"
 },
 "pandas.tests.test_graphics_others.TestDataFramePlots.test_boxplot_empty_column": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "numpy.testing.decorators.slow",
    "pandas.DataFrame",
    "pandas.tests.test_graphics._check_plot_works",
    "pandas.tests.test_graphics_others._skip_if_mpl_14_or_dev_boxplot"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_graphics_others.TestDataFramePlots.test_boxplot_legacy": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.random.rand",
    "numpy.random.randn",
    "numpy.testing.decorators.slow",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.tests.test_graphics._check_plot_works",
    "pandas.tests.test_graphics_others.itertools",
    "pandas.tests.test_graphics_others.string",
    "pandas.tools.plotting.boxplot"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_graphics_others.TestDataFramePlots.test_boxplot_return_type_legacy": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "list",
    "numpy.random.randn",
    "numpy.testing.decorators.slow",
    "pandas.DataFrame",
    "pandas.tests.test_graphics_others.string",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_graphics_others.TestDataFramePlots.test_hist_df_legacy": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "AttributeError",
    "isinstance",
    "matplotlib.patches.Rectangle",
    "numpy.random.randn",
    "numpy.testing.decorators.slow",
    "pandas.DataFrame",
    "pandas.tests.test_graphics._check_plot_works",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.close"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_graphics_others.TestDataFramePlots.test_hist_layout": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.randn",
    "numpy.testing.decorators.slow",
    "pandas.DataFrame",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_graphics_others.TestDataFramePlots.test_parallel_coordinates": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "FutureWarning",
    "len",
    "matplotlib.cm.jet",
    "numpy.linspace",
    "numpy.testing.decorators.slow",
    "pandas.DataFrame",
    "pandas.compat.lmap",
    "pandas.tests.test_graphics._check_plot_works",
    "pandas.tools.plotting.parallel_coordinates",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_graphics_others.TestDataFramePlots.test_radviz": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "matplotlib.cm.jet",
    "numpy.linspace",
    "numpy.testing.decorators.slow",
    "pandas.DataFrame",
    "pandas.compat.lmap",
    "pandas.tests.test_graphics._check_plot_works",
    "pandas.tools.plotting.radviz"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_graphics_others.TestDataFramePlots.test_scatter_matrix_axis": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.tests.test_graphics._check_plot_works",
    "pandas.tools.plotting.scatter_matrix",
    "pandas.util.testing.RNGContext",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_graphics_others.TestDataFramePlots.test_scatter_plot_legacy": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.repeat",
    "numpy.testing.decorators.slow",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.tests.test_graphics._check_plot_works",
    "pandas.tests.test_graphics._ok_for_gaussian_kde",
    "pandas.util.testing._skip_if_no_scipy"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_graphics_others.TestDataFramePlots.test_scatter_plot_legacy.scat": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "pandas.tools.plotting.scatter_matrix"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_graphics_others.TestDataFramePlots.test_scatter_plot_legacy.scat2": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "pandas.tools.plotting.scatter_plot"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_graphics_others.TestPlotBase": {
  "data": {
   "shadows": "pandas.tests.test_graphics.TestPlotBase"
  },
  "type": "import"
 },
 "pandas.tests.test_graphics_others.TestSeriesPlots": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "pandas.tests.test_graphics.TestPlotBase",
    "pandas.util.testing.mplskip"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_graphics_others.TestSeriesPlots.setUp": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "pandas.tests.test_graphics.TestPlotBase.setUp",
    "pandas.tests.test_graphics_others.matplotlib",
    "pandas.util.testing.makePeriodSeries",
    "pandas.util.testing.makeStringSeries",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_graphics_others.TestSeriesPlots.test_autocorrelation_plot": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "numpy.testing.decorators.slow",
    "pandas.tests.test_graphics._check_plot_works",
    "pandas.tools.plotting.autocorrelation_plot"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_graphics_others.TestSeriesPlots.test_bootstrap_plot": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "numpy.testing.decorators.slow",
    "pandas.tests.test_graphics._check_plot_works",
    "pandas.tools.plotting.bootstrap_plot"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_graphics_others.TestSeriesPlots.test_hist_bins_legacy": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "numpy.testing.decorators.slow",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_graphics_others.TestSeriesPlots.test_hist_by_no_extra_plots": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "len",
    "numpy.testing.decorators.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_graphics_others.TestSeriesPlots.test_hist_layout": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "ValueError",
    "numpy.testing.decorators.slow",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_graphics_others.TestSeriesPlots.test_hist_layout_with_by": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "numpy.testing.decorators.slow",
    "pandas.tests.test_graphics._check_plot_works"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_graphics_others.TestSeriesPlots.test_hist_legacy": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "ValueError",
    "numpy.testing.decorators.slow",
    "pandas.tests.test_graphics._check_plot_works",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.close"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_graphics_others.TestSeriesPlots.test_hist_no_overlap": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "len",
    "matplotlib.pyplot.gcf",
    "matplotlib.pyplot.subplot",
    "numpy.random.randn",
    "numpy.testing.decorators.slow",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_graphics_others.TestSeriesPlots.test_lag_plot": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "numpy.testing.decorators.slow",
    "pandas.tests.test_graphics._check_plot_works",
    "pandas.tools.plotting.lag_plot"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_graphics_others.TestSeriesPlots.test_plot_fails_when_ax_differs_from_figure": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.testing.decorators.slow",
    "pandas.util.testing.assertRaises",
    "pylab.figure"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_graphics_others._check_plot_works": {
  "data": {
   "shadows": "pandas.tests.test_graphics._check_plot_works"
  },
  "type": "import"
 },
 "pandas.tests.test_graphics_others._ok_for_gaussian_kde": {
  "data": {
   "shadows": "pandas.tests.test_graphics._ok_for_gaussian_kde"
  },
  "type": "import"
 },
 "pandas.tests.test_graphics_others._skip_if_mpl_14_or_dev_boxplot": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "pandas.tests.test_graphics_others.matplotlib",
    "pandas.tests.test_graphics_others.nose",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_graphics_others.andrews_curves": {
  "data": {
   "shadows": "pandas.tools.plotting.andrews_curves"
  },
  "type": "import"
 },
 "pandas.tests.test_graphics_others.autocorrelation_plot": {
  "data": {
   "shadows": "pandas.tools.plotting.autocorrelation_plot"
  },
  "type": "import"
 },
 "pandas.tests.test_graphics_others.bootstrap_plot": {
  "data": {
   "shadows": "pandas.tools.plotting.bootstrap_plot"
  },
  "type": "import"
 },
 "pandas.tests.test_graphics_others.cm": {
  "data": {
   "shadows": "matplotlib.cm"
  },
  "type": "import"
 },
 "pandas.tests.test_graphics_others.curpath": {
  "data": {
   "shadows": "pandas.tests.test_graphics.curpath"
  },
  "type": "import"
 },
 "pandas.tests.test_graphics_others.figure": {
  "data": {
   "shadows": "pylab.figure"
  },
  "type": "import"
 },
 "pandas.tests.test_graphics_others.gcf": {
  "data": {
   "shadows": "matplotlib.pyplot.gcf"
  },
  "type": "import"
 },
 "pandas.tests.test_graphics_others.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pandas.tests.test_graphics_others.lag_plot": {
  "data": {
   "shadows": "pandas.tools.plotting.lag_plot"
  },
  "type": "import"
 },
 "pandas.tests.test_graphics_others.lmap": {
  "data": {
   "shadows": "pandas.compat.lmap"
  },
  "type": "import"
 },
 "pandas.tests.test_graphics_others.lzip": {
  "data": {
   "shadows": "pandas.compat.lzip"
  },
  "type": "import"
 },
 "pandas.tests.test_graphics_others.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "pandas.tests.test_graphics_others.mpl": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "pandas.tests.test_graphics_others.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tests.test_graphics_others.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.test_graphics_others.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.tests.test_graphics_others.parallel_coordinates": {
  "data": {
   "shadows": "pandas.tools.plotting.parallel_coordinates"
  },
  "type": "import"
 },
 "pandas.tests.test_graphics_others.plotting": {
  "data": {
   "shadows": "pandas.tools.plotting"
  },
  "type": "import"
 },
 "pandas.tests.test_graphics_others.radviz": {
  "data": {
   "shadows": "pandas.tools.plotting.radviz"
  },
  "type": "import"
 },
 "pandas.tests.test_graphics_others.randn": {
  "data": {
   "shadows": "numpy.random.randn"
  },
  "type": "import"
 },
 "pandas.tests.test_graphics_others.random": {
  "data": {
   "shadows": "numpy.random"
  },
  "type": "import"
 },
 "pandas.tests.test_graphics_others.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.test_graphics_others.read_csv": {
  "data": {
   "shadows": "pandas.read_csv"
  },
  "type": "import"
 },
 "pandas.tests.test_graphics_others.slow": {
  "data": {
   "shadows": "numpy.testing.decorators.slow"
  },
  "type": "import"
 },
 "pandas.tests.test_graphics_others.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "pandas.tests.test_graphics_others.subplot": {
  "data": {
   "shadows": "matplotlib.pyplot.subplot"
  },
  "type": "import"
 },
 "pandas.tests.test_graphics_others.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.test_graphics_others.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.tests.test_groupby.nose"
   ]
  },
  "type": "module"
 },
 "pandas.tests.test_groupby.Categorical": {
  "data": {
   "shadows": "pandas.core.api.Categorical"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.CategoricalIndex": {
  "data": {
   "shadows": "pandas.core.index.CategoricalIndex"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.DT": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.DataError": {
  "data": {
   "shadows": "pandas.core.groupby.DataError"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.DataFrame": {
  "data": {
   "shadows": "pandas.core.api.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.DatetimeIndex": {
  "data": {
   "shadows": "pandas.tseries.api.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.Decimal": {
  "data": {
   "shadows": "decimal.Decimal"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.Grouping": {
  "data": {
   "shadows": "pandas.core.groupby.Grouping"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.Index": {
  "data": {
   "shadows": "pandas.core.index.Index"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.MultiIndex": {
  "data": {
   "shadows": "pandas.core.index.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.OrderedDict": {
  "data": {
   "shadows": "pandas.compat.OrderedDict"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.Panel": {
  "data": {
   "shadows": "pandas.core.panel.Panel"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.PeriodIndex": {
  "data": {
   "shadows": "pandas.PeriodIndex"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.SpecificationError": {
  "data": {
   "shadows": "pandas.core.groupby.SpecificationError"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.TestGroupBy": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_groupby.TestGroupBy.setUp": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.randn",
    "pandas.core.api.DataFrame",
    "pandas.core.index.MultiIndex",
    "pandas.util.testing.getSeriesData",
    "pandas.util.testing.getTimeSeriesData",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test__cython_agg_general": {
  "data": {
   "lineno": 5949,
   "symbols_in_volume": [
    "BaseException",
    "float",
    "numpy.max",
    "numpy.mean",
    "numpy.median",
    "numpy.min",
    "numpy.prod",
    "numpy.random.randint",
    "numpy.random.randn",
    "numpy.sum",
    "numpy.var",
    "op",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_aaa_groupby_with_small_elem": {
  "data": {
   "lineno": 4507,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.TimeGrouper",
    "pandas.Timestamp",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_agg_api": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_agg_api.peak_to_peak": {
  "data": {
   "lineno": 641
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_agg_apply_corner": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "float",
    "numpy.float64",
    "numpy.nan",
    "numpy.sum",
    "pandas.Index",
    "pandas.Series",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_agg_callables": {
  "data": {
   "lineno": 3766,
   "symbols_in_volume": [
    "fn_class",
    "functools.partial",
    "numpy.int64",
    "numpy.sum",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_agg_callables.fn_class": {
  "data": {
   "lineno": 3770,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_agg_callables.fn_class.__call__": {
  "data": {
   "lineno": 3772,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_agg_compat": {
  "data": {
   "lineno": 1572,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.randn",
    "pandas.concat",
    "pandas.core.api.DataFrame",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_agg_consistency": {
  "data": {
   "lineno": 2881,
   "symbols_in_volume": [
    "datetime.datetime.date",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_agg_consistency.P1": {
  "data": {
   "lineno": 2885,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.percentile"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_agg_datetimes_mixed": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "datetime.datetime.strptime",
    "len",
    "numpy.sum",
    "pandas.core.api.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_agg_grouping_is_list_tuple": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "list",
    "numpy.mean",
    "pandas.core.groupby.Grouping",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeDataFrame",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_agg_item_by_item_raise_typeerror": {
  "data": {
   "lineno": 975,
   "symbols_in_volume": [
    "TypeError",
    "numpy.random.randint",
    "pandas.core.api.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_agg_item_by_item_raise_typeerror.raiseException": {
  "data": {
   "lineno": 980,
   "symbols_in_volume": [
    "TypeError",
    "pandas.formats.printing.pprint_thing"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_agg_multiple_functions_maintain_order": {
  "data": {
   "lineno": 3679,
   "symbols_in_volume": [
    "numpy.max",
    "numpy.mean",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_agg_multiple_functions_too_many_lambdas": {
  "data": {
   "lineno": 3701,
   "symbols_in_volume": [
    "pandas.core.groupby.SpecificationError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_agg_must_agg": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_agg_nested_dicts": {
  "data": {
   "lineno": 1600,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.mean",
    "numpy.random.randn",
    "numpy.sum",
    "pandas.MultiIndex.from_tuples",
    "pandas.concat",
    "pandas.core.api.DataFrame",
    "pandas.core.groupby.SpecificationError",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_agg_nested_dicts.f": {
  "data": {
   "lineno": 1612
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_agg_period_index": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "index",
    "len",
    "list",
    "numpy.random.rand",
    "numpy.random.randn",
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas.core.api.DataFrame",
    "pandas.core.api.DataFrame.from_items",
    "pandas.period_range",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_agg_python_multiindex": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "numpy.mean",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_agg_regression1": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "numpy.mean",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_agg_ser_multi_key": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_aggregate_api_consistency": {
  "data": {
   "lineno": 1501,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.mean",
    "numpy.random.randn",
    "numpy.sum",
    "pandas.concat",
    "pandas.core.api.DataFrame",
    "pandas.core.index.MultiIndex.from_product",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_aggregate_item_by_item": {
  "data": {
   "lineno": 940,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.array",
    "numpy.float64",
    "pandas.Series",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_aggregate_item_by_item.aggfun": {
  "data": {
   "lineno": 968
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_aggregate_str_func": {
  "data": {
   "lineno": 913,
   "symbols_in_volume": [
    "_check_results"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_aggregate_str_func._check_results": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": [
    "pandas.compat.OrderedDict",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_apply_categorical_data": {
  "data": {
   "lineno": 2984,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.arange",
    "numpy.mean",
    "numpy.nan",
    "pandas.Series",
    "pandas.core.api.Categorical",
    "pandas.core.api.DataFrame",
    "pandas.core.index.MultiIndex.from_product",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_apply_chunk_view": {
  "data": {
   "lineno": 2598,
   "symbols_in_volume": [
    "f",
    "pandas.compat.lrange",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_apply_concat_preserve_names": {
  "data": {
   "lineno": 2170
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_apply_concat_preserve_names.desc": {
  "data": {
   "lineno": 2173
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_apply_concat_preserve_names.desc2": {
  "data": {
   "lineno": 2178,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_apply_concat_preserve_names.desc3": {
  "data": {
   "lineno": 2185,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_apply_corner": {
  "data": {
   "lineno": 2942,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_apply_corner_cases": {
  "data": {
   "lineno": 3014,
   "symbols_in_volume": [
    "f",
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.core.api.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_apply_corner_cases.f": {
  "data": {
   "lineno": 3025
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_apply_describe_bug": {
  "data": {
   "lineno": 814
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_apply_frame_concat_series": {
  "data": {
   "lineno": 2529,
   "symbols_in_volume": [
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_apply_frame_concat_series.trans": {
  "data": {
   "lineno": 2530
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_apply_frame_concat_series.trans2": {
  "data": {
   "lineno": 2533
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_apply_frame_to_series": {
  "data": {
   "lineno": 2522,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_apply_issues": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": [
    "object",
    "pandas.Index",
    "pandas.Series",
    "pandas.compat.StringIO",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_apply_multiindex_fail": {
  "data": {
   "lineno": 2923,
   "symbols_in_volume": [
    "f",
    "index",
    "numpy.arange",
    "numpy.tile",
    "pandas.core.api.DataFrame",
    "pandas.core.index.MultiIndex.from_arrays",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_apply_multiindex_fail.f": {
  "data": {
   "lineno": 2930
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_apply_multikey_corner": {
  "data": {
   "lineno": 2552,
   "symbols_in_volume": [
    "f",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_apply_multikey_corner.f": {
  "data": {
   "lineno": 2555
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_apply_no_name_column_conflict": {
  "data": {
   "lineno": 2610,
   "symbols_in_volume": [
    "pandas.compat.lrange",
    "pandas.core.api.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_apply_series_to_frame": {
  "data": {
   "lineno": 2503,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.Series",
    "pandas.bdate_range",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_apply_series_to_frame.f": {
  "data": {
   "lineno": 2504,
   "symbols_in_volume": [
    "numpy.log",
    "pandas.core.api.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_apply_series_yield_constant": {
  "data": {
   "lineno": 2518,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_apply_transform": {
  "data": {
   "lineno": 2546,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_apply_typecast_fail": {
  "data": {
   "lineno": 2905,
   "symbols_in_volume": [
    "f",
    "numpy.arange",
    "numpy.tile",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_apply_typecast_fail.f": {
  "data": {
   "lineno": 2911
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_apply_use_categorical_name": {
  "data": {
   "lineno": 2971,
   "symbols_in_volume": [
    "pandas.qcut"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_apply_use_categorical_name.get_stats": {
  "data": {
   "lineno": 2975
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_apply_with_mixed_dtype": {
  "data": {
   "lineno": 3209,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_apply_without_copy": {
  "data": {
   "lineno": 2947,
   "symbols_in_volume": [
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_apply_without_copy.filt1": {
  "data": {
   "lineno": 2955
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_apply_without_copy.filt2": {
  "data": {
   "lineno": 2961
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_as_index_series_return_frame": {
  "data": {
   "lineno": 1945,
   "symbols_in_volume": [
    "Exception",
    "numpy.sum",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_attr_wrapper": {
  "data": {
   "lineno": 1323,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "numpy.std",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_basic": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "checkit"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_basic.checkit": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "Exception",
    "len",
    "numpy.arange",
    "numpy.mean",
    "numpy.random.shuffle",
    "numpy.std",
    "numpy.sum",
    "pandas.core.series.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_basic_regression": {
  "data": {
   "lineno": 987,
   "symbols_in_volume": [
    "len",
    "numpy.random.random",
    "pandas.Series",
    "pandas.compat.lrange"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_builtins_apply": {
  "data": {
   "lineno": 2208,
   "symbols_in_volume": [
    "getattr",
    "len",
    "max",
    "min",
    "numpy",
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_column_select_via_attr": {
  "data": {
   "lineno": 3546,
   "symbols_in_volume": [
    "numpy.mean",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_consistency_name": {
  "data": {
   "lineno": 3093,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.randn",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_convert_objects_leave_decimal_alone": {
  "data": {
   "lineno": 3158,
   "symbols_in_volume": [
    "decimal.Decimal",
    "numpy.array",
    "numpy.object_",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_convert_objects_leave_decimal_alone.convert_fast": {
  "data": {
   "lineno": 3165,
   "symbols_in_volume": [
    "decimal.Decimal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_convert_objects_leave_decimal_alone.convert_force_pure": {
  "data": {
   "lineno": 3168,
   "symbols_in_volume": [
    "decimal.Decimal",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_count": {
  "data": {
   "lineno": 2729,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "numpy.random.choice",
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.core.api.DataFrame",
    "pandas.core.api.DataFrame.count",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "string.ascii_lowercase"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_count_cross_type": {
  "data": {
   "lineno": 2791,
   "symbols_in_volume": [
    "numpy.hstack",
    "numpy.nan",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_count_object": {
  "data": {
   "lineno": 2775,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_count_uses_size_on_exception": {
  "data": {
   "lineno": 5928,
   "symbols_in_volume": [
    "RaisingObject",
    "list",
    "pandas.Index",
    "pandas.compat.range",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_count_uses_size_on_exception.RaisingObject": {
  "data": {
   "lineno": 5932,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_count_uses_size_on_exception.RaisingObject.__eq__": {
  "data": {
   "lineno": 5938,
   "symbols_in_volume": [
    "RaisingObjectException"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_count_uses_size_on_exception.RaisingObject.__init__": {
  "data": {
   "lineno": 5934,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_count_uses_size_on_exception.RaisingObjectException": {
  "data": {
   "lineno": 5929,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_cumcount": {
  "data": {
   "lineno": 4933,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_cumcount_dupe_index": {
  "data": {
   "lineno": 4953,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_cumcount_empty": {
  "data": {
   "lineno": 4943,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_cumcount_groupby_not_col": {
  "data": {
   "lineno": 4976,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_cumcount_mi": {
  "data": {
   "lineno": 4964,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.core.api.DataFrame",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_cython_agg_boolean": {
  "data": {
   "lineno": 2292,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.random.randint",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_cython_agg_frame_columns": {
  "data": {
   "lineno": 2326,
   "symbols_in_volume": [
    "pandas.core.api.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_cython_agg_nothing_to_agg": {
  "data": {
   "lineno": 2300,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.core.api.DataFrame",
    "pandas.core.groupby.DataError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_cython_agg_nothing_to_agg_with_dates": {
  "data": {
   "lineno": 2309,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.core.api.DataFrame",
    "pandas.core.groupby.DataError",
    "pandas.date_range",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_cython_api2": {
  "data": {
   "lineno": 2856,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_cython_fail_agg": {
  "data": {
   "lineno": 2494,
   "symbols_in_volume": [
    "numpy.sum",
    "pandas.Series",
    "pandas.bdate_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_cython_group_transform_algos": {
  "data": {
   "lineno": 5971,
   "symbols_in_volume": [
    "np_op",
    "numpy.array",
    "numpy.cumproduct",
    "numpy.cumsum",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.nan",
    "numpy.timedelta64",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "numpy.zeros_like",
    "pandas.algos.group_cumprod_float64",
    "pandas.algos.group_cumsum",
    "pd_op"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_cython_grouper_series_bug_noncontig": {
  "data": {
   "lineno": 3136,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.nan",
    "numpy.tile",
    "pandas.Series",
    "pandas.Series.median",
    "pandas.compat.lrange"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_cython_median": {
  "data": {
   "lineno": 4250,
   "symbols_in_volume": [
    "float",
    "numpy.median",
    "numpy.nan",
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.core.api.DataFrame",
    "pandas.core.nanops.nanmedian",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_cython_transform": {
  "data": {
   "lineno": 6016,
   "symbols_in_volume": [
    "dict",
    "f",
    "float",
    "getattr",
    "list",
    "numpy.nan",
    "numpy.random.randint",
    "numpy.random.randn",
    "op",
    "pandas.MultiIndex.from_product",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.concat",
    "pandas.core.api.DataFrame",
    "pandas.core.groupby.DataError",
    "pandas.date_range",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_cythonized_aggers": {
  "data": {
   "lineno": 2235,
   "symbols_in_volume": [
    "_testit",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.core.api.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_cythonized_aggers._testit": {
  "data": {
   "lineno": 2242,
   "symbols_in_volume": [
    "getattr",
    "op",
    "pandas.core.api.DataFrame",
    "pandas.util.testing._incompat_bottleneck_version",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_datetime_count": {
  "data": {
   "lineno": 5904,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.core.api.DataFrame",
    "pandas.core.index.Index",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_dictify": {
  "data": {
   "lineno": 3340,
   "symbols_in_volume": [
    "dict",
    "iter"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_dispatch_transform": {
  "data": {
   "lineno": 1153,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_dont_clobber_name_column": {
  "data": {
   "lineno": 3584,
   "symbols_in_volume": [
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_empty_groups": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_empty_groups_corner": {
  "data": {
   "lineno": 2151,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.mean",
    "numpy.random.randn",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_fast_apply": {
  "data": {
   "lineno": 3183,
   "symbols_in_volume": [
    "f",
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.core.api.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_fast_apply.f": {
  "data": {
   "lineno": 3196
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_fill_constistency": {
  "data": {
   "lineno": 5515,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.MultiIndex.from_product",
    "pandas.core.api.DataFrame",
    "pandas.core.index.Index",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_filter_against_workaround": {
  "data": {
   "lineno": 5132,
   "symbols_in_volume": [
    "f",
    "len",
    "list",
    "numpy.array",
    "numpy.random.randint",
    "numpy.random.random",
    "numpy.random.seed",
    "numpy.round",
    "pandas.Series",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "string.ascii_lowercase"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_filter_and_transform_with_multiple_non_unique_int_index": {
  "data": {
   "lineno": 5319,
   "symbols_in_volume": [
    "index",
    "len",
    "numpy.nan",
    "pandas.Series",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_filter_and_transform_with_non_unique_float_index": {
  "data": {
   "lineno": 5359,
   "symbols_in_volume": [
    "float",
    "index",
    "len",
    "numpy.array",
    "numpy.nan",
    "pandas.Series",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_filter_and_transform_with_non_unique_int_index": {
  "data": {
   "lineno": 5279,
   "symbols_in_volume": [
    "index",
    "len",
    "numpy.nan",
    "pandas.Series",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_filter_and_transform_with_non_unique_string_index": {
  "data": {
   "lineno": 5442,
   "symbols_in_volume": [
    "index",
    "len",
    "list",
    "numpy.nan",
    "pandas.Series",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_filter_and_transform_with_non_unique_timestamp_index": {
  "data": {
   "lineno": 5399,
   "symbols_in_volume": [
    "index",
    "len",
    "numpy.nan",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_filter_bad_shapes": {
  "data": {
   "lineno": 5100,
   "symbols_in_volume": [
    "TypeError",
    "f",
    "list",
    "numpy.arange",
    "numpy.outer",
    "pandas.core.api.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_filter_condition_raises": {
  "data": {
   "lineno": 5077,
   "symbols_in_volume": [
    "TypeError",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_filter_condition_raises.raise_if_sum_is_zero": {
  "data": {
   "lineno": 5078,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_filter_enforces_scalarness": {
  "data": {
   "lineno": 5489,
   "symbols_in_volume": [
    "TypeError",
    "pandas.DataFrame",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_filter_has_access_to_grouped_cols": {
  "data": {
   "lineno": 5482,
   "symbols_in_volume": [
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_filter_maintains_ordering": {
  "data": {
   "lineno": 5211,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_filter_mixed_df": {
  "data": {
   "lineno": 5032,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_filter_multi_column_df": {
  "data": {
   "lineno": 5023,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_filter_multiple_timestamp": {
  "data": {
   "lineno": 5253,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_filter_nan_is_false": {
  "data": {
   "lineno": 5120,
   "symbols_in_volume": [
    "f",
    "list",
    "numpy.arange",
    "numpy.nan",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_filter_non_bool_raises": {
  "data": {
   "lineno": 5502,
   "symbols_in_volume": [
    "TypeError",
    "pandas.DataFrame",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_filter_out_all_groups": {
  "data": {
   "lineno": 5040,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_filter_out_all_groups_in_df": {
  "data": {
   "lineno": 5063,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_filter_out_no_groups": {
  "data": {
   "lineno": 5051,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_filter_series": {
  "data": {
   "lineno": 4987,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_filter_single_column_df": {
  "data": {
   "lineno": 5005,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_filter_using_len": {
  "data": {
   "lineno": 5183,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.arange",
    "pandas.Series",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_filter_with_axis_in_groupby": {
  "data": {
   "lineno": 5090,
   "symbols_in_volume": [
    "index",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.compat.range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_first_last_max_min_on_time_data": {
  "data": {
   "lineno": 6277,
   "symbols_in_volume": [
    "datetime.timedelta",
    "numpy.nan",
    "pandas.core.api.DataFrame",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_first_last_nth": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.core.api.DataFrame",
    "pandas.core.common.isnull",
    "pandas.core.index.Index",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_first_last_nth_dtypes": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "pandas.compat.lrange",
    "pandas.core.index.Index",
    "pandas.core.series.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_frame_describe_multikey": {
  "data": {
   "lineno": 1393,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_frame_groupby": {
  "data": {
   "lineno": 1408,
   "symbols_in_volume": [
    "len",
    "numpy.mean",
    "pandas.compat.iteritems",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_frame_groupby_columns": {
  "data": {
   "lineno": 1458,
   "symbols_in_volume": [
    "len",
    "numpy.mean",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_frame_multi_key_function_list": {
  "data": {
   "lineno": 1727,
   "symbols_in_volume": [
    "isinstance",
    "numpy.mean",
    "numpy.random.randn",
    "numpy.std",
    "pandas.core.api.DataFrame",
    "pandas.core.index.MultiIndex",
    "pandas.tools.merge.concat",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_frame_set_name_single": {
  "data": {
   "lineno": 1476,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_gb_apply_list_of_unequal_len_arrays": {
  "data": {
   "lineno": 4475,
   "symbols_in_volume": [
    "noddy",
    "pandas.core.api.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_gb_apply_list_of_unequal_len_arrays.noddy": {
  "data": {
   "lineno": 4487,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_get_group": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "pandas.Timestamp",
    "pandas.core.api.DataFrame",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.makePanel",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_get_group_grouped_by_tuple": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "pandas.core.api.DataFrame",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_getitem_list_of_columns": {
  "data": {
   "lineno": 3661,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_2d_malformed": {
  "data": {
   "lineno": 3405,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.compat.lrange",
    "pandas.core.api.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_aggregation_mixed_dtype": {
  "data": {
   "lineno": 3223,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.core.api.DataFrame",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_apply_all_none": {
  "data": {
   "lineno": 6264,
   "symbols_in_volume": [
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_apply_all_none.test_func": {
  "data": {
   "lineno": 6270
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_args": {
  "data": {
   "lineno": 2428,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_args.j": {
  "data": {
   "lineno": 2432
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_args.k": {
  "data": {
   "lineno": 2439
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_as_index_agg": {
  "data": {
   "lineno": 1784,
   "symbols_in_volume": [
    "getattr",
    "numpy.mean",
    "numpy.random.randint",
    "numpy.sum",
    "pandas.Series",
    "pandas.compat.OrderedDict",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_as_index_apply": {
  "data": {
   "lineno": 2010,
   "symbols_in_volume": [
    "list",
    "pandas.compat.range",
    "pandas.core.api.DataFrame",
    "pandas.core.index.Index",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_as_index_corner": {
  "data": {
   "lineno": 2003,
   "symbols_in_volume": [
    "TypeError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_as_index_cython": {
  "data": {
   "lineno": 1972,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.compat.lzip",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_as_index_series_scalar": {
  "data": {
   "lineno": 1994,
   "symbols_in_volume": [
    "len",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_blacklist": {
  "data": {
   "lineno": 5759,
   "symbols_in_volume": [
    "AttributeError",
    "dir",
    "getattr",
    "list",
    "numpy.array",
    "numpy.random.randint",
    "numpy.random.random",
    "pandas.Series",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assertRaisesRegexp",
    "string.ascii_lowercase",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_bounds_check": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.array",
    "pandas.algos.groupby_object"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_categorical": {
  "data": {
   "lineno": 3926,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.asarray",
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.core.api.Categorical",
    "pandas.core.api.Categorical.from_codes",
    "pandas.core.api.DataFrame",
    "pandas.core.index.CategoricalIndex",
    "pandas.core.index.Index",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_categorical_index": {
  "data": {
   "lineno": 4003,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "numpy.random.randint",
    "numpy.repeat",
    "pandas.core.api.Categorical.from_codes",
    "pandas.core.api.DataFrame",
    "pandas.core.index.CategoricalIndex",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_categorical_no_compress": {
  "data": {
   "lineno": 4266,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.api.Categorical",
    "pandas.core.api.Categorical.from_codes",
    "pandas.core.api.DataFrame",
    "pandas.core.index.CategoricalIndex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_categorical_two_columns": {
  "data": {
   "lineno": 6214,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "pandas.DataFrame",
    "pandas.core.api.DataFrame",
    "pandas.core.index.MultiIndex.from_product",
    "pandas.cut",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_categorical_unequal_len": {
  "data": {
   "lineno": 4408,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.Series",
    "pandas.cut"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_complex": {
  "data": {
   "lineno": 2473,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_cumprod": {
  "data": {
   "lineno": 6101,
   "symbols_in_volume": [
    "float",
    "pandas.DataFrame",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_datetime64_32_bit": {
  "data": {
   "lineno": 4399,
   "symbols_in_volume": [
    "min",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.compat.range",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_datetime_categorical": {
  "data": {
   "lineno": 3962,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.asarray",
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.core.api.Categorical.from_codes",
    "pandas.core.api.DataFrame",
    "pandas.core.index.CategoricalIndex",
    "pandas.core.index.Index",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_describe_categorical_columns": {
  "data": {
   "lineno": 4029,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.CategoricalIndex",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_categorical_equal",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_dict_mapping": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "list",
    "numpy.mean",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_dtype_inference_empty": {
  "data": {
   "lineno": 3248,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float64",
    "pandas.Series",
    "pandas.core.api.DataFrame",
    "pandas.core.index.Index",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_duplicated_column_errormsg": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "ValueError",
    "pandas.compat.range",
    "pandas.core.api.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_first_datetime64": {
  "data": {
   "lineno": 4377,
   "symbols_in_volume": [
    "issubclass",
    "numpy.datetime64",
    "pandas.core.api.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_grouper": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_grouper_f_sanity_checked": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_groups_datetimeindex": {
  "data": {
   "lineno": 4059,
   "symbols_in_volume": [
    "datetime.datetime",
    "list",
    "numpy.arange",
    "pandas.core.api.DataFrame",
    "pandas.tseries.api.DatetimeIndex",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_groups_datetimeindex_tz": {
  "data": {
   "lineno": 4072,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DatetimeIndex",
    "pandas.Timestamp",
    "pandas.core.api.DataFrame",
    "pandas.core.index.Index",
    "pandas.core.index.MultiIndex.from_arrays",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_groups_periods": {
  "data": {
   "lineno": 4153,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.core.api.DataFrame",
    "pandas.core.index.Index",
    "pandas.core.index.MultiIndex.from_arrays",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_head_tail": {
  "data": {
   "lineno": 2043,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_keys_same_size_as_index": {
  "data": {
   "lineno": 3274,
   "symbols_in_volume": [
    "index",
    "pandas.DataFrame",
    "pandas.Grouper",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_level": {
  "data": {
   "lineno": 2352,
   "symbols_in_volume": [
    "ValueError",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_level_0_nonmulti": {
  "data": {
   "lineno": 2465,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.core.index.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_level_apply": {
  "data": {
   "lineno": 2417
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_level_index_names": {
  "data": {
   "lineno": 2389,
   "symbols_in_volume": [
    "ValueError",
    "pandas.compat.lrange",
    "pandas.core.api.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_level_mapper": {
  "data": {
   "lineno": 2446,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_level_with_nas": {
  "data": {
   "lineno": 2396,
   "symbols_in_volume": [
    "index",
    "numpy.arange",
    "pandas.Series",
    "pandas.core.index.MultiIndex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_levels_and_columns": {
  "data": {
   "lineno": 4459,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.int64",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_list_infer_array_like": {
  "data": {
   "lineno": 3259,
   "symbols_in_volume": [
    "Exception",
    "list",
    "numpy.random.randn",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_max_datetime64": {
  "data": {
   "lineno": 4391,
   "symbols_in_volume": [
    "dict",
    "numpy.arange",
    "pandas.Timestamp",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_multi_corner": {
  "data": {
   "lineno": 2110,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_multi_timezone": {
  "data": {
   "lineno": 4115,
   "symbols_in_volume": [
    "object",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.compat.StringIO",
    "pandas.read_csv",
    "pandas.to_datetime",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_multiindex_missing_pair": {
  "data": {
   "lineno": 4418,
   "symbols_in_volume": [
    "pandas.core.api.DataFrame",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_multiindex_not_lexsorted": {
  "data": {
   "lineno": 4433,
   "symbols_in_volume": [
    "pandas.core.api.DataFrame",
    "pandas.core.common.PerformanceWarning",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_multiple_columns": {
  "data": {
   "lineno": 1749,
   "symbols_in_volume": [
    "_check_op",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_multiple_columns._check_op": {
  "data": {
   "lineno": 1753,
   "symbols_in_volume": [
    "collections.defaultdict",
    "dict",
    "op",
    "pandas.compat.iteritems",
    "pandas.core.api.DataFrame",
    "pandas.core.panel.Panel.fromDict",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_multiple_key": {
  "data": {
   "lineno": 2092,
   "symbols_in_volume": [
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_name_propagation": {
  "data": {
   "lineno": 3107
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_name_propagation.summarize": {
  "data": {
   "lineno": 3109,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_name_propagation.summarize_random_name": {
  "data": {
   "lineno": 3112,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_nat_exclude": {
  "data": {
   "lineno": 3294,
   "symbols_in_volume": [
    "KeyError",
    "len",
    "numpy.array",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas.compat.zip",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_non_arithmetic_agg_intlike_precision": {
  "data": {
   "lineno": 4351,
   "symbols_in_volume": [
    "getattr",
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.compat.iteritems"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_non_arithmetic_agg_types": {
  "data": {
   "lineno": 4297,
   "symbols_in_volume": [
    "getattr",
    "pandas.DataFrame",
    "pandas.compat.iteritems",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_nonobject_dtype": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "len",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_nonobject_dtype.max_value": {
  "data": {
   "lineno": 528
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_nonstring_columns": {
  "data": {
   "lineno": 3129,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.compat.range",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_one_row": {
  "data": {
   "lineno": 3287,
   "symbols_in_volume": [
    "KeyError",
    "list",
    "numpy.random.randn",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_preserves_sort": {
  "data": {
   "lineno": 6298,
   "symbols_in_volume": [
    "pandas.core.api.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_preserves_sort.test_sort": {
  "data": {
   "lineno": 6319,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_reindex_inside_function": {
  "data": {
   "lineno": 4193,
   "symbols_in_volume": [
    "agg_before",
    "datetime.datetime",
    "numpy.arange",
    "numpy.max",
    "pandas.core.api.DataFrame",
    "pandas.tseries.api.DatetimeIndex",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_reindex_inside_function.afunc": {
  "data": {
   "lineno": 4216,
   "symbols_in_volume": [
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_reindex_inside_function.agg_before": {
  "data": {
   "lineno": 4201
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_reindex_inside_function.agg_before._func": {
  "data": {
   "lineno": 4206,
   "symbols_in_volume": [
    "func",
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_return_type": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "dict",
    "numpy.arange",
    "numpy.nan",
    "pandas.NaT",
    "pandas.Series",
    "pandas.core.api.DataFrame",
    "pandas.date_range",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_return_type.f": {
  "data": {
   "lineno": 618
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_return_type.func": {
  "data": {
   "lineno": 561
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_selection_with_methods": {
  "data": {
   "lineno": 5561,
   "symbols_in_volume": [
    "getattr",
    "len",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_series_indexed_differently": {
  "data": {
   "lineno": 2619,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.core.index.Index",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_series_with_name": {
  "data": {
   "lineno": 3071
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_sort_categorical": {
  "data": {
   "lineno": 3820,
   "symbols_in_volume": [
    "index",
    "pandas.core.api.Categorical",
    "pandas.core.api.DataFrame",
    "pandas.core.index.CategoricalIndex",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_sort_categorical_datetimelike": {
  "data": {
   "lineno": 3857,
   "symbols_in_volume": [
    "datetime.datetime",
    "index",
    "pandas.core.api.Categorical",
    "pandas.core.api.DataFrame",
    "pandas.core.index.CategoricalIndex",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_sort_multi": {
  "data": {
   "lineno": 3508,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.compat.lmap",
    "pandas.core.api.DataFrame",
    "pandas.core.common._asarray_tuplesafe",
    "pandas.tests.test_groupby._check_groupby",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_sort_multiindex_series": {
  "data": {
   "lineno": 3909,
   "symbols_in_volume": [
    "index",
    "pandas.Series",
    "pandas.core.index.MultiIndex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_timedelta_cython_count": {
  "data": {
   "lineno": 2317,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "pandas.Index",
    "pandas.Series",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_transform_with_int": {
  "data": {
   "lineno": 1236,
   "symbols_in_volume": [
    "dict",
    "numpy.nan",
    "pandas.Series",
    "pandas.core.api.DataFrame",
    "pandas.tools.merge.concat",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_unstack_categorical": {
  "data": {
   "lineno": 4040,
   "symbols_in_volume": [
    "list",
    "pandas.CategoricalIndex",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing.assert_categorical_equal",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_whitelist": {
  "data": {
   "lineno": 5608,
   "symbols_in_volume": [
    "frozenset",
    "getattr",
    "list",
    "numpy.array",
    "numpy.random.randint",
    "numpy.random.random",
    "pandas.Series",
    "pandas.compat.zip",
    "pandas.core.api.DataFrame",
    "string.ascii_lowercase",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_whitelist_deprecations": {
  "data": {
   "lineno": 5710,
   "symbols_in_volume": [
    "FutureWarning",
    "list",
    "numpy.array",
    "numpy.random.randint",
    "numpy.random.random",
    "pandas.Series",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_produces_warning",
    "string.ascii_lowercase"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_with_empty": {
  "data": {
   "lineno": 4499,
   "symbols_in_volume": [
    "index",
    "iter",
    "next",
    "pandas.DatetimeIndex",
    "pandas.Series",
    "pandas.tseries.resample.TimeGrouper"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_with_hier_columns": {
  "data": {
   "lineno": 2630,
   "symbols_in_volume": [
    "index",
    "list",
    "numpy.mean",
    "numpy.random.randn",
    "pandas.compat.zip",
    "pandas.core.api.DataFrame",
    "pandas.core.index.Index",
    "pandas.core.index.MultiIndex.from_tuples"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_with_timegrouper": {
  "data": {
   "lineno": 4583,
   "symbols_in_volume": [
    "datetime.datetime.datetime",
    "numpy.array",
    "numpy.nan",
    "pandas.TimeGrouper",
    "pandas.core.api.DataFrame",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_with_timegrouper_methods": {
  "data": {
   "lineno": 4625,
   "symbols_in_volume": [
    "datetime.datetime.datetime",
    "dict",
    "isinstance",
    "len",
    "pandas.DataFrame",
    "pandas.TimeGrouper",
    "pandas.core.groupby.BinGrouper"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_with_timezone_selection": {
  "data": {
   "lineno": 4558,
   "symbols_in_volume": [
    "numpy.random.randint",
    "numpy.random.seed",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groupby_wrong_multi_labels": {
  "data": {
   "lineno": 3054,
   "symbols_in_volume": [
    "numpy.mean",
    "pandas.compat.StringIO",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_grouper_creation_bug": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "pandas.Grouper",
    "pandas.MultiIndex.from_product",
    "pandas.Timestamp",
    "pandas.compat.range",
    "pandas.core.api.DataFrame",
    "pandas.core.index.Index",
    "pandas.core.series.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_grouper_getting_correct_binner": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "list",
    "pandas.Grouper",
    "pandas.MultiIndex.from_product",
    "pandas.core.api.DataFrame",
    "pandas.core.index.MultiIndex.from_product",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_grouper_index_types": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "index",
    "len",
    "list",
    "numpy.arange",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.makeDateIndex",
    "pandas.util.testing.makeFloatIndex",
    "pandas.util.testing.makeIntIndex",
    "pandas.util.testing.makePeriodIndex",
    "pandas.util.testing.makeStringIndex",
    "pandas.util.testing.makeUnicodeIndex",
    "reversed"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_grouper_iter": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_grouper_multilevel_freq": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "datetime.date.today",
    "datetime.timedelta",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.Grouper",
    "pandas.Index",
    "pandas.MultiIndex.from_product",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_grouping_error_on_multidim_input": {
  "data": {
   "lineno": 802,
   "symbols_in_volume": [
    "ValueError",
    "pandas.core.groupby.Grouping"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_grouping_is_iterable": {
  "data": {
   "lineno": 1448
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_grouping_labels": {
  "data": {
   "lineno": 2489,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_grouping_ndarray": {
  "data": {
   "lineno": 2873,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_groups": {
  "data": {
   "lineno": 898,
   "symbols_in_volume": [
    "pandas.compat.iteritems"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_handle_dict_return_value": {
  "data": {
   "lineno": 3648,
   "symbols_in_volume": [
    "f",
    "pandas.Series",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_handle_dict_return_value.f": {
  "data": {
   "lineno": 3649
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_handle_dict_return_value.g": {
  "data": {
   "lineno": 3652,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_index_label_overlaps_location": {
  "data": {
   "lineno": 5533,
   "symbols_in_volume": [
    "float",
    "len",
    "list",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_indices_concatenation_order": {
  "data": {
   "lineno": 1273,
   "symbols_in_volume": [
    "AssertionError",
    "pandas.compat.lrange",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_indices_concatenation_order.f1": {
  "data": {
   "lineno": 1277,
   "symbols_in_volume": [
    "pandas.core.api.DataFrame",
    "pandas.core.index.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_indices_concatenation_order.f2": {
  "data": {
   "lineno": 1288,
   "symbols_in_volume": [
    "pandas.core.api.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_indices_concatenation_order.f3": {
  "data": {
   "lineno": 1296,
   "symbols_in_volume": [
    "pandas.core.api.DataFrame",
    "pandas.core.index.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_int32_overflow": {
  "data": {
   "lineno": 3416,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.random.randn",
    "pandas.core.api.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_int64_overflow": {
  "data": {
   "lineno": 3430,
   "symbols_in_volume": [
    "aggr",
    "collections.defaultdict",
    "len",
    "list",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.mean",
    "numpy.median",
    "numpy.random.choice",
    "numpy.random.permutation",
    "numpy.random.randint",
    "numpy.random.randn",
    "numpy.vstack",
    "pandas.DataFrame.from_dict",
    "pandas.compat.iteritems",
    "pandas.compat.map",
    "pandas.compat.range",
    "pandas.compat.zip",
    "pandas.core.api.DataFrame",
    "pandas.core.common._asarray_tuplesafe",
    "pandas.core.groupby._int64_overflow_possible",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_int64_overflow.aggr": {
  "data": {
   "lineno": 3499,
   "symbols_in_volume": [
    "f",
    "numpy.fromiter",
    "numpy.vstack",
    "pandas.compat.map",
    "pandas.core.api.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_intercept_builtin_sum": {
  "data": {
   "lineno": 3536,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.builtins.sum",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_len": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": [
    "dict",
    "len",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing.makeTimeDataFrame",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_level_preserve_order": {
  "data": {
   "lineno": 2484,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_lexsort_indexer": {
  "data": {
   "lineno": 5807,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "numpy.testing.assert_equal",
    "pandas.compat.range",
    "pandas.core.groupby._lexsort_indexer"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_lower_int_prec_count": {
  "data": {
   "lineno": 5913,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.int16",
    "numpy.int8",
    "numpy.uint32",
    "pandas.Index",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_max_min_non_numeric": {
  "data": {
   "lineno": 2280,
   "symbols_in_volume": [
    "pandas.core.api.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_max_nan_bug": {
  "data": {
   "lineno": 6149,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_more_flexible_frame_multi_function": {
  "data": {
   "lineno": 3707,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.std",
    "pandas.compat.OrderedDict",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_more_flexible_frame_multi_function.bar": {
  "data": {
   "lineno": 3733,
   "symbols_in_volume": [
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_more_flexible_frame_multi_function.foo": {
  "data": {
   "lineno": 3730,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_mulitindex_passthru": {
  "data": {
   "lineno": 1928,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_multi_func": {
  "data": {
   "lineno": 1699,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.randn",
    "numpy.sum",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_multi_function_flexible_mix": {
  "data": {
   "lineno": 3745,
   "symbols_in_volume": [
    "pandas.compat.OrderedDict",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_multi_iter": {
  "data": {
   "lineno": 1633,
   "symbols_in_volume": [
    "enumerate",
    "list",
    "numpy.arange",
    "numpy.array",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_multi_iter_frame": {
  "data": {
   "lineno": 1649,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "list",
    "numpy.array",
    "numpy.random.randn",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_multi_iter_panel": {
  "data": {
   "lineno": 1687,
   "symbols_in_volume": [
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.makePanel"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_multi_key_multiple_functions": {
  "data": {
   "lineno": 1719,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.std",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_multifunc_select_col_integer_cols": {
  "data": {
   "lineno": 1938,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_multifunc_sum_bug": {
  "data": {
   "lineno": 3638,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float64",
    "pandas.core.api.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_multiindex_columns_empty_level": {
  "data": {
   "lineno": 4226,
   "symbols_in_volume": [
    "pandas.compat.long",
    "pandas.core.api.DataFrame",
    "pandas.core.index.MultiIndex.from_tuples"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_multiple_functions_tuples_and_non_tuples": {
  "data": {
   "lineno": 3687,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_mutate_groups": {
  "data": {
   "lineno": 2562,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.compat.lmap",
    "pandas.compat.lrange",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_mutate_groups.f_copy": {
  "data": {
   "lineno": 2574
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_mutate_groups.f_no_copy": {
  "data": {
   "lineno": 2579
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_nargsort": {
  "data": {
   "lineno": 5831,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "numpy.argsort",
    "numpy.array",
    "numpy.nan",
    "numpy.testing.assert_equal",
    "pandas.compat.range",
    "pandas.core.groupby._nargsort",
    "pandas.tests.test_groupby.nose"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_nlargest": {
  "data": {
   "lineno": 6162,
   "symbols_in_volume": [
    "FutureWarning",
    "list",
    "pandas.Series",
    "pandas.core.index.MultiIndex.from_arrays",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_no_dummy_key_names": {
  "data": {
   "lineno": 3810
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_no_mutate_but_looks_like": {
  "data": {
   "lineno": 2587,
   "symbols_in_volume": [
    "pandas.compat.range",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_no_nonsense_name": {
  "data": {
   "lineno": 3616,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_non_cython_api": {
  "data": {
   "lineno": 2805,
   "symbols_in_volume": [
    "dict",
    "numpy.nan",
    "pandas.core.api.DataFrame",
    "pandas.tools.merge.concat",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_nonsense_func": {
  "data": {
   "lineno": 2204,
   "symbols_in_volume": [
    "Exception",
    "pandas.core.api.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_nsmallest": {
  "data": {
   "lineno": 6181,
   "symbols_in_volume": [
    "FutureWarning",
    "list",
    "pandas.Series",
    "pandas.core.index.MultiIndex.from_arrays",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_nth": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randint",
    "pandas.core.api.DataFrame",
    "pandas.date_range",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_nth_multi_index": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_nth_multi_index_as_expected": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "pandas.core.api.DataFrame",
    "pandas.core.index.MultiIndex.from_arrays",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_numpy_groupby": {
  "data": {
   "lineno": 3389,
   "symbols_in_volume": [
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.core.api.DataFrame",
    "pandas.core.groupby.numpy_groupby",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_nunique_with_object": {
  "data": {
   "lineno": 6324,
   "symbols_in_volume": [
    "index",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.core.index.MultiIndex.from_arrays",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_omit_nuisance": {
  "data": {
   "lineno": 2121,
   "symbols_in_volume": [
    "TypeError",
    "datetime.datetime.now",
    "numpy.mean",
    "numpy.sum",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_omit_nuisance_python_multiple": {
  "data": {
   "lineno": 2144,
   "symbols_in_volume": [
    "numpy.mean",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_ops_general": {
  "data": {
   "lineno": 6119,
   "symbols_in_volume": [
    "BaseException",
    "ImportError",
    "float",
    "getattr",
    "numpy.max",
    "numpy.mean",
    "numpy.median",
    "numpy.min",
    "numpy.prod",
    "numpy.random.randint",
    "numpy.random.randn",
    "numpy.size",
    "numpy.std",
    "numpy.sum",
    "numpy.var",
    "op",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "scipy.stats.sem"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_panel_groupby": {
  "data": {
   "lineno": 3366,
   "symbols_in_volume": [
    "list",
    "pandas.util.testing.add_nans",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.makePanel",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_pass_args_kwargs": {
  "data": {
   "lineno": 2661,
   "symbols_in_volume": [
    "f",
    "numpy.percentile",
    "pandas.core.api.DataFrame.quantile",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_pass_args_kwargs.f": {
  "data": {
   "lineno": 2664,
   "symbols_in_volume": [
    "numpy.percentile"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_rank_apply": {
  "data": {
   "lineno": 3556,
   "symbols_in_volume": [
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.core.api.DataFrame",
    "pandas.tools.merge.concat",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.rands_array"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_regression_whitelist_methods": {
  "data": {
   "lineno": 5724,
   "symbols_in_volume": [
    "getattr",
    "index",
    "numpy.nan",
    "numpy.random.randn",
    "op",
    "pandas.compat.lrange",
    "pandas.compat.product",
    "pandas.core.api.DataFrame",
    "pandas.core.index.Index",
    "pandas.core.index.MultiIndex",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_select_bad_cols": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "KeyError",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_series_agg_multi_pure_python": {
  "data": {
   "lineno": 1368,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_series_agg_multi_pure_python.bad": {
  "data": {
   "lineno": 1380,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_series_agg_multikey": {
  "data": {
   "lineno": 1360,
   "symbols_in_volume": [
    "numpy.sum",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_series_describe_multikey": {
  "data": {
   "lineno": 1345,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_series_describe_single": {
  "data": {
   "lineno": 1353,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_series_groupby_nunique": {
  "data": {
   "lineno": 1840,
   "symbols_in_volume": [
    "check_nunique",
    "itertools.product",
    "list",
    "numpy.arange",
    "numpy.random.choice",
    "numpy.random.randint",
    "pandas.core.api.DataFrame",
    "pandas.date_range",
    "string.ascii_lowercase"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_series_groupby_nunique.check_nunique": {
  "data": {
   "lineno": 1844,
   "symbols_in_volume": [
    "itertools.product",
    "pandas.Series.nunique",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_series_groupby_value_counts": {
  "data": {
   "lineno": 1876,
   "symbols_in_volume": [
    "itertools.product",
    "list",
    "loop",
    "numpy.nan",
    "numpy.random.choice",
    "numpy.random.randint",
    "pandas.core.api.DataFrame",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_series_groupby_value_counts.check_value_counts": {
  "data": {
   "lineno": 1884,
   "symbols_in_volume": [
    "dict",
    "itertools.product",
    "pandas.Series.value_counts",
    "pandas.compat.map",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_series_groupby_value_counts.loop": {
  "data": {
   "lineno": 1902,
   "symbols_in_volume": [
    "check_value_counts",
    "itertools.product",
    "max",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_series_groupby_value_counts.rebuild_index": {
  "data": {
   "lineno": 1879,
   "symbols_in_volume": [
    "list",
    "pandas.compat.map",
    "pandas.compat.range",
    "pandas.core.index.MultiIndex.from_arrays"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_series_grouper_noncontig_index": {
  "data": {
   "lineno": 3145,
   "symbols_in_volume": [
    "f",
    "id",
    "index",
    "len",
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.compat.map",
    "pandas.core.index.Index",
    "pandas.util.testing.rands_array",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_series_index_name": {
  "data": {
   "lineno": 1388
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_seriesgroupby_name_attr": {
  "data": {
   "lineno": 3084,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_set_group_name": {
  "data": {
   "lineno": 3783,
   "symbols_in_volume": [
    "_check_all"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_set_group_name._check_all": {
  "data": {
   "lineno": 3795,
   "symbols_in_volume": [
    "f",
    "freduce"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_set_group_name.f": {
  "data": {
   "lineno": 3784
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_set_group_name.foo": {
  "data": {
   "lineno": 3792,
   "symbols_in_volume": [
    "freduce"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_set_group_name.freduce": {
  "data": {
   "lineno": 3788
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_size": {
  "data": {
   "lineno": 2702,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.random.choice",
    "pandas.Series",
    "pandas.compat.product",
    "pandas.core.api.DataFrame",
    "pandas.core.index.Index",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_skip_group_keys": {
  "data": {
   "lineno": 3591,
   "symbols_in_volume": [
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_sparse_friendly": {
  "data": {
   "lineno": 3348,
   "symbols_in_volume": [
    "_check_work",
    "pandas.util.testing.add_nans",
    "pandas.util.testing.makePanel"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_sparse_friendly._check_work": {
  "data": {
   "lineno": 3353,
   "symbols_in_volume": [
    "dict",
    "iter",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_tab_completion": {
  "data": {
   "lineno": 5791,
   "symbols_in_volume": [
    "dir",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_time_field_bug": {
  "data": {
   "lineno": 855,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.datetime.now",
    "pandas.DataFrame",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_time_field_bug.func_with_date": {
  "data": {
   "lineno": 866,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_time_field_bug.func_with_no_date": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_timegrouper_apply_return_type_series": {
  "data": {
   "lineno": 4897,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Grouper",
    "pandas.TimeGrouper",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_timegrouper_apply_return_type_series.sumfunc_series": {
  "data": {
   "lineno": 4906,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_timegrouper_apply_return_type_value": {
  "data": {
   "lineno": 4915,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Grouper",
    "pandas.TimeGrouper",
    "pandas.to_datetime",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_timegrouper_apply_return_type_value.sumfunc_value": {
  "data": {
   "lineno": 4924
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_timegrouper_get_group": {
  "data": {
   "lineno": 4843,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.Grouper",
    "pandas.Timestamp",
    "pandas.compat.zip",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_timegrouper_with_reg_groups": {
  "data": {
   "lineno": 4655,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "datetime.datetime.datetime",
    "pandas.Grouper",
    "pandas.TimeGrouper",
    "pandas.core.api.DataFrame",
    "pandas.offsets.MonthEnd",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_timezone_info": {
  "data": {
   "lineno": 4571,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "pandas.DataFrame",
    "pandas.tests.test_groupby.pytz",
    "pandas.util.testing._skip_if_no_pytz",
    "pandas.util.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_transform": {
  "data": {
   "lineno": 998,
   "symbols_in_volume": [
    "index",
    "max",
    "numpy.arange",
    "numpy.random.randn",
    "numpy.random.shuffle",
    "pandas.Series",
    "pandas.TimeGrouper",
    "pandas.compat.range",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_transform.demean": {
  "data": {
   "lineno": 1023
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_transform_axis": {
  "data": {
   "lineno": 1090,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.random.randn",
    "pandas.compat.range",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_transform_broadcast": {
  "data": {
   "lineno": 1061,
   "symbols_in_volume": [
    "numpy.mean",
    "pandas.tests.test_groupby.assert_fp_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_transform_bug": {
  "data": {
   "lineno": 1138,
   "symbols_in_volume": [
    "dict",
    "numpy.arange",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_transform_doesnt_clobber_ints": {
  "data": {
   "lineno": 6200,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_transform_dtype": {
  "data": {
   "lineno": 1130,
   "symbols_in_volume": [
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_transform_exclude_nuisance": {
  "data": {
   "lineno": 1172,
   "symbols_in_volume": [
    "numpy.mean",
    "pandas.core.api.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_transform_fast": {
  "data": {
   "lineno": 1045,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.mean",
    "numpy.random.randn",
    "numpy.repeat",
    "pandas.Series",
    "pandas.core.api.DataFrame",
    "pandas.core.common._ensure_platform_int",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_transform_function_aliases": {
  "data": {
   "lineno": 1185,
   "symbols_in_volume": [
    "numpy.mean",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_transform_length": {
  "data": {
   "lineno": 1194,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_transform_length.nsum": {
  "data": {
   "lineno": 1199,
   "symbols_in_volume": [
    "numpy.nansum"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_transform_mixed_type": {
  "data": {
   "lineno": 3032,
   "symbols_in_volume": [
    "f",
    "index",
    "numpy.arange",
    "numpy.float64",
    "numpy.tile",
    "pandas.core.api.DataFrame",
    "pandas.core.config.option_context",
    "pandas.core.index.MultiIndex.from_arrays",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_transform_mixed_type.f": {
  "data": {
   "lineno": 3039
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_transform_multiple": {
  "data": {
   "lineno": 1147,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_transform_select_columns": {
  "data": {
   "lineno": 1163,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_transform_with_non_scalar_group": {
  "data": {
   "lineno": 6340,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_with_na": {
  "data": {
   "lineno": 1209,
   "symbols_in_volume": [
    "index",
    "issubclass",
    "len",
    "numpy.arange",
    "numpy.dtype",
    "numpy.nan",
    "numpy.ones",
    "pandas.Series",
    "pandas.core.index.Index",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_with_na.f": {
  "data": {
   "lineno": 1227,
   "symbols_in_volume": [
    "float",
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_wrap_agg_out": {
  "data": {
   "lineno": 3624,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_wrap_agg_out.func": {
  "data": {
   "lineno": 3627,
   "symbols_in_volume": [
    "TypeError",
    "numpy.object"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_wrap_aggregated_output_multindex": {
  "data": {
   "lineno": 2335,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.mean",
    "pandas.core.index.MultiIndex",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.TestGroupBy.test_wrap_aggregated_output_multindex.aggfun": {
  "data": {
   "lineno": 2343,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby._check_groupby": {
  "data": {
   "lineno": 6360,
   "symbols_in_volume": [
    "f",
    "pandas.compat.iteritems",
    "pandas.compat.lmap",
    "pandas.core.common._asarray_tuplesafe",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby._int64_overflow_possible": {
  "data": {
   "shadows": "pandas.core.groupby._int64_overflow_possible"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby._lexsort_indexer": {
  "data": {
   "shadows": "pandas.core.groupby._lexsort_indexer"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby._nargsort": {
  "data": {
   "shadows": "pandas.core.groupby._nargsort"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.ascii_lowercase": {
  "data": {
   "shadows": "string.ascii_lowercase"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.assertRaisesRegexp": {
  "data": {
   "shadows": "pandas.util.testing.assertRaisesRegexp"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.assert_fp_equal": {
  "data": {
   "lineno": 6356,
   "symbols_in_volume": [
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.assert_index_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_index_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.assert_panel_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_panel_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.bdate_range": {
  "data": {
   "shadows": "pandas.bdate_range"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.builtins": {
  "data": {
   "shadows": "pandas.compat.builtins"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.cart_product": {
  "data": {
   "shadows": "pandas.compat.product"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.concat": {
  "data": {
   "shadows": "pandas.concat"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.decons_group_index": {
  "data": {
   "shadows": "pandas.core.groupby.decons_group_index"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.dt": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.get_group_index": {
  "data": {
   "shadows": "pandas.core.groupby.get_group_index"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.lmap": {
  "data": {
   "shadows": "pandas.compat.lmap"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.long": {
  "data": {
   "shadows": "pandas.compat.long"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.lzip": {
  "data": {
   "shadows": "pandas.compat.lzip"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.map": {
  "data": {
   "shadows": "pandas.compat.map"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.nanops": {
  "data": {
   "shadows": "pandas.core.nanops"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.numpy_groupby": {
  "data": {
   "shadows": "pandas.core.groupby.numpy_groupby"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.option_context": {
  "data": {
   "shadows": "pandas.core.config.option_context"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.percentile": {
  "data": {
   "shadows": "numpy.percentile"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.period_range": {
  "data": {
   "shadows": "pandas.period_range"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.pprint_thing": {
  "data": {
   "shadows": "pandas.formats.printing.pprint_thing"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.qcut": {
  "data": {
   "shadows": "pandas.qcut"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.randint": {
  "data": {
   "shadows": "numpy.random.randint"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.read_csv": {
  "data": {
   "shadows": "pandas.read_csv"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.sem": {
  "data": {
   "shadows": "scipy.stats.sem"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.td": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.test_decons": {
  "data": {
   "lineno": 6368,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.tile",
    "testit"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.test_decons.testit": {
  "data": {
   "lineno": 6371,
   "symbols_in_volume": [
    "numpy.array_equal",
    "pandas.compat.zip",
    "pandas.core.groupby.decons_group_index",
    "pandas.core.groupby.get_group_index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_groupby.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.test_groupby.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.tests.test_internals": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.tests.test_internals.nose"
   ]
  },
  "type": "module"
 },
 "pandas.tests.test_internals.BlockManager": {
  "data": {
   "shadows": "pandas.core.internals.BlockManager"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.BlockPlacement": {
  "data": {
   "shadows": "pandas.core.internals.BlockPlacement"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.Categorical": {
  "data": {
   "shadows": "pandas.Categorical"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.N": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pandas.tests.test_internals.OrderedDict": {
  "data": {
   "shadows": "pandas.compat.OrderedDict"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.SingleBlockManager": {
  "data": {
   "shadows": "pandas.core.internals.SingleBlockManager"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.SparseArray": {
  "data": {
   "shadows": "pandas.sparse.array.SparseArray"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.TestBlock": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_internals.TestBlock.setUp": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "pandas.tests.test_internals.create_block"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlock.test_attrs": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlock.test_constructor": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "numpy.int32",
    "pandas.tests.test_internals.create_block"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlock.test_copy": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "pandas.tests.test_internals.assert_block_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlock.test_delete": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "Exception",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlock.test_insert": {
  "data": {
   "lineno": 243
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlock.test_merge": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.core.internals.make_block",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.randn"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlock.test_mgr_locs": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlock.test_pickle": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "_check"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlock.test_pickle._check": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "pandas.tests.test_internals.assert_block_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlock.test_reindex_cast": {
  "data": {
   "lineno": 240
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlock.test_reindex_index": {
  "data": {
   "lineno": 237
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlock.test_split_block_at": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.array_equal",
    "pandas.tests.test_internals.nose"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_internals.TestBlockManager.setUp": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "pandas.tests.test_internals.create_mgr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_as_matrix_datetime": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "pandas.tests.test_internals.create_mgr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_as_matrix_datetime_tz": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "pandas.tests.test_internals.create_mgr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_as_matrix_float": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "pandas.tests.test_internals.create_mgr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_as_matrix_int_bool": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "numpy.bool_",
    "numpy.int32",
    "numpy.int64",
    "pandas.tests.test_internals.create_mgr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_astype": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "numpy.datetime64",
    "numpy.dtype",
    "numpy.int64",
    "numpy.object_",
    "pandas.tests.test_internals.create_mgr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_attrs": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "len",
    "pandas.tests.test_internals.create_mgr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_categorical_block_pickle": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.tests.test_internals.create_mgr",
    "pandas.tests.test_internals.create_single_mgr",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_consolidate": {
  "data": {
   "lineno": 677
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_consolidate_ordering_issues": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.tests.test_internals.N",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.randn"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_constructor_corner": {
  "data": {
   "lineno": 317
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_contains": {
  "data": {
   "lineno": 358
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_convert": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "_compare",
    "numpy.array",
    "numpy.bool_",
    "numpy.datetime64",
    "numpy.float16",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.object_",
    "pandas.tests.test_internals.N",
    "pandas.tests.test_internals.create_mgr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_convert._compare": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_copy": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "pandas.compat.zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_duplicate_ref_loc_failure": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.array",
    "pandas.core.internals.BlockManager",
    "pandas.tests.test_internals.create_mgr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_equals": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": [
    "pandas.core.internals.BlockManager",
    "pandas.tests.test_internals.create_mgr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_equals_block_order_different_dtypes": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "pandas.core.internals.BlockManager",
    "pandas.tests.test_internals.create_mgr",
    "pandas.tests.test_internals.itertools"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_get": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "numpy.random.rand",
    "pandas.Index",
    "pandas.core.internals.BlockManager",
    "pandas.core.internals.make_block",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_get_bool_data": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.object_",
    "pandas.Index",
    "pandas.tests.test_internals.create_mgr",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_get_numeric_data": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.object_",
    "pandas.Index",
    "pandas.tests.test_internals.create_mgr",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_get_scalar": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "enumerate",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_insert": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.tests.test_internals.N",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_interleave": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "pandas.tests.test_internals.create_mgr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_interleave_non_unique_cols": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_is_indexed_like": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "pandas.tests.test_internals.create_mgr",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_is_mixed_dtype": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "pandas.tests.test_internals.create_mgr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_missing_unicode_key": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "KeyError",
    "pandas.DataFrame",
    "pandas.compat.u"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_multiindex_xs": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "pandas.MultiIndex",
    "pandas.tests.test_internals.create_mgr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_non_unique_pickle": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.tests.test_internals.create_mgr",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_pickle": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "hasattr",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_reindex_index": {
  "data": {
   "lineno": 695
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_reindex_items": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.tests.test_internals.create_mgr",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_set": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.tests.test_internals.create_mgr",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_set_change_dtype": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "bool",
    "int",
    "numpy.float_",
    "numpy.int_",
    "numpy.object_",
    "numpy.repeat",
    "numpy.zeros",
    "pandas.tests.test_internals.N",
    "pandas.util.testing.randn"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_set_change_dtype_slice": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_single_mgr_ctor": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": [
    "pandas.tests.test_internals.create_single_mgr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_sparse": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "numpy.float64",
    "pandas.tests.test_internals.create_mgr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_sparse_mixed": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "len",
    "pandas.core.internals.BlockManager",
    "pandas.tests.test_internals.create_mgr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockManager.test_unicode_repr_doesnt_raise": {
  "data": {
   "lineno": 802,
   "symbols_in_volume": [
    "pandas.compat.u",
    "pandas.tests.test_internals.create_mgr",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockPlacement": {
  "data": {
   "lineno": 1028,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_internals.TestBlockPlacement.test_array_to_slice_conversion": {
  "data": {
   "lineno": 1075,
   "symbols_in_volume": [
    "assert_as_slice_equals",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockPlacement.test_array_to_slice_conversion.assert_as_slice_equals": {
  "data": {
   "lineno": 1076,
   "symbols_in_volume": [
    "pandas.core.internals.BlockPlacement"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockPlacement.test_blockplacement_add": {
  "data": {
   "lineno": 1127,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "pandas.core.internals.BlockPlacement",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockPlacement.test_blockplacement_add_int": {
  "data": {
   "lineno": 1133,
   "symbols_in_volume": [
    "ValueError",
    "assert_add_equals",
    "pandas.core.internals.BlockPlacement",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockPlacement.test_blockplacement_add_int.assert_add_equals": {
  "data": {
   "lineno": 1134,
   "symbols_in_volume": [
    "list",
    "pandas.core.internals.BlockPlacement"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockPlacement.test_not_slice_like_arrays": {
  "data": {
   "lineno": 1090,
   "symbols_in_volume": [
    "assert_not_slice_like"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockPlacement.test_not_slice_like_arrays.assert_not_slice_like": {
  "data": {
   "lineno": 1091,
   "symbols_in_volume": [
    "pandas.core.internals.BlockPlacement"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockPlacement.test_not_slice_like_slices": {
  "data": {
   "lineno": 1062,
   "symbols_in_volume": [
    "assert_not_slice_like",
    "pandas.core.internals.BlockPlacement",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockPlacement.test_not_slice_like_slices.assert_not_slice_like": {
  "data": {
   "lineno": 1063,
   "symbols_in_volume": [
    "pandas.core.internals.BlockPlacement"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockPlacement.test_slice_iter": {
  "data": {
   "lineno": 1104,
   "symbols_in_volume": [
    "list",
    "pandas.core.internals.BlockPlacement",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockPlacement.test_slice_len": {
  "data": {
   "lineno": 1031,
   "symbols_in_volume": [
    "len",
    "pandas.core.internals.BlockPlacement",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockPlacement.test_slice_to_array_conversion": {
  "data": {
   "lineno": 1113,
   "symbols_in_volume": [
    "assert_as_array_equals",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockPlacement.test_slice_to_array_conversion.assert_as_array_equals": {
  "data": {
   "lineno": 1114,
   "symbols_in_volume": [
    "numpy.asarray",
    "pandas.core.internals.BlockPlacement",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockPlacement.test_unbounded_slice_raises": {
  "data": {
   "lineno": 1043,
   "symbols_in_volume": [
    "assert_unbounded_slice_error",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockPlacement.test_unbounded_slice_raises.assert_unbounded_slice_error": {
  "data": {
   "lineno": 1044,
   "symbols_in_volume": [
    "ValueError",
    "pandas.core.internals.BlockPlacement"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestBlockPlacement.test_zero_step_raises": {
  "data": {
   "lineno": 1039,
   "symbols_in_volume": [
    "ValueError",
    "pandas.core.internals.BlockPlacement",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestDatetimeBlock": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_internals.TestDatetimeBlock.test_try_coerce_arg": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "datetime.date",
    "datetime.datetime",
    "numpy.datetime64",
    "numpy.int64",
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas.tests.test_internals.create_block",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestIndexing": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": [
    "object",
    "pandas.tests.test_internals.N",
    "pandas.tests.test_internals.create_mgr",
    "pandas.tests.test_internals.create_single_mgr"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_internals.TestIndexing.test_get_slice": {
  "data": {
   "lineno": 879,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.bool_",
    "numpy.ones",
    "numpy.zeros",
    "pandas.compat.lrange",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestIndexing.test_get_slice.assert_slice_ok": {
  "data": {
   "lineno": 880,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "len",
    "numpy.concatenate",
    "numpy.ndarray",
    "numpy.zeros",
    "pandas.util.testing.assert_almost_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestIndexing.test_reindex_axis": {
  "data": {
   "lineno": 944,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Index",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestIndexing.test_reindex_axis.assert_reindex_axis_is_ok": {
  "data": {
   "lineno": 945,
   "symbols_in_volume": [
    "pandas.core.algorithms.take_nd",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestIndexing.test_reindex_indexer": {
  "data": {
   "lineno": 979,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "pandas.Index",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestIndexing.test_reindex_indexer.assert_reindex_indexer_is_ok": {
  "data": {
   "lineno": 981,
   "symbols_in_volume": [
    "pandas.core.algorithms.take_nd",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestIndexing.test_take": {
  "data": {
   "lineno": 926,
   "symbols_in_volume": [
    "pandas.compat.lrange",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.TestIndexing.test_take.assert_take_ok": {
  "data": {
   "lineno": 927,
   "symbols_in_volume": [
    "numpy.take",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.algos": {
  "data": {
   "shadows": "pandas.core.algorithms"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.assert_block_equal": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.create_block": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "len",
    "numpy.arange",
    "numpy.bool_",
    "numpy.nan",
    "numpy.ones",
    "numpy.reshape",
    "pandas.Categorical",
    "pandas.DatetimeIndex",
    "pandas.core.internals.BlockPlacement",
    "pandas.core.internals.make_block",
    "pandas.sparse.array.SparseArray",
    "pandas.tests.test_internals.N",
    "pandas.tests.test_internals.get_numeric_mat",
    "pandas.tests.test_internals.re"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.create_mgr": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "KeyError",
    "len",
    "list",
    "numpy.arange",
    "pandas.Index",
    "pandas.compat.OrderedDict",
    "pandas.core.internals.BlockManager",
    "pandas.tests.test_internals.N",
    "pandas.tests.test_internals.create_block",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.create_single_mgr": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.core.internals.SingleBlockManager",
    "pandas.tests.test_internals.N",
    "pandas.tests.test_internals.create_block",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.get_numeric_mat": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.lib.stride_tricks.as_strided"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_internals.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.make_block": {
  "data": {
   "shadows": "pandas.core.internals.make_block"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.randn": {
  "data": {
   "shadows": "pandas.util.testing.randn"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.test_internals.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.tests.test_lib": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.tests.test_lib.nose"
   ]
  },
  "type": "module"
 },
 "pandas.tests.test_lib.Decimal": {
  "data": {
   "shadows": "decimal.Decimal"
  },
  "type": "import"
 },
 "pandas.tests.test_lib.PY2": {
  "data": {
   "shadows": "pandas.compat.PY2"
  },
  "type": "import"
 },
 "pandas.tests.test_lib.TestMisc": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_lib.TestMisc.test_infer_dtype_bytes": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "object",
    "pandas.compat.PY2",
    "pandas.lib.infer_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_lib.TestMisc.test_isinf_scalar": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "float",
    "numpy.inf",
    "pandas.lib.isneginf_scalar",
    "pandas.lib.isposinf_scalar"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_lib.TestMisc.test_max_len_string_array": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.nan",
    "object",
    "pandas.lib.max_len_string_array",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_lib.TestMisc.test_maybe_indices_to_slice_both_edges": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.int64",
    "pandas.lib.maybe_indices_to_slice",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_lib.TestMisc.test_maybe_indices_to_slice_left_edge": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.int64",
    "pandas.lib.maybe_indices_to_slice",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_lib.TestMisc.test_maybe_indices_to_slice_middle": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.int64",
    "pandas.lib.maybe_indices_to_slice",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_lib.TestMisc.test_maybe_indices_to_slice_right_edge": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "IndexError",
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.int64",
    "pandas.lib.maybe_indices_to_slice",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_lib.TestParseSQL": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_lib.TestParseSQL.test_convert_sql_column_bools": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "bool",
    "numpy.array",
    "numpy.nan",
    "object",
    "pandas.lib.convert_sql_column",
    "pandas.tests.test_lib._assert_same_values_and_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_lib.TestParseSQL.test_convert_sql_column_decimals": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "decimal.Decimal",
    "numpy.array",
    "numpy.nan",
    "pandas.lib.convert_sql_column",
    "pandas.tests.test_lib._assert_same_values_and_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_lib.TestParseSQL.test_convert_sql_column_floats": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "object",
    "pandas.lib.convert_sql_column",
    "pandas.tests.test_lib._assert_same_values_and_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_lib.TestParseSQL.test_convert_sql_column_ints": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.lib.convert_sql_column",
    "pandas.tests.test_lib._assert_same_values_and_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_lib.TestParseSQL.test_convert_sql_column_longs": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.compat.long",
    "pandas.lib.convert_sql_column",
    "pandas.tests.test_lib._assert_same_values_and_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_lib.TestParseSQL.test_convert_sql_column_strings": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "object",
    "pandas.lib.convert_sql_column",
    "pandas.tests.test_lib._assert_same_values_and_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_lib.TestParseSQL.test_convert_sql_column_unicode": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "object",
    "pandas.compat.u",
    "pandas.lib.convert_sql_column",
    "pandas.tests.test_lib._assert_same_values_and_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_lib.Testisscalar": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_lib.Testisscalar.test_isscalar_builtin_nonscalars": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "Ellipsis",
    "pandas.lib.isscalar",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_lib.Testisscalar.test_isscalar_builtin_scalars": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "datetime.date",
    "datetime.datetime",
    "datetime.time",
    "datetime.timedelta",
    "numpy.nan",
    "pandas.NaT",
    "pandas.compat.u",
    "pandas.lib.isscalar"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_lib.Testisscalar.test_isscalar_numpy_array_scalars": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "numpy.bytes_",
    "numpy.datetime64",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.object_",
    "numpy.str_",
    "numpy.timedelta64",
    "numpy.unicode_",
    "pandas.compat.u",
    "pandas.lib.isscalar"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_lib.Testisscalar.test_isscalar_numpy_arrays": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.matrix",
    "pandas.lib.isscalar"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_lib.Testisscalar.test_isscalar_numpy_zerodim_arrays": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.datetime64",
    "numpy.timedelta64",
    "pandas.lib.isscalar",
    "pandas.lib.item_from_zerodim"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_lib.Testisscalar.test_isscalar_pandas_scalars": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "pandas.Period",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.lib.isscalar"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_lib.Testisscalar.test_lisscalar_pandas_containers": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Panel",
    "pandas.Series",
    "pandas.lib.isscalar"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_lib._assert_same_values_and_dtype": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_lib.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "pandas.tests.test_lib.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.test_lib.lib": {
  "data": {
   "shadows": "pandas.lib"
  },
  "type": "import"
 },
 "pandas.tests.test_lib.long": {
  "data": {
   "shadows": "pandas.compat.long"
  },
  "type": "import"
 },
 "pandas.tests.test_lib.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tests.test_lib.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.test_lib.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.test_lib.time": {
  "data": {
   "shadows": "datetime.time"
  },
  "type": "import"
 },
 "pandas.tests.test_lib.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.test_lib.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.test_lib.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.test_msgpack.test_buffer": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.test_msgpack.test_buffer.array": {
  "data": {
   "shadows": "array.array"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_buffer.packb": {
  "data": {
   "shadows": "pandas.msgpack.packb"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_buffer.test_unpack_buffer": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "array.array",
    "pandas.msgpack.packb",
    "pandas.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_buffer.test_unpack_bytearray": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "all",
    "bytearray",
    "bytes",
    "pandas.msgpack.packb",
    "pandas.msgpack.unpackb",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_buffer.unpackb": {
  "data": {
   "shadows": "pandas.msgpack.unpackb"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_case": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.test_msgpack.test_case.check": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "len",
    "pandas.msgpack.packb",
    "pandas.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_case.check_array": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "pandas.tests.test_msgpack.test_case.check"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_case.check_raw": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "pandas.tests.test_msgpack.test_case.check"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_case.match": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "pandas.msgpack.packb",
    "pandas.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_case.packb": {
  "data": {
   "shadows": "pandas.msgpack.packb"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_case.test_1": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "pandas.tests.test_msgpack.test_case.check"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_case.test_2": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "pandas.tests.test_msgpack.test_case.check"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_case.test_3": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "pandas.tests.test_msgpack.test_case.check"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_case.test_5": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "pandas.tests.test_msgpack.test_case.check"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_case.test_9": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "pandas.tests.test_msgpack.test_case.check"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_case.test_array16": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "pandas.tests.test_msgpack.test_case.check_array"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_case.test_array32": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "pandas.tests.test_msgpack.test_case.check_array"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_case.test_fixarray": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "pandas.tests.test_msgpack.test_case.check_array"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_case.test_fixraw": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "pandas.tests.test_msgpack.test_case.check_raw"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_case.test_match": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "dict",
    "pandas.tests.test_msgpack.test_case.match",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_case.test_raw16": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "pandas.tests.test_msgpack.test_case.check_raw"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_case.test_raw32": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "pandas.tests.test_msgpack.test_case.check_raw"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_case.test_unicode": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "pandas.msgpack.packb",
    "pandas.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_case.unpackb": {
  "data": {
   "shadows": "pandas.msgpack.unpackb"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_except": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.test_msgpack.test_except.DummyException": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_msgpack.test_except.TestExceptions": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "pandas.tests.test_msgpack.test_except.unittest"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_msgpack.test_except.TestExceptions.test_invalidvalue": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ValueError",
    "pandas.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_except.TestExceptions.test_raise_from_object_hook": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "pandas.msgpack.packb",
    "pandas.msgpack.unpackb",
    "pandas.tests.test_msgpack.test_except.DummyException"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_except.TestExceptions.test_raise_from_object_hook.hook": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "pandas.tests.test_msgpack.test_except.DummyException"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_except.TestExceptions.test_raise_on_find_unsupported_value": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "TypeError",
    "pandas.msgpack.packb",
    "pandas.tests.test_msgpack.test_except.datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_except.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_except.packb": {
  "data": {
   "shadows": "pandas.msgpack.packb"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_except.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_except.unpackb": {
  "data": {
   "shadows": "pandas.msgpack.unpackb"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_extension": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.test_msgpack.test_extension.ExtType": {
  "data": {
   "shadows": "pandas.msgpack.ExtType"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_extension.array": {
  "data": {
   "shadows": "array"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_extension.msgpack": {
  "data": {
   "shadows": "pandas.msgpack"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_extension.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_extension.test_extension_type": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "pandas.msgpack.packb",
    "pandas.msgpack.unpackb",
    "pandas.tests.test_msgpack.test_extension.array"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_extension.test_extension_type.default": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "pandas.msgpack.ExtType",
    "pandas.tests.test_msgpack.test_extension.array",
    "print"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_extension.test_extension_type.ext_hook": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "pandas.tests.test_msgpack.test_extension.array",
    "print"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_extension.test_pack_ext_type": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "p"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_extension.test_pack_ext_type.p": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "pandas.msgpack.Packer"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_extension.test_unpack_ext_type": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "check",
    "pandas.msgpack.ExtType"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_extension.test_unpack_ext_type.check": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "pandas.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_format": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.test_msgpack.test_format.check": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "pandas.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_format.testArray": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "pandas.tests.test_msgpack.test_format.check"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_format.testFixArray": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "pandas.tests.test_msgpack.test_format.check"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_format.testFixMap": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "pandas.tests.test_msgpack.test_format.check"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_format.testFixRaw": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "pandas.tests.test_msgpack.test_format.check"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_format.testFixnum": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "pandas.tests.test_msgpack.test_format.check"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_format.testMap": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "pandas.tests.test_msgpack.test_format.check"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_format.testRaw": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "pandas.tests.test_msgpack.test_format.check"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_format.testSignedInt": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "pandas.tests.test_msgpack.test_format.check"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_format.testSimpleValue": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pandas.tests.test_msgpack.test_format.check"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_format.testUnsignedInt": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "pandas.tests.test_msgpack.test_format.check"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_format.unpackb": {
  "data": {
   "shadows": "pandas.msgpack.unpackb"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_limits": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.test_msgpack.test_limits.ExtType": {
  "data": {
   "shadows": "pandas.msgpack.ExtType"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_limits.Packer": {
  "data": {
   "shadows": "pandas.msgpack.Packer"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_limits.TestLimits": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_msgpack.test_limits.TestLimits.test_array_header": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "OverflowError",
    "ValueError",
    "pandas.msgpack.Packer"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_limits.TestLimits.test_integer": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "OverflowError",
    "ValueError",
    "pandas.msgpack.packb",
    "pandas.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_limits.TestLimits.test_map_header": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "OverflowError",
    "ValueError",
    "pandas.msgpack.Packer"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_limits.TestLimits.test_max_array_len": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ValueError",
    "pandas.msgpack.Unpacker",
    "pandas.msgpack.packb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_limits.TestLimits.test_max_bin_len": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError",
    "pandas.msgpack.Unpacker",
    "pandas.msgpack.packb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_limits.TestLimits.test_max_ext_len": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "ValueError",
    "pandas.msgpack.ExtType",
    "pandas.msgpack.Unpacker",
    "pandas.msgpack.packb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_limits.TestLimits.test_max_map_len": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ValueError",
    "pandas.msgpack.Unpacker",
    "pandas.msgpack.packb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_limits.TestLimits.test_max_str_len": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ValueError",
    "pandas.msgpack.Unpacker",
    "pandas.msgpack.packb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_limits.Unpacker": {
  "data": {
   "shadows": "pandas.msgpack.Unpacker"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_limits.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_limits.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_limits.packb": {
  "data": {
   "shadows": "pandas.msgpack.packb"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_limits.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_limits.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_limits.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_limits.unpackb": {
  "data": {
   "shadows": "pandas.msgpack.unpackb"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_newspec": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.test_msgpack.test_newspec.ExtType": {
  "data": {
   "shadows": "pandas.msgpack.ExtType"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_newspec.packb": {
  "data": {
   "shadows": "pandas.msgpack.packb"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_newspec.test_bin16": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "len",
    "pandas.msgpack.packb",
    "pandas.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_newspec.test_bin32": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "len",
    "pandas.msgpack.packb",
    "pandas.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_newspec.test_bin8": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "len",
    "pandas.msgpack.packb",
    "pandas.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_newspec.test_ext": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "check",
    "pandas.msgpack.ExtType"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_newspec.test_ext.check": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "pandas.msgpack.packb",
    "pandas.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_newspec.test_str8": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "len",
    "pandas.msgpack.packb",
    "pandas.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_newspec.unpackb": {
  "data": {
   "shadows": "pandas.msgpack.unpackb"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_obj": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.test_msgpack.test_obj.DecodeError": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_msgpack.test_obj.TestObj": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pandas.tests.test_msgpack.test_obj.unittest"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_msgpack.test_obj.TestObj._arr_to_str": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_obj.TestObj._decode_complex": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "complex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_obj.TestObj._encode_complex": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "complex",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_obj.TestObj.bad_complex_decoder": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "pandas.tests.test_msgpack.test_obj.DecodeError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_obj.TestObj.test_an_exception_in_objecthook1": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "pandas.tests.test_msgpack.test_obj.DecodeError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_obj.TestObj.test_an_exception_in_objecthook1.f": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "pandas.msgpack.packb",
    "pandas.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_obj.TestObj.test_an_exception_in_objecthook2": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "pandas.tests.test_msgpack.test_obj.DecodeError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_obj.TestObj.test_an_exception_in_objecthook2.f": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "pandas.msgpack.packb",
    "pandas.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_obj.TestObj.test_array_hook": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "pandas.msgpack.packb",
    "pandas.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_obj.TestObj.test_bad_hook": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_obj.TestObj.test_bad_hook.f": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "pandas.msgpack.packb",
    "pandas.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_obj.TestObj.test_decode_hook": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "pandas.msgpack.packb",
    "pandas.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_obj.TestObj.test_decode_pairs_hook": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "pandas.msgpack.packb",
    "pandas.msgpack.unpackb",
    "sum"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_obj.TestObj.test_encode_hook": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "pandas.msgpack.packb",
    "pandas.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_obj.TestObj.test_only_one_obj_hook": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "TypeError",
    "pandas.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_obj.packb": {
  "data": {
   "shadows": "pandas.msgpack.packb"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_obj.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_obj.unpackb": {
  "data": {
   "shadows": "pandas.msgpack.unpackb"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_pack": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.test_msgpack.test_pack.OrderedDict": {
  "data": {
   "shadows": "pandas.compat.OrderedDict"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_pack.Packer": {
  "data": {
   "shadows": "pandas.msgpack.Packer"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_pack.TestPack": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "pandas.tests.test_msgpack.test_pack.unittest"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_msgpack.test_pack.TestPack.check": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "pandas.msgpack.packb",
    "pandas.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_pack.TestPack.testArraySize": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "list",
    "pandas.compat.BytesIO",
    "pandas.msgpack.Packer",
    "pandas.msgpack.Unpacker",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_pack.TestPack.testDecodeBinary": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "pandas.msgpack.packb",
    "pandas.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_pack.TestPack.testIgnoreErrorsPack": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "pandas.compat.u",
    "pandas.msgpack.packb",
    "pandas.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_pack.TestPack.testIgnoreUnicodeErrors": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "pandas.msgpack.packb",
    "pandas.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_pack.TestPack.testMapSize": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "dict",
    "pandas.compat.BytesIO",
    "pandas.msgpack.Packer",
    "pandas.msgpack.Unpacker",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_pack.TestPack.testNoEncoding": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "TypeError",
    "pandas.compat.u",
    "pandas.msgpack.packb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_pack.TestPack.testPack": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_pack.TestPack.testPackBytes": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_pack.TestPack.testPackFloat": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "pandas.msgpack.packb",
    "pandas.tests.test_msgpack.test_pack.struct"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_pack.TestPack.testPackUTF32": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "pandas.compat.u",
    "pandas.msgpack.packb",
    "pandas.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_pack.TestPack.testPackUnicode": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "pandas.compat.BytesIO",
    "pandas.compat.u",
    "pandas.msgpack.Packer",
    "pandas.msgpack.Unpacker",
    "pandas.msgpack.packb",
    "pandas.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_pack.TestPack.testStrictUnicodePack": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "UnicodeEncodeError",
    "pandas.compat.u",
    "pandas.msgpack.packb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_pack.TestPack.testStrictUnicodeUnpack": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "UnicodeDecodeError",
    "pandas.msgpack.packb",
    "pandas.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_pack.TestPack.test_manualreset": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "list",
    "pandas.compat.BytesIO",
    "pandas.msgpack.Packer",
    "pandas.msgpack.Unpacker",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_pack.TestPack.test_odict": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "dict",
    "pandas.compat.OrderedDict",
    "pandas.msgpack.packb",
    "pandas.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_pack.TestPack.test_odict.pair_hook": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_pack.TestPack.test_pairlist": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "list",
    "pandas.msgpack.Packer",
    "pandas.msgpack.unpackb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_pack.Unpacker": {
  "data": {
   "shadows": "pandas.msgpack.Unpacker"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_pack.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_pack.packb": {
  "data": {
   "shadows": "pandas.msgpack.packb"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_pack.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_pack.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_pack.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_pack.unpackb": {
  "data": {
   "shadows": "pandas.msgpack.unpackb"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_read_size": {
  "data": {
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "module"
 },
 "pandas.tests.test_msgpack.test_read_size.OutOfData": {
  "data": {
   "shadows": "pandas.msgpack.OutOfData"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_read_size.UnexpectedTypeException": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "pandas.tests.test_msgpack.test_read_size.Unpacker": {
  "data": {
   "shadows": "pandas.msgpack.Unpacker"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_read_size.packb": {
  "data": {
   "shadows": "pandas.msgpack.packb"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_read_size.test_correct_type_nested_array": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "pandas.msgpack.Unpacker",
    "pandas.msgpack.packb",
    "pandas.tests.test_msgpack.test_read_size.UnexpectedTypeException"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_read_size.test_incorrect_type_array": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "pandas.msgpack.Unpacker",
    "pandas.msgpack.packb",
    "pandas.tests.test_msgpack.test_read_size.UnexpectedTypeException"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_read_size.test_incorrect_type_map": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "pandas.msgpack.Unpacker",
    "pandas.msgpack.packb",
    "pandas.tests.test_msgpack.test_read_size.UnexpectedTypeException"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_read_size.test_incorrect_type_nested_map": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "pandas.msgpack.Unpacker",
    "pandas.msgpack.packb",
    "pandas.tests.test_msgpack.test_read_size.UnexpectedTypeException"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_read_size.test_read_array_header": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "pandas.msgpack.OutOfData",
    "pandas.msgpack.Unpacker",
    "pandas.msgpack.packb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_read_size.test_read_map_header": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "pandas.msgpack.OutOfData",
    "pandas.msgpack.Unpacker",
    "pandas.msgpack.packb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_seq": {
  "data": {
   "symbols_in_volume": [
    "bytearray",
    "bytes",
    "range"
   ]
  },
  "type": "module"
 },
 "pandas.tests.test_msgpack.test_seq.binarydata": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "pandas.tests.test_msgpack.test_seq.gen_binary_data": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "pandas.tests.test_msgpack.test_seq.binarydata"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_seq.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_seq.msgpack": {
  "data": {
   "shadows": "pandas.msgpack"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_seq.test_exceeding_unpacker_read_size": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "bytes",
    "enumerate",
    "pandas.msgpack.Packer",
    "pandas.msgpack.Unpacker",
    "pandas.tests.test_msgpack.test_seq.gen_binary_data",
    "pandas.tests.test_msgpack.test_seq.io",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_sequnpack": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.test_msgpack.test_sequnpack.BufferFull": {
  "data": {
   "shadows": "pandas.msgpack.BufferFull"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_sequnpack.OutOfData": {
  "data": {
   "shadows": "pandas.msgpack.OutOfData"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_sequnpack.TestPack": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pandas.tests.test_msgpack.test_sequnpack.unittest"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_msgpack.test_sequnpack.TestPack.test_foobar": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "len",
    "ord",
    "pandas.msgpack.OutOfData",
    "pandas.msgpack.Unpacker",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_sequnpack.TestPack.test_foobar_skip": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ord",
    "pandas.msgpack.OutOfData",
    "pandas.msgpack.Unpacker"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_sequnpack.TestPack.test_issue124": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "pandas.msgpack.Unpacker",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_sequnpack.TestPack.test_maxbuffersize": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "ValueError",
    "next",
    "ord",
    "pandas.msgpack.BufferFull",
    "pandas.msgpack.Unpacker"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_sequnpack.TestPack.test_partialdata": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "StopIteration",
    "iter",
    "next",
    "pandas.msgpack.Unpacker"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_sequnpack.TestPack.test_readbytes": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "ord",
    "pandas.compat.BytesIO",
    "pandas.msgpack.Unpacker"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_sequnpack.Unpacker": {
  "data": {
   "shadows": "pandas.msgpack.Unpacker"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_sequnpack.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_sequnpack.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_subtype": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "module"
 },
 "pandas.tests.test_msgpack.test_subtype.MyDict": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_msgpack.test_subtype.MyList": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_msgpack.test_subtype.MyNamedTuple": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pandas.tests.test_msgpack.test_subtype.MyTuple": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_msgpack.test_subtype.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_subtype.packb": {
  "data": {
   "shadows": "pandas.msgpack.packb"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_subtype.test_types": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "dict",
    "list",
    "pandas.msgpack.packb",
    "pandas.tests.test_msgpack.test_subtype.MyDict",
    "pandas.tests.test_msgpack.test_subtype.MyList",
    "pandas.tests.test_msgpack.test_subtype.MyNamedTuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_unpack": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.test_msgpack.test_unpack.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_unpack.ExtType": {
  "data": {
   "shadows": "pandas.msgpack.ExtType"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_unpack.OutOfData": {
  "data": {
   "shadows": "pandas.msgpack.OutOfData"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_unpack.TestUnpack": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_msgpack.test_unpack.TestUnpack.test_unpack_array_header_from_file": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "io.BytesIO",
    "pandas.msgpack.OutOfData",
    "pandas.msgpack.Unpacker",
    "pandas.msgpack.packb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_unpack.TestUnpack.test_unpacker_ext_hook": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "MyUnpacker",
    "pandas.msgpack.ExtType",
    "pandas.msgpack.packb"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_unpack.TestUnpack.test_unpacker_ext_hook.MyUnpacker": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "pandas.msgpack.Unpacker"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_msgpack.test_unpack.TestUnpack.test_unpacker_ext_hook.MyUnpacker.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_unpack.TestUnpack.test_unpacker_ext_hook.MyUnpacker._hook": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "int",
    "pandas.msgpack.ExtType"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_unpack.TestUnpack.test_unpacker_hook_refcnt": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "hasattr",
    "pandas.msgpack.Unpacker",
    "pandas.msgpack.packb",
    "pandas.tests.test_msgpack.test_unpack.nose",
    "pandas.tests.test_msgpack.test_unpack.sys"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_unpack.TestUnpack.test_unpacker_hook_refcnt.hook": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_unpack.Unpacker": {
  "data": {
   "shadows": "pandas.msgpack.Unpacker"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_unpack.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_unpack.packb": {
  "data": {
   "shadows": "pandas.msgpack.packb"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_unpack.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_unpack.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_unpack_raw": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.test_msgpack.test_unpack_raw.Unpacker": {
  "data": {
   "shadows": "pandas.msgpack.Unpacker"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_unpack_raw.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_unpack_raw.packb": {
  "data": {
   "shadows": "pandas.msgpack.packb"
  },
  "type": "import"
 },
 "pandas.tests.test_msgpack.test_unpack_raw.test_write_bytes": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "ord",
    "pandas.msgpack.Unpacker",
    "pandas.tests.test_msgpack.test_unpack_raw.io"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_msgpack.test_unpack_raw.test_write_bytes_multi_buffer": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "pandas.msgpack.Unpacker",
    "pandas.msgpack.packb",
    "pandas.tests.test_msgpack.test_unpack_raw.io"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.tests.test_multilevel.nose"
   ]
  },
  "type": "module"
 },
 "pandas.tests.test_multilevel.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.Index": {
  "data": {
   "shadows": "pandas.core.index.Index"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.MultiIndex": {
  "data": {
   "shadows": "pandas.core.index.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.Panel": {
  "data": {
   "shadows": "pandas.Panel"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.TestMultiLevel": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.setUp": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.NaN",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.lzip",
    "pandas.core.index.Index",
    "pandas.core.index.MultiIndex",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.util.testing.N",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_alignment": {
  "data": {
   "lineno": 1381,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_append": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_append_index": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.core.index.Index",
    "pandas.core.index.Index._simple_new",
    "pandas.core.index.MultiIndex.from_arrays",
    "pandas.date_range",
    "pandas.tests.test_multilevel.datetime",
    "pandas.tests.test_multilevel.pytz",
    "pandas.util.testing._skip_if_no_pytz"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_assign_index_sequences": {
  "data": {
   "lineno": 2109,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_binops_level": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "_check_op"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_binops_level._check_op": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "getattr",
    "numpy.sum",
    "op",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_constructor_with_tz": {
  "data": {
   "lineno": 2233,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.Series",
    "pandas.core.index.MultiIndex.from_arrays",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_count": {
  "data": {
   "lineno": 1477,
   "symbols_in_volume": [
    "KeyError",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_count_level": {
  "data": {
   "lineno": 827,
   "symbols_in_volume": [
    "TypeError",
    "_check_counts",
    "numpy.nan",
    "pandas.Index",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_count_level._check_counts": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": [
    "pandas.compat.range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_count_level_corner": {
  "data": {
   "lineno": 872,
   "symbols_in_volume": [
    "numpy.int64",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_count_level_series": {
  "data": {
   "lineno": 855,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.index.MultiIndex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_dataframe_constructor": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.core.index.MultiIndex",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_dataframe_insert_column_all_na": {
  "data": {
   "lineno": 2010,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.core.index.MultiIndex.from_tuples"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_datetimeindex": {
  "data": {
   "lineno": 2206,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.MultiIndex.from_product",
    "pandas.Timestamp.today",
    "pandas.core.index.MultiIndex.from_arrays",
    "pandas.date_range",
    "pandas.tests.test_multilevel.datetime",
    "pandas.tests.test_multilevel.itertools"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_delevel_infer_dtype": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.product",
    "pandas.core.common.is_float_dtype",
    "pandas.core.common.is_integer_dtype",
    "pandas.core.index.MultiIndex.from_tuples",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_drop_level": {
  "data": {
   "lineno": 1944,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_drop_level_nonunique_datetime": {
  "data": {
   "lineno": 1961,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Timestamp",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_drop_nonunique": {
  "data": {
   "lineno": 1854,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_drop_preserve_names": {
  "data": {
   "lineno": 1980,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.core.index.MultiIndex.from_arrays"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_duplicate_groupby_issues": {
  "data": {
   "lineno": 2132,
   "symbols_in_volume": [
    "len",
    "pandas.Series",
    "pandas.core.index.MultiIndex.from_tuples"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_duplicate_mi": {
  "data": {
   "lineno": 2143,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_duplicated_drop_duplicates": {
  "data": {
   "lineno": 2158,
   "symbols_in_volume": [
    "FutureWarning",
    "bool",
    "numpy.array",
    "pandas.core.index.MultiIndex.from_arrays",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_fancy_slice_partial": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_frame_any_all_group": {
  "data": {
   "lineno": 1557,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_frame_dict_constructor_empty_series": {
  "data": {
   "lineno": 2039,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.DataFrame.from_dict",
    "pandas.Series",
    "pandas.core.index.MultiIndex.from_tuples"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_frame_getitem_multicolumn_empty_level": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_frame_getitem_not_sorted": {
  "data": {
   "lineno": 1440,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.compat.zip",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_frame_getitem_setitem_boolean": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "TypeError",
    "numpy.putmask",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_frame_getitem_setitem_multislice": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.core.index.MultiIndex",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_frame_getitem_setitem_slice": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_frame_getitem_view": {
  "data": {
   "lineno": 1415,
   "symbols_in_volume": [
    "f",
    "pandas.core.common.SettingWithCopyError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_frame_getitem_view.f": {
  "data": {
   "lineno": 1428
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_frame_group_ops": {
  "data": {
   "lineno": 1518,
   "symbols_in_volume": [
    "getattr",
    "numpy.nan",
    "op",
    "pandas.compat.lrange",
    "pandas.compat.product",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_frame_group_ops.aggf": {
  "data": {
   "lineno": 1534,
   "symbols_in_volume": [
    "getattr",
    "op"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_frame_series_agg_multiple_levels": {
  "data": {
   "lineno": 1589,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_frame_setitem_ix": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "pandas.compat.lrange"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_frame_setitem_multi_column": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_get_level_number_out_of_bounds": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": [
    "IndexError",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_get_loc_single_level": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_getitem_int": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "KeyError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.core.index.MultiIndex",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_getitem_lowerdim_corner": {
  "data": {
   "lineno": 1696,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_getitem_multilevel_index_tuple_unsorted": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_getitem_partial": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_getitem_partial_column_select": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "KeyError",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.core.index.MultiIndex",
    "pandas.util.testing.assert_frame_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_getitem_setitem_slice_integers": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.core.index.MultiIndex",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_getitem_setitem_tuple_plus_columns": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_getitem_simple": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "KeyError",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_getitem_slice_not_sorted": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "numpy.int32",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_getitem_toplevel": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_getitem_tuple_plus_slice": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_groupby_corner": {
  "data": {
   "lineno": 1288,
   "symbols_in_volume": [
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.core.index.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_groupby_level_no_obs": {
  "data": {
   "lineno": 1297,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.u",
    "pandas.core.index.MultiIndex.from_tuples"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_groupby_multilevel": {
  "data": {
   "lineno": 1598,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_groupby_multilevel_with_transform": {
  "data": {
   "lineno": 1613
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_groupby_transform": {
  "data": {
   "lineno": 1245,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_indexing_ambiguity_bug_1678": {
  "data": {
   "lineno": 2052,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_indexing_over_hashtable_size_cutoff": {
  "data": {
   "lineno": 2077,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Series",
    "pandas.core.index.MultiIndex.from_arrays",
    "pandas.index._SIZE_CUTOFF"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_insert_index": {
  "data": {
   "lineno": 1375,
   "symbols_in_volume": [
    "pandas.core.index.MultiIndex",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_int_series_slicing": {
  "data": {
   "lineno": 1775,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_is_lexsorted": {
  "data": {
   "lineno": 1399,
   "symbols_in_volume": [
    "pandas.core.index.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_ix_preserve_names": {
  "data": {
   "lineno": 1623
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_join": {
  "data": {
   "lineno": 1309,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.nan",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_join_segfault": {
  "data": {
   "lineno": 2019,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_level_with_tuples": {
  "data": {
   "lineno": 1730,
   "symbols_in_volume": [
    "KeyError",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.core.index.MultiIndex",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_mixed_depth_drop": {
  "data": {
   "lineno": 1824,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.zip",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_mixed_depth_get": {
  "data": {
   "lineno": 1790,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.zip",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.util.testing.assert_series_equal",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_mixed_depth_insert": {
  "data": {
   "lineno": 1809,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.zip",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_mixed_depth_pop": {
  "data": {
   "lineno": 1875,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.zip",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_multiindex_na_repr": {
  "data": {
   "lineno": 2093,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_multiindex_set_index": {
  "data": {
   "lineno": 2195,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.core.index.MultiIndex.from_tuples"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_multilevel_consolidate": {
  "data": {
   "lineno": 1616,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.core.index.MultiIndex.from_tuples"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_nonunique_assignment_1750": {
  "data": {
   "lineno": 2066,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.core.index.MultiIndex.from_tuples"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_partial_ix_missing": {
  "data": {
   "lineno": 1707,
   "symbols_in_volume": [
    "Exception",
    "pandas.tests.test_multilevel.nose",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_partial_set": {
  "data": {
   "lineno": 1634,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_pickle": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "_test_roundtrip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_pickle._test_roundtrip": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_reindex": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_reindex_level": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "numpy.sum",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_reindex_level_partial_selection": {
  "data": {
   "lineno": 1898,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_reindex_preserve_levels": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_reorder_levels": {
  "data": {
   "lineno": 1356,
   "symbols_in_volume": [
    "IndexError",
    "TypeError",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_repeat": {
  "data": {
   "lineno": 2415,
   "symbols_in_volume": [
    "len",
    "pandas.MultiIndex.from_tuples",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_repr_name_coincide": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.core.index.MultiIndex.from_tuples",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_repr_to_string": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_reset_index_datetime": {
  "data": {
   "lineno": 2302,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_arrays",
    "pandas.MultiIndex.from_product",
    "pandas.Timestamp",
    "pandas.compat.range",
    "pandas.date_range",
    "pandas.tests.test_multilevel.datetime",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_reset_index_period": {
  "data": {
   "lineno": 2372,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.Period",
    "pandas.period_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_reset_index_with_drop": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_series_constructor": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.core.index.MultiIndex",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_series_getitem": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "KeyError",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_series_getitem_corner": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "IndexError",
    "len",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_series_getitem_not_sorted": {
  "data": {
   "lineno": 1461,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.compat.lzip",
    "pandas.compat.zip",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_series_group_min_max": {
  "data": {
   "lineno": 1508,
   "symbols_in_volume": [
    "getattr",
    "op",
    "pandas.compat.lrange",
    "pandas.compat.product",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_series_setitem": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.isnull",
    "pandas.notnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_series_slice_partial": {
  "data": {
   "lineno": 329
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_set_column_scalar_with_ix": {
  "data": {
   "lineno": 2029
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_set_index_datetime": {
  "data": {
   "lineno": 2248,
   "symbols_in_volume": [
    "numpy.random.random",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.Index",
    "pandas.compat.range",
    "pandas.date_range",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_set_index_period": {
  "data": {
   "lineno": 2391,
   "symbols_in_volume": [
    "numpy.random.random",
    "pandas.DataFrame",
    "pandas.period_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_setitem_change_dtype": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_setitem_multiple_partial": {
  "data": {
   "lineno": 1915,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_sort_index_preserve_levels": {
  "data": {
   "lineno": 209
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_sorting_repr_8017": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "list",
    "numpy.random.randn",
    "numpy.random.seed",
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.concat",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_sortlevel": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_sortlevel_by_name": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_sortlevel_large_cardinality": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.int32",
    "numpy.int64",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.core.index.MultiIndex.from_arrays"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_sortlevel_mixed": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_stack": {
  "data": {
   "lineno": 911,
   "symbols_in_volume": [
    "check",
    "list",
    "numpy.arange",
    "numpy.repeat",
    "numpy.tile",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.core.index.MultiIndex",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_stack.check": {
  "data": {
   "lineno": 965,
   "symbols_in_volume": [
    "pandas.compat.range",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_stack_dropna": {
  "data": {
   "lineno": 1222,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_stack_level_name": {
  "data": {
   "lineno": 1065,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_stack_mixed_dtype": {
  "data": {
   "lineno": 1026,
   "symbols_in_volume": [
    "numpy.float_",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_stack_multiple_bug": {
  "data": {
   "lineno": 1204,
   "symbols_in_volume": [
    "dict",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_stack_multiple_out_of_bounds": {
  "data": {
   "lineno": 1109,
   "symbols_in_volume": [
    "IndexError",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_stack_names_and_numbers": {
  "data": {
   "lineno": 1102,
   "symbols_in_volume": [
    "ValueError",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_stack_unstack_multiple": {
  "data": {
   "lineno": 1075,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_stack_unstack_preserve_names": {
  "data": {
   "lineno": 1052
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_stat_op_corner": {
  "data": {
   "lineno": 1550,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_std_var_pass_ddof": {
  "data": {
   "lineno": 1572,
   "symbols_in_volume": [
    "getattr",
    "len",
    "numpy.arange",
    "numpy.random.randn",
    "numpy.tile",
    "pandas.DataFrame",
    "pandas.core.index.MultiIndex.from_arrays",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_swaplevel": {
  "data": {
   "lineno": 1322,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_swaplevel_panel": {
  "data": {
   "lineno": 1346,
   "symbols_in_volume": [
    "pandas.Panel",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_to_html": {
  "data": {
   "lineno": 1725
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_tuples_have_na": {
  "data": {
   "lineno": 2124,
   "symbols_in_volume": [
    "pandas.core.index.MultiIndex",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_unicode_repr_issues": {
  "data": {
   "lineno": 1990,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.tile",
    "pandas.compat.u",
    "pandas.core.index.Index",
    "pandas.core.index.MultiIndex",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_unicode_repr_level_names": {
  "data": {
   "lineno": 2001,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.compat.u",
    "pandas.core.index.MultiIndex.from_tuples",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_unstack": {
  "data": {
   "lineno": 890,
   "symbols_in_volume": [
    "int",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_unstack_bug": {
  "data": {
   "lineno": 1037,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_unstack_group_index_overflow": {
  "data": {
   "lineno": 1664,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.tile",
    "pandas.Series",
    "pandas.core.index.MultiIndex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_unstack_level_name": {
  "data": {
   "lineno": 1060,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_unstack_multiple_hierarchical": {
  "data": {
   "lineno": 1233,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_unstack_multiple_no_empty_columns": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_unstack_odd_failure": {
  "data": {
   "lineno": 1004,
   "symbols_in_volume": [
    "pandas.compat.StringIO",
    "pandas.read_csv",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_unstack_period_frame": {
  "data": {
   "lineno": 1168,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays",
    "pandas.PeriodIndex",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_unstack_period_series": {
  "data": {
   "lineno": 1118,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays",
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas.core.index.Index",
    "pandas.core.index.MultiIndex.from_arrays",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_unstack_preserve_types": {
  "data": {
   "lineno": 1654,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.object_"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_unstack_sparse_keyspace": {
  "data": {
   "lineno": 1256,
   "symbols_in_volume": [
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_unstack_unobserved_keys": {
  "data": {
   "lineno": 1273,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.core.index.MultiIndex",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_xs": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.core.index.Index",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_xs_level": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.core.common.SettingWithCopyError",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_xs_level.f": {
  "data": {
   "lineno": 543
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_xs_level0": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "len",
    "pandas.compat.StringIO",
    "pandas.read_table",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_xs_level_multiple": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.compat.lrange",
    "pandas.compat.product",
    "pandas.core.common.SettingWithCopyError",
    "pandas.core.index.MultiIndex.from_tuples",
    "pandas.read_table",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_xs_level_multiple.f": {
  "data": {
   "lineno": 567
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_xs_level_series": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "TypeError",
    "pandas.util.testing.assert_series_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.TestMultiLevel.test_xs_partial": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "list",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.core.index.MultiIndex",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_multilevel.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel._index": {
  "data": {
   "shadows": "pandas.index"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.assertRaisesRegexp": {
  "data": {
   "shadows": "pandas.util.testing.assertRaisesRegexp"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.cart_product": {
  "data": {
   "shadows": "pandas.compat.product"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.lzip": {
  "data": {
   "shadows": "pandas.compat.lzip"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.notnull": {
  "data": {
   "shadows": "pandas.notnull"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.randn": {
  "data": {
   "shadows": "numpy.random.randn"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.read_table": {
  "data": {
   "shadows": "pandas.read_table"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.test_multilevel.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.tests.test_nanops": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.core.nanops._USE_BOTTLENECK",
    "pandas.tests.test_nanops.nose"
   ]
  },
  "type": "module"
 },
 "pandas.tests.test_nanops.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.tests.test_nanops.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.test_nanops.TestEnsureNumeric": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_nanops.TestEnsureNumeric.test_convertable_values": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandas.core.nanops._ensure_numeric"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestEnsureNumeric.test_ndarray": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "ValueError",
    "numpy.allclose",
    "numpy.array",
    "object",
    "pandas.core.nanops._ensure_numeric"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestEnsureNumeric.test_non_convertable_values": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": [
    "TypeError",
    "pandas.core.nanops._ensure_numeric"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestEnsureNumeric.test_numeric_values": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "pandas.core.nanops._ensure_numeric"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNankurtFixedValues": {
  "data": {
   "lineno": 945,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_nanops.TestNankurtFixedValues.prng": {
  "data": {
   "lineno": 990,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNankurtFixedValues.setUp": {
  "data": {
   "lineno": 949,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNankurtFixedValues.test_all_finite": {
  "data": {
   "lineno": 961,
   "symbols_in_volume": [
    "pandas.core.nanops.nankurt"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNankurtFixedValues.test_axis": {
  "data": {
   "lineno": 974,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "numpy.ones",
    "numpy.vstack",
    "pandas.core.nanops.nankurt",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNankurtFixedValues.test_constant_series": {
  "data": {
   "lineno": 954,
   "symbols_in_volume": [
    "numpy.ones",
    "pandas.core.nanops.nankurt"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNankurtFixedValues.test_ground_truth": {
  "data": {
   "lineno": 970,
   "symbols_in_volume": [
    "pandas.core.nanops.nankurt"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNankurtFixedValues.test_nans": {
  "data": {
   "lineno": 980,
   "symbols_in_volume": [
    "numpy.hstack",
    "numpy.isnan",
    "numpy.nan",
    "pandas.core.nanops.nankurt"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNankurtFixedValues.test_nans_skipna": {
  "data": {
   "lineno": 985,
   "symbols_in_volume": [
    "numpy.hstack",
    "numpy.nan",
    "pandas.core.nanops.nankurt",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanskewFixedValues": {
  "data": {
   "lineno": 895,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_nanops.TestNanskewFixedValues.prng": {
  "data": {
   "lineno": 940,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanskewFixedValues.setUp": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanskewFixedValues.test_all_finite": {
  "data": {
   "lineno": 911,
   "symbols_in_volume": [
    "pandas.core.nanops.nanskew"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanskewFixedValues.test_axis": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "numpy.ones",
    "numpy.vstack",
    "pandas.core.nanops.nanskew",
    "pandas.util.testing.assert_almost_equal",
    "scipy.stats.skew"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanskewFixedValues.test_constant_series": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "numpy.ones",
    "pandas.core.nanops.nanskew",
    "scipy.stats.skew"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanskewFixedValues.test_ground_truth": {
  "data": {
   "lineno": 920,
   "symbols_in_volume": [
    "pandas.core.nanops.nanskew",
    "scipy.stats.skew"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanskewFixedValues.test_nans": {
  "data": {
   "lineno": 930,
   "symbols_in_volume": [
    "numpy.hstack",
    "numpy.isnan",
    "numpy.nan",
    "pandas.core.nanops.nanskew",
    "scipy.stats.skew"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanskewFixedValues.test_nans_skipna": {
  "data": {
   "lineno": 935,
   "symbols_in_volume": [
    "numpy.hstack",
    "numpy.nan",
    "pandas.core.nanops.nanskew",
    "pandas.util.testing.assert_almost_equal",
    "scipy.stats.skew"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanvarFixedValues": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_nanops.TestNanvarFixedValues.prng": {
  "data": {
   "lineno": 890,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanvarFixedValues.setUp": {
  "data": {
   "lineno": 788
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanvarFixedValues.test_ground_truth": {
  "data": {
   "lineno": 850,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.empty",
    "numpy.nan",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "pandas.core.nanops.nanstd",
    "pandas.core.nanops.nanvar",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanvarFixedValues.test_nanstd_nans": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.ones",
    "numpy.testing.assert_almost_equal",
    "pandas.core.nanops.nanstd",
    "pandas.core.nanops.nanvar"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanvarFixedValues.test_nanstd_roundoff": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": [
    "numpy.ones",
    "pandas.Series",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanvarFixedValues.test_nanvar_all_finite": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pandas.core.nanops.nanvar"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanvarFixedValues.test_nanvar_axis": {
  "data": {
   "lineno": 821,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "numpy.vstack",
    "pandas.core.nanops.nanvar"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanvarFixedValues.test_nanvar_ddof": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.testing.assert_almost_equal",
    "pandas.core.nanops.nanvar"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestNanvarFixedValues.test_nanvar_nans": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.ones",
    "numpy.testing.assert_almost_equal",
    "pandas.core.nanops.nanvar"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame._argminmax_wrap": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "func",
    "hasattr",
    "numpy.min",
    "pandas.core.common.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame._badobj_wrap": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame._minmax_wrap": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "func",
    "numpy.atleast_1d"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame._skew_kurt_wrap": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "func",
    "isinstance",
    "numpy.floating",
    "numpy.max",
    "numpy.min",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.check_bool": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "BaseException",
    "ValueError",
    "func",
    "getattr",
    "hasattr",
    "numpy.take"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.check_fun": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "BaseException",
    "getattr",
    "targfunc",
    "testfunc"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.check_fun_data": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "BaseException",
    "ValueError",
    "list",
    "numpy.take",
    "range",
    "targfunc",
    "testfunc"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.check_funs": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "TypeError",
    "functools.partial",
    "numpy.vstack",
    "targfunc",
    "testfunc"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.check_funs_ddof": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "BaseException",
    "range",
    "targfunc",
    "testfunc"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.check_nancomp": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "checkfun",
    "numpy.hstack",
    "numpy.take",
    "numpy.vstack",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.check_nancorr_nancov_1d": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "checkfun",
    "len",
    "numpy.nan",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.check_nancorr_nancov_2d": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "checkfun",
    "len",
    "numpy.nan",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.check_results": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "_coerce_tds",
    "getattr",
    "hasattr",
    "numpy.split",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.check_results._coerce_tds": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.setUp": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.inf",
    "numpy.nan",
    "numpy.random.randint",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.tile",
    "numpy.vstack",
    "pandas.core.nanops._USE_BOTTLENECK"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.tearDown": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "pandas.core.nanops._USE_BOTTLENECK",
    "pandas.tests.test_nanops.use_bn"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test__bn_ok_dtype": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "pandas.core.nanops._bn_ok_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test__has_infs": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "BaseException",
    "getattr",
    "pandas.core.nanops._has_infs"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test__isfinite": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "BaseException",
    "getattr",
    "numpy.any",
    "pandas.core.nanops._isfinite"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nanall": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "numpy.all",
    "pandas.core.nanops.nanall"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nanany": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "numpy.any",
    "pandas.core.nanops.nanany"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nanargmax": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "func",
    "functools.partial",
    "numpy.argmax",
    "pandas.core.nanops.nanargmax"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nanargmin": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "func",
    "functools.partial",
    "numpy.argmin",
    "pandas.core.nanops.nanargmin",
    "pandas.util.testing.sys.version_info"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nancorr": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "numpy.corrcoef",
    "pandas.core.nanops.nancorr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nancorr_kendall": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "pandas.core.nanops.nancorr",
    "pandas.util.testing.skip_if_no_package",
    "scipy.stats.kendalltau"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nancorr_pearson": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "numpy.corrcoef",
    "pandas.core.nanops.nancorr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nancorr_spearman": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "pandas.core.nanops.nancorr",
    "pandas.util.testing.skip_if_no_package",
    "scipy.stats.spearmanr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nancov": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "numpy.cov",
    "pandas.core.nanops.nancov"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_naneq": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "pandas.core.nanops.naneq"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nange": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "pandas.core.nanops.nange"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nangt": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "pandas.core.nanops.nangt"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nankurt": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "func",
    "functools.partial",
    "pandas.core.nanops.nankurt",
    "pandas.util.testing._skip_if_scipy_0_17",
    "pandas.util.testing.skip_if_no_package",
    "scipy.stats.kurtosis"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nanle": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "pandas.core.nanops.nanle"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nanlt": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "pandas.core.nanops.nanlt"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nanmax": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "func",
    "functools.partial",
    "numpy.max",
    "pandas.core.nanops.nanmax"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nanmean": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "numpy.mean",
    "pandas.core.nanops.nanmean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nanmean_overflow": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "numpy.__version__",
    "numpy.float64",
    "numpy.int64",
    "pandas.Series",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nanmedian": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "numpy.median",
    "pandas.core.nanops.nanmedian",
    "pandas.tests.test_nanops.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nanmin": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "func",
    "functools.partial",
    "numpy.min",
    "pandas.core.nanops.nanmin"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nanne": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "pandas.core.nanops.nanne"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nanprod": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "numpy.prod",
    "pandas.core.nanops.nanprod"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nansem": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "pandas.core.nanops.nansem",
    "pandas.util.testing._skip_if_scipy_0_17",
    "pandas.util.testing.skip_if_no_package",
    "scipy.stats.sem"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nanskew": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "func",
    "functools.partial",
    "pandas.core.nanops.nanskew",
    "pandas.util.testing._skip_if_scipy_0_17",
    "pandas.util.testing.skip_if_no_package",
    "scipy.stats.skew"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nanstd": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "numpy.std",
    "pandas.core.nanops.nanstd"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nansum": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "numpy.sum",
    "pandas.core.nanops.nansum"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_nanvar": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "numpy.var",
    "pandas.core.nanops.nanvar"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.TestnanopsDataFrame.test_returned_dtype": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "numpy",
    "numpy.float128",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "pandas.Series",
    "pandas.core.common.is_integer_dtype",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_nanops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pandas.tests.test_nanops.is_integer_dtype": {
  "data": {
   "shadows": "pandas.core.common.is_integer_dtype"
  },
  "type": "import"
 },
 "pandas.tests.test_nanops.isnull": {
  "data": {
   "shadows": "pandas.core.common.isnull"
  },
  "type": "import"
 },
 "pandas.tests.test_nanops.kendalltau": {
  "data": {
   "shadows": "scipy.stats.kendalltau"
  },
  "type": "import"
 },
 "pandas.tests.test_nanops.kurtosis": {
  "data": {
   "shadows": "scipy.stats.kurtosis"
  },
  "type": "import"
 },
 "pandas.tests.test_nanops.nanops": {
  "data": {
   "shadows": "pandas.core.nanops"
  },
  "type": "import"
 },
 "pandas.tests.test_nanops.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tests.test_nanops.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.test_nanops.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "pandas.tests.test_nanops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tests.test_nanops.sem": {
  "data": {
   "shadows": "scipy.stats.sem"
  },
  "type": "import"
 },
 "pandas.tests.test_nanops.skew": {
  "data": {
   "shadows": "scipy.stats.skew"
  },
  "type": "import"
 },
 "pandas.tests.test_nanops.spearmanr": {
  "data": {
   "shadows": "scipy.stats.spearmanr"
  },
  "type": "import"
 },
 "pandas.tests.test_nanops.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.test_nanops.use_bn": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pandas.tests.test_nanops.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.tests.test_panel": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.tests.test_panel._panel",
    "pandas.tests.test_panel.nose",
    "pandas.util.testing.add_nans",
    "pandas.util.testing.makePanel"
   ]
  },
  "type": "module"
 },
 "pandas.tests.test_panel.CheckIndexing": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_panel.CheckIndexing._check_view": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "comp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_comparisons": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": [
    "pandas.tests.test_panel.operator",
    "pandas.util.testing.makePanel",
    "test_comp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_comparisons.test_comp": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": [
    "Exception",
    "func"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_delitem_and_pop": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "Exception",
    "numpy.empty",
    "pandas.compat.lrange",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_get_value": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": [
    "TypeError",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_getitem": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_getitem_callable": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_getitem_fancy_ints": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_getitem_fancy_labels": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_getitem_fancy_slice": {
  "data": {
   "lineno": 662
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_getitem_fancy_xs": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_getitem_fancy_xs_check_view": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_invert": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": [
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_ix_align": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.Series",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_ix_frame_align": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.makePanel"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_ix_setitem_slice_dataframe": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_logical_with_nas": {
  "data": {
   "lineno": 829,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_major_xs": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "Exception",
    "pandas.core.datetools.bday",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_major_xs_mixed": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.object_"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_minor_xs": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "Exception",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_minor_xs_mixed": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.object_"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_neg": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_set_minor_major": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "numpy.nan",
    "object",
    "pandas.DataFrame",
    "pandas.core.panel.Panel",
    "pandas.notnull",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_set_value": {
  "data": {
   "lineno": 892,
   "symbols_in_volume": [
    "TypeError",
    "pandas.core.common.is_float_dtype",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_setitem": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.bool_",
    "numpy.int64",
    "numpy.object_",
    "numpy.random.randn",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_setitem_ndarray": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.linspace",
    "numpy.random.randn",
    "pandas.core.panel.Panel",
    "pandas.date_range",
    "pandas.datetools.MonthEnd",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.CheckIndexing.test_xs": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.nan",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.ExcelFile": {
  "data": {
   "shadows": "pandas.io.excel.ExcelFile"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.OrderedDict": {
  "data": {
   "shadows": "pandas.compat.OrderedDict"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.Panel": {
  "data": {
   "shadows": "pandas.core.panel.Panel"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.PanelTests": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_panel.PanelTests.not_hashable": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "TypeError",
    "hash",
    "pandas.core.panel.Panel"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.PanelTests.test_cumsum": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.PanelTests.test_pickle": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.PanelTests.test_rank": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse._check_stat_op": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "Exception",
    "NotImplementedError",
    "alternative",
    "f",
    "getattr",
    "pandas.compat.range",
    "pandas.compat.signature",
    "pandas.util.testing._incompat_bottleneck_version",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse._check_stat_op.skipna_wrapper": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "alternative",
    "len",
    "numpy.nan",
    "pandas.core.series.remove_na"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse._check_stat_op.wrapper": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "alternative",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_copy_names": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "getattr",
    "pandas.tests.test_panel.ignore_sparse_panel_future_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_count": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "pandas.notnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_iter": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "list",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_max": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_mean": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_median": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_median.wrapper": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "numpy.median",
    "numpy.nan",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_min": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_prod": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_repr": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_sem": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_sem.alt": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "numpy.sqrt",
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_skew": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "ImportError",
    "pandas.tests.test_panel.nose"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_skew.this_skew": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "scipy.stats.skew"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_std": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_std.alt": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_sum": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_var": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForLongAndSparse.test_var.alt": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_panel.SafeForSparse._test_op": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "op",
    "pandas.util.testing.assert_frame_equal",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.assert_panel_equal": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "classmethod",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_abs": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "abs",
    "numpy.abs",
    "pandas.tests.test_panel.ignore_sparse_panel_future_warning",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_arith": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "Exception",
    "pandas.tests.test_panel.operator"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_combineFrame": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "ValueError",
    "check_op",
    "getattr",
    "isinstance",
    "op",
    "pandas.SparsePanel",
    "pandas.compat.PY3",
    "pandas.formats.printing.pprint_thing",
    "pandas.tests.test_panel.ignore_sparse_panel_future_warning",
    "pandas.tests.test_panel.operator",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_combineFrame.check_op": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "func",
    "getattr",
    "op",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_combinePanel": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "pandas.tests.test_panel.ignore_sparse_panel_future_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_get_axis": {
  "data": {
   "lineno": 217
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_get_axis_name": {
  "data": {
   "lineno": 260
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_get_axis_number": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "ValueError",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_get_plane_axes": {
  "data": {
   "lineno": 265
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_get_value": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_iteritems": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_keys": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "list",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_neg": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "pandas.tests.test_panel.ignore_sparse_panel_future_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_raise_when_not_implemented": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "NotImplementedError",
    "getattr",
    "list",
    "numpy.arange",
    "op",
    "pandas.core.panel.Panel",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_select": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.tests.test_panel.ignore_sparse_panel_future_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_set_axis": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "numpy.arange",
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.SafeForSparse.test_truncate": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "pandas.tests.test_panel.ignore_sparse_panel_future_warning",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.SparsePanel": {
  "data": {
   "shadows": "pandas.SparsePanel"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.TestLongPanel": {
  "data": {
   "lineno": 2326,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_panel.TestLongPanel.setUp": {
  "data": {
   "lineno": 2332,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.tests.test_panel.warnings",
    "pandas.util.testing.add_nans",
    "pandas.util.testing.makePanel"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_arith_flex_panel": {
  "data": {
   "lineno": 2396,
   "symbols_in_volume": [
    "aliases",
    "aliases.get",
    "f",
    "getattr",
    "numpy.random.randint",
    "op",
    "pandas.compat.PY3",
    "pandas.tests.test_panel.operator",
    "pandas.util.testing.assert_panel_equal",
    "r_f"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_axis_dummies": {
  "data": {
   "lineno": 2472,
   "symbols_in_volume": [
    "len",
    "pandas.core.reshape.make_axis_dummies"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_combineFrame": {
  "data": {
   "lineno": 2361,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_combinePanel": {
  "data": {
   "lineno": 2366,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_combine_scalar": {
  "data": {
   "lineno": 2375,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_combine_series": {
  "data": {
   "lineno": 2380,
   "symbols_in_volume": [
    "pandas.DataFrame.add",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_count": {
  "data": {
   "lineno": 2514,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_get_dummies": {
  "data": {
   "lineno": 2492,
   "symbols_in_volume": [
    "pandas.core.reshape.get_dummies",
    "pandas.core.reshape.make_axis_dummies"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_join": {
  "data": {
   "lineno": 2527,
   "symbols_in_volume": [
    "Exception",
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_mean": {
  "data": {
   "lineno": 2500,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_operators": {
  "data": {
   "lineno": 2391,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_ops_differently_indexed": {
  "data": {
   "lineno": 2342,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_ops_scalar": {
  "data": {
   "lineno": 2356,
   "symbols_in_volume": [
    "pandas.DataFrame.__mul__",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_pivot": {
  "data": {
   "lineno": 2538,
   "symbols_in_volume": [
    "Exception",
    "numpy.array",
    "pandas.core.reshape._slow_pivot",
    "pandas.pivot",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_sort": {
  "data": {
   "lineno": 2418,
   "symbols_in_volume": [
    "is_sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_sort.is_sorted": {
  "data": {
   "lineno": 2419
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_sum": {
  "data": {
   "lineno": 2507,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_to_string": {
  "data": {
   "lineno": 2428,
   "symbols_in_volume": [
    "pandas.compat.StringIO"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestLongPanel.test_truncate": {
  "data": {
   "lineno": 2432,
   "symbols_in_volume": [
    "Exception",
    "pandas.tests.test_panel.ignore_sparse_panel_future_warning",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": [
    "pandas.tests.test_panel.CheckIndexing",
    "pandas.tests.test_panel.PanelTests",
    "pandas.tests.test_panel.SafeForLongAndSparse",
    "pandas.tests.test_panel.SafeForSparse",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_panel.TestPanel.assert_panel_equal": {
  "data": {
   "lineno": 921,
   "symbols_in_volume": [
    "classmethod",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.setUp": {
  "data": {
   "lineno": 925,
   "symbols_in_volume": [
    "pandas.tests.test_panel._panel"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_all_any": {
  "data": {
   "lineno": 2307,
   "symbols_in_volume": [
    "pandas.core.nanops.nanall",
    "pandas.core.nanops.nanany"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_all_any_unhandled": {
  "data": {
   "lineno": 2321,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_apply": {
  "data": {
   "lineno": 1233,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.sqrt",
    "pandas.DataFrame",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_apply_no_or_zero_ndim": {
  "data": {
   "lineno": 1360,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.int64",
    "numpy.random.rand",
    "pandas.Series",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_apply_slabs": {
  "data": {
   "lineno": 1282,
   "symbols_in_volume": [
    "dict",
    "f",
    "list",
    "numpy.arange",
    "numpy.array",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_compound": {
  "data": {
   "lineno": 1879,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_conform": {
  "data": {
   "lineno": 1212
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_consolidate": {
  "data": {
   "lineno": 1064
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_constructor": {
  "data": {
   "lineno": 945,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.object_",
    "pandas.compat.range",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_constructor_cast": {
  "data": {
   "lineno": 986,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "numpy.int32",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_constructor_dict_mixed": {
  "data": {
   "lineno": 1122,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "len",
    "numpy.arange",
    "pandas.Index",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_constructor_dtypes": {
  "data": {
   "lineno": 1019,
   "symbols_in_volume": [
    "_check_dtype",
    "numpy.array",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.lrange",
    "pandas.core.panel.Panel",
    "pandas.core.panel.Panel.from_dict"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_constructor_dtypes._check_dtype": {
  "data": {
   "lineno": 1022
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_constructor_empty_panel": {
  "data": {
   "lineno": 1007,
   "symbols_in_volume": [
    "len",
    "pandas.core.panel.Panel"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_constructor_error_msgs": {
  "data": {
   "lineno": 1187,
   "symbols_in_volume": [
    "ValueError",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_constructor_error_msgs.testit": {
  "data": {
   "lineno": 1204,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.compat.lrange",
    "pandas.core.panel.Panel"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_constructor_fails_with_not_3d_input": {
  "data": {
   "lineno": 1059,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.randn",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_constructor_observe_dtype": {
  "data": {
   "lineno": 1013,
   "symbols_in_volume": [
    "numpy.object_",
    "pandas.compat.lrange",
    "pandas.core.panel.Panel"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_constructor_resize": {
  "data": {
   "lineno": 1154,
   "symbols_in_volume": [
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_convert_objects": {
  "data": {
   "lineno": 1219,
   "symbols_in_volume": [
    "dict",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_ctor_dict": {
  "data": {
   "lineno": 1073,
   "symbols_in_volume": [
    "dict",
    "int",
    "numpy.int32",
    "pandas.DataFrame",
    "pandas.compat.iteritems",
    "pandas.core.panel.Panel",
    "pandas.core.panel.Panel.from_dict",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_ctor_orderedDict": {
  "data": {
   "lineno": 1144,
   "symbols_in_volume": [
    "list",
    "numpy.random.randint",
    "pandas.compat.OrderedDict",
    "pandas.core.panel.Panel",
    "pandas.core.panel.Panel.from_dict",
    "pandas.util.testing.makeCustomDataframe",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_drop": {
  "data": {
   "lineno": 2183,
   "symbols_in_volume": [
    "ValueError",
    "check_drop",
    "pandas.DataFrame",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_drop.check_drop": {
  "data": {
   "lineno": 2187,
   "symbols_in_volume": [
    "AssertionError",
    "aliases",
    "pandas.formats.printing.pprint_thing",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_dropna": {
  "data": {
   "lineno": 2149,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_dtypes": {
  "data": {
   "lineno": 1227,
   "symbols_in_volume": [
    "numpy.dtype",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_ffill_bfill": {
  "data": {
   "lineno": 1564,
   "symbols_in_volume": [
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_fillna": {
  "data": {
   "lineno": 1516,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "numpy.float64",
    "numpy.isfinite",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_filter": {
  "data": {
   "lineno": 1876
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_from_dict_mixed_orient": {
  "data": {
   "lineno": 1176,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.object_",
    "pandas.core.panel.Panel.from_dict",
    "pandas.util.testing.makeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_from_frame_level1_unsorted": {
  "data": {
   "lineno": 2101,
   "symbols_in_volume": [
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_get_attr": {
  "data": {
   "lineno": 2092,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_multiindex_blocks": {
  "data": {
   "lineno": 2061,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_tuples",
    "pandas.core.panel.Panel"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_multiindex_get": {
  "data": {
   "lineno": 2044,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.random",
    "pandas.MultiIndex.from_tuples",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_numpy_round": {
  "data": {
   "lineno": 2025,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "numpy.around",
    "numpy.round",
    "pandas.core.panel.Panel",
    "pandas.date_range",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_panel_dups": {
  "data": {
   "lineno": 1817,
   "symbols_in_volume": [
    "list",
    "numpy.random.randn",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_panel_warnings": {
  "data": {
   "lineno": 931,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_pct_change": {
  "data": {
   "lineno": 1955,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_reindex": {
  "data": {
   "lineno": 1378,
   "symbols_in_volume": [
    "Exception",
    "list",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_reindex_like": {
  "data": {
   "lineno": 1462,
   "symbols_in_volume": [
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_reindex_multi": {
  "data": {
   "lineno": 1418,
   "symbols_in_volume": [
    "enumerate",
    "numpy.arange",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_rename": {
  "data": {
   "lineno": 2076,
   "symbols_in_volume": [
    "pandas.Index",
    "str.lower"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_repr_empty": {
  "data": {
   "lineno": 2072,
   "symbols_in_volume": [
    "pandas.core.panel.Panel",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_round": {
  "data": {
   "lineno": 2009,
   "symbols_in_volume": [
    "float",
    "numpy.around",
    "pandas.core.panel.Panel",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_shift": {
  "data": {
   "lineno": 1886,
   "symbols_in_volume": [
    "dict",
    "f",
    "f.shift",
    "list",
    "pandas.core.panel.Panel",
    "pandas.core.panel.Panel.from_dict",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeMixedDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_sort_index": {
  "data": {
   "lineno": 1488,
   "symbols_in_volume": [
    "list",
    "pandas.tests.test_panel.random",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_swapaxes": {
  "data": {
   "lineno": 1577,
   "symbols_in_volume": [
    "id",
    "numpy.nan",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_take": {
  "data": {
   "lineno": 1470,
   "symbols_in_volume": [
    "Exception",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_to_excel": {
  "data": {
   "lineno": 2109,
   "symbols_in_volume": [
    "ImportError",
    "pandas.io.excel.ExcelFile",
    "pandas.tests.test_panel.nose",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_to_excel_xlsxwriter": {
  "data": {
   "lineno": 2130,
   "symbols_in_volume": [
    "ImportError",
    "pandas.io.excel.ExcelFile",
    "pandas.tests.test_panel.nose",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.ensure_clean",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_to_frame": {
  "data": {
   "lineno": 1654,
   "symbols_in_volume": [
    "len",
    "numpy.random.permutation",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.tests.test_panel.ignore_sparse_panel_future_warning",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_to_frame_mixed": {
  "data": {
   "lineno": 1686,
   "symbols_in_volume": [
    "numpy.bool_",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_to_frame_multi_drop_level": {
  "data": {
   "lineno": 1793,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_to_frame_multi_major": {
  "data": {
   "lineno": 1710,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_to_frame_multi_major_minor": {
  "data": {
   "lineno": 1759,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex",
    "pandas.MultiIndex.from_tuples",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_to_panel_duplicates": {
  "data": {
   "lineno": 1811,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_to_panel_na_handling": {
  "data": {
   "lineno": 1803,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_transpose": {
  "data": {
   "lineno": 1602,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_transpose_copy": {
  "data": {
   "lineno": 1644,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.notnull",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_truncate_fillna_bug": {
  "data": {
   "lineno": 1570
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_tshift": {
  "data": {
   "lineno": 1918,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "pandas.Index",
    "pandas.core.datetools.bday",
    "pandas.core.panel.Panel",
    "pandas.tests.test_panel._panel",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.makePeriodPanel"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_update": {
  "data": {
   "lineno": 2229,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_update_filtered": {
  "data": {
   "lineno": 2281,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_update_from_dict": {
  "data": {
   "lineno": 2246,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_update_nooverwrite": {
  "data": {
   "lineno": 2264,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.TestPanel.test_update_raise": {
  "data": {
   "lineno": 2298,
   "symbols_in_volume": [
    "Exception",
    "numpy.nan",
    "numpy.testing.assert_raises",
    "pandas.core.panel.Panel"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel._panel": {
  "data": {
   "lineno": 913
  },
  "type": "constant"
 },
 "pandas.tests.test_panel._slow_pivot": {
  "data": {
   "shadows": "pandas.core.reshape._slow_pivot"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.assertRaisesRegexp": {
  "data": {
   "shadows": "pandas.util.testing.assertRaisesRegexp"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.assert_panel_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_panel_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.assert_produces_warning": {
  "data": {
   "shadows": "pandas.util.testing.assert_produces_warning"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.bday": {
  "data": {
   "shadows": "pandas.core.datetools.bday"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.datetools": {
  "data": {
   "shadows": "pandas.datetools"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.ensure_clean": {
  "data": {
   "shadows": "pandas.util.testing.ensure_clean"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.get_dummies": {
  "data": {
   "shadows": "pandas.core.reshape.get_dummies"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.ignore_sparse_panel_future_warning": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "pandas.tests.test_panel.ignore_sparse_panel_future_warning.wrapper": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "FutureWarning",
    "func",
    "functools.wraps",
    "isinstance",
    "pandas.SparsePanel",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.makeMixedDataFrame": {
  "data": {
   "shadows": "pandas.util.testing.makeMixedDataFrame"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.make_axis_dummies": {
  "data": {
   "shadows": "pandas.core.reshape.make_axis_dummies"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.mkdf": {
  "data": {
   "shadows": "pandas.util.testing.makeCustomDataframe"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.nanall": {
  "data": {
   "shadows": "pandas.core.nanops.nanall"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.nanany": {
  "data": {
   "shadows": "pandas.core.nanops.nanany"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.notnull": {
  "data": {
   "shadows": "pandas.notnull"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.openpyxl": {
  "data": {
   "shadows": "openpyxl"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.panelm": {
  "data": {
   "shadows": "pandas.core.panel"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.pivot": {
  "data": {
   "shadows": "pandas.pivot"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.pprint_thing": {
  "data": {
   "shadows": "pandas.formats.printing.pprint_thing"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.remove_na": {
  "data": {
   "shadows": "pandas.core.series.remove_na"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.signature": {
  "data": {
   "shadows": "pandas.compat.signature"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.skew": {
  "data": {
   "shadows": "scipy.stats.skew"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.test_import_warnings": {
  "data": {
   "lineno": 2587,
   "symbols_in_volume": [
    "numpy.random.rand",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.test_monotonic": {
  "data": {
   "lineno": 2562,
   "symbols_in_volume": [
    "_monotonic",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.test_monotonic._monotonic": {
  "data": {
   "lineno": 2565
  },
  "type": "function"
 },
 "pandas.tests.test_panel.test_panel_index": {
  "data": {
   "lineno": 2579,
   "symbols_in_volume": [
    "numpy.repeat",
    "numpy.tile",
    "pandas.MultiIndex.from_arrays",
    "pandas.core.panel.panel_index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.xlrd": {
  "data": {
   "shadows": "xlrd"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.xlsxwriter": {
  "data": {
   "shadows": "xlsxwriter"
  },
  "type": "import"
 },
 "pandas.tests.test_panel.xlwt": {
  "data": {
   "shadows": "xlwt"
  },
  "type": "import"
 },
 "pandas.tests.test_panel4d": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.tests.test_panel4d.nose"
   ]
  },
  "type": "module"
 },
 "pandas.tests.test_panel4d.CheckIndexing": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_comparisons": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "pandas.tests.test_panel4d.operator",
    "pandas.util.testing.makePanel4D",
    "test_comp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_comparisons.test_comp": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "Exception",
    "func"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_delitem_and_pop": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "Exception",
    "numpy.empty",
    "pandas.compat.lrange",
    "pandas.core.panel4d.Panel4D",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_get_value": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_getitem": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_getitem_fancy_ints": {
  "data": {
   "lineno": 564
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_getitem_fancy_labels": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "pandas.util.testing.assert_panel4d_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_getitem_fancy_slice": {
  "data": {
   "lineno": 561
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_getitem_fancy_xs": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "pandas.tests.test_panel4d.nose"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_major_xs": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "Exception",
    "pandas.core.datetools.bday",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_major_xs_mixed": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.object_"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_minor_xs": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "Exception",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_minor_xs_mixed": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.object_"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_set_value": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "pandas.core.common.is_float_dtype",
    "pandas.core.panel4d.Panel4D",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_setitem": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "dict",
    "numpy.bool_",
    "numpy.int64",
    "numpy.object_",
    "pandas.core.panel.Panel",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_setitem_by_indexer": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_setitem_by_indexer.func": {
  "data": {
   "lineno": 385
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_setitem_by_indexer_mixed_type": {
  "data": {
   "lineno": 412
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_setitem_ndarray": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "pandas.tests.test_panel4d.nose"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.CheckIndexing.test_xs": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.nan",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.test_panel4d.Panel": {
  "data": {
   "shadows": "pandas.core.panel.Panel"
  },
  "type": "import"
 },
 "pandas.tests.test_panel4d.Panel4D": {
  "data": {
   "shadows": "pandas.core.panel4d.Panel4D"
  },
  "type": "import"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse._check_stat_op": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "Exception",
    "alternative",
    "f",
    "getattr",
    "pandas.compat.range",
    "pandas.util.testing._incompat_bottleneck_version",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse._check_stat_op.skipna_wrapper": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "alternative",
    "len",
    "numpy.nan",
    "pandas.core.series.remove_na"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse._check_stat_op.wrapper": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "alternative",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_count": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "pandas.notnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_iter": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "list",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_max": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_mean": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_median": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_median.wrapper": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "numpy.median",
    "numpy.nan",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_min": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_prod": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_repr": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_sem": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_sem.alt": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "numpy.sqrt",
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_skew": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "ImportError",
    "pandas.tests.test_panel4d.nose"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_skew.this_skew": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "scipy.stats.skew"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_std": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_std.alt": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_sum": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_var": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForLongAndSparse.test_var.alt": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForSparse": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_panel4d.SafeForSparse._test_op": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "op",
    "pandas.util.testing.assert_panel_equal",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForSparse.assert_panel4d_equal": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "classmethod",
    "pandas.util.testing.assert_panel4d_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForSparse.assert_panel_equal": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "classmethod",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForSparse.test_abs": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "numpy.abs",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForSparse.test_arith": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "Exception",
    "pandas.tests.test_panel4d.operator"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForSparse.test_combinePanel4d": {
  "data": {
   "lineno": 237
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForSparse.test_get_axis": {
  "data": {
   "lineno": 161
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForSparse.test_get_axis_name": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForSparse.test_get_axis_number": {
  "data": {
   "lineno": 195
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForSparse.test_get_value": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForSparse.test_iteritems": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForSparse.test_keys": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "list",
    "pandas.util.testing.equalContents"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForSparse.test_neg": {
  "data": {
   "lineno": 241
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForSparse.test_select": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "datetime.datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.SafeForSparse.test_set_axis": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "numpy.arange",
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.test_panel4d.TestPanel4d": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "pandas.tests.test_panel4d.CheckIndexing",
    "pandas.tests.test_panel4d.SafeForLongAndSparse",
    "pandas.tests.test_panel4d.SafeForSparse",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_panel4d.TestPanel4d.assert_panel4d_equal": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "classmethod",
    "pandas.util.testing.assert_panel4d_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.setUp": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "pandas.tests.test_panel4d.add_nans",
    "pandas.util.testing.makePanel4D"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_apply": {
  "data": {
   "lineno": 1007,
   "symbols_in_volume": [
    "pandas.tests.test_panel4d.nose"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_compound": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": [
    "pandas.tests.test_panel4d.nose"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_conform": {
  "data": {
   "lineno": 798
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_consolidate": {
  "data": {
   "lineno": 689
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_constructor": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.object_",
    "pandas.compat.range",
    "pandas.core.panel4d.Panel4D",
    "pandas.util.testing.assert_panel4d_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_constructor_cast": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "numpy.int32",
    "pandas.core.panel.Panel",
    "pandas.core.panel4d.Panel4D",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_constructor_dict_mixed": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "len",
    "numpy.arange",
    "pandas.Index",
    "pandas.core.panel4d.Panel4D",
    "pandas.util.testing.assert_panel4d_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_constructor_empty_panel": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "len",
    "pandas.core.panel.Panel"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_constructor_observe_dtype": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "numpy.object_",
    "pandas.compat.lrange",
    "pandas.core.panel.Panel"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_constructor_resize": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "pandas.core.panel4d.Panel4D",
    "pandas.util.testing.assert_panel4d_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_ctor_dict": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "pandas.core.panel4d.Panel4D",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_dtypes": {
  "data": {
   "lineno": 1010,
   "symbols_in_volume": [
    "numpy.dtype",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_fillna": {
  "data": {
   "lineno": 919,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.isfinite"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_filter": {
  "data": {
   "lineno": 1004,
   "symbols_in_volume": [
    "pandas.tests.test_panel4d.nose"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_from_dict_mixed_orient": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "pandas.tests.test_panel4d.nose"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_from_frame_level1_unsorted": {
  "data": {
   "lineno": 1102,
   "symbols_in_volume": [
    "pandas.tests.test_panel4d.nose"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_get_attr": {
  "data": {
   "lineno": 1099,
   "symbols_in_volume": [
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_multiindex_blocks": {
  "data": {
   "lineno": 1063,
   "symbols_in_volume": [
    "pandas.tests.test_panel4d.nose"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_multiindex_get": {
  "data": {
   "lineno": 1045,
   "symbols_in_volume": [
    "pandas.tests.test_panel4d.nose"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_not_hashable": {
  "data": {
   "lineno": 859,
   "symbols_in_volume": [
    "TypeError",
    "hash",
    "pandas.core.panel4d.Panel4D"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_reindex": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "Exception",
    "list",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel4d_equal",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_reindex_like": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": [
    "pandas.util.testing.assert_panel4d_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_rename": {
  "data": {
   "lineno": 1079,
   "symbols_in_volume": [
    "pandas.Index",
    "str.lower"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_repr_empty": {
  "data": {
   "lineno": 1075,
   "symbols_in_volume": [
    "pandas.core.panel4d.Panel4D",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_shift": {
  "data": {
   "lineno": 1023,
   "symbols_in_volume": [
    "pandas.tests.test_panel4d.nose"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_sort_index": {
  "data": {
   "lineno": 889,
   "symbols_in_volume": [
    "list",
    "pandas.tests.test_panel4d.random",
    "pandas.util.testing.assert_panel4d_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_swapaxes": {
  "data": {
   "lineno": 927,
   "symbols_in_volume": [
    "id",
    "pandas.util.testing.assert_panel4d_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_take": {
  "data": {
   "lineno": 873,
   "symbols_in_volume": [
    "pandas.tests.test_panel4d.nose"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_to_excel": {
  "data": {
   "lineno": 1105,
   "symbols_in_volume": [
    "pandas.tests.test_panel4d.nose"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_to_frame": {
  "data": {
   "lineno": 952,
   "symbols_in_volume": [
    "pandas.tests.test_panel4d.nose"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_to_frame_mixed": {
  "data": {
   "lineno": 966,
   "symbols_in_volume": [
    "pandas.tests.test_panel4d.nose"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_update": {
  "data": {
   "lineno": 977,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.core.panel4d.Panel4D",
    "pandas.util.testing.assert_panel4d_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.TestPanel4d.test_values": {
  "data": {
   "lineno": 794,
   "symbols_in_volume": [
    "Exception",
    "numpy.random.randn",
    "pandas.compat.lrange",
    "pandas.core.panel.Panel"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.add_nans": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "enumerate",
    "pandas.util.testing.add_nans"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panel4d.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_panel4d.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_panel4d.assert_panel4d_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_panel4d_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_panel4d.assert_panel_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_panel_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_panel4d.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_panel4d.bday": {
  "data": {
   "shadows": "pandas.core.datetools.bday"
  },
  "type": "import"
 },
 "pandas.tests.test_panel4d.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.tests.test_panel4d.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.test_panel4d.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tests.test_panel4d.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.test_panel4d.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tests.test_panel4d.notnull": {
  "data": {
   "shadows": "pandas.notnull"
  },
  "type": "import"
 },
 "pandas.tests.test_panel4d.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.test_panel4d.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "pandas.tests.test_panel4d.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "pandas.tests.test_panel4d.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.test_panel4d.remove_na": {
  "data": {
   "shadows": "pandas.core.series.remove_na"
  },
  "type": "import"
 },
 "pandas.tests.test_panel4d.skew": {
  "data": {
   "shadows": "scipy.stats.skew"
  },
  "type": "import"
 },
 "pandas.tests.test_panel4d.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.test_panelnd": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.tests.test_panelnd.nose"
   ]
  },
  "type": "module"
 },
 "pandas.tests.test_panelnd.Panel": {
  "data": {
   "shadows": "pandas.core.panel.Panel"
  },
  "type": "import"
 },
 "pandas.tests.test_panelnd.TestPanelnd": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_panelnd.TestPanelnd.setUp": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "pandas.tests.test_panelnd.TestPanelnd.test_4d_construction": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "Panel4D",
    "dict",
    "pandas.core.panel.Panel",
    "pandas.core.panelnd.create_nd_panel_factory",
    "pandas.util.testing.makePanel"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panelnd.TestPanelnd.test_4d_construction_alt": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "Panel4D",
    "dict",
    "pandas.core.panelnd.create_nd_panel_factory",
    "pandas.util.testing.makePanel"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panelnd.TestPanelnd.test_4d_construction_error": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "Exception",
    "pandas.core.panelnd.create_nd_panel_factory"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panelnd.TestPanelnd.test_5d_construction": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "Panel4D",
    "Panel5D",
    "dict",
    "pandas.core.panel.Panel",
    "pandas.core.panelnd.create_nd_panel_factory",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.makePanel"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_panelnd.assert_panel_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_panel_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_panelnd.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tests.test_panelnd.panelnd": {
  "data": {
   "shadows": "pandas.core.panelnd"
  },
  "type": "import"
 },
 "pandas.tests.test_panelnd.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.test_reshape": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.tests.test_reshape.nose"
   ]
  },
  "type": "module"
 },
 "pandas.tests.test_reshape.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.test_reshape.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.test_reshape.SparseDataFrame": {
  "data": {
   "shadows": "pandas.core.sparse.SparseDataFrame"
  },
  "type": "import"
 },
 "pandas.tests.test_reshape.TestGetDummies": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_reshape.TestGetDummies.setUp": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_reshape.TestGetDummies.test_basic": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.core.reshape.get_dummies",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_reshape.TestGetDummies.test_basic_drop_first": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.core.reshape.get_dummies",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_reshape.TestGetDummies.test_basic_drop_first_NA": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.core.reshape.get_dummies",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_reshape.TestGetDummies.test_basic_drop_first_one_level": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.core.reshape.get_dummies",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_reshape.TestGetDummies.test_basic_types": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.core.internals.FloatBlock",
    "pandas.core.internals.SparseBlock",
    "pandas.core.reshape.get_dummies",
    "pandas.core.sparse.SparseDataFrame",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_reshape.TestGetDummies.test_dataframe_dummies_all_obj": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.core.reshape.get_dummies",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_reshape.TestGetDummies.test_dataframe_dummies_drop_first": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.core.reshape.get_dummies",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_reshape.TestGetDummies.test_dataframe_dummies_drop_first_with_categorical": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.core.reshape.get_dummies",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_reshape.TestGetDummies.test_dataframe_dummies_drop_first_with_na": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.core.reshape.get_dummies",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_reshape.TestGetDummies.test_dataframe_dummies_mix_default": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.core.reshape.get_dummies",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_reshape.TestGetDummies.test_dataframe_dummies_prefix_bad_length": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "ValueError",
    "pandas.core.reshape.get_dummies",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_reshape.TestGetDummies.test_dataframe_dummies_prefix_dict": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.core.reshape.get_dummies",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_reshape.TestGetDummies.test_dataframe_dummies_prefix_list": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.core.reshape.get_dummies",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_reshape.TestGetDummies.test_dataframe_dummies_prefix_sep": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.core.reshape.get_dummies",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_reshape.TestGetDummies.test_dataframe_dummies_prefix_sep_bad_length": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "ValueError",
    "pandas.core.reshape.get_dummies",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_reshape.TestGetDummies.test_dataframe_dummies_prefix_str": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.core.reshape.get_dummies",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_reshape.TestGetDummies.test_dataframe_dummies_subset": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.core.reshape.get_dummies",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_reshape.TestGetDummies.test_dataframe_dummies_with_categorical": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.core.reshape.get_dummies",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_reshape.TestGetDummies.test_dataframe_dummies_with_na": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.core.reshape.get_dummies",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_reshape.TestGetDummies.test_include_na": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.core.reshape.get_dummies",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_reshape.TestGetDummies.test_just_na": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.core.reshape.get_dummies"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_reshape.TestGetDummies.test_unicode": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.u",
    "pandas.core.reshape.get_dummies",
    "pandas.tests.test_reshape.unicodedata",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_reshape.TestGetDummiesSparse": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "pandas.tests.test_reshape.TestGetDummies"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_reshape.TestLreshape": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_reshape.TestLreshape.test_pairs": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.core.reshape.lreshape",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_reshape.TestMelt": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_reshape.TestMelt.setUp": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "list",
    "numpy.int64",
    "pandas.DataFrame",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_reshape.TestMelt.test_col_level": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "pandas.core.reshape.melt"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_reshape.TestMelt.test_custom_value_name": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.core.reshape.melt",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_reshape.TestMelt.test_custom_var_and_value_name": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.core.reshape.melt",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_reshape.TestMelt.test_custom_var_name": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.core.reshape.melt",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_reshape.TestMelt.test_default_col_names": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pandas.core.reshape.melt"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_reshape.TestMelt.test_multiindex": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "pandas.melt"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_reshape.TestMelt.test_value_vars": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "pandas.core.reshape.melt",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_reshape.TestWideToLong": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_reshape.TestWideToLong.test_simple": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "dict",
    "numpy.random.randn",
    "numpy.random.seed",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.core.reshape.wide_to_long",
    "pandas.util.testing.assert_frame_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_reshape.TestWideToLong.test_stubs": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.wide_to_long"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_reshape._multiprocess_can_split_": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "pandas.tests.test_reshape.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_reshape.get_dummies": {
  "data": {
   "shadows": "pandas.core.reshape.get_dummies"
  },
  "type": "import"
 },
 "pandas.tests.test_reshape.lreshape": {
  "data": {
   "shadows": "pandas.core.reshape.lreshape"
  },
  "type": "import"
 },
 "pandas.tests.test_reshape.melt": {
  "data": {
   "shadows": "pandas.core.reshape.melt"
  },
  "type": "import"
 },
 "pandas.tests.test_reshape.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.test_reshape.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tests.test_reshape.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.test_reshape.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.test_reshape.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.test_reshape.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.test_reshape.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.test_reshape.unicodedata": {
  "data": {
   "shadows": "unicodedata"
  },
  "type": "import"
 },
 "pandas.tests.test_reshape.wide_to_long": {
  "data": {
   "shadows": "pandas.core.reshape.wide_to_long"
  },
  "type": "import"
 },
 "pandas.tests.test_rplot": {
  "data": {
   "symbols_in_volume": [
    "FutureWarning",
    "__name__",
    "pandas.tests.test_rplot.unittest",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "module"
 },
 "pandas.tests.test_rplot.TestRPlot": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase",
    "pandas.util.testing.mplskip"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_rplot.TestRPlot.test_rplot1": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.gcf",
    "pandas.read_csv",
    "pandas.tests.test_rplot.curpath",
    "pandas.tests.test_rplot.os",
    "pandas.tools.rplot.GeomPoint",
    "pandas.tools.rplot.RPlot",
    "pandas.tools.rplot.ScaleRandomColour",
    "pandas.tools.rplot.ScaleShape",
    "pandas.tools.rplot.TrellisGrid"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_rplot.TestRPlot.test_rplot2": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.gcf",
    "pandas.read_csv",
    "pandas.tests.test_rplot.curpath",
    "pandas.tests.test_rplot.os",
    "pandas.tools.rplot.GeomPoint",
    "pandas.tools.rplot.RPlot",
    "pandas.tools.rplot.ScaleRandomColour",
    "pandas.tools.rplot.ScaleShape",
    "pandas.tools.rplot.TrellisGrid"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_rplot.TestRPlot.test_rplot3": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.gcf",
    "pandas.read_csv",
    "pandas.tests.test_rplot.curpath",
    "pandas.tests.test_rplot.os",
    "pandas.tools.rplot.GeomPoint",
    "pandas.tools.rplot.RPlot",
    "pandas.tools.rplot.ScaleRandomColour",
    "pandas.tools.rplot.ScaleShape",
    "pandas.tools.rplot.TrellisGrid"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_rplot.TestRPlot.test_rplot_iris": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.gcf",
    "pandas.read_csv",
    "pandas.tests.test_rplot.curpath",
    "pandas.tests.test_rplot.os",
    "pandas.tools.rplot.GeomPoint",
    "pandas.tools.rplot.RPlot",
    "pandas.tools.rplot.ScaleGradient",
    "pandas.tools.rplot.ScaleShape",
    "pandas.tools.rplot.ScaleSize"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_rplot.TestScaleConstant": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase",
    "pandas.util.testing.mplskip"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_rplot.TestScaleConstant.test_scale_constant": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "pandas.tools.rplot.ScaleConstant",
    "scale"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_rplot.TestScaleGradient": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase",
    "pandas.util.testing.mplskip"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_rplot.TestScaleGradient.setUp": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "pandas.read_csv",
    "pandas.tests.test_rplot.curpath",
    "pandas.tests.test_rplot.os",
    "pandas.tools.rplot.ScaleGradient"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_rplot.TestScaleGradient.test_gradient": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "len",
    "pandas.compat.range",
    "pandas.tests.test_rplot.between"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_rplot.TestScaleGradient2": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase",
    "pandas.util.testing.mplskip"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_rplot.TestScaleGradient2.setUp": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "pandas.read_csv",
    "pandas.tests.test_rplot.curpath",
    "pandas.tests.test_rplot.os",
    "pandas.tools.rplot.ScaleGradient2"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_rplot.TestScaleGradient2.test_gradient2": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "len",
    "max",
    "min",
    "pandas.compat.range",
    "pandas.tests.test_rplot.between"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_rplot.TestScaleRandomColour": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase",
    "pandas.util.testing.mplskip"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_rplot.TestScaleRandomColour.setUp": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "pandas.read_csv",
    "pandas.tests.test_rplot.curpath",
    "pandas.tests.test_rplot.os",
    "pandas.tools.rplot.ScaleRandomColour"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_rplot.TestScaleRandomColour.test_random_colour": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "len",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_rplot.TestScaleSize": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_rplot.TestScaleSize.setUp": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "pandas.read_csv",
    "pandas.tests.test_rplot.curpath",
    "pandas.tests.test_rplot.os",
    "pandas.tools.rplot.ScaleShape"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_rplot.TestScaleSize.test_scale_overflow": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_rplot.TestScaleSize.test_scale_overflow.f": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "len",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_rplot.TestScaleSize.test_scale_size": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "len",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_rplot.TestTrellis": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase",
    "pandas.util.testing.mplskip"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_rplot.TestTrellis.setUp": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "pandas.read_csv",
    "pandas.tests.test_rplot.curpath",
    "pandas.tests.test_rplot.os",
    "pandas.tools.rplot.GeomPoint",
    "pandas.tools.rplot.GeomPolyFit",
    "pandas.tools.rplot.Layer",
    "pandas.tools.rplot.TrellisGrid",
    "pandas.tools.rplot.sequence_layers"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_rplot.TestTrellis.test_grid_sizes": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_rplot.TestTrellis.test_trellis_cols_rows": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "pandas.tests.test_rplot.TestUtilityFunctions": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase",
    "pandas.util.testing.mplskip"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_rplot.TestUtilityFunctions.setUp": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "pandas.read_csv",
    "pandas.tests.test_rplot.curpath",
    "pandas.tests.test_rplot.os"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_rplot.TestUtilityFunctions.test_dictionary_union": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "len",
    "list",
    "pandas.tools.rplot.dictionary_union"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_rplot.TestUtilityFunctions.test_make_aes1": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "pandas.tools.rplot.make_aes"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_rplot.TestUtilityFunctions.test_make_aes2": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tools.rplot.ScaleShape",
    "pandas.tools.rplot.ScaleSize",
    "pandas.tools.rplot.make_aes"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_rplot.TestUtilityFunctions.test_merge_aes": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "isinstance",
    "pandas.tools.rplot.Layer",
    "pandas.tools.rplot.ScaleShape",
    "pandas.tools.rplot.ScaleSize",
    "pandas.tools.rplot.merge_aes"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_rplot.TestUtilityFunctions.test_sequence_layers": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "pandas.tools.rplot.GeomPoint",
    "pandas.tools.rplot.GeomPolyFit",
    "pandas.tools.rplot.Layer",
    "pandas.tools.rplot.ScaleSize",
    "pandas.tools.rplot.sequence_layers"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_rplot.between": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "pandas.tests.test_rplot.curpath": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pandas.tests.test_rplot.os"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_rplot.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.tests.test_rplot.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pandas.tests.test_rplot.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.test_rplot.read_csv": {
  "data": {
   "shadows": "pandas.read_csv"
  },
  "type": "import"
 },
 "pandas.tests.test_rplot.rplot": {
  "data": {
   "shadows": "pandas.tools.rplot"
  },
  "type": "import"
 },
 "pandas.tests.test_rplot.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.test_rplot.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pandas.tests.test_stats": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.tests.test_stats.nose"
   ]
  },
  "type": "module"
 },
 "pandas.tests.test_stats.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.test_stats.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.tests.test_stats.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.test_stats.TestRank": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_stats.TestRank.test_rank_2d_tie_methods": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "_check2d",
    "object",
    "pandas.compat.product",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_stats.TestRank.test_rank_2d_tie_methods._check2d": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_stats.TestRank.test_rank_dense_method": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_stats.TestRank.test_rank_descending": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "pandas.compat.product",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_stats.TestRank.test_rank_int": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.iteritems",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_stats.TestRank.test_rank_methods_frame": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "chr",
    "distutils.version.LooseVersion",
    "numpy.apply_along_axis",
    "numpy.float64",
    "numpy.random.randint",
    "ord",
    "pandas.DataFrame",
    "pandas.tests.test_stats.scipy",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.skip_if_no_package",
    "range",
    "scipy.stats.rankdata"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_stats.TestRank.test_rank_methods_series": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "chr",
    "distutils.version.LooseVersion",
    "len",
    "numpy.concatenate",
    "numpy.random.randn",
    "numpy.random.shuffle",
    "ord",
    "pandas.Series",
    "pandas.tests.test_stats.scipy",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.skip_if_no_package",
    "range",
    "scipy.stats.rankdata"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_stats.TestRank.test_rank_tie_methods": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "_check",
    "object",
    "pandas.compat.product",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_stats.TestRank.test_rank_tie_methods._check": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_stats.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_stats.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_stats.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.test_stats.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.test_stats.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tests.test_stats.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.test_stats.product": {
  "data": {
   "shadows": "pandas.compat.product"
  },
  "type": "import"
 },
 "pandas.tests.test_stats.rankdata": {
  "data": {
   "shadows": "scipy.stats.rankdata"
  },
  "type": "import"
 },
 "pandas.tests.test_stats.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "pandas.tests.test_stats.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.test_strings": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.tests.test_strings.nose"
   ]
  },
  "type": "module"
 },
 "pandas.tests.test_strings.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.test_strings.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.test_strings.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tests.test_strings.NA": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.test_strings.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.test_strings.StringMethods": {
  "data": {
   "shadows": "pandas.core.strings.StringMethods"
  },
  "type": "import"
 },
 "pandas.tests.test_strings.TestStringMethods": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_strings.TestStringMethods.test_api": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "AttributeError",
    "hasattr",
    "pandas.Series",
    "pandas.Series.str",
    "pandas.core.strings.StringMethods",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_capitalize": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "datetime.datetime.today",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_casemethods": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_cat": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.core.strings.str_cat",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_cat_on_filtered_index": {
  "data": {
   "lineno": 2507,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_center_ljust_rjust": {
  "data": {
   "lineno": 1556,
   "symbols_in_volume": [
    "datetime.datetime.today",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_center_ljust_rjust_fillchar": {
  "data": {
   "lineno": 1608,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "pandas.Series",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_contains": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "datetime.datetime.today",
    "numpy.bool_",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.core.strings.str_contains",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_count": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "datetime.datetime.today",
    "numpy.array",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.core.strings.str_count",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_deprecated_match": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "datetime.datetime.today",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_empty_str_methods": {
  "data": {
   "lineno": 1073,
   "symbols_in_volume": [
    "bool",
    "int",
    "list",
    "object",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.PY3",
    "pandas.tests.test_strings.string",
    "pandas.util.testing.assert_equal",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "str",
    "str.maketrans"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_empty_str_methods_to_frame": {
  "data": {
   "lineno": 1150,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_encode_decode": {
  "data": {
   "lineno": 2453,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.u",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_encode_decode_errors": {
  "data": {
   "lineno": 2463,
   "symbols_in_volume": [
    "UnicodeDecodeError",
    "UnicodeEncodeError",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_endswith": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "bool",
    "datetime.datetime.today",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.core.strings.str_endswith",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extract_expand_False": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "ValueError",
    "check_index",
    "datetime.datetime.today",
    "index",
    "klass",
    "numpy.nan",
    "object",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_equal",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeDateIndex",
    "pandas.util.testing.makeIntIndex",
    "pandas.util.testing.makePeriodIndex",
    "pandas.util.testing.makeRangeIndex",
    "pandas.util.testing.makeStringIndex",
    "pandas.util.testing.makeUnicodeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extract_expand_False.check_index": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extract_expand_None": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extract_expand_True": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "ValueError",
    "datetime.datetime.today",
    "klass",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extract_expand_unspecified": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extract_index_one_two_groups": {
  "data": {
   "lineno": 993,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extract_optional_groups": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "check_index",
    "index",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.makeDateIndex",
    "pandas.util.testing.makeIntIndex",
    "pandas.util.testing.makePeriodIndex",
    "pandas.util.testing.makeRangeIndex",
    "pandas.util.testing.makeStringIndex",
    "pandas.util.testing.makeUnicodeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extract_optional_groups.check_index": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "index",
    "len",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extract_series": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "numpy.nan",
    "object",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extract_single_group_returns_frame": {
  "data": {
   "lineno": 827,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extractall": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.Series",
    "pandas.tests.test_strings.re",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extractall_errors": {
  "data": {
   "lineno": 985,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Series",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extractall_no_matches": {
  "data": {
   "lineno": 961,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extractall_same_as_extract": {
  "data": {
   "lineno": 1013,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extractall_same_as_extract_subject_index": {
  "data": {
   "lineno": 1040,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_tuples",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_extractall_single_group": {
  "data": {
   "lineno": 941,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_find": {
  "data": {
   "lineno": 1334,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "pandas.Series",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_find_nan": {
  "data": {
   "lineno": 1374,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_findall": {
  "data": {
   "lineno": 1310,
   "symbols_in_volume": [
    "datetime.datetime.today",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_get": {
  "data": {
   "lineno": 2326,
   "symbols_in_volume": [
    "datetime.datetime.today",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_get_dummies": {
  "data": {
   "lineno": 1227,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_tuples",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_get_dummies_with_name_dummy": {
  "data": {
   "lineno": 1248,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_tuples",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_index": {
  "data": {
   "lineno": 1394,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "klass",
    "numpy.array",
    "numpy.nan",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_index_str_accessor_visibility": {
  "data": {
   "lineno": 2533,
   "symbols_in_volume": [
    "AttributeError",
    "datetime.datetime",
    "datetime.timedelta",
    "isinstance",
    "numpy.nan",
    "pandas.Index",
    "pandas.MultiIndex.from_tuples",
    "pandas.Series",
    "pandas.compat.PY3",
    "pandas.compat.u",
    "pandas.core.strings.StringMethods"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_ismethods": {
  "data": {
   "lineno": 1156,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_isnumeric": {
  "data": {
   "lineno": 1202,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_iter": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Series",
    "pandas.compat.string_types",
    "pandas.isnull",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_iter_empty": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "enumerate",
    "object",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_iter_object_try_string": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "enumerate",
    "numpy.random.randint",
    "pandas.Series",
    "pandas.compat.range",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_iter_single_element": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "enumerate",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_join": {
  "data": {
   "lineno": 1265,
   "symbols_in_volume": [
    "datetime.datetime.today",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_len": {
  "data": {
   "lineno": 1285,
   "symbols_in_volume": [
    "datetime.datetime.today",
    "len",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.core.common.notnull",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_lower_upper": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "datetime.datetime.today",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_match": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "datetime.datetime.today",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_match_findall_flags": {
  "data": {
   "lineno": 2429,
   "symbols_in_volume": [
    "FutureWarning",
    "UserWarning",
    "numpy.nan",
    "pandas.Series",
    "pandas.tests.test_strings.re",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_method_on_bytes": {
  "data": {
   "lineno": 2588,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "numpy.array",
    "object",
    "pandas.Series",
    "pandas.compat.PY3",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_more_contains": {
  "data": {
   "lineno": 2350,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_more_replace": {
  "data": {
   "lineno": 2380,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_normalize": {
  "data": {
   "lineno": 2483,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.Index",
    "pandas.Series",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_pad": {
  "data": {
   "lineno": 1442,
   "symbols_in_volume": [
    "datetime.datetime.today",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_pad_fillchar": {
  "data": {
   "lineno": 1500,
   "symbols_in_volume": [
    "TypeError",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_partition_index": {
  "data": {
   "lineno": 2043,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "pandas.Index",
    "pandas.MultiIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_partition_series": {
  "data": {
   "lineno": 1976,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_partition_to_dataframe": {
  "data": {
   "lineno": 2070,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_partition_with_name": {
  "data": {
   "lineno": 2097,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_tuples",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_pipe_failures": {
  "data": {
   "lineno": 2122,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_repeat": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "datetime.datetime.today",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_replace": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "datetime.datetime.today",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.tests.test_strings.re",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_rsplit": {
  "data": {
   "lineno": 1722,
   "symbols_in_volume": [
    "datetime.datetime.today",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_rsplit_to_dataframe_expand": {
  "data": {
   "lineno": 1902,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_rsplit_to_multiindex_expand": {
  "data": {
   "lineno": 1931,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_slice": {
  "data": {
   "lineno": 2136,
   "symbols_in_volume": [
    "datetime.datetime.today",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.isnull",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal",
    "print"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_slice_replace": {
  "data": {
   "lineno": 2178,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_split": {
  "data": {
   "lineno": 1676,
   "symbols_in_volume": [
    "datetime.datetime.today",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_split_maxsplit": {
  "data": {
   "lineno": 1780,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_split_no_pat_with_nonzero_n": {
  "data": {
   "lineno": 1798,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_split_noargs": {
  "data": {
   "lineno": 1771,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_split_to_dataframe": {
  "data": {
   "lineno": 1804,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_split_to_dataframe_expand": {
  "data": {
   "lineno": 1843,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_split_to_multiindex_expand": {
  "data": {
   "lineno": 1876,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "numpy.nan",
    "pandas.Index",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_split_with_name": {
  "data": {
   "lineno": 1952,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_tuples",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_startswith": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "bool",
    "datetime.datetime.today",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.core.strings.str_startswith",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_str_accessor_no_new_attributes": {
  "data": {
   "lineno": 2581,
   "symbols_in_volume": [
    "AttributeError",
    "list",
    "pandas.Series",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_str_cat_raises_intuitive_error": {
  "data": {
   "lineno": 2524,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Series",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_string_slice_get_syntax": {
  "data": {
   "lineno": 2400,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_string_slice_out_of_bounds": {
  "data": {
   "lineno": 2416,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_strip_lstrip_rstrip": {
  "data": {
   "lineno": 2216,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_strip_lstrip_rstrip_args": {
  "data": {
   "lineno": 2270,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_strip_lstrip_rstrip_args_unicode": {
  "data": {
   "lineno": 2285,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.u",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_strip_lstrip_rstrip_mixed": {
  "data": {
   "lineno": 2231,
   "symbols_in_volume": [
    "datetime.datetime.today",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_strip_lstrip_rstrip_unicode": {
  "data": {
   "lineno": 2254,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_swapcase": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "datetime.datetime.today",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_title": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "datetime.datetime.today",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_translate": {
  "data": {
   "lineno": 1524,
   "symbols_in_volume": [
    "ValueError",
    "klass",
    "numpy.nan",
    "pandas.Index",
    "pandas.Series",
    "pandas.compat.PY3",
    "pandas.tests.test_strings.string",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_numpy_array_equal",
    "str.maketrans"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_wrap": {
  "data": {
   "lineno": 2300,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.u",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.TestStringMethods.test_zfill": {
  "data": {
   "lineno": 1656,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_strings.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_strings.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.tests.test_strings.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tests.test_strings.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.test_strings.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tests.test_strings.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tests.test_strings.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.test_strings.randint": {
  "data": {
   "shadows": "numpy.random.randint"
  },
  "type": "import"
 },
 "pandas.tests.test_strings.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.test_strings.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pandas.tests.test_strings.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "pandas.tests.test_strings.strings": {
  "data": {
   "shadows": "pandas.core.strings"
  },
  "type": "import"
 },
 "pandas.tests.test_strings.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tests.test_strings.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.test_strings.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tests.test_take": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.tests.test_take.nose"
   ]
  },
  "type": "module"
 },
 "pandas.tests.test_take.TestTake": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "pandas.tests.test_take._multiprocess_can_split_",
    "pandas.tests.test_take.re",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_take.TestTake.test_1d_bool": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "bool",
    "numpy.array",
    "numpy.object_",
    "pandas.core.algorithms.take_1d"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_1d_fill_nonna": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "_test_dtype",
    "numpy.bool_",
    "numpy.complex128",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int8",
    "numpy.object_"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_1d_fill_nonna._test_dtype": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.core.algorithms.take_1d"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_1d_other_dtypes": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.core.algorithms.take_1d",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_1d_with_out": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "_test_dtype",
    "numpy.bool",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.object_",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_1d_with_out._test_dtype": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "TypeError",
    "numpy.empty",
    "numpy.nan",
    "numpy.random.randint",
    "pandas.core.algorithms.take_1d",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_2d_bool": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "bool",
    "numpy.array",
    "numpy.object_",
    "pandas.core.algorithms.take_nd"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_2d_datetime64": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.empty_like",
    "numpy.int64",
    "numpy.random.randint",
    "pandas.compat.long",
    "pandas.core.algorithms.take_nd",
    "pandas.tslib.iNaT",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_2d_fill_nonna": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "_test_dtype",
    "numpy.bool_",
    "numpy.complex128",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int8",
    "numpy.object_"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_2d_fill_nonna._test_dtype": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.core.algorithms.take_nd"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_2d_float32": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "len",
    "numpy.empty",
    "numpy.empty_like",
    "numpy.float32",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.core.algorithms.take_nd",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_2d_other_dtypes": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.core.algorithms.take_nd",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_2d_with_out": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "_test_dtype",
    "numpy.bool",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.object_",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_2d_with_out._test_dtype": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "TypeError",
    "enumerate",
    "numpy.empty",
    "numpy.nan",
    "numpy.random.randint",
    "pandas.core.algorithms.take_nd",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_3d_fill_nonna": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "_test_dtype",
    "numpy.bool_",
    "numpy.complex128",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int8",
    "numpy.object_"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_3d_fill_nonna._test_dtype": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.core.algorithms.take_nd"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_3d_with_out": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "_test_dtype",
    "numpy.bool",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.object_",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_take.TestTake.test_3d_with_out._test_dtype": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "TypeError",
    "enumerate",
    "numpy.empty",
    "numpy.nan",
    "numpy.random.randint",
    "pandas.core.algorithms.take_nd",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_take._multiprocess_can_split_": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pandas.tests.test_take.algos": {
  "data": {
   "shadows": "pandas.core.algorithms"
  },
  "type": "import"
 },
 "pandas.tests.test_take.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.test_take.iNaT": {
  "data": {
   "shadows": "pandas.tslib.iNaT"
  },
  "type": "import"
 },
 "pandas.tests.test_take.long": {
  "data": {
   "shadows": "pandas.compat.long"
  },
  "type": "import"
 },
 "pandas.tests.test_take.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tests.test_take.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.test_take.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pandas.tests.test_take.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.test_testing": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.tests.test_testing.nose"
   ]
  },
  "type": "module"
 },
 "pandas.tests.test_testing.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.test_testing.RNGContext": {
  "data": {
   "shadows": "pandas.util.testing.RNGContext"
  },
  "type": "import"
 },
 "pandas.tests.test_testing.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.test_testing.SkipTest": {
  "data": {
   "shadows": "nose.SkipTest"
  },
  "type": "import"
 },
 "pandas.tests.test_testing.TestAssertAlmostEqual": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_testing.TestAssertAlmostEqual._assert_almost_equal_both": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_testing.TestAssertAlmostEqual._assert_not_almost_equal_both": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "AssertionError",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_testing.TestAssertAlmostEqual.test_assert_almost_equal_dict_like_object": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "DictLikeObj"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_testing.TestAssertAlmostEqual.test_assert_almost_equal_dict_like_object.DictLikeObj": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_testing.TestAssertAlmostEqual.test_assert_almost_equal_dict_like_object.DictLikeObj.__getitem__": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "pandas.tests.test_testing.TestAssertAlmostEqual.test_assert_almost_equal_dict_like_object.DictLikeObj.keys": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "pandas.tests.test_testing.TestAssertAlmostEqual.test_assert_almost_equal_dicts": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "pandas.tests.test_testing.TestAssertAlmostEqual.test_assert_almost_equal_edge_case_ndarrays": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "numpy.array",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_testing.TestAssertAlmostEqual.test_assert_almost_equal_inf": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "float",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_testing.TestAssertAlmostEqual.test_assert_almost_equal_iterables": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "iter",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_testing.TestAssertAlmostEqual.test_assert_almost_equal_null": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "numpy.NaN"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_testing.TestAssertAlmostEqual.test_assert_almost_equal_numbers": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.int16",
    "numpy.uint32"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_testing.TestAssertAlmostEqual.test_assert_almost_equal_numbers_with_mixed": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_testing.TestAssertAlmostEqual.test_assert_almost_equal_numbers_with_zeros": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "pandas.tests.test_testing.TestAssertAlmostEqual.test_assert_almost_equal_pandas": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_testing.TestAssertAlmostEqual.test_assert_almost_equal_strings": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "pandas.tests.test_testing.TestAssertFrameEqual": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_testing.TestAssertFrameEqual._assert_equal": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_testing.TestAssertFrameEqual._assert_not_equal": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "AssertionError",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_testing.TestAssertFrameEqual.test_empty_dtypes": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_testing.TestAssertFrameEqual.test_frame_equal_message": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "AssertionError",
    "pandas.DataFrame",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_testing.TestAssertFrameEqual.test_index_dtype": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "pandas.DataFrame.from_records"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_testing.TestAssertFrameEqual.test_multiindex_dtype": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "pandas.DataFrame.from_records"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_testing.TestAssertIndexEqual": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "pandas.tests.test_testing.unittest"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_testing.TestAssertIndexEqual.test_index_equal_message": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "AssertionError",
    "pandas.Index",
    "pandas.MultiIndex.from_tuples",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_testing.TestAssertIndexEqual.test_index_equal_metadata_message": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.nan",
    "pandas.Index",
    "pandas.NaT",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_testing.TestAssertNumpyArrayEqual": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_testing.TestAssertNumpyArrayEqual.test_assert_almost_equal_iterable_message": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "AssertionError",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_testing.TestAssertNumpyArrayEqual.test_numpy_array_equal_message": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.array",
    "numpy.nan",
    "pandas.compat.is_platform_windows",
    "pandas.tests.test_testing.nose",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_testing.TestAssertSeriesEqual": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_testing.TestAssertSeriesEqual._assert_equal": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_testing.TestAssertSeriesEqual._assert_not_equal": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "AssertionError",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_testing.TestAssertSeriesEqual.test_equal": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "list",
    "pandas.Series",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_testing.TestAssertSeriesEqual.test_index_dtype": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "pandas.DataFrame.from_records"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_testing.TestAssertSeriesEqual.test_less_precise": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "AssertionError",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_testing.TestAssertSeriesEqual.test_multiindex_dtype": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "pandas.DataFrame.from_records"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_testing.TestAssertSeriesEqual.test_not_equal": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "list",
    "pandas.Series",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_testing.TestAssertSeriesEqual.test_series_equal_message": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "AssertionError",
    "pandas.Series",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_testing.TestDeprecatedTests": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_testing.TestDeprecatedTests.test_warning": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.Series",
    "pandas.util.testing.assert_isinstance",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_testing.TestLocale": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_testing.TestLocale.test_locale": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "len",
    "pandas.tests.test_testing.nose",
    "pandas.tests.test_testing.sys",
    "pandas.util.testing.get_locales"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_testing.TestRNGContext": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "pandas.tests.test_testing.unittest"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_testing.TestRNGContext.test_RNGContext": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.util.testing.RNGContext"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_testing.TestUtilTesting": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_testing.TestUtilTesting.test_raise_with_traceback": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "LookupError",
    "ValueError",
    "pandas.tests.test_testing.sys",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.raise_with_traceback"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_testing.assertRaises": {
  "data": {
   "shadows": "pandas.util.testing.assertRaises"
  },
  "type": "import"
 },
 "pandas.tests.test_testing.assertRaisesRegexp": {
  "data": {
   "shadows": "pandas.util.testing.assertRaisesRegexp"
  },
  "type": "import"
 },
 "pandas.tests.test_testing.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_testing.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_testing.assert_index_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_index_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_testing.assert_numpy_array_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_numpy_array_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_testing.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_testing.is_platform_windows": {
  "data": {
   "shadows": "pandas.compat.is_platform_windows"
  },
  "type": "import"
 },
 "pandas.tests.test_testing.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tests.test_testing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.test_testing.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.test_testing.raise_with_traceback": {
  "data": {
   "shadows": "pandas.util.testing.raise_with_traceback"
  },
  "type": "import"
 },
 "pandas.tests.test_testing.skip_if_no_package_deco": {
  "data": {
   "shadows": "pandas.util.testing.skip_if_no_package_deco"
  },
  "type": "import"
 },
 "pandas.tests.test_testing.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.tests.test_testing.test_skiptest_deco": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "ValueError",
    "f",
    "nose.SkipTest",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_testing.test_skiptest_deco.f": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "pandas.util.testing.skip_if_no_package_deco"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_testing.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.test_testing.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pandas.tests.test_tseries": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.test_tseries.Categorical": {
  "data": {
   "shadows": "pandas.Categorical"
  },
  "type": "import"
 },
 "pandas.tests.test_tseries.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tests.test_tseries.Series": {
  "data": {
   "shadows": "pandas.core.series.Series"
  },
  "type": "import"
 },
 "pandas.tests.test_tseries.TestBinGroupers": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_tseries.TestBinGroupers.setUp": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.TestBinGroupers.test_generate_bins": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "ValueError",
    "func",
    "numpy.array",
    "numpy.int64",
    "pandas.core.groupby.generate_bins_generic",
    "pandas.lib.generate_bins_dt64"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.TestMoments": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_tseries.TestPeriodField": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_tseries.TestPeriodField.test_get_period_field_array_raises_on_out_of_range": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "ValueError",
    "numpy.empty",
    "pandas._period.get_period_field_arr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.TestPeriodField.test_get_period_field_raises_on_out_of_range": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "ValueError",
    "pandas._period.get_period_field"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.TestReducer": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_tseries.TestReducer.test_int_index": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.randn",
    "numpy.sum",
    "pandas.Index",
    "pandas.core.series.Series",
    "pandas.lib.reduce",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.TestTsUtil": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_tseries.TestTsUtil.test_max_valid": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "pandas.Timestamp",
    "pandas.Timestamp.max"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.TestTsUtil.test_min_valid": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "pandas.Timestamp",
    "pandas.Timestamp.min"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.TestTsUtil.test_to_datetime_bijective": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "pandas.Timestamp",
    "pandas.Timestamp.max.to_pydatetime",
    "pandas.Timestamp.max.value",
    "pandas.Timestamp.min.to_pydatetime",
    "pandas.Timestamp.min.value"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.TestTseriesUtil": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_tseries.TestTseriesUtil.test_backfill": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.algos.backfill_int64",
    "pandas.compat.lrange"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.TestTseriesUtil.test_combineFunc": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.TestTseriesUtil.test_groupby": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.TestTseriesUtil.test_groupby_withnull": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.TestTseriesUtil.test_isnull": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.TestTseriesUtil.test_pad": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.algos.pad_int64",
    "pandas.compat.lrange"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.TestTseriesUtil.test_reindex": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.TestTypeInference": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_tseries.TestTypeInference.test_bools": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "bool",
    "numpy.array",
    "numpy.bool_",
    "pandas.lib.infer_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.TestTypeInference.test_categorical": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "list",
    "pandas.Categorical",
    "pandas.Series",
    "pandas.lib.infer_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.TestTypeInference.test_date": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.compat.range",
    "pandas.tests.test_tseries.datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.TestTypeInference.test_datetime": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.compat.range",
    "pandas.tests.test_tseries.datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.TestTypeInference.test_floats": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "pandas.lib.infer_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.TestTypeInference.test_integers": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int32",
    "numpy.int64",
    "pandas.lib.infer_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.TestTypeInference.test_length_zero": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.lib.infer_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.TestTypeInference.test_object": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.lib.infer_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.TestTypeInference.test_string": {
  "data": {
   "lineno": 591
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.TestTypeInference.test_to_object_array_tuples": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "ImportError",
    "collections.namedtuple",
    "pandas.lib.to_object_array_tuples",
    "record"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.TestTypeInference.test_unicode": {
  "data": {
   "lineno": 594
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tests.test_tseries.algos": {
  "data": {
   "shadows": "pandas.algos"
  },
  "type": "import"
 },
 "pandas.tests.test_tseries.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_tseries.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.tests.test_tseries.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pandas.tests.test_tseries.generate_bins_generic": {
  "data": {
   "shadows": "pandas.core.groupby.generate_bins_generic"
  },
  "type": "import"
 },
 "pandas.tests.test_tseries.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tests.test_tseries.lib": {
  "data": {
   "shadows": "pandas.lib"
  },
  "type": "import"
 },
 "pandas.tests.test_tseries.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tests.test_tseries.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "pandas.tests.test_tseries.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandas.tests.test_tseries.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.test_tseries.parse": {
  "data": {
   "shadows": "dateutil.parser.parse"
  },
  "type": "import"
 },
 "pandas.tests.test_tseries.period": {
  "data": {
   "shadows": "pandas._period"
  },
  "type": "import"
 },
 "pandas.tests.test_tseries.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.test_tseries.rankdata": {
  "data": {
   "shadows": "scipy.stats.rankdata"
  },
  "type": "import"
 },
 "pandas.tests.test_tseries.test_arrmap": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.bool_",
    "pandas.algos.arrmap_object"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.test_convert_infs": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "pandas.lib.maybe_convert_numeric",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.test_convert_objects": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "numpy.object_",
    "pandas.lib.maybe_convert_objects"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.test_convert_objects_complex_number": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "issubclass",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.complexfloating",
    "numpy.dtype",
    "numpy.sctypes",
    "pandas.lib.maybe_convert_objects"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.test_convert_objects_ints": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "issubclass",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.dtype",
    "numpy.integer",
    "pandas.lib.maybe_convert_objects"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.test_duplicated_with_nas": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "enumerate",
    "numpy.array",
    "numpy.array_equal",
    "numpy.empty",
    "numpy.nan",
    "object",
    "pandas.compat.zip",
    "pandas.lib.duplicated"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.test_ensure_platform_int": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.algos.ensure_platform_int"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.test_get_reverse_indexer": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array_equal",
    "numpy.int64",
    "pandas.lib.get_reverse_indexer"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.test_group_ohlc": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "_check"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.test_group_ohlc._check": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "_ohlc",
    "func",
    "getattr",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.diff",
    "numpy.int64",
    "numpy.nan",
    "numpy.r_",
    "numpy.random.randn",
    "numpy.repeat",
    "numpy.zeros",
    "pandas.algos",
    "pandas.core.common._ensure_int64",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.test_group_ohlc._check._ohlc": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.repeat",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.test_groupsort_indexer": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.array_equal",
    "numpy.int64",
    "numpy.lexsort",
    "numpy.random.randint",
    "pandas.algos.groupsort_indexer"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.test_inner_join_indexer": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "pandas.algos.inner_join_indexer_int64",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.test_inner_join_indexer2": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "pandas.Index",
    "pandas.algos.inner_join_indexer_int64",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.test_is_lexsorted": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.algos.is_lexsorted"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.test_left_join_indexer": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "pandas.algos.left_join_indexer_int64",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.test_left_join_indexer2": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "pandas.Index",
    "pandas.algos.left_join_indexer_int64",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.test_left_join_indexer_unique": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array_equal",
    "numpy.int64",
    "pandas.algos.left_join_indexer_unique_int64"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.test_left_outer_join_bug": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.array_equal",
    "numpy.int64",
    "numpy.ones",
    "pandas.algos.left_outer_join"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.test_maybe_booleans_to_slice": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.bool_",
    "numpy.uint8",
    "pandas.lib.maybe_booleans_to_slice",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.test_outer_join_indexer": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "pandas.algos.outer_join_indexer_int64",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.test_outer_join_indexer2": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "pandas.Index",
    "pandas.algos.outer_join_indexer_int64",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.test_pad_backfill_object_segfault": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array_equal",
    "numpy.int64",
    "pandas.algos.backfill_object",
    "pandas.algos.pad_object",
    "pandas.tests.test_tseries.datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.test_rank": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "_check",
    "numpy.array",
    "numpy.nan",
    "pandas.util.testing._skip_if_no_scipy"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.test_rank._check": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.isfinite",
    "numpy.nan",
    "pandas.algos.rank_1d_float64",
    "pandas.util.testing.assert_almost_equal",
    "scipy.stats.rankdata"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.test_scientific_no_exponent": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "numpy.isnan",
    "pandas.lib.maybe_convert_numeric",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.test_series_bin_grouper": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "numpy.mean",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.lib.SeriesBinGrouper",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.test_series_grouper": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "numpy.mean",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.lib.SeriesGrouper",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.test_try_parse_dates": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "dateutil.parser.parse",
    "numpy.array",
    "numpy.array_equal",
    "object",
    "pandas.lib.try_parse_dates"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_tseries.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.test_tseries.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.tests.test_util": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.tests.test_util.nose"
   ]
  },
  "type": "module"
 },
 "pandas.tests.test_util.BadMove": {
  "data": {
   "shadows": "pandas.util._move.BadMove"
  },
  "type": "import"
 },
 "pandas.tests.test_util.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pandas.tests.test_util.TestDecorators": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_util.TestDecorators.setUp": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "pandas.tests.test_util.TestDecorators.setUp._f1": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "pandas.util.decorators.deprecate_kwarg"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_util.TestDecorators.setUp._f2": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "pandas.util.decorators.deprecate_kwarg"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_util.TestDecorators.setUp._f3": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "pandas.util.decorators.deprecate_kwarg"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_util.TestDecorators.test_bad_deprecate_kwarg": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "TypeError",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_util.TestDecorators.test_bad_deprecate_kwarg.f4": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "pandas.util.decorators.deprecate_kwarg"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_util.TestDecorators.test_callable_deprecate_kwarg": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "FutureWarning",
    "TypeError",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_util.TestDecorators.test_deprecate_kwarg": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_util.TestDecorators.test_dict_deprecate_kwarg": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_util.TestDecorators.test_missing_deprecate_kwarg": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_util.TestMove": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_util.TestMove.test_exactly_one_ref": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "bytearray",
    "pandas.util._move.move_into_mutable_buffer"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_util.TestMove.test_more_than_one_ref": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "pandas.util._move.BadMove",
    "pandas.util._move.move_into_mutable_buffer",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_util.TestMove.test_more_than_one_ref.handle_success": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_util.TestValidateArgs": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_util.TestValidateArgs.test_bad_arg_length_max_value_multiple": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "TypeError",
    "dict",
    "len",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.validators.validate_args"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_util.TestValidateArgs.test_bad_arg_length_max_value_single": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.validators.validate_args"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_util.TestValidateArgs.test_bad_min_fname_arg_count": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "ValueError",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.validators.validate_args"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_util.TestValidateArgs.test_not_all_defaults": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "ValueError",
    "collections.OrderedDict",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.validators.validate_args",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_util.TestValidateArgs.test_validation": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "dict",
    "pandas.util.validators.validate_args"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_util.TestValidateKwargs": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_util.TestValidateKwargs.test_bad_kwarg": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "TypeError",
    "collections.OrderedDict",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.validators.validate_kwargs"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_util.TestValidateKwargs.test_not_all_none": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "ValueError",
    "collections.OrderedDict",
    "dict",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.validators.validate_kwargs",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_util.TestValidateKwargs.test_validation": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "dict",
    "pandas.util.validators.validate_kwargs"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_util.TestValidateKwargsAndArgs": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_util.TestValidateKwargsAndArgs.test_duplicate_argument": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "TypeError",
    "collections.OrderedDict",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.validators.validate_args_and_kwargs"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_util.TestValidateKwargsAndArgs.test_invalid_total_length_max_length_multiple": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.validators.validate_args_and_kwargs"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_util.TestValidateKwargsAndArgs.test_invalid_total_length_max_length_one": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.validators.validate_args_and_kwargs"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_util.TestValidateKwargsAndArgs.test_no_args_with_kwargs": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "ValueError",
    "collections.OrderedDict",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.validators.validate_args_and_kwargs"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_util.TestValidateKwargsAndArgs.test_validation": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "pandas.util.validators.validate_args_and_kwargs"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_util.deprecate_kwarg": {
  "data": {
   "shadows": "pandas.util.decorators.deprecate_kwarg"
  },
  "type": "import"
 },
 "pandas.tests.test_util.move_into_mutable_buffer": {
  "data": {
   "shadows": "pandas.util._move.move_into_mutable_buffer"
  },
  "type": "import"
 },
 "pandas.tests.test_util.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tests.test_util.test_rands": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "len",
    "pandas.util.testing.rands"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_util.test_rands_array": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "len",
    "pandas.util.testing.rands_array"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_util.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.test_util.validate_args": {
  "data": {
   "shadows": "pandas.util.validators.validate_args"
  },
  "type": "import"
 },
 "pandas.tests.test_util.validate_args_and_kwargs": {
  "data": {
   "shadows": "pandas.util.validators.validate_args_and_kwargs"
  },
  "type": "import"
 },
 "pandas.tests.test_util.validate_kwargs": {
  "data": {
   "shadows": "pandas.util.validators.validate_kwargs"
  },
  "type": "import"
 },
 "pandas.tests.test_window": {
  "data": {
   "symbols_in_volume": [
    "pandas.tests.test_window._create_consistency_data"
   ]
  },
  "type": "module"
 },
 "pandas.tests.test_window.Base": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.Base._create_data": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.NaN",
    "numpy.arange",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.bdate_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tests.test_window.DatetimeLike": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "pandas.tests.test_window.Dtype"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.DatetimeLike.check_dtypes": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "NotImplementedError",
    "f",
    "nose.tools.assert_raises",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.Dtype": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.Dtype._create_data": {
  "data": {
   "lineno": 450
  },
  "type": "function"
 },
 "pandas.tests.test_window.Dtype._create_dtype_data": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.Dtype.check_dtypes": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "f",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.Dtype.get_expects": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.sqrt",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.Dtype.test_dtypes": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "itertools.product"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.Dtype_float": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "pandas.tests.test_window.Dtype"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.Dtype_integer": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "pandas.tests.test_window.Dtype"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.Dtype_uinteger": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "pandas.tests.test_window.Dtype"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.tests.test_window.PY3": {
  "data": {
   "shadows": "pandas.compat.PY3"
  },
  "type": "import"
 },
 "pandas.tests.test_window.Panel": {
  "data": {
   "shadows": "pandas.Panel"
  },
  "type": "import"
 },
 "pandas.tests.test_window.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.test_window.SpecificationError": {
  "data": {
   "shadows": "pandas.core.base.SpecificationError"
  },
  "type": "import"
 },
 "pandas.tests.test_window.TestApi": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "pandas.tests.test_window.Base"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestApi.setUp": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestApi.test_agg": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.std",
    "numpy.sum",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.range",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestApi.test_agg_consistency": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "list",
    "numpy.mean",
    "numpy.sum",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_product",
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestApi.test_agg_nested_dicts": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.range",
    "pandas.concat",
    "pandas.core.base.SpecificationError",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestApi.test_agg_nested_dicts.f": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestApi.test_attribute_access": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "AttributeError",
    "pandas.DataFrame",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestApi.test_getitem": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestApi.test_how_compat": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "FutureWarning",
    "dfunc",
    "getattr",
    "numpy.random.randn",
    "pandas",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestApi.test_preserve_metadata": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestApi.test_select_bad_cols": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "KeyError",
    "pandas.DataFrame",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestApi.test_window_with_args": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.Series",
    "pandas.concat",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestApi.test_window_with_args.a": {
  "data": {
   "lineno": 217
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestApi.test_window_with_args.b": {
  "data": {
   "lineno": 220
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestApi.tests_skip_nuisance": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestDeprecations": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "pandas.tests.test_window.Base"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestDeprecations.setUp": {
  "data": {
   "lineno": 354
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestDeprecations.test_deprecations": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.ones",
    "pandas.Series",
    "pandas.stats.moments.rolling_mean",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestDtype_category": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "pandas.tests.test_window.Dtype"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestDtype_category._create_dtype_data": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestDtype_datetime": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "numpy.dtype",
    "pandas.tests.test_window.DatetimeLike"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestDtype_datetime64UTC": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "pandas.tests.test_window.DatetimeLike"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestDtype_datetime64UTC._create_data": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "pandas.tests.test_window.nose"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestDtype_float16": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "numpy.float16",
    "pandas.tests.test_window.Dtype_float"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestDtype_float32": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "numpy.float32",
    "pandas.tests.test_window.Dtype_float"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestDtype_float64": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "numpy.float64",
    "pandas.tests.test_window.Dtype_float"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestDtype_int16": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "numpy.int16",
    "pandas.tests.test_window.Dtype_integer"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestDtype_int32": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "numpy.int32",
    "pandas.tests.test_window.Dtype_integer"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestDtype_int64": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "numpy.int64",
    "pandas.tests.test_window.Dtype_integer"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestDtype_int8": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "numpy.int8",
    "pandas.tests.test_window.Dtype_integer"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestDtype_object": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "object",
    "pandas.tests.test_window.Dtype"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestDtype_timedelta": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "numpy.dtype",
    "pandas.tests.test_window.DatetimeLike"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestDtype_uint16": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "numpy.uint16",
    "pandas.tests.test_window.Dtype_uinteger"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestDtype_uint32": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "numpy.uint32",
    "pandas.tests.test_window.Dtype_uinteger"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestDtype_uint64": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "numpy.uint64",
    "pandas.tests.test_window.Dtype_uinteger"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestDtype_uint8": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "numpy.uint8",
    "pandas.tests.test_window.Dtype_uinteger"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestExpanding": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "pandas.tests.test_window.Base"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestExpanding.setUp": {
  "data": {
   "lineno": 329
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestExpanding.test_constructor": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "ValueError",
    "c",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestGrouperGrouping": {
  "data": {
   "lineno": 2802,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestGrouperGrouping.setUp": {
  "data": {
   "lineno": 2804,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestGrouperGrouping.test_expanding": {
  "data": {
   "lineno": 2884,
   "symbols_in_volume": [
    "f",
    "getattr",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestGrouperGrouping.test_expanding_apply": {
  "data": {
   "lineno": 2921,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestGrouperGrouping.test_expanding_corr_cov": {
  "data": {
   "lineno": 2902,
   "symbols_in_volume": [
    "f",
    "func",
    "getattr",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestGrouperGrouping.test_expanding_corr_cov.func": {
  "data": {
   "lineno": 2916,
   "symbols_in_volume": [
    "f",
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestGrouperGrouping.test_getitem": {
  "data": {
   "lineno": 2820,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestGrouperGrouping.test_mutated": {
  "data": {
   "lineno": 2809,
   "symbols_in_volume": [
    "TypeError",
    "f"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestGrouperGrouping.test_mutated.f": {
  "data": {
   "lineno": 2811
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestGrouperGrouping.test_rolling": {
  "data": {
   "lineno": 2838,
   "symbols_in_volume": [
    "f",
    "getattr",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestGrouperGrouping.test_rolling_apply": {
  "data": {
   "lineno": 2875,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestGrouperGrouping.test_rolling_corr_cov": {
  "data": {
   "lineno": 2856,
   "symbols_in_volume": [
    "f",
    "func",
    "getattr",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestGrouperGrouping.test_rolling_corr_cov.func": {
  "data": {
   "lineno": 2870,
   "symbols_in_volume": [
    "f",
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "pandas.tests.test_window.Base"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestMoments._check_ew": {
  "data": {
   "lineno": 1428,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments._check_ew_ndarray": {
  "data": {
   "lineno": 1433,
   "symbols_in_volume": [
    "func",
    "numpy.NaN",
    "numpy.arange",
    "numpy.float_",
    "numpy.isnan",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.stats.moments.ewma",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments._check_ew_structures": {
  "data": {
   "lineno": 1478,
   "symbols_in_volume": [
    "getattr",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assertIsInstance",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments._check_moment_func": {
  "data": {
   "lineno": 1034,
   "symbols_in_volume": [
    "f",
    "pandas.tests.test_window.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments._check_ndarray": {
  "data": {
   "lineno": 1061,
   "symbols_in_volume": [
    "get_result",
    "len",
    "numpy.NaN",
    "numpy.array",
    "numpy.array_equal",
    "numpy.concatenate",
    "numpy.isnan",
    "numpy.random.randn",
    "pandas.isnull",
    "pandas.notnull",
    "pandas.util.testing.assert_almost_equal",
    "static_comp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments._check_ndarray.get_result": {
  "data": {
   "lineno": 1064,
   "symbols_in_volume": [
    "f"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments._check_structures": {
  "data": {
   "lineno": 1143,
   "symbols_in_volume": [
    "get_result",
    "list",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.core.datetools.bday",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "static_comp",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments._check_structures.get_result": {
  "data": {
   "lineno": 1146,
   "symbols_in_volume": [
    "FutureWarning",
    "f",
    "getattr",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.setUp": {
  "data": {
   "lineno": 578
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_centered_axis_validation": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_cmov_mean": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.array",
    "numpy.nan",
    "pandas.Series",
    "pandas.stats.moments.rolling_mean",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_cmov_window": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.array",
    "numpy.nan",
    "pandas.Series",
    "pandas.stats.moments.rolling_window",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_cmov_window_corner": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "FutureWarning",
    "float",
    "len",
    "numpy.array",
    "numpy.empty",
    "numpy.isnan",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.stats.moments.rolling_window",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_cmov_window_frame": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.array",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_cmov_window_na_min_periods": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_cmov_window_regular": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_cmov_window_regular_linear_range": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_cmov_window_regular_missing_data": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_cmov_window_special": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.zip",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_cmov_window_special_linear_range": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.compat.zip",
    "pandas.util.testing._skip_if_no_scipy",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_ew_empty_arrays": {
  "data": {
   "lineno": 1418,
   "symbols_in_volume": [
    "FutureWarning",
    "f",
    "numpy.array",
    "numpy.float64",
    "pandas.stats.moments.ewma",
    "pandas.stats.moments.ewmvar",
    "pandas.stats.moments.ewmvol",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_ewm_alpha": {
  "data": {
   "lineno": 1375,
   "symbols_in_volume": [
    "c",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_ewm_alpha_arg": {
  "data": {
   "lineno": 1386,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_ewm_domain_checks": {
  "data": {
   "lineno": 1394,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_ewma": {
  "data": {
   "lineno": 1239,
   "symbols_in_volume": [
    "FutureWarning",
    "f",
    "numpy.abs",
    "numpy.zeros",
    "pandas.Series",
    "pandas.stats.moments.ewma",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_ewma_alpha_arg_old_api": {
  "data": {
   "lineno": 1364,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "pandas.stats.moments.ewma",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_ewma_alpha_old_api": {
  "data": {
   "lineno": 1353,
   "symbols_in_volume": [
    "FutureWarning",
    "c",
    "pandas.stats.moments.ewma",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_ewma_halflife_arg": {
  "data": {
   "lineno": 1339,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "pandas.stats.moments.ewma",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_ewma_nan_handling": {
  "data": {
   "lineno": 1269,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal",
    "simple_wma"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_ewma_nan_handling.simple_wma": {
  "data": {
   "lineno": 1286
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_ewma_span_com_args": {
  "data": {
   "lineno": 1330,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "pandas.stats.moments.ewma",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_ewmvar": {
  "data": {
   "lineno": 1324,
   "symbols_in_volume": [
    "pandas.stats.moments.ewmvar"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_ewmvol": {
  "data": {
   "lineno": 1327,
   "symbols_in_volume": [
    "pandas.stats.moments.ewmvol"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_fperr_robustness": {
  "data": {
   "lineno": 1000,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.array",
    "numpy.frombuffer",
    "pandas.compat.PY3",
    "pandas.stats.moments.rolling_mean",
    "pandas.stats.moments.rolling_sum",
    "pandas.stats.moments.rolling_var",
    "pandas.tests.test_window.nose",
    "pandas.tests.test_window.sys",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_apply": {
  "data": {
   "lineno": 895,
   "symbols_in_volume": [
    "RuntimeWarning",
    "f",
    "len",
    "numpy.isfinite",
    "numpy.mean",
    "pandas.Series",
    "pandas.tests.test_window.warnings",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_apply.roll_mean": {
  "data": {
   "lineno": 908,
   "symbols_in_volume": [
    "f",
    "pandas.stats.moments.rolling_apply"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_apply_out_of_bounds": {
  "data": {
   "lineno": 925,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.arange",
    "numpy.sum",
    "pandas.isnull",
    "pandas.stats.moments.rolling_apply",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_count": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "float",
    "numpy.isfinite",
    "pandas.stats.moments.rolling_count"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_kurt": {
  "data": {
   "lineno": 992,
   "symbols_in_volume": [
    "ImportError",
    "pandas.stats.moments.rolling_kurt",
    "pandas.tests.test_window.nose",
    "scipy.stats.kurtosis"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_max": {
  "data": {
   "lineno": 861,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "numpy.array",
    "numpy.max",
    "pandas.stats.moments.rolling_max",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_mean": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "numpy.mean",
    "pandas.stats.moments.rolling_mean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_median": {
  "data": {
   "lineno": 844,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.median",
    "pandas.stats.moments.rolling_median",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_min": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "len",
    "numpy.array",
    "numpy.min",
    "numpy.ones",
    "pandas.stats.moments.rolling_min",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_quantile": {
  "data": {
   "lineno": 873,
   "symbols_in_volume": [
    "f"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_quantile.alt": {
  "data": {
   "lineno": 890,
   "symbols_in_volume": [
    "scoreatpercentile"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_quantile.f": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": [
    "pandas.stats.moments.rolling_quantile"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_quantile.scoreatpercentile": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": [
    "int",
    "numpy.sort"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_skew": {
  "data": {
   "lineno": 984,
   "symbols_in_volume": [
    "ImportError",
    "pandas.stats.moments.rolling_skew",
    "pandas.tests.test_window.nose",
    "scipy.stats.skew"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_std": {
  "data": {
   "lineno": 938,
   "symbols_in_volume": [
    "numpy.std",
    "pandas.stats.moments.rolling_std"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_std_1obs": {
  "data": {
   "lineno": 944,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.array",
    "numpy.isnan",
    "numpy.nan",
    "numpy.zeros",
    "pandas.stats.moments.rolling_std",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_std_neg_sqrt": {
  "data": {
   "lineno": 962,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.array",
    "numpy.isfinite",
    "pandas.stats.moments.ewmstd",
    "pandas.stats.moments.rolling_std",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_sum": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "numpy.sum",
    "pandas.stats.moments.rolling_sum"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMoments.test_rolling_var": {
  "data": {
   "lineno": 978,
   "symbols_in_volume": [
    "numpy.var",
    "pandas.stats.moments.rolling_var"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency": {
  "data": {
   "lineno": 1542,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "numpy.__version__",
    "numpy.max",
    "numpy.mean",
    "numpy.median",
    "numpy.min",
    "numpy.nanmax",
    "numpy.nanmean",
    "numpy.nanmedian",
    "numpy.nanmin",
    "numpy.nanstd",
    "numpy.nansum",
    "numpy.nanvar",
    "numpy.std",
    "numpy.sum",
    "numpy.var",
    "pandas.Series",
    "pandas.tests.test_window.Base"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestMomentsConsistency._check_binary_ew": {
  "data": {
   "lineno": 2130,
   "symbols_in_volume": [
    "Exception",
    "func",
    "numpy.NaN",
    "numpy.arange",
    "numpy.isnan",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency._check_binary_ew.func": {
  "data": {
   "lineno": 2131,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency._check_expanding": {
  "data": {
   "lineno": 2679,
   "symbols_in_volume": [
    "func",
    "pandas.tests.test_window.warnings",
    "static_comp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency._check_expanding_ndarray": {
  "data": {
   "lineno": 2639,
   "symbols_in_volume": [
    "func",
    "numpy.isnan",
    "numpy.random.randn",
    "pandas.isnull",
    "pandas.notnull",
    "pandas.util.testing.assert_almost_equal",
    "static_comp"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency._check_expanding_structures": {
  "data": {
   "lineno": 2673,
   "symbols_in_volume": [
    "func",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assertIsInstance",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency._check_pairwise_moment": {
  "data": {
   "lineno": 2059,
   "symbols_in_volume": [
    "get_result",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency._check_pairwise_moment.get_result": {
  "data": {
   "lineno": 2060,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency._create_data": {
  "data": {
   "lineno": 1587,
   "symbols_in_volume": [
    "pandas.tests.test_window.TestMomentsConsistency",
    "pandas.tests.test_window._consistency_data",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency._test_moments_consistency": {
  "data": {
   "lineno": 1594,
   "symbols_in_volume": [
    "assert_equal",
    "corr",
    "count",
    "cov",
    "is_constant",
    "isinstance",
    "max",
    "mean",
    "mock_mean",
    "no_nans",
    "numpy.nan",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "std",
    "var",
    "var_biased",
    "var_debiasing_factors",
    "var_unbiased"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency._test_moments_consistency._non_null_values": {
  "data": {
   "lineno": 1599,
   "symbols_in_volume": [
    "pandas.notnull",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.setUp": {
  "data": {
   "lineno": 1591
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_corr_sanity": {
  "data": {
   "lineno": 2074,
   "symbols_in_volume": [
    "all",
    "numpy.abs",
    "numpy.array",
    "numpy.nan_to_num",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.compat.range",
    "print"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_ewm_consistency": {
  "data": {
   "lineno": 1710,
   "symbols_in_volume": [
    "_ewma",
    "_variance_debiasing_factors",
    "itertools.product",
    "numpy.testing.decorators.slow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_ewm_consistency._ewma": {
  "data": {
   "lineno": 1756,
   "symbols_in_volume": [
    "_weights",
    "max",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_ewm_consistency._variance_debiasing_factors": {
  "data": {
   "lineno": 1747,
   "symbols_in_volume": [
    "_weights",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_ewm_consistency._weights": {
  "data": {
   "lineno": 1712,
   "symbols_in_volume": [
    "_weights",
    "enumerate",
    "isinstance",
    "len",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.concat",
    "pow"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_ewmcorr": {
  "data": {
   "lineno": 2124
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_ewmcorr_pairwise": {
  "data": {
   "lineno": 2127
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_ewmcov": {
  "data": {
   "lineno": 2118
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_ewmcov_pairwise": {
  "data": {
   "lineno": 2121
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_expanding_apply": {
  "data": {
   "lineno": 2163,
   "symbols_in_volume": [
    "len",
    "numpy.mean",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_expanding_apply.expanding_mean": {
  "data": {
   "lineno": 2167,
   "symbols_in_volume": [
    "pandas.stats.moments.expanding_apply"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_expanding_apply_args_kwargs": {
  "data": {
   "lineno": 2179,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_expanding_apply_args_kwargs.mean_w_arg": {
  "data": {
   "lineno": 2180,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_expanding_consistency": {
  "data": {
   "lineno": 1809,
   "symbols_in_volume": [
    "RuntimeWarning",
    "assert_equal",
    "enumerate",
    "expanding_f",
    "f",
    "getattr",
    "is_constant",
    "isinstance",
    "no_nans",
    "numpy.nan",
    "numpy.testing.decorators.slow",
    "pandas.DataFrame",
    "pandas.Panel",
    "pandas.Series",
    "pandas.tests.test_window.warnings",
    "pandas.util.testing._incompat_bottleneck_version",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_expanding_corr": {
  "data": {
   "lineno": 2193,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_expanding_corr_diff_index": {
  "data": {
   "lineno": 2265,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_expanding_corr_pairwise": {
  "data": {
   "lineno": 2238,
   "symbols_in_volume": [
    "len",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_expanding_corr_pairwise_diff_length": {
  "data": {
   "lineno": 2452,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_expanding_count": {
  "data": {
   "lineno": 2203,
   "symbols_in_volume": [
    "len",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_expanding_cov": {
  "data": {
   "lineno": 2216,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_expanding_cov_diff_index": {
  "data": {
   "lineno": 2247,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_expanding_cov_pairwise": {
  "data": {
   "lineno": 2229,
   "symbols_in_volume": [
    "len",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_expanding_cov_pairwise_diff_length": {
  "data": {
   "lineno": 2435,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_expanding_max": {
  "data": {
   "lineno": 2226,
   "symbols_in_volume": [
    "numpy.max",
    "pandas.stats.moments.expanding_max"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_expanding_quantile": {
  "data": {
   "lineno": 2208,
   "symbols_in_volume": [
    "len",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_flex_binary_frame": {
  "data": {
   "lineno": 2094,
   "symbols_in_volume": [
    "_check"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_flex_binary_frame._check": {
  "data": {
   "lineno": 2095,
   "symbols_in_volume": [
    "dict",
    "getattr",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_flex_binary_moment": {
  "data": {
   "lineno": 2069,
   "symbols_in_volume": [
    "TypeError",
    "pandas.core.window._flex_binary_moment"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_moment_functions_zero_length": {
  "data": {
   "lineno": 2354,
   "symbols_in_volume": [
    "ImportError",
    "f",
    "pandas.DataFrame",
    "pandas.Panel",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.assert_series_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_pairwise_stats_column_names_order": {
  "data": {
   "lineno": 2469,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "enumerate",
    "f",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.zip",
    "pandas.tests.test_window.warnings",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_consistency": {
  "data": {
   "lineno": 1900,
   "symbols_in_volume": [
    "RuntimeWarning",
    "assert_equal",
    "cases",
    "enumerate",
    "f",
    "getattr",
    "is_constant",
    "isinstance",
    "no_nans",
    "numpy.nan",
    "numpy.testing.decorators.slow",
    "pandas.DataFrame",
    "pandas.Panel",
    "pandas.Series",
    "pandas.tests.test_window.warnings",
    "pandas.util.testing._incompat_bottleneck_version",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.assert_series_equal",
    "rolling_f"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_consistency.cases": {
  "data": {
   "lineno": 1910,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_corr": {
  "data": {
   "lineno": 2039,
   "symbols_in_volume": [
    "len",
    "numpy.corrcoef",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.makeTimeSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_corr_diff_length": {
  "data": {
   "lineno": 2295,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_corr_pairwise": {
  "data": {
   "lineno": 2055
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_cov": {
  "data": {
   "lineno": 2029,
   "symbols_in_volume": [
    "len",
    "numpy.cov",
    "numpy.random.randn",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_cov_diff_length": {
  "data": {
   "lineno": 2283,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_cov_pairwise": {
  "data": {
   "lineno": 2036
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_functions_window_non_shrinkage": {
  "data": {
   "lineno": 2307,
   "symbols_in_volume": [
    "ImportError",
    "f",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Panel",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_panel_equal",
    "pandas.util.testing.assert_series_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_kurt_edge_cases": {
  "data": {
   "lineno": 2618,
   "symbols_in_volume": [
    "numpy.NaN",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_max_gh6297": {
  "data": {
   "lineno": 2689,
   "symbols_in_volume": [
    "FutureWarning",
    "datetime.datetime",
    "float",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_max_how_resample": {
  "data": {
   "lineno": 2707,
   "symbols_in_volume": [
    "FutureWarning",
    "datetime.datetime",
    "float",
    "list",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_median_how_resample": {
  "data": {
   "lineno": 2760,
   "symbols_in_volume": [
    "FutureWarning",
    "datetime.datetime",
    "float",
    "list",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_median_memory_error": {
  "data": {
   "lineno": 2779,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_min_how_resample": {
  "data": {
   "lineno": 2741,
   "symbols_in_volume": [
    "FutureWarning",
    "datetime.datetime",
    "float",
    "list",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_min_max_numeric_types": {
  "data": {
   "lineno": 2785,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.dtype",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestMomentsConsistency.test_rolling_skew_edge_cases": {
  "data": {
   "lineno": 2597,
   "symbols_in_volume": [
    "numpy.NaN",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestRolling": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "pandas.tests.test_window.Base"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestRolling.setUp": {
  "data": {
   "lineno": 302
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestRolling.test_constructor": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "ValueError",
    "c",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestWindow": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "pandas.tests.test_window.Base"
   ]
  },
  "type": "class"
 },
 "pandas.tests.test_window.TestWindow.setUp": {
  "data": {
   "lineno": 269
  },
  "type": "function"
 },
 "pandas.tests.test_window.TestWindow.test_constructor": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "ValueError",
    "c",
    "numpy.array",
    "pandas.util.testing._skip_if_no_scipy"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window._consistency_data": {
  "data": {
   "lineno": 1539
  },
  "type": "constant"
 },
 "pandas.tests.test_window._create_consistency_data": {
  "data": {
   "lineno": 1487,
   "symbols_in_volume": [
    "create_dataframes",
    "create_series",
    "is_constant",
    "no_nans"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window._create_consistency_data.create_dataframes": {
  "data": {
   "lineno": 1515,
   "symbols_in_volume": [
    "create_series",
    "numpy.arange",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window._create_consistency_data.create_series": {
  "data": {
   "lineno": 1488,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window._create_consistency_data.is_constant": {
  "data": {
   "lineno": 1526,
   "symbols_in_volume": [
    "len",
    "pandas.notnull",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tests.test_window._create_consistency_data.no_nans": {
  "data": {
   "lineno": 1530
  },
  "type": "function"
 },
 "pandas.tests.test_window.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_window.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_window.assert_index_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_index_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_window.assert_numpy_array_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_numpy_array_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_window.assert_panel_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_panel_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_window.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "pandas.tests.test_window.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tests.test_window.bdate_range": {
  "data": {
   "shadows": "pandas.bdate_range"
  },
  "type": "import"
 },
 "pandas.tests.test_window.concat": {
  "data": {
   "shadows": "pandas.concat"
  },
  "type": "import"
 },
 "pandas.tests.test_window.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tests.test_window.datetools": {
  "data": {
   "shadows": "pandas.core.datetools"
  },
  "type": "import"
 },
 "pandas.tests.test_window.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tests.test_window.kurtosis": {
  "data": {
   "shadows": "scipy.stats.kurtosis"
  },
  "type": "import"
 },
 "pandas.tests.test_window.mom": {
  "data": {
   "shadows": "pandas.stats.moments"
  },
  "type": "import"
 },
 "pandas.tests.test_window.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tests.test_window.notnull": {
  "data": {
   "shadows": "pandas.notnull"
  },
  "type": "import"
 },
 "pandas.tests.test_window.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.test_window.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.test_window.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "pandas.tests.test_window.randn": {
  "data": {
   "shadows": "numpy.random.randn"
  },
  "type": "import"
 },
 "pandas.tests.test_window.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tests.test_window.rwindow": {
  "data": {
   "shadows": "pandas.core.window"
  },
  "type": "import"
 },
 "pandas.tests.test_window.skew": {
  "data": {
   "shadows": "scipy.stats.skew"
  },
  "type": "import"
 },
 "pandas.tests.test_window.slow": {
  "data": {
   "shadows": "numpy.testing.decorators.slow"
  },
  "type": "import"
 },
 "pandas.tests.test_window.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.tests.test_window.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.test_window.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.tests.test_window.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.tests.types": {
  "data": {},
  "type": "module"
 },
 "pandas.tests.types.test_dtypes": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.tests.types.test_dtypes.nose"
   ]
  },
  "type": "module"
 },
 "pandas.tests.types.test_dtypes.Base": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tests.types.test_dtypes.Base.test_equality_invalid": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "pandas.tests.types.test_dtypes.Base.test_hash": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "pandas.tests.types.test_dtypes.Base.test_numpy_informed": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "TypeError",
    "numpy.str_"
   ]
  },
  "type": "function"
 },
 "pandas.tests.types.test_dtypes.Base.test_numpy_informed.f": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.types.test_dtypes.Base.test_pickle": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "pandas.tests.types.test_dtypes.Categorical": {
  "data": {
   "shadows": "pandas.Categorical"
  },
  "type": "import"
 },
 "pandas.tests.types.test_dtypes.CategoricalDtype": {
  "data": {
   "shadows": "pandas.types.api.CategoricalDtype"
  },
  "type": "import"
 },
 "pandas.tests.types.test_dtypes.DatetimeTZDtype": {
  "data": {
   "shadows": "pandas.core.common.DatetimeTZDtype"
  },
  "type": "import"
 },
 "pandas.tests.types.test_dtypes.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tests.types.test_dtypes.TestCategoricalDtype": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "pandas.tests.types.test_dtypes.Base",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.types.test_dtypes.TestCategoricalDtype.setUp": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "pandas.types.api.CategoricalDtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.types.test_dtypes.TestCategoricalDtype.test_basic": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "numpy.dtype",
    "pandas.Categorical.from_array",
    "pandas.Series",
    "pandas.core.common.is_categorical",
    "pandas.core.common.is_categorical_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.types.test_dtypes.TestCategoricalDtype.test_construction_from_string": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "TypeError",
    "pandas.core.common.is_dtype_equal",
    "pandas.types.api.CategoricalDtype.construct_from_string"
   ]
  },
  "type": "function"
 },
 "pandas.tests.types.test_dtypes.TestCategoricalDtype.test_equality": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "pandas.core.common.is_dtype_equal",
    "pandas.types.api.CategoricalDtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.types.test_dtypes.TestCategoricalDtype.test_is_dtype": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.float64",
    "pandas.types.api.CategoricalDtype",
    "pandas.types.api.CategoricalDtype.is_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.types.test_dtypes.TestDatetimeTZDtype": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "pandas.tests.types.test_dtypes.Base",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.types.test_dtypes.TestDatetimeTZDtype.setUp": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "pandas.core.common.DatetimeTZDtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.types.test_dtypes.TestDatetimeTZDtype.test_basic": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "numpy.dtype",
    "pandas.Series",
    "pandas.core.common.is_datetime64tz_dtype",
    "pandas.core.common.is_datetimetz",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.types.test_dtypes.TestDatetimeTZDtype.test_coerce_to_dtype": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "pandas.core.common.DatetimeTZDtype",
    "pandas.core.common._coerce_to_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.types.test_dtypes.TestDatetimeTZDtype.test_compat": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "pandas.core.common.is_datetime64_dtype",
    "pandas.core.common.is_datetime64_ns_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.types.test_dtypes.TestDatetimeTZDtype.test_construction": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ValueError",
    "pandas.core.common.DatetimeTZDtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.types.test_dtypes.TestDatetimeTZDtype.test_construction_from_string": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "TypeError",
    "pandas.core.common.DatetimeTZDtype",
    "pandas.core.common.DatetimeTZDtype.construct_from_string",
    "pandas.core.common.is_dtype_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.types.test_dtypes.TestDatetimeTZDtype.test_dst": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.core.common.is_datetimetz",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tests.types.test_dtypes.TestDatetimeTZDtype.test_equality": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "numpy.dtype",
    "pandas.core.common.DatetimeTZDtype",
    "pandas.core.common.is_dtype_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tests.types.test_dtypes.TestDatetimeTZDtype.test_is_dtype": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "numpy.float64",
    "pandas.core.common.DatetimeTZDtype",
    "pandas.core.common.DatetimeTZDtype.is_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.types.test_dtypes.TestDatetimeTZDtype.test_parser": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "itertools.product",
    "pandas.core.common.DatetimeTZDtype"
   ]
  },
  "type": "function"
 },
 "pandas.tests.types.test_dtypes.TestDatetimeTZDtype.test_subclass": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "issubclass",
    "pandas.core.common.DatetimeTZDtype",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tests.types.test_dtypes._multiprocess_can_split_": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pandas.tests.types.test_dtypes.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.tests.types.test_dtypes.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tests.types.test_dtypes.is_categorical": {
  "data": {
   "shadows": "pandas.core.common.is_categorical"
  },
  "type": "import"
 },
 "pandas.tests.types.test_dtypes.is_categorical_dtype": {
  "data": {
   "shadows": "pandas.core.common.is_categorical_dtype"
  },
  "type": "import"
 },
 "pandas.tests.types.test_dtypes.is_datetime64_dtype": {
  "data": {
   "shadows": "pandas.core.common.is_datetime64_dtype"
  },
  "type": "import"
 },
 "pandas.tests.types.test_dtypes.is_datetime64_ns_dtype": {
  "data": {
   "shadows": "pandas.core.common.is_datetime64_ns_dtype"
  },
  "type": "import"
 },
 "pandas.tests.types.test_dtypes.is_datetime64tz_dtype": {
  "data": {
   "shadows": "pandas.core.common.is_datetime64tz_dtype"
  },
  "type": "import"
 },
 "pandas.tests.types.test_dtypes.is_datetimetz": {
  "data": {
   "shadows": "pandas.core.common.is_datetimetz"
  },
  "type": "import"
 },
 "pandas.tests.types.test_dtypes.is_dtype_equal": {
  "data": {
   "shadows": "pandas.core.common.is_dtype_equal"
  },
  "type": "import"
 },
 "pandas.tests.types.test_dtypes.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tests.types.test_dtypes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.types.test_dtypes.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "pandas.tests.types.test_dtypes.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tests.types.test_generic": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.tests.types.test_generic.nose"
   ]
  },
  "type": "module"
 },
 "pandas.tests.types.test_generic.TestABCClasses": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.randn",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays",
    "pandas.Series",
    "pandas.SparseArray",
    "pandas.period_range",
    "pandas.to_datetime",
    "pandas.to_timedelta",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tests.types.test_generic.TestABCClasses.test_abc_types": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "pandas.Float64Index",
    "pandas.Index",
    "pandas.Int64Index",
    "pandas.Period",
    "pandas.Series",
    "pandas.core.common.ABCCategorical",
    "pandas.core.common.ABCCategoricalIndex",
    "pandas.core.common.ABCDataFrame",
    "pandas.core.common.ABCDatetimeIndex",
    "pandas.core.common.ABCFloat64Index",
    "pandas.core.common.ABCIndex",
    "pandas.core.common.ABCIndexClass",
    "pandas.core.common.ABCInt64Index",
    "pandas.core.common.ABCMultiIndex",
    "pandas.core.common.ABCPanel",
    "pandas.core.common.ABCPeriod",
    "pandas.core.common.ABCPeriodIndex",
    "pandas.core.common.ABCSeries",
    "pandas.core.common.ABCSparseArray",
    "pandas.core.common.ABCSparseSeries",
    "pandas.core.common.ABCTimedeltaIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tests.types.test_generic._multiprocess_can_split_": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "pandas.tests.types.test_generic.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.tests.types.test_generic.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tests.types.test_generic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tests.types.test_generic.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tests.types.test_generic.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.to_numeric": {
  "data": {
   "shadows": "pandas.tools.util.to_numeric"
  },
  "type": "import"
 },
 "pandas.tools": {
  "data": {},
  "type": "module"
 },
 "pandas.tools.pivot": {
  "data": {
   "symbols_in_volume": [
    "pandas.DataFrame.pivot_table",
    "pandas.tools.pivot.pivot_table"
   ]
  },
  "type": "module"
 },
 "pandas.tools.pivot.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tools.pivot.Grouper": {
  "data": {
   "shadows": "pandas.core.groupby.Grouper"
  },
  "type": "import"
 },
 "pandas.tools.pivot.Index": {
  "data": {
   "shadows": "pandas.core.index.Index"
  },
  "type": "import"
 },
 "pandas.tools.pivot.MultiIndex": {
  "data": {
   "shadows": "pandas.core.index.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tools.pivot.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tools.pivot._add_margins": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "hasattr",
    "isinstance",
    "len",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.string_types",
    "pandas.tools.pivot._compute_grand_margin",
    "pandas.tools.pivot._generate_marginal_results",
    "pandas.tools.pivot._generate_marginal_results_without_values",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tools.pivot._compute_grand_margin": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "TypeError",
    "aggfunc",
    "dict",
    "getattr",
    "isinstance",
    "pandas.compat.string_types"
   ]
  },
  "type": "function"
 },
 "pandas.tools.pivot._convert_by": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "list",
    "numpy.ndarray",
    "pandas.Series",
    "pandas.core.groupby.Grouper",
    "pandas.core.index.Index",
    "pandas.lib.isscalar"
   ]
  },
  "type": "function"
 },
 "pandas.tools.pivot._generate_marginal_results": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "TypeError",
    "_all_key",
    "aggfunc",
    "len",
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.tools.merge.concat"
   ]
  },
  "type": "function"
 },
 "pandas.tools.pivot._generate_marginal_results._all_key": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.tools.pivot._generate_marginal_results_without_values": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "_all_key",
    "aggfunc",
    "len",
    "numpy.nan",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tools.pivot._generate_marginal_results_without_values._all_key": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.tools.pivot._get_names": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "AssertionError",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tools.pivot._normalize": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "bool",
    "f",
    "isinstance",
    "pandas.compat.string_types",
    "pandas.tools.merge.concat"
   ]
  },
  "type": "function"
 },
 "pandas.tools.pivot.cartesian_product": {
  "data": {
   "shadows": "pandas.tools.util.cartesian_product"
  },
  "type": "import"
 },
 "pandas.tools.pivot.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.tools.pivot.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tools.pivot.concat": {
  "data": {
   "shadows": "pandas.tools.merge.concat"
  },
  "type": "import"
 },
 "pandas.tools.pivot.crosstab": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "ValueError",
    "aggfunc",
    "len",
    "numpy.int64",
    "pandas.DataFrame",
    "pandas.compat.zip",
    "pandas.core.common._maybe_make_list",
    "pandas.tools.pivot._get_names",
    "pandas.tools.pivot._normalize"
   ]
  },
  "type": "function"
 },
 "pandas.tools.pivot.lib": {
  "data": {
   "shadows": "pandas.lib"
  },
  "type": "import"
 },
 "pandas.tools.pivot.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tools.pivot.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tools.pivot.pivot_table": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "isinstance",
    "len",
    "list",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.core.common.is_list_like",
    "pandas.core.groupby.Grouper",
    "pandas.core.index.MultiIndex",
    "pandas.core.index.MultiIndex.from_arrays",
    "pandas.tools.merge.concat",
    "pandas.tools.pivot._add_margins",
    "pandas.tools.pivot._convert_by",
    "pandas.tools.util.cartesian_product"
   ]
  },
  "type": "function"
 },
 "pandas.tools.pivot.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tools.pivot.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.tools.rplot": {
  "data": {
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.tools.rplot.warnings"
   ]
  },
  "type": "module"
 },
 "pandas.tools.rplot.GeomDensity": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "pandas.tools.rplot.Layer"
   ]
  },
  "type": "class"
 },
 "pandas.tools.rplot.GeomDensity.work": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "numpy.linspace",
    "scipy.stats.gaussian_kde"
   ]
  },
  "type": "function"
 },
 "pandas.tools.rplot.GeomDensity2D": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "pandas.tools.rplot.Layer"
   ]
  },
  "type": "class"
 },
 "pandas.tools.rplot.GeomDensity2D.work": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "kernel",
    "numpy.mgrid",
    "numpy.reshape",
    "numpy.vstack",
    "scipy.stats.gaussian_kde"
   ]
  },
  "type": "function"
 },
 "pandas.tools.rplot.GeomHistogram": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "pandas.tools.rplot.Layer"
   ]
  },
  "type": "class"
 },
 "pandas.tools.rplot.GeomHistogram.__init__": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "pandas.tools.rplot.Layer"
   ]
  },
  "type": "function"
 },
 "pandas.tools.rplot.GeomHistogram.work": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "pandas.core.common._values_from_object"
   ]
  },
  "type": "function"
 },
 "pandas.tools.rplot.GeomPoint": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "pandas.tools.rplot.Layer"
   ]
  },
  "type": "class"
 },
 "pandas.tools.rplot.GeomPoint.work": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "alpha",
    "colour_scaler",
    "colour_scaler.categorical",
    "colour_scaler.column",
    "len",
    "pandas.compat.range",
    "shape_scaler",
    "shape_scaler.categorical",
    "shape_scaler.column",
    "size_scaler",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tools.rplot.GeomPolyFit": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "pandas.tools.rplot.Layer"
   ]
  },
  "type": "class"
 },
 "pandas.tools.rplot.GeomPolyFit.__init__": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "pandas.tools.rplot.Layer"
   ]
  },
  "type": "function"
 },
 "pandas.tools.rplot.GeomPolyFit.work": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "len",
    "max",
    "min",
    "numpy.linspace",
    "numpy.polynomial.polynomial.polyfit",
    "numpy.polynomial.polynomial.polyval"
   ]
  },
  "type": "function"
 },
 "pandas.tools.rplot.GeomScatter": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "pandas.tools.rplot.Layer"
   ]
  },
  "type": "class"
 },
 "pandas.tools.rplot.GeomScatter.__init__": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "alpha",
    "pandas.tools.rplot.Layer"
   ]
  },
  "type": "function"
 },
 "pandas.tools.rplot.GeomScatter.work": {
  "data": {
   "lineno": 501
  },
  "type": "function"
 },
 "pandas.tools.rplot.Layer": {
  "data": {
   "lineno": 353
  },
  "type": "class"
 },
 "pandas.tools.rplot.Layer.__init__": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "pandas.tools.rplot.make_aes"
   ]
  },
  "type": "function"
 },
 "pandas.tools.rplot.Layer.work": {
  "data": {
   "lineno": 370
  },
  "type": "function"
 },
 "pandas.tools.rplot.RPlot": {
  "data": {
   "lineno": 894
  },
  "type": "class"
 },
 "pandas.tools.rplot.RPlot.__init__": {
  "data": {
   "lineno": 900,
   "symbols_in_volume": [
    "pandas.tools.rplot.Layer",
    "pandas.tools.rplot.default_aes"
   ]
  },
  "type": "function"
 },
 "pandas.tools.rplot.RPlot.add": {
  "data": {
   "lineno": 911,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "pandas.tools.rplot.Layer"
   ]
  },
  "type": "function"
 },
 "pandas.tools.rplot.RPlot.render": {
  "data": {
   "lineno": 923,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "list",
    "matplotlib.pyplot.gcf",
    "pandas.tools.rplot.TrellisGrid",
    "pandas.tools.rplot.adjust_subplots",
    "pandas.tools.rplot.dictionary_union",
    "pandas.tools.rplot.sequence_grids",
    "pandas.tools.rplot.sequence_layers",
    "pandas.tools.rplot.work_grid",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tools.rplot.Scale": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "pandas.tools.rplot.ScaleConstant": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "pandas.tools.rplot.Scale"
   ]
  },
  "type": "class"
 },
 "pandas.tools.rplot.ScaleConstant.__call__": {
  "data": {
   "lineno": 255
  },
  "type": "function"
 },
 "pandas.tools.rplot.ScaleConstant.__init__": {
  "data": {
   "lineno": 245
  },
  "type": "function"
 },
 "pandas.tools.rplot.ScaleGradient": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "pandas.tools.rplot.Scale"
   ]
  },
  "type": "class"
 },
 "pandas.tools.rplot.ScaleGradient.__call__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "pandas.tools.rplot.ScaleGradient.__init__": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "pandas.tools.rplot.ScaleGradient2": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "pandas.tools.rplot.Scale"
   ]
  },
  "type": "class"
 },
 "pandas.tools.rplot.ScaleGradient2.__call__": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "pandas.tools.rplot.ScaleGradient2.__init__": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "pandas.tools.rplot.ScaleRandomColour": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "pandas.tools.rplot.Scale"
   ]
  },
  "type": "class"
 },
 "pandas.tools.rplot.ScaleRandomColour.__call__": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "pandas.compat.range",
    "pandas.tools.rplot.random"
   ]
  },
  "type": "function"
 },
 "pandas.tools.rplot.ScaleRandomColour.__init__": {
  "data": {
   "lineno": 217
  },
  "type": "function"
 },
 "pandas.tools.rplot.ScaleShape": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "pandas.tools.rplot.Scale"
   ]
  },
  "type": "class"
 },
 "pandas.tools.rplot.ScaleShape.__call__": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tools.rplot.ScaleShape.__init__": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tools.rplot.ScaleSize": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "pandas.tools.rplot.Scale"
   ]
  },
  "type": "class"
 },
 "pandas.tools.rplot.ScaleSize.__call__": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "float",
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "pandas.tools.rplot.ScaleSize.__init__": {
  "data": {
   "lineno": 140
  },
  "type": "function"
 },
 "pandas.tools.rplot.TrellisGrid": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "pandas.tools.rplot.Layer"
   ]
  },
  "type": "class"
 },
 "pandas.tools.rplot.TrellisGrid.__init__": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.tools.rplot.TrellisGrid.trellis": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "copy.deepcopy",
    "len",
    "list",
    "pandas.compat.range",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.tools.rplot._values_from_object": {
  "data": {
   "shadows": "pandas.core.common._values_from_object"
  },
  "type": "import"
 },
 "pandas.tools.rplot.adjust_subplots": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "list",
    "max",
    "min",
    "pandas.tools.rplot.dictionary_union",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tools.rplot.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "pandas.tools.rplot.default_aes": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "pandas.tools.rplot.ScaleConstant"
   ]
  },
  "type": "function"
 },
 "pandas.tools.rplot.dictionary_union": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pandas.tools.rplot.gaussian_kde": {
  "data": {
   "shadows": "scipy.stats.gaussian_kde"
  },
  "type": "import"
 },
 "pandas.tools.rplot.make_aes": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "hasattr",
    "isinstance",
    "pandas.tools.rplot.ScaleConstant",
    "pandas.tools.rplot.ScaleGradient",
    "pandas.tools.rplot.ScaleGradient2",
    "pandas.tools.rplot.ScaleRandomColour",
    "pandas.tools.rplot.ScaleShape",
    "pandas.tools.rplot.ScaleSize"
   ]
  },
  "type": "function"
 },
 "pandas.tools.rplot.merge_aes": {
  "data": {
   "lineno": 731
  },
  "type": "function"
 },
 "pandas.tools.rplot.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tools.rplot.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pandas.tools.rplot.polyfit": {
  "data": {
   "shadows": "numpy.polynomial.polynomial.polyfit"
  },
  "type": "import"
 },
 "pandas.tools.rplot.polyval": {
  "data": {
   "shadows": "numpy.polynomial.polynomial.polyval"
  },
  "type": "import"
 },
 "pandas.tools.rplot.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "pandas.tools.rplot.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tools.rplot.sequence_grids": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": [
    "pandas.compat.zip",
    "pandas.tools.rplot.merge_aes"
   ]
  },
  "type": "function"
 },
 "pandas.tools.rplot.sequence_layers": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "pandas.compat.zip",
    "pandas.tools.rplot.merge_aes"
   ]
  },
  "type": "function"
 },
 "pandas.tools.rplot.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "pandas.tools.rplot.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.tools.rplot.work_grid": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "len",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tools.rplot.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.tools.tests": {
  "data": {},
  "type": "module"
 },
 "pandas.tools.tests.test_pivot": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.tools.tests.test_pivot.nose"
   ]
  },
  "type": "module"
 },
 "pandas.tools.tests.test_pivot.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tools.tests.test_pivot.Grouper": {
  "data": {
   "shadows": "pandas.Grouper"
  },
  "type": "import"
 },
 "pandas.tools.tests.test_pivot.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tools.tests.test_pivot.MultiIndex": {
  "data": {
   "shadows": "pandas.MultiIndex"
  },
  "type": "import"
 },
 "pandas.tools.tests.test_pivot.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tools.tests.test_pivot.TestCrosstab": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tools.tests.test_pivot.TestCrosstab.setUp": {
  "data": {
   "lineno": 794,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_pivot.TestCrosstab.test_categorical_margins": {
  "data": {
   "lineno": 908,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_pivot.TestCrosstab.test_crosstab_dropna": {
  "data": {
   "lineno": 894,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_equal",
    "object",
    "pandas.MultiIndex.from_tuples",
    "pandas.crosstab"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_pivot.TestCrosstab.test_crosstab_errors": {
  "data": {
   "lineno": 1142,
   "symbols_in_volume": [
    "ValueError",
    "numpy.mean",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.crosstab",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_pivot.TestCrosstab.test_crosstab_margins": {
  "data": {
   "lineno": 850,
   "symbols_in_volume": [
    "len",
    "numpy.int64",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.tools.pivot.crosstab",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_pivot.TestCrosstab.test_crosstab_multiple": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "numpy.int64",
    "pandas.tools.pivot.crosstab",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_pivot.TestCrosstab.test_crosstab_ndarray": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.tools.pivot.crosstab",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_pivot.TestCrosstab.test_crosstab_no_overlap": {
  "data": {
   "lineno": 928,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.tools.pivot.crosstab",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_pivot.TestCrosstab.test_crosstab_normalize": {
  "data": {
   "lineno": 1024,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "numpy.sum",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.crosstab",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_pivot.TestCrosstab.test_crosstab_pass_values": {
  "data": {
   "lineno": 879,
   "symbols_in_volume": [
    "numpy.random.randint",
    "numpy.random.randn",
    "numpy.sum",
    "pandas.DataFrame",
    "pandas.tools.pivot.crosstab",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_pivot.TestCrosstab.test_crosstab_single": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": [
    "numpy.int64",
    "pandas.tools.pivot.crosstab",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_pivot.TestCrosstab.test_crosstab_with_empties": {
  "data": {
   "lineno": 1116,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.crosstab",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_pivot.TestCrosstab.test_margin_dropna": {
  "data": {
   "lineno": 939,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "object",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_arrays",
    "pandas.crosstab",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_pivot.TestPivotTable": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tools.tests.test_pivot.TestPivotTable.setUp": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_pivot.TestPivotTable.test_margins": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "_check_output",
    "numpy.mean",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_pivot.TestPivotTable.test_margins._check_output": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_pivot.TestPivotTable.test_margins_no_values_no_cols": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "len",
    "sum"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_pivot.TestPivotTable.test_margins_no_values_one_row_one_col": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_pivot.TestPivotTable.test_margins_no_values_two_row_two_cols": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_pivot.TestPivotTable.test_margins_no_values_two_rows": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_pivot.TestPivotTable.test_pass_array": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_pivot.TestPivotTable.test_pass_function": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_pivot.TestPivotTable.test_pivot_columns_lexsorted": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "datetime.date",
    "float",
    "int",
    "len",
    "numpy.array",
    "numpy.dtype",
    "numpy.empty",
    "numpy.random.lognormal",
    "numpy.random.randint",
    "object",
    "pandas.DataFrame",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_pivot.TestPivotTable.test_pivot_complex_aggfunc": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "f",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_pivot.TestPivotTable.test_pivot_datetime_tz": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.mean",
    "numpy.sum",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.Index",
    "pandas.MultiIndex.from_arrays",
    "pandas.Timestamp",
    "pandas.tools.pivot.pivot_table",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_pivot.TestPivotTable.test_pivot_dtaccessor": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_arrays",
    "pandas.Timestamp",
    "pandas.tools.pivot.pivot_table",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_pivot.TestPivotTable.test_pivot_dtypes": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "dict",
    "numpy.mean",
    "numpy.sum",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.tools.pivot.pivot_table",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_pivot.TestPivotTable.test_pivot_index_with_nan": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_pivot.TestPivotTable.test_pivot_integer_columns": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "datetime.date.min",
    "datetime.timedelta",
    "list",
    "pandas.DataFrame",
    "pandas.compat.product",
    "pandas.compat.range",
    "pandas.util.testing.assert_frame_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_pivot.TestPivotTable.test_pivot_multi_functions": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "f",
    "numpy.mean",
    "numpy.std",
    "pandas.tools.merge.concat",
    "pandas.tools.pivot.pivot_table",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_pivot.TestPivotTable.test_pivot_multi_values": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "pandas.tools.pivot.pivot_table",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_pivot.TestPivotTable.test_pivot_no_level_overlap": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_pivot.TestPivotTable.test_pivot_periods": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_arrays",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_pivot.TestPivotTable.test_pivot_table": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "len",
    "numpy.mean",
    "pandas.tools.pivot.pivot_table",
    "pandas.util.testing.assert_frame_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_pivot.TestPivotTable.test_pivot_table_dropna": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.u"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_pivot.TestPivotTable.test_pivot_table_multiple": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "numpy.mean",
    "pandas.tools.pivot.pivot_table",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_pivot.TestPivotTable.test_pivot_table_nocols": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.sum",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_pivot.TestPivotTable.test_pivot_table_with_iterator_values": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "list",
    "pandas.pivot_table",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_pivot.TestPivotTable.test_pivot_table_with_margins_set_margin_name": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tools.pivot.pivot_table"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_pivot.TestPivotTable.test_pivot_timegrouper": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "datetime.datetime",
    "numpy.array",
    "numpy.nan",
    "numpy.sum",
    "pandas.DataFrame",
    "pandas.Grouper",
    "pandas.MultiIndex.from_tuples",
    "pandas.tools.pivot.pivot_table",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_pivot.TestPivotTable.test_pivot_with_tz": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.Index",
    "pandas.MultiIndex.from_arrays",
    "pandas.Timestamp",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_pivot.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "pandas.tools.tests.test_pivot.concat": {
  "data": {
   "shadows": "pandas.tools.merge.concat"
  },
  "type": "import"
 },
 "pandas.tools.tests.test_pivot.crosstab": {
  "data": {
   "shadows": "pandas.tools.pivot.crosstab"
  },
  "type": "import"
 },
 "pandas.tools.tests.test_pivot.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "pandas.tools.tests.test_pivot.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tools.tests.test_pivot.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tools.tests.test_pivot.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tools.tests.test_pivot.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tools.tests.test_pivot.pivot_table": {
  "data": {
   "shadows": "pandas.tools.pivot.pivot_table"
  },
  "type": "import"
 },
 "pandas.tools.tests.test_pivot.product": {
  "data": {
   "shadows": "pandas.compat.product"
  },
  "type": "import"
 },
 "pandas.tools.tests.test_pivot.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tools.tests.test_pivot.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tools.tests.test_pivot.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tools.tests.test_pivot.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tools.tests.test_tile": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.tools.tests.test_tile.nose"
   ]
  },
  "type": "module"
 },
 "pandas.tools.tests.test_tile.Categorical": {
  "data": {
   "shadows": "pandas.Categorical"
  },
  "type": "import"
 },
 "pandas.tools.tests.test_tile.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tools.tests.test_tile.TestCut": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tools.tests.test_tile.TestCut.test_arraylike": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "pandas.tools.tile.cut",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_tile.TestCut.test_bins": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.tools.tile.cut",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_tile.TestCut.test_bins_not_monotonic": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tools.tile.cut"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_tile.TestCut.test_cut_corner": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tools.tile.cut"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_tile.TestCut.test_cut_out_of_bounds": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.tools.tile.cut"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_tile.TestCut.test_cut_out_of_range_more": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.tools.tile.cut",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_tile.TestCut.test_cut_pass_labels": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "pandas.tools.tile.cut"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_tile.TestCut.test_cut_pass_series_name_to_factor": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.Series",
    "pandas.tools.tile.cut"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_tile.TestCut.test_cut_return_categorical": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "pandas.Categorical.from_codes",
    "pandas.Series",
    "pandas.tools.tile.cut",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_tile.TestCut.test_inf_handling": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.inf",
    "pandas.Series",
    "pandas.tools.tile.cut",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_tile.TestCut.test_label_formatting": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.tools.tile._format_label",
    "pandas.tools.tile._trim_zeros",
    "pandas.tools.tile.cut"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_tile.TestCut.test_label_precision": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.tools.tile.cut"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_tile.TestCut.test_labels": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.tile",
    "pandas.tools.tile.cut"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_tile.TestCut.test_na_handling": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.asarray",
    "numpy.nan",
    "numpy.where",
    "pandas.core.common.isnull",
    "pandas.tools.tile.cut",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_tile.TestCut.test_noright": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.tools.tile.cut",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_tile.TestCut.test_qcut": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.core.algorithms.quantile",
    "pandas.tools.tile.cut",
    "pandas.tools.tile.qcut",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_tile.TestCut.test_qcut_all_bins_same": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tools.tile.qcut",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_tile.TestCut.test_qcut_binning_issues": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "float",
    "numpy.loadtxt",
    "pandas.compat.zip",
    "pandas.tools.tests.test_tile.curpath",
    "pandas.tools.tests.test_tile.os",
    "pandas.tools.tile.qcut"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_tile.TestCut.test_qcut_bounds": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "numpy.unique",
    "pandas.tools.tile.qcut"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_tile.TestCut.test_qcut_include_lowest": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.tools.tile.qcut"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_tile.TestCut.test_qcut_nas": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "pandas.core.common.isnull",
    "pandas.tools.tile.qcut"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_tile.TestCut.test_qcut_return_categorical": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "pandas.Categorical.from_codes",
    "pandas.Series",
    "pandas.tools.tile.qcut",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_tile.TestCut.test_qcut_specify_quantiles": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.tools.tile.qcut"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_tile.TestCut.test_right": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.tools.tile.cut",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_tile.TestCut.test_series_retbins": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Series",
    "pandas.tools.tile.cut",
    "pandas.tools.tile.qcut",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_tile.TestCut.test_simple": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.ones",
    "pandas.tools.tile.cut",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_tile.TestCut.test_wrong_num_labels": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tools.tile.cut"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_tile.assertRaisesRegexp": {
  "data": {
   "shadows": "pandas.util.testing.assertRaisesRegexp"
  },
  "type": "import"
 },
 "pandas.tools.tests.test_tile.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.tools.tests.test_tile.curpath": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "pandas.tools.tests.test_tile.os"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_tile.cut": {
  "data": {
   "shadows": "pandas.tools.tile.cut"
  },
  "type": "import"
 },
 "pandas.tools.tests.test_tile.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tools.tests.test_tile.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tools.tests.test_tile.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.tools.tests.test_tile.qcut": {
  "data": {
   "shadows": "pandas.tools.tile.qcut"
  },
  "type": "import"
 },
 "pandas.tools.tests.test_tile.quantile": {
  "data": {
   "shadows": "pandas.core.algorithms.quantile"
  },
  "type": "import"
 },
 "pandas.tools.tests.test_tile.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tools.tests.test_tile.tmod": {
  "data": {
   "shadows": "pandas.tools.tile"
  },
  "type": "import"
 },
 "pandas.tools.tests.test_tile.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.tools.tests.test_util": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.tools.tests.test_util.locale",
    "pandas.tools.tests.test_util.nose",
    "pandas.tools.tests.test_util.os"
   ]
  },
  "type": "module"
 },
 "pandas.tools.tests.test_util.CURRENT_LOCALE": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pandas.tools.tests.test_util.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tools.tests.test_util.LOCALE_OVERRIDE": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pandas.tools.tests.test_util.TestCartesianProduct": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tools.tests.test_util.TestCartesianProduct.test_datetimeindex": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_equal",
    "pandas.Index",
    "pandas.date_range",
    "pandas.tools.util.cartesian_product"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_util.TestCartesianProduct.test_simple": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.testing.assert_equal",
    "pandas.tools.util.cartesian_product"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_util.TestLocaleUtils": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tools.tests.test_util.TestLocaleUtils.setUpClass": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "classmethod",
    "pandas.tools.tests.test_util.TestLocaleUtils",
    "pandas.tools.tests.test_util.nose",
    "pandas.util.testing._skip_if_windows",
    "pandas.util.testing.get_locales",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_util.TestLocaleUtils.tearDownClass": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "classmethod",
    "pandas.tools.tests.test_util.TestLocaleUtils",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_util.TestLocaleUtils.test_get_locales": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "len",
    "pandas.util.testing.get_locales"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_util.TestLocaleUtils.test_get_locales_prefix": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "len",
    "pandas.tools.tests.test_util.nose",
    "pandas.util.testing.get_locales"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_util.TestLocaleUtils.test_set_locale": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "len",
    "pandas.tools.tests.test_util.CURRENT_LOCALE",
    "pandas.tools.tests.test_util.LOCALE_OVERRIDE",
    "pandas.tools.tests.test_util.codecs",
    "pandas.tools.tests.test_util.locale",
    "pandas.tools.tests.test_util.nose",
    "pandas.util.testing._can_set_locale",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.set_locale"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_util.TestToNumeric": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tools.tests.test_util.TestToNumeric.test_all_nan": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.tools.util.to_numeric",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_util.TestToNumeric.test_datetimelike": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.Series",
    "pandas.date_range",
    "pandas.to_numeric",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_util.TestToNumeric.test_error": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.Series",
    "pandas.tools.util.to_numeric",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_util.TestToNumeric.test_error_seen_bool": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.Series",
    "pandas.tools.util.to_numeric",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_util.TestToNumeric.test_list": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.tools.util.to_numeric",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_util.TestToNumeric.test_list_numeric": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.tools.util.to_numeric",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_util.TestToNumeric.test_numeric": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.tools.util.to_numeric",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_util.TestToNumeric.test_numeric_dtypes": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Index",
    "pandas.Series",
    "pandas.to_numeric",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_util.TestToNumeric.test_period": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.period_range",
    "pandas.to_numeric",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_util.TestToNumeric.test_scalar": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "ValueError",
    "numpy.isnan",
    "pandas.to_numeric",
    "pandas.tools.util.to_numeric",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_util.TestToNumeric.test_series": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.tools.util.to_numeric",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_util.TestToNumeric.test_series_numeric": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "list",
    "pandas.Series",
    "pandas.tools.util.to_numeric",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_util.TestToNumeric.test_str": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Index",
    "pandas.Series",
    "pandas.to_numeric",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_util.TestToNumeric.test_timedelta": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.Series",
    "pandas.timedelta_range",
    "pandas.to_numeric",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_util.TestToNumeric.test_type_check": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "TypeError",
    "pandas.DataFrame",
    "pandas.tools.util.to_numeric",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tools.tests.test_util.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "pandas.tools.tests.test_util.cartesian_product": {
  "data": {
   "shadows": "pandas.tools.util.cartesian_product"
  },
  "type": "import"
 },
 "pandas.tools.tests.test_util.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "pandas.tools.tests.test_util.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tools.tests.test_util.locale": {
  "data": {
   "shadows": "locale"
  },
  "type": "import"
 },
 "pandas.tools.tests.test_util.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tools.tests.test_util.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tools.tests.test_util.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.tools.tests.test_util.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tools.tests.test_util.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tools.tests.test_util.to_numeric": {
  "data": {
   "shadows": "pandas.tools.util.to_numeric"
  },
  "type": "import"
 },
 "pandas.tools.util": {
  "data": {},
  "type": "module"
 },
 "pandas.tools.util.Index": {
  "data": {
   "shadows": "pandas.core.index.Index"
  },
  "type": "import"
 },
 "pandas.tools.util._compose2": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "f",
    "g"
   ]
  },
  "type": "function"
 },
 "pandas.tools.util.cartesian_product": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "len",
    "numpy.asarray",
    "numpy.cumproduct",
    "numpy.fromiter",
    "numpy.product",
    "numpy.repeat",
    "numpy.roll",
    "numpy.tile",
    "pandas.core.common._values_from_object"
   ]
  },
  "type": "function"
 },
 "pandas.tools.util.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.tools.util.compose": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "len",
    "pandas.compat.reduce",
    "pandas.tools.util._compose2"
   ]
  },
  "type": "function"
 },
 "pandas.tools.util.lib": {
  "data": {
   "shadows": "pandas.lib"
  },
  "type": "import"
 },
 "pandas.tools.util.match": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "pandas.core.index.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tools.util.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tools.util.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tools.util.reduce": {
  "data": {
   "shadows": "pandas.compat.reduce"
  },
  "type": "import"
 },
 "pandas.tools.util.to_numeric": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "TypeError",
    "getattr",
    "isinstance",
    "list",
    "numpy.array",
    "numpy.int64",
    "numpy.isscalar",
    "pandas.Index",
    "pandas.Series",
    "pandas.core.common._ensure_object",
    "pandas.core.common.is_datetime_or_timedelta_dtype",
    "pandas.core.common.is_number",
    "pandas.core.common.is_numeric_dtype",
    "pandas.core.index.Index",
    "pandas.lib.maybe_convert_numeric",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tseries": {
  "data": {},
  "type": "module"
 },
 "pandas.tseries.api": {
  "data": {},
  "type": "module"
 },
 "pandas.tseries.api.DatetimeIndex": {
  "data": {
   "shadows": "pandas.tseries.index.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tseries.api.NaT": {
  "data": {
   "shadows": "pandas.lib.NaT"
  },
  "type": "import"
 },
 "pandas.tseries.api.Period": {
  "data": {
   "shadows": "pandas.tseries.period.Period"
  },
  "type": "import"
 },
 "pandas.tseries.api.PeriodIndex": {
  "data": {
   "shadows": "pandas.tseries.period.PeriodIndex"
  },
  "type": "import"
 },
 "pandas.tseries.api.TimeGrouper": {
  "data": {
   "shadows": "pandas.tseries.resample.TimeGrouper"
  },
  "type": "import"
 },
 "pandas.tseries.api.Timedelta": {
  "data": {
   "shadows": "pandas.tseries.tdi.Timedelta"
  },
  "type": "import"
 },
 "pandas.tseries.api.TimedeltaIndex": {
  "data": {
   "shadows": "pandas.tseries.tdi.TimedeltaIndex"
  },
  "type": "import"
 },
 "pandas.tseries.api.bdate_range": {
  "data": {
   "shadows": "pandas.tseries.index.bdate_range"
  },
  "type": "import"
 },
 "pandas.tseries.api.date_range": {
  "data": {
   "shadows": "pandas.tseries.index.date_range"
  },
  "type": "import"
 },
 "pandas.tseries.api.infer_freq": {
  "data": {
   "shadows": "pandas.tseries.frequencies.infer_freq"
  },
  "type": "import"
 },
 "pandas.tseries.api.offsets": {
  "data": {
   "shadows": "pandas.tseries.offsets"
  },
  "type": "import"
 },
 "pandas.tseries.api.period_range": {
  "data": {
   "shadows": "pandas.tseries.period.period_range"
  },
  "type": "import"
 },
 "pandas.tseries.api.pnow": {
  "data": {
   "shadows": "pandas.tseries.period.pnow"
  },
  "type": "import"
 },
 "pandas.tseries.api.timedelta_range": {
  "data": {
   "shadows": "pandas.tseries.tdi.timedelta_range"
  },
  "type": "import"
 },
 "pandas.tseries.api.to_timedelta": {
  "data": {
   "shadows": "pandas.tseries.timedeltas.to_timedelta"
  },
  "type": "import"
 },
 "pandas.tseries.base": {
  "data": {},
  "type": "module"
 },
 "pandas.tseries.base.AbstractMethodError": {
  "data": {
   "shadows": "pandas.core.common.AbstractMethodError"
  },
  "type": "import"
 },
 "pandas.tseries.base.Appender": {
  "data": {
   "shadows": "pandas.util.decorators.Appender"
  },
  "type": "import"
 },
 "pandas.tseries.base.DateOffset": {
  "data": {
   "shadows": "pandas.tseries.offsets.DateOffset"
  },
  "type": "import"
 },
 "pandas.tseries.base.DatelikeOps": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.base.DatelikeOps.strftime": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base.DatetimeIndexOpsMixin": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.base.DatetimeIndexOpsMixin.__contains__": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "ValueError",
    "numpy.any",
    "pandas.lib.isscalar",
    "slice",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base.DatetimeIndexOpsMixin.__getitem__": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "getitem",
    "isinstance",
    "numpy.asarray",
    "numpy.uint8",
    "pandas.core.common.is_bool_indexer",
    "pandas.lib.isscalar",
    "pandas.lib.maybe_booleans_to_slice",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base.DatetimeIndexOpsMixin.__iter__": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "pandas.tseries.base.DatetimeIndexOpsMixin._add_datelike": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "pandas.core.common.AbstractMethodError"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base.DatetimeIndexOpsMixin._add_datetimelike_methods": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base.DatetimeIndexOpsMixin._add_datetimelike_methods.__add__": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "FutureWarning",
    "NotImplemented",
    "TypeError",
    "datetime.datetime",
    "datetime.timedelta",
    "hasattr",
    "isinstance",
    "numpy.timedelta64",
    "pandas.core.common.is_integer",
    "pandas.core.index.Index",
    "pandas.tseries.base.warnings",
    "pandas.tseries.offsets.DateOffset",
    "pandas.tseries.tdi.TimedeltaIndex",
    "pandas.tslib.Timedelta",
    "pandas.tslib.Timestamp",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base.DatetimeIndexOpsMixin._add_datetimelike_methods.__rsub__": {
  "data": {
   "lineno": 598
  },
  "type": "function"
 },
 "pandas.tseries.base.DatetimeIndexOpsMixin._add_datetimelike_methods.__sub__": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "FutureWarning",
    "NotImplemented",
    "TypeError",
    "datetime.datetime",
    "datetime.timedelta",
    "isinstance",
    "numpy.timedelta64",
    "pandas.core.common.is_integer",
    "pandas.core.index.Index",
    "pandas.tseries.base.warnings",
    "pandas.tseries.offsets.DateOffset",
    "pandas.tseries.tdi.TimedeltaIndex",
    "pandas.tslib.Timedelta",
    "pandas.tslib.Timestamp",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base.DatetimeIndexOpsMixin._add_delta": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "NotImplemented"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base.DatetimeIndexOpsMixin._add_delta_td": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "pandas.tslib._delta_to_nanoseconds",
    "pandas.tslib.iNaT"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base.DatetimeIndexOpsMixin._add_delta_tdi": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pandas.tslib.iNaT"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base.DatetimeIndexOpsMixin._box_func": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "pandas.core.common.AbstractMethodError",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base.DatetimeIndexOpsMixin._box_values": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "pandas.lib.map_infer"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base.DatetimeIndexOpsMixin._convert_scalar_indexer": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "pandas.core.common.is_float",
    "pandas.core.common.is_integer",
    "pandas.lib.isscalar",
    "pandas.tseries.base.DatetimeIndexOpsMixin",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base.DatetimeIndexOpsMixin._convert_tolerance": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tslib.Timedelta",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base.DatetimeIndexOpsMixin._evaluate_compare": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "TypeError",
    "getattr",
    "isinstance",
    "pandas.core.common.is_bool_dtype",
    "pandas.core.common.is_list_like",
    "pandas.core.index.Index",
    "pandas.lib.isscalar",
    "pandas.lib.item_from_zerodim",
    "pandas.tslib.iNaT",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base.DatetimeIndexOpsMixin._format_attrs": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "pandas.tseries.base.DatetimeIndexOpsMixin",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base.DatetimeIndexOpsMixin._format_with_header": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base.DatetimeIndexOpsMixin._formatter_func": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "pandas.core.common.AbstractMethodError",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base.DatetimeIndexOpsMixin._isnan": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "pandas.tslib.iNaT",
    "pandas.util.decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base.DatetimeIndexOpsMixin._join_i8_wrapper": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base.DatetimeIndexOpsMixin._join_i8_wrapper.wrapper": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "isinstance",
    "joinf",
    "numpy.ndarray",
    "pandas.core.common.ABCIndex",
    "pandas.core.common.ABCSeries",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base.DatetimeIndexOpsMixin._maybe_mask_results": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base.DatetimeIndexOpsMixin._nat_new": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.int64",
    "numpy.zeros",
    "pandas.core.common.ABCPeriodIndex",
    "pandas.tslib.iNaT"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base.DatetimeIndexOpsMixin._resolution": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "pandas.tseries.frequencies.Resolution.get_reso_from_freq",
    "pandas.util.decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base.DatetimeIndexOpsMixin._sub_datelike": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "pandas.core.common.AbstractMethodError"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base.DatetimeIndexOpsMixin.argmax": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "pandas.compat.numpy.function.validate_argmax"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base.DatetimeIndexOpsMixin.argmin": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "numpy.iinfo",
    "pandas.compat.numpy.function.validate_argmin"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base.DatetimeIndexOpsMixin.asobject": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "object",
    "pandas.core.index.Index",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base.DatetimeIndexOpsMixin.freqstr": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base.DatetimeIndexOpsMixin.get_duplicates": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "pandas.core.index.Index.get_duplicates"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base.DatetimeIndexOpsMixin.groupby": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "pandas.algos.groupby_object"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base.DatetimeIndexOpsMixin.hasnans": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "pandas.util.decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base.DatetimeIndexOpsMixin.inferred_freq": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tseries.frequencies.infer_freq",
    "pandas.util.decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base.DatetimeIndexOpsMixin.isin": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pandas.core.algorithms.isin",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base.DatetimeIndexOpsMixin.map": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "f",
    "isinstance",
    "numpy.ndarray",
    "pandas.algos.arrmap_object",
    "pandas.core.index.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base.DatetimeIndexOpsMixin.max": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pandas.compat.numpy.function.validate_max",
    "pandas.tslib.iNaT"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base.DatetimeIndexOpsMixin.min": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pandas.compat.numpy.function.validate_min",
    "pandas.tslib.iNaT"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base.DatetimeIndexOpsMixin.repeat": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "pandas.compat.numpy.function.validate_repeat"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base.DatetimeIndexOpsMixin.resolution": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "pandas.tseries.frequencies.Resolution.get_str",
    "pandas.util.decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base.DatetimeIndexOpsMixin.shift": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "isinstance",
    "pandas.compat.string_types",
    "pandas.tseries.frequencies.to_offset",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base.DatetimeIndexOpsMixin.sort_values": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "isinstance",
    "numpy.sort",
    "pandas.core.common.ABCPeriodIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base.DatetimeIndexOpsMixin.summary": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "formatter",
    "len",
    "pandas.formats.printing.pprint_thing",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base.DatetimeIndexOpsMixin.take": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "pandas.compat.numpy.function.validate_take",
    "pandas.core.common.ABCPeriodIndex",
    "pandas.core.common._ensure_int64",
    "pandas.indexes.base._index_shared_docs",
    "pandas.lib.maybe_indices_to_slice",
    "pandas.tslib.iNaT",
    "pandas.util.decorators.Appender",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base.DatetimeIndexOpsMixin.tolist": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base.DatetimeIndexOpsMixin.unique": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "getattr",
    "pandas.core.index.Int64Index.unique"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base.Index": {
  "data": {
   "shadows": "pandas.core.index.Index"
  },
  "type": "import"
 },
 "pandas.tseries.base.Int64Index": {
  "data": {
   "shadows": "pandas.core.index.Int64Index"
  },
  "type": "import"
 },
 "pandas.tseries.base.TimedeltaIndex": {
  "data": {
   "shadows": "pandas.tseries.tdi.TimedeltaIndex"
  },
  "type": "import"
 },
 "pandas.tseries.base.TimelikeOps": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.base.TimelikeOps._round": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "float",
    "getattr",
    "pandas.tseries.frequencies.to_offset",
    "rounder"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base.TimelikeOps.ceil": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "numpy.ceil",
    "pandas.util.decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base.TimelikeOps.floor": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.floor",
    "pandas.util.decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base.TimelikeOps.round": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "numpy.round",
    "pandas.util.decorators.Appender"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.base._algos": {
  "data": {
   "shadows": "pandas.algos"
  },
  "type": "import"
 },
 "pandas.tseries.base._index_shared_docs": {
  "data": {
   "shadows": "pandas.indexes.base._index_shared_docs"
  },
  "type": "import"
 },
 "pandas.tseries.base.algorithms": {
  "data": {
   "shadows": "pandas.core.algorithms"
  },
  "type": "import"
 },
 "pandas.tseries.base.cache_readonly": {
  "data": {
   "shadows": "pandas.util.decorators.cache_readonly"
  },
  "type": "import"
 },
 "pandas.tseries.base.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.tseries.base.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tseries.base.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tseries.base.frequencies": {
  "data": {
   "shadows": "pandas.tseries.frequencies"
  },
  "type": "import"
 },
 "pandas.tseries.base.is_bool_dtype": {
  "data": {
   "shadows": "pandas.core.common.is_bool_dtype"
  },
  "type": "import"
 },
 "pandas.tseries.base.is_float": {
  "data": {
   "shadows": "pandas.core.common.is_float"
  },
  "type": "import"
 },
 "pandas.tseries.base.is_integer": {
  "data": {
   "shadows": "pandas.core.common.is_integer"
  },
  "type": "import"
 },
 "pandas.tseries.base.lib": {
  "data": {
   "shadows": "pandas.lib"
  },
  "type": "import"
 },
 "pandas.tseries.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tseries.base.nv": {
  "data": {
   "shadows": "pandas.compat.numpy.function"
  },
  "type": "import"
 },
 "pandas.tseries.base.printing": {
  "data": {
   "shadows": "pandas.formats.printing"
  },
  "type": "import"
 },
 "pandas.tseries.base.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tseries.base.to_offset": {
  "data": {
   "shadows": "pandas.tseries.frequencies.to_offset"
  },
  "type": "import"
 },
 "pandas.tseries.base.tslib": {
  "data": {
   "shadows": "pandas.tslib"
  },
  "type": "import"
 },
 "pandas.tseries.base.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.tseries.common": {
  "data": {
   "symbols_in_volume": [
    "pandas.tseries.common.DatetimeProperties",
    "pandas.tseries.common.PeriodProperties",
    "pandas.tseries.common.TimedeltaProperties",
    "pandas.tseries.index.DatetimeIndex",
    "pandas.tseries.index.DatetimeIndex._datetimelike_ops",
    "pandas.tseries.period.PeriodIndex",
    "pandas.tseries.period.PeriodIndex._datetimelike_ops",
    "pandas.tseries.tdi.TimedeltaIndex",
    "pandas.tseries.tdi.TimedeltaIndex._datetimelike_ops"
   ]
  },
  "type": "module"
 },
 "pandas.tseries.common.CombinedDatetimelikeProperties": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "__doc__",
    "pandas.tseries.common.DatetimeProperties",
    "pandas.tseries.common.TimedeltaProperties"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.common.DatetimeIndex": {
  "data": {
   "shadows": "pandas.tseries.index.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tseries.common.DatetimeProperties": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "pandas.tseries.common.Properties"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.common.DatetimeProperties.to_pydatetime": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "pandas.tseries.common.IncompatibleFrequency": {
  "data": {
   "shadows": "pandas._period.IncompatibleFrequency"
  },
  "type": "import"
 },
 "pandas.tseries.common.NoNewAttributesMixin": {
  "data": {
   "shadows": "pandas.core.base.NoNewAttributesMixin"
  },
  "type": "import"
 },
 "pandas.tseries.common.PandasDelegate": {
  "data": {
   "shadows": "pandas.core.base.PandasDelegate"
  },
  "type": "import"
 },
 "pandas.tseries.common.PeriodIndex": {
  "data": {
   "shadows": "pandas.tseries.period.PeriodIndex"
  },
  "type": "import"
 },
 "pandas.tseries.common.PeriodProperties": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "pandas.tseries.common.Properties"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.common.Properties": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "pandas.core.base.NoNewAttributesMixin",
    "pandas.core.base.PandasDelegate"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.common.Properties.__init__": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "pandas.tseries.common.Properties._delegate_method": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "getattr",
    "method",
    "pandas.Series",
    "pandas.core.common.is_list_like"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.common.Properties._delegate_property_get": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "numpy.ndarray",
    "pandas.Series",
    "pandas.core.algorithms.take_1d",
    "pandas.core.common.is_integer_dtype",
    "pandas.core.common.is_list_like"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.common.Properties._delegate_property_set": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.common.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tseries.common.TimedeltaIndex": {
  "data": {
   "shadows": "pandas.tseries.tdi.TimedeltaIndex"
  },
  "type": "import"
 },
 "pandas.tseries.common.TimedeltaProperties": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "pandas.tseries.common.Properties"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.common.TimedeltaProperties.components": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.common.TimedeltaProperties.to_pytimedelta": {
  "data": {
   "lineno": 186
  },
  "type": "function"
 },
 "pandas.tseries.common._NS_DTYPE": {
  "data": {
   "shadows": "pandas.core.common._NS_DTYPE"
  },
  "type": "import"
 },
 "pandas.tseries.common._TD_DTYPE": {
  "data": {
   "shadows": "pandas.core.common._TD_DTYPE"
  },
  "type": "import"
 },
 "pandas.tseries.common.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.tseries.common.is_categorical_dtype": {
  "data": {
   "shadows": "pandas.core.common.is_categorical_dtype"
  },
  "type": "import"
 },
 "pandas.tseries.common.is_datetime64_dtype": {
  "data": {
   "shadows": "pandas.core.common.is_datetime64_dtype"
  },
  "type": "import"
 },
 "pandas.tseries.common.is_datetime64tz_dtype": {
  "data": {
   "shadows": "pandas.core.common.is_datetime64tz_dtype"
  },
  "type": "import"
 },
 "pandas.tseries.common.is_datetime_arraylike": {
  "data": {
   "shadows": "pandas.core.common.is_datetime_arraylike"
  },
  "type": "import"
 },
 "pandas.tseries.common.is_datetimelike": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "Exception",
    "pandas.tseries.common.maybe_to_datetimelike"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.common.is_integer_dtype": {
  "data": {
   "shadows": "pandas.core.common.is_integer_dtype"
  },
  "type": "import"
 },
 "pandas.tseries.common.is_list_like": {
  "data": {
   "shadows": "pandas.core.common.is_list_like"
  },
  "type": "import"
 },
 "pandas.tseries.common.is_period_arraylike": {
  "data": {
   "shadows": "pandas.core.common.is_period_arraylike"
  },
  "type": "import"
 },
 "pandas.tseries.common.is_timedelta64_dtype": {
  "data": {
   "shadows": "pandas.core.common.is_timedelta64_dtype"
  },
  "type": "import"
 },
 "pandas.tseries.common.maybe_to_datetimelike": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "pandas.Series",
    "pandas.core.common.is_categorical_dtype",
    "pandas.core.common.is_datetime64_dtype",
    "pandas.core.common.is_datetime64tz_dtype",
    "pandas.core.common.is_datetime_arraylike",
    "pandas.core.common.is_period_arraylike",
    "pandas.core.common.is_timedelta64_dtype",
    "pandas.tseries.common.DatetimeProperties",
    "pandas.tseries.common.PeriodProperties",
    "pandas.tseries.common.TimedeltaProperties",
    "pandas.tseries.index.DatetimeIndex",
    "pandas.tseries.period.PeriodIndex",
    "pandas.tseries.tdi.TimedeltaIndex",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tseries.common.take_1d": {
  "data": {
   "shadows": "pandas.core.algorithms.take_1d"
  },
  "type": "import"
 },
 "pandas.tseries.common.tslib": {
  "data": {
   "shadows": "pandas.tslib"
  },
  "type": "import"
 },
 "pandas.tseries.holiday": {
  "data": {
   "symbols_in_volume": [
    "datetime.datetime",
    "dateutil.relativedelta.MO",
    "dateutil.relativedelta.TH",
    "pandas.DateOffset",
    "pandas.tseries.holiday.Holiday",
    "pandas.tseries.offsets.Day",
    "pandas.tseries.offsets.Easter"
   ]
  },
  "type": "module"
 },
 "pandas.tseries.holiday.AbstractHolidayCalendar": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "datetime.datetime",
    "object",
    "pandas.Timestamp",
    "pandas.compat.add_metaclass",
    "pandas.tseries.holiday.HolidayCalendarMetaClass"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.holiday.AbstractHolidayCalendar.__init__": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "pandas.tseries.holiday.AbstractHolidayCalendar",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.holiday.AbstractHolidayCalendar.holidays": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "Exception",
    "pandas.Timestamp",
    "pandas.tseries.holiday.AbstractHolidayCalendar"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.holiday.AbstractHolidayCalendar.merge": {
  "data": {
   "lineno": 446
  },
  "type": "function"
 },
 "pandas.tseries.holiday.AbstractHolidayCalendar.merge_class": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "list",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.holiday.AbstractHolidayCalendar.rule_from_name": {
  "data": {
   "lineno": 352
  },
  "type": "function"
 },
 "pandas.tseries.holiday.DateOffset": {
  "data": {
   "shadows": "pandas.DateOffset"
  },
  "type": "import"
 },
 "pandas.tseries.holiday.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tseries.holiday.Day": {
  "data": {
   "shadows": "pandas.tseries.offsets.Day"
  },
  "type": "import"
 },
 "pandas.tseries.holiday.Easter": {
  "data": {
   "shadows": "pandas.tseries.offsets.Easter"
  },
  "type": "import"
 },
 "pandas.tseries.holiday.EasterMonday": {
  "data": {
   "lineno": 479
  },
  "type": "constant"
 },
 "pandas.tseries.holiday.FR": {
  "data": {
   "shadows": "dateutil.relativedelta.FR"
  },
  "type": "import"
 },
 "pandas.tseries.holiday.GoodFriday": {
  "data": {
   "lineno": 477
  },
  "type": "constant"
 },
 "pandas.tseries.holiday.Holiday": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.holiday.Holiday.__init__": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.Timestamp",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.holiday.Holiday.__repr__": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.holiday.Holiday._apply_rule": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "pandas.tseries.holiday.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.holiday.Holiday._reference_dates": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.DateOffset",
    "pandas.DatetimeIndex",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.holiday.Holiday.dates": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "datetime.datetime",
    "max",
    "min",
    "numpy.in1d",
    "pandas.Series",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.holiday.HolidayCalendarFactory": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "pandas.tseries.holiday.AbstractHolidayCalendar",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.holiday.HolidayCalendarMetaClass": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.holiday.HolidayCalendarMetaClass.__new__": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "pandas.tseries.holiday.HolidayCalendarMetaClass",
    "pandas.tseries.holiday.register",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.holiday.MO": {
  "data": {
   "shadows": "dateutil.relativedelta.MO"
  },
  "type": "import"
 },
 "pandas.tseries.holiday.SA": {
  "data": {
   "shadows": "dateutil.relativedelta.SA"
  },
  "type": "import"
 },
 "pandas.tseries.holiday.SU": {
  "data": {
   "shadows": "dateutil.relativedelta.SU"
  },
  "type": "import"
 },
 "pandas.tseries.holiday.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tseries.holiday.TH": {
  "data": {
   "shadows": "dateutil.relativedelta.TH"
  },
  "type": "import"
 },
 "pandas.tseries.holiday.TU": {
  "data": {
   "shadows": "dateutil.relativedelta.TU"
  },
  "type": "import"
 },
 "pandas.tseries.holiday.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tseries.holiday.USColumbusDay": {
  "data": {
   "lineno": 468
  },
  "type": "constant"
 },
 "pandas.tseries.holiday.USFederalHolidayCalendar": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "pandas.tseries.holiday.AbstractHolidayCalendar",
    "pandas.tseries.holiday.Holiday",
    "pandas.tseries.holiday.USColumbusDay",
    "pandas.tseries.holiday.USLaborDay",
    "pandas.tseries.holiday.USMartinLutherKingJr",
    "pandas.tseries.holiday.USMemorialDay",
    "pandas.tseries.holiday.USPresidentsDay",
    "pandas.tseries.holiday.USThanksgivingDay",
    "pandas.tseries.holiday.nearest_workday"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.holiday.USLaborDay": {
  "data": {
   "lineno": 466
  },
  "type": "constant"
 },
 "pandas.tseries.holiday.USMartinLutherKingJr": {
  "data": {
   "lineno": 472
  },
  "type": "constant"
 },
 "pandas.tseries.holiday.USMemorialDay": {
  "data": {
   "lineno": 464
  },
  "type": "constant"
 },
 "pandas.tseries.holiday.USPresidentsDay": {
  "data": {
   "lineno": 475
  },
  "type": "constant"
 },
 "pandas.tseries.holiday.USThanksgivingDay": {
  "data": {
   "lineno": 470
  },
  "type": "constant"
 },
 "pandas.tseries.holiday.WE": {
  "data": {
   "shadows": "dateutil.relativedelta.WE"
  },
  "type": "import"
 },
 "pandas.tseries.holiday.add_metaclass": {
  "data": {
   "shadows": "pandas.compat.add_metaclass"
  },
  "type": "import"
 },
 "pandas.tseries.holiday.after_nearest_workday": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "pandas.tseries.holiday.nearest_workday",
    "pandas.tseries.holiday.next_workday"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.holiday.before_nearest_workday": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "pandas.tseries.holiday.nearest_workday",
    "pandas.tseries.holiday.previous_workday"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.holiday.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tseries.holiday.get_calendar": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "pandas.tseries.holiday.holiday_calendars"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.holiday.holiday_calendars": {
  "data": {
   "lineno": 289
  },
  "type": "constant"
 },
 "pandas.tseries.holiday.nearest_workday": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.holiday.next_monday": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.holiday.next_monday_or_tuesday": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.holiday.next_workday": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.holiday.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tseries.holiday.previous_friday": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.holiday.previous_workday": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.holiday.register": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "pandas.tseries.holiday.holiday_calendars"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.holiday.sunday_to_monday": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.holiday.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tseries.holiday.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.tseries.holiday.weekend_to_monday": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.interval": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "pandas.tseries.interval.Index": {
  "data": {
   "shadows": "pandas.core.index.Index"
  },
  "type": "import"
 },
 "pandas.tseries.interval.Interval": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.interval.Interval.__init__": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "pandas.tseries.interval.IntervalIndex": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "pandas.core.index.Index"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.interval.IntervalIndex.__new__": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "pandas.tseries.interval.IntervalIndex.dtype": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "pandas.tseries.interval.PeriodInterval": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.interval.PeriodInterval.__init__": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "pandas.tseries.period": {
  "data": {
   "symbols_in_volume": [
    "pandas._period._DIFFERENT_FREQ_INDEX",
    "pandas.tseries.period.PeriodIndex"
   ]
  },
  "type": "module"
 },
 "pandas.tseries.period.ABCSeries": {
  "data": {
   "shadows": "pandas.core.common.ABCSeries"
  },
  "type": "import"
 },
 "pandas.tseries.period.Appender": {
  "data": {
   "shadows": "pandas.util.decorators.Appender"
  },
  "type": "import"
 },
 "pandas.tseries.period.DatelikeOps": {
  "data": {
   "shadows": "pandas.tseries.base.DatelikeOps"
  },
  "type": "import"
 },
 "pandas.tseries.period.DatetimeIndex": {
  "data": {
   "shadows": "pandas.tseries.index.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tseries.period.DatetimeIndexOpsMixin": {
  "data": {
   "shadows": "pandas.tseries.base.DatetimeIndexOpsMixin"
  },
  "type": "import"
 },
 "pandas.tseries.period.IncompatibleFrequency": {
  "data": {
   "shadows": "pandas._period.IncompatibleFrequency"
  },
  "type": "import"
 },
 "pandas.tseries.period.Index": {
  "data": {
   "shadows": "pandas.tseries.index.Index"
  },
  "type": "import"
 },
 "pandas.tseries.period.Int64Index": {
  "data": {
   "shadows": "pandas.tseries.index.Int64Index"
  },
  "type": "import"
 },
 "pandas.tseries.period.Period": {
  "data": {
   "shadows": "pandas._period.Period"
  },
  "type": "import"
 },
 "pandas.tseries.period.PeriodIndex": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "pandas.tseries.base.DatelikeOps",
    "pandas.tseries.base.DatetimeIndexOpsMixin",
    "pandas.tseries.index.Int64Index",
    "pandas.tseries.period._field_accessor",
    "pandas.tseries.period._period_index_cmp"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.period.PeriodIndex.__array_wrap__": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "ValueError",
    "func",
    "func.__name__",
    "func.types",
    "isinstance",
    "len",
    "numpy.add",
    "numpy.subtract",
    "numpy.ufunc",
    "pandas.core.common.is_bool_dtype",
    "pandas.tseries.period.PeriodIndex",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex.__contains__": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "pandas._period.Period",
    "pandas.compat.string_types"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex.__getitem__": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "getitem",
    "numpy.asarray",
    "pandas._period.Period",
    "pandas.core.common.is_bool_indexer",
    "pandas.lib.isscalar",
    "pandas.tseries.period.PeriodIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex.__new__": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.array",
    "numpy.asarray",
    "numpy.int64",
    "pandas.core.common.is_float",
    "pandas.core.common.is_integer",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex.__setstate__": {
  "data": {
   "lineno": 908,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "isinstance",
    "len",
    "numpy.empty",
    "numpy.ndarray.__setstate__",
    "pandas._period.Period._maybe_convert_freq",
    "pandas.tseries.period.PeriodIndex",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex._add_delta": {
  "data": {
   "lineno": 594
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex._apply_meta": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "isinstance",
    "pandas.tseries.period.PeriodIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex._array_values": {
  "data": {
   "lineno": 380
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex._assert_can_do_setop": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pandas._period.IncompatibleFrequency",
    "pandas.tseries.period.PeriodIndex",
    "pandas.tseries.period._DIFFERENT_FREQ_INDEX",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex._box_func": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "pandas._period.Period._from_ordinal",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex._coerce_scalar_to_index": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "pandas.tseries.period.PeriodIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex._convert_tolerance": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "pandas.tseries.base.DatetimeIndexOpsMixin._convert_tolerance"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex._format_native_types": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": [
    "formatter",
    "list",
    "numpy.array",
    "object",
    "pandas.compat.u",
    "pandas.core.common.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex._formatter_func": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex._from_arraylike": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "classmethod",
    "getattr",
    "isinstance",
    "len",
    "list",
    "numpy.array",
    "numpy.datetime64",
    "numpy.int64",
    "numpy.issubdtype",
    "numpy.ndarray",
    "pandas._period.Period",
    "pandas._period.period_asfreq_arr",
    "pandas.core.common._ensure_int64",
    "pandas.core.common._ensure_object",
    "pandas.lib.isscalar",
    "pandas.tseries.frequencies.get_freq_code",
    "pandas.tseries.index.DatetimeIndex",
    "pandas.tseries.index.Int64Index",
    "pandas.tseries.period.PeriodIndex",
    "pandas.tseries.period._get_ordinals",
    "pandas.tseries.period.dt64arr_to_periodarr",
    "repr",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex._generate_range": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "len",
    "pandas.core.common._count_not_none",
    "pandas.tseries.period._get_ordinal_range",
    "pandas.tseries.period._range_from_fields"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex._get_object_array": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "numpy.array",
    "pandas._period.Period._from_ordinal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex._get_string_slice": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "pandas.tseries.frequencies.Resolution.get_freq_group",
    "pandas.tseries.frequencies.get_freq_group",
    "pandas.tseries.tools.parse_time_string",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex._maybe_cast_slice_bound": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "datetime.datetime",
    "isinstance",
    "pandas._period.Period",
    "pandas.compat.string_types",
    "pandas.core.common.is_float",
    "pandas.core.common.is_integer",
    "pandas.tseries.tools.parse_time_string"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex._maybe_convert_timedelta": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "datetime.timedelta",
    "isinstance",
    "numpy.ndarray",
    "numpy.timedelta64",
    "pandas._period.IncompatibleFrequency",
    "pandas.core.common.is_integer_dtype",
    "pandas.core.common.is_timedelta64_dtype",
    "pandas.lib.Timedelta",
    "pandas.tseries.frequencies.get_base_alias",
    "pandas.tseries.frequencies.get_standard_freq",
    "pandas.tseries.frequencies.to_offset",
    "pandas.tseries.offsets.DateOffset",
    "pandas.tseries.offsets.Tick",
    "pandas.tseries.period._DIFFERENT_FREQ_INDEX",
    "pandas.tslib._delta_to_nanoseconds"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex._mpl_repr": {
  "data": {
   "lineno": 517
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex._na_value": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "pandas.tslib.iNaT",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex._parsed_string_to_bounds": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "KeyError",
    "pandas._period.Period"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex._shallow_copy": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "pandas.tseries.period.PeriodIndex",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex._shallow_copy_with_infer": {
  "data": {
   "lineno": 287
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex._simple_new": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "getattr",
    "numpy.array",
    "object.__new__",
    "pandas._period.Period._maybe_convert_freq",
    "pandas.core.common.is_object_dtype",
    "pandas.tseries.period.PeriodIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex._to_embed": {
  "data": {
   "lineno": 350
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex._wrap_union_result": {
  "data": {
   "lineno": 811
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex.append": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "numpy.concatenate",
    "pandas.core.common._concat_compat",
    "pandas.tseries.index.Index",
    "pandas.tseries.period.PeriodIndex",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex.asfreq": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "pandas._period._validate_end_alias",
    "pandas._period.period_asfreq_arr",
    "pandas.tseries.frequencies.get_freq_code",
    "pandas.tseries.frequencies.get_standard_freq",
    "pandas.tslib.iNaT"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex.asof_locs": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.where",
    "pandas.tseries.index.DatetimeIndex",
    "pandas.tseries.period.PeriodIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex.astype": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.array",
    "numpy.dtype",
    "numpy.object_",
    "pandas.core.common._INT64_DTYPE",
    "pandas.tseries.index.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex.dtype_str": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "pandas.util.decorators.cache_readonly"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex.end_time": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex.equals": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "hasattr",
    "numpy.array_equal",
    "pandas.tseries.period.PeriodIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex.get_indexer": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "hasattr",
    "pandas._period.IncompatibleFrequency",
    "pandas.tseries.index.Index.get_indexer",
    "pandas.tseries.period._DIFFERENT_FREQ_INDEX"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex.get_loc": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "ValueError",
    "pandas._period.Period",
    "pandas.core.common.is_integer",
    "pandas.tseries.index.Index.get_loc",
    "pandas.tseries.tools.parse_time_string"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex.get_value": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "TypeError",
    "numpy.searchsorted",
    "pandas._period.Period",
    "pandas.core.common._maybe_box",
    "pandas.core.common._values_from_object",
    "pandas.tseries.frequencies.Resolution.get_freq_group",
    "pandas.tseries.frequencies.get_freq_group",
    "pandas.tseries.period.PeriodIndex",
    "pandas.tseries.tools.parse_time_string",
    "slice",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex.inferred_type": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex.is_all_dates": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex.is_full": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex.join": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "pandas.tseries.index.Int64Index.join"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex.repeat": {
  "data": {
   "lineno": 895,
   "symbols_in_volume": [
    "pandas.compat.numpy.function.validate_repeat"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex.searchsorted": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "isinstance",
    "pandas._period.IncompatibleFrequency",
    "pandas._period.Period",
    "pandas.compat.string_types",
    "pandas.core.base._shared_docs",
    "pandas.tseries.period._DIFFERENT_FREQ_INDEX",
    "pandas.util.decorators.Appender",
    "pandas.util.decorators.Substitution"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex.shift": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "pandas.tseries.period.PeriodIndex",
    "pandas.tslib.iNaT"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex.start_time": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex.to_datetime": {
  "data": {
   "lineno": 482
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex.to_timestamp": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "pandas._period._validate_end_alias",
    "pandas._period.periodarr_to_dt64arr",
    "pandas.tseries.frequencies.get_freq_code",
    "pandas.tseries.frequencies.get_to_timestamp_base",
    "pandas.tseries.index.DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex.tz_convert": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period.PeriodIndex.tz_localize": {
  "data": {
   "lineno": 958,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period.Substitution": {
  "data": {
   "shadows": "pandas.util.decorators.Substitution"
  },
  "type": "import"
 },
 "pandas.tseries.period.Timedelta": {
  "data": {
   "shadows": "pandas.lib.Timedelta"
  },
  "type": "import"
 },
 "pandas.tseries.period._DIFFERENT_FREQ_INDEX": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "pandas.tseries.period._INT64_DTYPE": {
  "data": {
   "shadows": "pandas.core.common._INT64_DTYPE"
  },
  "type": "import"
 },
 "pandas.tseries.period._field_accessor": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period._field_accessor.f": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "pandas._period.get_period_field_arr",
    "pandas.tseries.frequencies.get_freq_code"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period._get_ordinal_range": {
  "data": {
   "lineno": 988,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.arange",
    "numpy.int64",
    "pandas._period.Period",
    "pandas.core.common._count_not_none",
    "pandas.tseries.frequencies.get_freq_code",
    "pandas.tslib.iNaT"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period._get_ordinals": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "isinstance",
    "pandas._period.Period",
    "pandas._period.extract_ordinals",
    "pandas.lib.map_infer"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period._gfc": {
  "data": {
   "shadows": "pandas.tseries.frequencies.get_freq_code"
  },
  "type": "import"
 },
 "pandas.tseries.period._make_field_arrays": {
  "data": {
   "lineno": 1069,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "list",
    "numpy.asarray",
    "numpy.ndarray",
    "numpy.repeat",
    "pandas.core.common.ABCSeries"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period._maybe_box": {
  "data": {
   "shadows": "pandas.core.common._maybe_box"
  },
  "type": "import"
 },
 "pandas.tseries.period._period_index_cmp": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "pandas.tseries.period._period_index_cmp.wrapper": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "func",
    "getattr",
    "isinstance",
    "pandas._period.IncompatibleFrequency",
    "pandas._period.Period",
    "pandas.core.missing.mask_missing",
    "pandas.tseries.frequencies.get_freq_code",
    "pandas.tseries.period._DIFFERENT_FREQ_INDEX",
    "pandas.tslib.iNaT"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period._quarter_to_myear": {
  "data": {
   "shadows": "pandas._period._quarter_to_myear"
  },
  "type": "import"
 },
 "pandas.tseries.period._range_from_fields": {
  "data": {
   "lineno": 1032,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.array",
    "numpy.int64",
    "pandas._period._quarter_to_myear",
    "pandas._period.period_ordinal",
    "pandas.compat.zip",
    "pandas.tseries.frequencies.FreqGroup.FR_QTR",
    "pandas.tseries.frequencies.get_freq_code",
    "pandas.tseries.period._make_field_arrays"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period._shared_docs": {
  "data": {
   "shadows": "pandas.core.base._shared_docs"
  },
  "type": "import"
 },
 "pandas.tseries.period._validate_end_alias": {
  "data": {
   "shadows": "pandas._period._validate_end_alias"
  },
  "type": "import"
 },
 "pandas.tseries.period._values_from_object": {
  "data": {
   "shadows": "pandas.core.common._values_from_object"
  },
  "type": "import"
 },
 "pandas.tseries.period.cache_readonly": {
  "data": {
   "shadows": "pandas.util.decorators.cache_readonly"
  },
  "type": "import"
 },
 "pandas.tseries.period.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.tseries.period.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tseries.period.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tseries.period.dt64arr_to_periodarr": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ValueError",
    "numpy.dtype",
    "pandas._period.dt64arr_to_periodarr",
    "pandas.tseries.frequencies.get_freq_code"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period.frequencies": {
  "data": {
   "shadows": "pandas.tseries.frequencies"
  },
  "type": "import"
 },
 "pandas.tseries.period.get_period_field_arr": {
  "data": {
   "shadows": "pandas._period.get_period_field_arr"
  },
  "type": "import"
 },
 "pandas.tseries.period.is_float": {
  "data": {
   "shadows": "pandas.core.common.is_float"
  },
  "type": "import"
 },
 "pandas.tseries.period.is_integer": {
  "data": {
   "shadows": "pandas.core.common.is_integer"
  },
  "type": "import"
 },
 "pandas.tseries.period.is_object_dtype": {
  "data": {
   "shadows": "pandas.core.common.is_object_dtype"
  },
  "type": "import"
 },
 "pandas.tseries.period.isnull": {
  "data": {
   "shadows": "pandas.core.common.isnull"
  },
  "type": "import"
 },
 "pandas.tseries.period.lib": {
  "data": {
   "shadows": "pandas.lib"
  },
  "type": "import"
 },
 "pandas.tseries.period.missing": {
  "data": {
   "shadows": "pandas.core.missing"
  },
  "type": "import"
 },
 "pandas.tseries.period.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tseries.period.nv": {
  "data": {
   "shadows": "pandas.compat.numpy.function"
  },
  "type": "import"
 },
 "pandas.tseries.period.offsets": {
  "data": {
   "shadows": "pandas.tseries.offsets"
  },
  "type": "import"
 },
 "pandas.tseries.period.parse_time_string": {
  "data": {
   "shadows": "pandas.tseries.tools.parse_time_string"
  },
  "type": "import"
 },
 "pandas.tseries.period.period": {
  "data": {
   "shadows": "pandas._period"
  },
  "type": "import"
 },
 "pandas.tseries.period.period_range": {
  "data": {
   "lineno": 1088,
   "symbols_in_volume": [
    "pandas.tseries.period.PeriodIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period.pnow": {
  "data": {
   "lineno": 1084,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "pandas._period.Period"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.period.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tseries.period.tslib": {
  "data": {
   "shadows": "pandas.tslib"
  },
  "type": "import"
 },
 "pandas.tseries.period.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tseries.period.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.tseries.tests": {
  "data": {},
  "type": "module"
 },
 "pandas.tseries.tests.test_base": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.tseries.tests.test_base.nose"
   ]
  },
  "type": "module"
 },
 "pandas.tseries.tests.test_base.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_base.Float64Index": {
  "data": {
   "shadows": "pandas.Float64Index"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_base.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_base.Int64Index": {
  "data": {
   "shadows": "pandas.Int64Index"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_base.Ops": {
  "data": {
   "shadows": "pandas.tests.test_base.Ops"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_base.Period": {
  "data": {
   "shadows": "pandas.Period"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_base.PeriodIndex": {
  "data": {
   "shadows": "pandas.PeriodIndex"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_base.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_base.TestDatetimeIndexOps": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "pandas.tests.test_base.Ops"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.tests.test_base.TestDatetimeIndexOps.setUp": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "isinstance",
    "mask",
    "pandas.DatetimeIndex",
    "pandas.PeriodIndex",
    "pandas.tseries.tests.test_base.TestDatetimeIndexOps",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestDatetimeIndexOps.test_add_iadd": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "FutureWarning",
    "TypeError",
    "datetime.timedelta",
    "numpy.timedelta64",
    "pandas.DatetimeIndex",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.offsets.Hour",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestDatetimeIndexOps.test_asobject_tolist": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "datetime.datetime",
    "isinstance",
    "object",
    "pandas.DatetimeIndex",
    "pandas.Index",
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestDatetimeIndexOps.test_astype_str": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "object",
    "pandas.Index",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestDatetimeIndexOps.test_drop_duplicates_metadata": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestDatetimeIndexOps.test_getitem": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.Timestamp",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestDatetimeIndexOps.test_infer_freq": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestDatetimeIndexOps.test_minmax": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "getattr",
    "pandas.DatetimeIndex",
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestDatetimeIndexOps.test_nat_new": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "pandas.DatetimeIndex",
    "pandas.NaT",
    "pandas.date_range",
    "pandas.tslib.iNaT",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestDatetimeIndexOps.test_nonunique_contains": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "map",
    "pandas.DatetimeIndex",
    "pandas.util.testing.assertIn"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestDatetimeIndexOps.test_numpy_minmax": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "ValueError",
    "numpy.argmax",
    "numpy.argmin",
    "numpy.max",
    "numpy.min",
    "pandas.Timestamp",
    "pandas._np_version_under1p10",
    "pandas.date_range",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestDatetimeIndexOps.test_numpy_repeat": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "ValueError",
    "numpy.repeat",
    "pandas.DatetimeIndex",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestDatetimeIndexOps.test_ops_properties": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestDatetimeIndexOps.test_ops_properties_basic": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "dict",
    "getattr",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestDatetimeIndexOps.test_order": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestDatetimeIndexOps.test_repeat": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestDatetimeIndexOps.test_representation": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "getattr",
    "pandas.DatetimeIndex",
    "pandas.NaT",
    "pandas.option_context",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestDatetimeIndexOps.test_representation_to_series": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.NaT",
    "pandas.Series",
    "pandas.option_context",
    "repr",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestDatetimeIndexOps.test_resolution": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "pandas.date_range",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestDatetimeIndexOps.test_round": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DatetimeIndex",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestDatetimeIndexOps.test_shift": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestDatetimeIndexOps.test_sub_isub": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "datetime.timedelta",
    "numpy.timedelta64",
    "pandas.DatetimeIndex",
    "pandas.Timedelta",
    "pandas.date_range",
    "pandas.offsets.Hour",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestDatetimeIndexOps.test_summary": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.NaT",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestDatetimeIndexOps.test_take": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.Timestamp",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestDatetimeIndexOps.test_take_invalid_kwargs": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pandas.date_range",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestDatetimeIndexOps.test_value_counts_unique": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "len",
    "numpy.repeat",
    "pandas.DatetimeIndex",
    "pandas.NaT",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestPeriodIndexOps": {
  "data": {
   "lineno": 1488,
   "symbols_in_volume": [
    "pandas.tests.test_base.Ops"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.tests.test_base.TestPeriodIndexOps.setUp": {
  "data": {
   "lineno": 1489,
   "symbols_in_volume": [
    "isinstance",
    "mask",
    "pandas.DatetimeIndex",
    "pandas.PeriodIndex",
    "pandas.tseries.tests.test_base.TestPeriodIndexOps",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestPeriodIndexOps.test_add_iadd": {
  "data": {
   "lineno": 1759,
   "symbols_in_volume": [
    "FutureWarning",
    "datetime.timedelta",
    "numpy.timedelta64",
    "pandas.PeriodIndex",
    "pandas.Timedelta",
    "pandas.offsets.Day",
    "pandas.offsets.Hour",
    "pandas.offsets.Minute",
    "pandas.offsets.MonthBegin",
    "pandas.offsets.MonthEnd",
    "pandas.offsets.YearBegin",
    "pandas.offsets.YearEnd",
    "pandas.period_range",
    "pandas.tseries.period.IncompatibleFrequency",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestPeriodIndexOps.test_asobject_tolist": {
  "data": {
   "lineno": 1503,
   "symbols_in_volume": [
    "isinstance",
    "object",
    "pandas.Index",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.period_range",
    "pandas.tslib.iNaT"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestPeriodIndexOps.test_drop_duplicates_metadata": {
  "data": {
   "lineno": 2067,
   "symbols_in_volume": [
    "pandas.period_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestPeriodIndexOps.test_getitem": {
  "data": {
   "lineno": 2216,
   "symbols_in_volume": [
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.period_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestPeriodIndexOps.test_minmax": {
  "data": {
   "lineno": 1540,
   "symbols_in_volume": [
    "getattr",
    "pandas.NaT",
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.tslib.iNaT"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestPeriodIndexOps.test_nat_new": {
  "data": {
   "lineno": 2308,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "pandas.NaT",
    "pandas.PeriodIndex",
    "pandas.period_range",
    "pandas.tslib.iNaT",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestPeriodIndexOps.test_numpy_minmax": {
  "data": {
   "lineno": 1577,
   "symbols_in_volume": [
    "ValueError",
    "numpy.argmax",
    "numpy.argmin",
    "numpy.max",
    "numpy.min",
    "pandas.Period",
    "pandas._np_version_under1p10",
    "pandas.period_range",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestPeriodIndexOps.test_ops_properties": {
  "data": {
   "lineno": 1496,
   "symbols_in_volume": [
    "isinstance",
    "pandas.PeriodIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestPeriodIndexOps.test_order": {
  "data": {
   "lineno": 2149,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.PeriodIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestPeriodIndexOps.test_order_compat": {
  "data": {
   "lineno": 2079,
   "symbols_in_volume": [
    "_check_freq",
    "numpy.array",
    "pandas.Index",
    "pandas.PeriodIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestPeriodIndexOps.test_order_compat._check_freq": {
  "data": {
   "lineno": 2080,
   "symbols_in_volume": [
    "isinstance",
    "pandas.PeriodIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestPeriodIndexOps.test_representation": {
  "data": {
   "lineno": 1595,
   "symbols_in_volume": [
    "getattr",
    "pandas.PeriodIndex",
    "pandas.period_range",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestPeriodIndexOps.test_representation_to_series": {
  "data": {
   "lineno": 1642,
   "symbols_in_volume": [
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas.period_range",
    "repr",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestPeriodIndexOps.test_resolution": {
  "data": {
   "lineno": 1749,
   "symbols_in_volume": [
    "pandas.period_range",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestPeriodIndexOps.test_shift": {
  "data": {
   "lineno": 2319,
   "symbols_in_volume": [
    "TypeError",
    "pandas.PeriodIndex",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestPeriodIndexOps.test_sub_isub": {
  "data": {
   "lineno": 1906,
   "symbols_in_volume": [
    "datetime.timedelta",
    "numpy.timedelta64",
    "pandas.PeriodIndex",
    "pandas.offsets.Day",
    "pandas.offsets.Hour",
    "pandas.offsets.Minute",
    "pandas.offsets.MonthBegin",
    "pandas.offsets.MonthEnd",
    "pandas.offsets.YearBegin",
    "pandas.offsets.YearEnd",
    "pandas.period_range",
    "pandas.tseries.period.IncompatibleFrequency",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestPeriodIndexOps.test_summary": {
  "data": {
   "lineno": 1700,
   "symbols_in_volume": [
    "pandas.PeriodIndex",
    "pandas.period_range",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestPeriodIndexOps.test_take": {
  "data": {
   "lineno": 2260,
   "symbols_in_volume": [
    "pandas.Period",
    "pandas.PeriodIndex",
    "pandas.period_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestPeriodIndexOps.test_value_counts_unique": {
  "data": {
   "lineno": 2032,
   "symbols_in_volume": [
    "len",
    "numpy.repeat",
    "pandas.NaT",
    "pandas.PeriodIndex",
    "pandas.Series",
    "pandas.period_range",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestTimedeltaIndexOps": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "pandas.tests.test_base.Ops"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.tests.test_base.TestTimedeltaIndexOps.setUp": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "isinstance",
    "mask",
    "pandas.TimedeltaIndex",
    "pandas.tseries.tests.test_base.TestTimedeltaIndexOps",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestTimedeltaIndexOps.test_add_iadd": {
  "data": {
   "lineno": 930,
   "symbols_in_volume": [
    "datetime.timedelta",
    "numpy.timedelta64",
    "pandas.Timedelta",
    "pandas.offsets.Hour",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestTimedeltaIndexOps.test_addition_ops": {
  "data": {
   "lineno": 1187,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pandas.DatetimeIndex",
    "pandas.Int64Index",
    "pandas.NaT",
    "pandas.Timedelta",
    "pandas.TimedeltaIndex",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestTimedeltaIndexOps.test_asobject_tolist": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "datetime.timedelta",
    "isinstance",
    "object",
    "pandas.Index",
    "pandas.NaT",
    "pandas.Timedelta",
    "pandas.TimedeltaIndex",
    "pandas.timedelta_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestTimedeltaIndexOps.test_drop_duplicates_metadata": {
  "data": {
   "lineno": 1378,
   "symbols_in_volume": [
    "pandas.timedelta_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestTimedeltaIndexOps.test_dti_dti_deprecated_ops": {
  "data": {
   "lineno": 1121,
   "symbols_in_volume": [
    "FutureWarning",
    "TypeError",
    "pandas.Index",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestTimedeltaIndexOps.test_dti_tdi_numeric_ops": {
  "data": {
   "lineno": 1165,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.NaT",
    "pandas.TimedeltaIndex",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestTimedeltaIndexOps.test_getitem": {
  "data": {
   "lineno": 1346,
   "symbols_in_volume": [
    "pandas.Timedelta",
    "pandas.TimedeltaIndex",
    "pandas.timedelta_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestTimedeltaIndexOps.test_infer_freq": {
  "data": {
   "lineno": 1446,
   "symbols_in_volume": [
    "pandas.TimedeltaIndex",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestTimedeltaIndexOps.test_minmax": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "getattr",
    "numpy.nan",
    "pandas.NaT",
    "pandas.Timedelta",
    "pandas.TimedeltaIndex",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestTimedeltaIndexOps.test_nat_new": {
  "data": {
   "lineno": 1455,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "pandas.NaT",
    "pandas.TimedeltaIndex",
    "pandas.timedelta_range",
    "pandas.tslib.iNaT",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestTimedeltaIndexOps.test_nonunique_contains": {
  "data": {
   "lineno": 1266,
   "symbols_in_volume": [
    "map",
    "pandas.TimedeltaIndex",
    "pandas.util.testing.assertIn"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestTimedeltaIndexOps.test_numpy_minmax": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "ValueError",
    "numpy.argmax",
    "numpy.argmin",
    "numpy.asarray",
    "numpy.max",
    "numpy.min",
    "pandas.Timedelta",
    "pandas.TimedeltaIndex",
    "pandas._np_version_under1p10",
    "pandas.date_range",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestTimedeltaIndexOps.test_ops_compat": {
  "data": {
   "lineno": 987,
   "symbols_in_volume": [
    "TypeError",
    "datetime.timedelta",
    "numpy.arange",
    "numpy.nan",
    "numpy.timedelta64",
    "pandas.Float64Index",
    "pandas.Int64Index",
    "pandas.NaT",
    "pandas.Timedelta",
    "pandas.TimedeltaIndex",
    "pandas.offsets.Hour",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestTimedeltaIndexOps.test_ops_properties": {
  "data": {
   "lineno": 742
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestTimedeltaIndexOps.test_order": {
  "data": {
   "lineno": 1280,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.TimedeltaIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestTimedeltaIndexOps.test_representation": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "getattr",
    "pandas.TimedeltaIndex",
    "pandas.option_context",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestTimedeltaIndexOps.test_representation_to_series": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.TimedeltaIndex",
    "pandas.option_context",
    "repr",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestTimedeltaIndexOps.test_round": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Timedelta",
    "pandas.TimedeltaIndex",
    "pandas.timedelta_range",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestTimedeltaIndexOps.test_shift": {
  "data": {
   "lineno": 1466,
   "symbols_in_volume": [
    "pandas.TimedeltaIndex",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestTimedeltaIndexOps.test_sub_isub": {
  "data": {
   "lineno": 955,
   "symbols_in_volume": [
    "TypeError",
    "datetime.timedelta",
    "numpy.timedelta64",
    "pandas.DatetimeIndex",
    "pandas.Timedelta",
    "pandas.TimedeltaIndex",
    "pandas.Timestamp",
    "pandas.offsets.Hour",
    "pandas.timedelta_range",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestTimedeltaIndexOps.test_subtraction_ops": {
  "data": {
   "lineno": 1014,
   "symbols_in_volume": [
    "TypeError",
    "pandas.DatetimeIndex",
    "pandas.NaT",
    "pandas.Timedelta",
    "pandas.TimedeltaIndex",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestTimedeltaIndexOps.test_subtraction_ops_with_tz": {
  "data": {
   "lineno": 1052,
   "symbols_in_volume": [
    "TypeError",
    "_check",
    "pandas.DatetimeIndex",
    "pandas.Timedelta",
    "pandas.TimedeltaIndex",
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestTimedeltaIndexOps.test_subtraction_ops_with_tz._check": {
  "data": {
   "lineno": 1064,
   "symbols_in_volume": [
    "pandas.Timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestTimedeltaIndexOps.test_summary": {
  "data": {
   "lineno": 902,
   "symbols_in_volume": [
    "pandas.TimedeltaIndex",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestTimedeltaIndexOps.test_take": {
  "data": {
   "lineno": 1391,
   "symbols_in_volume": [
    "pandas.Timedelta",
    "pandas.TimedeltaIndex",
    "pandas.timedelta_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestTimedeltaIndexOps.test_take_invalid_kwargs": {
  "data": {
   "lineno": 1430,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pandas.timedelta_range",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestTimedeltaIndexOps.test_unknown_attribute": {
  "data": {
   "lineno": 1273,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.random.normal",
    "pandas.Series",
    "pandas.timedelta_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.TestTimedeltaIndexOps.test_value_counts_unique": {
  "data": {
   "lineno": 1237,
   "symbols_in_volume": [
    "len",
    "numpy.repeat",
    "pandas.NaT",
    "pandas.Series",
    "pandas.TimedeltaIndex",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_base.Timedelta": {
  "data": {
   "shadows": "pandas.Timedelta"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_base.TimedeltaIndex": {
  "data": {
   "shadows": "pandas.TimedeltaIndex"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_base.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_base._np_version_under1p10": {
  "data": {
   "shadows": "pandas._np_version_under1p10"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_base.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_base.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_base.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_base.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_base.period": {
  "data": {
   "shadows": "pandas.tseries.period"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_base.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_base.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_base.timedelta_range": {
  "data": {
   "shadows": "pandas.timedelta_range"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_base.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_base.tslib": {
  "data": {
   "shadows": "pandas.tslib"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_converter": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pandas.tseries.tests.test_converter.nose"
   ]
  },
  "type": "module"
 },
 "pandas.tseries.tests.test_converter.Micro": {
  "data": {
   "shadows": "pandas.tseries.offsets.Micro"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_converter.Milli": {
  "data": {
   "shadows": "pandas.tseries.offsets.Milli"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_converter.Period": {
  "data": {
   "shadows": "pandas.Period"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_converter.Second": {
  "data": {
   "shadows": "pandas.tseries.offsets.Second"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_converter.TestDateTimeConverter": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.tests.test_converter.TestDateTimeConverter.setUp": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "pandas.tseries.converter.DatetimeConverter",
    "pandas.tseries.converter.TimeFormatter"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_converter.TestDateTimeConverter.test_conversion": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "datetime.date",
    "datetime.datetime",
    "numpy.array",
    "pandas.Timestamp",
    "pandas.compat.numpy.np_datetime64_compat"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_converter.TestDateTimeConverter.test_conversion_float": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.testing.assert_almost_equal",
    "pandas.Timestamp",
    "pandas.tseries.converter.dates.date2num"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_converter.TestDateTimeConverter.test_convert_accepts_unicode": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "pandas.compat.u"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_converter.TestDateTimeConverter.test_dateindex_conversion": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pandas.tseries.converter.dates.date2num",
    "pandas.util.testing.makeDateIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_converter.TestDateTimeConverter.test_resolution": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "_assert_less",
    "pandas.Timestamp",
    "pandas.tseries.offsets.Micro",
    "pandas.tseries.offsets.Milli",
    "pandas.tseries.offsets.Second"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_converter.TestDateTimeConverter.test_resolution._assert_less": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "AssertionError"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_converter.TestDateTimeConverter.test_time_formatter": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_converter.TestPeriodConverter": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.tests.test_converter.TestPeriodConverter.setUp": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "Axis",
    "pandas.tseries.converter.PeriodConverter"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_converter.TestPeriodConverter.setUp.Axis": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.tests.test_converter.TestPeriodConverter.test_conversion": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "datetime.date",
    "pandas.Period",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_converter.TestPeriodConverter.test_convert_accepts_unicode": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "pandas.compat.u"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_converter.TestPeriodConverter.test_integer_passthrough": {
  "data": {
   "lineno": 161
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_converter.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_converter.converter": {
  "data": {
   "shadows": "pandas.tseries.converter"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_converter.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_converter.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_converter.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_converter.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_converter.np_assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_converter.np_datetime64_compat": {
  "data": {
   "shadows": "pandas.compat.numpy.np_datetime64_compat"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_converter.test_timtetonum_accepts_unicode": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "pandas.compat.u",
    "pandas.tseries.converter.time2num"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_converter.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_converter.u": {
  "data": {
   "shadows": "pandas.compat.u"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_daterange": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "datetime.datetime",
    "pandas.tseries.tests.test_daterange.nose"
   ]
  },
  "type": "module"
 },
 "pandas.tseries.tests.test_daterange.DatetimeIndex": {
  "data": {
   "shadows": "pandas.tseries.index.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_daterange.Index": {
  "data": {
   "shadows": "pandas.core.index.Index"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_daterange.TestCustomDateRange": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.tests.test_daterange.TestCustomDateRange.setUp": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "pandas.tseries.index.cdate_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestCustomDateRange.test_cached_range": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "Exception",
    "pandas.core.datetools.cday",
    "pandas.tseries.index.DatetimeIndex._cached_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestCustomDateRange.test_cdaterange": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "pandas.tseries.index.DatetimeIndex",
    "pandas.tseries.index.cdate_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestCustomDateRange.test_cdaterange_holidays": {
  "data": {
   "lineno": 794,
   "symbols_in_volume": [
    "pandas.tseries.index.DatetimeIndex",
    "pandas.tseries.index.cdate_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestCustomDateRange.test_cdaterange_weekmask": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "pandas.tseries.index.DatetimeIndex",
    "pandas.tseries.index.cdate_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestCustomDateRange.test_cdaterange_weekmask_and_holidays": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "pandas.tseries.index.DatetimeIndex",
    "pandas.tseries.index.cdate_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestCustomDateRange.test_comparison": {
  "data": {
   "lineno": 606
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestCustomDateRange.test_constructor": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "ValueError",
    "pandas.core.datetools.cday",
    "pandas.tseries.index.cdate_range",
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestCustomDateRange.test_copy": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestCustomDateRange.test_date_parse_failure": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Timestamp",
    "pandas.tseries.index.cdate_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestCustomDateRange.test_daterange_bug_456": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "pandas.core.datetools.CDay",
    "pandas.tseries.index.DatetimeIndex",
    "pandas.tseries.index.cdate_range",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestCustomDateRange.test_equals": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestCustomDateRange.test_getitem": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "len",
    "numpy.int_",
    "numpy.ndarray",
    "pandas.core.datetools.cday",
    "pandas.tseries.index.DatetimeIndex",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestCustomDateRange.test_getitem_matplotlib_hackaround": {
  "data": {
   "lineno": 638
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestCustomDateRange.test_intersection_bug": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "pandas.tseries.index.cdate_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestCustomDateRange.test_misc": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "datetime.datetime",
    "len",
    "pandas.core.datetools.cday",
    "pandas.tseries.index.cdate_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestCustomDateRange.test_outer_join": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "pandas.core.datetools.bmonthEnd",
    "pandas.tseries.index.DatetimeIndex",
    "pandas.tseries.index.date_range",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestCustomDateRange.test_pickle_unpickle": {
  "data": {
   "lineno": 662
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestCustomDateRange.test_repr": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestCustomDateRange.test_shift": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "pandas.core.common.PerformanceWarning",
    "pandas.core.datetools.bmonthEnd",
    "pandas.core.datetools.cday",
    "pandas.tseries.index.date_range",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestCustomDateRange.test_summary": {
  "data": {
   "lineno": 736
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestCustomDateRange.test_summary_dateutil": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "pandas.tseries.index.cdate_range",
    "pandas.tseries.tests.test_daterange.dateutil",
    "pandas.util.testing._skip_if_no_dateutil"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestCustomDateRange.test_summary_pytz": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "pandas.tseries.index.cdate_range",
    "pandas.tseries.tests.test_daterange.pytz",
    "pandas.util.testing._skip_if_no_pytz"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestCustomDateRange.test_union": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "pandas.core.datetools.bmonthEnd",
    "pandas.core.index.Index",
    "pandas.tseries.index.DatetimeIndex",
    "pandas.tseries.index.date_range",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestDateRange": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.tests.test_daterange.TestDateRange.setUp": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "pandas.tseries.index.bdate_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestDateRange.test_cached_range": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "TypeError",
    "pandas.core.datetools.bday",
    "pandas.tseries.index.DatetimeIndex._cached_range",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestDateRange.test_cached_range_bug": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "datetime.datetime",
    "len",
    "pandas.core.datetools.DateOffset",
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestDateRange.test_comparison": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestDateRange.test_constructor": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "ValueError",
    "pandas.core.datetools.bday",
    "pandas.tseries.index.bdate_range",
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestDateRange.test_copy": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestDateRange.test_date_parse_failure": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Timestamp",
    "pandas.tseries.index.bdate_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestDateRange.test_daterange_bug_456": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "pandas.core.datetools.BDay",
    "pandas.tseries.index.DatetimeIndex",
    "pandas.tseries.index.bdate_range",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestDateRange.test_equals": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestDateRange.test_error_with_zero_monthends": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "ValueError",
    "pandas.core.datetools.MonthEnd",
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestDateRange.test_freq_divides_end_in_nanos": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "pandas.tseries.index.DatetimeIndex",
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestDateRange.test_getitem": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "len",
    "numpy.int_",
    "numpy.ndarray",
    "pandas.core.datetools.bday",
    "pandas.tseries.index.DatetimeIndex",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestDateRange.test_getitem_matplotlib_hackaround": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestDateRange.test_identical": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "pandas.core.index.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestDateRange.test_intersection": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "pandas.core.datetools.Minute",
    "pandas.tseries.index.DatetimeIndex",
    "pandas.tseries.index.date_range",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestDateRange.test_intersection_bug": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "pandas.tseries.index.bdate_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestDateRange.test_misc": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "datetime.datetime",
    "len",
    "pandas.core.datetools.bday",
    "pandas.tseries.index.bdate_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestDateRange.test_month_range_union_tz_dateutil": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.core.datetools.monthEnd",
    "pandas.tseries.index.date_range",
    "pandas.tslib._dateutil_gettz",
    "pandas.util.testing._skip_if_no_dateutil",
    "pandas.util.testing._skip_if_windows_python_3",
    "tz"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestDateRange.test_month_range_union_tz_pytz": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.core.datetools.monthEnd",
    "pandas.tseries.index.date_range",
    "pandas.util.testing._skip_if_no_pytz",
    "pytz.timezone",
    "tz"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestDateRange.test_naive_aware_conflicts": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "TypeError",
    "pandas.core.datetools.bday",
    "pandas.tseries.index.bdate_range",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestDateRange.test_outer_join": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "pandas.core.datetools.bmonthEnd",
    "pandas.tseries.index.DatetimeIndex",
    "pandas.tseries.index.date_range",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestDateRange.test_pickle_unpickle": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestDateRange.test_range_bug": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.compat.range",
    "pandas.core.datetools.DateOffset",
    "pandas.tseries.index.DatetimeIndex",
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestDateRange.test_range_closed": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestDateRange.test_range_closed_boundary": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestDateRange.test_range_closed_with_tz_aware_start_end": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "pandas.Timestamp",
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestDateRange.test_range_tz_dateutil": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.tseries.index.date_range",
    "pandas.tslib.maybe_get_tz",
    "pandas.util.testing._skip_if_no_dateutil",
    "tz"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestDateRange.test_range_tz_dst_straddle_pytz": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.all",
    "pandas.tseries.index.date_range",
    "pandas.util.testing._skip_if_no_pytz",
    "pytz.timezone"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestDateRange.test_range_tz_pytz": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.tseries.index.date_range",
    "pandas.util.testing._skip_if_no_pytz",
    "pytz.timezone"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestDateRange.test_repr": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestDateRange.test_shift": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "pandas.core.datetools.bday",
    "pandas.core.datetools.bmonthEnd",
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestDateRange.test_summary": {
  "data": {
   "lineno": 292
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestDateRange.test_summary_dateutil": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "pandas.tseries.index.bdate_range",
    "pandas.tseries.tests.test_daterange.dateutil",
    "pandas.util.testing._skip_if_no_dateutil"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestDateRange.test_summary_pytz": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "pandas.tseries.index.bdate_range",
    "pandas.tseries.tests.test_daterange.pytz",
    "pandas.util.testing._skip_if_no_pytz"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestDateRange.test_timezone_comparaison_assert": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "AssertionError",
    "pandas.Timestamp",
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestDateRange.test_timezone_comparaison_bug": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "AssertionError",
    "pandas.Timestamp",
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestDateRange.test_union": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "pandas.core.datetools.bmonthEnd",
    "pandas.core.index.Index",
    "pandas.tseries.index.DatetimeIndex",
    "pandas.tseries.index.date_range",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestDateRange.test_union_not_cacheable": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "pandas.core.datetools.Minute",
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestDateRange.test_years_only": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestGenRangeGeneration": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.tests.test_daterange.TestGenRangeGeneration.test_1": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "datetime.datetime",
    "dict",
    "pandas.tseries.tests.test_daterange.eq_gen_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestGenRangeGeneration.test_2": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "datetime.datetime",
    "dict",
    "pandas.tseries.tests.test_daterange.eq_gen_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestGenRangeGeneration.test_3": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "datetime.datetime",
    "dict",
    "pandas.tseries.tests.test_daterange.eq_gen_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestGenRangeGeneration.test_generate": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "list",
    "pandas.core.datetools.bday",
    "pandas.tseries.offsets.generate_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestGenRangeGeneration.test_generate_cday": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "list",
    "pandas.core.datetools.cday",
    "pandas.tseries.offsets.generate_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.TestGenRangeGeneration.test_precision_finer_than_offset": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "pandas.tseries.index.DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_daterange.assertRaisesRegexp": {
  "data": {
   "shadows": "pandas.util.testing.assertRaisesRegexp"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_daterange.bdate_range": {
  "data": {
   "shadows": "pandas.tseries.index.bdate_range"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_daterange.cdate_range": {
  "data": {
   "shadows": "pandas.tseries.index.cdate_range"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_daterange.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_daterange.date_range": {
  "data": {
   "shadows": "pandas.tseries.index.date_range"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_daterange.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_daterange.datetools": {
  "data": {
   "shadows": "pandas.core.datetools"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_daterange.dateutil": {
  "data": {
   "shadows": "dateutil"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_daterange.eq_gen_range": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "list",
    "numpy.array_equal",
    "pandas.tseries.offsets.generate_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_daterange.generate_range": {
  "data": {
   "shadows": "pandas.tseries.offsets.generate_range"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_daterange.maybe_get_tz": {
  "data": {
   "shadows": "pandas.tslib.maybe_get_tz"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_daterange.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_daterange.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_daterange.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_daterange.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_daterange.timezone": {
  "data": {
   "shadows": "pandas.tslib._dateutil_gettz"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_daterange.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_frequencies": {
  "data": {
   "symbols_in_volume": [
    "pandas.DatetimeIndex"
   ]
  },
  "type": "module"
 },
 "pandas.tseries.tests.test_frequencies.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_frequencies.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_frequencies.MONTHS": {
  "data": {
   "lineno": 668
  },
  "type": "constant"
 },
 "pandas.tseries.tests.test_frequencies.PeriodIndex": {
  "data": {
   "shadows": "pandas.tseries.period.PeriodIndex"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_frequencies.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_frequencies.TestFrequencyCode": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.tests.test_frequencies.TestFrequencyCode.test_freq_code": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "pandas.compat.iteritems",
    "pandas.tseries.frequencies._period_code_map",
    "pandas.tseries.frequencies.get_freq",
    "pandas.tseries.frequencies.get_freq_group"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.TestFrequencyCode.test_freq_group": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "pandas.tseries.frequencies.get_freq_group",
    "pandas.tseries.offsets.Week",
    "pandas.tseries.offsets.YearEnd"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.TestFrequencyCode.test_freq_to_reso": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "pandas.tseries.frequencies.Resolution"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.TestFrequencyCode.test_get_freq_code": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "pandas.tseries.frequencies.get_freq",
    "pandas.tseries.frequencies.get_freq_code",
    "pandas.tseries.offsets.Day",
    "pandas.tseries.offsets.MonthEnd",
    "pandas.tseries.offsets.Week"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.TestFrequencyCode.test_get_to_timestamp_base": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "pandas.tseries.frequencies.get_freq_code",
    "pandas.tseries.frequencies.get_to_timestamp_base",
    "tsb"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.TestFrequencyInference": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.tests.test_frequencies.TestFrequencyInference._check_generated_range": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "pandas.date_range",
    "pandas.tseries.frequencies.infer_freq",
    "pandas.tseries.tests.test_frequencies._dti"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.TestFrequencyInference._check_tick": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "pandas.Timestamp",
    "pandas.compat.range",
    "pandas.tseries.frequencies.infer_freq",
    "pandas.tseries.tests.test_frequencies._dti"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.TestFrequencyInference.test_annual": {
  "data": {
   "lineno": 457
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.TestFrequencyInference.test_annual_ambiguous": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "pandas.tseries.tests.test_frequencies._dti"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.TestFrequencyInference.test_business_annual": {
  "data": {
   "lineno": 461
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.TestFrequencyInference.test_business_daily": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "pandas.tseries.frequencies.infer_freq",
    "pandas.tseries.tests.test_frequencies._dti"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.TestFrequencyInference.test_business_monthly": {
  "data": {
   "lineno": 447
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.TestFrequencyInference.test_business_start_monthly": {
  "data": {
   "lineno": 450
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.TestFrequencyInference.test_day": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.TestFrequencyInference.test_day_corner": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "pandas.tseries.frequencies.infer_freq",
    "pandas.tseries.tests.test_frequencies._dti"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.TestFrequencyInference.test_fifth_week_of_month": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "ValueError",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.TestFrequencyInference.test_fifth_week_of_month_infer": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.tseries.frequencies.infer_freq"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.TestFrequencyInference.test_hour": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.TestFrequencyInference.test_infer_freq": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.period_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.TestFrequencyInference.test_infer_freq_businesshour": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "pandas.DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.TestFrequencyInference.test_infer_freq_tz": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.compat.iteritems"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.TestFrequencyInference.test_infer_freq_tz_transition": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.TestFrequencyInference.test_invalid_index_types": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pandas.compat.is_platform_windows",
    "pandas.tseries.frequencies.infer_freq",
    "pandas.util.testing.makeFloatIndex",
    "pandas.util.testing.makeIntIndex",
    "pandas.util.testing.makePeriodIndex",
    "pandas.util.testing.makeStringIndex",
    "pandas.util.testing.makeUnicodeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.TestFrequencyInference.test_legacy_offset_warnings": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas.compat.iteritems",
    "pandas.date_range",
    "pandas.tseries.frequencies._rule_aliases",
    "pandas.tseries.frequencies.get_offset",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.TestFrequencyInference.test_microsecond": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.TestFrequencyInference.test_millisecond": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.TestFrequencyInference.test_minute": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.TestFrequencyInference.test_monthly": {
  "data": {
   "lineno": 440
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.TestFrequencyInference.test_monthly_ambiguous": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "pandas.tseries.tests.test_frequencies._dti"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.TestFrequencyInference.test_nanosecond": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "numpy.timedelta64"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.TestFrequencyInference.test_non_datetimeindex": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "pandas.tseries.frequencies.infer_freq",
    "pandas.tseries.tools.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.TestFrequencyInference.test_non_datetimeindex2": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "pandas.tseries.frequencies.infer_freq",
    "pandas.tseries.tests.test_frequencies._dti"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.TestFrequencyInference.test_not_monotonic": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "pandas.tseries.tests.test_frequencies._dti"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.TestFrequencyInference.test_quarterly": {
  "data": {
   "lineno": 453
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.TestFrequencyInference.test_raise_if_period_index": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "TypeError",
    "pandas.tseries.frequencies.infer_freq",
    "pandas.tseries.period.PeriodIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.TestFrequencyInference.test_raise_if_too_few": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tseries.frequencies.infer_freq",
    "pandas.tseries.tests.test_frequencies._dti"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.TestFrequencyInference.test_second": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.TestFrequencyInference.test_series": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "FutureWarning",
    "TypeError",
    "ValueError",
    "numpy.arange",
    "pandas.Series",
    "pandas.date_range",
    "pandas.period_range",
    "pandas.tseries.frequencies.infer_freq",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.TestFrequencyInference.test_string_datetimelike_compat": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.tseries.frequencies.infer_freq"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.TestFrequencyInference.test_week_of_month": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.TestFrequencyInference.test_week_of_month_fake": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.tseries.frequencies.infer_freq"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.TestFrequencyInference.test_weekly": {
  "data": {
   "lineno": 411
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.Timedelta": {
  "data": {
   "shadows": "pandas.Timedelta"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_frequencies.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_frequencies._dti": {
  "data": {
   "lineno": 346
  },
  "type": "constant"
 },
 "pandas.tseries.tests.test_frequencies.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_frequencies.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_frequencies.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_frequencies.frequencies": {
  "data": {
   "shadows": "pandas.tseries.frequencies"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_frequencies.is_platform_windows": {
  "data": {
   "shadows": "pandas.compat.is_platform_windows"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_frequencies.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_frequencies.offsets": {
  "data": {
   "shadows": "pandas.tseries.offsets"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_frequencies.period_range": {
  "data": {
   "shadows": "pandas.period_range"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_frequencies.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_frequencies.test_anchored_shortcuts": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "pandas.tseries.frequencies.to_offset",
    "pandas.tseries.offsets.QuarterEnd"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.test_get_rule_month": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "pandas.tseries.frequencies._get_rule_month",
    "pandas.tseries.offsets.Day",
    "pandas.tseries.offsets.QuarterEnd",
    "pandas.tseries.offsets.Week",
    "pandas.tseries.offsets.YearEnd",
    "print"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.test_is_superperiod_subperiod": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "pandas.tseries.frequencies.is_subperiod",
    "pandas.tseries.frequencies.is_superperiod",
    "pandas.tseries.offsets.Hour",
    "pandas.tseries.offsets.Micro",
    "pandas.tseries.offsets.Milli",
    "pandas.tseries.offsets.Minute",
    "pandas.tseries.offsets.MonthEnd",
    "pandas.tseries.offsets.Nano",
    "pandas.tseries.offsets.Second",
    "pandas.tseries.offsets.YearEnd"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.test_period_str_to_code": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "_assert_depr",
    "pandas.tseries.frequencies._period_str_to_code"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.test_period_str_to_code._assert_depr": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "FutureWarning",
    "aliases",
    "isinstance",
    "list",
    "pandas.tseries.frequencies._period_str_to_code",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.test_to_offset_leading_zero": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "pandas.tseries.frequencies.to_offset"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.test_to_offset_multiple": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tseries.frequencies.to_offset",
    "pandas.tseries.offsets.Hour",
    "pandas.tseries.offsets.Micro",
    "pandas.tseries.offsets.Milli",
    "pandas.tseries.offsets.Minute",
    "pandas.tseries.offsets.Nano",
    "pandas.tseries.offsets.Second"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.test_to_offset_negative": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "pandas.tseries.frequencies.to_offset"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.test_to_offset_pd_timedelta": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Timedelta",
    "pandas.tseries.frequencies.to_offset",
    "pandas.tseries.offsets.Day",
    "pandas.tseries.offsets.Micro",
    "pandas.tseries.offsets.Minute",
    "pandas.tseries.offsets.Second",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_frequencies.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_frequencies.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_frequencies.to_datetime": {
  "data": {
   "shadows": "pandas.tseries.tools.to_datetime"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_holiday": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.tseries.tests.test_holiday.nose"
   ]
  },
  "type": "module"
 },
 "pandas.tseries.tests.test_holiday.AbstractHolidayCalendar": {
  "data": {
   "shadows": "pandas.tseries.holiday.AbstractHolidayCalendar"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_holiday.DateOffset": {
  "data": {
   "shadows": "pandas.tseries.holiday.DateOffset"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_holiday.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_holiday.EasterMonday": {
  "data": {
   "shadows": "pandas.tseries.holiday.EasterMonday"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_holiday.GoodFriday": {
  "data": {
   "shadows": "pandas.tseries.holiday.GoodFriday"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_holiday.Holiday": {
  "data": {
   "shadows": "pandas.tseries.holiday.Holiday"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_holiday.HolidayCalendarFactory": {
  "data": {
   "shadows": "pandas.tseries.holiday.HolidayCalendarFactory"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_holiday.MO": {
  "data": {
   "shadows": "pandas.tseries.holiday.MO"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_holiday.SA": {
  "data": {
   "shadows": "pandas.tseries.holiday.SA"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_holiday.TestCalendar": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.tests.test_holiday.TestCalendar.setUp": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "datetime.datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_holiday.TestCalendar.test_calendar": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "list",
    "pandas.tseries.holiday.Timestamp",
    "pandas.tseries.holiday.USFederalHolidayCalendar"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_holiday.TestCalendar.test_calendar_caching": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.tseries.holiday.Holiday",
    "pandas.tseries.tests.test_holiday.TestCalendar",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_holiday.TestCalendar.test_calendar_caching.TestCalendar": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "pandas.tseries.holiday.AbstractHolidayCalendar"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.tests.test_holiday.TestCalendar.test_calendar_caching.TestCalendar.__init__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "pandas.tseries.tests.test_holiday.TestCalendar",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_holiday.TestCalendar.test_calendar_observance_dates": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.tseries.holiday.get_calendar",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_holiday.TestCalendar.test_rule_from_name": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "pandas.tseries.holiday.USThanksgivingDay",
    "pandas.tseries.holiday.get_calendar"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_holiday.TestFederalHolidayCalendar": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.tests.test_holiday.TestFederalHolidayCalendar.test_memorial_day": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "MemorialDay",
    "datetime.datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_holiday.TestFederalHolidayCalendar.test_memorial_day.MemorialDay": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "pandas.tseries.holiday.AbstractHolidayCalendar",
    "pandas.tseries.holiday.USMemorialDay"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.tests.test_holiday.TestFederalHolidayCalendar.test_no_mlk_before_1984": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "MLKCalendar",
    "datetime.datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_holiday.TestFederalHolidayCalendar.test_no_mlk_before_1984.MLKCalendar": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "pandas.tseries.holiday.AbstractHolidayCalendar",
    "pandas.tseries.holiday.USMartinLutherKingJr"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.tests.test_holiday.TestHoliday": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.tests.test_holiday.TestHoliday.check_results": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "list",
    "pandas.tseries.holiday.Timestamp",
    "pytz.utc.localize"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_holiday.TestHoliday.setUp": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "datetime.datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_holiday.TestHoliday.test_argument_types": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "pandas.tseries.holiday.Timestamp",
    "pandas.tseries.holiday.USThanksgivingDay.dates"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_holiday.TestHoliday.test_easter": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "pandas.tseries.holiday.EasterMonday",
    "pandas.tseries.holiday.GoodFriday",
    "pandas.tseries.holiday.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_holiday.TestHoliday.test_factory": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "len",
    "pandas.tseries.holiday.AbstractHolidayCalendar",
    "pandas.tseries.holiday.HolidayCalendarFactory",
    "pandas.tseries.holiday.USMemorialDay",
    "pandas.tseries.holiday.USThanksgivingDay"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_holiday.TestHoliday.test_get_calendar": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "pandas.tseries.holiday.get_calendar",
    "pandas.tseries.tests.test_holiday.TestCalendar"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_holiday.TestHoliday.test_get_calendar.TestCalendar": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "pandas.tseries.holiday.AbstractHolidayCalendar"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.tests.test_holiday.TestHoliday.test_holidays_within_dates": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "datetime.datetime",
    "isinstance",
    "len",
    "pandas.compat.iteritems",
    "pandas.tseries.holiday.EasterMonday",
    "pandas.tseries.holiday.GoodFriday",
    "pandas.tseries.holiday.Timestamp",
    "pandas.tseries.holiday.USColumbusDay",
    "pandas.tseries.holiday.USLaborDay",
    "pandas.tseries.holiday.USMartinLutherKingJr",
    "pandas.tseries.holiday.USMemorialDay",
    "pandas.tseries.holiday.USPresidentsDay",
    "pandas.tseries.holiday.USThanksgivingDay",
    "pandas.tseries.holiday.get_calendar",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_holiday.TestHoliday.test_non_observed_holiday": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "pandas.tseries.holiday.Holiday",
    "pandas.tseries.holiday.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_holiday.TestHoliday.test_special_holidays": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.tseries.holiday.DateOffset",
    "pandas.tseries.holiday.Holiday",
    "pandas.tseries.holiday.MO"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_holiday.TestHoliday.test_usmemorialday": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.tseries.holiday.USMemorialDay"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_holiday.TestHoliday.test_usthanksgivingday": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.tseries.holiday.USThanksgivingDay"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_holiday.TestHolidayConflictingArguments": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.tests.test_holiday.TestHolidayConflictingArguments.test_both_offset_observance_raises": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.tseries.holiday.DateOffset",
    "pandas.tseries.holiday.Holiday",
    "pandas.tseries.holiday.SA",
    "pandas.tseries.holiday.next_monday"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_holiday.TestObservanceRules": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.tests.test_holiday.TestObservanceRules.setUp": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "datetime.datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_holiday.TestObservanceRules.test_after_nearest_workday": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "pandas.tseries.holiday.after_nearest_workday"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_holiday.TestObservanceRules.test_before_nearest_workday": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "pandas.tseries.holiday.before_nearest_workday"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_holiday.TestObservanceRules.test_nearest_workday": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "pandas.tseries.holiday.nearest_workday"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_holiday.TestObservanceRules.test_next_monday": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "pandas.tseries.holiday.next_monday"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_holiday.TestObservanceRules.test_next_monday_or_tuesday": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "pandas.tseries.holiday.next_monday_or_tuesday"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_holiday.TestObservanceRules.test_next_workday": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "pandas.tseries.holiday.next_workday"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_holiday.TestObservanceRules.test_previous_friday": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "pandas.tseries.holiday.previous_friday"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_holiday.TestObservanceRules.test_previous_workday": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "pandas.tseries.holiday.previous_workday"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_holiday.TestObservanceRules.test_sunday_to_monday": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "pandas.tseries.holiday.sunday_to_monday"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_holiday.TestObservanceRules.test_weekend_to_monday": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "pandas.tseries.holiday.weekend_to_monday"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_holiday.Timestamp": {
  "data": {
   "shadows": "pandas.tseries.holiday.Timestamp"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_holiday.USColumbusDay": {
  "data": {
   "shadows": "pandas.tseries.holiday.USColumbusDay"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_holiday.USFederalHolidayCalendar": {
  "data": {
   "shadows": "pandas.tseries.holiday.USFederalHolidayCalendar"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_holiday.USLaborDay": {
  "data": {
   "shadows": "pandas.tseries.holiday.USLaborDay"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_holiday.USMartinLutherKingJr": {
  "data": {
   "shadows": "pandas.tseries.holiday.USMartinLutherKingJr"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_holiday.USMemorialDay": {
  "data": {
   "shadows": "pandas.tseries.holiday.USMemorialDay"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_holiday.USPresidentsDay": {
  "data": {
   "shadows": "pandas.tseries.holiday.USPresidentsDay"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_holiday.USThanksgivingDay": {
  "data": {
   "shadows": "pandas.tseries.holiday.USThanksgivingDay"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_holiday.after_nearest_workday": {
  "data": {
   "shadows": "pandas.tseries.holiday.after_nearest_workday"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_holiday.before_nearest_workday": {
  "data": {
   "shadows": "pandas.tseries.holiday.before_nearest_workday"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_holiday.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_holiday.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_holiday.get_calendar": {
  "data": {
   "shadows": "pandas.tseries.holiday.get_calendar"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_holiday.nearest_workday": {
  "data": {
   "shadows": "pandas.tseries.holiday.nearest_workday"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_holiday.next_monday": {
  "data": {
   "shadows": "pandas.tseries.holiday.next_monday"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_holiday.next_monday_or_tuesday": {
  "data": {
   "shadows": "pandas.tseries.holiday.next_monday_or_tuesday"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_holiday.next_workday": {
  "data": {
   "shadows": "pandas.tseries.holiday.next_workday"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_holiday.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_holiday.previous_friday": {
  "data": {
   "shadows": "pandas.tseries.holiday.previous_friday"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_holiday.previous_workday": {
  "data": {
   "shadows": "pandas.tseries.holiday.previous_workday"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_holiday.sunday_to_monday": {
  "data": {
   "shadows": "pandas.tseries.holiday.sunday_to_monday"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_holiday.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_holiday.utc": {
  "data": {
   "shadows": "pytz.utc"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_holiday.weekend_to_monday": {
  "data": {
   "shadows": "pandas.tseries.holiday.weekend_to_monday"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_resample": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.tseries.offsets.BDay",
    "pandas.tseries.tests.test_resample.downsample_methods",
    "pandas.tseries.tests.test_resample.nose",
    "pandas.tseries.tests.test_resample.series_methods",
    "pandas.tseries.tests.test_resample.upsample_methods"
   ]
  },
  "type": "module"
 },
 "pandas.tseries.tests.test_resample.ABCDataFrame": {
  "data": {
   "shadows": "pandas.core.common.ABCDataFrame"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_resample.ABCSeries": {
  "data": {
   "shadows": "pandas.core.common.ABCSeries"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_resample.BDay": {
  "data": {
   "shadows": "pandas.tseries.offsets.BDay"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_resample.Base": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.tests.test_resample.Base.create_index": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "factory"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.Base.test_asfreq_downsample": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.tseries.frequencies.to_offset",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.Base.test_asfreq_upsample": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.Base.test_resample_interpolate": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.DAYS": {
  "data": {
   "shadows": "pandas.tseries.frequencies.DAYS"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_resample.DataError": {
  "data": {
   "shadows": "pandas.core.groupby.DataError"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_resample.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_resample.DatetimeIndex": {
  "data": {
   "shadows": "pandas.tseries.resample.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_resample.DatetimeIndexResampler": {
  "data": {
   "shadows": "pandas.tseries.resample.DatetimeIndexResampler"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_resample.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_resample.MONTHS": {
  "data": {
   "shadows": "pandas.tseries.frequencies.MONTHS"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_resample.Minute": {
  "data": {
   "shadows": "pandas.tseries.offsets.Minute"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_resample.OrderedDict": {
  "data": {
   "shadows": "pandas.compat.OrderedDict"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_resample.Panel": {
  "data": {
   "shadows": "pandas.Panel"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_resample.Period": {
  "data": {
   "shadows": "pandas.tseries.period.Period"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_resample.PeriodIndex": {
  "data": {
   "shadows": "pandas.tseries.period.PeriodIndex"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_resample.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_resample.SpecificationError": {
  "data": {
   "shadows": "pandas.core.base.SpecificationError"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_resample.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "pandas.tseries.index.date_range",
    "pandas.tseries.tests.test_resample.Base",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.create_series": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "datetime.datetime",
    "len",
    "numpy.arange",
    "pandas.Series",
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.setUp": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "datetime.datetime",
    "len",
    "numpy.random.rand",
    "pandas.Series",
    "pandas.tseries.resample.DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_anchored_lowercase_buglet": {
  "data": {
   "lineno": 1588,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_asfreq_non_unique": {
  "data": {
   "lineno": 1230,
   "symbols_in_volume": [
    "Exception",
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_corner_cases": {
  "data": {
   "lineno": 1567,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.tseries.index.date_range",
    "pandas.tseries.period.Period",
    "pandas.tseries.tests.test_resample._simple_pts",
    "pandas.tseries.tests.test_resample._simple_ts"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_custom_grouper": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "datetime.datetime",
    "len",
    "numpy.array",
    "numpy.random.rand",
    "numpy.sum",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.notnull",
    "pandas.tseries.offsets.Minute",
    "pandas.tseries.resample.DatetimeIndex",
    "pandas.tseries.resample.TimeGrouper",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_downsample_non_unique": {
  "data": {
   "lineno": 1218,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.tseries.index.date_range",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_how_lambda_functions": {
  "data": {
   "lineno": 1628,
   "symbols_in_volume": [
    "pandas.tseries.tests.test_resample._simple_ts",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_monthly_resample_error": {
  "data": {
   "lineno": 1470,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_nanosecond_resample_error": {
  "data": {
   "lineno": 1477,
   "symbols_in_volume": [
    "len",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.date_range",
    "pandas.to_datetime",
    "pandas.tseries.offsets.Nano",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_ohlc_5min": {
  "data": {
   "lineno": 1198,
   "symbols_in_volume": [
    "_ohlc",
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_ohlc_5min._ohlc": {
  "data": {
   "lineno": 1199,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.repeat",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_period_with_agg": {
  "data": {
   "lineno": 1381,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.Series",
    "pandas.period_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_anchored_intraday": {
  "data": {
   "lineno": 1500,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "pandas.tseries.index.date_range",
    "pandas.tseries.tests.test_resample._simple_ts",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_anchored_monthstart": {
  "data": {
   "lineno": 1535,
   "symbols_in_volume": [
    "pandas.tseries.tests.test_resample._simple_ts"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_anchored_multiday": {
  "data": {
   "lineno": 1543,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_anchored_ticks": {
  "data": {
   "lineno": 1290,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.tseries.index.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_axis1": {
  "data": {
   "lineno": 1238,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.tseries.index.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_base": {
  "data": {
   "lineno": 1326,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_base_with_timedeltaindex": {
  "data": {
   "lineno": 1335,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.tseries.tdi.timedelta_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_basic": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.Series",
    "pandas.tseries.index.date_range",
    "pandas.tseries.offsets.Minute",
    "pandas.tseries.resample.TimeGrouper",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_basic_from_daily": {
  "data": {
   "lineno": 866,
   "symbols_in_volume": [
    "datetime.datetime",
    "len",
    "numpy.random.rand",
    "pandas.Series",
    "pandas.tseries.resample.DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_categorical_data_with_timedeltaindex": {
  "data": {
   "lineno": 1350,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.to_timedelta",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_consistency": {
  "data": {
   "lineno": 1663,
   "symbols_in_volume": [
    "numpy.NaN",
    "numpy.arange",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_daily_anchored": {
  "data": {
   "lineno": 1362,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.tseries.index.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_dtype_preservation": {
  "data": {
   "lineno": 1443,
   "symbols_in_volume": [
    "numpy.int32",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_dup_index": {
  "data": {
   "lineno": 1151,
   "symbols_in_volume": [
    "int",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.tseries.period.Period",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_empty": {
  "data": {
   "lineno": 1394,
   "symbols_in_volume": [
    "TypeError",
    "getattr",
    "len",
    "numpy.float",
    "numpy.int",
    "numpy.object",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.core.groupby.DataError",
    "pandas.tseries.tests.test_resample._simple_ts",
    "pandas.tseries.tests.test_resample.downsample_methods",
    "pandas.tseries.tests.test_resample.upsample_methods",
    "pandas.util.testing.all_timeseries_index_generator"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_extra_index_point": {
  "data": {
   "lineno": 1055,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.tseries.resample.DatetimeIndex",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_frame_basic": {
  "data": {
   "lineno": 950,
   "symbols_in_volume": [
    "pandas.tseries.resample.TimeGrouper",
    "pandas.util.testing.assert_series_equal",
    "pandas.util.testing.makeTimeDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_group_info": {
  "data": {
   "lineno": 1742,
   "symbols_in_volume": [
    "len",
    "numpy.bincount",
    "numpy.lexsort",
    "numpy.r_",
    "numpy.random.choice",
    "numpy.random.randint",
    "numpy.searchsorted",
    "pandas.Series",
    "pandas.compat.product",
    "pandas.tseries.index.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_how": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "BaseException",
    "getattr",
    "numpy.ones_like",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.tseries.index.date_range",
    "pandas.tseries.tests.test_resample.downsample_methods",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_how._ohlc": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.repeat",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_how_callables": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "fn_class",
    "functools.partial",
    "len",
    "numpy.arange",
    "numpy.int64",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.util.testing.assert_frame_equal",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_how_callables.fn": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_how_callables.fn_class": {
  "data": {
   "lineno": 758
  },
  "type": "class"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_how_callables.fn_class.__call__": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_how_method": {
  "data": {
   "lineno": 1040,
   "symbols_in_volume": [
    "numpy.NaN",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_loffset": {
  "data": {
   "lineno": 970,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta",
    "len",
    "numpy.random.rand",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.tseries.index.date_range",
    "pandas.tseries.offsets.Minute",
    "pandas.tseries.resample.DatetimeIndex",
    "pandas.tseries.tests.test_resample.bday",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_loffset_count": {
  "data": {
   "lineno": 1003,
   "symbols_in_volume": [
    "datetime.timedelta",
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.tseries.index.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_median_bug_1688": {
  "data": {
   "lineno": 1613,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_not_monotonic": {
  "data": {
   "lineno": 1603,
   "symbols_in_volume": [
    "len",
    "numpy.random.permutation",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_nunique": {
  "data": {
   "lineno": 1718,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Grouper",
    "pandas.TimeGrouper",
    "pandas.Timestamp",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_ohlc": {
  "data": {
   "lineno": 1074,
   "symbols_in_volume": [
    "len",
    "pandas.tseries.offsets.Minute",
    "pandas.tseries.resample.TimeGrouper"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_ohlc_dataframe": {
  "data": {
   "lineno": 1121,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.Timestamp",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_ohlc_result": {
  "data": {
   "lineno": 1096,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.compat.range",
    "pandas.date_range",
    "pandas.tseries.index.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_panel": {
  "data": {
   "lineno": 1247,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "p_apply",
    "pandas.Panel",
    "pandas.tseries.index.date_range",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_panel.p_apply": {
  "data": {
   "lineno": 1258,
   "symbols_in_volume": [
    "f",
    "pandas.Panel"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_panel_numpy": {
  "data": {
   "lineno": 1272,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Panel",
    "pandas.tseries.index.date_range",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_reresample": {
  "data": {
   "lineno": 1165,
   "symbols_in_volume": [
    "datetime.datetime",
    "len",
    "numpy.random.rand",
    "pandas.Series",
    "pandas.tseries.offsets.DateOffset",
    "pandas.tseries.offsets.Hour",
    "pandas.tseries.resample.DatetimeIndex",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_rounding": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.compat.StringIO",
    "pandas.read_csv",
    "pandas.tseries.index.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_segfault": {
  "data": {
   "lineno": 1427,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.DataFrame.from_records",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_single_group": {
  "data": {
   "lineno": 1306,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "numpy.std",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.tseries.index.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_single_period_timedelta": {
  "data": {
   "lineno": 789,
   "symbols_in_volume": [
    "list",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_size": {
  "data": {
   "lineno": 1767,
   "symbols_in_volume": [
    "len",
    "numpy.bincount",
    "numpy.random.choice",
    "numpy.random.randn",
    "numpy.searchsorted",
    "pandas.Series",
    "pandas.tseries.index.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_timedelta_idempotency": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.compat.range",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_timegrouper": {
  "data": {
   "lineno": 1686,
   "symbols_in_volume": [
    "datetime.datetime",
    "dict",
    "len",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.Grouper",
    "pandas.NaT",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_timestamp_to_period": {
  "data": {
   "lineno": 1175,
   "symbols_in_volume": [
    "pandas.tseries.period.period_range",
    "pandas.tseries.tests.test_resample._simple_ts",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_to_period_monthly_buglet": {
  "data": {
   "lineno": 1371,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.tseries.index.date_range",
    "pandas.tseries.period.period_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_unequal_times": {
  "data": {
   "lineno": 1652,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.DataFrame",
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_upsample": {
  "data": {
   "lineno": 1025,
   "symbols_in_volume": [
    "datetime.datetime",
    "len",
    "numpy.random.rand",
    "pandas.Series",
    "pandas.tseries.resample.DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_upsampling_picked_but_not_correct": {
  "data": {
   "lineno": 923,
   "symbols_in_volume": [
    "datetime.datetime.datetime",
    "numpy.arange",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.tseries.index.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resample_with_timedeltas": {
  "data": {
   "lineno": 773,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.timedelta_range",
    "pandas.to_timedelta",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_resmaple_dst_anchor": {
  "data": {
   "lineno": 1782,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.tseries.index.date_range",
    "pandas.tseries.resample.DatetimeIndex",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_upsample_apply_functions": {
  "data": {
   "lineno": 1594,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_upsample_with_limit": {
  "data": {
   "lineno": 1066,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.tseries.index.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestDatetimeIndex.test_weekly_resample_buglet": {
  "data": {
   "lineno": 1461,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.tseries.index.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex": {
  "data": {
   "lineno": 1850,
   "symbols_in_volume": [
    "pandas.tseries.period.period_range",
    "pandas.tseries.tests.test_resample.Base",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex._check_annual_upsample_cases": {
  "data": {
   "lineno": 1942,
   "symbols_in_volume": [
    "getattr",
    "pandas.tseries.frequencies.MONTHS",
    "pandas.tseries.tests.test_resample._simple_pts",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex.create_series": {
  "data": {
   "lineno": 1854,
   "symbols_in_volume": [
    "datetime.datetime",
    "len",
    "numpy.arange",
    "pandas.Series",
    "pandas.tseries.period.period_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex.test_all_values_single_bin": {
  "data": {
   "lineno": 2387,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.tseries.period.period_range",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex.test_annual_upsample": {
  "data": {
   "lineno": 1991,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.tseries.period.period_range",
    "pandas.tseries.tests.test_resample._simple_pts",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex.test_annual_upsample_B_e_b": {
  "data": {
   "lineno": 1927
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex.test_annual_upsample_B_e_f": {
  "data": {
   "lineno": 1921
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex.test_annual_upsample_B_s_b": {
  "data": {
   "lineno": 1924
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex.test_annual_upsample_B_s_f": {
  "data": {
   "lineno": 1918
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex.test_annual_upsample_D_e_b": {
  "data": {
   "lineno": 1915
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex.test_annual_upsample_D_e_f": {
  "data": {
   "lineno": 1909
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex.test_annual_upsample_D_s_b": {
  "data": {
   "lineno": 1912
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex.test_annual_upsample_D_s_f": {
  "data": {
   "lineno": 1906
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex.test_annual_upsample_M_e_b": {
  "data": {
   "lineno": 1939
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex.test_annual_upsample_M_e_f": {
  "data": {
   "lineno": 1933
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex.test_annual_upsample_M_s_b": {
  "data": {
   "lineno": 1936
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex.test_annual_upsample_M_s_f": {
  "data": {
   "lineno": 1930
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex.test_asfreq_downsample": {
  "data": {
   "lineno": 1860,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.tseries.frequencies.to_offset",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex.test_asfreq_upsample": {
  "data": {
   "lineno": 1883,
   "symbols_in_volume": [
    "pandas.tseries.index.date_range",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex.test_basic_downsample": {
  "data": {
   "lineno": 1951,
   "symbols_in_volume": [
    "pandas.tseries.period.period_range",
    "pandas.tseries.tests.test_resample._simple_pts",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex.test_basic_upsample": {
  "data": {
   "lineno": 1971,
   "symbols_in_volume": [
    "pandas.tseries.tests.test_resample._simple_pts",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex.test_cant_fill_missing_dups": {
  "data": {
   "lineno": 2200,
   "symbols_in_volume": [
    "Exception",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.tseries.period.PeriodIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex.test_closed_left_corner": {
  "data": {
   "lineno": 2304,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.tseries.index.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex.test_default_left_closed_label": {
  "data": {
   "lineno": 2375,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.zip",
    "pandas.tseries.resample.DatetimeIndex",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex.test_default_right_closed_label": {
  "data": {
   "lineno": 2363,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.zip",
    "pandas.tseries.resample.DatetimeIndex",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex.test_evenly_divisible_with_no_extra_bins": {
  "data": {
   "lineno": 2395,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.concat",
    "pandas.tseries.index.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex.test_fill_method_and_how_upsample": {
  "data": {
   "lineno": 2134,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Series",
    "pandas.tseries.index.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex.test_monthly_upsample": {
  "data": {
   "lineno": 2020,
   "symbols_in_volume": [
    "pandas.compat.product",
    "pandas.tseries.tests.test_resample._simple_pts",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex.test_not_subperiod": {
  "data": {
   "lineno": 1963,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tseries.tests.test_resample._simple_pts"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex.test_quarterly_resampling": {
  "data": {
   "lineno": 2323,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Series",
    "pandas.tseries.period.period_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex.test_quarterly_upsample": {
  "data": {
   "lineno": 2008,
   "symbols_in_volume": [
    "pandas.compat.product",
    "pandas.tseries.frequencies.MONTHS",
    "pandas.tseries.tests.test_resample._simple_pts",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex.test_resample_5minute": {
  "data": {
   "lineno": 2205,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.tseries.period.period_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex.test_resample_basic": {
  "data": {
   "lineno": 2031,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.tseries.index.date_range",
    "pandas.tseries.period.Period",
    "pandas.tseries.period.PeriodIndex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex.test_resample_bms_2752": {
  "data": {
   "lineno": 2342,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.bdate_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex.test_resample_count": {
  "data": {
   "lineno": 2058,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.period_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex.test_resample_empty": {
  "data": {
   "lineno": 2045,
   "symbols_in_volume": [
    "getattr",
    "pandas.Series",
    "pandas.tseries.period.PeriodIndex",
    "pandas.tseries.tests.test_resample.resample_methods",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex.test_resample_fill_missing": {
  "data": {
   "lineno": 2190,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.Series",
    "pandas.tseries.period.PeriodIndex",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex.test_resample_irregular_sparse": {
  "data": {
   "lineno": 2226,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "pandas.Series",
    "pandas.tseries.index.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex.test_resample_same_freq": {
  "data": {
   "lineno": 2070,
   "symbols_in_volume": [
    "getattr",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.period_range",
    "pandas.tseries.tests.test_resample.resample_methods",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex.test_resample_to_quarterly": {
  "data": {
   "lineno": 2161,
   "symbols_in_volume": [
    "pandas.tseries.frequencies.MONTHS",
    "pandas.tseries.period.period_range",
    "pandas.tseries.tests.test_resample._simple_pts",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex.test_resample_to_timestamps": {
  "data": {
   "lineno": 2154,
   "symbols_in_volume": [
    "pandas.tseries.tests.test_resample._simple_pts",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex.test_resample_tz_localized": {
  "data": {
   "lineno": 2248,
   "symbols_in_volume": [
    "len",
    "numpy.cumsum",
    "numpy.mean",
    "numpy.random.randn",
    "numpy.sum",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.tseries.index.date_range",
    "pandas.tseries.period.period_range",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex.test_resample_weekly_all_na": {
  "data": {
   "lineno": 2236,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.tseries.index.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex.test_resample_weekly_bug_1726": {
  "data": {
   "lineno": 2331,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "pandas.compat.range",
    "pandas.tseries.resample.DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex.test_upsample_daily_business_daily": {
  "data": {
   "lineno": 2213,
   "symbols_in_volume": [
    "pandas.tseries.period.period_range",
    "pandas.tseries.tests.test_resample._simple_pts",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex.test_upsample_with_limit": {
  "data": {
   "lineno": 1982,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.tseries.period.period_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex.test_weekly_upsample": {
  "data": {
   "lineno": 2142,
   "symbols_in_volume": [
    "pandas.compat.product",
    "pandas.tseries.frequencies.DAYS",
    "pandas.tseries.tests.test_resample._simple_pts",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex.test_with_local_timezone_dateutil": {
  "data": {
   "lineno": 2107,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.Series",
    "pandas.date_range",
    "pandas.period_range",
    "pandas.tseries.tests.test_resample.dateutil",
    "pandas.util.testing._skip_if_no_dateutil",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestPeriodIndex.test_with_local_timezone_pytz": {
  "data": {
   "lineno": 2081,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.Series",
    "pandas.date_range",
    "pandas.period_range",
    "pandas.tseries.tests.test_resample.pytz",
    "pandas.util.testing._skip_if_no_pytz",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestResampleAPI": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.tests.test_resample.TestResampleAPI.setUp": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "datetime.datetime",
    "len",
    "numpy.arange",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.tseries.resample.DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestResampleAPI.test_agg": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "list",
    "numpy.mean",
    "numpy.random.rand",
    "numpy.random.seed",
    "numpy.std",
    "pandas.DataFrame",
    "pandas.Grouper",
    "pandas.MultiIndex.from_product",
    "pandas.MultiIndex.from_tuples",
    "pandas.concat",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestResampleAPI.test_agg_consistency": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestResampleAPI.test_agg_misc": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "list",
    "numpy.mean",
    "numpy.random.rand",
    "numpy.random.seed",
    "numpy.std",
    "numpy.sum",
    "pandas.DataFrame",
    "pandas.Grouper",
    "pandas.MultiIndex.from_tuples",
    "pandas.compat.OrderedDict",
    "pandas.concat",
    "pandas.core.base.SpecificationError",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestResampleAPI.test_agg_misc.f": {
  "data": {
   "lineno": 522
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestResampleAPI.test_agg_nested_dicts": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "list",
    "numpy.random.rand",
    "numpy.random.seed",
    "pandas.DataFrame",
    "pandas.Grouper",
    "pandas.MultiIndex.from_tuples",
    "pandas.concat",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestResampleAPI.test_agg_nested_dicts.f": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestResampleAPI.test_api": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestResampleAPI.test_api_changes_v018": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "FutureWarning",
    "KeyError",
    "ValueError",
    "getattr",
    "isinstance",
    "numpy.array",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.core.common.ABCDataFrame",
    "pandas.core.common.ABCSeries",
    "pandas.tseries.resample.DatetimeIndexResampler",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestResampleAPI.test_api_changes_v018.f": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestResampleAPI.test_api_compat_before_use": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "getattr",
    "len",
    "numpy.arange",
    "pandas.Series",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestResampleAPI.test_apply_without_aggregation": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "pandas.Grouper",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestResampleAPI.test_attribute_access": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "AttributeError",
    "FutureWarning",
    "ValueError",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestResampleAPI.test_attribute_access.f": {
  "data": {
   "lineno": 266
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestResampleAPI.test_combined_up_downsampling_of_irregular": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "FutureWarning",
    "len",
    "numpy.arange",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_produces_warning",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestResampleAPI.test_downsample_but_actually_upsampling": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestResampleAPI.test_fillna": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.arange",
    "pandas.Series",
    "pandas.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestResampleAPI.test_getitem": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestResampleAPI.test_groupby_resample_api": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays",
    "pandas.date_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestResampleAPI.test_plot_api": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.tseries.index.date_range",
    "pandas.util.testing._skip_if_no_mpl",
    "pandas.util.testing.assert_is_valid_plot_return_object",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestResampleAPI.test_select_bad_cols": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "KeyError",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestResampleAPI.test_str": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestResampleAPI.test_transform": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "pandas.Grouper",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestResampleAPI.tests_skip_nuisance": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestResamplerGrouper": {
  "data": {
   "lineno": 2454,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.tests.test_resample.TestResamplerGrouper.setUp": {
  "data": {
   "lineno": 2456,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestResamplerGrouper.test_apply": {
  "data": {
   "lineno": 2562,
   "symbols_in_volume": [
    "f",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestResamplerGrouper.test_apply.f": {
  "data": {
   "lineno": 2575
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestResamplerGrouper.test_back_compat_v180": {
  "data": {
   "lineno": 2463,
   "symbols_in_volume": [
    "FutureWarning",
    "getattr",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestResamplerGrouper.test_consistency_with_window": {
  "data": {
   "lineno": 2580,
   "symbols_in_volume": [
    "pandas.Int64Index",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestResamplerGrouper.test_deferred_with_groupby": {
  "data": {
   "lineno": 2480,
   "symbols_in_volume": [
    "f",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestResamplerGrouper.test_getitem": {
  "data": {
   "lineno": 2508,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestResamplerGrouper.test_methods": {
  "data": {
   "lineno": 2522,
   "symbols_in_volume": [
    "f",
    "getattr",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestTimeGrouper": {
  "data": {
   "lineno": 2594,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.tests.test_resample.TestTimeGrouper.setUp": {
  "data": {
   "lineno": 2595,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.Series",
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestTimeGrouper.test_aaa_group_order": {
  "data": {
   "lineno": 2692,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.tseries.resample.TimeGrouper",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestTimeGrouper.test_aggregate_normal": {
  "data": {
   "lineno": 2714,
   "symbols_in_volume": [
    "datetime.datetime",
    "func",
    "getattr",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.tseries.index.date_range",
    "pandas.tseries.resample.TimeGrouper",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestTimeGrouper.test_aggregate_with_nat": {
  "data": {
   "lineno": 2771,
   "symbols_in_volume": [
    "datetime.datetime",
    "func",
    "getattr",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.Series",
    "pandas.tseries.index.date_range",
    "pandas.tseries.resample.TimeGrouper",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestTimeGrouper.test_apply": {
  "data": {
   "lineno": 2599,
   "symbols_in_volume": [
    "f",
    "pandas.tseries.resample.TimeGrouper",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestTimeGrouper.test_apply_iteration": {
  "data": {
   "lineno": 2635,
   "symbols_in_volume": [
    "f",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.tseries.resample.TimeGrouper"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestTimeGrouper.test_count": {
  "data": {
   "lineno": 2613,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.tseries.resample.TimeGrouper",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestTimeGrouper.test_fails_on_no_datetime_index": {
  "data": {
   "lineno": 2670,
   "symbols_in_volume": [
    "TypeError",
    "func",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.compat.zip",
    "pandas.tseries.resample.TimeGrouper",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.makeCustomIndex",
    "pandas.util.testing.makeFloatIndex",
    "pandas.util.testing.makeIntIndex",
    "pandas.util.testing.makePeriodIndex",
    "pandas.util.testing.makeUnicodeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestTimeGrouper.test_numpy_reduction": {
  "data": {
   "lineno": 2627,
   "symbols_in_volume": [
    "numpy.prod",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestTimeGrouper.test_panel_aggregation": {
  "data": {
   "lineno": 2652,
   "symbols_in_volume": [
    "f",
    "len",
    "numpy.random.randn",
    "pandas.Panel",
    "pandas.date_range",
    "pandas.tseries.resample.TimeGrouper",
    "pandas.util.testing.assert_panel_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestTimeGrouper.test_panel_aggregation.f": {
  "data": {
   "lineno": 2663,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Panel"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestTimedeltaIndex": {
  "data": {
   "lineno": 2431,
   "symbols_in_volume": [
    "pandas.tseries.tdi.timedelta_range",
    "pandas.tseries.tests.test_resample.Base",
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.tests.test_resample.TestTimedeltaIndex.create_series": {
  "data": {
   "lineno": 2435,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.Series",
    "pandas.tseries.tdi.timedelta_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TestTimedeltaIndex.test_asfreq_bug": {
  "data": {
   "lineno": 2441,
   "symbols_in_volume": [
    "datetime.datetime.timedelta",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.tseries.tdi.timedelta_range",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.TimeGrouper": {
  "data": {
   "shadows": "pandas.tseries.resample.TimeGrouper"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_resample.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_resample._simple_pts": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.tseries.period.period_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample._simple_ts": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_resample.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_resample.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_resample.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_resample.bday": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pandas.tseries.tests.test_resample.date_range": {
  "data": {
   "shadows": "pandas.tseries.index.date_range"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_resample.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_resample.dateutil": {
  "data": {
   "shadows": "dateutil"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_resample.downsample_methods": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pandas.tseries.tests.test_resample.dt": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_resample.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_resample.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_resample.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_resample.notnull": {
  "data": {
   "shadows": "pandas.notnull"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_resample.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_resample.offsets": {
  "data": {
   "shadows": "pandas.tseries.offsets"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_resample.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_resample.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_resample.period_range": {
  "data": {
   "shadows": "pandas.tseries.period.period_range"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_resample.product": {
  "data": {
   "shadows": "pandas.compat.product"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_resample.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_resample.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_resample.resample_methods": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pandas.tseries.tests.test_resample.series_methods": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pandas.tseries.tests.test_resample.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_resample.timedelta_range": {
  "data": {
   "shadows": "pandas.tseries.tdi.timedelta_range"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_resample.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_resample.to_offset": {
  "data": {
   "shadows": "pandas.tseries.frequencies.to_offset"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_resample.upsample_methods": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pandas.tseries.tests.test_resample.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timedeltas": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.tseries.tests.test_timedeltas.nose",
    "pandas.tslib.iNaT"
   ]
  },
  "type": "module"
 },
 "pandas.tseries.tests.test_timedeltas.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timedeltas.Day": {
  "data": {
   "shadows": "pandas.tseries.offsets.Day"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timedeltas.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timedeltas.Int64Index": {
  "data": {
   "shadows": "pandas.Int64Index"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timedeltas.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timedeltas.Second": {
  "data": {
   "shadows": "pandas.tseries.offsets.Second"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timedeltas.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timedeltas.TestSlicing": {
  "data": {
   "lineno": 1738,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.tests.test_timedeltas.TestSlicing.test_partial_slice": {
  "data": {
   "lineno": 1739,
   "symbols_in_volume": [
    "KeyError",
    "len",
    "numpy.arange",
    "pandas.Series",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestSlicing.test_partial_slice_high_reso": {
  "data": {
   "lineno": 1760,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.Series",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestSlicing.test_slice_with_negative_step": {
  "data": {
   "lineno": 1777,
   "symbols_in_volume": [
    "assert_slices_equivalent",
    "numpy.arange",
    "pandas.IndexSlice",
    "pandas.Series",
    "pandas.Timedelta",
    "pandas.timedelta_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestSlicing.test_slice_with_negative_step.assert_slices_equivalent": {
  "data": {
   "lineno": 1781,
   "symbols_in_volume": [
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestSlicing.test_slice_with_zero_step_raises": {
  "data": {
   "lineno": 1802,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "pandas.Series",
    "pandas.timedelta_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestSlicing.test_tdi_ops_attributes": {
  "data": {
   "lineno": 1811,
   "symbols_in_volume": [
    "abs",
    "pandas.TimedeltaIndex",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltaIndex": {
  "data": {
   "lineno": 1116,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltaIndex.test_append_join_nondatetimeindex": {
  "data": {
   "lineno": 1140,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.Timedelta",
    "pandas.timedelta_range",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltaIndex.test_append_numpy_bug_1681": {
  "data": {
   "lineno": 1150,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.timedelta_range",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltaIndex.test_argmin_argmax": {
  "data": {
   "lineno": 1504,
   "symbols_in_volume": [
    "pandas.TimedeltaIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltaIndex.test_astype": {
  "data": {
   "lineno": 1160,
   "symbols_in_volume": [
    "pandas.timedelta_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltaIndex.test_comparisons_coverage": {
  "data": {
   "lineno": 1349,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "numpy.array",
    "pandas.timedelta_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltaIndex.test_comparisons_nat": {
  "data": {
   "lineno": 1363,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.timedelta64",
    "pandas.NaT",
    "pandas.TimedeltaIndex",
    "pandas._np_version_under1p8"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltaIndex.test_components": {
  "data": {
   "lineno": 1226,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Series",
    "pandas.timedelta_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltaIndex.test_constructor": {
  "data": {
   "lineno": 1238,
   "symbols_in_volume": [
    "datetime.timedelta",
    "numpy.timedelta64",
    "pandas.TimedeltaIndex",
    "pandas.compat.range",
    "pandas.offsets.Second",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltaIndex.test_constructor_coverage": {
  "data": {
   "lineno": 1261,
   "symbols_in_volume": [
    "ValueError",
    "datetime.timedelta",
    "numpy.array",
    "pandas.TimedeltaIndex",
    "pandas.compat.range",
    "pandas.timedelta_range",
    "pandas.to_timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltaIndex.test_constructor_name": {
  "data": {
   "lineno": 1295,
   "symbols_in_volume": [
    "pandas.TimedeltaIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltaIndex.test_delete": {
  "data": {
   "lineno": 1574,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "pandas.TimedeltaIndex",
    "pandas.compat.iteritems",
    "pandas.timedelta_range",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltaIndex.test_delete_slice": {
  "data": {
   "lineno": 1602,
   "symbols_in_volume": [
    "pandas.TimedeltaIndex",
    "pandas.compat.iteritems",
    "pandas.timedelta_range",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltaIndex.test_does_not_convert_mixed_integer": {
  "data": {
   "lineno": 1689,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.random.randn",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.makeCustomDataframe",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltaIndex.test_factorize": {
  "data": {
   "lineno": 1715,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.TimedeltaIndex",
    "pandas.timedelta_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltaIndex.test_fields": {
  "data": {
   "lineno": 1166,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.array",
    "numpy.nan",
    "pandas.Series",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltaIndex.test_freq_conversion": {
  "data": {
   "lineno": 1303,
   "symbols_in_volume": [
    "datetime.timedelta",
    "numpy.nan",
    "numpy.timedelta64",
    "pandas.Index",
    "pandas.Series",
    "pandas.TimedeltaIndex",
    "pandas.date_range",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltaIndex.test_get_duplicates": {
  "data": {
   "lineno": 1496,
   "symbols_in_volume": [
    "pandas.TimedeltaIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltaIndex.test_hash_error": {
  "data": {
   "lineno": 1134,
   "symbols_in_volume": [
    "TypeError",
    "hash",
    "pandas.timedelta_range",
    "pandas.util.testing.assertRaisesRegexp",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltaIndex.test_insert": {
  "data": {
   "lineno": 1528,
   "symbols_in_volume": [
    "datetime.timedelta",
    "pandas.Index",
    "pandas.Timedelta",
    "pandas.TimedeltaIndex",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltaIndex.test_intersection_bug_1708": {
  "data": {
   "lineno": 1482,
   "symbols_in_volume": [
    "len",
    "pandas.offsets.Hour",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltaIndex.test_isin": {
  "data": {
   "lineno": 1677,
   "symbols_in_volume": [
    "list",
    "pandas.util.testing.assert_almost_equal",
    "pandas.util.testing.makeTimedeltaIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltaIndex.test_join_self": {
  "data": {
   "lineno": 1707,
   "symbols_in_volume": [
    "pandas.timedelta_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltaIndex.test_map": {
  "data": {
   "lineno": 1408,
   "symbols_in_volume": [
    "f",
    "pandas.timedelta_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltaIndex.test_misc_coverage": {
  "data": {
   "lineno": 1417,
   "symbols_in_volume": [
    "list",
    "pandas.Index",
    "pandas.Timedelta",
    "pandas.TimedeltaIndex",
    "pandas.timedelta_range",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltaIndex.test_pass_TimedeltaIndex_to_index": {
  "data": {
   "lineno": 1119,
   "symbols_in_volume": [
    "object",
    "pandas.Index",
    "pandas.timedelta_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltaIndex.test_pickle": {
  "data": {
   "lineno": 1128,
   "symbols_in_volume": [
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltaIndex.test_slice_keeps_name": {
  "data": {
   "lineno": 1701,
   "symbols_in_volume": [
    "pandas.timedelta_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltaIndex.test_sort_values": {
  "data": {
   "lineno": 1510,
   "symbols_in_volume": [
    "pandas.TimedeltaIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltaIndex.test_take": {
  "data": {
   "lineno": 1630,
   "symbols_in_volume": [
    "pandas.TimedeltaIndex",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltaIndex.test_take_fill_value": {
  "data": {
   "lineno": 1645,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "numpy.array",
    "pandas.TimedeltaIndex",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltaIndex.test_total_seconds": {
  "data": {
   "lineno": 1192,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.testing.assert_allclose",
    "pandas.Series",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltaIndex.test_total_seconds_scalar": {
  "data": {
   "lineno": 1217,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.nan",
    "numpy.testing.assert_allclose",
    "pandas.Timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltaIndex.test_union": {
  "data": {
   "lineno": 1429,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Int64Index",
    "pandas.TimedeltaIndex",
    "pandas.timedelta_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltaIndex.test_union_bug_1730": {
  "data": {
   "lineno": 1453,
   "symbols_in_volume": [
    "list",
    "pandas.TimedeltaIndex",
    "pandas.timedelta_range",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltaIndex.test_union_bug_1745": {
  "data": {
   "lineno": 1462,
   "symbols_in_volume": [
    "list",
    "pandas.TimedeltaIndex",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltaIndex.test_union_bug_4564": {
  "data": {
   "lineno": 1473,
   "symbols_in_volume": [
    "list",
    "pandas.TimedeltaIndex",
    "pandas.offsets.Minute",
    "pandas.timedelta_range",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltaIndex.test_union_coverage": {
  "data": {
   "lineno": 1442,
   "symbols_in_volume": [
    "pandas.TimedeltaIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltas": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltas.setUp": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltas.test_apply_to_timedelta": {
  "data": {
   "lineno": 1046,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.NaT",
    "pandas.Series",
    "pandas.to_timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltas.test_compare_timedelta_ndarray": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltas.test_compare_timedelta_series": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "datetime.timedelta",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltas.test_construction": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ValueError",
    "datetime.timedelta",
    "npdtype",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.timedelta64",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.isnull",
    "pandas.offsets.Hour",
    "pandas.offsets.Second",
    "pandas.to_timedelta",
    "pandas.tseries.tests.test_timedeltas.iNaT",
    "pandas.util.testing.assertRaisesRegexp",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltas.test_conversion": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "datetime.timedelta",
    "isinstance",
    "numpy.timedelta64",
    "pandas.Timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltas.test_fields": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "AttributeError",
    "abs",
    "check",
    "pandas.Timedelta",
    "pandas.to_timedelta",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltas.test_fields.check": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "pandas.compat.long"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltas.test_freq_conversion": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "float",
    "numpy.timedelta64",
    "pandas.Timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltas.test_full_format_converters": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "ValueError",
    "conv",
    "numpy.timedelta64",
    "pandas.tseries.timedeltas._coerce_scalar_to_timedelta_type"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltas.test_full_format_converters.conv": {
  "data": {
   "lineno": 618
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltas.test_identity": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "datetime.timedelta",
    "isinstance",
    "pandas.Timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltas.test_implementation_limits": {
  "data": {
   "lineno": 1086,
   "symbols_in_volume": [
    "OverflowError",
    "numpy.iinfo",
    "numpy.int64",
    "pandas.Timedelta",
    "pandas.Timedelta.max",
    "pandas.Timedelta.min",
    "pandas.tslib.NaTType",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltas.test_nat_converters": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "pandas.to_timedelta",
    "pandas.tslib.iNaT"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltas.test_numeric_conversions": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "numpy.timedelta64",
    "pandas.tseries.timedeltas._coerce_scalar_to_timedelta_type"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltas.test_ops": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "TypeError",
    "abs",
    "numpy.nan",
    "pandas.NaT",
    "pandas.Timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltas.test_ops_ndarray": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "TypeError",
    "distutils.version.LooseVersion",
    "numpy.__version__",
    "numpy.array",
    "pandas.Timedelta",
    "pandas.to_datetime",
    "pandas.to_timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltas.test_ops_notimplemented": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "NotImplemented",
    "Other",
    "pandas.Timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltas.test_ops_notimplemented.Other": {
  "data": {
   "lineno": 430
  },
  "type": "class"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltas.test_ops_offsets": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "pandas.Timedelta",
    "pandas.offsets.Hour"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltas.test_ops_series": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.Timedelta",
    "pandas.to_timedelta",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltas.test_overflow": {
  "data": {
   "lineno": 861,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.allclose",
    "pandas.DatetimeIndex",
    "pandas.Series",
    "pandas.Timedelta",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltas.test_pickle": {
  "data": {
   "lineno": 1063,
   "symbols_in_volume": [
    "pandas.Timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltas.test_repr": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "pandas.Timedelta",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltas.test_round": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Timedelta",
    "pandas.TimedeltaIndex",
    "pandas.timedelta_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltas.test_short_format_converters": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "ValueError",
    "conv",
    "numpy.timedelta64",
    "pandas.tseries.timedeltas._coerce_scalar_to_timedelta_type"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltas.test_short_format_converters.conv": {
  "data": {
   "lineno": 572
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltas.test_timedelta_conversions": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "datetime.timedelta",
    "numpy.timedelta64",
    "pandas.tseries.timedeltas._coerce_scalar_to_timedelta_type"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltas.test_timedelta_hash_equality": {
  "data": {
   "lineno": 1069,
   "symbols_in_volume": [
    "all",
    "datetime.timedelta",
    "hash",
    "pandas.Timedelta",
    "pandas.timedelta_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltas.test_timedelta_ops": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "TypeError",
    "datetime.timedelta",
    "getattr",
    "numpy.timedelta64",
    "pandas.Series",
    "pandas.Timedelta",
    "pandas.Timestamp",
    "pandas.compat.range",
    "pandas.to_timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltas.test_timedelta_ops_scalar": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": [
    "datetime.timedelta",
    "numpy.timedelta64",
    "pandas.offsets.Day",
    "pandas.offsets.Second",
    "pandas.to_datetime",
    "pandas.to_timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltas.test_timedelta_ops_with_missing_values": {
  "data": {
   "lineno": 957,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.Series",
    "pandas.to_timedelta",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltas.test_timedelta_range": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "TypeError",
    "numpy.arange",
    "numpy.random.normal",
    "pandas.DataFrame",
    "pandas.Timedelta",
    "pandas.timedelta_range",
    "pandas.to_timedelta",
    "pandas.tseries.offsets.Day",
    "pandas.tseries.offsets.Second",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltas.test_to_timedelta": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "conv",
    "datetime.timedelta",
    "numpy.arange",
    "numpy.array",
    "numpy.timedelta64",
    "pandas.Index",
    "pandas.Series",
    "pandas.TimedeltaIndex",
    "pandas.compat.range",
    "pandas.isnull",
    "pandas.to_timedelta",
    "pandas.tslib.iNaT",
    "pandas.util.testing.assert_index_equal",
    "pandas.util.testing.assert_numpy_array_equal",
    "pandas.util.testing.assert_series_equal",
    "testit"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltas.test_to_timedelta.conv": {
  "data": {
   "lineno": 652
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltas.test_to_timedelta.testit": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.timedelta64",
    "pandas.Timedelta",
    "pandas.TimedeltaIndex",
    "pandas.to_timedelta",
    "pandas.util.testing.assert_index_equal",
    "transform"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltas.test_to_timedelta_invalid": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": [
    "ValueError",
    "datetime.time",
    "pandas.NaT",
    "pandas.TimedeltaIndex",
    "pandas.to_timedelta",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltas.test_to_timedelta_on_missing_values": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.timedelta64",
    "pandas.NaT",
    "pandas.Series",
    "pandas.to_timedelta",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltas.test_to_timedelta_on_nanoseconds": {
  "data": {
   "lineno": 932,
   "symbols_in_volume": [
    "TypeError",
    "pandas.Timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.TestTimedeltas.test_to_timedelta_via_apply": {
  "data": {
   "lineno": 797,
   "symbols_in_volume": [
    "numpy.timedelta64",
    "pandas.Series",
    "pandas.to_timedelta",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timedeltas.Timedelta": {
  "data": {
   "shadows": "pandas.Timedelta"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timedeltas.TimedeltaIndex": {
  "data": {
   "shadows": "pandas.TimedeltaIndex"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timedeltas.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timedeltas._np_version_under1p8": {
  "data": {
   "shadows": "pandas._np_version_under1p8"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timedeltas.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timedeltas.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timedeltas.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timedeltas.assert_index_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_index_equal"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timedeltas.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timedeltas.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timedeltas.ct": {
  "data": {
   "shadows": "pandas.tseries.timedeltas._coerce_scalar_to_timedelta_type"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timedeltas.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timedeltas.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timedeltas.iNaT": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pandas.tseries.tests.test_timedeltas.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timedeltas.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timedeltas.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timedeltas.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timedeltas.randn": {
  "data": {
   "shadows": "numpy.random.randn"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timedeltas.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timedeltas.time": {
  "data": {
   "shadows": "datetime.time"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timedeltas.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timedeltas.timedelta_range": {
  "data": {
   "shadows": "pandas.timedelta_range"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timedeltas.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timedeltas.to_timedelta": {
  "data": {
   "shadows": "pandas.to_timedelta"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timedeltas.tslib": {
  "data": {
   "shadows": "pandas.tslib"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timeseries_legacy": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.random.randn",
    "pandas.tseries.tests.test_timeseries_legacy.nose"
   ]
  },
  "type": "module"
 },
 "pandas.tseries.tests.test_timeseries_legacy.BDay": {
  "data": {
   "shadows": "pandas.core.datetools.BDay"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timeseries_legacy.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timeseries_legacy.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timeseries_legacy.Int64Index": {
  "data": {
   "shadows": "pandas.Int64Index"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timeseries_legacy.LegacySupport": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.tests.test_timeseries_legacy.LegacySupport.setUpClass": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "classmethod",
    "open",
    "pandas.compat.PY3",
    "pandas.compat.cPickle.load",
    "pandas.tseries.tests.test_timeseries_legacy.nose",
    "pandas.tseries.tests.test_timeseries_legacy.os"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timeseries_legacy.LegacySupport.test_arithmetic_interaction": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "len",
    "numpy.random.rand",
    "pandas.DatetimeIndex",
    "pandas.Series",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timeseries_legacy.LegacySupport.test_index_conversion": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timeseries_legacy.LegacySupport.test_join_interaction": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "_check_join"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timeseries_legacy.LegacySupport.test_join_interaction._check_join": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.util.testing.assertIsInstance",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timeseries_legacy.LegacySupport.test_join_nonunique": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timeseries_legacy.LegacySupport.test_legacy_time_rules": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "pandas.core.datetools.get_legacy_offset_name",
    "pandas.core.datetools.get_offset",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timeseries_legacy.LegacySupport.test_ms_vs_MS": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "pandas.core.datetools.Milli",
    "pandas.core.datetools.MonthBegin",
    "pandas.core.datetools.get_offset"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timeseries_legacy.LegacySupport.test_object_convert_fail": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "ValueError",
    "numpy.NaT",
    "pandas.DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timeseries_legacy.LegacySupport.test_pass_offset_warn": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.compat.StringIO",
    "pandas.tseries.tests.test_timeseries_legacy.sys"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timeseries_legacy.LegacySupport.test_rule_aliases": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "pandas.core.datetools.Micro",
    "pandas.core.datetools.to_offset"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timeseries_legacy.LegacySupport.test_setops": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timeseries_legacy.LegacySupport.test_setops_conversion_fail": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "numpy.concatenate",
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timeseries_legacy.LegacySupport.test_tolist": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "pandas.Timestamp",
    "pandas.date_range",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timeseries_legacy.LegacySupport.test_unpickle_daterange": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "datetime.datetime",
    "object",
    "pandas.read_pickle",
    "pandas.tseries.offsets.BDay",
    "pandas.tseries.tests.test_timeseries_legacy.os",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timeseries_legacy.LegacySupport.test_unpickle_legacy_frame": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.DatetimeIndex",
    "pandas.Int64Index",
    "pandas.core.datetools.BDay",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timeseries_legacy.LegacySupport.test_unpickle_legacy_len0_daterange": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "len",
    "pandas.DatetimeIndex",
    "pandas.read_pickle",
    "pandas.tseries.offsets.BDay",
    "pandas.tseries.tests.test_timeseries_legacy.os",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timeseries_legacy.LegacySupport.test_unpickle_legacy_series": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "len",
    "pandas.DatetimeIndex",
    "pandas.core.datetools.BDay",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timeseries_legacy.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timeseries_legacy.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timeseries_legacy.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timeseries_legacy.assert_almost_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timeseries_legacy.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timeseries_legacy.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timeseries_legacy.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timeseries_legacy.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timeseries_legacy.datetools": {
  "data": {
   "shadows": "pandas.core.datetools"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timeseries_legacy.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timeseries_legacy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timeseries_legacy.offsets": {
  "data": {
   "shadows": "pandas.tseries.offsets"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timeseries_legacy.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timeseries_legacy.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timeseries_legacy.pickle": {
  "data": {
   "shadows": "pandas.compat.cPickle"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timeseries_legacy.rand": {
  "data": {
   "shadows": "numpy.random.rand"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timeseries_legacy.randn": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "pandas.tseries.tests.test_timeseries_legacy.read_pickle": {
  "data": {
   "shadows": "pandas.read_pickle"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timeseries_legacy.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timeseries_legacy.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timeseries_legacy.to_datetime": {
  "data": {
   "shadows": "pandas.to_datetime"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timezones": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pandas.tseries.tests.test_timezones.FixedOffset",
    "pandas.tseries.tests.test_timezones.nose"
   ]
  },
  "type": "module"
 },
 "pandas.tseries.tests.test_timezones.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timezones.DatetimeIndex": {
  "data": {
   "shadows": "pandas.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timezones.DatetimeTZDtype": {
  "data": {
   "shadows": "pandas.types.api.DatetimeTZDtype"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timezones.FixedOffset": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "datetime.tzinfo"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.tests.test_timezones.FixedOffset.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.FixedOffset.dst": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.FixedOffset.tzname": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.FixedOffset.utcoffset": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timezones.NaT": {
  "data": {
   "shadows": "pandas.NaT"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timezones.NonExistentTimeError": {
  "data": {
   "shadows": "pytz.NonExistentTimeError"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timezones.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneCacheKey": {
  "data": {
   "lineno": 956,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneCacheKey.test_cache_keys_are_distinct_for_pytz_vs_dateutil": {
  "data": {
   "lineno": 957,
   "symbols_in_volume": [
    "pandas.tseries.tests.test_timezones.pytz",
    "pandas.tslib._p_tz_cache_key",
    "pandas.tslib.maybe_get_tz"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportDateutil": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": [
    "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportDateutil.cmptz": {
  "data": {
   "lineno": 860
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportDateutil.localize": {
  "data": {
   "lineno": 865
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportDateutil.setUp": {
  "data": {
   "lineno": 844,
   "symbols_in_volume": [
    "pandas.util.testing._skip_if_no_dateutil"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportDateutil.test_tslib_tz_convert_dst": {
  "data": {
   "lineno": 896,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.repeat",
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportDateutil.test_tslib_tz_convert_trans_pos_plus_1__bug": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.array",
    "numpy.repeat",
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportDateutil.test_utc_with_system_utc": {
  "data": {
   "lineno": 868,
   "symbols_in_volume": [
    "pandas.Timestamp",
    "pandas.tseries.tests.test_timezones.dateutil",
    "pandas.tslib.maybe_get_tz",
    "pandas.util.testing._skip_if_windows"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportDateutil.tz": {
  "data": {
   "lineno": 847,
   "symbols_in_volume": [
    "pandas.tslib.maybe_get_tz"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportDateutil.tzstr": {
  "data": {
   "lineno": 855
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.cmptz": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.localize": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.setUp": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "pandas.util.testing._skip_if_no_pytz"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_ambiguous_flags": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "Exception",
    "datetime.datetime",
    "numpy.array",
    "numpy.hstack",
    "pandas.DatetimeIndex",
    "pandas.Timestamp",
    "pandas.core.datetools.Hour",
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_ambiguous_flags.f": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "pandas.tseries.index.date_range",
    "pandas.tseries.tests.test_timezones.pytz"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_ambiguous_infer": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "FutureWarning",
    "datetime.datetime",
    "pandas.DatetimeIndex",
    "pandas.core.datetools.Hour",
    "pandas.tseries.index.date_range",
    "pandas.tseries.tests.test_timezones.pytz",
    "pandas.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_ambiguous_nat": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "numpy.NaN",
    "pandas.DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_astimezone": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "pandas.Timestamp",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_convert_datetime_list": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "list",
    "pandas.DatetimeIndex",
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_convert_tz_aware_datetime_datetime": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.Timestamp",
    "pandas.to_datetime",
    "pandas.tseries.tests.test_timezones.pytz"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_create_with_fixed_tz": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "datetime.datetime",
    "len",
    "pandas.tseries.index.date_range",
    "pandas.tseries.tests.test_timezones.FixedOffset"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_create_with_fixedoffset_noname": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.Index",
    "pandas.tseries.index.date_range",
    "pandas.tseries.tests.test_timezones.fixed_off_no_name"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_create_with_tz": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "pandas.Timestamp",
    "pandas.tseries.index.date_range",
    "pandas.tseries.tests.test_timezones.pytz"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_date_range_localize": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.Timestamp",
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_date_range_span_dst_transition": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_datetimeindex_tz": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DatetimeIndex",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_datetimeindex_tz_nat": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": [
    "pandas.NaT",
    "pandas.Timestamp",
    "pandas.isnull",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_dateutil_tzoffset_support": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.tzinfo",
    "dateutil.tz.tzoffset",
    "pandas.Series",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_field_access_localize": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DatetimeIndex",
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_fixed_offset": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.to_datetime",
    "pandas.tseries.tests.test_timezones.fixed_off"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_fixedtz_topydatetime": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "datetime.datetime",
    "numpy.array",
    "pandas.to_datetime",
    "pandas.tseries.tests.test_timezones.fixed_off"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_frame_from_records_utc": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.DataFrame.from_records",
    "pandas.tseries.tests.test_timezones.pytz"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_frame_no_datetime64_dtype": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.tseries.index.date_range",
    "pandas.types.api.DatetimeTZDtype",
    "pandas.util.testing.assert_series_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_frame_reset_index": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_getitem_pydatetime_tz": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_hongkong_tz_convert": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_index_astype_asobject_tzinfos": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "enumerate",
    "object",
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_index_drop_dont_lose_tz": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": [
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_index_with_timezone_repr": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "pandas.tseries.index.date_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_infer_tz": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "Exception",
    "datetime.datetime",
    "pandas.tseries.tests.test_timezones.pytz",
    "pandas.tseries.tools._infer_tzinfo"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_localize_utc_conversion": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "pandas.tseries.index.date_range",
    "pandas.tseries.offsets.Hour",
    "pytz.NonExistentTimeError"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_localize_utc_conversion_explicit": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "numpy.array_equal",
    "pandas.tseries.index.date_range",
    "pandas.tseries.offsets.Hour",
    "pytz.NonExistentTimeError"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_localized_at_time_between_time": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "datetime.time",
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.tseries.index.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_pass_dates_localize_to_utc": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "pandas.DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_shift_localized": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_static_tzinfo": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_string_index_alias_tz_aware": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_take_dont_lose_meta": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "pandas.compat.lrange",
    "pandas.tseries.index.date_range",
    "pandas.util.testing._skip_if_no_pytz"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_timedelta_push_over_dst_boundary": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "datetime.timedelta",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_timedelta_push_over_dst_boundary_explicit": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "datetime.timedelta",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_timestamp_constructed_by_date_and_tz": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "datetime.date",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_timestamp_constructed_by_date_and_tz_explicit": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "datetime.date",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_timestamp_to_datetime_tzoffset": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "datetime.tzinfo",
    "dateutil.tz.tzoffset",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_timestamp_tz_convert": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "pandas.DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_timestamp_tz_localize": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_timestamp_tz_localize_explicit": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_to_datetime_tzlocal": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "dateutil.parser.parse",
    "dateutil.tz.tzlocal",
    "numpy.array",
    "object",
    "pandas.to_datetime",
    "pandas.tseries.index.date_range",
    "pandas.tseries.tests.test_timezones.pytz"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_to_datetime_utc": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "dateutil.parser.parse",
    "numpy.array",
    "object",
    "pandas.to_datetime",
    "pandas.tseries.tests.test_timezones.pytz"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_tz_aware_asfreq": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_tz_convert_unsorted": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "pandas.tseries.index.date_range",
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_tz_localize": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "pandas.tseries.index.bdate_range",
    "pandas.tseries.tests.test_timezones.pytz"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_tz_localize_dti": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.tseries.tests.test_timezones.pytz"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_tz_localize_empty_series": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.tseries.tests.test_timezones.pytz"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_tz_string": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_tzaware_datetime_to_index": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_utc_box_timestamp_and_localize": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "pandas.tseries.index.date_range",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_utc_to_local_no_modify": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "numpy.array_equal",
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_utc_to_local_no_modify_explicit": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_with_tz": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "Exception",
    "datetime.datetime",
    "pandas.core.datetools.Hour",
    "pandas.tseries.index.bdate_range",
    "pandas.tseries.tests.test_timezones.pytz"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.test_with_tz_ambiguous_times": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.core.datetools.Hour",
    "pandas.core.datetools.Minute",
    "pandas.tseries.index.date_range",
    "pandas.tseries.tests.test_timezones.pytz"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.tz": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "pandas.tseries.tests.test_timezones.pytz"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZoneSupportPytz.tzstr": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZones": {
  "data": {
   "lineno": 972,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZones.setUp": {
  "data": {
   "lineno": 976,
   "symbols_in_volume": [
    "pandas.util.testing._skip_if_no_pytz"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZones.test_align_aware": {
  "data": {
   "lineno": 1136,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZones.test_append_aware": {
  "data": {
   "lineno": 1145,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZones.test_append_aware_naive": {
  "data": {
   "lineno": 1172,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZones.test_arith_utc_convert": {
  "data": {
   "lineno": 1212,
   "symbols_in_volume": [
    "numpy.random.permutation",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.tseries.index.date_range",
    "pandas.tseries.tests.test_timezones.pytz",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZones.test_datetimeindex_tz": {
  "data": {
   "lineno": 1256,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZones.test_equal_join_ensure_utc": {
  "data": {
   "lineno": 1192,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.tseries.index.date_range",
    "pandas.tseries.tests.test_timezones.pytz"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZones.test_index_equals_with_tz": {
  "data": {
   "lineno": 979,
   "symbols_in_volume": [
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZones.test_intersection": {
  "data": {
   "lineno": 1232,
   "symbols_in_volume": [
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZones.test_join_aware": {
  "data": {
   "lineno": 1103,
   "symbols_in_volume": [
    "Exception",
    "len",
    "numpy.random.randn",
    "numpy.zeros",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.lrange",
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZones.test_join_utc_convert": {
  "data": {
   "lineno": 1088,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.tseries.index.date_range",
    "pandas.util.testing.assertIsInstance"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZones.test_nat": {
  "data": {
   "lineno": 1310,
   "symbols_in_volume": [
    "numpy.timedelta64",
    "pandas.DatetimeIndex",
    "pandas.NaT",
    "pandas.tseries.offsets.Hour"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZones.test_normalize_tz": {
  "data": {
   "lineno": 1262,
   "symbols_in_volume": [
    "dateutil.tz.tzlocal",
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZones.test_series_frame_tz_convert": {
  "data": {
   "lineno": 1037,
   "symbols_in_volume": [
    "TypeError",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.tseries.index.date_range",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZones.test_series_frame_tz_localize": {
  "data": {
   "lineno": 1012,
   "symbols_in_volume": [
    "TypeError",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.tseries.index.date_range",
    "pandas.util.testing.assertRaisesRegexp",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZones.test_timestamp_equality_different_timezones": {
  "data": {
   "lineno": 1242,
   "symbols_in_volume": [
    "pandas.compat.zip",
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZones.test_tz_convert_roundtrip": {
  "data": {
   "lineno": 1061,
   "symbols_in_volume": [
    "pandas.tseries.index.date_range",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZones.test_tz_localize_naive": {
  "data": {
   "lineno": 985,
   "symbols_in_volume": [
    "pandas.tseries.index.date_range"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZones.test_tz_localize_roundtrip": {
  "data": {
   "lineno": 993,
   "symbols_in_volume": [
    "TypeError",
    "pandas.tseries.index.date_range",
    "pandas.util.testing.assertRaises",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.TestTimeZones.test_tzaware_offset": {
  "data": {
   "lineno": 1292,
   "symbols_in_volume": [
    "datetime.timedelta",
    "numpy.timedelta64",
    "pandas.DatetimeIndex",
    "pandas.tseries.index.date_range",
    "pandas.tseries.offsets.Hour"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_timezones.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timezones.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timezones.bdate_range": {
  "data": {
   "shadows": "pandas.tseries.index.bdate_range"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timezones.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timezones.date_range": {
  "data": {
   "shadows": "pandas.tseries.index.date_range"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timezones.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timezones.datetools": {
  "data": {
   "shadows": "pandas.core.datetools"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timezones.dateutil": {
  "data": {
   "shadows": "dateutil"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timezones.fixed_off": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "pandas.tseries.tests.test_timezones.fixed_off_no_name": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "pandas.tseries.tests.test_timezones.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timezones.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timezones.maybe_get_tz": {
  "data": {
   "shadows": "pandas.tslib.maybe_get_tz"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timezones.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timezones.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timezones.offsets": {
  "data": {
   "shadows": "pandas.tseries.offsets"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timezones.parse": {
  "data": {
   "shadows": "dateutil.parser.parse"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timezones.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timezones.time": {
  "data": {
   "shadows": "datetime.time"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timezones.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timezones.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timezones.to_datetime": {
  "data": {
   "shadows": "pandas.to_datetime"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timezones.tools": {
  "data": {
   "shadows": "pandas.tseries.tools"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timezones.tslib": {
  "data": {
   "shadows": "pandas.tslib"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timezones.tzinfo": {
  "data": {
   "shadows": "datetime.tzinfo"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timezones.tzlocal": {
  "data": {
   "shadows": "dateutil.tz.tzlocal"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timezones.tzoffset": {
  "data": {
   "shadows": "dateutil.tz.tzoffset"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_timezones.zip": {
  "data": {
   "shadows": "pandas.compat.zip"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_tslib": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.tseries.tests.test_tslib.nose"
   ]
  },
  "type": "module"
 },
 "pandas.tseries.tests.test_tslib.D_RESO": {
  "data": {
   "shadows": "pandas.tseries.frequencies.D_RESO"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_tslib.DatetimeIndex": {
  "data": {
   "shadows": "pandas.tseries.index.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_tslib.H_RESO": {
  "data": {
   "shadows": "pandas.tseries.frequencies.H_RESO"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_tslib.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_tslib.MS_RESO": {
  "data": {
   "shadows": "pandas.tseries.frequencies.MS_RESO"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_tslib.Period": {
  "data": {
   "shadows": "pandas.core.api.Period"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_tslib.S_RESO": {
  "data": {
   "shadows": "pandas.tseries.frequencies.S_RESO"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_tslib.Series": {
  "data": {
   "shadows": "pandas.core.api.Series"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_tslib.T_RESO": {
  "data": {
   "shadows": "pandas.tseries.frequencies.T_RESO"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_tslib.TestArrayToDatetime": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.tests.test_tslib.TestArrayToDatetime.test_coerce_of_invalid_datetimes": {
  "data": {
   "lineno": 905,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "pandas.compat.numpy.np_array_datetime64_compat",
    "pandas.tslib.array_to_datetime",
    "pandas.tslib.iNaT"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestArrayToDatetime.test_coercing_dates_outside_of_datetime64_ns_bounds": {
  "data": {
   "lineno": 871,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.datetime64",
    "object",
    "pandas.compat.numpy.np_array_datetime64_compat",
    "pandas.tseries.tests.test_tslib.datetime",
    "pandas.tslib.array_to_datetime",
    "pandas.tslib.iNaT"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestArrayToDatetime.test_number_looking_strings_not_into_datetime": {
  "data": {
   "lineno": 859,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "pandas.tslib.array_to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestArrayToDatetime.test_parsing_timezone_offsets": {
  "data": {
   "lineno": 926,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "pandas.tslib.array_to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestArrayToDatetime.test_parsing_valid_dates": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "pandas.compat.numpy.np_array_datetime64_compat",
    "pandas.tslib.array_to_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestDatetimeParsingWrappers": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.tests.test_tslib.TestDatetimeParsingWrappers.test_does_not_convert_mixed_integer": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "pandas.tslib._does_string_look_like_datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestDatetimeParsingWrappers.test_parsers": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "numpy.array",
    "object",
    "pandas.compat.iteritems",
    "pandas.core.api.Timestamp",
    "pandas.core.api.to_datetime",
    "pandas.tseries.index.DatetimeIndex",
    "pandas.tseries.index.date_range",
    "pandas.tseries.tests.test_tslib.datetime",
    "pandas.tseries.tests.test_tslib.dateutil",
    "pandas.tseries.tools.parse_time_string",
    "pandas.tslib.NaT"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestDatetimeParsingWrappers.test_parsers_dayfirst_yearfirst": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "dateutil.parser.parse",
    "distutils.version.LooseVersion",
    "pandas.compat.iteritems",
    "pandas.core.api.Timestamp",
    "pandas.core.api.to_datetime",
    "pandas.tseries.index.DatetimeIndex",
    "pandas.tseries.tests.test_tslib.datetime",
    "pandas.tseries.tests.test_tslib.dateutil",
    "pandas.tseries.tools.parse_time_string",
    "pandas.util.testing._skip_if_no_dateutil"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestDatetimeParsingWrappers.test_parsers_iso8601": {
  "data": {
   "lineno": 795,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "pandas.compat.iteritems",
    "pandas.tseries.tests.test_tslib.datetime",
    "pandas.tslib._test_parse_iso8601",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestDatetimeParsingWrappers.test_parsers_monthfreq": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "pandas.compat.iteritems",
    "pandas.tseries.tests.test_tslib.datetime",
    "pandas.tseries.tools._to_datetime",
    "pandas.tseries.tools.parse_time_string"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestDatetimeParsingWrappers.test_parsers_quarter_invalid": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tseries.tools.parse_time_string"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestDatetimeParsingWrappers.test_parsers_quarterly_with_freq": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "pandas.compat.iteritems",
    "pandas.tseries.tests.test_tslib.datetime",
    "pandas.tseries.tools.parse_time_string",
    "pandas.tslib.DateParseError",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestDatetimeParsingWrappers.test_parsers_time": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "pandas.core.api.Series",
    "pandas.tseries.tests.test_tslib.datetime",
    "pandas.tseries.tools.to_time",
    "pandas.util.testing._skip_if_has_locale"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestDatetimeParsingWrappers.test_parsers_timestring": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "dateutil.parser.parse",
    "pandas.compat.iteritems",
    "pandas.core.api.Timestamp",
    "pandas.core.api.to_datetime",
    "pandas.tseries.index.DatetimeIndex",
    "pandas.tseries.tests.test_tslib.datetime",
    "pandas.tseries.tools.parse_time_string",
    "pandas.util.testing._skip_if_no_dateutil"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestDatetimeParsingWrappers.test_parsers_timezone_minute_offsets_roundtrip": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "pandas.core.api.to_datetime",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestTimestamp": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.tests.test_tslib.TestTimestamp.test_asm8": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "numpy.datetime64",
    "numpy.random.seed",
    "pandas.core.api.Timestamp",
    "pandas.core.api.Timestamp.max.value",
    "pandas.core.api.Timestamp.min.value"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestTimestamp.test_barely_oob_dts": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "ValueError",
    "numpy.datetime64",
    "numpy.timedelta64",
    "pandas.core.api.Timestamp",
    "pandas.core.api.Timestamp.max",
    "pandas.core.api.Timestamp.min"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestTimestamp.test_bounds_with_different_units": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "ValueError",
    "numpy.datetime64",
    "pandas.core.api.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestTimestamp.test_constructor": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "pandas.core.api.Timestamp",
    "pandas.tseries.tests.test_tslib.calendar",
    "pandas.tseries.tests.test_tslib.datetime",
    "pandas.tseries.tests.test_tslib.dateutil",
    "pandas.tseries.tests.test_tslib.pytz",
    "pandas.tslib.pydt_to_i8",
    "pandas.util.testing._skip_if_no_dateutil",
    "pandas.util.testing._skip_if_no_pytz"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestTimestamp.test_constructor_invalid": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pandas.core.api.Period",
    "pandas.core.api.Timestamp",
    "pandas.util.testing.assertRaisesRegexp",
    "slice"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestTimestamp.test_constructor_with_stringoffset": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "eval",
    "pandas.core.api.Timestamp",
    "pandas.tseries.tests.test_tslib.calendar",
    "pandas.tseries.tests.test_tslib.datetime",
    "pandas.tseries.tests.test_tslib.dateutil",
    "pandas.tseries.tests.test_tslib.pytz",
    "pandas.tslib.pydt_to_i8",
    "pandas.util.testing._skip_if_no_dateutil",
    "pandas.util.testing._skip_if_no_pytz",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestTimestamp.test_conversion": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "numpy.datetime64",
    "pandas.core.api.Timestamp",
    "pandas.tseries.tests.test_tslib.datetime",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestTimestamp.test_fields": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "AttributeError",
    "check",
    "pandas.core.api.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestTimestamp.test_fields.check": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "pandas.compat.long"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestTimestamp.test_nat_fields": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "numpy.isnan",
    "pandas.core.api.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestTimestamp.test_now": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "abs",
    "pandas.core.api.Timedelta",
    "pandas.core.api.Timestamp",
    "pandas.core.api.Timestamp.now",
    "pandas.tseries.tests.test_tslib.datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestTimestamp.test_pprint": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "pandas.core.api.Timestamp",
    "pandas.tseries.tests.test_tslib.pprint"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestTimestamp.test_repr": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "eval",
    "pandas.core.api.Timestamp",
    "pandas.tseries.tests.test_tslib.dateutil",
    "pandas.util.testing._skip_if_no_dateutil",
    "pandas.util.testing._skip_if_no_pytz",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestTimestamp.test_today": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "abs",
    "pandas.core.api.Timedelta",
    "pandas.core.api.Timestamp",
    "pandas.core.api.Timestamp.today",
    "pandas.tseries.tests.test_tslib.datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestTimestamp.test_tz": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "pandas.core.api.Timestamp",
    "pandas.tseries.offsets.Nano"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestTimestamp.test_tz_convert_roundtrip": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "pandas.core.api.Timestamp"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestTimestamp.test_tz_localize_ambiguous": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pandas.core.api.Timestamp",
    "pandas.tseries.index.date_range",
    "pandas.util.testing.assertRaisesRegexp"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestTimestamp.test_tz_localize_roundtrip": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "TypeError",
    "pandas.core.api.Timestamp",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestTimestamp.test_utc_z_designator": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "pandas.core.api.Timestamp",
    "pandas.tslib.get_timezone"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestTimestampNsOperations": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.tests.test_tslib.TestTimestampNsOperations.assert_ns_timedelta": {
  "data": {
   "lineno": 952
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestTimestampNsOperations.setUp": {
  "data": {
   "lineno": 949,
   "symbols_in_volume": [
    "pandas.core.api.Timestamp",
    "pandas.tseries.tests.test_tslib.datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestTimestampNsOperations.test_nanosecond_string_parsing": {
  "data": {
   "lineno": 974,
   "symbols_in_volume": [
    "pandas.core.api.Timestamp",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestTimestampNsOperations.test_nanosecond_timestamp": {
  "data": {
   "lineno": 999,
   "symbols_in_volume": [
    "pandas.compat.numpy.np_datetime64_compat",
    "pandas.core.api.Timestamp",
    "pandas.tseries.offsets.Nano",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestTimestampNsOperations.test_nat_arithmetic": {
  "data": {
   "lineno": 1033,
   "symbols_in_volume": [
    "TypeError",
    "numpy.nan",
    "pandas.NaT",
    "pandas.core.api.Timedelta",
    "pandas.core.api.Timestamp",
    "pandas.tseries.tests.test_tslib.datetime",
    "pandas.tseries.tests.test_tslib.pytz",
    "pandas.util.testing._skip_if_no_pytz",
    "pandas.util.testing.assertRaises"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestTimestampNsOperations.test_nat_arithmetic_index": {
  "data": {
   "lineno": 1084,
   "symbols_in_volume": [
    "pandas.DatetimeIndex",
    "pandas.NaT",
    "pandas.TimedeltaIndex",
    "pandas.util.testing._skip_if_no_pytz"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestTimestampNsOperations.test_timedelta_ms_arithmetic": {
  "data": {
   "lineno": 970,
   "symbols_in_volume": [
    "numpy.timedelta64"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestTimestampNsOperations.test_timedelta_ns_arithmetic": {
  "data": {
   "lineno": 958,
   "symbols_in_volume": [
    "numpy.timedelta64"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestTimestampNsOperations.test_timedelta_ns_based_arithmetic": {
  "data": {
   "lineno": 962,
   "symbols_in_volume": [
    "numpy.timedelta64"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestTimestampNsOperations.test_timedelta_us_arithmetic": {
  "data": {
   "lineno": 966,
   "symbols_in_volume": [
    "numpy.timedelta64"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestTimestampOps": {
  "data": {
   "lineno": 1269,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.tests.test_tslib.TestTimestampOps.test_addition_subtraction_preserve_frequency": {
  "data": {
   "lineno": 1315,
   "symbols_in_volume": [
    "numpy.timedelta64",
    "pandas.tseries.index.date_range",
    "pandas.tseries.tests.test_tslib.datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestTimestampOps.test_addition_subtraction_types": {
  "data": {
   "lineno": 1285,
   "symbols_in_volume": [
    "numpy.timedelta64",
    "pandas.core.api.Timedelta",
    "pandas.core.api.Timestamp",
    "pandas.tseries.index.date_range",
    "pandas.tseries.tests.test_tslib.datetime",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestTimestampOps.test_resolution": {
  "data": {
   "lineno": 1332,
   "symbols_in_volume": [
    "pandas._period.resolution",
    "pandas.tseries.frequencies.D_RESO",
    "pandas.tseries.frequencies.H_RESO",
    "pandas.tseries.frequencies.MS_RESO",
    "pandas.tseries.frequencies.S_RESO",
    "pandas.tseries.frequencies.T_RESO",
    "pandas.tseries.frequencies.US_RESO",
    "pandas.tseries.index.date_range",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestTimestampOps.test_timestamp_and_datetime": {
  "data": {
   "lineno": 1270,
   "symbols_in_volume": [
    "pandas.core.api.Timestamp",
    "pandas.tseries.tests.test_tslib.datetime"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestTimestampOps.test_timestamp_and_series": {
  "data": {
   "lineno": 1276,
   "symbols_in_volume": [
    "numpy.timedelta64",
    "pandas.core.api.Series",
    "pandas.tseries.index.date_range",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestTslib": {
  "data": {
   "lineno": 1116,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.tests.test_tslib.TestTslib.test_intraday_conversion_factors": {
  "data": {
   "lineno": 1117,
   "symbols_in_volume": [
    "pandas._period.period_asfreq",
    "pandas.tseries.frequencies.get_freq"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestTslib.test_period_ordinal_business_day": {
  "data": {
   "lineno": 1190,
   "symbols_in_volume": [
    "pandas._period.period_ordinal",
    "pandas.tseries.frequencies.get_freq"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestTslib.test_period_ordinal_start_values": {
  "data": {
   "lineno": 1166,
   "symbols_in_volume": [
    "pandas._period.period_ordinal",
    "pandas.tseries.frequencies.get_freq"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestTslib.test_period_ordinal_week": {
  "data": {
   "lineno": 1179,
   "symbols_in_volume": [
    "pandas._period.period_ordinal",
    "pandas.tseries.frequencies.get_freq"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestTslib.test_shift_months": {
  "data": {
   "lineno": 1256,
   "symbols_in_volume": [
    "pandas.core.api.Timestamp",
    "pandas.tseries.index.DatetimeIndex",
    "pandas.tseries.offsets.DateOffset",
    "pandas.tslib.shift_months",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestTslib.test_tslib_tz_convert": {
  "data": {
   "lineno": 1210,
   "symbols_in_volume": [
    "compare_local_to_utc",
    "compare_utc_to_local",
    "numpy.array",
    "numpy.int64",
    "pandas.tseries.index.date_range",
    "pandas.tslib.iNaT",
    "pandas.tslib.maybe_get_tz",
    "pandas.tslib.tz_convert"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestTslib.test_tslib_tz_convert.compare_local_to_utc": {
  "data": {
   "lineno": 1217,
   "symbols_in_volume": [
    "numpy.vectorize",
    "pandas.tslib.tz_convert",
    "pandas.tslib.tz_convert_single"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.TestTslib.test_tslib_tz_convert.compare_utc_to_local": {
  "data": {
   "lineno": 1211,
   "symbols_in_volume": [
    "numpy.vectorize",
    "pandas.tslib.tz_convert",
    "pandas.tslib.tz_convert_single"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_tslib.Timedelta": {
  "data": {
   "shadows": "pandas.core.api.Timedelta"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_tslib.Timestamp": {
  "data": {
   "shadows": "pandas.core.api.Timestamp"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_tslib.US_RESO": {
  "data": {
   "shadows": "pandas.tseries.frequencies.US_RESO"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_tslib._skip_if_has_locale": {
  "data": {
   "shadows": "pandas.util.testing._skip_if_has_locale"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_tslib.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_tslib.calendar": {
  "data": {
   "shadows": "calendar"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_tslib.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_tslib.date_range": {
  "data": {
   "shadows": "pandas.tseries.index.date_range"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_tslib.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_tslib.dateutil": {
  "data": {
   "shadows": "dateutil"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_tslib.get_freq": {
  "data": {
   "shadows": "pandas.tseries.frequencies.get_freq"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_tslib.get_timezone": {
  "data": {
   "shadows": "pandas.tslib.get_timezone"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_tslib.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_tslib.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_tslib.np_array_datetime64_compat": {
  "data": {
   "shadows": "pandas.compat.numpy.np_array_datetime64_compat"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_tslib.np_datetime64_compat": {
  "data": {
   "shadows": "pandas.compat.numpy.np_datetime64_compat"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_tslib.offsets": {
  "data": {
   "shadows": "pandas.tseries.offsets"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_tslib.parse": {
  "data": {
   "shadows": "dateutil.parser.parse"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_tslib.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_tslib.period": {
  "data": {
   "shadows": "pandas._period"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_tslib.period_asfreq": {
  "data": {
   "shadows": "pandas._period.period_asfreq"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_tslib.period_ordinal": {
  "data": {
   "shadows": "pandas._period.period_ordinal"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_tslib.pprint": {
  "data": {
   "shadows": "pprint"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_tslib.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_tslib.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_tslib.to_datetime": {
  "data": {
   "shadows": "pandas.core.api.to_datetime"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_tslib.tools": {
  "data": {
   "shadows": "pandas.tseries.tools"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_tslib.tslib": {
  "data": {
   "shadows": "pandas.tslib"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_util": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.tseries.tests.test_util.nose"
   ]
  },
  "type": "module"
 },
 "pandas.tseries.tests.test_util.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_util.TestPivotAnnual": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "pandas.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas.tseries.tests.test_util.TestPivotAnnual.test_daily": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.date_range",
    "pandas.tseries.util.isleapyear",
    "pandas.tseries.util.pivot_annual",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_util.TestPivotAnnual.test_hourly": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "float",
    "numpy.random.randint",
    "pandas.Series",
    "pandas.date_range",
    "pandas.tseries.util.isleapyear",
    "pandas.tseries.util.pivot_annual",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_util.TestPivotAnnual.test_monthly": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.Series",
    "pandas.compat.range",
    "pandas.date_range",
    "pandas.tseries.util.pivot_annual",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_util.TestPivotAnnual.test_period_daily": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_util.TestPivotAnnual.test_period_monthly": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_util.TestPivotAnnual.test_period_weekly": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_util.TestPivotAnnual.test_weekly": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_util.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_util.date_range": {
  "data": {
   "shadows": "pandas.date_range"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_util.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_util.isleapyear": {
  "data": {
   "shadows": "pandas.tseries.util.isleapyear"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_util.normalize_date": {
  "data": {
   "shadows": "pandas.tseries.tools.normalize_date"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_util.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_util.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_util.pivot_annual": {
  "data": {
   "shadows": "pandas.tseries.util.pivot_annual"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_util.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas.tseries.tests.test_util.test_normalize_date": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "datetime.date",
    "datetime.datetime",
    "pandas.tseries.tools.normalize_date"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.tests.test_util.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas.tseries.timedeltas": {
  "data": {},
  "type": "module"
 },
 "pandas.tseries.timedeltas.ABCIndexClass": {
  "data": {
   "shadows": "pandas.core.common.ABCIndexClass"
  },
  "type": "import"
 },
 "pandas.tseries.timedeltas.ABCSeries": {
  "data": {
   "shadows": "pandas.core.common.ABCSeries"
  },
  "type": "import"
 },
 "pandas.tseries.timedeltas.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandas.tseries.timedeltas.TimedeltaIndex": {
  "data": {
   "shadows": "pandas.TimedeltaIndex"
  },
  "type": "import"
 },
 "pandas.tseries.timedeltas._coerce_scalar_to_timedelta_type": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "pandas.tslib.Timedelta",
    "pandas.tslib.convert_to_timedelta"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.timedeltas._ensure_object": {
  "data": {
   "shadows": "pandas.core.common._ensure_object"
  },
  "type": "import"
 },
 "pandas.tseries.timedeltas._unit_map": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "pandas.tseries.timedeltas._validate_timedelta_unit": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "ValueError",
    "pandas.tseries.timedeltas._unit_map"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.timedeltas.deprecate_kwarg": {
  "data": {
   "shadows": "pandas.util.decorators.deprecate_kwarg"
  },
  "type": "import"
 },
 "pandas.tseries.timedeltas.is_integer_dtype": {
  "data": {
   "shadows": "pandas.core.common.is_integer_dtype"
  },
  "type": "import"
 },
 "pandas.tseries.timedeltas.is_list_like": {
  "data": {
   "shadows": "pandas.core.common.is_list_like"
  },
  "type": "import"
 },
 "pandas.tseries.timedeltas.is_timedelta64_dtype": {
  "data": {
   "shadows": "pandas.core.common.is_timedelta64_dtype"
  },
  "type": "import"
 },
 "pandas.tseries.timedeltas.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tseries.timedeltas.to_timedelta": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "TypeError",
    "_convert_listlike",
    "getattr",
    "isinstance",
    "pandas.Series",
    "pandas.core.common.ABCIndexClass",
    "pandas.core.common.ABCSeries",
    "pandas.core.common.is_list_like",
    "pandas.tseries.timedeltas._coerce_scalar_to_timedelta_type",
    "pandas.tseries.timedeltas._validate_timedelta_unit",
    "pandas.util.decorators.deprecate_kwarg"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.timedeltas.to_timedelta._convert_listlike": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "list",
    "numpy.array",
    "pandas.TimedeltaIndex",
    "pandas.core.common._ensure_object",
    "pandas.core.common.is_integer_dtype",
    "pandas.core.common.is_timedelta64_dtype",
    "pandas.tslib.array_to_timedelta64",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.timedeltas.tslib": {
  "data": {
   "shadows": "pandas.tslib"
  },
  "type": "import"
 },
 "pandas.tseries.util": {
  "data": {},
  "type": "module"
 },
 "pandas.tseries.util.DataFrame": {
  "data": {
   "shadows": "pandas.core.frame.DataFrame"
  },
  "type": "import"
 },
 "pandas.tseries.util.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.tseries.util.isleapyear": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.logical_and",
    "numpy.logical_or"
   ]
  },
  "type": "function"
 },
 "pandas.tseries.util.lrange": {
  "data": {
   "shadows": "pandas.compat.lrange"
  },
  "type": "import"
 },
 "pandas.tseries.util.nanops": {
  "data": {
   "shadows": "pandas.core.nanops"
  },
  "type": "import"
 },
 "pandas.tseries.util.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.tseries.util.pivot_annual": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "NotImplementedError",
    "len",
    "numpy.asarray",
    "numpy.empty",
    "numpy.nan",
    "pandas.compat.lrange",
    "pandas.core.common._ensure_platform_int",
    "pandas.core.frame.DataFrame",
    "pandas.core.nanops.unique1d",
    "pandas.tseries.util.isleapyear"
   ]
  },
  "type": "function"
 },
 "pandas.tslib": {
  "data": {
   "shadows": "pandas.tslib"
  },
  "type": "import"
 },
 "pandas.types": {
  "data": {},
  "type": "module"
 },
 "pandas.types.api": {
  "data": {},
  "type": "module"
 },
 "pandas.types.api.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.types.api.pandas_dtype": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "numpy.dtype",
    "pandas.compat.string_types"
   ]
  },
  "type": "function"
 },
 "pandas.types.api.string_types": {
  "data": {
   "shadows": "pandas.compat.string_types"
  },
  "type": "import"
 },
 "pandas.types.concat": {
  "data": {},
  "type": "module"
 },
 "pandas.types.concat.Categorical": {
  "data": {
   "shadows": "pandas.core.categorical.Categorical"
  },
  "type": "import"
 },
 "pandas.types.concat.DataFrame": {
  "data": {
   "shadows": "pandas.core.frame.DataFrame"
  },
  "type": "import"
 },
 "pandas.types.concat.DatetimeIndex": {
  "data": {
   "shadows": "pandas.tseries.index.DatetimeIndex"
  },
  "type": "import"
 },
 "pandas.types.concat.Series": {
  "data": {
   "shadows": "pandas.core.series.Series"
  },
  "type": "import"
 },
 "pandas.types.concat.SparseArray": {
  "data": {
   "shadows": "pandas.sparse.array.SparseArray"
  },
  "type": "import"
 },
 "pandas.types.concat.SparseDataFrame": {
  "data": {
   "shadows": "pandas.sparse.api.SparseDataFrame"
  },
  "type": "import"
 },
 "pandas.types.concat.SparseSeries": {
  "data": {
   "shadows": "pandas.sparse.api.SparseSeries"
  },
  "type": "import"
 },
 "pandas.types.concat._concat_categorical": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "numpy.array",
    "numpy.concatenate",
    "object",
    "pandas.compat.map",
    "pandas.core.categorical.Categorical",
    "pandas.core.common.is_categorical_dtype",
    "pandas.types.concat._concat_compat",
    "pandas.types.concat.get_dtype_kinds",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.types.concat._concat_categorical.convert_categorical": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "pandas.core.common.is_categorical_dtype"
   ]
  },
  "type": "function"
 },
 "pandas.types.concat._concat_compat": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "is_nonempty",
    "len",
    "numpy.concatenate",
    "pandas.types.concat._concat_categorical",
    "pandas.types.concat._concat_datetime",
    "pandas.types.concat._concat_sparse",
    "pandas.types.concat.get_dtype_kinds",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.types.concat._concat_compat.is_nonempty": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "pandas.types.concat._concat_datetime": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "convert_to_pydatetime",
    "len",
    "list",
    "numpy.concatenate",
    "numpy.int64",
    "pandas.core.common._NS_DTYPE",
    "pandas.core.common._TD_DTYPE",
    "pandas.tseries.index.DatetimeIndex",
    "pandas.types.concat.get_dtype_kinds",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.types.concat._concat_datetime.convert_to_pydatetime": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "getattr",
    "numpy.atleast_2d",
    "numpy.int64",
    "pandas.core.common._NS_DTYPE.kind",
    "pandas.core.common._TD_DTYPE",
    "pandas.tslib.ints_to_pydatetime",
    "pandas.tslib.ints_to_pytimedelta"
   ]
  },
  "type": "function"
 },
 "pandas.types.concat._concat_sparse": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "convert_sparse",
    "len",
    "numpy.concatenate",
    "pandas.core.common.get_dtype_kinds",
    "pandas.core.common.is_sparse",
    "pandas.sparse.array.SparseArray",
    "pandas.sparse.array._make_index",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.types.concat._concat_sparse.convert_sparse": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "isinstance",
    "numpy.atleast_2d",
    "pandas.sparse.array.SparseArray"
   ]
  },
  "type": "function"
 },
 "pandas.types.concat._get_frame_result_type": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "any",
    "pandas.sparse.api.SparseDataFrame"
   ]
  },
  "type": "function"
 },
 "pandas.types.concat._get_series_result_type": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "all",
    "dict",
    "isinstance",
    "pandas.compat.itervalues",
    "pandas.core.common.is_sparse",
    "pandas.core.frame.DataFrame",
    "pandas.core.series.Series",
    "pandas.sparse.api.SparseDataFrame",
    "pandas.sparse.api.SparseSeries"
   ]
  },
  "type": "function"
 },
 "pandas.types.concat._make_index": {
  "data": {
   "shadows": "pandas.sparse.array._make_index"
  },
  "type": "import"
 },
 "pandas.types.concat.com": {
  "data": {
   "shadows": "pandas.core.common"
  },
  "type": "import"
 },
 "pandas.types.concat.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.types.concat.get_dtype_kinds": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "pandas.core.common.is_bool_dtype",
    "pandas.core.common.is_categorical_dtype",
    "pandas.core.common.is_datetime64_dtype",
    "pandas.core.common.is_datetimetz",
    "pandas.core.common.is_object_dtype",
    "pandas.core.common.is_sparse",
    "pandas.core.common.is_timedelta64_dtype",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.types.concat.map": {
  "data": {
   "shadows": "pandas.compat.map"
  },
  "type": "import"
 },
 "pandas.types.concat.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.types.concat.tslib": {
  "data": {
   "shadows": "pandas.tslib"
  },
  "type": "import"
 },
 "pandas.types.dtypes": {
  "data": {},
  "type": "module"
 },
 "pandas.types.dtypes.CategoricalDtype": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "numpy.dtype",
    "pandas.types.dtypes.CategoricalDtypeType",
    "pandas.types.dtypes.ExtensionDtype",
    "str",
    "type"
   ]
  },
  "type": "class"
 },
 "pandas.types.dtypes.CategoricalDtype.__eq__": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "isinstance",
    "pandas.compat.string_types",
    "pandas.types.dtypes.CategoricalDtype"
   ]
  },
  "type": "function"
 },
 "pandas.types.dtypes.CategoricalDtype.__hash__": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "hash",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.types.dtypes.CategoricalDtype.construct_from_string": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "TypeError",
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "pandas.types.dtypes.CategoricalDtypeType": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "pandas.types.dtypes.DatetimeTZDtype": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "numpy.dtype",
    "pandas.types.dtypes.DatetimeTZDtypeType",
    "pandas.types.dtypes.ExtensionDtype",
    "pandas.types.dtypes.re",
    "str",
    "type"
   ]
  },
  "type": "class"
 },
 "pandas.types.dtypes.DatetimeTZDtype.__eq__": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "isinstance",
    "pandas.compat.string_types",
    "pandas.types.dtypes.DatetimeTZDtype",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.types.dtypes.DatetimeTZDtype.__hash__": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "hash",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.types.dtypes.DatetimeTZDtype.__init__": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pandas.types.dtypes.DatetimeTZDtype"
   ]
  },
  "type": "function"
 },
 "pandas.types.dtypes.DatetimeTZDtype.__unicode__": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "pandas.types.dtypes.DatetimeTZDtype.construct_from_string": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "pandas.types.dtypes.DatetimeTZDtype.name": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.types.dtypes.DatetimeTZDtypeType": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "pandas.types.dtypes.ExtensionDtype": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "object",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "class"
 },
 "pandas.types.dtypes.ExtensionDtype.__bytes__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "pandas.core.config.get_option"
   ]
  },
  "type": "function"
 },
 "pandas.types.dtypes.ExtensionDtype.__eq__": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pandas.types.dtypes.ExtensionDtype.__hash__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pandas.types.dtypes.ExtensionDtype.__ne__": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "pandas.types.dtypes.ExtensionDtype.__repr__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.types.dtypes.ExtensionDtype.__str__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "pandas.compat.PY3"
   ]
  },
  "type": "function"
 },
 "pandas.types.dtypes.ExtensionDtype.__unicode__": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "pandas.types.dtypes.ExtensionDtype.is_dtype": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "classmethod",
    "hasattr",
    "isinstance",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "pandas.types.dtypes.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.types.dtypes.get_option": {
  "data": {
   "shadows": "pandas.core.config.get_option"
  },
  "type": "import"
 },
 "pandas.types.dtypes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.types.dtypes.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pandas.types.generic": {
  "data": {
   "symbols_in_volume": [
    "pandas.types.generic._ABCGeneric",
    "pandas.types.generic.create_pandas_abc_type",
    "tuple"
   ]
  },
  "type": "module"
 },
 "pandas.types.generic.ABCCategorical": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "pandas.types.generic.ABCCategoricalIndex": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pandas.types.generic.ABCDataFrame": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pandas.types.generic.ABCDatetimeIndex": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pandas.types.generic.ABCFloat64Index": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pandas.types.generic.ABCGeneric": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "pandas.types.generic.ABCIndex": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pandas.types.generic.ABCIndexClass": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pandas.types.generic.ABCInt64Index": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "pandas.types.generic.ABCMultiIndex": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "pandas.types.generic.ABCPanel": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pandas.types.generic.ABCPeriod": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "pandas.types.generic.ABCPeriodIndex": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pandas.types.generic.ABCRangeIndex": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pandas.types.generic.ABCSeries": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pandas.types.generic.ABCSparseArray": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "pandas.types.generic.ABCSparseSeries": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pandas.types.generic.ABCTimedeltaIndex": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pandas.types.generic._ABCGeneric": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "pandas.types.generic._ABCGeneric.__instancecheck__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "pandas.types.generic.create_pandas_abc_type": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "dict",
    "meta",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas.types.generic.create_pandas_abc_type._check": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "classmethod",
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandas.util": {
  "data": {},
  "type": "module"
 },
 "pandas.util.clipboard": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "PySide.QtGui.QApplication",
    "PySide.QtGui.QApplication.clipboard",
    "RuntimeError",
    "pandas.util.clipboard.NoClipboardProgramError",
    "pandas.util.clipboard.PY2",
    "pandas.util.clipboard._copyCygwin",
    "pandas.util.clipboard._copyGtk",
    "pandas.util.clipboard._copyKlipper",
    "pandas.util.clipboard._copyOSX",
    "pandas.util.clipboard._copyQt",
    "pandas.util.clipboard._copyWindows",
    "pandas.util.clipboard._copyXclip",
    "pandas.util.clipboard._copyXsel",
    "pandas.util.clipboard._pasteCygwin",
    "pandas.util.clipboard._pasteGtk",
    "pandas.util.clipboard._pasteKlipper",
    "pandas.util.clipboard._pasteOSX",
    "pandas.util.clipboard._pasteQt",
    "pandas.util.clipboard._pasteWindows",
    "pandas.util.clipboard._pasteXclip",
    "pandas.util.clipboard._pasteXsel",
    "pandas.util.clipboard.copy",
    "pandas.util.clipboard.gtkInstalled",
    "pandas.util.clipboard.os",
    "pandas.util.clipboard.paste",
    "pandas.util.clipboard.platform",
    "pandas.util.clipboard.qtBindingInstalled",
    "pandas.util.clipboard.xclipExists",
    "pandas.util.clipboard.xklipperExists",
    "pandas.util.clipboard.xselExists",
    "str",
    "subprocess.PIPE",
    "subprocess.call"
   ]
  },
  "type": "module"
 },
 "pandas.util.clipboard.NoClipboardProgramError": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "OSError"
   ]
  },
  "type": "class"
 },
 "pandas.util.clipboard.PIPE": {
  "data": {
   "shadows": "subprocess.PIPE"
  },
  "type": "import"
 },
 "pandas.util.clipboard.PY2": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "pandas.util.clipboard.Popen": {
  "data": {
   "shadows": "subprocess.Popen"
  },
  "type": "import"
 },
 "pandas.util.clipboard.QtGui": {
  "data": {
   "shadows": "PySide.QtGui"
  },
  "type": "import"
 },
 "pandas.util.clipboard._copyCygwin": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "pandas.util.clipboard.text_type"
   ]
  },
  "type": "function"
 },
 "pandas.util.clipboard._copyGtk": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "pandas.util.clipboard._copyKlipper": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "subprocess.PIPE",
    "subprocess.Popen"
   ]
  },
  "type": "function"
 },
 "pandas.util.clipboard._copyOSX": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "subprocess.PIPE",
    "subprocess.Popen"
   ]
  },
  "type": "function"
 },
 "pandas.util.clipboard._copyQt": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "pandas.util.clipboard._copyWindows": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "pandas.util.clipboard.text_type"
   ]
  },
  "type": "function"
 },
 "pandas.util.clipboard._copyXclip": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "subprocess.PIPE",
    "subprocess.Popen"
   ]
  },
  "type": "function"
 },
 "pandas.util.clipboard._copyXsel": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "subprocess.PIPE",
    "subprocess.Popen"
   ]
  },
  "type": "function"
 },
 "pandas.util.clipboard._functions": {
  "data": {
   "lineno": 254
  },
  "type": "constant"
 },
 "pandas.util.clipboard._pasteCygwin": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "pandas.util.clipboard._pasteGtk": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "pandas.util.clipboard._pasteKlipper": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "subprocess.PIPE",
    "subprocess.Popen"
   ]
  },
  "type": "function"
 },
 "pandas.util.clipboard._pasteOSX": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "subprocess.PIPE",
    "subprocess.Popen"
   ]
  },
  "type": "function"
 },
 "pandas.util.clipboard._pasteQt": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.util.clipboard._pasteWindows": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "pandas.util.clipboard._pasteXclip": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "subprocess.PIPE",
    "subprocess.Popen"
   ]
  },
  "type": "function"
 },
 "pandas.util.clipboard._pasteXsel": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "subprocess.PIPE",
    "subprocess.Popen"
   ]
  },
  "type": "function"
 },
 "pandas.util.clipboard.app": {
  "data": {
   "lineno": 247
  },
  "type": "constant"
 },
 "pandas.util.clipboard.call": {
  "data": {
   "shadows": "subprocess.call"
  },
  "type": "import"
 },
 "pandas.util.clipboard.cb": {
  "data": {
   "lineno": 248
  },
  "type": "constant"
 },
 "pandas.util.clipboard.clipboard_get": {
  "data": {
   "lineno": 265
  },
  "type": "constant"
 },
 "pandas.util.clipboard.clipboard_set": {
  "data": {
   "lineno": 266
  },
  "type": "constant"
 },
 "pandas.util.clipboard.copy": {
  "data": {
   "lineno": 256
  },
  "type": "constant"
 },
 "pandas.util.clipboard.ctypes": {
  "data": {
   "shadows": "ctypes"
  },
  "type": "import"
 },
 "pandas.util.clipboard.gtk": {
  "data": {
   "shadows": "gtk"
  },
  "type": "import"
 },
 "pandas.util.clipboard.gtkInstalled": {
  "data": {
   "lineno": 217
  },
  "type": "constant"
 },
 "pandas.util.clipboard.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.util.clipboard.paste": {
  "data": {
   "lineno": 255
  },
  "type": "constant"
 },
 "pandas.util.clipboard.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "pandas.util.clipboard.qtBindingInstalled": {
  "data": {
   "lineno": 230
  },
  "type": "constant"
 },
 "pandas.util.clipboard.text_type": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "pandas.util.clipboard.xclipExists": {
  "data": {
   "lineno": 202
  },
  "type": "constant"
 },
 "pandas.util.clipboard.xklipperExists": {
  "data": {
   "lineno": 208
  },
  "type": "constant"
 },
 "pandas.util.clipboard.xselExists": {
  "data": {
   "lineno": 205
  },
  "type": "constant"
 },
 "pandas.util.decorators": {
  "data": {},
  "type": "module"
 },
 "pandas.util.decorators.Appender": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.util.decorators.Appender.__call__": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "func",
    "func.__doc__",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "pandas.util.decorators.Appender.__init__": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "pandas.util.decorators.indent"
   ]
  },
  "type": "function"
 },
 "pandas.util.decorators.KnownFailureTest": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "pandas.util.decorators.StringIO": {
  "data": {
   "shadows": "pandas.compat.StringIO"
  },
  "type": "import"
 },
 "pandas.util.decorators.Substitution": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.util.decorators.Substitution.__call__": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "func",
    "func.__doc__"
   ]
  },
  "type": "function"
 },
 "pandas.util.decorators.Substitution.__init__": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "AssertionError"
   ]
  },
  "type": "function"
 },
 "pandas.util.decorators.Substitution.from_params": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "pandas.util.decorators.Substitution.update": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "pandas.util.decorators.cache_readonly": {
  "data": {
   "shadows": "pandas.lib.cache_readonly"
  },
  "type": "import"
 },
 "pandas.util.decorators.callable": {
  "data": {
   "shadows": "pandas.compat.callable"
  },
  "type": "import"
 },
 "pandas.util.decorators.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "pandas.util.decorators.deprecate": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "pandas.util.decorators.deprecate.wrapper": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "FutureWarning",
    "alternative",
    "pandas.util.decorators.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.util.decorators.deprecate_kwarg": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "pandas.compat.callable"
   ]
  },
  "type": "function"
 },
 "pandas.util.decorators.deprecate_kwarg._deprecate_kwarg": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "pandas.util.decorators.deprecate_kwarg._deprecate_kwarg.wrapper": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "FutureWarning",
    "TypeError",
    "func",
    "functools.wraps",
    "hasattr",
    "mapping",
    "pandas.util.decorators.warnings"
   ]
  },
  "type": "function"
 },
 "pandas.util.decorators.indent": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.util.decorators.knownfailureif": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "pandas.compat.callable"
   ]
  },
  "type": "function"
 },
 "pandas.util.decorators.knownfailureif.knownfail_decorator": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "f",
    "pandas.util.decorators.nose"
   ]
  },
  "type": "function"
 },
 "pandas.util.decorators.knownfailureif.knownfail_decorator.knownfailer": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "f",
    "fail_val",
    "pandas.util.decorators.KnownFailureTest"
   ]
  },
  "type": "function"
 },
 "pandas.util.decorators.make_signature": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "enumerate",
    "func",
    "len",
    "pandas.compat.signature",
    "repr",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.util.decorators.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas.util.decorators.signature": {
  "data": {
   "shadows": "pandas.compat.signature"
  },
  "type": "import"
 },
 "pandas.util.decorators.suppress_stdout": {
  "data": {
   "lineno": 196
  },
  "type": "function"
 },
 "pandas.util.decorators.suppress_stdout.wrapped": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "f",
    "pandas.compat.StringIO",
    "pandas.util.decorators.sys"
   ]
  },
  "type": "function"
 },
 "pandas.util.decorators.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.util.decorators.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.util.decorators.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "pandas.util.doctools": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "matplotlib.pyplot.show",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas.concat",
    "pandas.util.doctools.TablePlotter",
    "pandas.util.doctools.col",
    "pandas.util.doctools.df1",
    "pandas.util.doctools.df2",
    "pandas.util.doctools.df3",
    "pandas.util.doctools.idx",
    "pandas.util.doctools.p"
   ]
  },
  "type": "module"
 },
 "pandas.util.doctools.TablePlotter": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas.util.doctools.TablePlotter.__init__": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "pandas.util.doctools.TablePlotter._conv": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas.util.doctools.TablePlotter._get_cells": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "max",
    "sum"
   ]
  },
  "type": "function"
 },
 "pandas.util.doctools.TablePlotter._insert_index": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.concat",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas.util.doctools.TablePlotter._make_table": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "len",
    "pandas.compat.iteritems",
    "pandas.tools.plotting.table"
   ]
  },
  "type": "function"
 },
 "pandas.util.doctools.TablePlotter._shape": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "pandas.util.doctools.TablePlotter.plot": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "len",
    "list",
    "matplotlib.gridspec.GridSpec",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.subplot",
    "max",
    "numpy.max",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.util.doctools.col": {
  "data": {
   "lineno": 184
  },
  "type": "constant"
 },
 "pandas.util.doctools.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas.util.doctools.df1": {
  "data": {
   "lineno": 165
  },
  "type": "constant"
 },
 "pandas.util.doctools.df2": {
  "data": {
   "lineno": 168
  },
  "type": "constant"
 },
 "pandas.util.doctools.df3": {
  "data": {
   "lineno": 185
  },
  "type": "constant"
 },
 "pandas.util.doctools.gridspec": {
  "data": {
   "shadows": "matplotlib.gridspec"
  },
  "type": "import"
 },
 "pandas.util.doctools.idx": {
  "data": {
   "lineno": 182
  },
  "type": "constant"
 },
 "pandas.util.doctools.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.util.doctools.p": {
  "data": {
   "lineno": 163
  },
  "type": "constant"
 },
 "pandas.util.doctools.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.util.doctools.plotting": {
  "data": {
   "shadows": "pandas.tools.plotting"
  },
  "type": "import"
 },
 "pandas.util.doctools.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pandas.util.nosetester": {
  "data": {
   "symbols_in_volume": [
    "numpy.testing.nosetester.import_nose",
    "numpy.testing.nosetester.run_module_suite"
   ]
  },
  "type": "module"
 },
 "pandas.util.nosetester.NoseTester": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "numpy.testing.nosetester.NoseTester"
   ]
  },
  "type": "class"
 },
 "pandas.util.nosetester.NoseTester._get_custom_doctester": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "pandas.util.nosetester.NoseTester._show_system_info": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "pandas.util.nosetester.import_nose",
    "pandas.util.nosetester.numpy",
    "pandas.util.nosetester.os",
    "pandas.util.nosetester.pandas",
    "pandas.util.nosetester.sys",
    "print"
   ]
  },
  "type": "function"
 },
 "pandas.util.nosetester.NoseTester._test_argv": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "pandas.compat.string_types",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas.util.nosetester.NoseTester.test": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "DeprecationWarning",
    "FutureWarning",
    "RuntimeWarning",
    "ValueError",
    "dict",
    "distutils.version.StrictVersion",
    "isinstance",
    "len",
    "min",
    "numpy.testing.noseclasses.NumpyTestProgram",
    "pandas.__version__",
    "pandas.compat.string_types",
    "pandas.util.nosetester.doctest",
    "pandas.util.nosetester.warnings",
    "print"
   ]
  },
  "type": "function"
 },
 "pandas.util.nosetester.NumpyTestProgram": {
  "data": {
   "shadows": "numpy.testing.noseclasses.NumpyTestProgram"
  },
  "type": "import"
 },
 "pandas.util.nosetester.StrictVersion": {
  "data": {
   "shadows": "distutils.version.StrictVersion"
  },
  "type": "import"
 },
 "pandas.util.nosetester.__version__": {
  "data": {
   "shadows": "pandas.__version__"
  },
  "type": "import"
 },
 "pandas.util.nosetester.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pandas.util.nosetester.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pandas.util.nosetester.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "pandas.util.nosetester.get_package_name": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "pandas.util.nosetester.os"
   ]
  },
  "type": "function"
 },
 "pandas.util.nosetester.import_nose": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "pandas.util.nosetester.nosetester": {
  "data": {
   "shadows": "numpy.testing.nosetester"
  },
  "type": "import"
 },
 "pandas.util.nosetester.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas.util.nosetester.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.util.nosetester.pandas": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas.util.nosetester.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.util.nosetester.run_module_suite": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "pandas.util.nosetester.string_types": {
  "data": {
   "shadows": "pandas.compat.string_types"
  },
  "type": "import"
 },
 "pandas.util.nosetester.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.util.nosetester.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas.util.print_versions": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.util.print_versions.main",
    "pandas.util.print_versions.sys"
   ]
  },
  "type": "module"
 },
 "pandas.util.print_versions.OptionParser": {
  "data": {
   "shadows": "optparse.OptionParser"
  },
  "type": "import"
 },
 "pandas.util.print_versions.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "pandas.util.print_versions.get_sys_info": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "ValueError",
    "pandas.util.print_versions.os",
    "pandas.util.print_versions.platform",
    "pandas.util.print_versions.struct",
    "pandas.util.print_versions.subprocess",
    "pandas.util.print_versions.sys"
   ]
  },
  "type": "function"
 },
 "pandas.util.print_versions.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "pandas.util.print_versions.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "pandas.util.print_versions.json": {
  "data": {
   "shadows": "simplejson"
  },
  "type": "import"
 },
 "pandas.util.print_versions.main": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "optparse.OptionParser",
    "pandas.util.print_versions.show_versions"
   ]
  },
  "type": "function"
 },
 "pandas.util.print_versions.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.util.print_versions.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "pandas.util.print_versions.show_versions": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ImportError",
    "dict",
    "list",
    "pandas.util.print_versions.codecs",
    "pandas.util.print_versions.get_sys_info",
    "pandas.util.print_versions.imp",
    "pandas.util.print_versions.importlib",
    "print",
    "simplejson.dump",
    "ver_f"
   ]
  },
  "type": "function"
 },
 "pandas.util.print_versions.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "pandas.util.print_versions.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pandas.util.print_versions.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandas.util.terminal": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandas.util.terminal.get_terminal_size",
    "print"
   ]
  },
  "type": "module"
 },
 "pandas.util.terminal.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "pandas.util.terminal._get_terminal_size_linux": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "int",
    "ioctl_GWINSZ",
    "os.environ",
    "pandas.util.terminal.os"
   ]
  },
  "type": "function"
 },
 "pandas.util.terminal._get_terminal_size_linux.ioctl_GWINSZ": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "pandas.util.terminal.fcntl",
    "pandas.util.terminal.struct",
    "pandas.util.terminal.termios"
   ]
  },
  "type": "function"
 },
 "pandas.util.terminal._get_terminal_size_tput": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "int",
    "pandas.util.terminal.subprocess"
   ]
  },
  "type": "function"
 },
 "pandas.util.terminal._get_terminal_size_windows": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ctypes.create_string_buffer",
    "ctypes.windll.kernel32.GetConsoleScreenBufferInfo",
    "ctypes.windll.kernel32.GetStdHandle",
    "pandas.util.terminal.struct"
   ]
  },
  "type": "function"
 },
 "pandas.util.terminal.create_string_buffer": {
  "data": {
   "shadows": "ctypes.create_string_buffer"
  },
  "type": "import"
 },
 "pandas.util.terminal.env": {
  "data": {
   "shadows": "os.environ"
  },
  "type": "import"
 },
 "pandas.util.terminal.fcntl": {
  "data": {
   "shadows": "fcntl"
  },
  "type": "import"
 },
 "pandas.util.terminal.get_terminal_size": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "pandas.util.terminal._get_terminal_size_linux",
    "pandas.util.terminal._get_terminal_size_tput",
    "pandas.util.terminal._get_terminal_size_windows",
    "pandas.util.terminal.platform"
   ]
  },
  "type": "function"
 },
 "pandas.util.terminal.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandas.util.terminal.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "pandas.util.terminal.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas.util.terminal.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "pandas.util.terminal.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pandas.util.terminal.termios": {
  "data": {
   "shadows": "termios"
  },
  "type": "import"
 },
 "pandas.util.terminal.windll": {
  "data": {
   "shadows": "ctypes.windll"
  },
  "type": "import"
 },
 "pandas.util.validators": {
  "data": {},
  "type": "module"
 },
 "pandas.util.validators._check_arg_length": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "pandas.util.validators._check_for_default_values": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ValueError",
    "pandas.core.common.is_bool"
   ]
  },
  "type": "function"
 },
 "pandas.util.validators._check_for_invalid_keys": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas.util.validators.is_bool": {
  "data": {
   "shadows": "pandas.core.common.is_bool"
  },
  "type": "import"
 },
 "pandas.util.validators.validate_args": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "dict",
    "pandas.util.validators._check_arg_length",
    "pandas.util.validators._check_for_default_values",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.util.validators.validate_args_and_kwargs": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "TypeError",
    "dict",
    "pandas.util.validators._check_arg_length",
    "pandas.util.validators.validate_kwargs",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas.util.validators.validate_kwargs": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "pandas.util.validators._check_for_default_values",
    "pandas.util.validators._check_for_invalid_keys"
   ]
  },
  "type": "function"
 },
 "pandas.v": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 }
}