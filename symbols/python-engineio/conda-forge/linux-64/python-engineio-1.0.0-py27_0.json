{
 "engineio": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "engineio.middleware": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "engineio.middleware.Middleware": {
  "lineno": 1,
  "symbols_in_volume": [],
  "type": "class"
 },
 "engineio.middleware.Middleware.__call__": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "engineio.middleware.Middleware.__call__.Input": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "class"
 },
 "engineio.middleware.Middleware.__call__.Input.__init__": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "engineio.middleware.Middleware.__call__.Input.get_socket": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "engineio.middleware.Middleware.__init__": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "engineio.packet": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "engineio.packet.Packet": {
  "lineno": 10,
  "symbols_in_volume": [
   "json"
  ],
  "type": "class"
 },
 "engineio.packet.Packet.__init__": {
  "lineno": 15,
  "symbols_in_volume": [
   "six.binary_type",
   "six.text_type"
  ],
  "type": "function"
 },
 "engineio.packet.Packet.decode": {
  "lineno": 54,
  "symbols_in_volume": [
   "base64.b64decode",
   "six.binary_type",
   "six.byte2int"
  ],
  "type": "function"
 },
 "engineio.packet.Packet.encode": {
  "lineno": 30,
  "symbols_in_volume": [
   "base64.b64encode",
   "six.binary_type",
   "six.int2byte",
   "six.string_types",
   "six.text_type"
  ],
  "type": "function"
 },
 "engineio.payload": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "engineio.payload.Payload": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "engineio.payload.Payload.__init__": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "engineio.payload.Payload.decode": {
  "lineno": 34,
  "symbols_in_volume": [
   "six.byte2int"
  ],
  "type": "function"
 },
 "engineio.payload.Payload.encode": {
  "lineno": 13,
  "symbols_in_volume": [
   "six.int2byte"
  ],
  "type": "function"
 }
}