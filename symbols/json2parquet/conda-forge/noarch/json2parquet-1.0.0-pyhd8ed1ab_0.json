{
 "json2parquet": {
  "data": {},
  "type": "module"
 },
 "json2parquet.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "json2parquet.__title__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "json2parquet.__version__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "json2parquet.client": {
  "data": {
   "symbols_in_volume": [
    "json2parquet.client.datetime"
   ]
  },
  "type": "module"
 },
 "json2parquet.client._boolean_converter": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "json2parquet.client._convert_data_with_column_names": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "pyarrow.RecordBatch.from_arrays",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "json2parquet.client._convert_data_with_column_names_dict": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "pyarrow.RecordBatch.from_arrays",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "json2parquet.client._convert_data_with_schema": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "map",
    "pandas.Timestamp.max",
    "pandas._libs.tslib.OutOfBoundsDatetime",
    "pandas.to_datetime",
    "pandas.to_numeric",
    "pyarrow.Array.from_pandas",
    "pyarrow.RecordBatch.from_arrays",
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.date32",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.lib.TimestampType",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "json2parquet.client._convert_data_without_schema": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "_convert_data_with_column_names",
    "list",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "json2parquet.client._date_converter": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "json2parquet.client.ciso8601",
    "json2parquet.client.epoch"
   ]
  },
  "type": "function"
 },
 "json2parquet.client.ciso8601": {
  "data": {
   "shadows": "ciso8601"
  },
  "type": "import"
 },
 "json2parquet.client.convert_json": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "input",
    "json2parquet.client.load_json",
    "json2parquet.client.write_parquet"
   ]
  },
  "type": "function"
 },
 "json2parquet.client.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "json2parquet.client.epoch": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "json2parquet.client.ingest_data": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "_convert_data_with_column_names",
    "_convert_data_with_column_names_dict",
    "_convert_data_with_schema",
    "_convert_data_without_schema",
    "dict",
    "isinstance",
    "list",
    "pyarrow.Schema"
   ]
  },
  "type": "function"
 },
 "json2parquet.client.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "json2parquet.client.load_json": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "json2parquet.client.ingest_data",
    "json2parquet.client.json",
    "open"
   ]
  },
  "type": "function"
 },
 "json2parquet.client.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "json2parquet.client.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "json2parquet.client.pq": {
  "data": {
   "shadows": "pyarrow.parquet"
  },
  "type": "import"
 },
 "json2parquet.client.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "json2parquet.client.write_parquet": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.Table.from_batches",
    "pyarrow.parquet.write_table"
   ]
  },
  "type": "function"
 },
 "json2parquet.client.write_parquet_dataset": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.Table.from_batches",
    "pyarrow.parquet.write_to_dataset"
   ]
  },
  "type": "function"
 },
 "json2parquet.helpers": {
  "data": {
   "symbols_in_volume": [
    "json2parquet.helpers.logging",
    "pyarrow.bool_",
    "pyarrow.date32",
    "pyarrow.decimal128",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.string",
    "pyarrow.timestamp"
   ]
  },
  "type": "module"
 },
 "json2parquet.helpers.REDSHIFT_TO_PYARROW_MAPPING": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "json2parquet.helpers._convert_schema": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "_convert_type",
    "pyarrow.field",
    "pyarrow.schema"
   ]
  },
  "type": "function"
 },
 "json2parquet.helpers._convert_type": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "converted_type"
   ]
  },
  "type": "function"
 },
 "json2parquet.helpers._get_redshift_schema": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "inspect.cleandoc"
   ]
  },
  "type": "function"
 },
 "json2parquet.helpers.cleandoc": {
  "data": {
   "shadows": "inspect.cleandoc"
  },
  "type": "import"
 },
 "json2parquet.helpers.get_schema_from_redshift": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "_convert_schema",
    "_get_redshift_schema",
    "run_redshift_query"
   ]
  },
  "type": "function"
 },
 "json2parquet.helpers.logger": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "json2parquet.helpers.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "json2parquet.helpers.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "json2parquet.helpers.psycopg2": {
  "data": {
   "shadows": "psycopg2"
  },
  "type": "import"
 },
 "json2parquet.helpers.run_redshift_query": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "json2parquet.helpers.logger",
    "json2parquet.helpers.psycopg2",
    "urlparse.urlparse"
   ]
  },
  "type": "function"
 },
 "json2parquet.helpers.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "json2parquet.helpers.urlparse": {
  "data": {
   "shadows": "urlparse.urlparse"
  },
  "type": "import"
 },
 "json2parquet.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 }
}