{
 "workflows": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "workflows.Disconnected": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "class"
 },
 "workflows.Error": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "workflows.contrib": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "workflows.contrib.start_service": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "workflows.contrib.start_service.ServiceStarter": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "workflows.contrib.start_service.ServiceStarter.before_frontend_construction": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.contrib.start_service.ServiceStarter.on_frontend_preparation": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.contrib.start_service.ServiceStarter.on_parser_preparation": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.contrib.start_service.ServiceStarter.on_parsing": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.contrib.start_service.ServiceStarter.on_transport_factory_preparation": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.contrib.start_service.ServiceStarter.on_transport_preparation": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.contrib.start_service.ServiceStarter.run": {
  "lineno": 47,
  "symbols_in_volume": [
   "optparse.OptionParser",
   "optparse.SUPPRESS_HELP",
   "workflows.frontend.Frontend",
   "workflows.services.get_known_services",
   "workflows.transport.add_command_line_options",
   "workflows.transport.get_known_transports",
   "workflows.transport.lookup",
   "workflows.version"
  ],
  "type": "function"
 },
 "workflows.contrib.start_service.ServiceStarter.run.on_transport_preparation_hook": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.contrib.status_monitor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "workflows.contrib.status_monitor.Monitor": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "workflows.contrib.status_monitor.Monitor.__init__": {
  "lineno": 27,
  "symbols_in_volume": [
   "threading.RLock"
  ],
  "type": "function"
 },
 "workflows.contrib.status_monitor.Monitor._boxwin": {
  "lineno": 75,
  "symbols_in_volume": [
   "curses.color_pair",
   "curses.newwin"
  ],
  "type": "function"
 },
 "workflows.contrib.status_monitor.Monitor._erase_card": {
  "lineno": 123,
  "symbols_in_volume": [
   "curses.COLS",
   "curses.newwin"
  ],
  "type": "function"
 },
 "workflows.contrib.status_monitor.Monitor._get_card": {
  "lineno": 105,
  "symbols_in_volume": [
   "curses.COLS"
  ],
  "type": "function"
 },
 "workflows.contrib.status_monitor.Monitor._redraw_screen": {
  "lineno": 91,
  "symbols_in_volume": [
   "curses.A_BOLD",
   "curses.COLS"
  ],
  "type": "function"
 },
 "workflows.contrib.status_monitor.Monitor._run": {
  "lineno": 141,
  "symbols_in_volume": [
   "curses.A_BOLD",
   "curses.COLOR_BLACK",
   "curses.COLOR_GREEN",
   "curses.COLOR_RED",
   "curses.color_pair",
   "curses.curs_set",
   "curses.doupdate",
   "curses.init_pair",
   "curses.use_default_colors",
   "time.sleep",
   "time.time",
   "workflows.services.common_service.CommonService.SERVICE_STATUS_ERROR",
   "workflows.services.common_service.CommonService.SERVICE_STATUS_IDLE",
   "workflows.services.common_service.CommonService.SERVICE_STATUS_PROCESSING",
   "workflows.services.common_service.CommonService.SERVICE_STATUS_TIMER",
   "workflows.services.common_service.CommonService.human_readable_state.get"
  ],
  "type": "function"
 },
 "workflows.contrib.status_monitor.Monitor.run": {
  "lineno": 70,
  "symbols_in_volume": [
   "curses.wrapper"
  ],
  "type": "function"
 },
 "workflows.contrib.status_monitor.Monitor.update_status": {
  "lineno": 41,
  "symbols_in_volume": [
   "curses.A_BOLD",
   "curses.color_pair"
  ],
  "type": "function"
 },
 "workflows.contrib.test_start_service": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "workflows.contrib.test_start_service.test_get_command_line_help": {
  "lineno": 6,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "workflows.contrib.test_start_service.test_script_initialises_transport_and_starts_frontend": {
  "lineno": 16,
  "symbols_in_volume": [
   "mock.ANY",
   "mock.Mock",
   "mock.patch",
   "mock.sentinel.transport",
   "mock.sentinel.version"
  ],
  "type": "function"
 },
 "workflows.contrib.test_status_monitor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "workflows.contrib.test_status_monitor.test_status_monitor_connects_to_transport_layer": {
  "lineno": 5,
  "symbols_in_volume": [
   "mock.ANY",
   "mock.Mock",
   "mock.patch",
   "workflows.contrib.status_monitor.Monitor"
  ],
  "type": "function"
 },
 "workflows.frontend": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "workflows.frontend.Frontend": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "class"
 },
 "workflows.frontend.Frontend.__init__": {
  "lineno": 23,
  "symbols_in_volume": [
   "logging.LoggerAdapter",
   "logging.getLogger",
   "threading.RLock",
   "workflows.frontend.utilization.UtilizationStatistics",
   "workflows.services.common_service.CommonService.SERVICE_STATUS_NEW",
   "workflows.services.common_service.CommonService.SERVICE_STATUS_NONE",
   "workflows.transport.lookup",
   "workflows.util.generate_unique_host_id"
  ],
  "type": "function"
 },
 "workflows.frontend.Frontend.__init__.LogAdapter": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "class"
 },
 "workflows.frontend.Frontend.__init__.LogAdapter.__getitem__": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.frontend.Frontend.__init__.LogAdapter.__iter__": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.frontend.Frontend._terminate_service": {
  "lineno": 425,
  "symbols_in_volume": [
   "workflows.services.common_service.CommonService.SERVICE_STATUS_END",
   "workflows.services.common_service.CommonService.SERVICE_STATUS_TEARDOWN"
  ],
  "type": "function"
 },
 "workflows.frontend.Frontend.exponential_backoff": {
  "lineno": 352,
  "symbols_in_volume": [
   "time.sleep",
   "time.time"
  ],
  "type": "function"
 },
 "workflows.frontend.Frontend.get_host_id": {
  "lineno": 333,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.frontend.Frontend.get_status": {
  "lineno": 337,
  "symbols_in_volume": [
   "workflows.services.common_service.CommonService.human_readable_state.get",
   "workflows.version"
  ],
  "type": "function"
 },
 "workflows.frontend.Frontend.parse_band_log": {
  "lineno": 291,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "function"
 },
 "workflows.frontend.Frontend.parse_band_request_termination": {
  "lineno": 312,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.frontend.Frontend.parse_band_set_name": {
  "lineno": 319,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.frontend.Frontend.parse_band_status_update": {
  "lineno": 328,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.frontend.Frontend.process_transport_command": {
  "lineno": 265,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.frontend.Frontend.run": {
  "lineno": 167,
  "symbols_in_volume": [
   "time.sleep",
   "workflows.Error",
   "workflows.services.common_service.CommonService.SERVICE_STATUS_END",
   "workflows.services.common_service.CommonService.SERVICE_STATUS_ERROR",
   "workflows.services.common_service.CommonService.SERVICE_STATUS_NEW",
   "workflows.services.common_service.CommonService.SERVICE_STATUS_NONE",
   "workflows.services.common_service.CommonService.SERVICE_STATUS_STARTING",
   "workflows.services.common_service.CommonService.SERVICE_STATUS_TEARDOWN",
   "workflows.services.common_service.CommonService.human_readable_state.get"
  ],
  "type": "function"
 },
 "workflows.frontend.Frontend.send_command": {
  "lineno": 249,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.frontend.Frontend.switch_service": {
  "lineno": 372,
  "symbols_in_volume": [
   "multiprocessing.Pipe",
   "multiprocessing.Process",
   "time.time",
   "workflows.services.lookup"
  ],
  "type": "function"
 },
 "workflows.frontend.Frontend.update_status": {
  "lineno": 129,
  "symbols_in_volume": [
   "time.time",
   "workflows.services.common_service.CommonService.SERVICE_STATUS_IDLE"
  ],
  "type": "function"
 },
 "workflows.frontend.test_frontend": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "workflows.frontend.test_frontend.MockPipe": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "class"
 },
 "workflows.frontend.test_frontend.MockPipe.__init__": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.frontend.test_frontend.MockPipe.assert_empty": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.frontend.test_frontend.MockPipe.close": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.frontend.test_frontend.MockPipe.poll": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.frontend.test_frontend.MockPipe.recv": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.frontend.test_frontend.ServiceCrashingOnInit": {
  "lineno": 9,
  "symbols_in_volume": [
   "workflows.services.common_service.CommonService"
  ],
  "type": "class"
 },
 "workflows.frontend.test_frontend.ServiceCrashingOnInit.initializing": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.frontend.test_frontend.assert_single_call_only": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.frontend.test_frontend.assert_single_call_only.wrapper": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.frontend.test_frontend.test_frontend_can_handle_service_initialization_segfaults": {
  "lineno": 196,
  "symbols_in_volume": [
   "mock.ANY",
   "mock.Mock",
   "mock.patch",
   "pytest.raises"
  ],
  "type": "function"
 },
 "workflows.frontend.test_frontend.test_frontend_can_handle_unhandled_service_initialization_exceptions": {
  "lineno": 169,
  "symbols_in_volume": [
   "mock.Mock",
   "pytest.mark.timeout",
   "pytest.raises",
   "workflows.services.common_service.CommonService.SERVICE_STATUS_END",
   "workflows.services.common_service.CommonService.SERVICE_STATUS_ERROR",
   "workflows.services.common_service.CommonService.SERVICE_STATUS_NEW",
   "workflows.services.common_service.CommonService.SERVICE_STATUS_STARTING"
  ],
  "type": "function"
 },
 "workflows.frontend.test_frontend.test_frontend_connects_to_transport_layer": {
  "lineno": 65,
  "symbols_in_volume": [
   "mock.Mock",
   "mock.patch"
  ],
  "type": "function"
 },
 "workflows.frontend.test_frontend.test_frontend_does_not_restart_nonrestartable_service_on_error": {
  "lineno": 464,
  "symbols_in_volume": [
   "mock.Mock",
   "mock.patch",
   "pytest.raises",
   "workflows.services.common_service.CommonService.SERVICE_STATUS_ERROR",
   "workflows.services.common_service.CommonService.SERVICE_STATUS_NEW",
   "workflows.services.common_service.CommonService.SERVICE_STATUS_PROCESSING",
   "workflows.services.common_service.CommonService.SERVICE_STATUS_STARTING"
  ],
  "type": "function"
 },
 "workflows.frontend.test_frontend.test_frontend_does_not_restart_nonrestartable_service_on_segfault": {
  "lineno": 435,
  "symbols_in_volume": [
   "mock.ANY",
   "mock.Mock",
   "mock.patch",
   "pytest.raises"
  ],
  "type": "function"
 },
 "workflows.frontend.test_frontend.test_frontend_does_restart_restartable_service_on_error": {
  "lineno": 549,
  "symbols_in_volume": [
   "mock.ANY",
   "mock.Mock",
   "mock.call",
   "mock.patch"
  ],
  "type": "function"
 },
 "workflows.frontend.test_frontend.test_frontend_does_restart_restartable_service_on_error.pipe_creator": {
  "lineno": 559,
  "symbols_in_volume": [
   "workflows.services.common_service.CommonService.SERVICE_STATUS_ERROR",
   "workflows.services.common_service.CommonService.SERVICE_STATUS_NEW",
   "workflows.services.common_service.CommonService.SERVICE_STATUS_PROCESSING",
   "workflows.services.common_service.CommonService.SERVICE_STATUS_STARTING"
  ],
  "type": "function"
 },
 "workflows.frontend.test_frontend.test_frontend_does_restart_restartable_service_on_segfault": {
  "lineno": 502,
  "symbols_in_volume": [
   "mock.ANY",
   "mock.Mock",
   "mock.call",
   "mock.patch",
   "pytest.raises"
  ],
  "type": "function"
 },
 "workflows.frontend.test_frontend.test_frontend_parses_status_updates": {
  "lineno": 250,
  "symbols_in_volume": [
   "mock.Mock",
   "mock.patch",
   "workflows.services.common_service.CommonService.SERVICE_STATUS_END",
   "workflows.services.common_service.CommonService.SERVICE_STATUS_NEW",
   "workflows.services.common_service.CommonService.SERVICE_STATUS_PROCESSING",
   "workflows.services.common_service.CommonService.SERVICE_STATUS_SHUTDOWN",
   "workflows.services.common_service.CommonService.SERVICE_STATUS_STARTING",
   "workflows.services.common_service.CommonService.SERVICE_STATUS_TEARDOWN"
  ],
  "type": "function"
 },
 "workflows.frontend.test_frontend.test_frontend_parses_status_updates.intercept": {
  "lineno": 283,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.frontend.test_frontend.test_frontend_parses_termination_requests": {
  "lineno": 304,
  "symbols_in_volume": [
   "mock.Mock",
   "mock.patch",
   "workflows.services.common_service.CommonService.SERVICE_STATUS_END",
   "workflows.services.common_service.CommonService.SERVICE_STATUS_NEW",
   "workflows.services.common_service.CommonService.SERVICE_STATUS_PROCESSING",
   "workflows.services.common_service.CommonService.SERVICE_STATUS_STARTING",
   "workflows.services.common_service.CommonService.SERVICE_STATUS_TEARDOWN"
  ],
  "type": "function"
 },
 "workflows.frontend.test_frontend.test_frontend_parses_termination_requests.intercept": {
  "lineno": 334,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.frontend.test_frontend.test_frontend_sends_status_updates": {
  "lineno": 353,
  "symbols_in_volume": [
   "mock.Mock",
   "mock.patch",
   "workflows.services.common_service.CommonService.SERVICE_STATUS_IDLE",
   "workflows.services.common_service.CommonService.SERVICE_STATUS_NONE",
   "workflows.services.common_service.CommonService.SERVICE_STATUS_PROCESSING",
   "workflows.services.common_service.CommonService.SERVICE_STATUS_STARTING"
  ],
  "type": "function"
 },
 "workflows.frontend.test_frontend.test_frontend_subscribes_to_command_channel": {
  "lineno": 83,
  "symbols_in_volume": [
   "mock.patch",
   "mock.sentinel.different_host",
   "mock.sentinel.different_service"
  ],
  "type": "function"
 },
 "workflows.frontend.test_frontend.test_frontend_subscribes_to_command_channel.frontend_with_message": {
  "lineno": 92,
  "symbols_in_volume": [
   "mock.ANY",
   "mock.sentinel.command"
  ],
  "type": "function"
 },
 "workflows.frontend.test_frontend.test_frontend_terminates_on_transport_disconnection": {
  "lineno": 220,
  "symbols_in_volume": [
   "mock.ANY",
   "mock.Mock",
   "mock.patch",
   "pytest.raises"
  ],
  "type": "function"
 },
 "workflows.frontend.test_frontend.test_get_frontend_status": {
  "lineno": 161,
  "symbols_in_volume": [
   "mock.patch"
  ],
  "type": "function"
 },
 "workflows.frontend.test_frontend.test_start_service_in_frontend": {
  "lineno": 131,
  "symbols_in_volume": [
   "mock.ANY",
   "mock.Mock",
   "mock.patch",
   "mock.sentinel.environment"
  ],
  "type": "function"
 },
 "workflows.frontend.test_utilization": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "workflows.frontend.test_utilization.about": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.frontend.test_utilization.about.Comparator": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "workflows.frontend.test_utilization.about.Comparator.__eq__": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.frontend.test_utilization.about.Comparator.__ge__": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.frontend.test_utilization.about.Comparator.__le__": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.frontend.test_utilization.about.Comparator.__ne__": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.frontend.test_utilization.about.Comparator.__repr__": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.frontend.test_utilization.test_get_empty_statistics_report": {
  "lineno": 45,
  "symbols_in_volume": [
   "workflows.services.common_service.Status.NEW.intval"
  ],
  "type": "function"
 },
 "workflows.frontend.test_utilization.test_near_equality_helper_class": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.frontend.test_utilization.test_statistics_report_contains_correctly_aggregated_information": {
  "lineno": 51,
  "symbols_in_volume": [
   "mock.patch",
   "workflows.services.common_service.Status.IDLE.intval",
   "workflows.services.common_service.Status.NEW.intval"
  ],
  "type": "function"
 },
 "workflows.frontend.utilization": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "workflows.frontend.utilization.UtilizationStatistics": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "workflows.frontend.utilization.UtilizationStatistics.__init__": {
  "lineno": 10,
  "symbols_in_volume": [
   "workflows.services.common_service.CommonService.SERVICE_STATUS_NEW"
  ],
  "type": "function"
 },
 "workflows.frontend.utilization.UtilizationStatistics.report": {
  "lineno": 26,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "workflows.frontend.utilization.UtilizationStatistics.update_status": {
  "lineno": 18,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "workflows.logging": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "workflows.logging.CallbackHandler": {
  "lineno": 28,
  "symbols_in_volume": [
   "logging.Handler"
  ],
  "type": "class"
 },
 "workflows.logging.CallbackHandler.__init__": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.logging.CallbackHandler.emit": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.logging.CallbackHandler.prepare": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.logging.get_exception_source": {
  "lineno": 7,
  "symbols_in_volume": [
   "linecache.checkcache",
   "linecache.getline",
   "sys.exc_info"
  ],
  "type": "function"
 },
 "workflows.logging.test_logging": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "workflows.logging.test_logging.test_callback_handler_works_within_logging_framework": {
  "lineno": 30,
  "symbols_in_volume": [
   "logging.INFO",
   "logging.LogRecord",
   "logging.getLogger",
   "mock.ANY",
   "mock.Mock"
  ],
  "type": "function"
 },
 "workflows.logging.test_logging.test_obtain_exception_source": {
  "lineno": 8,
  "symbols_in_volume": [
   "os.path.basename"
  ],
  "type": "function"
 },
 "workflows.logging.test_logging.test_obtain_exception_source.crashfunction": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.recipe": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "workflows.recipe._wrap_subscription": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.recipe._wrap_subscription.unwrap_recipe": {
  "lineno": 43,
  "symbols_in_volume": [
   "workflows.recipe.wrapper.RecipeWrapper"
  ],
  "type": "function"
 },
 "workflows.recipe.recipe": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "workflows.recipe.recipe.Recipe": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "workflows.recipe.recipe.Recipe.__contains__": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.recipe.recipe.Recipe.__eq__": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.recipe.recipe.Recipe.__getitem__": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.recipe.recipe.Recipe.__hash__": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.recipe.recipe.Recipe.__init__": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.recipe.recipe.Recipe.__ne__": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.recipe.recipe.Recipe._sanitize": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.recipe.recipe.Recipe.apply_parameters": {
  "lineno": 186,
  "symbols_in_volume": [
   "string.Formatter"
  ],
  "type": "function"
 },
 "workflows.recipe.recipe.Recipe.apply_parameters.SafeDict": {
  "lineno": 224,
  "symbols_in_volume": [],
  "type": "class"
 },
 "workflows.recipe.recipe.Recipe.apply_parameters.SafeDict.__missing__": {
  "lineno": 228,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.recipe.recipe.Recipe.apply_parameters.SafeString": {
  "lineno": 211,
  "symbols_in_volume": [],
  "type": "class"
 },
 "workflows.recipe.recipe.Recipe.apply_parameters.SafeString.__getitem__": {
  "lineno": 221,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.recipe.recipe.Recipe.apply_parameters.SafeString.__init__": {
  "lineno": 212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.recipe.recipe.Recipe.apply_parameters.SafeString.__repr__": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.recipe.recipe.Recipe.apply_parameters.SafeString.__str__": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.recipe.recipe.Recipe.apply_parameters._recursive_apply": {
  "lineno": 247,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "workflows.recipe.recipe.Recipe.apply_parameters.ds_format_field": {
  "lineno": 239,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.recipe.recipe.Recipe.deserialize": {
  "lineno": 26,
  "symbols_in_volume": [
   "json.loads",
   "string"
  ],
  "type": "function"
 },
 "workflows.recipe.recipe.Recipe.merge": {
  "lineno": 271,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.recipe.recipe.Recipe.merge.translate": {
  "lineno": 317,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.recipe.recipe.Recipe.pretty": {
  "lineno": 54,
  "symbols_in_volume": [
   "json.dumps"
  ],
  "type": "function"
 },
 "workflows.recipe.recipe.Recipe.serialize": {
  "lineno": 50,
  "symbols_in_volume": [
   "json.dumps"
  ],
  "type": "function"
 },
 "workflows.recipe.recipe.Recipe.validate": {
  "lineno": 87,
  "symbols_in_volume": [
   "workflows.Error"
  ],
  "type": "function"
 },
 "workflows.recipe.recipe.Recipe.validate.find_cycles": {
  "lineno": 150,
  "symbols_in_volume": [
   "workflows.Error"
  ],
  "type": "function"
 },
 "workflows.recipe.recipe.Recipe.validate.flatten_links": {
  "lineno": 129,
  "symbols_in_volume": [
   "workflows.Error"
  ],
  "type": "function"
 },
 "workflows.recipe.test_recipe": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "workflows.recipe.test_recipe.generate_recipes": {
  "lineno": 7,
  "symbols_in_volume": [
   "workflows.recipe.Recipe"
  ],
  "type": "function"
 },
 "workflows.recipe.test_recipe.generate_recipes.RecipeA": {
  "lineno": 10,
  "symbols_in_volume": [
   "workflows.recipe.Recipe"
  ],
  "type": "class"
 },
 "workflows.recipe.test_recipe.test_can_generate_recipe_objects": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.recipe.test_recipe.test_equality_and_inequality_operator": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.recipe.test_recipe.test_in_operator": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.recipe.test_recipe.test_merging_recipes": {
  "lineno": 324,
  "symbols_in_volume": [
   "mock.ANY",
   "workflows.recipe.Recipe"
  ],
  "type": "function"
 },
 "workflows.recipe.test_recipe.test_replacing_parameters_in_recipe": {
  "lineno": 247,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.recipe.test_recipe.test_replacing_parameters_in_recipe_should_keep_unknown_parameter_strings": {
  "lineno": 259,
  "symbols_in_volume": [
   "workflows.recipe.Recipe"
  ],
  "type": "function"
 },
 "workflows.recipe.test_recipe.test_replacing_parameters_in_recipe_with_datastructures": {
  "lineno": 280,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.recipe.test_recipe.test_serializing_and_deserializing_recipes": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.recipe.test_recipe.test_validate_tests_for_cycles": {
  "lineno": 226,
  "symbols_in_volume": [
   "pytest.raises",
   "workflows.Error"
  ],
  "type": "function"
 },
 "workflows.recipe.test_recipe.test_validate_tests_for_empty_recipe": {
  "lineno": 100,
  "symbols_in_volume": [
   "pytest.raises",
   "workflows.Error"
  ],
  "type": "function"
 },
 "workflows.recipe.test_recipe.test_validate_tests_for_invalid_links": {
  "lineno": 161,
  "symbols_in_volume": [
   "pytest.raises",
   "workflows.Error"
  ],
  "type": "function"
 },
 "workflows.recipe.test_recipe.test_validate_tests_for_invalid_nodes": {
  "lineno": 108,
  "symbols_in_volume": [
   "pytest.raises",
   "workflows.Error"
  ],
  "type": "function"
 },
 "workflows.recipe.test_validate": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "workflows.recipe.test_validate.test_command_line_validation_multiple_arguments": {
  "lineno": 111,
  "symbols_in_volume": [
   "mock.call",
   "mock.patch",
   "mock.patch.object",
   "sys",
   "workflows.recipe.validate.main"
  ],
  "type": "function"
 },
 "workflows.recipe.test_validate.test_command_line_validation_one_argument": {
  "lineno": 93,
  "symbols_in_volume": [
   "mock.patch",
   "mock.patch.object",
   "sys",
   "workflows.recipe.validate.main"
  ],
  "type": "function"
 },
 "workflows.recipe.test_validate.test_exit_when_command_line_validation_given_no_arguments": {
  "lineno": 102,
  "symbols_in_volume": [
   "mock.patch.object",
   "pytest.raises",
   "sys",
   "workflows.recipe.validate.main"
  ],
  "type": "function"
 },
 "workflows.recipe.test_validate.test_no_errors_when_validating_healthy_recipe": {
  "lineno": 19,
  "symbols_in_volume": [
   "workflows.recipe.validate.validate_recipe"
  ],
  "type": "function"
 },
 "workflows.recipe.test_validate.test_system_exit_when_error_raised_from_command_line_validation": {
  "lineno": 123,
  "symbols_in_volume": [
   "mock.patch",
   "mock.patch.object",
   "pytest.raises",
   "sys",
   "workflows.recipe.validate.main"
  ],
  "type": "function"
 },
 "workflows.recipe.test_validate.test_validate_returns_type_error_when_called_without_parameters": {
  "lineno": 14,
  "symbols_in_volume": [
   "pytest.raises",
   "workflows.recipe.validate.validate_recipe"
  ],
  "type": "function"
 },
 "workflows.recipe.test_validate.test_value_error_when_validating_bad_json": {
  "lineno": 43,
  "symbols_in_volume": [
   "json.JSONDecodeError",
   "pytest.raises",
   "workflows.recipe.validate.validate_recipe"
  ],
  "type": "function"
 },
 "workflows.recipe.test_validate.test_workflows_error_when_validating_incorrect_workflows_recipe": {
  "lineno": 69,
  "symbols_in_volume": [
   "pytest.raises",
   "workflows.Error",
   "workflows.recipe.validate.validate_recipe"
  ],
  "type": "function"
 },
 "workflows.recipe.test_wrap_subscription": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "workflows.recipe.test_wrap_subscription.check_message_handling_via_unwrapper": {
  "lineno": 6,
  "symbols_in_volume": [
   "mock.Mock",
   "mock.sentinel.GUID",
   "mock.sentinel.ID",
   "mock.sentinel.payload",
   "mock.sentinel.recipe",
   "mock.sentinel.recipe_pointer",
   "mock.sentinel.source",
   "mock.sentinel.timestamp"
  ],
  "type": "function"
 },
 "workflows.recipe.test_wrap_subscription.test_wrapping_a_broadcast_subscription": {
  "lineno": 110,
  "symbols_in_volume": [
   "mock.ANY",
   "mock.Mock",
   "mock.patch",
   "mock.sentinel.channel",
   "mock.sentinel.irrelevant_extra_arg",
   "mock.sentinel.keyword_arg",
   "workflows.recipe.wrap_subscribe_broadcast"
  ],
  "type": "function"
 },
 "workflows.recipe.test_wrap_subscription.test_wrapping_a_subscription": {
  "lineno": 59,
  "symbols_in_volume": [
   "mock.ANY",
   "mock.Mock",
   "mock.patch",
   "mock.sentinel.channel",
   "mock.sentinel.irrelevant_extra_arg",
   "mock.sentinel.keyword_arg",
   "workflows.recipe.wrap_subscribe"
  ],
  "type": "function"
 },
 "workflows.recipe.test_wrap_subscription.test_wrapping_a_subscription_allowing_non_recipe_messages": {
  "lineno": 88,
  "symbols_in_volume": [
   "mock.Mock",
   "mock.patch",
   "mock.sentinel.channel",
   "mock.sentinel.irrelevant_extra_arg",
   "mock.sentinel.keyword_arg",
   "workflows.recipe.wrap_subscribe"
  ],
  "type": "function"
 },
 "workflows.recipe.test_wrap_subscription.test_wrapping_a_subscription_with_log_extension": {
  "lineno": 139,
  "symbols_in_volume": [
   "mock.ANY",
   "mock.Mock",
   "mock.sentinel.GUID",
   "mock.sentinel.ID",
   "mock.sentinel.channel",
   "mock.sentinel.payload",
   "mock.sentinel.source",
   "mock.sentinel.timestamp",
   "workflows.recipe.wrap_subscribe"
  ],
  "type": "function"
 },
 "workflows.recipe.test_wrap_subscription.test_wrapping_a_subscription_with_log_extension.recipient": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.recipe.test_wrapped_recipe": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "workflows.recipe.test_wrapped_recipe.generate_recipe_message": {
  "lineno": 8,
  "symbols_in_volume": [
   "mock.sentinel.GUID",
   "mock.sentinel.initial_parameter",
   "mock.sentinel.payload",
   "mock.sentinel.source",
   "mock.sentinel.timestamp"
  ],
  "type": "function"
 },
 "workflows.recipe.test_wrapped_recipe.test_checkpointing_via_recipewrapper": {
  "lineno": 240,
  "symbols_in_volume": [
   "mock.Mock",
   "mock.call.broadcast",
   "mock.create_autospec",
   "mock.sentinel.checkpoint",
   "mock.sentinel.txn",
   "pytest.raises",
   "workflows.recipe.wrapper.RecipeWrapper",
   "workflows.transport.common_transport.CommonTransport"
  ],
  "type": "function"
 },
 "workflows.recipe.test_wrapped_recipe.test_checkpointing_via_recipewrapper.downstream_message": {
  "lineno": 249,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.recipe.test_wrapped_recipe.test_downstream_message_sending_via_recipewrapper_with_named_outputs": {
  "lineno": 98,
  "symbols_in_volume": [
   "mock.call.broadcast",
   "mock.call.send",
   "mock.create_autospec",
   "mock.sentinel.another_message_text",
   "mock.sentinel.message_text",
   "mock.sentinel.txn",
   "mock.sentinel.unnamed_output",
   "mock.sentinel.unnamed_output_with_default_name",
   "workflows.recipe.wrapper.RecipeWrapper",
   "workflows.transport.common_transport.CommonTransport"
  ],
  "type": "function"
 },
 "workflows.recipe.test_wrapped_recipe.test_downstream_message_sending_via_recipewrapper_with_named_outputs.downstream_message": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.recipe.test_wrapped_recipe.test_downstream_message_sending_via_recipewrapper_with_unnamed_output": {
  "lineno": 190,
  "symbols_in_volume": [
   "mock.call.broadcast",
   "mock.create_autospec",
   "mock.sentinel.payload",
   "mock.sentinel.test_default_named_output",
   "mock.sentinel.test_default_output",
   "mock.sentinel.test_unnamed_output",
   "workflows.recipe.wrapper.RecipeWrapper",
   "workflows.transport.common_transport.CommonTransport"
  ],
  "type": "function"
 },
 "workflows.recipe.test_wrapped_recipe.test_downstream_message_sending_via_recipewrapper_with_unnamed_output.downstream_message": {
  "lineno": 195,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.recipe.test_wrapped_recipe.test_parameter_replacement_in_recipe_wrapper": {
  "lineno": 333,
  "symbols_in_volume": [
   "mock.sentinel.payload",
   "workflows.recipe.Recipe",
   "workflows.recipe.wrapper.RecipeWrapper"
  ],
  "type": "function"
 },
 "workflows.recipe.test_wrapped_recipe.test_recipe_wrapper_empty_constructor_fails": {
  "lineno": 91,
  "symbols_in_volume": [
   "pytest.raises",
   "workflows.recipe.wrapper.RecipeWrapper"
  ],
  "type": "function"
 },
 "workflows.recipe.test_wrapped_recipe.test_recipe_wrapper_instantiated_from_message": {
  "lineno": 37,
  "symbols_in_volume": [
   "mock.sentinel.payload",
   "workflows.recipe.Recipe",
   "workflows.recipe.wrapper.RecipeWrapper"
  ],
  "type": "function"
 },
 "workflows.recipe.test_wrapped_recipe.test_recipe_wrapper_instantiated_from_message_with_string_conversion": {
  "lineno": 52,
  "symbols_in_volume": [
   "workflows.recipe.wrapper.RecipeWrapper"
  ],
  "type": "function"
 },
 "workflows.recipe.test_wrapped_recipe.test_recipe_wrapper_instantiated_from_recipe": {
  "lineno": 64,
  "symbols_in_volume": [
   "workflows.recipe.Recipe",
   "workflows.recipe.wrapper.RecipeWrapper"
  ],
  "type": "function"
 },
 "workflows.recipe.test_wrapped_recipe.test_start_command_via_recipewrapper": {
  "lineno": 292,
  "symbols_in_volume": [
   "mock.call.send",
   "mock.create_autospec",
   "mock.sentinel.environment",
   "mock.sentinel.txn",
   "pytest.raises",
   "workflows.recipe.wrapper.RecipeWrapper",
   "workflows.transport.common_transport.CommonTransport"
  ],
  "type": "function"
 },
 "workflows.recipe.test_wrapped_recipe.test_start_command_via_recipewrapper.downstream_message": {
  "lineno": 298,
  "symbols_in_volume": [
   "mock.sentinel.environment"
  ],
  "type": "function"
 },
 "workflows.recipe.validate": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "workflows.recipe.validate.main": {
  "lineno": 54,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "sys.exit"
  ],
  "type": "function"
 },
 "workflows.recipe.validate.validate_recipe": {
  "lineno": 27,
  "symbols_in_volume": [
   "json.JSONDecodeError",
   "logging.error",
   "logging.exception",
   "workflows.Error",
   "workflows.recipe.Recipe"
  ],
  "type": "function"
 },
 "workflows.recipe.wrap_subscribe": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.recipe.wrap_subscribe_broadcast": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.recipe.wrapper": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "workflows.recipe.wrapper.RecipeWrapper": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "class"
 },
 "workflows.recipe.wrapper.RecipeWrapper.__init__": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.recipe.wrapper.RecipeWrapper._generate_full_recipe_message": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.recipe.wrapper.RecipeWrapper._send_to_destination": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.recipe.wrapper.RecipeWrapper._send_to_destinations": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.recipe.wrapper.RecipeWrapper.apply_parameters": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.recipe.wrapper.RecipeWrapper.checkpoint": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.recipe.wrapper.RecipeWrapper.send": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.recipe.wrapper.RecipeWrapper.send_to": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.recipe.wrapper.RecipeWrapper.set_default_channel": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.recipe.wrapper.RecipeWrapper.start": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.services": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "workflows.services.common_service": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "workflows.services.common_service.Commands": {
  "lineno": 470,
  "symbols_in_volume": [],
  "type": "class"
 },
 "workflows.services.common_service.CommonService": {
  "lineno": 69,
  "symbols_in_volume": [
   "logging.INFO"
  ],
  "type": "class"
 },
 "workflows.services.common_service.CommonService.__command_queue_listener": {
  "lineno": 226,
  "symbols_in_volume": [
   "itertools.count",
   "queue.Full"
  ],
  "type": "function"
 },
 "workflows.services.common_service.CommonService.__init__": {
  "lineno": 131,
  "symbols_in_volume": [
   "logging.getLogger",
   "queue.PriorityQueue"
  ],
  "type": "function"
 },
 "workflows.services.common_service.CommonService.__process_command": {
  "lineno": 464,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.services.common_service.CommonService.__send_service_status_to_frontend": {
  "lineno": 300,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.services.common_service.CommonService.__send_to_frontend": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.services.common_service.CommonService.__start_command_queue_listener": {
  "lineno": 261,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.services.common_service.CommonService.__start_command_queue_listener.QueueListenerThread": {
  "lineno": 267,
  "symbols_in_volume": [
   "threading.Thread"
  ],
  "type": "class"
 },
 "workflows.services.common_service.CommonService.__start_command_queue_listener.QueueListenerThread.run": {
  "lineno": 268,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.services.common_service.CommonService.__update_service_status": {
  "lineno": 294,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.services.common_service.CommonService._log_send": {
  "lineno": 278,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.services.common_service.CommonService._register": {
  "lineno": 284,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.services.common_service.CommonService._register_idle": {
  "lineno": 288,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.services.common_service.CommonService._request_termination": {
  "lineno": 315,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.services.common_service.CommonService._set_name": {
  "lineno": 310,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.services.common_service.CommonService._shutdown": {
  "lineno": 319,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.services.common_service.CommonService._transport_interceptor": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.services.common_service.CommonService._transport_interceptor.add_item_to_queue": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.services.common_service.CommonService.connect": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.services.common_service.CommonService.extend_log": {
  "lineno": 213,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "workflows.services.common_service.CommonService.get_name": {
  "lineno": 306,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.services.common_service.CommonService.in_shutdown": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.services.common_service.CommonService.initialize_logging": {
  "lineno": 323,
  "symbols_in_volume": [
   "logging.CRITICAL",
   "logging.DEBUG",
   "logging.Logger.manager.loggerDict.keys",
   "logging.StreamHandler",
   "logging.WARN",
   "logging.getLogger",
   "workflows.logging.CallbackHandler"
  ],
  "type": "function"
 },
 "workflows.services.common_service.CommonService.initializing": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.services.common_service.CommonService.process_uncaught_exception": {
  "lineno": 437,
  "symbols_in_volume": [
   "workflows.logging.get_exception_source"
  ],
  "type": "function"
 },
 "workflows.services.common_service.CommonService.start": {
  "lineno": 355,
  "symbols_in_volume": [
   "queue.Empty"
  ],
  "type": "function"
 },
 "workflows.services.common_service.CommonService.start_transport": {
  "lineno": 168,
  "symbols_in_volume": [
   "itertools.count"
  ],
  "type": "function"
 },
 "workflows.services.common_service.CommonService.transport": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.services.common_service.Priority": {
  "lineno": 57,
  "symbols_in_volume": [
   "enum.IntEnum"
  ],
  "type": "class"
 },
 "workflows.services.common_service.Status": {
  "lineno": 12,
  "symbols_in_volume": [
   "enum.Enum"
  ],
  "type": "class"
 },
 "workflows.services.common_service.Status.__init__": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.services.get_known_services": {
  "lineno": 12,
  "symbols_in_volume": [
   "pkg_resources.iter_entry_points"
  ],
  "type": "function"
 },
 "workflows.services.lookup": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.services.sample_consumer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "workflows.services.sample_consumer.SampleConsumer": {
  "lineno": 7,
  "symbols_in_volume": [
   "workflows.services.common_service.CommonService"
  ],
  "type": "class"
 },
 "workflows.services.sample_consumer.SampleConsumer.consume_message": {
  "lineno": 22,
  "symbols_in_volume": [
   "json.dumps",
   "time.sleep",
   "time.time"
  ],
  "type": "function"
 },
 "workflows.services.sample_consumer.SampleConsumer.initializing": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.services.sample_producer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "workflows.services.sample_producer.SampleProducer": {
  "lineno": 6,
  "symbols_in_volume": [
   "workflows.services.common_service.CommonService"
  ],
  "type": "class"
 },
 "workflows.services.sample_producer.SampleProducer.create_message": {
  "lineno": 27,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "workflows.services.sample_producer.SampleProducer.initializing": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.services.sample_transaction": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "workflows.services.sample_transaction.SampleTxn": {
  "lineno": 7,
  "symbols_in_volume": [
   "workflows.services.common_service.CommonService"
  ],
  "type": "class"
 },
 "workflows.services.sample_transaction.SampleTxn.crashpoint": {
  "lineno": 23,
  "symbols_in_volume": [
   "random.uniform"
  ],
  "type": "function"
 },
 "workflows.services.sample_transaction.SampleTxn.initializing": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.services.sample_transaction.SampleTxn.receive_message": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.services.sample_transaction.SampleTxnProducer": {
  "lineno": 66,
  "symbols_in_volume": [
   "workflows.services.common_service.CommonService"
  ],
  "type": "class"
 },
 "workflows.services.sample_transaction.SampleTxnProducer.create_message": {
  "lineno": 83,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "workflows.services.sample_transaction.SampleTxnProducer.initializing": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.services.test_common_service": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "workflows.services.test_common_service.test_adding_fieldvalue_pairs_to_log_messages": {
  "lineno": 37,
  "symbols_in_volume": [
   "mock.Mock",
   "mock.sentinel.NA",
   "workflows.services.common_service.CommonService"
  ],
  "type": "function"
 },
 "workflows.services.test_common_service.test_callbacks_are_routed_correctly": {
  "lineno": 285,
  "symbols_in_volume": [
   "mock.Mock",
   "mock.sentinel.band",
   "mock.sentinel.payload",
   "multiprocessing.Pipe",
   "workflows.services.common_service.Commands.SHUTDOWN",
   "workflows.services.common_service.CommonService"
  ],
  "type": "function"
 },
 "workflows.services.test_common_service.test_can_pass_environment_to_service": {
  "lineno": 429,
  "symbols_in_volume": [
   "mock.Mock",
   "mock.sentinel.environment"
  ],
  "type": "function"
 },
 "workflows.services.test_common_service.test_can_pass_environment_to_service.EnvironmentPassingService": {
  "lineno": 433,
  "symbols_in_volume": [
   "workflows.services.common_service.CommonService"
  ],
  "type": "class"
 },
 "workflows.services.test_common_service.test_can_pass_environment_to_service.EnvironmentPassingService.get_environment": {
  "lineno": 439,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.services.test_common_service.test_commands_are_processed_from_main_queue_before_transport": {
  "lineno": 532,
  "symbols_in_volume": [
   "mock.Mock",
   "multiprocessing.Pipe",
   "workflows.services.common_service.Commands.SHUTDOWN",
   "workflows.services.common_service.CommonService",
   "workflows.services.common_service.Priority.COMMAND",
   "workflows.services.common_service.Priority.TRANSPORT"
  ],
  "type": "function"
 },
 "workflows.services.test_common_service.test_idle_timer_is_triggered": {
  "lineno": 237,
  "symbols_in_volume": [
   "mock.Mock",
   "mock.sentinel.idle_time",
   "multiprocessing.Pipe",
   "queue.Empty",
   "workflows.services.common_service.Commands.SHUTDOWN",
   "workflows.services.common_service.CommonService",
   "workflows.services.common_service.Priority.COMMAND"
  ],
  "type": "function"
 },
 "workflows.services.test_common_service.test_instantiate_basic_service": {
  "lineno": 9,
  "symbols_in_volume": [
   "workflows.services.common_service.CommonService"
  ],
  "type": "function"
 },
 "workflows.services.test_common_service.test_log_message_fieldvalue_pairs_are_attached_to_unhandled_exceptions_and_logged_properly": {
  "lineno": 119,
  "symbols_in_volume": [
   "mock.Mock",
   "mock.sentinel.NA",
   "pprint.pprint",
   "workflows.services.common_service.CommonService"
  ],
  "type": "function"
 },
 "workflows.services.test_common_service.test_log_message_fieldvalue_pairs_are_removed_outside_their_context": {
  "lineno": 80,
  "symbols_in_volume": [
   "mock.Mock",
   "mock.sentinel.NA",
   "mock.sentinel.trace",
   "workflows.services.common_service.CommonService"
  ],
  "type": "function"
 },
 "workflows.services.test_common_service.test_log_unknown_band_data": {
  "lineno": 309,
  "symbols_in_volume": [
   "mock.Mock",
   "mock.sentinel.band",
   "mock.sentinel.failure1",
   "mock.sentinel.failure2",
   "multiprocessing.Pipe",
   "workflows.services.common_service.Commands.SHUTDOWN",
   "workflows.services.common_service.CommonService"
  ],
  "type": "function"
 },
 "workflows.services.test_common_service.test_logging_to_frontend": {
  "lineno": 16,
  "symbols_in_volume": [
   "mock.ANY",
   "mock.Mock",
   "mock.sentinel.logmessage",
   "workflows.services.common_service.CommonService"
  ],
  "type": "function"
 },
 "workflows.services.test_common_service.test_main_queue_can_deal_with_being_empty": {
  "lineno": 493,
  "symbols_in_volume": [
   "mock.Mock",
   "multiprocessing.Pipe",
   "workflows.services.common_service.Commands.SHUTDOWN",
   "workflows.services.common_service.CommonService",
   "workflows.services.common_service.Priority.COMMAND"
  ],
  "type": "function"
 },
 "workflows.services.test_common_service.test_observe_shutdown_command": {
  "lineno": 187,
  "symbols_in_volume": [
   "mock.Mock",
   "multiprocessing.Pipe",
   "workflows.services.common_service.Commands.SHUTDOWN",
   "workflows.services.common_service.CommonService",
   "workflows.services.common_service.Priority.COMMAND"
  ],
  "type": "function"
 },
 "workflows.services.test_common_service.test_receive_frontend_commands": {
  "lineno": 148,
  "symbols_in_volume": [
   "mock.ANY",
   "mock.Mock",
   "mock.call",
   "mock.patch",
   "mock.sentinel.msg1",
   "mock.sentinel.msg2",
   "workflows.services.common_service.CommonService",
   "workflows.services.common_service.Priority.COMMAND"
  ],
  "type": "function"
 },
 "workflows.services.test_common_service.test_service_can_change_name_and_shut_itself_down": {
  "lineno": 386,
  "symbols_in_volume": [
   "mock.Mock",
   "mock.sentinel.newname"
  ],
  "type": "function"
 },
 "workflows.services.test_common_service.test_service_can_change_name_and_shut_itself_down.NameChangingService": {
  "lineno": 390,
  "symbols_in_volume": [
   "workflows.services.common_service.CommonService"
  ],
  "type": "class"
 },
 "workflows.services.test_common_service.test_service_can_change_name_and_shut_itself_down.NameChangingService.initializing": {
  "lineno": 393,
  "symbols_in_volume": [
   "mock.sentinel.newname"
  ],
  "type": "function"
 },
 "workflows.services.test_common_service.test_service_can_mark_itself_as_unstable": {
  "lineno": 410,
  "symbols_in_volume": [
   "mock.Mock"
  ],
  "type": "function"
 },
 "workflows.services.test_common_service.test_service_can_mark_itself_as_unstable.UnstableService": {
  "lineno": 414,
  "symbols_in_volume": [
   "workflows.services.common_service.CommonService"
  ],
  "type": "class"
 },
 "workflows.services.test_common_service.test_service_can_mark_itself_as_unstable.UnstableService.initializing": {
  "lineno": 417,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.services.test_common_service.test_service_initialization_crashes_are_handled_correctly": {
  "lineno": 342,
  "symbols_in_volume": [
   "mock.ANY",
   "mock.Mock"
  ],
  "type": "function"
 },
 "workflows.services.test_common_service.test_service_initialization_crashes_are_handled_correctly.CrashOnInitService": {
  "lineno": 346,
  "symbols_in_volume": [
   "workflows.services.common_service.CommonService"
  ],
  "type": "class"
 },
 "workflows.services.test_common_service.test_service_initialization_crashes_are_handled_correctly.CrashOnInitService.initializing": {
  "lineno": 353,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.services.test_common_service.test_transport_callbacks_are_processed_from_main_queue": {
  "lineno": 574,
  "symbols_in_volume": [
   "mock.Mock",
   "mock.sentinel.header",
   "mock.sentinel.message",
   "multiprocessing.Pipe",
   "workflows.services.common_service.Commands.SHUTDOWN",
   "workflows.services.common_service.CommonService",
   "workflows.services.common_service.Priority.COMMAND",
   "workflows.services.common_service.Priority.TRANSPORT"
  ],
  "type": "function"
 },
 "workflows.services.test_common_service.test_transport_connection_is_started_on_initialization": {
  "lineno": 482,
  "symbols_in_volume": [
   "mock.Mock",
   "workflows.services.common_service.CommonService"
  ],
  "type": "function"
 },
 "workflows.services.test_common_service.test_transport_object_can_be_injected": {
  "lineno": 458,
  "symbols_in_volume": [
   "mock.Mock",
   "workflows.services.common_service.CommonService"
  ],
  "type": "function"
 },
 "workflows.services.test_common_service.test_transport_object_can_not_be_overwritten": {
  "lineno": 469,
  "symbols_in_volume": [
   "mock.Mock",
   "pytest.raises",
   "workflows.services.common_service.CommonService"
  ],
  "type": "function"
 },
 "workflows.services.test_sample_service_consumer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "workflows.services.test_sample_service_consumer.test_service_can_be_looked_up": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.services.test_sample_service_consumer.test_service_can_consume_messages": {
  "lineno": 23,
  "symbols_in_volume": [
   "mock.sentinel.message"
  ],
  "type": "function"
 },
 "workflows.services.test_sample_service_consumer.test_service_subscribes_to_channel": {
  "lineno": 12,
  "symbols_in_volume": [
   "mock.ANY",
   "mock.Mock"
  ],
  "type": "function"
 },
 "workflows.services.test_sample_service_producer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "workflows.services.test_sample_service_producer.test_service_can_be_looked_up": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.services.test_sample_service_producer.test_service_produces_messages": {
  "lineno": 23,
  "symbols_in_volume": [
   "mock.Mock"
  ],
  "type": "function"
 },
 "workflows.services.test_sample_service_producer.test_service_registers_idle_timer": {
  "lineno": 12,
  "symbols_in_volume": [
   "mock.ANY",
   "mock.Mock"
  ],
  "type": "function"
 },
 "workflows.services.test_sample_service_transaction": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "workflows.services.test_sample_service_transaction.setup_txnservice": {
  "lineno": 66,
  "symbols_in_volume": [
   "mock.Mock",
   "mock.sentinel.message",
   "mock.sentinel.message_id",
   "mock.sentinel.subid",
   "mock.sentinel.txn"
  ],
  "type": "function"
 },
 "workflows.services.test_sample_service_transaction.test_services_can_be_looked_up": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.services.test_sample_service_transaction.test_txnproducer_produces_messages": {
  "lineno": 25,
  "symbols_in_volume": [
   "mock.Mock"
  ],
  "type": "function"
 },
 "workflows.services.test_sample_service_transaction.test_txnproducer_registers_idle_timer": {
  "lineno": 14,
  "symbols_in_volume": [
   "mock.ANY",
   "mock.Mock"
  ],
  "type": "function"
 },
 "workflows.services.test_sample_service_transaction.test_txnservice_crash_function_crashes_sometimes": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.services.test_sample_service_transaction.test_txnservice_subscribes_to_channel": {
  "lineno": 45,
  "symbols_in_volume": [
   "mock.ANY",
   "mock.Mock"
  ],
  "type": "function"
 },
 "workflows.services.test_sample_service_transaction.test_txnservice_uses_transactions_correctly": {
  "lineno": 84,
  "symbols_in_volume": [
   "mock.ANY",
   "mock.sentinel.message",
   "mock.sentinel.message_id",
   "mock.sentinel.subid",
   "mock.sentinel.txn"
  ],
  "type": "function"
 },
 "workflows.services.test_services": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "workflows.services.test_services.test_known_services_is_a_dictionary": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.test_basics": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "workflows.test_basics.test_workflows_version_returns_sensible_value": {
  "lineno": 4,
  "symbols_in_volume": [
   "workflows.version"
  ],
  "type": "function"
 },
 "workflows.transport": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "workflows.transport.add_command_line_options": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.transport.common_transport": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "workflows.transport.common_transport.CommonTransport": {
  "lineno": 6,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "class"
 },
 "workflows.transport.common_transport.CommonTransport._ack": {
  "lineno": 379,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport._broadcast": {
  "lineno": 366,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport._mangle_for_receiving": {
  "lineno": 441,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport._mangle_for_sending": {
  "lineno": 435,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport._nack": {
  "lineno": 391,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport._send": {
  "lineno": 353,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport._subscribe": {
  "lineno": 322,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport._subscribe_broadcast": {
  "lineno": 335,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport._transaction_abort": {
  "lineno": 411,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport._transaction_begin": {
  "lineno": 403,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport._transaction_commit": {
  "lineno": 419,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport._unsubscribe": {
  "lineno": 346,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport.ack": {
  "lineno": 229,
  "symbols_in_volume": [
   "workflows.Error"
  ],
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport.broadcast": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport.connect": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport.disconnect": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport.drop_callback_reference": {
  "lineno": 95,
  "symbols_in_volume": [
   "workflows.Error"
  ],
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport.is_connected": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport.nack": {
  "lineno": 258,
  "symbols_in_volume": [
   "workflows.Error"
  ],
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport.raw_broadcast": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport.raw_send": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport.send": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport.subscribe": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport.subscribe.mangled_callback": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport.subscribe_broadcast": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport.subscribe_broadcast.mangled_callback": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport.subscription_callback": {
  "lineno": 147,
  "symbols_in_volume": [
   "workflows.Error"
  ],
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport.subscription_callback_set_intercept": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport.transaction_abort": {
  "lineno": 296,
  "symbols_in_volume": [
   "workflows.Error"
  ],
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport.transaction_begin": {
  "lineno": 285,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport.transaction_commit": {
  "lineno": 307,
  "symbols_in_volume": [
   "workflows.Error"
  ],
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport.unsubscribe": {
  "lineno": 73,
  "symbols_in_volume": [
   "workflows.Error"
  ],
  "type": "function"
 },
 "workflows.transport.get_known_transports": {
  "lineno": 19,
  "symbols_in_volume": [
   "pkg_resources.iter_entry_points"
  ],
  "type": "function"
 },
 "workflows.transport.lookup": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.transport.stomp_transport": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "workflows.transport.stomp_transport.StompTransport": {
  "lineno": 11,
  "symbols_in_volume": [
   "workflows.transport.common_transport.CommonTransport"
  ],
  "type": "class"
 },
 "workflows.transport.stomp_transport.StompTransport.__init__": {
  "lineno": 26,
  "symbols_in_volume": [
   "stomp.listener.ConnectionListener",
   "threading.RLock"
  ],
  "type": "function"
 },
 "workflows.transport.stomp_transport.StompTransport._ack": {
  "lineno": 443,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.transport.stomp_transport.StompTransport._broadcast": {
  "lineno": 392,
  "symbols_in_volume": [
   "stomp.exception.NotConnectedException",
   "time.time"
  ],
  "type": "function"
 },
 "workflows.transport.stomp_transport.StompTransport._mangle_for_receiving": {
  "lineno": 473,
  "symbols_in_volume": [
   "json.loads"
  ],
  "type": "function"
 },
 "workflows.transport.stomp_transport.StompTransport._mangle_for_sending": {
  "lineno": 465,
  "symbols_in_volume": [
   "json.dumps"
  ],
  "type": "function"
 },
 "workflows.transport.stomp_transport.StompTransport._nack": {
  "lineno": 454,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.transport.stomp_transport.StompTransport._on_message": {
  "lineno": 488,
  "symbols_in_volume": [
   "workflows.Error"
  ],
  "type": "function"
 },
 "workflows.transport.stomp_transport.StompTransport._send": {
  "lineno": 356,
  "symbols_in_volume": [
   "stomp.exception.NotConnectedException",
   "time.time",
   "workflows.Disconnected"
  ],
  "type": "function"
 },
 "workflows.transport.stomp_transport.StompTransport._subscribe": {
  "lineno": 281,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.transport.stomp_transport.StompTransport._subscribe_broadcast": {
  "lineno": 324,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.transport.stomp_transport.StompTransport._transaction_abort": {
  "lineno": 429,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.transport.stomp_transport.StompTransport._transaction_begin": {
  "lineno": 422,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.transport.stomp_transport.StompTransport._transaction_commit": {
  "lineno": 436,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.transport.stomp_transport.StompTransport._unsubscribe": {
  "lineno": 349,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.transport.stomp_transport.StompTransport.add_command_line_options": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.transport.stomp_transport.StompTransport.add_command_line_options_argparse": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.transport.stomp_transport.StompTransport.add_command_line_options_argparse.SetParameter": {
  "lineno": 76,
  "symbols_in_volume": [
   "argparse.Action"
  ],
  "type": "class"
 },
 "workflows.transport.stomp_transport.StompTransport.add_command_line_options_argparse.SetParameter.__call__": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.transport.stomp_transport.StompTransport.add_command_line_options_optparse": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.transport.stomp_transport.StompTransport.add_command_line_options_optparse.set_parameter": {
  "lineno": 138,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.transport.stomp_transport.StompTransport.broadcast_status": {
  "lineno": 273,
  "symbols_in_volume": [
   "json.dumps",
   "time.time"
  ],
  "type": "function"
 },
 "workflows.transport.stomp_transport.StompTransport.connect": {
  "lineno": 205,
  "symbols_in_volume": [
   "stomp.Connection",
   "stomp.exception.ConnectFailedException",
   "threading.Event",
   "time.sleep",
   "time.time",
   "workflows.Disconnected"
  ],
  "type": "function"
 },
 "workflows.transport.stomp_transport.StompTransport.disconnect": {
  "lineno": 267,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.transport.stomp_transport.StompTransport.get_namespace": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.transport.stomp_transport.StompTransport.is_connected": {
  "lineno": 262,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.transport.stomp_transport.StompTransport.load_configuration_file": {
  "lineno": 43,
  "symbols_in_volume": [
   "configparser.ConfigParser",
   "configparser.NoOptionError",
   "workflows.Error"
  ],
  "type": "function"
 },
 "workflows.transport.test_common_transport": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "workflows.transport.test_common_transport.test_broadcast_subscription_messages_pass_mangling_function": {
  "lineno": 120,
  "symbols_in_volume": [
   "mock.Mock",
   "mock.sentinel.channel",
   "mock.sentinel.header",
   "mock.sentinel.message",
   "workflows.transport.common_transport.CommonTransport"
  ],
  "type": "function"
 },
 "workflows.transport.test_common_transport.test_callbacks_can_be_intercepted": {
  "lineno": 133,
  "symbols_in_volume": [
   "mock.ANY",
   "mock.Mock",
   "mock.sentinel.channel",
   "mock.sentinel.header",
   "mock.sentinel.message",
   "pytest.mark.parametrize",
   "workflows.transport.common_transport.CommonTransport"
  ],
  "type": "function"
 },
 "workflows.transport.test_common_transport.test_create_and_destroy_transactions": {
  "lineno": 239,
  "symbols_in_volume": [
   "mock.Mock",
   "pytest.raises",
   "workflows.Error",
   "workflows.transport.common_transport.CommonTransport"
  ],
  "type": "function"
 },
 "workflows.transport.test_common_transport.test_messages_can_be_acknowledged_and_rejected": {
  "lineno": 265,
  "symbols_in_volume": [
   "mock.Mock",
   "mock.sentinel.crash",
   "mock.sentinel.message_id1",
   "mock.sentinel.message_id2",
   "mock.sentinel.message_id3",
   "mock.sentinel.message_id4",
   "mock.sentinel.message_id5",
   "mock.sentinel.message_id6",
   "mock.sentinel.subscription_id1",
   "mock.sentinel.subscription_id2",
   "mock.sentinel.subscription_id3",
   "mock.sentinel.subscription_id4",
   "mock.sentinel.subscription_id5",
   "mock.sentinel.subscription_id6",
   "pytest.raises",
   "workflows.Error",
   "workflows.transport.common_transport.CommonTransport"
  ],
  "type": "function"
 },
 "workflows.transport.test_common_transport.test_simple_broadcast_message": {
  "lineno": 212,
  "symbols_in_volume": [
   "mock.Mock",
   "mock.sentinel.destination",
   "mock.sentinel.expiration",
   "mock.sentinel.headers",
   "mock.sentinel.message",
   "mock.sentinel.transaction",
   "workflows.transport.common_transport.CommonTransport"
  ],
  "type": "function"
 },
 "workflows.transport.test_common_transport.test_simple_send_message": {
  "lineno": 184,
  "symbols_in_volume": [
   "mock.Mock",
   "mock.sentinel.destination",
   "mock.sentinel.expiration",
   "mock.sentinel.headers",
   "mock.sentinel.message",
   "mock.sentinel.something",
   "mock.sentinel.transaction",
   "workflows.transport.common_transport.CommonTransport"
  ],
  "type": "function"
 },
 "workflows.transport.test_common_transport.test_simple_subscribe_unsubscribe_a_broadcast": {
  "lineno": 73,
  "symbols_in_volume": [
   "mock.ANY",
   "mock.Mock",
   "mock.sentinel.channel",
   "mock.sentinel.header",
   "mock.sentinel.message",
   "mock.sentinel.retro",
   "pytest.raises",
   "workflows.Error",
   "workflows.transport.common_transport.CommonTransport"
  ],
  "type": "function"
 },
 "workflows.transport.test_common_transport.test_subscribe_unsubscribe_a_channel": {
  "lineno": 7,
  "symbols_in_volume": [
   "mock.ANY",
   "mock.Mock",
   "mock.sentinel.ack",
   "mock.sentinel.channel",
   "mock.sentinel.exclusive",
   "mock.sentinel.header",
   "mock.sentinel.message",
   "pytest.raises",
   "workflows.Error",
   "workflows.transport.common_transport.CommonTransport"
  ],
  "type": "function"
 },
 "workflows.transport.test_common_transport.test_subscription_messages_pass_mangling_function": {
  "lineno": 60,
  "symbols_in_volume": [
   "mock.Mock",
   "mock.sentinel.channel",
   "mock.sentinel.header",
   "mock.sentinel.message",
   "workflows.transport.common_transport.CommonTransport"
  ],
  "type": "function"
 },
 "workflows.transport.test_common_transport.test_unimplemented_communication_methods_should_fail": {
  "lineno": 313,
  "symbols_in_volume": [
   "mock.Mock",
   "pytest.raises",
   "workflows.transport.common_transport.CommonTransport"
  ],
  "type": "function"
 },
 "workflows.transport.test_stomp_transport": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "workflows.transport.test_stomp_transport.test_ack_message": {
  "lineno": 611,
  "symbols_in_volume": [
   "mock.patch",
   "mock.sentinel.channel3",
   "mock.sentinel.messageid",
   "mock.sentinel.txn",
   "stomp",
   "stomp._ack",
   "stomp._subscribe",
   "stomp.connect",
   "workflows.transport.stomp_transport.StompTransport"
  ],
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_add_command_line_help_argparse": {
  "lineno": 38,
  "symbols_in_volume": [
   "inspect.isclass",
   "mock.MagicMock",
   "mock.Mock",
   "workflows.transport.stomp_transport.StompTransport"
  ],
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_add_command_line_help_optparse": {
  "lineno": 25,
  "symbols_in_volume": [
   "mock.MagicMock",
   "workflows.transport.stomp_transport.StompTransport"
  ],
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_adding_arguments_to_argparser": {
  "lineno": 52,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "workflows.transport.stomp_transport.StompTransport"
  ],
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_anonymous_connection": {
  "lineno": 121,
  "symbols_in_volume": [
   "imp.reload",
   "mock.Mock",
   "mock.patch",
   "optparse.OptionParser",
   "stomp",
   "stomp.add_command_line_options",
   "stomp.connect",
   "workflows.transport.stomp_transport",
   "workflows.transport.stomp_transport.StompTransport"
  ],
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_broadcast_status": {
  "lineno": 195,
  "symbols_in_volume": [
   "json.loads",
   "mock.patch",
   "mock.sentinel.status",
   "stomp",
   "stomp.broadcast_status",
   "stomp.connect",
   "workflows.transport.stomp_transport.StompTransport"
  ],
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_broadcasting_message_with_expiration": {
  "lineno": 312,
  "symbols_in_volume": [
   "mock.patch",
   "mock.sentinel.channel",
   "mock.sentinel.message",
   "stomp",
   "stomp._broadcast",
   "stomp.connect",
   "workflows.transport.stomp_transport.StompTransport"
  ],
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_check_config_file_behaviour": {
  "lineno": 65,
  "symbols_in_volume": [
   "imp.reload",
   "mock.Mock",
   "mock.patch",
   "mock.sentinel.user",
   "optparse.OptionParser",
   "os.remove",
   "pytest.raises",
   "stomp",
   "stomp.add_command_line_options",
   "stomp.connect",
   "stomp.get_namespace",
   "tempfile.NamedTemporaryFile",
   "workflows.Error",
   "workflows.transport.stomp_transport",
   "workflows.transport.stomp_transport.StompTransport"
  ],
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_error_handling_on_broadcast": {
  "lineno": 333,
  "symbols_in_volume": [
   "mock.patch",
   "mock.sentinel.channel",
   "mock.sentinel.message",
   "pytest.raises",
   "stomp",
   "stomp._broadcast",
   "stomp.connect",
   "stomp.exception",
   "stomp.exception.NotConnectedException",
   "stomp.is_connected",
   "workflows.transport.stomp_transport.StompTransport"
  ],
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_error_handling_on_send": {
  "lineno": 269,
  "symbols_in_volume": [
   "mock.patch",
   "mock.sentinel.channel",
   "mock.sentinel.message",
   "pytest.raises",
   "stomp",
   "stomp._send",
   "stomp.connect",
   "stomp.exception",
   "stomp.exception.NotConnectedException",
   "stomp.is_connected",
   "workflows.Disconnected",
   "workflows.transport.stomp_transport.StompTransport"
  ],
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_error_handling_when_connecting_to_broker": {
  "lineno": 179,
  "symbols_in_volume": [
   "mock.patch",
   "pytest.raises",
   "stomp",
   "stomp.connect",
   "stomp.exception.ConnectFailedException",
   "stomp.is_connected",
   "workflows.Disconnected",
   "workflows.transport.stomp_transport.StompTransport"
  ],
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_instantiate_link_and_connect_to_broker": {
  "lineno": 144,
  "symbols_in_volume": [
   "mock.patch",
   "stomp",
   "stomp.connect",
   "stomp.disconnect",
   "stomp.is_connected",
   "workflows.transport.stomp_transport.StompTransport"
  ],
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_lookup_and_initialize_stomp_transport_layer": {
  "lineno": 17,
  "symbols_in_volume": [
   "stomp",
   "workflows.transport.lookup",
   "workflows.transport.stomp_transport.StompTransport"
  ],
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_messages_are_deserialized_after_transport": {
  "lineno": 398,
  "symbols_in_volume": [
   "mock.Mock",
   "mock.patch",
   "mock.sentinel.undeserializable",
   "stomp",
   "stomp.connect",
   "stomp.subscribe",
   "stomp.subscribe_broadcast",
   "workflows.transport.stomp_transport.StompTransport"
  ],
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_messages_are_not_serialized_for_raw_transport": {
  "lineno": 369,
  "symbols_in_volume": [
   "mock.patch",
   "mock.sentinel.channel",
   "mock.sentinel.channel1",
   "mock.sentinel.channel2",
   "mock.sentinel.unserializable",
   "stomp",
   "stomp.connect",
   "stomp.raw_broadcast",
   "stomp.raw_send",
   "workflows.transport.stomp_transport.StompTransport"
  ],
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_messages_are_serialized_for_transport": {
  "lineno": 347,
  "symbols_in_volume": [
   "mock.patch",
   "mock.sentinel.channel",
   "mock.sentinel.channel1",
   "mock.sentinel.channel2",
   "mock.sentinel.unserializable",
   "pytest.raises",
   "stomp",
   "stomp.broadcast",
   "stomp.connect",
   "stomp.send",
   "workflows.transport.stomp_transport.StompTransport"
  ],
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_nack_message": {
  "lineno": 628,
  "symbols_in_volume": [
   "mock.patch",
   "mock.sentinel.channel3",
   "mock.sentinel.messageid",
   "mock.sentinel.txn",
   "stomp",
   "stomp._nack",
   "stomp._subscribe",
   "stomp.connect",
   "workflows.transport.stomp_transport.StompTransport"
  ],
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_namespace_is_used_correctly": {
  "lineno": 645,
  "symbols_in_volume": [
   "mock.patch",
   "mock.sentinel.message1",
   "mock.sentinel.message2",
   "mock.sentinel.message3",
   "stomp",
   "stomp._broadcast",
   "stomp._send",
   "stomp._subscribe",
   "stomp._subscribe_broadcast",
   "stomp.broadcast_status",
   "stomp.connect",
   "stomp.get_namespace",
   "workflows.transport.stomp_transport.StompTransport",
   "workflows.transport.stomp_transport.StompTransport.defaults"
  ],
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_send_broadcast": {
  "lineno": 283,
  "symbols_in_volume": [
   "mock.patch",
   "mock.sentinel.channel",
   "mock.sentinel.headers",
   "mock.sentinel.message",
   "stomp",
   "stomp._broadcast",
   "stomp.connect",
   "workflows.transport.stomp_transport.StompTransport"
  ],
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_send_message": {
  "lineno": 216,
  "symbols_in_volume": [
   "mock.patch",
   "mock.sentinel.channel",
   "mock.sentinel.header",
   "mock.sentinel.message",
   "stomp",
   "stomp._send",
   "stomp.connect",
   "workflows.transport.stomp_transport.StompTransport"
  ],
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_sending_message_with_expiration": {
  "lineno": 248,
  "symbols_in_volume": [
   "mock.patch",
   "mock.sentinel.channel",
   "mock.sentinel.message",
   "stomp",
   "stomp._send",
   "stomp.connect",
   "workflows.transport.stomp_transport.StompTransport"
  ],
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_subscribe_to_broadcast": {
  "lineno": 528,
  "symbols_in_volume": [
   "mock.Mock",
   "mock.patch",
   "mock.sentinel.channel1",
   "mock.sentinel.channel2",
   "mock.sentinel.message1",
   "mock.sentinel.message2",
   "mock.sentinel.transformation",
   "stomp",
   "stomp._subscribe_broadcast",
   "stomp._unsubscribe",
   "stomp.connect",
   "stomp.subscription_callback",
   "workflows.transport.stomp_transport.StompTransport"
  ],
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_subscribe_to_broadcast.callback_resolver": {
  "lineno": 537,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_subscribe_to_queue": {
  "lineno": 447,
  "symbols_in_volume": [
   "mock.Mock",
   "mock.patch",
   "mock.sentinel.channel1",
   "mock.sentinel.channel2",
   "mock.sentinel.channel3",
   "mock.sentinel.message1",
   "mock.sentinel.message2",
   "mock.sentinel.selector",
   "mock.sentinel.transformation",
   "stomp",
   "stomp._subscribe",
   "stomp._unsubscribe",
   "stomp.connect",
   "stomp.subscription_callback",
   "workflows.transport.stomp_transport.StompTransport"
  ],
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_subscribe_to_queue.callback_resolver": {
  "lineno": 456,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_transaction_calls": {
  "lineno": 586,
  "symbols_in_volume": [
   "mock.patch",
   "mock.sentinel.message",
   "mock.sentinel.txid",
   "stomp",
   "stomp._send",
   "stomp._transaction_abort",
   "stomp._transaction_begin",
   "stomp._transaction_commit",
   "stomp.connect",
   "workflows.transport.stomp_transport.StompTransport"
  ],
  "type": "function"
 },
 "workflows.transport.test_transport": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "workflows.transport.test_transport.test_known_transports_is_a_dictionary": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.transport.test_transport.test_load_any_transport": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.util": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "workflows.util.generate_unique_host_id": {
  "lineno": 5,
  "symbols_in_volume": [
   "os.getpid",
   "socket.gethostname"
  ],
  "type": "function"
 },
 "workflows.util.test_util": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "workflows.util.test_util.test_generated_host_ids_are_somewhat_sensible": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "function"
 },
 "workflows.version": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "function"
 }
}