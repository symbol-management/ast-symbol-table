{
 "workflows": {
  "data": {
   "symbols_in_volume": {
    "workflows.AuthenticationFailed": {
     "line number": [
      26
     ]
    },
    "workflows.Disconnected": {
     "line number": [
      25
     ]
    },
    "workflows.Error": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "module"
 },
 "workflows.AuthenticationError": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "workflows.AuthenticationFailed": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "workflows.Error": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "class"
 },
 "workflows.Disconnected": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "workflows.Error": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "class"
 },
 "workflows.DisconnectedError": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "workflows.Error": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "workflows.WorkflowsError": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "workflows.__version__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "workflows.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "workflows.contrib": {
  "data": {},
  "type": "module"
 },
 "workflows.contrib.start_service": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      148
     ]
    },
    "workflows.contrib.start_service.ServiceStarter": {
     "line number": [
      149
     ]
    }
   }
  },
  "type": "module"
 },
 "workflows.contrib.start_service.OptionParser": {
  "data": {
   "shadows": "optparse.OptionParser"
  },
  "type": "import"
 },
 "workflows.contrib.start_service.SUPPRESS_HELP": {
  "data": {
   "shadows": "optparse.SUPPRESS_HELP"
  },
  "type": "import"
 },
 "workflows.contrib.start_service.ServiceStarter": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "object": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "workflows.contrib.start_service.ServiceStarter.before_frontend_construction": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "staticmethod": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.contrib.start_service.ServiceStarter.on_frontend_preparation": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "staticmethod": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.contrib.start_service.ServiceStarter.on_parser_preparation": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "staticmethod": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.contrib.start_service.ServiceStarter.on_parsing": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "staticmethod": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.contrib.start_service.ServiceStarter.on_transport_factory_preparation": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "staticmethod": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.contrib.start_service.ServiceStarter.on_transport_preparation": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "staticmethod": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.contrib.start_service.ServiceStarter.run": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "KeyboardInterrupt": {
     "line number": [
      144
     ]
    },
    "len": {
     "line number": [
      127
     ]
    },
    "optparse.OptionParser": {
     "line number": [
      66
     ]
    },
    "optparse.SUPPRESS_HELP": {
     "line number": [
      69
     ]
    },
    "print": {
     "line number": [
      145
     ]
    },
    "workflows.contrib.start_service.workflows": {
     "line number": [
      53,
      63,
      86,
      89,
      101,
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.contrib.start_service.ServiceStarter.run.on_transport_preparation_hook": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "true_transport_factory_call": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.contrib.start_service.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "workflows.contrib.start_service.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "workflows.contrib.start_service.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "workflows.contrib.start_service.workflows": {
  "data": {
   "shadows": "workflows"
  },
  "type": "import"
 },
 "workflows.contrib.start_service.workflows.frontend": {
  "data": {
   "shadows": "workflows.frontend"
  },
  "type": "import"
 },
 "workflows.contrib.start_service.workflows.services": {
  "data": {
   "shadows": "workflows.services"
  },
  "type": "import"
 },
 "workflows.contrib.start_service.workflows.transport": {
  "data": {
   "shadows": "workflows.transport"
  },
  "type": "import"
 },
 "workflows.contrib.status_monitor": {
  "data": {
   "symbols_in_volume": {
    "NameError": {
     "line number": [
      12
     ]
    },
    "bytes": {
     "line number": [
      13
     ]
    },
    "str": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "module"
 },
 "workflows.contrib.status_monitor.CommonService": {
  "data": {
   "shadows": "workflows.services.common_service.CommonService"
  },
  "type": "import"
 },
 "workflows.contrib.status_monitor.Monitor": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "workflows.contrib.status_monitor.Monitor.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      34
     ]
    },
    "transport": {
     "line number": [
      37
     ]
    },
    "workflows.contrib.status_monitor.basestring": {
     "line number": [
      34
     ]
    },
    "workflows.contrib.status_monitor.threading": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.contrib.status_monitor.Monitor._boxwin": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "workflows.contrib.status_monitor.curses": {
     "line number": [
      84,
      87,
      92,
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.contrib.status_monitor.Monitor._erase_card": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "int": {
     "line number": [
      135
     ]
    },
    "len": {
     "line number": [
      131,
      133
     ]
    },
    "workflows.contrib.status_monitor.curses": {
     "line number": [
      135,
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.contrib.status_monitor.Monitor._get_card": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      126
     ]
    },
    "int": {
     "line number": [
      115
     ]
    },
    "len": {
     "line number": [
      112,
      114
     ]
    },
    "workflows.contrib.status_monitor.curses": {
     "line number": [
      115
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.contrib.status_monitor.Monitor._redraw_screen": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "workflows.contrib.status_monitor.curses": {
     "line number": [
      101,
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.contrib.status_monitor.Monitor._run": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "KeyboardInterrupt": {
     "line number": [
      215
     ]
    },
    "int": {
     "line number": [
      158,
      163
     ]
    },
    "len": {
     "line number": [
      209
     ]
    },
    "str": {
     "line number": [
      184
     ]
    },
    "workflows.contrib.status_monitor.curses": {
     "line number": [
      149,
      150,
      151,
      151,
      152,
      152,
      153,
      153,
      171,
      174,
      178,
      180,
      191,
      191,
      193,
      193,
      195,
      204,
      205,
      213
     ]
    },
    "workflows.contrib.status_monitor.time": {
     "line number": [
      158,
      214
     ]
    },
    "workflows.services.common_service.CommonService.SERVICE_STATUS_ERROR": {
     "line number": [
      194
     ]
    },
    "workflows.services.common_service.CommonService.SERVICE_STATUS_IDLE": {
     "line number": [
      192
     ]
    },
    "workflows.services.common_service.CommonService.SERVICE_STATUS_PROCESSING": {
     "line number": [
      188
     ]
    },
    "workflows.services.common_service.CommonService.SERVICE_STATUS_TIMER": {
     "line number": [
      189
     ]
    },
    "workflows.services.common_service.CommonService.human_readable_state.get": {
     "line number": [
      183
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.contrib.status_monitor.Monitor.run": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "workflows.contrib.status_monitor.curses": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.contrib.status_monitor.Monitor.update_status": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      52
     ]
    },
    "int": {
     "line number": [
      67,
      71
     ]
    },
    "str": {
     "line number": [
      62
     ]
    },
    "workflows.contrib.status_monitor.curses": {
     "line number": [
      54,
      57,
      60,
      62,
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.contrib.status_monitor.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "workflows.contrib.status_monitor.basestring": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "workflows.contrib.status_monitor.curses": {
  "data": {
   "shadows": "curses"
  },
  "type": "import"
 },
 "workflows.contrib.status_monitor.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "workflows.contrib.status_monitor.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "workflows.contrib.status_monitor.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "workflows.contrib.status_monitor.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "workflows.contrib.status_monitor.workflows.transport": {
  "data": {
   "shadows": "workflows.transport"
  },
  "type": "import"
 },
 "workflows.contrib.test_start_service": {
  "data": {},
  "type": "module"
 },
 "workflows.contrib.test_start_service.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "workflows.contrib.test_start_service.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "workflows.contrib.test_start_service.mock": {
  "data": {
   "shadows": "mock"
  },
  "type": "import"
 },
 "workflows.contrib.test_start_service.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "workflows.contrib.test_start_service.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "workflows.contrib.test_start_service.test_get_command_line_help": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "SystemExit": {
     "line number": [
      10
     ]
    },
    "workflows.contrib.test_start_service.pytest": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.contrib.test_start_service.test_script_initialises_transport_and_starts_frontend": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "workflows.contrib.test_start_service.mock": {
     "line number": [
      27,
      29,
      30,
      34,
      37,
      38,
      38,
      18,
      19,
      20,
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.contrib.test_start_service.workflows.contrib.start_service": {
  "data": {
   "shadows": "workflows.contrib.start_service"
  },
  "type": "import"
 },
 "workflows.contrib.test_status_monitor": {
  "data": {},
  "type": "module"
 },
 "workflows.contrib.test_status_monitor.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "workflows.contrib.test_status_monitor.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "workflows.contrib.test_status_monitor.mock": {
  "data": {
   "shadows": "mock"
  },
  "type": "import"
 },
 "workflows.contrib.test_status_monitor.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "workflows.contrib.test_status_monitor.status_monitor": {
  "data": {
   "shadows": "workflows.contrib.status_monitor"
  },
  "type": "import"
 },
 "workflows.contrib.test_status_monitor.test_status_monitor_connects_to_transport_layer": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": {
    "KeyboardInterrupt": {
     "line number": [
      14
     ]
    },
    "run_method": {
     "line number": [
      36
     ]
    },
    "workflows.contrib.status_monitor.Monitor": {
     "line number": [
      16,
      21,
      25
     ]
    },
    "workflows.contrib.test_status_monitor.mock": {
     "line number": [
      24,
      29,
      36,
      7,
      8,
      9
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "workflows.frontend": {
  "data": {
   "symbols_in_volume": {
    "NameError": {
     "line number": [
      17
     ]
    },
    "bytes": {
     "line number": [
      18
     ]
    },
    "str": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "module"
 },
 "workflows.frontend.CommonService": {
  "data": {
   "shadows": "workflows.services.common_service.CommonService"
  },
  "type": "import"
 },
 "workflows.frontend.Frontend": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "workflows.frontend.Frontend.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "LogAdapter": {
     "line number": [
      102
     ]
    },
    "hasattr": {
     "line number": [
      111
     ]
    },
    "isinstance": {
     "line number": [
      107
     ]
    },
    "workflows.frontend.basestring": {
     "line number": [
      107
     ]
    },
    "workflows.frontend.logging": {
     "line number": [
      101,
      102
     ]
    },
    "workflows.frontend.threading": {
     "line number": [
      57
     ]
    },
    "workflows.frontend.workflows": {
     "line number": [
      58,
      77,
      108
     ]
    },
    "workflows.services.common_service.CommonService.SERVICE_STATUS_NEW": {
     "line number": [
      129
     ]
    },
    "workflows.services.common_service.CommonService.SERVICE_STATUS_NONE": {
     "line number": [
      67,
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.frontend.Frontend.__init__.LogAdapter": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "status_fn": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "class"
 },
 "workflows.frontend.Frontend.__init__.LogAdapter.__getitem__": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "workflows.frontend.Frontend.__init__.LogAdapter.__iter__": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "workflows.frontend.Frontend._terminate_service": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": {
    "workflows.services.common_service.CommonService.SERVICE_STATUS_END": {
     "line number": [
      446
     ]
    },
    "workflows.services.common_service.CommonService.SERVICE_STATUS_TEARDOWN": {
     "line number": [
      445
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.frontend.Frontend.exponential_backoff": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": {
    "min": {
     "line number": [
      368
     ]
    },
    "workflows.frontend.time": {
     "line number": [
      363,
      375
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.frontend.Frontend.get_host_id": {
  "data": {
   "lineno": 338
  },
  "type": "function"
 },
 "workflows.frontend.Frontend.get_status": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": {
    "workflows.frontend.workflows": {
     "line number": [
      354
     ]
    },
    "workflows.services.common_service.CommonService.human_readable_state.get": {
     "line number": [
      348
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.frontend.Frontend.parse_band_log": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": {
    "delattr": {
     "line number": [
      303
     ]
    },
    "dir": {
     "line number": [
      300
     ]
    },
    "getattr": {
     "line number": [
      302
     ]
    },
    "hasattr": {
     "line number": [
      298,
      312
     ]
    },
    "setattr": {
     "line number": [
      302,
      305
     ]
    },
    "str": {
     "line number": [
      310,
      311
     ]
    },
    "workflows.frontend.logging": {
     "line number": [
      306
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.frontend.Frontend.parse_band_request_termination": {
  "data": {
   "lineno": 317
  },
  "type": "function"
 },
 "workflows.frontend.Frontend.parse_band_set_name": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": {
    "str": {
     "line number": [
      330
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.frontend.Frontend.parse_band_status_update": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": {
    "str": {
     "line number": [
      335
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.frontend.Frontend.process_transport_command": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      272
     ]
    },
    "isinstance": {
     "line number": [
      272
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.frontend.Frontend.run": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      189
     ]
    },
    "EOFError": {
     "line number": [
      199
     ]
    },
    "dict": {
     "line number": [
      185
     ]
    },
    "getattr": {
     "line number": [
      188
     ]
    },
    "handler": {
     "line number": [
      194
     ]
    },
    "isinstance": {
     "line number": [
      185
     ]
    },
    "str": {
     "line number": [
      191,
      198
     ]
    },
    "workflows.frontend.time": {
     "line number": [
      179
     ]
    },
    "workflows.frontend.workflows": {
     "line number": [
      234,
      248
     ]
    },
    "workflows.services.common_service.CommonService.SERVICE_STATUS_END": {
     "line number": [
      202
     ]
    },
    "workflows.services.common_service.CommonService.SERVICE_STATUS_ERROR": {
     "line number": [
      204
     ]
    },
    "workflows.services.common_service.CommonService.SERVICE_STATUS_NEW": {
     "line number": [
      208,
      242
     ]
    },
    "workflows.services.common_service.CommonService.SERVICE_STATUS_NONE": {
     "line number": [
      207
     ]
    },
    "workflows.services.common_service.CommonService.SERVICE_STATUS_STARTING": {
     "line number": [
      209
     ]
    },
    "workflows.services.common_service.CommonService.SERVICE_STATUS_TEARDOWN": {
     "line number": [
      250
     ]
    },
    "workflows.services.common_service.CommonService.human_readable_state.get": {
     "line number": [
      214,
      222
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.frontend.Frontend.send_command": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": {
    "str": {
     "line number": [
      263,
      267
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.frontend.Frontend.switch_service": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      391
     ]
    },
    "workflows.frontend.basestring": {
     "line number": [
      391
     ]
    },
    "workflows.frontend.multiprocessing": {
     "line number": [
      402,
      403,
      410
     ]
    },
    "workflows.frontend.time": {
     "line number": [
      420
     ]
    },
    "workflows.frontend.workflows": {
     "line number": [
      392
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.frontend.Frontend.update_status": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "workflows.frontend.time": {
     "line number": [
      152,
      154,
      163,
      170
     ]
    },
    "workflows.services.common_service.CommonService.SERVICE_STATUS_IDLE": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.frontend.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "workflows.frontend.basestring": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "workflows.frontend.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "workflows.frontend.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "workflows.frontend.multiprocessing": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "workflows.frontend.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "workflows.frontend.test_frontend": {
  "data": {},
  "type": "module"
 },
 "workflows.frontend.test_frontend.CommonService": {
  "data": {
   "shadows": "workflows.services.common_service.CommonService"
  },
  "type": "import"
 },
 "workflows.frontend.test_frontend.MockPipe": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "object": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "class"
 },
 "workflows.frontend.test_frontend.MockPipe.__init__": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "workflows.frontend.test_frontend.MockPipe.assert_empty": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      53
     ]
    },
    "all": {
     "line number": [
      53
     ]
    },
    "isinstance": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.frontend.test_frontend.MockPipe.close": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "staticmethod": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.frontend.test_frontend.MockPipe.poll": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "staticmethod": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.frontend.test_frontend.MockPipe.recv": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "EOFError": {
     "line number": [
      41
     ]
    },
    "Exception": {
     "line number": [
      43
     ]
    },
    "isinstance": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.frontend.test_frontend.ServiceCrashingOnInit": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "workflows.services.common_service.CommonService": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "class"
 },
 "workflows.frontend.test_frontend.ServiceCrashingOnInit.initializing": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "staticmethod": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.frontend.test_frontend.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "workflows.frontend.test_frontend.assert_single_call_only": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "workflows.frontend.test_frontend.assert_single_call_only.wrapper": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      59
     ]
    },
    "hasattr": {
     "line number": [
      58
     ]
    },
    "setattr": {
     "line number": [
      60
     ]
    },
    "str": {
     "line number": [
      59
     ]
    },
    "target": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.frontend.test_frontend.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "workflows.frontend.test_frontend.mock": {
  "data": {
   "shadows": "mock"
  },
  "type": "import"
 },
 "workflows.frontend.test_frontend.multiprocessing": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "workflows.frontend.test_frontend.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "workflows.frontend.test_frontend.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "workflows.frontend.test_frontend.test_frontend_can_handle_service_initialization_segfaults": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": {
    "EOFError": {
     "line number": [
      207
     ]
    },
    "workflows.frontend.test_frontend.mock": {
     "line number": [
      203,
      204,
      205,
      206,
      215,
      200
     ]
    },
    "workflows.frontend.test_frontend.pytest": {
     "line number": [
      218
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.frontend.test_frontend.test_frontend_can_handle_unhandled_service_initialization_exceptions": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": {
    "workflows.frontend.test_frontend.ServiceCrashingOnInit": {
     "line number": [
      179
     ]
    },
    "workflows.frontend.test_frontend.assert_single_call_only": {
     "line number": [
      179
     ]
    },
    "workflows.frontend.test_frontend.mock": {
     "line number": [
      176
     ]
    },
    "workflows.frontend.test_frontend.pytest": {
     "line number": [
      184,
      173
     ]
    },
    "workflows.services.common_service.CommonService.SERVICE_STATUS_END": {
     "line number": [
      196
     ]
    },
    "workflows.services.common_service.CommonService.SERVICE_STATUS_ERROR": {
     "line number": [
      195
     ]
    },
    "workflows.services.common_service.CommonService.SERVICE_STATUS_NEW": {
     "line number": [
      193
     ]
    },
    "workflows.services.common_service.CommonService.SERVICE_STATUS_STARTING": {
     "line number": [
      194
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.frontend.test_frontend.test_frontend_connects_to_transport_layer": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "workflows.frontend.test_frontend.mock": {
     "line number": [
      81,
      69,
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.frontend.test_frontend.test_frontend_does_not_restart_nonrestartable_service_on_error": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      475
     ]
    },
    "workflows.frontend.test_frontend.MockPipe": {
     "line number": [
      480
     ]
    },
    "workflows.frontend.test_frontend.mock": {
     "line number": [
      471,
      472,
      473,
      477,
      497,
      468
     ]
    },
    "workflows.frontend.test_frontend.pytest": {
     "line number": [
      499
     ]
    },
    "workflows.services.common_service.CommonService.SERVICE_STATUS_ERROR": {
     "line number": [
      491
     ]
    },
    "workflows.services.common_service.CommonService.SERVICE_STATUS_NEW": {
     "line number": [
      482
     ]
    },
    "workflows.services.common_service.CommonService.SERVICE_STATUS_PROCESSING": {
     "line number": [
      489
     ]
    },
    "workflows.services.common_service.CommonService.SERVICE_STATUS_STARTING": {
     "line number": [
      485
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.frontend.test_frontend.test_frontend_does_not_restart_nonrestartable_service_on_segfault": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": {
    "EOFError": {
     "line number": [
      445
     ]
    },
    "Exception": {
     "line number": [
      451
     ]
    },
    "workflows.frontend.test_frontend.mock": {
     "line number": [
      442,
      443,
      444,
      449,
      455,
      464,
      439
     ]
    },
    "workflows.frontend.test_frontend.pytest": {
     "line number": [
      457
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.frontend.test_frontend.test_frontend_does_restart_restartable_service_on_error": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      558,
      596
     ]
    },
    "workflows.frontend.test_frontend.mock": {
     "line number": [
      557,
      559,
      559,
      560,
      562,
      591,
      605,
      605,
      606,
      606,
      554
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.frontend.test_frontend.test_frontend_does_restart_restartable_service_on_error.pipe_creator": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": {
    "workflows.frontend.test_frontend.MockPipe": {
     "line number": [
      567
     ]
    },
    "workflows.services.common_service.CommonService.SERVICE_STATUS_ERROR": {
     "line number": [
      583
     ]
    },
    "workflows.services.common_service.CommonService.SERVICE_STATUS_NEW": {
     "line number": [
      571
     ]
    },
    "workflows.services.common_service.CommonService.SERVICE_STATUS_PROCESSING": {
     "line number": [
      579
     ]
    },
    "workflows.services.common_service.CommonService.SERVICE_STATUS_STARTING": {
     "line number": [
      575
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.frontend.test_frontend.test_frontend_does_restart_restartable_service_on_segfault": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": {
    "EOFError": {
     "line number": [
      521
     ]
    },
    "Exception": {
     "line number": [
      525,
      533
     ]
    },
    "workflows.frontend.test_frontend.mock": {
     "line number": [
      510,
      511,
      512,
      513,
      518,
      519,
      520,
      527,
      527,
      542,
      542,
      543,
      543,
      507
     ]
    },
    "workflows.frontend.test_frontend.pytest": {
     "line number": [
      533
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.frontend.test_frontend.test_frontend_parses_status_updates": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": {
    "workflows.frontend.test_frontend.MockPipe": {
     "line number": [
      261
     ]
    },
    "workflows.frontend.test_frontend.mock": {
     "line number": [
      257,
      258,
      281,
      254
     ]
    },
    "workflows.services.common_service.CommonService.SERVICE_STATUS_END": {
     "line number": [
      276,
      302,
      303
     ]
    },
    "workflows.services.common_service.CommonService.SERVICE_STATUS_NEW": {
     "line number": [
      263,
      298
     ]
    },
    "workflows.services.common_service.CommonService.SERVICE_STATUS_PROCESSING": {
     "line number": [
      270,
      300
     ]
    },
    "workflows.services.common_service.CommonService.SERVICE_STATUS_SHUTDOWN": {
     "line number": [
      274,
      301
     ]
    },
    "workflows.services.common_service.CommonService.SERVICE_STATUS_STARTING": {
     "line number": [
      266,
      299
     ]
    },
    "workflows.services.common_service.CommonService.SERVICE_STATUS_TEARDOWN": {
     "line number": [
      304
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.frontend.test_frontend.test_frontend_parses_status_updates.intercept": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": {
    "original_status_update_fn": {
     "line number": [
      290
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.frontend.test_frontend.test_frontend_parses_termination_requests": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      327
     ]
    },
    "original_status_update_fn": {
     "line number": [
      336
     ]
    },
    "workflows.frontend.test_frontend.MockPipe": {
     "line number": [
      315
     ]
    },
    "workflows.frontend.test_frontend.mock": {
     "line number": [
      311,
      312,
      332,
      308
     ]
    },
    "workflows.services.common_service.CommonService.SERVICE_STATUS_END": {
     "line number": [
      352
     ]
    },
    "workflows.services.common_service.CommonService.SERVICE_STATUS_NEW": {
     "line number": [
      317,
      349
     ]
    },
    "workflows.services.common_service.CommonService.SERVICE_STATUS_PROCESSING": {
     "line number": [
      324,
      351
     ]
    },
    "workflows.services.common_service.CommonService.SERVICE_STATUS_STARTING": {
     "line number": [
      320,
      350
     ]
    },
    "workflows.services.common_service.CommonService.SERVICE_STATUS_TEARDOWN": {
     "line number": [
      353
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.frontend.test_frontend.test_frontend_parses_termination_requests.intercept": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": {
    "original_status_update_fn": {
     "line number": [
      341
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.frontend.test_frontend.test_frontend_sends_status_updates": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": {
    "workflows.frontend.test_frontend.mock": {
     "line number": [
      362,
      357,
      358
     ]
    },
    "workflows.services.common_service.CommonService.SERVICE_STATUS_IDLE": {
     "line number": [
      410,
      421,
      426,
      435
     ]
    },
    "workflows.services.common_service.CommonService.SERVICE_STATUS_NONE": {
     "line number": [
      371
     ]
    },
    "workflows.services.common_service.CommonService.SERVICE_STATUS_PROCESSING": {
     "line number": [
      400,
      404,
      415
     ]
    },
    "workflows.services.common_service.CommonService.SERVICE_STATUS_STARTING": {
     "line number": [
      375,
      380,
      394
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.frontend.test_frontend.test_frontend_subscribes_to_command_channel": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "frontend_with_message": {
     "line number": [
      107,
      108,
      110,
      116,
      122,
      128
     ]
    },
    "workflows.frontend.test_frontend.mock": {
     "line number": [
      117,
      129,
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.frontend.test_frontend.test_frontend_subscribes_to_command_channel.frontend_with_message": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "workflows.frontend.test_frontend.mock": {
     "line number": [
      99,
      102,
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.frontend.test_frontend.test_frontend_terminates_on_transport_disconnection": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      233
     ]
    },
    "workflows.frontend.test_frontend.mock": {
     "line number": [
      227,
      228,
      229,
      230,
      244,
      224
     ]
    },
    "workflows.frontend.test_frontend.pytest": {
     "line number": [
      247
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.frontend.test_frontend.test_get_frontend_status": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "workflows.frontend.test_frontend.mock": {
     "line number": [
      165
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.frontend.test_frontend.test_start_service_in_frontend": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "workflows.frontend.test_frontend.mock": {
     "line number": [
      139,
      140,
      140,
      140,
      140,
      144,
      150,
      155,
      135,
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.frontend.test_frontend.workflows.frontend": {
  "data": {
   "shadows": "workflows.frontend"
  },
  "type": "import"
 },
 "workflows.frontend.test_utilization": {
  "data": {},
  "type": "module"
 },
 "workflows.frontend.test_utilization.Status": {
  "data": {
   "shadows": "workflows.services.common_service.Status"
  },
  "type": "import"
 },
 "workflows.frontend.test_utilization.about": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "Comparator": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.frontend.test_utilization.about.Comparator": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "workflows.frontend.test_utilization.about.Comparator.__eq__": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "workflows.frontend.test_utilization.about.Comparator.__ge__": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "workflows.frontend.test_utilization.about.Comparator.__le__": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "workflows.frontend.test_utilization.about.Comparator.__ne__": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "workflows.frontend.test_utilization.about.Comparator.__repr__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "str": {
     "line number": [
      27,
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.frontend.test_utilization.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "workflows.frontend.test_utilization.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "workflows.frontend.test_utilization.mock": {
  "data": {
   "shadows": "mock"
  },
  "type": "import"
 },
 "workflows.frontend.test_utilization.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "workflows.frontend.test_utilization.test_get_empty_statistics_report": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "workflows.services.common_service.Status.NEW.intval": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.frontend.test_utilization.test_near_equality_helper_class": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "workflows.frontend.test_utilization.about": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.frontend.test_utilization.test_statistics_report_contains_correctly_aggregated_information": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "workflows.frontend.test_utilization.about": {
     "line number": [
      63,
      64,
      69,
      70,
      71,
      76,
      77,
      78,
      83,
      84,
      85,
      89,
      90,
      91,
      95,
      96,
      97,
      101,
      102,
      103,
      107,
      108,
      109,
      113,
      114,
      115,
      119,
      120,
      121,
      125,
      126,
      130,
      131
     ]
    },
    "workflows.frontend.test_utilization.mock": {
     "line number": [
      53
     ]
    },
    "workflows.services.common_service.Status.IDLE.intval": {
     "line number": [
      60,
      64,
      70,
      73,
      77,
      83,
      89,
      95,
      101,
      107,
      113,
      119,
      125,
      130
     ]
    },
    "workflows.services.common_service.Status.NEW.intval": {
     "line number": [
      59,
      63,
      69,
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.frontend.test_utilization.workflows.frontend.utilization": {
  "data": {
   "shadows": "workflows.frontend.utilization"
  },
  "type": "import"
 },
 "workflows.frontend.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "workflows.frontend.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "workflows.frontend.utilization": {
  "data": {},
  "type": "module"
 },
 "workflows.frontend.utilization.CommonService": {
  "data": {
   "shadows": "workflows.services.common_service.CommonService"
  },
  "type": "import"
 },
 "workflows.frontend.utilization.UtilizationStatistics": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "object": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "class"
 },
 "workflows.frontend.utilization.UtilizationStatistics.__init__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "workflows.services.common_service.CommonService.SERVICE_STATUS_NEW": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.frontend.utilization.UtilizationStatistics.report": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "max": {
     "line number": [
      43,
      48
     ]
    },
    "round": {
     "line number": [
      53
     ]
    },
    "sum": {
     "line number": [
      52
     ]
    },
    "workflows.frontend.utilization.time": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.frontend.utilization.UtilizationStatistics.update_status": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "workflows.frontend.utilization.time": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.frontend.utilization.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "workflows.frontend.utilization.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "workflows.frontend.utilization.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "workflows.frontend.utilization.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "workflows.frontend.workflows": {
  "data": {
   "shadows": "workflows"
  },
  "type": "import"
 },
 "workflows.frontend.workflows.frontend.utilization": {
  "data": {
   "shadows": "workflows.frontend.utilization"
  },
  "type": "import"
 },
 "workflows.frontend.workflows.services": {
  "data": {
   "shadows": "workflows.services"
  },
  "type": "import"
 },
 "workflows.frontend.workflows.transport": {
  "data": {
   "shadows": "workflows.transport"
  },
  "type": "import"
 },
 "workflows.frontend.workflows.util": {
  "data": {
   "shadows": "workflows.util"
  },
  "type": "import"
 },
 "workflows.logging": {
  "data": {},
  "type": "module"
 },
 "workflows.logging.CallbackHandler": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "workflows.logging.logging": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "class"
 },
 "workflows.logging.CallbackHandler.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "super": {
     "line number": [
      35
     ]
    },
    "workflows.logging.CallbackHandler": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.logging.CallbackHandler.emit": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.logging.CallbackHandler.prepare": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "workflows.logging.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "workflows.logging.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "workflows.logging.get_exception_source": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "workflows.logging.linecache": {
     "line number": [
      21,
      22
     ]
    },
    "workflows.logging.sys": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.logging.linecache": {
  "data": {
   "shadows": "linecache"
  },
  "type": "import"
 },
 "workflows.logging.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "workflows.logging.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "workflows.logging.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "workflows.logging.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "workflows.logging.test_logging": {
  "data": {},
  "type": "module"
 },
 "workflows.logging.test_logging.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "workflows.logging.test_logging.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "workflows.logging.test_logging.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "workflows.logging.test_logging.mock": {
  "data": {
   "shadows": "mock"
  },
  "type": "import"
 },
 "workflows.logging.test_logging.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "workflows.logging.test_logging.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "workflows.logging.test_logging.test_callback_handler_works_within_logging_framework": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      58
     ]
    },
    "isinstance": {
     "line number": [
      48,
      65
     ]
    },
    "workflows.logging.test_logging.logging": {
     "line number": [
      37,
      38,
      48,
      65
     ]
    },
    "workflows.logging.test_logging.mock": {
     "line number": [
      35,
      41,
      46,
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.logging.test_logging.test_obtain_exception_source": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      22
     ]
    },
    "crashfunction": {
     "line number": [
      20
     ]
    },
    "workflows.logging.test_logging.os": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.logging.test_logging.test_obtain_exception_source.crashfunction": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "print": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.logging.test_logging.workflows.logging": {
  "data": {
   "shadows": "workflows.logging"
  },
  "type": "import"
 },
 "workflows.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "workflows.recipe": {
  "data": {},
  "type": "module"
 },
 "workflows.recipe.Recipe": {
  "data": {
   "shadows": "workflows.recipe.recipe.Recipe"
  },
  "type": "import"
 },
 "workflows.recipe.RecipeWrapper": {
  "data": {
   "shadows": "workflows.recipe.wrapper.RecipeWrapper"
  },
  "type": "import"
 },
 "workflows.recipe._wrap_subscription": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "subscription_call": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe._wrap_subscription.unwrap_recipe": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "callback": {
     "line number": [
      50,
      51,
      53
     ]
    },
    "log_extender": {
     "line number": [
      49
     ]
    },
    "workflows.recipe.wrapper.RecipeWrapper": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "workflows.recipe.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "workflows.recipe.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "workflows.recipe.recipe": {
  "data": {
   "symbols_in_volume": {
    "NameError": {
     "line number": [
      11
     ]
    },
    "bytes": {
     "line number": [
      12
     ]
    },
    "str": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "module"
 },
 "workflows.recipe.recipe.Recipe": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "object": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "class"
 },
 "workflows.recipe.recipe.Recipe.__contains__": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "workflows.recipe.recipe.Recipe.__eq__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      76
     ]
    },
    "isinstance": {
     "line number": [
      74,
      76
     ]
    },
    "workflows.recipe.recipe.Recipe": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.recipe.Recipe.__getitem__": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "workflows.recipe.recipe.Recipe.__hash__": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "workflows.recipe.recipe.Recipe.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      26
     ]
    },
    "workflows.recipe.recipe.basestring": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.recipe.Recipe.__ne__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "NotImplemented": {
     "line number": [
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.recipe.Recipe._sanitize": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      47
     ]
    },
    "int": {
     "line number": [
      42,
      42,
      43
     ]
    },
    "isinstance": {
     "line number": [
      46
     ]
    },
    "list": {
     "line number": [
      41,
      45,
      47
     ]
    },
    "staticmethod": {
     "line number": [
      36
     ]
    },
    "tuple": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.recipe.Recipe.apply_parameters": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": {
    "SafeDict": {
     "line number": [
      250
     ]
    },
    "_recursive_apply": {
     "line number": [
      274
     ]
    },
    "workflows.recipe.recipe.string": {
     "line number": [
      237,
      242
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.recipe.Recipe.apply_parameters.SafeDict": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      229
     ]
    }
   }
  },
  "type": "class"
 },
 "workflows.recipe.recipe.Recipe.apply_parameters.SafeDict.__missing__": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": {
    "SafeString": {
     "line number": [
      234
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.recipe.Recipe.apply_parameters.SafeString": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": {
    "object": {
     "line number": [
      216
     ]
    }
   }
  },
  "type": "class"
 },
 "workflows.recipe.recipe.Recipe.apply_parameters.SafeString.__getitem__": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": {
    "SafeString": {
     "line number": [
      227
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.recipe.Recipe.apply_parameters.SafeString.__init__": {
  "data": {
   "lineno": 217
  },
  "type": "function"
 },
 "workflows.recipe.recipe.Recipe.apply_parameters.SafeString.__repr__": {
  "data": {
   "lineno": 220
  },
  "type": "function"
 },
 "workflows.recipe.recipe.Recipe.apply_parameters.SafeString.__str__": {
  "data": {
   "lineno": 223
  },
  "type": "function"
 },
 "workflows.recipe.recipe.Recipe.apply_parameters._recursive_apply": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      258
     ]
    },
    "_recursive_apply": {
     "line number": [
      265,
      265,
      269,
      271
     ]
    },
    "dict": {
     "line number": [
      263
     ]
    },
    "isinstance": {
     "line number": [
      254,
      263,
      268,
      270
     ]
    },
    "list": {
     "line number": [
      269,
      270
     ]
    },
    "tuple": {
     "line number": [
      268,
      269
     ]
    },
    "workflows.recipe.recipe.basestring": {
     "line number": [
      254
     ]
    },
    "workflows.recipe.recipe.copy": {
     "line number": [
      260
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.recipe.Recipe.apply_parameters.ds_format_field": {
  "data": {
   "lineno": 244
  },
  "type": "function"
 },
 "workflows.recipe.recipe.Recipe.deserialize": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "workflows.recipe.recipe.json": {
     "line number": [
      34
     ]
    },
    "workflows.recipe.recipe.string": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.recipe.Recipe.merge": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": {
    "filter": {
     "line number": [
      309
     ]
    },
    "int": {
     "line number": [
      309,
      315
     ]
    },
    "isinstance": {
     "line number": [
      290,
      309,
      315,
      347,
      351
     ]
    },
    "list": {
     "line number": [
      347,
      348,
      350,
      351
     ]
    },
    "max": {
     "line number": [
      309
     ]
    },
    "translate": {
     "line number": [
      334,
      336,
      340,
      345,
      352,
      354
     ]
    },
    "tuple": {
     "line number": [
      347,
      351
     ]
    },
    "workflows.recipe.recipe.Recipe": {
     "line number": [
      287,
      291,
      295,
      299,
      370
     ]
    },
    "workflows.recipe.recipe.basestring": {
     "line number": [
      290
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.recipe.Recipe.merge.translate": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      327
     ]
    },
    "isinstance": {
     "line number": [
      323,
      325,
      327
     ]
    },
    "list": {
     "line number": [
      323,
      324
     ]
    },
    "map": {
     "line number": [
      324,
      326
     ]
    },
    "translate": {
     "line number": [
      328
     ]
    },
    "tuple": {
     "line number": [
      325,
      326
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.recipe.Recipe.pretty": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "workflows.recipe.recipe.json": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.recipe.Recipe.serialize": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "workflows.recipe.recipe.json": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.recipe.Recipe.validate": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "all": {
     "line number": [
      103
     ]
    },
    "any": {
     "line number": [
      107
     ]
    },
    "filter": {
     "line number": [
      123
     ]
    },
    "find_cycles": {
     "line number": [
      176,
      180,
      182
     ]
    },
    "int": {
     "line number": [
      124
     ]
    },
    "isinstance": {
     "line number": [
      104,
      111,
      124,
      178
     ]
    },
    "len": {
     "line number": [
      104
     ]
    },
    "list": {
     "line number": [
      104,
      112,
      122,
      178
     ]
    },
    "str": {
     "line number": [
      188
     ]
    },
    "tuple": {
     "line number": [
      104,
      112,
      178
     ]
    },
    "workflows.recipe.recipe.basestring": {
     "line number": [
      112
     ]
    },
    "workflows.recipe.recipe.workflows": {
     "line number": [
      96,
      100,
      102,
      106,
      108,
      115,
      119,
      129,
      187
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.recipe.Recipe.validate.find_cycles": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": {
    "find_cycles": {
     "line number": [
      173
     ]
    },
    "flatten_links": {
     "line number": [
      166
     ]
    },
    "str": {
     "line number": [
      160,
      160,
      171,
      171
     ]
    },
    "workflows.recipe.recipe.workflows": {
     "line number": [
      158,
      169
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.recipe.Recipe.validate.flatten_links": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "all": {
     "line number": [
      141
     ]
    },
    "dict": {
     "line number": [
      146
     ]
    },
    "flatten_links": {
     "line number": [
      149
     ]
    },
    "int": {
     "line number": [
      138,
      141
     ]
    },
    "isinstance": {
     "line number": [
      138,
      140,
      141,
      146
     ]
    },
    "list": {
     "line number": [
      140
     ]
    },
    "str": {
     "line number": [
      143,
      152
     ]
    },
    "workflows.recipe.recipe.workflows": {
     "line number": [
      142,
      151
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.recipe.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "workflows.recipe.recipe.basestring": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "workflows.recipe.recipe.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "workflows.recipe.recipe.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "workflows.recipe.recipe.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "workflows.recipe.recipe.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "workflows.recipe.recipe.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "workflows.recipe.recipe.workflows": {
  "data": {
   "shadows": "workflows"
  },
  "type": "import"
 },
 "workflows.recipe.test_recipe": {
  "data": {},
  "type": "module"
 },
 "workflows.recipe.test_recipe.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "workflows.recipe.test_recipe.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "workflows.recipe.test_recipe.generate_recipes": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "RecipeA": {
     "line number": [
      33
     ]
    },
    "workflows.recipe.test_recipe.workflows": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.test_recipe.generate_recipes.RecipeA": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "workflows.recipe.test_recipe.workflows": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "class"
 },
 "workflows.recipe.test_recipe.mock": {
  "data": {
   "shadows": "mock"
  },
  "type": "import"
 },
 "workflows.recipe.test_recipe.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "workflows.recipe.test_recipe.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "workflows.recipe.test_recipe.test_can_generate_recipe_objects": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "len": {
     "line number": [
      43
     ]
    },
    "workflows.recipe.test_recipe.generate_recipes": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.test_recipe.test_equality_and_inequality_operator": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "workflows.recipe.test_recipe.generate_recipes": {
     "line number": [
      49,
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.test_recipe.test_in_operator": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "workflows.recipe.test_recipe.generate_recipes": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.test_recipe.test_merging_recipes": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": {
    "any": {
     "line number": [
      363
     ]
    },
    "dict": {
     "line number": [
      365
     ]
    },
    "isinstance": {
     "line number": [
      365
     ]
    },
    "len": {
     "line number": [
      346,
      350,
      359
     ]
    },
    "map": {
     "line number": [
      364
     ]
    },
    "workflows.recipe.test_recipe.generate_recipes": {
     "line number": [
      328,
      343
     ]
    },
    "workflows.recipe.test_recipe.mock": {
     "line number": [
      352
     ]
    },
    "workflows.recipe.test_recipe.workflows": {
     "line number": [
      334,
      337
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.test_recipe.test_replacing_parameters_in_recipe": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": {
    "workflows.recipe.test_recipe.generate_recipes": {
     "line number": [
      251
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.test_recipe.test_replacing_parameters_in_recipe_should_keep_unknown_parameter_strings": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": {
    "workflows.recipe.test_recipe.workflows": {
     "line number": [
      263
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.test_recipe.test_replacing_parameters_in_recipe_with_datastructures": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": {
    "workflows.recipe.test_recipe.generate_recipes": {
     "line number": [
      284
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.test_recipe.test_serializing_and_deserializing_recipes": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "workflows.recipe.test_recipe.generate_recipes": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.test_recipe.test_validate_tests_for_cycles": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": {
    "str": {
     "line number": [
      234,
      240,
      246
     ]
    },
    "workflows.recipe.test_recipe.generate_recipes": {
     "line number": [
      230,
      236,
      242
     ]
    },
    "workflows.recipe.test_recipe.pytest": {
     "line number": [
      232,
      238,
      244
     ]
    },
    "workflows.recipe.test_recipe.workflows": {
     "line number": [
      232,
      238,
      244
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.test_recipe.test_validate_tests_for_empty_recipe": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "workflows.recipe.test_recipe.generate_recipes": {
     "line number": [
      104
     ]
    },
    "workflows.recipe.test_recipe.pytest": {
     "line number": [
      106
     ]
    },
    "workflows.recipe.test_recipe.workflows": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.test_recipe.test_validate_tests_for_invalid_links": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": {
    "str": {
     "line number": [
      183,
      188,
      225
     ]
    },
    "workflows.recipe.test_recipe.generate_recipes": {
     "line number": [
      167,
      179,
      196,
      221
     ]
    },
    "workflows.recipe.test_recipe.pytest": {
     "line number": [
      169,
      176,
      181,
      186,
      191,
      198,
      202,
      206,
      210,
      217,
      223
     ]
    },
    "workflows.recipe.test_recipe.workflows": {
     "line number": [
      169,
      176,
      181,
      186,
      191,
      198,
      202,
      206,
      210,
      217,
      223
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.test_recipe.test_validate_tests_for_invalid_nodes": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "str": {
     "line number": [
      116,
      122,
      127,
      132,
      137,
      142,
      160
     ]
    },
    "workflows.recipe.test_recipe.generate_recipes": {
     "line number": [
      112,
      118,
      144
     ]
    },
    "workflows.recipe.test_recipe.pytest": {
     "line number": [
      114,
      120,
      125,
      130,
      135,
      140,
      158
     ]
    },
    "workflows.recipe.test_recipe.workflows": {
     "line number": [
      114,
      120,
      125,
      130,
      135,
      140,
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.test_recipe.workflows": {
  "data": {
   "shadows": "workflows"
  },
  "type": "import"
 },
 "workflows.recipe.test_recipe.workflows.recipe": {
  "data": {
   "shadows": "workflows.recipe"
  },
  "type": "import"
 },
 "workflows.recipe.test_validate": {
  "data": {},
  "type": "module"
 },
 "workflows.recipe.test_validate.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "workflows.recipe.test_validate.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "workflows.recipe.test_validate.main": {
  "data": {
   "shadows": "workflows.recipe.validate.main"
  },
  "type": "import"
 },
 "workflows.recipe.test_validate.mock": {
  "data": {
   "shadows": "mock"
  },
  "type": "import"
 },
 "workflows.recipe.test_validate.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "workflows.recipe.test_validate.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "workflows.recipe.test_validate.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "workflows.recipe.test_validate.test_command_line_validation_multiple_arguments": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "workflows.recipe.test_validate.mock": {
     "line number": [
      115,
      118,
      118,
      118,
      111
     ]
    },
    "workflows.recipe.test_validate.sys": {
     "line number": [
      115
     ]
    },
    "workflows.recipe.validate.main": {
     "line number": [
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.test_validate.test_command_line_validation_one_argument": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "workflows.recipe.test_validate.mock": {
     "line number": [
      97,
      93
     ]
    },
    "workflows.recipe.test_validate.sys": {
     "line number": [
      97
     ]
    },
    "workflows.recipe.validate.main": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.test_validate.test_exit_when_command_line_validation_given_no_arguments": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "SystemExit": {
     "line number": [
      105
     ]
    },
    "workflows.recipe.test_validate.mock": {
     "line number": [
      106
     ]
    },
    "workflows.recipe.test_validate.pytest": {
     "line number": [
      105
     ]
    },
    "workflows.recipe.test_validate.sys": {
     "line number": [
      106
     ]
    },
    "workflows.recipe.validate.main": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.test_validate.test_no_errors_when_validating_healthy_recipe": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "workflows.recipe.validate.validate_recipe": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.test_validate.test_system_exit_when_error_raised_from_command_line_validation": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      125
     ]
    },
    "SystemExit": {
     "line number": [
      128
     ]
    },
    "workflows.recipe.test_validate.mock": {
     "line number": [
      129,
      123
     ]
    },
    "workflows.recipe.test_validate.pytest": {
     "line number": [
      128
     ]
    },
    "workflows.recipe.test_validate.sys": {
     "line number": [
      129
     ]
    },
    "workflows.recipe.validate.main": {
     "line number": [
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.test_validate.test_validate_returns_type_error_when_called_without_parameters": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      15
     ]
    },
    "workflows.recipe.test_validate.pytest": {
     "line number": [
      15
     ]
    },
    "workflows.recipe.validate.validate_recipe": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.test_validate.test_value_error_when_validating_bad_json": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      65
     ]
    },
    "workflows.recipe.test_validate.pytest": {
     "line number": [
      65
     ]
    },
    "workflows.recipe.validate.validate_recipe": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.test_validate.test_workflows_error_when_validating_incorrect_workflows_recipe": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "workflows.recipe.test_validate.pytest": {
     "line number": [
      88
     ]
    },
    "workflows.recipe.test_validate.workflows": {
     "line number": [
      88
     ]
    },
    "workflows.recipe.validate.validate_recipe": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.test_validate.validate_recipe": {
  "data": {
   "shadows": "workflows.recipe.validate.validate_recipe"
  },
  "type": "import"
 },
 "workflows.recipe.test_validate.workflows": {
  "data": {
   "shadows": "workflows"
  },
  "type": "import"
 },
 "workflows.recipe.test_wrap_subscription": {
  "data": {},
  "type": "module"
 },
 "workflows.recipe.test_wrap_subscription.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "workflows.recipe.test_wrap_subscription.check_message_handling_via_unwrapper": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "callback": {
     "line number": [
      19,
      31,
      55
     ]
    },
    "workflows.recipe.test_wrap_subscription.mock": {
     "line number": [
      15,
      16,
      43,
      44,
      47,
      48,
      49,
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.test_wrap_subscription.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "workflows.recipe.test_wrap_subscription.mock": {
  "data": {
   "shadows": "mock"
  },
  "type": "import"
 },
 "workflows.recipe.test_wrap_subscription.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "workflows.recipe.test_wrap_subscription.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "workflows.recipe.test_wrap_subscription.test_wrapping_a_broadcast_subscription": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "callback": {
     "line number": [
      134,
      135,
      139
     ]
    },
    "workflows.recipe.test_wrap_subscription.check_message_handling_via_unwrapper": {
     "line number": [
      139
     ]
    },
    "workflows.recipe.test_wrap_subscription.mock": {
     "line number": [
      116,
      116,
      120,
      122,
      123,
      129,
      130,
      131,
      132,
      113
     ]
    },
    "workflows.recipe.test_wrap_subscription.workflows": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.test_wrap_subscription.test_wrapping_a_subscription": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "callback": {
     "line number": [
      83,
      84,
      88
     ]
    },
    "workflows.recipe.test_wrap_subscription.check_message_handling_via_unwrapper": {
     "line number": [
      88
     ]
    },
    "workflows.recipe.test_wrap_subscription.mock": {
     "line number": [
      65,
      65,
      69,
      71,
      72,
      78,
      79,
      80,
      81,
      62
     ]
    },
    "workflows.recipe.test_wrap_subscription.workflows": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.test_wrap_subscription.test_wrapping_a_subscription_allowing_non_recipe_messages": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "callback": {
     "line number": [
      106,
      110
     ]
    },
    "workflows.recipe.test_wrap_subscription.check_message_handling_via_unwrapper": {
     "line number": [
      110
     ]
    },
    "workflows.recipe.test_wrap_subscription.mock": {
     "line number": [
      94,
      94,
      98,
      100,
      101,
      91
     ]
    },
    "workflows.recipe.test_wrap_subscription.workflows": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.test_wrap_subscription.test_wrapping_a_subscription_with_log_extension": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "callback": {
     "line number": [
      167,
      168,
      175,
      180,
      197
     ]
    },
    "workflows.recipe.test_wrap_subscription.mock": {
     "line number": [
      148,
      148,
      161,
      166,
      166,
      174,
      175,
      180,
      191,
      192,
      193,
      195,
      198
     ]
    },
    "workflows.recipe.test_wrap_subscription.workflows": {
     "line number": [
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.test_wrap_subscription.test_wrapping_a_subscription_with_log_extension.recipient": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "workflows.recipe.test_wrap_subscription.workflows": {
  "data": {
   "shadows": "workflows"
  },
  "type": "import"
 },
 "workflows.recipe.test_wrap_subscription.workflows.recipe": {
  "data": {
   "shadows": "workflows.recipe"
  },
  "type": "import"
 },
 "workflows.recipe.test_wrapped_recipe": {
  "data": {},
  "type": "module"
 },
 "workflows.recipe.test_wrapped_recipe.Recipe": {
  "data": {
   "shadows": "workflows.recipe.Recipe"
  },
  "type": "import"
 },
 "workflows.recipe.test_wrapped_recipe.RecipeWrapper": {
  "data": {
   "shadows": "workflows.recipe.wrapper.RecipeWrapper"
  },
  "type": "import"
 },
 "workflows.recipe.test_wrapped_recipe.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "workflows.recipe.test_wrapped_recipe.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "workflows.recipe.test_wrapped_recipe.generate_recipe_message": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "workflows.recipe.test_wrapped_recipe.mock": {
     "line number": [
      24,
      30,
      31,
      32,
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.test_wrapped_recipe.mock": {
  "data": {
   "shadows": "mock"
  },
  "type": "import"
 },
 "workflows.recipe.test_wrapped_recipe.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "workflows.recipe.test_wrapped_recipe.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "workflows.recipe.test_wrapped_recipe.test_checkpointing_via_recipewrapper": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      277
     ]
    },
    "downstream_message": {
     "line number": [
      286,
      300
     ]
    },
    "workflows.recipe.test_wrapped_recipe.generate_recipe_message": {
     "line number": [
      259
     ]
    },
    "workflows.recipe.test_wrapped_recipe.mock": {
     "line number": [
      264,
      276,
      278,
      278,
      282,
      282,
      284,
      286,
      289,
      296,
      296,
      298,
      300,
      303
     ]
    },
    "workflows.recipe.test_wrapped_recipe.pytest": {
     "line number": [
      277
     ]
    },
    "workflows.recipe.test_wrapped_recipe.workflows": {
     "line number": [
      264
     ]
    },
    "workflows.recipe.wrapper.RecipeWrapper": {
     "line number": [
      276,
      280
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.test_wrapped_recipe.test_checkpointing_via_recipewrapper.downstream_message": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": {
    "workflows.recipe.test_wrapped_recipe.generate_recipe_message": {
     "line number": [
      269
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.test_wrapped_recipe.test_downstream_message_sending_via_recipewrapper_with_named_outputs": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "downstream_message": {
     "line number": [
      147,
      164,
      172,
      181,
      200
     ]
    },
    "workflows.recipe.test_wrapped_recipe.generate_recipe_message": {
     "line number": [
      121
     ]
    },
    "workflows.recipe.test_wrapped_recipe.mock": {
     "line number": [
      122,
      139,
      143,
      145,
      147,
      157,
      158,
      162,
      164,
      166,
      170,
      172,
      174,
      179,
      181,
      183,
      191,
      196,
      198,
      200
     ]
    },
    "workflows.recipe.test_wrapped_recipe.workflows": {
     "line number": [
      122
     ]
    },
    "workflows.recipe.wrapper.RecipeWrapper": {
     "line number": [
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.test_wrapped_recipe.test_downstream_message_sending_via_recipewrapper_with_named_outputs.downstream_message": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "workflows.recipe.test_wrapped_recipe.generate_recipe_message": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.test_wrapped_recipe.test_downstream_message_sending_via_recipewrapper_with_unnamed_output": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": {
    "downstream_message": {
     "line number": [
      221,
      235,
      249
     ]
    },
    "workflows.recipe.test_wrapped_recipe.mock": {
     "line number": [
      221,
      222,
      227,
      231,
      233,
      235,
      245,
      247,
      249
     ]
    },
    "workflows.recipe.test_wrapped_recipe.workflows": {
     "line number": [
      222
     ]
    },
    "workflows.recipe.wrapper.RecipeWrapper": {
     "line number": [
      223
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.test_wrapped_recipe.test_downstream_message_sending_via_recipewrapper_with_unnamed_output.downstream_message": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": {
    "list": {
     "line number": [
      217
     ]
    },
    "workflows.recipe.test_wrapped_recipe.generate_recipe_message": {
     "line number": [
      215
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.test_wrapped_recipe.test_parameter_replacement_in_recipe_wrapper": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": {
    "workflows.recipe.Recipe": {
     "line number": [
      363
     ]
    },
    "workflows.recipe.test_wrapped_recipe.generate_recipe_message": {
     "line number": [
      354
     ]
    },
    "workflows.recipe.test_wrapped_recipe.mock": {
     "line number": [
      368
     ]
    },
    "workflows.recipe.wrapper.RecipeWrapper": {
     "line number": [
      356
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.test_wrapped_recipe.test_recipe_wrapper_empty_constructor_fails": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      111
     ]
    },
    "workflows.recipe.test_wrapped_recipe.pytest": {
     "line number": [
      111
     ]
    },
    "workflows.recipe.wrapper.RecipeWrapper": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.test_wrapped_recipe.test_recipe_wrapper_instantiated_from_message": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "workflows.recipe.Recipe": {
     "line number": [
      46
     ]
    },
    "workflows.recipe.test_wrapped_recipe.generate_recipe_message": {
     "line number": [
      42
     ]
    },
    "workflows.recipe.test_wrapped_recipe.mock": {
     "line number": [
      51
     ]
    },
    "workflows.recipe.wrapper.RecipeWrapper": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.test_wrapped_recipe.test_recipe_wrapper_instantiated_from_message_with_string_conversion": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "str": {
     "line number": [
      58
     ]
    },
    "workflows.recipe.test_wrapped_recipe.generate_recipe_message": {
     "line number": [
      56
     ]
    },
    "workflows.recipe.wrapper.RecipeWrapper": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.test_wrapped_recipe.test_recipe_wrapper_instantiated_from_message_with_unicode_conversion": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "NameError": {
     "line number": [
      72
     ]
    },
    "unicode": {
     "line number": [
      71
     ]
    },
    "workflows.recipe.test_wrapped_recipe.generate_recipe_message": {
     "line number": [
      68
     ]
    },
    "workflows.recipe.test_wrapped_recipe.pytest": {
     "line number": [
      73
     ]
    },
    "workflows.recipe.wrapper.RecipeWrapper": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.test_wrapped_recipe.test_recipe_wrapper_instantiated_from_recipe": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "workflows.recipe.Recipe": {
     "line number": [
      88,
      97
     ]
    },
    "workflows.recipe.test_wrapped_recipe.generate_recipe_message": {
     "line number": [
      84
     ]
    },
    "workflows.recipe.wrapper.RecipeWrapper": {
     "line number": [
      86,
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.test_wrapped_recipe.test_start_command_via_recipewrapper": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      327
     ]
    },
    "downstream_message": {
     "line number": [
      342
     ]
    },
    "workflows.recipe.test_wrapped_recipe.generate_recipe_message": {
     "line number": [
      311
     ]
    },
    "workflows.recipe.test_wrapped_recipe.mock": {
     "line number": [
      313,
      328,
      332,
      337,
      340,
      344
     ]
    },
    "workflows.recipe.test_wrapped_recipe.pytest": {
     "line number": [
      327
     ]
    },
    "workflows.recipe.test_wrapped_recipe.workflows": {
     "line number": [
      313
     ]
    },
    "workflows.recipe.wrapper.RecipeWrapper": {
     "line number": [
      326,
      331
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.test_wrapped_recipe.test_start_command_via_recipewrapper.downstream_message": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": {
    "workflows.recipe.test_wrapped_recipe.generate_recipe_message": {
     "line number": [
      318
     ]
    },
    "workflows.recipe.test_wrapped_recipe.mock": {
     "line number": [
      322
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.test_wrapped_recipe.workflows": {
  "data": {
   "shadows": "workflows"
  },
  "type": "import"
 },
 "workflows.recipe.validate": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      78
     ]
    },
    "workflows.recipe.validate.main": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "module"
 },
 "workflows.recipe.validate.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "workflows.recipe.validate.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "workflows.recipe.validate.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "workflows.recipe.validate.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "workflows.recipe.validate.main": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      68
     ]
    },
    "print": {
     "line number": [
      74
     ]
    },
    "workflows.recipe.validate.argparse": {
     "line number": [
      57
     ]
    },
    "workflows.recipe.validate.sys": {
     "line number": [
      75
     ]
    },
    "workflows.recipe.validate.validate_recipe": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.validate.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "workflows.recipe.validate.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "workflows.recipe.validate.validate_recipe": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      35,
      50
     ]
    },
    "ValueError": {
     "line number": [
      43
     ]
    },
    "open": {
     "line number": [
      33
     ]
    },
    "workflows.recipe.validate.logging": {
     "line number": [
      36,
      45,
      48,
      51
     ]
    },
    "workflows.recipe.validate.workflows": {
     "line number": [
      42,
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.validate.workflows": {
  "data": {
   "shadows": "workflows"
  },
  "type": "import"
 },
 "workflows.recipe.validate.workflows.recipe": {
  "data": {
   "shadows": "workflows.recipe"
  },
  "type": "import"
 },
 "workflows.recipe.validate_recipe": {
  "data": {
   "shadows": "workflows.recipe.validate.validate_recipe"
  },
  "type": "import"
 },
 "workflows.recipe.wrap_subscribe": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "callback": {
     "line number": [
      78
     ]
    },
    "workflows.recipe._wrap_subscription": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.wrap_subscribe_broadcast": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "callback": {
     "line number": [
      100
     ]
    },
    "workflows.recipe._wrap_subscription": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.wrapper": {
  "data": {},
  "type": "module"
 },
 "workflows.recipe.wrapper.RecipeWrapper": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": {
    "object": {
     "line number": [
      6
     ]
    }
   }
  },
  "type": "class"
 },
 "workflows.recipe.wrapper.RecipeWrapper.__init__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      39
     ]
    },
    "int": {
     "line number": [
      20
     ]
    },
    "isinstance": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.wrapper.RecipeWrapper._generate_full_recipe_message": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "workflows.recipe.wrapper.RecipeWrapper._send_to_destination": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "workflows.recipe.wrapper.RecipeWrapper._send_to_destinations": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      188
     ]
    },
    "list": {
     "line number": [
      188
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.wrapper.RecipeWrapper.apply_parameters": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "workflows.recipe.wrapper.RecipeWrapper.checkpoint": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      141,
      147
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.wrapper.RecipeWrapper.send": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      52,
      58
     ]
    },
    "dict": {
     "line number": [
      67
     ]
    },
    "isinstance": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.wrapper.RecipeWrapper.send_to": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      83,
      89
     ]
    },
    "dict": {
     "line number": [
      98
     ]
    },
    "isinstance": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.wrapper.RecipeWrapper.set_default_channel": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "workflows.recipe.wrapper.RecipeWrapper.start": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      124,
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.recipe.wrapper.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "workflows.recipe.wrapper.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "workflows.recipe.wrapper.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "workflows.recipe.wrapper.workflows.recipe": {
  "data": {
   "shadows": "workflows.recipe"
  },
  "type": "import"
 },
 "workflows.services": {
  "data": {},
  "type": "module"
 },
 "workflows.services.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "workflows.services.common_service": {
  "data": {},
  "type": "module"
 },
 "workflows.services.common_service.Commands": {
  "data": {
   "lineno": 464
  },
  "type": "class"
 },
 "workflows.services.common_service.CommonService": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "object": {
     "line number": [
      71
     ]
    },
    "workflows.services.common_service.Status": {
     "line number": [
      108,
      109,
      110,
      111,
      112,
      113,
      114,
      115,
      116,
      117,
      121
     ]
    },
    "workflows.services.common_service.logging": {
     "line number": [
      125
     ]
    }
   }
  },
  "type": "class"
 },
 "workflows.services.common_service.CommonService.__command_queue_listener": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": {
    "EOFError": {
     "line number": [
      242
     ]
    },
    "next": {
     "line number": [
      249
     ]
    },
    "six.moves.queue.Full": {
     "line number": [
      252
     ]
    },
    "workflows.services.common_service.Priority": {
     "line number": [
      249
     ]
    },
    "workflows.services.common_service.itertools": {
     "line number": [
      237
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.common_service.CommonService.__init__": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "six.moves.queue.PriorityQueue": {
     "line number": [
      148
     ]
    },
    "workflows.services.common_service.logging": {
     "line number": [
      153
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.common_service.CommonService.__process_command": {
  "data": {
   "lineno": 458
  },
  "type": "function"
 },
 "workflows.services.common_service.CommonService.__send_service_status_to_frontend": {
  "data": {
   "lineno": 302
  },
  "type": "function"
 },
 "workflows.services.common_service.CommonService.__send_to_frontend": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "workflows.services.common_service.CommonService.__start_command_queue_listener": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": {
    "QueueListenerThread": {
     "line number": [
      275
     ]
    },
    "hasattr": {
     "line number": [
      273
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.common_service.CommonService.__start_command_queue_listener.QueueListenerThread": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": {
    "workflows.services.common_service.threading": {
     "line number": [
      269
     ]
    }
   }
  },
  "type": "class"
 },
 "workflows.services.common_service.CommonService.__start_command_queue_listener.QueueListenerThread.run": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": {
    "thread_function": {
     "line number": [
      271
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.common_service.CommonService.__update_service_status": {
  "data": {
   "lineno": 296
  },
  "type": "function"
 },
 "workflows.services.common_service.CommonService._log_send": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": {
    "setattr": {
     "line number": [
      283
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.common_service.CommonService._register": {
  "data": {
   "lineno": 286
  },
  "type": "function"
 },
 "workflows.services.common_service.CommonService._register_idle": {
  "data": {
   "lineno": 290
  },
  "type": "function"
 },
 "workflows.services.common_service.CommonService._request_termination": {
  "data": {
   "lineno": 317
  },
  "type": "function"
 },
 "workflows.services.common_service.CommonService._set_name": {
  "data": {
   "lineno": 312
  },
  "type": "function"
 },
 "workflows.services.common_service.CommonService._shutdown": {
  "data": {
   "lineno": 321
  },
  "type": "function"
 },
 "workflows.services.common_service.CommonService._transport_interceptor": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "workflows.services.common_service.CommonService._transport_interceptor.add_item_to_queue": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "next": {
     "line number": [
      192
     ]
    },
    "workflows.services.common_service.Priority": {
     "line number": [
      191
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.common_service.CommonService.connect": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "workflows.services.common_service.CommonService.extend_log": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      222
     ]
    },
    "setattr": {
     "line number": [
      223
     ]
    },
    "workflows.services.common_service.contextlib": {
     "line number": [
      215
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.common_service.CommonService.get_name": {
  "data": {
   "lineno": 308
  },
  "type": "function"
 },
 "workflows.services.common_service.CommonService.in_shutdown": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "workflows.services.common_service.CommonService.initialize_logging": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": {
    "list": {
     "line number": [
      332
     ]
    },
    "workflows.services.common_service.logging": {
     "line number": [
      332,
      333,
      338,
      341,
      346,
      349,
      353,
      354
     ]
    },
    "workflows.services.common_service.workflows": {
     "line number": [
      342
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.common_service.CommonService.initializing": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "workflows.services.common_service.CommonService.process_uncaught_exception": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": {
    "dir": {
     "line number": [
      452
     ]
    },
    "filter": {
     "line number": [
      452
     ]
    },
    "getattr": {
     "line number": [
      453
     ]
    },
    "workflows.services.common_service.workflows": {
     "line number": [
      443
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.common_service.CommonService.start": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      421,
      431
     ]
    },
    "KeyboardInterrupt": {
     "line number": [
      418
     ]
    },
    "callback": {
     "line number": [
      414
     ]
    },
    "processor": {
     "line number": [
      407
     ]
    },
    "six.moves.queue.Empty": {
     "line number": [
      390
     ]
    },
    "workflows.services.common_service.Priority": {
     "line number": [
      398,
      412
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.common_service.CommonService.start_transport": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      176
     ]
    },
    "workflows.services.common_service.itertools": {
     "line number": [
      178
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.common_service.CommonService.transport": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      167
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.common_service.Priority": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "workflows.services.common_service.enum": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "class"
 },
 "workflows.services.common_service.Status": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "workflows.services.common_service.enum": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "class"
 },
 "workflows.services.common_service.Status.__init__": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "workflows.services.common_service.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "workflows.services.common_service.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "workflows.services.common_service.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "workflows.services.common_service.enum": {
  "data": {
   "shadows": "enum"
  },
  "type": "import"
 },
 "workflows.services.common_service.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "workflows.services.common_service.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "workflows.services.common_service.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "workflows.services.common_service.queue": {
  "data": {
   "shadows": "six.moves.queue"
  },
  "type": "import"
 },
 "workflows.services.common_service.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "workflows.services.common_service.workflows": {
  "data": {
   "shadows": "workflows"
  },
  "type": "import"
 },
 "workflows.services.common_service.workflows.logging": {
  "data": {
   "shadows": "workflows.logging"
  },
  "type": "import"
 },
 "workflows.services.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "workflows.services.get_known_services": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      24
     ]
    },
    "setattr": {
     "line number": [
      25
     ]
    },
    "workflows.services.pkg_resources": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.lookup": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": {
    "workflows.services.get_known_services": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "workflows.services.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "workflows.services.sample_consumer": {
  "data": {},
  "type": "module"
 },
 "workflows.services.sample_consumer.CommonService": {
  "data": {
   "shadows": "workflows.services.common_service.CommonService"
  },
  "type": "import"
 },
 "workflows.services.sample_consumer.SampleConsumer": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "workflows.services.common_service.CommonService": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "class"
 },
 "workflows.services.sample_consumer.SampleConsumer.consume_message": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      35
     ]
    },
    "isinstance": {
     "line number": [
      35
     ]
    },
    "print": {
     "line number": [
      40
     ]
    },
    "workflows.services.sample_consumer.json": {
     "line number": [
      33,
      37
     ]
    },
    "workflows.services.sample_consumer.time": {
     "line number": [
      27,
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.sample_consumer.SampleConsumer.initializing": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "workflows.services.sample_consumer.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "workflows.services.sample_consumer.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "workflows.services.sample_consumer.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "workflows.services.sample_consumer.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "workflows.services.sample_consumer.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "workflows.services.sample_producer": {
  "data": {},
  "type": "module"
 },
 "workflows.services.sample_producer.CommonService": {
  "data": {
   "shadows": "workflows.services.common_service.CommonService"
  },
  "type": "import"
 },
 "workflows.services.sample_producer.SampleProducer": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "workflows.services.common_service.CommonService": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "class"
 },
 "workflows.services.sample_producer.SampleProducer.create_message": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "workflows.services.sample_producer.time": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.sample_producer.SampleProducer.initializing": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "workflows.services.sample_producer.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "workflows.services.sample_producer.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "workflows.services.sample_producer.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "workflows.services.sample_producer.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "workflows.services.sample_transaction": {
  "data": {},
  "type": "module"
 },
 "workflows.services.sample_transaction.CommonService": {
  "data": {
   "shadows": "workflows.services.common_service.CommonService"
  },
  "type": "import"
 },
 "workflows.services.sample_transaction.SampleTxn": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "workflows.services.common_service.CommonService": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "class"
 },
 "workflows.services.sample_transaction.SampleTxn.crashpoint": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "staticmethod": {
     "line number": [
      25
     ]
    },
    "workflows.services.sample_transaction.random": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.sample_transaction.SampleTxn.initializing": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "workflows.services.sample_transaction.SampleTxn.receive_message": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "print": {
     "line number": [
      34,
      35,
      36,
      38,
      42,
      45,
      49,
      52,
      56,
      60,
      64,
      65
     ]
    },
    "str": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.sample_transaction.SampleTxnProducer": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "workflows.services.common_service.CommonService": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "class"
 },
 "workflows.services.sample_transaction.SampleTxnProducer.create_message": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "workflows.services.sample_transaction.time": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.sample_transaction.SampleTxnProducer.initializing": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "workflows.services.sample_transaction.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "workflows.services.sample_transaction.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "workflows.services.sample_transaction.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "workflows.services.sample_transaction.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "workflows.services.sample_transaction.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "workflows.services.test_common_service": {
  "data": {},
  "type": "module"
 },
 "workflows.services.test_common_service.Commands": {
  "data": {
   "shadows": "workflows.services.common_service.Commands"
  },
  "type": "import"
 },
 "workflows.services.test_common_service.CommonService": {
  "data": {
   "shadows": "workflows.services.common_service.CommonService"
  },
  "type": "import"
 },
 "workflows.services.test_common_service.Pipe": {
  "data": {
   "shadows": "multiprocessing.Pipe"
  },
  "type": "import"
 },
 "workflows.services.test_common_service.Priority": {
  "data": {
   "shadows": "workflows.services.common_service.Priority"
  },
  "type": "import"
 },
 "workflows.services.test_common_service.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "workflows.services.test_common_service.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "workflows.services.test_common_service.mock": {
  "data": {
   "shadows": "mock"
  },
  "type": "import"
 },
 "workflows.services.test_common_service.pprint": {
  "data": {
   "shadows": "pprint"
  },
  "type": "import"
 },
 "workflows.services.test_common_service.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "workflows.services.test_common_service.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "workflows.services.test_common_service.queue": {
  "data": {
   "shadows": "six.moves.queue"
  },
  "type": "import"
 },
 "workflows.services.test_common_service.test_adding_fieldvalue_pairs_to_log_messages": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      53,
      54,
      62,
      63,
      71,
      72,
      79,
      80
     ]
    },
    "workflows.services.common_service.CommonService": {
     "line number": [
      44
     ]
    },
    "workflows.services.test_common_service.mock": {
     "line number": [
      42,
      53,
      53,
      54,
      54,
      62,
      63,
      63,
      71,
      72,
      79,
      79,
      80,
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.test_common_service.test_callbacks_are_routed_correctly": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      295
     ]
    },
    "multiprocessing.Pipe": {
     "line number": [
      297
     ]
    },
    "workflows.services.common_service.Commands.SHUTDOWN": {
     "line number": [
      294
     ]
    },
    "workflows.services.common_service.CommonService": {
     "line number": [
      301
     ]
    },
    "workflows.services.test_common_service.mock": {
     "line number": [
      290,
      293,
      293,
      298,
      303,
      309
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.test_common_service.test_can_pass_environment_to_service": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": {
    "EnvironmentPassingService": {
     "line number": [
      447,
      456
     ]
    },
    "workflows.services.test_common_service.mock": {
     "line number": [
      434,
      455,
      458
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.test_common_service.test_can_pass_environment_to_service.EnvironmentPassingService": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": {
    "workflows.services.common_service.CommonService": {
     "line number": [
      436
     ]
    }
   }
  },
  "type": "class"
 },
 "workflows.services.test_common_service.test_can_pass_environment_to_service.EnvironmentPassingService.get_environment": {
  "data": {
   "lineno": 442
  },
  "type": "function"
 },
 "workflows.services.test_common_service.test_commands_are_processed_from_main_queue_before_transport": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": {
    "multiprocessing.Pipe": {
     "line number": [
      538
     ]
    },
    "workflows.services.common_service.Commands.SHUTDOWN": {
     "line number": [
      548
     ]
    },
    "workflows.services.common_service.CommonService": {
     "line number": [
      543
     ]
    },
    "workflows.services.common_service.Priority.COMMAND": {
     "line number": [
      548
     ]
    },
    "workflows.services.common_service.Priority.TRANSPORT": {
     "line number": [
      546
     ]
    },
    "workflows.services.test_common_service.mock": {
     "line number": [
      537,
      540,
      544
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.test_common_service.test_idle_timer_is_triggered": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      247
     ]
    },
    "multiprocessing.Pipe": {
     "line number": [
      249
     ]
    },
    "six.moves.queue.Empty": {
     "line number": [
      245
     ]
    },
    "workflows.services.common_service.Commands.SHUTDOWN": {
     "line number": [
      246
     ]
    },
    "workflows.services.common_service.CommonService": {
     "line number": [
      253
     ]
    },
    "workflows.services.common_service.Priority.COMMAND": {
     "line number": [
      246
     ]
    },
    "workflows.services.test_common_service.mock": {
     "line number": [
      242,
      243,
      250,
      254,
      255,
      266
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.test_common_service.test_instantiate_basic_service": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "workflows.services.common_service.CommonService": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.test_common_service.test_log_message_fieldvalue_pairs_are_attached_to_unhandled_exceptions_and_logged_properly": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "ZeroDivisionError": {
     "line number": [
      134
     ]
    },
    "dir": {
     "line number": [
      145
     ]
    },
    "getattr": {
     "line number": [
      135,
      148
     ]
    },
    "workflows.services.common_service.CommonService": {
     "line number": [
      126
     ]
    },
    "workflows.services.test_common_service.mock": {
     "line number": [
      125,
      148
     ]
    },
    "workflows.services.test_common_service.pprint": {
     "line number": [
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.test_common_service.test_log_message_fieldvalue_pairs_are_removed_outside_their_context": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "ZeroDivisionError": {
     "line number": [
      98,
      111
     ]
    },
    "getattr": {
     "line number": [
      96,
      106,
      119
     ]
    },
    "workflows.services.common_service.CommonService": {
     "line number": [
      87
     ]
    },
    "workflows.services.test_common_service.mock": {
     "line number": [
      85,
      96,
      96,
      98,
      106,
      119,
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.test_common_service.test_log_unknown_band_data": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      320
     ]
    },
    "len": {
     "line number": [
      337
     ]
    },
    "multiprocessing.Pipe": {
     "line number": [
      322
     ]
    },
    "str": {
     "line number": [
      340
     ]
    },
    "workflows.services.common_service.Commands.SHUTDOWN": {
     "line number": [
      319
     ]
    },
    "workflows.services.common_service.CommonService": {
     "line number": [
      325
     ]
    },
    "workflows.services.test_common_service.mock": {
     "line number": [
      314,
      317,
      317,
      318,
      340
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.test_common_service.test_logging_to_frontend": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "str": {
     "line number": [
      37
     ]
    },
    "workflows.services.common_service.CommonService": {
     "line number": [
      22
     ]
    },
    "workflows.services.test_common_service.mock": {
     "line number": [
      21,
      31,
      34,
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.test_common_service.test_main_queue_can_deal_with_being_empty": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      503
     ]
    },
    "multiprocessing.Pipe": {
     "line number": [
      505
     ]
    },
    "workflows.services.common_service.Commands.SHUTDOWN": {
     "line number": [
      502
     ]
    },
    "workflows.services.common_service.CommonService": {
     "line number": [
      508
     ]
    },
    "workflows.services.common_service.Priority.COMMAND": {
     "line number": [
      502
     ]
    },
    "workflows.services.test_common_service.mock": {
     "line number": [
      498,
      499,
      509
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.test_common_service.test_observe_shutdown_command": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      197
     ]
    },
    "multiprocessing.Pipe": {
     "line number": [
      199
     ]
    },
    "workflows.services.common_service.Commands.SHUTDOWN": {
     "line number": [
      196
     ]
    },
    "workflows.services.common_service.CommonService": {
     "line number": [
      202
     ]
    },
    "workflows.services.common_service.Priority.COMMAND": {
     "line number": [
      196
     ]
    },
    "workflows.services.test_common_service.mock": {
     "line number": [
      193,
      194,
      203,
      205,
      206
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.test_common_service.test_receive_frontend_commands": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      159,
      165
     ]
    },
    "EOFError": {
     "line number": [
      164
     ]
    },
    "workflows.services.common_service.CommonService": {
     "line number": [
      170
     ]
    },
    "workflows.services.common_service.Priority.COMMAND": {
     "line number": [
      184,
      185
     ]
    },
    "workflows.services.test_common_service.mock": {
     "line number": [
      154,
      162,
      163,
      167,
      172,
      184,
      184,
      184,
      185,
      185,
      185,
      151
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.test_common_service.test_service_can_change_name_and_shut_itself_down": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": {
    "NameChangingService": {
     "line number": [
      401
     ]
    },
    "workflows.services.test_common_service.mock": {
     "line number": [
      391,
      406
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.test_common_service.test_service_can_change_name_and_shut_itself_down.NameChangingService": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": {
    "workflows.services.common_service.CommonService": {
     "line number": [
      393
     ]
    }
   }
  },
  "type": "class"
 },
 "workflows.services.test_common_service.test_service_can_change_name_and_shut_itself_down.NameChangingService.initializing": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": {
    "workflows.services.test_common_service.mock": {
     "line number": [
      398
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.test_common_service.test_service_can_mark_itself_as_unstable": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": {
    "UnstableService": {
     "line number": [
      424
     ]
    },
    "workflows.services.test_common_service.mock": {
     "line number": [
      415
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.test_common_service.test_service_can_mark_itself_as_unstable.UnstableService": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": {
    "workflows.services.common_service.CommonService": {
     "line number": [
      417
     ]
    }
   }
  },
  "type": "class"
 },
 "workflows.services.test_common_service.test_service_can_mark_itself_as_unstable.UnstableService.initializing": {
  "data": {
   "lineno": 420
  },
  "type": "function"
 },
 "workflows.services.test_common_service.test_service_initialization_crashes_are_handled_correctly": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": {
    "CrashOnInitService": {
     "line number": [
      361
     ]
    },
    "filter": {
     "line number": [
      374
     ]
    },
    "list": {
     "line number": [
      373
     ]
    },
    "workflows.services.test_common_service.mock": {
     "line number": [
      347,
      375
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.test_common_service.test_service_initialization_crashes_are_handled_correctly.CrashOnInitService": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": {
    "workflows.services.common_service.CommonService": {
     "line number": [
      349
     ]
    }
   }
  },
  "type": "class"
 },
 "workflows.services.test_common_service.test_service_initialization_crashes_are_handled_correctly.CrashOnInitService.initializing": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": {
    "staticmethod": {
     "line number": [
      356
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.test_common_service.test_transport_callbacks_are_processed_from_main_queue": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      589
     ]
    },
    "multiprocessing.Pipe": {
     "line number": [
      591
     ]
    },
    "workflows.services.common_service.Commands.SHUTDOWN": {
     "line number": [
      588
     ]
    },
    "workflows.services.common_service.CommonService": {
     "line number": [
      594
     ]
    },
    "workflows.services.common_service.Priority.COMMAND": {
     "line number": [
      588
     ]
    },
    "workflows.services.common_service.Priority.TRANSPORT": {
     "line number": [
      584
     ]
    },
    "workflows.services.test_common_service.mock": {
     "line number": [
      579,
      580,
      581,
      586,
      586,
      595,
      606,
      606
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.test_common_service.test_transport_connection_is_started_on_initialization": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": {
    "workflows.services.common_service.CommonService": {
     "line number": [
      487
     ]
    },
    "workflows.services.test_common_service.mock": {
     "line number": [
      488
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.test_common_service.test_transport_object_can_be_injected": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": {
    "workflows.services.common_service.CommonService": {
     "line number": [
      463
     ]
    },
    "workflows.services.test_common_service.mock": {
     "line number": [
      465
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.test_common_service.test_transport_object_can_not_be_overwritten": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      479
     ]
    },
    "workflows.services.common_service.CommonService": {
     "line number": [
      474
     ]
    },
    "workflows.services.test_common_service.mock": {
     "line number": [
      476,
      477
     ]
    },
    "workflows.services.test_common_service.pytest": {
     "line number": [
      479
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.test_common_service.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "workflows.services.test_sample_service_consumer": {
  "data": {},
  "type": "module"
 },
 "workflows.services.test_sample_service_consumer.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "workflows.services.test_sample_service_consumer.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "workflows.services.test_sample_service_consumer.mock": {
  "data": {
   "shadows": "mock"
  },
  "type": "import"
 },
 "workflows.services.test_sample_service_consumer.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "workflows.services.test_sample_service_consumer.test_service_can_be_looked_up": {
  "data": {
   "lineno": 8
  },
  "type": "function"
 },
 "workflows.services.test_sample_service_consumer.test_service_can_consume_messages": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "workflows.services.test_sample_service_consumer.mock": {
     "line number": [
      28,
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.test_sample_service_consumer.test_service_subscribes_to_channel": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "setattr": {
     "line number": [
      18
     ]
    },
    "workflows.services.test_sample_service_consumer.mock": {
     "line number": [
      17,
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.test_sample_service_consumer.workflows.services": {
  "data": {
   "shadows": "workflows.services"
  },
  "type": "import"
 },
 "workflows.services.test_sample_service_consumer.workflows.services.sample_consumer": {
  "data": {
   "shadows": "workflows.services.sample_consumer"
  },
  "type": "import"
 },
 "workflows.services.test_sample_service_producer": {
  "data": {},
  "type": "module"
 },
 "workflows.services.test_sample_service_producer.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "workflows.services.test_sample_service_producer.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "workflows.services.test_sample_service_producer.mock": {
  "data": {
   "shadows": "mock"
  },
  "type": "import"
 },
 "workflows.services.test_sample_service_producer.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "workflows.services.test_sample_service_producer.test_service_can_be_looked_up": {
  "data": {
   "lineno": 8
  },
  "type": "function"
 },
 "workflows.services.test_sample_service_producer.test_service_produces_messages": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "setattr": {
     "line number": [
      29
     ]
    },
    "workflows.services.test_sample_service_producer.mock": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.test_sample_service_producer.test_service_registers_idle_timer": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "setattr": {
     "line number": [
      18
     ]
    },
    "workflows.services.test_sample_service_producer.mock": {
     "line number": [
      17,
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.test_sample_service_producer.workflows.services": {
  "data": {
   "shadows": "workflows.services"
  },
  "type": "import"
 },
 "workflows.services.test_sample_service_producer.workflows.services.sample_producer": {
  "data": {
   "shadows": "workflows.services.sample_producer"
  },
  "type": "import"
 },
 "workflows.services.test_sample_service_transaction": {
  "data": {},
  "type": "module"
 },
 "workflows.services.test_sample_service_transaction.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "workflows.services.test_sample_service_transaction.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "workflows.services.test_sample_service_transaction.mock": {
  "data": {
   "shadows": "mock"
  },
  "type": "import"
 },
 "workflows.services.test_sample_service_transaction.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "workflows.services.test_sample_service_transaction.setup_txnservice": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "setattr": {
     "line number": [
      76
     ]
    },
    "workflows.services.test_sample_service_transaction.mock": {
     "line number": [
      71,
      71,
      74,
      75,
      77,
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.test_sample_service_transaction.test_services_can_be_looked_up": {
  "data": {
   "lineno": 8
  },
  "type": "function"
 },
 "workflows.services.test_sample_service_transaction.test_txnproducer_produces_messages": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "setattr": {
     "line number": [
      31
     ]
    },
    "workflows.services.test_sample_service_transaction.mock": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.test_sample_service_transaction.test_txnproducer_registers_idle_timer": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "setattr": {
     "line number": [
      20
     ]
    },
    "workflows.services.test_sample_service_transaction.mock": {
     "line number": [
      19,
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.test_sample_service_transaction.test_txnservice_crash_function_crashes_sometimes": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "all": {
     "line number": [
      65
     ]
    },
    "any": {
     "line number": [
      64
     ]
    },
    "fn": {
     "line number": [
      64,
      65
     ]
    },
    "range": {
     "line number": [
      64,
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.test_sample_service_transaction.test_txnservice_subscribes_to_channel": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "setattr": {
     "line number": [
      51
     ]
    },
    "workflows.services.test_sample_service_transaction.mock": {
     "line number": [
      50,
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.test_sample_service_transaction.test_txnservice_uses_transactions_correctly": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "workflows.services.test_sample_service_transaction.mock": {
     "line number": [
      94,
      100,
      100,
      100,
      104,
      110,
      110,
      110,
      113,
      113,
      113,
      116,
      122,
      122,
      122,
      125,
      125,
      125,
      127
     ]
    },
    "workflows.services.test_sample_service_transaction.setup_txnservice": {
     "line number": [
      88,
      96,
      106,
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.test_sample_service_transaction.workflows.services": {
  "data": {
   "shadows": "workflows.services"
  },
  "type": "import"
 },
 "workflows.services.test_sample_service_transaction.workflows.services.sample_transaction": {
  "data": {
   "shadows": "workflows.services.sample_transaction"
  },
  "type": "import"
 },
 "workflows.services.test_services": {
  "data": {},
  "type": "module"
 },
 "workflows.services.test_services.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "workflows.services.test_services.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "workflows.services.test_services.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "workflows.services.test_services.test_known_services_is_a_dictionary": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      8
     ]
    },
    "isinstance": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.services.test_services.workflows.services": {
  "data": {
   "shadows": "workflows.services"
  },
  "type": "import"
 },
 "workflows.test_basics": {
  "data": {},
  "type": "module"
 },
 "workflows.test_basics.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "workflows.test_basics.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "workflows.test_basics.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "workflows.test_basics.test_workflows_version_returns_sensible_value": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": {
    "workflows.test_basics.workflows": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.test_basics.workflows": {
  "data": {
   "shadows": "workflows"
  },
  "type": "import"
 },
 "workflows.transport.common_transport": {
  "data": {},
  "type": "module"
 },
 "workflows.transport.common_transport.CommonTransport": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "object": {
     "line number": [
      8
     ]
    },
    "set": {
     "line number": [
      15
     ]
    },
    "workflows.transport.common_transport.logging": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "class"
 },
 "workflows.transport.common_transport.CommonTransport._ack": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      391
     ]
    },
    "staticmethod": {
     "line number": [
      381
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport._broadcast": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      379
     ]
    },
    "staticmethod": {
     "line number": [
      368
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport._mangle_for_receiving": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": {
    "staticmethod": {
     "line number": [
      443
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport._mangle_for_sending": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": {
    "staticmethod": {
     "line number": [
      437
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport._nack": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      403
     ]
    },
    "staticmethod": {
     "line number": [
      393
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport._send": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      366
     ]
    },
    "staticmethod": {
     "line number": [
      355
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport._subscribe": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      335
     ]
    },
    "staticmethod": {
     "line number": [
      324
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport._subscribe_broadcast": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      346
     ]
    },
    "staticmethod": {
     "line number": [
      337
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport._transaction_abort": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      419
     ]
    },
    "staticmethod": {
     "line number": [
      413
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport._transaction_begin": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      411
     ]
    },
    "staticmethod": {
     "line number": [
      405
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport._transaction_commit": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      427
     ]
    },
    "staticmethod": {
     "line number": [
      421
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport._unsubscribe": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      353
     ]
    },
    "staticmethod": {
     "line number": [
      348
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport.ack": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      243
     ]
    },
    "isinstance": {
     "line number": [
      243
     ]
    },
    "workflows.transport.common_transport.workflows": {
     "line number": [
      250,
      252
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport.broadcast": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport.connect": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "staticmethod": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport.disconnect": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "staticmethod": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport.drop_callback_reference": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "workflows.transport.common_transport.workflows": {
     "line number": [
      104,
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport.is_connected": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "staticmethod": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport.nack": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      272
     ]
    },
    "isinstance": {
     "line number": [
      272
     ]
    },
    "workflows.transport.common_transport.workflows": {
     "line number": [
      279,
      281
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport.raw_broadcast": {
  "data": {
   "lineno": 217
  },
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport.raw_send": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport.send": {
  "data": {
   "lineno": 175
  },
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport.subscribe": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "callback": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport.subscribe.mangled_callback": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "callback": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport.subscribe_broadcast": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "callback": {
     "line number": [
      131
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport.subscribe_broadcast.mangled_callback": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "callback": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport.subscription_callback": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "callback": {
     "line number": [
      160,
      162,
      163
     ]
    },
    "workflows.transport.common_transport.workflows": {
     "line number": [
      159
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport.subscription_callback_set_intercept": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport.transaction_abort": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": {
    "workflows.transport.common_transport.workflows": {
     "line number": [
      304
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport.transaction_begin": {
  "data": {
   "lineno": 287
  },
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport.transaction_commit": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": {
    "workflows.transport.common_transport.workflows": {
     "line number": [
      315
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.common_transport.CommonTransport.unsubscribe": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "workflows.transport.common_transport.workflows": {
     "line number": [
      87,
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.common_transport.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "workflows.transport.common_transport.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "workflows.transport.common_transport.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "workflows.transport.common_transport.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "workflows.transport.common_transport.workflows": {
  "data": {
   "shadows": "workflows"
  },
  "type": "import"
 },
 "workflows.transport.stomp_transport": {
  "data": {},
  "type": "module"
 },
 "workflows.transport.stomp_transport.CommonTransport": {
  "data": {
   "shadows": "workflows.transport.common_transport.CommonTransport"
  },
  "type": "import"
 },
 "workflows.transport.stomp_transport.StompTransport": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "workflows.transport.common_transport.CommonTransport": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "class"
 },
 "workflows.transport.stomp_transport.StompTransport.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "workflows.transport.stomp_transport.stomp": {
     "line number": [
      33
     ]
    },
    "workflows.transport.stomp_transport.threading": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.stomp_transport.StompTransport._ack": {
  "data": {
   "lineno": 455
  },
  "type": "function"
 },
 "workflows.transport.stomp_transport.StompTransport._broadcast": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": {
    "int": {
     "line number": [
      423
     ]
    },
    "workflows.transport.stomp_transport.stomp": {
     "line number": [
      430
     ]
    },
    "workflows.transport.stomp_transport.time": {
     "line number": [
      423
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.stomp_transport.StompTransport._mangle_for_receiving": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      495
     ]
    },
    "ValueError": {
     "line number": [
      495
     ]
    },
    "staticmethod": {
     "line number": [
      485
     ]
    },
    "workflows.transport.stomp_transport.json": {
     "line number": [
      494
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.stomp_transport.StompTransport._mangle_for_sending": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": {
    "staticmethod": {
     "line number": [
      477
     ]
    },
    "workflows.transport.stomp_transport.json": {
     "line number": [
      483
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.stomp_transport.StompTransport._nack": {
  "data": {
   "lineno": 466
  },
  "type": "function"
 },
 "workflows.transport.stomp_transport.StompTransport._on_message": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": {
    "int": {
     "line number": [
      501
     ]
    },
    "repr": {
     "line number": [
      507,
      507
     ]
    },
    "target_function": {
     "line number": [
      504
     ]
    },
    "workflows.transport.stomp_transport.workflows": {
     "line number": [
      506
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.stomp_transport.StompTransport._send": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": {
    "int": {
     "line number": [
      391,
      393
     ]
    },
    "workflows.transport.stomp_transport.stomp": {
     "line number": [
      400
     ]
    },
    "workflows.transport.stomp_transport.time": {
     "line number": [
      393
     ]
    },
    "workflows.transport.stomp_transport.workflows": {
     "line number": [
      402
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.stomp_transport.StompTransport._subscribe": {
  "data": {
   "lineno": 293
  },
  "type": "function"
 },
 "workflows.transport.stomp_transport.StompTransport._subscribe_broadcast": {
  "data": {
   "lineno": 336
  },
  "type": "function"
 },
 "workflows.transport.stomp_transport.StompTransport._transaction_abort": {
  "data": {
   "lineno": 441
  },
  "type": "function"
 },
 "workflows.transport.stomp_transport.StompTransport._transaction_begin": {
  "data": {
   "lineno": 434
  },
  "type": "function"
 },
 "workflows.transport.stomp_transport.StompTransport._transaction_commit": {
  "data": {
   "lineno": 448
  },
  "type": "function"
 },
 "workflows.transport.stomp_transport.StompTransport._unsubscribe": {
  "data": {
   "lineno": 361
  },
  "type": "function"
 },
 "workflows.transport.stomp_transport.StompTransport.add_command_line_options": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      64
     ]
    },
    "dir": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.stomp_transport.StompTransport.add_command_line_options_argparse": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      72
     ]
    },
    "int": {
     "line number": [
      99
     ]
    },
    "str": {
     "line number": [
      91,
      107,
      115,
      123,
      131
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.stomp_transport.StompTransport.add_command_line_options_argparse.SetParameter": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "workflows.transport.stomp_transport.argparse": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "class"
 },
 "workflows.transport.stomp_transport.StompTransport.add_command_line_options_argparse.SetParameter.__call__": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "workflows.transport.stomp_transport.StompTransport.add_command_line_options_optparse": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.stomp_transport.StompTransport.add_command_line_options_optparse.set_parameter": {
  "data": {
   "lineno": 140
  },
  "type": "function"
 },
 "workflows.transport.stomp_transport.StompTransport.broadcast_status": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": {
    "int": {
     "line number": [
      290
     ]
    },
    "str": {
     "line number": [
      290
     ]
    },
    "workflows.transport.stomp_transport.json": {
     "line number": [
      289
     ]
    },
    "workflows.transport.stomp_transport.time": {
     "line number": [
      290
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.stomp_transport.StompTransport.connect": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": {
    "int": {
     "line number": [
      217
     ]
    },
    "workflows.transport.stomp_transport.stomp": {
     "line number": [
      211,
      228,
      247
     ]
    },
    "workflows.transport.stomp_transport.threading": {
     "line number": [
      239
     ]
    },
    "workflows.transport.stomp_transport.time": {
     "line number": [
      238,
      252,
      256
     ]
    },
    "workflows.transport.stomp_transport.workflows": {
     "line number": [
      229,
      248,
      259,
      263
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.stomp_transport.StompTransport.disconnect": {
  "data": {
   "lineno": 279
  },
  "type": "function"
 },
 "workflows.transport.stomp_transport.StompTransport.get_namespace": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "workflows.transport.stomp_transport.StompTransport.is_connected": {
  "data": {
   "lineno": 274
  },
  "type": "function"
 },
 "workflows.transport.stomp_transport.StompTransport.load_configuration_file": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      45
     ]
    },
    "six.moves.configparser.ConfigParser": {
     "line number": [
      47
     ]
    },
    "six.moves.configparser.NoOptionError": {
     "line number": [
      61
     ]
    },
    "workflows.transport.stomp_transport.workflows": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.stomp_transport.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "workflows.transport.stomp_transport.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "workflows.transport.stomp_transport.configparser": {
  "data": {
   "shadows": "six.moves.configparser"
  },
  "type": "import"
 },
 "workflows.transport.stomp_transport.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "workflows.transport.stomp_transport.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "workflows.transport.stomp_transport.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "workflows.transport.stomp_transport.stomp": {
  "data": {
   "shadows": "stomp"
  },
  "type": "import"
 },
 "workflows.transport.stomp_transport.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "workflows.transport.stomp_transport.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "workflows.transport.stomp_transport.workflows": {
  "data": {
   "shadows": "workflows"
  },
  "type": "import"
 },
 "workflows.transport.test_common_transport": {
  "data": {},
  "type": "module"
 },
 "workflows.transport.test_common_transport.CommonTransport": {
  "data": {
   "shadows": "workflows.transport.common_transport.CommonTransport"
  },
  "type": "import"
 },
 "workflows.transport.test_common_transport.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "workflows.transport.test_common_transport.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "workflows.transport.test_common_transport.mock": {
  "data": {
   "shadows": "mock"
  },
  "type": "import"
 },
 "workflows.transport.test_common_transport.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "workflows.transport.test_common_transport.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "workflows.transport.test_common_transport.test_broadcast_subscription_messages_pass_mangling_function": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "workflows.transport.common_transport.CommonTransport": {
     "line number": [
      124
     ]
    },
    "workflows.transport.test_common_transport.mock": {
     "line number": [
      125,
      126,
      128,
      131,
      131,
      132,
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.test_common_transport.test_callbacks_can_be_intercepted": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "workflows.transport.common_transport.CommonTransport": {
     "line number": [
      138
     ]
    },
    "workflows.transport.test_common_transport.mock": {
     "line number": [
      139,
      140,
      141,
      144,
      147,
      151,
      151,
      153,
      153,
      160,
      160,
      162,
      164,
      164,
      171,
      171,
      173,
      173,
      180,
      180,
      182,
      182
     ]
    },
    "workflows.transport.test_common_transport.pytest": {
     "line number": [
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.test_common_transport.test_create_and_destroy_transactions": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": {
    "workflows.transport.common_transport.CommonTransport": {
     "line number": [
      243
     ]
    },
    "workflows.transport.test_common_transport.mock": {
     "line number": [
      244,
      245,
      246
     ]
    },
    "workflows.transport.test_common_transport.pytest": {
     "line number": [
      254,
      262
     ]
    },
    "workflows.transport.test_common_transport.workflows": {
     "line number": [
      254,
      262
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.test_common_transport.test_messages_can_be_acknowledged_and_rejected": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": {
    "workflows.transport.common_transport.CommonTransport": {
     "line number": [
      269
     ]
    },
    "workflows.transport.test_common_transport.mock": {
     "line number": [
      270,
      271,
      273,
      273,
      274,
      274,
      275,
      275,
      276,
      276,
      279,
      280,
      285,
      286,
      290,
      290,
      291,
      291,
      292,
      292,
      293,
      293,
      294,
      294,
      295,
      295,
      300,
      302,
      304,
      308,
      310,
      312
     ]
    },
    "workflows.transport.test_common_transport.pytest": {
     "line number": [
      297,
      299,
      301,
      303,
      305,
      307,
      309,
      311
     ]
    },
    "workflows.transport.test_common_transport.workflows": {
     "line number": [
      297,
      299,
      301,
      303,
      305,
      307,
      309,
      311
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.test_common_transport.test_simple_broadcast_message": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": {
    "workflows.transport.common_transport.CommonTransport": {
     "line number": [
      217
     ]
    },
    "workflows.transport.test_common_transport.mock": {
     "line number": [
      218,
      221,
      222,
      223,
      224,
      225,
      229,
      230,
      231,
      232,
      233,
      236,
      236,
      238,
      238
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.test_common_transport.test_simple_send_message": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": {
    "workflows.transport.common_transport.CommonTransport": {
     "line number": [
      188
     ]
    },
    "workflows.transport.test_common_transport.mock": {
     "line number": [
      189,
      192,
      193,
      194,
      195,
      196,
      197,
      201,
      202,
      203,
      204,
      205,
      206,
      209,
      209,
      211,
      211
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.test_common_transport.test_simple_subscribe_unsubscribe_a_broadcast": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "callback": {
     "line number": [
      95,
      96
     ]
    },
    "workflows.transport.common_transport.CommonTransport": {
     "line number": [
      78
     ]
    },
    "workflows.transport.test_common_transport.mock": {
     "line number": [
      79,
      80,
      81,
      84,
      86,
      93,
      93,
      93,
      96,
      96,
      97,
      97
     ]
    },
    "workflows.transport.test_common_transport.pytest": {
     "line number": [
      99,
      106,
      114,
      118
     ]
    },
    "workflows.transport.test_common_transport.workflows": {
     "line number": [
      99,
      106,
      114,
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.test_common_transport.test_subscribe_unsubscribe_a_channel": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "callback": {
     "line number": [
      35
     ]
    },
    "workflows.transport.common_transport.CommonTransport": {
     "line number": [
      12
     ]
    },
    "workflows.transport.test_common_transport.mock": {
     "line number": [
      13,
      14,
      15,
      18,
      20,
      21,
      29,
      30,
      31,
      32,
      35,
      35,
      36,
      36
     ]
    },
    "workflows.transport.test_common_transport.pytest": {
     "line number": [
      38,
      46,
      54,
      58
     ]
    },
    "workflows.transport.test_common_transport.workflows": {
     "line number": [
      38,
      46,
      54,
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.test_common_transport.test_subscription_messages_pass_mangling_function": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "workflows.transport.common_transport.CommonTransport": {
     "line number": [
      64
     ]
    },
    "workflows.transport.test_common_transport.mock": {
     "line number": [
      65,
      66,
      68,
      71,
      71,
      72,
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.test_common_transport.test_unimplemented_communication_methods_should_fail": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      332
     ]
    },
    "getattr": {
     "line number": [
      333
     ]
    },
    "workflows.transport.common_transport.CommonTransport": {
     "line number": [
      318
     ]
    },
    "workflows.transport.test_common_transport.mock": {
     "line number": [
      333
     ]
    },
    "workflows.transport.test_common_transport.pytest": {
     "line number": [
      332
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.test_common_transport.workflows": {
  "data": {
   "shadows": "workflows"
  },
  "type": "import"
 },
 "workflows.transport.test_stomp_transport": {
  "data": {},
  "type": "module"
 },
 "workflows.transport.test_stomp_transport.StompTransport": {
  "data": {
   "shadows": "workflows.transport.stomp_transport.StompTransport"
  },
  "type": "import"
 },
 "workflows.transport.test_stomp_transport.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "workflows.transport.test_stomp_transport.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "workflows.transport.test_stomp_transport.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "workflows.transport.test_stomp_transport.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "workflows.transport.test_stomp_transport.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "workflows.transport.test_stomp_transport.mock": {
  "data": {
   "shadows": "mock"
  },
  "type": "import"
 },
 "workflows.transport.test_stomp_transport.optparse": {
  "data": {
   "shadows": "optparse"
  },
  "type": "import"
 },
 "workflows.transport.test_stomp_transport.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "workflows.transport.test_stomp_transport.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "workflows.transport.test_stomp_transport.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "workflows.transport.test_stomp_transport.reload": {
  "data": {
   "shadows": "imp.reload"
  },
  "type": "import"
 },
 "workflows.transport.test_stomp_transport.stomppy": {
  "data": {
   "shadows": "stomp"
  },
  "type": "import"
 },
 "workflows.transport.test_stomp_transport.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "workflows.transport.test_stomp_transport.test_ack_message": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": {
    "stomp": {
     "line number": [
      626
     ]
    },
    "stomp._ack": {
     "line number": [
      631,
      634
     ]
    },
    "stomp._subscribe": {
     "line number": [
      630
     ]
    },
    "stomp.connect": {
     "line number": [
      627
     ]
    },
    "str": {
     "line number": [
      630
     ]
    },
    "workflows.transport.stomp_transport.StompTransport": {
     "line number": [
      626
     ]
    },
    "workflows.transport.test_stomp_transport.mock": {
     "line number": [
      630,
      631,
      632,
      634,
      634,
      636,
      636,
      623
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_add_command_line_help_argparse": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "workflows.transport.stomp_transport.StompTransport": {
     "line number": [
      45
     ]
    },
    "workflows.transport.test_stomp_transport.inspect": {
     "line number": [
      51
     ]
    },
    "workflows.transport.test_stomp_transport.mock": {
     "line number": [
      42,
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_add_command_line_help_optparse": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "workflows.transport.stomp_transport.StompTransport": {
     "line number": [
      31
     ]
    },
    "workflows.transport.test_stomp_transport.mock": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_adding_arguments_to_argparser": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "workflows.transport.stomp_transport.StompTransport": {
     "line number": [
      58
     ]
    },
    "workflows.transport.test_stomp_transport.argparse": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_anonymous_connection": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "globals": {
     "line number": [
      141
     ]
    },
    "imp.reload": {
     "line number": [
      140
     ]
    },
    "stomp": {
     "line number": [
      130,
      136
     ]
    },
    "stomp.add_command_line_options": {
     "line number": [
      131
     ]
    },
    "stomp.connect": {
     "line number": [
      137
     ]
    },
    "workflows.transport.stomp_transport.StompTransport": {
     "line number": [
      130,
      136
     ]
    },
    "workflows.transport.test_stomp_transport.mock": {
     "line number": [
      127,
      123
     ]
    },
    "workflows.transport.test_stomp_transport.optparse": {
     "line number": [
      129
     ]
    },
    "workflows.transport.test_stomp_transport.workflows": {
     "line number": [
      140,
      141
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_broadcast_status": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": {
    "int": {
     "line number": [
      221
     ]
    },
    "stomp": {
     "line number": [
      212
     ]
    },
    "stomp.broadcast_status": {
     "line number": [
      216
     ]
    },
    "stomp.connect": {
     "line number": [
      213
     ]
    },
    "str": {
     "line number": [
      216,
      225
     ]
    },
    "workflows.transport.stomp_transport.StompTransport": {
     "line number": [
      212
     ]
    },
    "workflows.transport.test_stomp_transport.json": {
     "line number": [
      224
     ]
    },
    "workflows.transport.test_stomp_transport.mock": {
     "line number": [
      216,
      225,
      207,
      208
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_broadcasting_message_with_expiration": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": {
    "int": {
     "line number": [
      330
     ]
    },
    "stomp": {
     "line number": [
      333
     ]
    },
    "stomp._broadcast": {
     "line number": [
      337
     ]
    },
    "stomp.connect": {
     "line number": [
      334
     ]
    },
    "str": {
     "line number": [
      337,
      341
     ]
    },
    "workflows.transport.stomp_transport.StompTransport": {
     "line number": [
      333
     ]
    },
    "workflows.transport.test_stomp_transport.mock": {
     "line number": [
      337,
      337,
      341,
      341,
      324,
      325
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_check_config_file_behaviour": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "globals": {
     "line number": [
      107
     ]
    },
    "imp.reload": {
     "line number": [
      106
     ]
    },
    "stomp": {
     "line number": [
      74,
      102
     ]
    },
    "stomp.add_command_line_options": {
     "line number": [
      75
     ]
    },
    "stomp.connect": {
     "line number": [
      103
     ]
    },
    "stomp.get_namespace": {
     "line number": [
      113
     ]
    },
    "workflows.transport.stomp_transport.StompTransport": {
     "line number": [
      74,
      102
     ]
    },
    "workflows.transport.test_stomp_transport.mock": {
     "line number": [
      71,
      98,
      111,
      67
     ]
    },
    "workflows.transport.test_stomp_transport.optparse": {
     "line number": [
      73
     ]
    },
    "workflows.transport.test_stomp_transport.os": {
     "line number": [
      116
     ]
    },
    "workflows.transport.test_stomp_transport.pytest": {
     "line number": [
      119
     ]
    },
    "workflows.transport.test_stomp_transport.tempfile": {
     "line number": [
      78
     ]
    },
    "workflows.transport.test_stomp_transport.workflows": {
     "line number": [
      106,
      107,
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_error_handling_on_broadcast": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": {
    "stomp": {
     "line number": [
      348
     ]
    },
    "stomp._broadcast": {
     "line number": [
      355
     ]
    },
    "stomp.connect": {
     "line number": [
      349
     ]
    },
    "stomp.exception": {
     "line number": [
      352
     ]
    },
    "stomp.exception.NotConnectedException": {
     "line number": [
      351,
      354
     ]
    },
    "stomp.is_connected": {
     "line number": [
      356
     ]
    },
    "str": {
     "line number": [
      355
     ]
    },
    "workflows.transport.stomp_transport.StompTransport": {
     "line number": [
      348
     ]
    },
    "workflows.transport.test_stomp_transport.mock": {
     "line number": [
      355,
      355,
      345
     ]
    },
    "workflows.transport.test_stomp_transport.pytest": {
     "line number": [
      354
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_error_handling_on_send": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": {
    "stomp": {
     "line number": [
      284
     ]
    },
    "stomp._send": {
     "line number": [
      291
     ]
    },
    "stomp.connect": {
     "line number": [
      285
     ]
    },
    "stomp.exception": {
     "line number": [
      288
     ]
    },
    "stomp.exception.NotConnectedException": {
     "line number": [
      287
     ]
    },
    "stomp.is_connected": {
     "line number": [
      292
     ]
    },
    "str": {
     "line number": [
      291
     ]
    },
    "workflows.transport.stomp_transport.StompTransport": {
     "line number": [
      284
     ]
    },
    "workflows.transport.test_stomp_transport.mock": {
     "line number": [
      291,
      291,
      281
     ]
    },
    "workflows.transport.test_stomp_transport.pytest": {
     "line number": [
      290
     ]
    },
    "workflows.transport.test_stomp_transport.workflows": {
     "line number": [
      290
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_error_handling_when_connecting_to_broker": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": {
    "stomp": {
     "line number": [
      188
     ]
    },
    "stomp.connect": {
     "line number": [
      194,
      202
     ]
    },
    "stomp.exception": {
     "line number": [
      191
     ]
    },
    "stomp.exception.ConnectFailedException": {
     "line number": [
      190,
      199
     ]
    },
    "stomp.is_connected": {
     "line number": [
      196,
      204
     ]
    },
    "workflows.transport.stomp_transport.StompTransport": {
     "line number": [
      188
     ]
    },
    "workflows.transport.test_stomp_transport.mock": {
     "line number": [
      185
     ]
    },
    "workflows.transport.test_stomp_transport.pytest": {
     "line number": [
      193,
      201
     ]
    },
    "workflows.transport.test_stomp_transport.workflows": {
     "line number": [
      193,
      201
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_instantiate_link_and_connect_to_broker": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "stomp": {
     "line number": [
      149
     ]
    },
    "stomp.connect": {
     "line number": [
      154,
      161
     ]
    },
    "stomp.disconnect": {
     "line number": [
      168,
      176
     ]
    },
    "stomp.is_connected": {
     "line number": [
      152,
      159,
      166,
      174,
      182
     ]
    },
    "workflows.transport.stomp_transport.StompTransport": {
     "line number": [
      149
     ]
    },
    "workflows.transport.test_stomp_transport.mock": {
     "line number": [
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_lookup_and_initialize_stomp_transport_layer": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "stomp": {
     "line number": [
      22,
      23,
      24
     ]
    },
    "workflows.transport.stomp_transport.StompTransport": {
     "line number": [
      23
     ]
    },
    "workflows.transport.test_stomp_transport.workflows": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_messages_are_deserialized_after_transport": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": {
    "message_handler": {
     "line number": [
      424,
      427,
      436,
      439,
      448,
      455
     ]
    },
    "stomp": {
     "line number": [
      415
     ]
    },
    "stomp.connect": {
     "line number": [
      416
     ]
    },
    "stomp.subscribe": {
     "line number": [
      422,
      446
     ]
    },
    "stomp.subscribe_broadcast": {
     "line number": [
      434,
      453
     ]
    },
    "workflows.transport.stomp_transport.StompTransport": {
     "line number": [
      415
     ]
    },
    "workflows.transport.test_stomp_transport.mock": {
     "line number": [
      421,
      427,
      429,
      433,
      439,
      441,
      445,
      452,
      410
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_messages_are_not_serialized_for_raw_transport": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": {
    "stomp": {
     "line number": [
      385
     ]
    },
    "stomp.connect": {
     "line number": [
      386
     ]
    },
    "stomp.raw_broadcast": {
     "line number": [
      395
     ]
    },
    "stomp.raw_send": {
     "line number": [
      389,
      401
     ]
    },
    "str": {
     "line number": [
      389,
      392,
      395,
      398,
      401,
      405
     ]
    },
    "workflows.transport.stomp_transport.StompTransport": {
     "line number": [
      385
     ]
    },
    "workflows.transport.test_stomp_transport.mock": {
     "line number": [
      389,
      392,
      395,
      398,
      401,
      401,
      405,
      406,
      381
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_messages_are_serialized_for_transport": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      377
     ]
    },
    "stomp": {
     "line number": [
      364
     ]
    },
    "stomp.broadcast": {
     "line number": [
      373
     ]
    },
    "stomp.connect": {
     "line number": [
      365
     ]
    },
    "stomp.send": {
     "line number": [
      368,
      378
     ]
    },
    "str": {
     "line number": [
      368,
      371,
      373,
      375,
      378
     ]
    },
    "workflows.transport.stomp_transport.StompTransport": {
     "line number": [
      364
     ]
    },
    "workflows.transport.test_stomp_transport.mock": {
     "line number": [
      368,
      371,
      373,
      375,
      378,
      378,
      359
     ]
    },
    "workflows.transport.test_stomp_transport.pytest": {
     "line number": [
      377
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_nack_message": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": {
    "stomp": {
     "line number": [
      643
     ]
    },
    "stomp._nack": {
     "line number": [
      648,
      651
     ]
    },
    "stomp._subscribe": {
     "line number": [
      647
     ]
    },
    "stomp.connect": {
     "line number": [
      644
     ]
    },
    "str": {
     "line number": [
      647
     ]
    },
    "workflows.transport.stomp_transport.StompTransport": {
     "line number": [
      643
     ]
    },
    "workflows.transport.test_stomp_transport.mock": {
     "line number": [
      647,
      648,
      649,
      651,
      651,
      653,
      653,
      640
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_namespace_is_used_correctly": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": {
    "stomp": {
     "line number": [
      662,
      667,
      682
     ]
    },
    "stomp._broadcast": {
     "line number": [
      692,
      698
     ]
    },
    "stomp._send": {
     "line number": [
      671,
      678,
      686
     ]
    },
    "stomp._subscribe": {
     "line number": [
      701,
      705
     ]
    },
    "stomp._subscribe_broadcast": {
     "line number": [
      708,
      711
     ]
    },
    "stomp.broadcast_status": {
     "line number": [
      714
     ]
    },
    "stomp.connect": {
     "line number": [
      663,
      668,
      683
     ]
    },
    "stomp.get_namespace": {
     "line number": [
      664,
      669,
      684
     ]
    },
    "workflows.transport.stomp_transport.StompTransport": {
     "line number": [
      662,
      667,
      682
     ]
    },
    "workflows.transport.stomp_transport.StompTransport.defaults": {
     "line number": [
      661,
      666,
      681
     ]
    },
    "workflows.transport.test_stomp_transport.mock": {
     "line number": [
      671,
      675,
      678,
      679,
      686,
      689,
      692,
      695,
      698,
      699,
      657
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_send_broadcast": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": {
    "stomp": {
     "line number": [
      298
     ]
    },
    "stomp._broadcast": {
     "line number": [
      302,
      309,
      317
     ]
    },
    "stomp.connect": {
     "line number": [
      299
     ]
    },
    "str": {
     "line number": [
      302,
      306,
      310,
      314,
      317,
      320
     ]
    },
    "workflows.transport.stomp_transport.StompTransport": {
     "line number": [
      298
     ]
    },
    "workflows.transport.test_stomp_transport.mock": {
     "line number": [
      302,
      302,
      306,
      306,
      310,
      310,
      310,
      314,
      314,
      315,
      317,
      317,
      320,
      320,
      295
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_send_message": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": {
    "stomp": {
     "line number": [
      231
     ]
    },
    "stomp._send": {
     "line number": [
      235,
      242
     ]
    },
    "stomp.connect": {
     "line number": [
      232
     ]
    },
    "str": {
     "line number": [
      235,
      239,
      243,
      250
     ]
    },
    "workflows.transport.stomp_transport.StompTransport": {
     "line number": [
      231
     ]
    },
    "workflows.transport.test_stomp_transport.mock": {
     "line number": [
      235,
      235,
      239,
      239,
      243,
      244,
      245,
      250,
      250,
      253,
      228
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_sending_message_with_expiration": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": {
    "int": {
     "line number": [
      266
     ]
    },
    "stomp": {
     "line number": [
      269
     ]
    },
    "stomp._send": {
     "line number": [
      273
     ]
    },
    "stomp.connect": {
     "line number": [
      270
     ]
    },
    "str": {
     "line number": [
      273,
      277
     ]
    },
    "workflows.transport.stomp_transport.StompTransport": {
     "line number": [
      269
     ]
    },
    "workflows.transport.test_stomp_transport.mock": {
     "line number": [
      273,
      273,
      277,
      277,
      260,
      261
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_subscribe_to_broadcast": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": {
    "stomp": {
     "line number": [
      545
     ]
    },
    "stomp._subscribe_broadcast": {
     "line number": [
      562,
      574
     ]
    },
    "stomp._unsubscribe": {
     "line number": [
      592,
      594
     ]
    },
    "stomp.connect": {
     "line number": [
      546
     ]
    },
    "stomp.subscription_callback": {
     "line number": [
      556
     ]
    },
    "str": {
     "line number": [
      564,
      571,
      575,
      579
     ]
    },
    "workflows.transport.stomp_transport.StompTransport": {
     "line number": [
      545
     ]
    },
    "workflows.transport.test_stomp_transport.mock": {
     "line number": [
      543,
      544,
      564,
      566,
      571,
      572,
      575,
      579,
      585,
      586,
      589,
      590,
      540
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_subscribe_to_broadcast.callback_resolver": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      554
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_subscribe_to_queue": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": {
    "stomp": {
     "line number": [
      464
     ]
    },
    "stomp._subscribe": {
     "line number": [
      481,
      496,
      528
     ]
    },
    "stomp._unsubscribe": {
     "line number": [
      534,
      536
     ]
    },
    "stomp.connect": {
     "line number": [
      465
     ]
    },
    "stomp.subscription_callback": {
     "line number": [
      475
     ]
    },
    "str": {
     "line number": [
      483,
      490,
      498,
      508,
      528,
      531
     ]
    },
    "workflows.transport.stomp_transport.StompTransport": {
     "line number": [
      464
     ]
    },
    "workflows.transport.test_stomp_transport.mock": {
     "line number": [
      462,
      463,
      483,
      485,
      490,
      492,
      498,
      501,
      508,
      512,
      521,
      522,
      525,
      526,
      528,
      531,
      459
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_subscribe_to_queue.callback_resolver": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      473
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.test_transaction_calls": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": {
    "stomp": {
     "line number": [
      601
     ]
    },
    "stomp._send": {
     "line number": [
      608
     ]
    },
    "stomp._transaction_abort": {
     "line number": [
      616
     ]
    },
    "stomp._transaction_begin": {
     "line number": [
      605
     ]
    },
    "stomp._transaction_commit": {
     "line number": [
      619
     ]
    },
    "stomp.connect": {
     "line number": [
      602
     ]
    },
    "workflows.transport.stomp_transport.StompTransport": {
     "line number": [
      601
     ]
    },
    "workflows.transport.test_stomp_transport.mock": {
     "line number": [
      605,
      606,
      608,
      608,
      611,
      613,
      616,
      617,
      619,
      620,
      598
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.test_stomp_transport.workflows": {
  "data": {
   "shadows": "workflows"
  },
  "type": "import"
 },
 "workflows.transport.test_stomp_transport.workflows.transport": {
  "data": {
   "shadows": "workflows.transport"
  },
  "type": "import"
 },
 "workflows.transport.test_transport": {
  "data": {},
  "type": "module"
 },
 "workflows.transport.test_transport.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "workflows.transport.test_transport.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "workflows.transport.test_transport.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "workflows.transport.test_transport.test_known_transports_is_a_dictionary": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      8
     ]
    },
    "isinstance": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.transport.test_transport.test_load_any_transport": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "workflows.transport.test_transport.workflows.transport": {
  "data": {
   "shadows": "workflows.transport"
  },
  "type": "import"
 },
 "workflows.util": {
  "data": {},
  "type": "module"
 },
 "workflows.util.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "workflows.util.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "workflows.util.generate_unique_host_id": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": {
    "reversed": {
     "line number": [
      10
     ]
    },
    "workflows.util.os": {
     "line number": [
      11
     ]
    },
    "workflows.util.socket": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "function"
 },
 "workflows.util.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "workflows.util.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "workflows.util.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "workflows.util.test_util": {
  "data": {},
  "type": "module"
 },
 "workflows.util.test_util.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "workflows.util.test_util.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "workflows.util.test_util.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "workflows.util.test_util.test_generated_host_ids_are_somewhat_sensible": {
  "data": {
   "lineno": 6
  },
  "type": "function"
 },
 "workflows.util.test_util.workflows.util": {
  "data": {
   "shadows": "workflows.util"
  },
  "type": "import"
 },
 "workflows.version": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": {
    "workflows.__version__": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "function"
 }
}