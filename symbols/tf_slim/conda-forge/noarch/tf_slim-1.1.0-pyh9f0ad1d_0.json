{
 "*": {
  "data": {
   "imports": [
    "tf_slim.layers.bucketization_op",
    "tf_slim.layers.initializers",
    "tf_slim.layers.layers",
    "tf_slim.layers.normalization",
    "tf_slim.layers.optimizers",
    "tf_slim.layers.regularizers",
    "tf_slim.layers.rev_block_lib",
    "tf_slim.layers.summaries"
   ]
  },
  "type": "star-import"
 },
 "tf_slim": {
  "data": {
   "symbols_in_volume": [
    "tf_slim.ops.arg_scope",
    "tf_slim.ops.arg_scope.add_arg_scope",
    "tf_slim.ops.arg_scope.arg_scope",
    "tf_slim.ops.arg_scope.arg_scope_func_key",
    "tf_slim.ops.arg_scope.arg_scoped_arguments",
    "tf_slim.ops.arg_scope.current_arg_scope",
    "tf_slim.ops.arg_scope.has_arg_scope"
   ]
  },
  "type": "module"
 },
 "tf_slim.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.add_arg_scope": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "tf_slim.arg_scope": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "tf_slim.arg_scope_func_key": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "tf_slim.arg_scope_lib": {
  "data": {
   "shadows": "tf_slim.ops.arg_scope"
  },
  "type": "import"
 },
 "tf_slim.arg_scoped_arguments": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "tf_slim.current_arg_scope": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "tf_slim.data": {
  "data": {},
  "type": "module"
 },
 "tf_slim.data.data_decoder": {
  "data": {},
  "type": "module"
 },
 "tf_slim.data.data_decoder.DataDecoder": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "object",
    "tf_slim.data.data_decoder.abc",
    "tf_slim.data.data_decoder.six"
   ]
  },
  "type": "class"
 },
 "tf_slim.data.data_decoder.DataDecoder.decode": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "tf_slim.data.data_decoder.abc"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.data_decoder.DataDecoder.list_items": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "tf_slim.data.data_decoder.abc"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.data_decoder.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "tf_slim.data.data_decoder.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.data.data_decoder.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.data.data_decoder.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.data.data_decoder.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tf_slim.data.data_provider": {
  "data": {},
  "type": "module"
 },
 "tf_slim.data.data_provider.DataProvider": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "object",
    "tf_slim.data.data_provider.abc",
    "tf_slim.data.data_provider.six"
   ]
  },
  "type": "class"
 },
 "tf_slim.data.data_provider.DataProvider.__init__": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "tf_slim.data.data_provider.DataProvider._validate_items": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.data_provider.DataProvider.get": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "tf_slim.data.data_provider.DataProvider.list_items": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "tf_slim.data.data_provider.DataProvider.num_samples": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "tf_slim.data.data_provider.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "tf_slim.data.data_provider.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.data.data_provider.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.data.data_provider.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.data.data_provider.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tf_slim.data.dataset": {
  "data": {},
  "type": "module"
 },
 "tf_slim.data.dataset.Dataset": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tf_slim.data.dataset.Dataset.__init__": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "tf_slim.data.dataset.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.data.dataset.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.data.dataset.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.data.dataset_data_provider": {
  "data": {},
  "type": "module"
 },
 "tf_slim.data.dataset_data_provider.DatasetDataProvider": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "tf_slim.data.data_provider.DataProvider"
   ]
  },
  "type": "class"
 },
 "tf_slim.data.dataset_data_provider.DatasetDataProvider.__init__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "super",
    "tf_slim.data.dataset_data_provider.DatasetDataProvider",
    "tf_slim.data.parallel_reader.parallel_read",
    "zip"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.dataset_data_provider.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.data.dataset_data_provider.data_provider": {
  "data": {
   "shadows": "tf_slim.data.data_provider"
  },
  "type": "import"
 },
 "tf_slim.data.dataset_data_provider.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.data.dataset_data_provider.parallel_reader": {
  "data": {
   "shadows": "tf_slim.data.parallel_reader"
  },
  "type": "import"
 },
 "tf_slim.data.dataset_data_provider.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.data.dataset_data_provider_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.test.main"
   ]
  },
  "type": "module"
 },
 "tf_slim.data.dataset_data_provider_test.DatasetDataProviderTest": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.data.dataset_data_provider_test.DatasetDataProviderTest.testConflictingRecordKeyItem": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "ValueError",
    "tf_slim.data.dataset_data_provider.DatasetDataProvider",
    "tf_slim.data.dataset_data_provider_test._create_tfrecord_dataset",
    "tf_slim.data.dataset_data_provider_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.dataset_data_provider_test.DatasetDataProviderTest.testTFRecordDataset": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "len",
    "list",
    "tensorflow.python.client.session.Session",
    "tf_slim.data.dataset_data_provider.DatasetDataProvider",
    "tf_slim.data.dataset_data_provider_test._create_tfrecord_dataset",
    "tf_slim.data.dataset_data_provider_test._resize_image",
    "tf_slim.data.dataset_data_provider_test.tempfile",
    "tf_slim.queues.QueueRunners"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.dataset_data_provider_test.DatasetDataProviderTest.testTFRecordSeparateGetDataset": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "list",
    "tensorflow.python.client.session.Session",
    "tf_slim.data.dataset_data_provider.DatasetDataProvider",
    "tf_slim.data.dataset_data_provider_test._create_tfrecord_dataset",
    "tf_slim.data.dataset_data_provider_test._resize_image",
    "tf_slim.data.dataset_data_provider_test.tempfile",
    "tf_slim.queues.QueueRunners"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.dataset_data_provider_test._create_tfrecord_dataset": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.framework.dtypes.string",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.io_ops.TFRecordReader",
    "tensorflow.python.ops.parsing_ops.FixedLenFeature",
    "tensorflow.python.platform.gfile.Exists",
    "tensorflow.python.platform.gfile.MakeDirs",
    "tf_slim.data.dataset.Dataset",
    "tf_slim.data.test_utils.create_tfrecord_files",
    "tf_slim.data.tfexample_decoder.Image",
    "tf_slim.data.tfexample_decoder.TFExampleDecoder",
    "tf_slim.data.tfexample_decoder.Tensor"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.dataset_data_provider_test._resize_image": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.squeeze",
    "tensorflow.python.ops.image_ops.resize_bilinear"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.dataset_data_provider_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.data.dataset_data_provider_test.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tf_slim.data.dataset_data_provider_test.dataset": {
  "data": {
   "shadows": "tf_slim.data.dataset"
  },
  "type": "import"
 },
 "tf_slim.data.dataset_data_provider_test.dataset_data_provider": {
  "data": {
   "shadows": "tf_slim.data.dataset_data_provider"
  },
  "type": "import"
 },
 "tf_slim.data.dataset_data_provider_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.data.dataset_data_provider_test.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tf_slim.data.dataset_data_provider_test.gfile": {
  "data": {
   "shadows": "tensorflow.python.platform.gfile"
  },
  "type": "import"
 },
 "tf_slim.data.dataset_data_provider_test.image_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.image_ops"
  },
  "type": "import"
 },
 "tf_slim.data.dataset_data_provider_test.io_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.io_ops"
  },
  "type": "import"
 },
 "tf_slim.data.dataset_data_provider_test.parsing_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.parsing_ops"
  },
  "type": "import"
 },
 "tf_slim.data.dataset_data_provider_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.data.dataset_data_provider_test.queues": {
  "data": {
   "shadows": "tf_slim.queues"
  },
  "type": "import"
 },
 "tf_slim.data.dataset_data_provider_test.session": {
  "data": {
   "shadows": "tensorflow.python.client.session"
  },
  "type": "import"
 },
 "tf_slim.data.dataset_data_provider_test.setUpModule": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "tensorflow.compat.v1.disable_eager_execution"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.dataset_data_provider_test.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "tf_slim.data.dataset_data_provider_test.test": {
  "data": {
   "shadows": "tensorflow.python.platform.test"
  },
  "type": "import"
 },
 "tf_slim.data.dataset_data_provider_test.test_utils": {
  "data": {
   "shadows": "tf_slim.data.test_utils"
  },
  "type": "import"
 },
 "tf_slim.data.dataset_data_provider_test.tf": {
  "data": {
   "shadows": "tensorflow.compat.v1"
  },
  "type": "import"
 },
 "tf_slim.data.dataset_data_provider_test.tfexample_decoder": {
  "data": {
   "shadows": "tf_slim.data.tfexample_decoder"
  },
  "type": "import"
 },
 "tf_slim.data.parallel_reader_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.test.main"
   ]
  },
  "type": "module"
 },
 "tf_slim.data.parallel_reader_test.ParallelReadTest": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.data.parallel_reader_test.ParallelReadTest.setUp": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.framework.ops.reset_default_graph",
    "tf_slim.data.parallel_reader_test.ParallelReadTest"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.parallel_reader_test.ParallelReadTest.testTFRecordReader": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "range",
    "str",
    "tensorflow.python.ops.io_ops.TFRecordReader",
    "tensorflow.python.training.supervisor.Supervisor",
    "tf_slim.data.parallel_reader.parallel_read",
    "tf_slim.data.parallel_reader_test.tempfile",
    "tf_slim.data.test_utils.create_tfrecord_files"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.parallel_reader_test.ParallelReaderTest": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.data.parallel_reader_test.ParallelReaderTest._verify_all_data_sources_read": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "len",
    "range",
    "str",
    "tensorflow.python.ops.io_ops.TFRecordReader",
    "tensorflow.python.training.input.string_input_producer",
    "tensorflow.python.training.supervisor.Supervisor",
    "tf_slim.data.parallel_reader.ParallelReader",
    "tf_slim.data.parallel_reader.get_data_files",
    "tf_slim.data.parallel_reader_test.tempfile",
    "tf_slim.data.test_utils.create_tfrecord_files"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.parallel_reader_test.ParallelReaderTest._verify_read_up_to_out": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "len",
    "str",
    "tensorflow.python.framework.errors_impl.OutOfRangeError",
    "tensorflow.python.ops.io_ops.TFRecordReader",
    "tensorflow.python.training.input.string_input_producer",
    "tensorflow.python.training.supervisor.Supervisor",
    "tf_slim.data.parallel_reader.ParallelReader",
    "tf_slim.data.parallel_reader.get_data_files",
    "tf_slim.data.parallel_reader_test.tempfile",
    "tf_slim.data.test_utils.create_tfrecord_files"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.parallel_reader_test.ParallelReaderTest.setUp": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.framework.ops.reset_default_graph",
    "tf_slim.data.parallel_reader_test.ParallelReaderTest"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.parallel_reader_test.ParallelReaderTest.testFIFOSharedQueue": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.string",
    "tensorflow.python.ops.data_flow_ops.FIFOQueue"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.parallel_reader_test.ParallelReaderTest.testRandomShuffleQueue": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.string",
    "tensorflow.python.ops.data_flow_ops.RandomShuffleQueue"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.parallel_reader_test.ParallelReaderTest.testReadUpToFromFIFOQueue": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.string",
    "tensorflow.python.ops.data_flow_ops.FIFOQueue"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.parallel_reader_test.ParallelReaderTest.testReadUpToFromRandomShuffleQueue": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.string",
    "tensorflow.python.ops.data_flow_ops.RandomShuffleQueue"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.parallel_reader_test.SinglePassReadTest": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.data.parallel_reader_test.SinglePassReadTest.setUp": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.framework.ops.reset_default_graph",
    "tf_slim.data.parallel_reader_test.SinglePassReadTest"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.parallel_reader_test.SinglePassReadTest.testOutOfRangeError": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.framework.errors_impl.OutOfRangeError",
    "tensorflow.python.ops.io_ops.TFRecordReader",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.data.parallel_reader.single_pass_read",
    "tf_slim.data.parallel_reader_test.tempfile",
    "tf_slim.data.test_utils.create_tfrecord_files",
    "tf_slim.queues.QueueRunners"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.parallel_reader_test.SinglePassReadTest.testTFRecordReader": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "range",
    "str",
    "tensorflow.python.ops.io_ops.TFRecordReader",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.data.parallel_reader.single_pass_read",
    "tf_slim.data.parallel_reader_test.tempfile",
    "tf_slim.data.test_utils.create_tfrecord_files",
    "tf_slim.queues.QueueRunners"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.parallel_reader_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.data.parallel_reader_test.data_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.data_flow_ops"
  },
  "type": "import"
 },
 "tf_slim.data.parallel_reader_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.data.parallel_reader_test.dtypes_lib": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tf_slim.data.parallel_reader_test.errors_impl": {
  "data": {
   "shadows": "tensorflow.python.framework.errors_impl"
  },
  "type": "import"
 },
 "tf_slim.data.parallel_reader_test.input_lib": {
  "data": {
   "shadows": "tensorflow.python.training.input"
  },
  "type": "import"
 },
 "tf_slim.data.parallel_reader_test.io_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.io_ops"
  },
  "type": "import"
 },
 "tf_slim.data.parallel_reader_test.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tf_slim.data.parallel_reader_test.parallel_reader": {
  "data": {
   "shadows": "tf_slim.data.parallel_reader"
  },
  "type": "import"
 },
 "tf_slim.data.parallel_reader_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.data.parallel_reader_test.queues": {
  "data": {
   "shadows": "tf_slim.queues"
  },
  "type": "import"
 },
 "tf_slim.data.parallel_reader_test.setUpModule": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "tensorflow.compat.v1.disable_eager_execution"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.parallel_reader_test.supervisor": {
  "data": {
   "shadows": "tensorflow.python.training.supervisor"
  },
  "type": "import"
 },
 "tf_slim.data.parallel_reader_test.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "tf_slim.data.parallel_reader_test.test": {
  "data": {
   "shadows": "tensorflow.python.platform.test"
  },
  "type": "import"
 },
 "tf_slim.data.parallel_reader_test.test_utils": {
  "data": {
   "shadows": "tf_slim.data.test_utils"
  },
  "type": "import"
 },
 "tf_slim.data.parallel_reader_test.tf": {
  "data": {
   "shadows": "tensorflow.compat.v1"
  },
  "type": "import"
 },
 "tf_slim.data.parallel_reader_test.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tf_slim.data.prefetch_queue": {
  "data": {},
  "type": "module"
 },
 "tf_slim.data.prefetch_queue._dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tf_slim.data.prefetch_queue._which_queue": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "tensorflow.python.ops.data_flow_ops.FIFOQueue",
    "tensorflow.python.ops.data_flow_ops.PaddingFIFOQueue"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.prefetch_queue.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.data.prefetch_queue.data_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.data_flow_ops"
  },
  "type": "import"
 },
 "tf_slim.data.prefetch_queue.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.data.prefetch_queue.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tf_slim.data.prefetch_queue.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tf_slim.data.prefetch_queue.prefetch_queue": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "list",
    "sorted",
    "tensorflow.python.framework.dtypes",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.summary.summary.scalar",
    "tensorflow.python.training.queue_runner.QueueRunner",
    "tensorflow.python.training.queue_runner.add_queue_runner",
    "tf_slim.data.prefetch_queue._which_queue"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.prefetch_queue.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.data.prefetch_queue.queue_runner": {
  "data": {
   "shadows": "tensorflow.python.training.queue_runner"
  },
  "type": "import"
 },
 "tf_slim.data.prefetch_queue.summary": {
  "data": {
   "shadows": "tensorflow.python.summary.summary"
  },
  "type": "import"
 },
 "tf_slim.data.prefetch_queue_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.test.main"
   ]
  },
  "type": "module"
 },
 "tf_slim.data.prefetch_queue_test.PrefetchQueueTest": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.data.prefetch_queue_test.PrefetchQueueTest.testDictConstruction": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "len",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.Graph",
    "tf_slim.data.prefetch_queue.prefetch_queue"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.prefetch_queue_test.PrefetchQueueTest.testDynamicPad": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.array_equal",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.framework.errors_impl.OutOfRangeError",
    "tensorflow.python.ops.data_flow_ops.PaddingFIFOQueue",
    "tensorflow.python.ops.variables.Variable",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tensorflow.python.training.input.batch",
    "tensorflow.python.training.queue_runner_impl.start_queue_runners",
    "tf_slim.data.prefetch_queue.prefetch_queue"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.prefetch_queue_test.PrefetchQueueTest.testDynamicPad_failure": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.data.prefetch_queue.prefetch_queue"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.prefetch_queue_test.PrefetchQueueTest.testMultiThread": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.concatenate",
    "numpy.sort",
    "range",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.framework.errors_impl.OutOfRangeError",
    "tensorflow.python.ops.random_ops.random_normal",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.Variable",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tensorflow.python.training.input.batch",
    "tensorflow.python.training.queue_runner_impl.start_queue_runners",
    "tf_slim.data.prefetch_queue.prefetch_queue"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.prefetch_queue_test.PrefetchQueueTest.testMultipleDequeue": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "int",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.sort",
    "range",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.framework.errors_impl.OutOfRangeError",
    "tensorflow.python.ops.random_ops.random_normal",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.Variable",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tensorflow.python.training.input.batch",
    "tensorflow.python.training.queue_runner_impl.start_queue_runners",
    "tf_slim.data.prefetch_queue.prefetch_queue"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.prefetch_queue_test.PrefetchQueueTest.testOneThread": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "numpy.arange",
    "range",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.framework.errors_impl.OutOfRangeError",
    "tensorflow.python.ops.random_ops.random_normal",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.Variable",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tensorflow.python.training.input.batch",
    "tensorflow.python.training.queue_runner_impl.start_queue_runners",
    "tf_slim.data.prefetch_queue.prefetch_queue"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.prefetch_queue_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.data.prefetch_queue_test.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tf_slim.data.prefetch_queue_test.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tf_slim.data.prefetch_queue_test.data_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.data_flow_ops"
  },
  "type": "import"
 },
 "tf_slim.data.prefetch_queue_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.data.prefetch_queue_test.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tf_slim.data.prefetch_queue_test.errors_impl": {
  "data": {
   "shadows": "tensorflow.python.framework.errors_impl"
  },
  "type": "import"
 },
 "tf_slim.data.prefetch_queue_test.input_lib": {
  "data": {
   "shadows": "tensorflow.python.training.input"
  },
  "type": "import"
 },
 "tf_slim.data.prefetch_queue_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tf_slim.data.prefetch_queue_test.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tf_slim.data.prefetch_queue_test.prefetch_queue": {
  "data": {
   "shadows": "tf_slim.data.prefetch_queue"
  },
  "type": "import"
 },
 "tf_slim.data.prefetch_queue_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.data.prefetch_queue_test.queue_runner_impl": {
  "data": {
   "shadows": "tensorflow.python.training.queue_runner_impl"
  },
  "type": "import"
 },
 "tf_slim.data.prefetch_queue_test.random_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.random_ops"
  },
  "type": "import"
 },
 "tf_slim.data.prefetch_queue_test.setUpModule": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "tensorflow.compat.v1.disable_eager_execution"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.prefetch_queue_test.test": {
  "data": {
   "shadows": "tensorflow.python.platform.test"
  },
  "type": "import"
 },
 "tf_slim.data.prefetch_queue_test.tf": {
  "data": {
   "shadows": "tensorflow.compat.v1"
  },
  "type": "import"
 },
 "tf_slim.data.prefetch_queue_test.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tf_slim.data.test_utils": {
  "data": {},
  "type": "module"
 },
 "tf_slim.data.test_utils._encoded_bytes_feature": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "string_to_bytes",
    "tensorflow.compat.v1.train.Feature"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.test_utils._encoded_bytes_feature.string_to_bytes": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "tensorflow.compat.v1.train.BytesList"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.test_utils._encoded_int64_feature": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "tensorflow.compat.v1.train.Feature",
    "tensorflow.compat.v1.train.Int64List"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.test_utils._encoder": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "tensorflow.compat.v1.constant",
    "tensorflow.compat.v1.image.encode_jpeg",
    "tensorflow.compat.v1.image.encode_png",
    "tensorflow.compat.v1.uint8"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.test_utils._string_feature": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "tensorflow.compat.v1.train.BytesList",
    "tensorflow.compat.v1.train.Feature"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.test_utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.data.test_utils.create_tfrecord_files": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "range",
    "tensorflow.compat.v1.io.TFRecordWriter",
    "tf_slim.data.test_utils.generate_image",
    "tf_slim.data.test_utils.os"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.test_utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.data.test_utils.generate_image": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.random_integers",
    "tensorflow.compat.v1.train.Example",
    "tensorflow.compat.v1.train.Features",
    "tf_slim.data.test_utils._encoded_bytes_feature",
    "tf_slim.data.test_utils._encoded_int64_feature",
    "tf_slim.data.test_utils._encoder",
    "tf_slim.data.test_utils._string_feature"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tf_slim.data.test_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tf_slim.data.test_utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.data.test_utils.tf": {
  "data": {
   "shadows": "tensorflow.compat.v1"
  },
  "type": "import"
 },
 "tf_slim.data.tfexample_decoder": {
  "data": {},
  "type": "module"
 },
 "tf_slim.data.tfexample_decoder.BackupHandler": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "tf_slim.data.tfexample_decoder.ItemHandler"
   ]
  },
  "type": "class"
 },
 "tf_slim.data.tfexample_decoder.BackupHandler.__init__": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "super",
    "tf_slim.data.tfexample_decoder.BackupHandler",
    "tf_slim.data.tfexample_decoder.ItemHandler",
    "type"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder.BackupHandler.tensors_to_item": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.control_flow_ops.cond",
    "tensorflow.python.ops.math_ops.equal",
    "tensorflow.python.ops.math_ops.reduce_prod"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder.BoundingBox": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "tf_slim.data.tfexample_decoder.ItemHandler"
   ]
  },
  "type": "class"
 },
 "tf_slim.data.tfexample_decoder.BoundingBox.__init__": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "super",
    "tf_slim.data.tfexample_decoder.BoundingBox"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder.BoundingBox.tensors_to_item": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.sparse_tensor.SparseTensor",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.transpose"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder.BoundingBoxSequence": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "tf_slim.data.tfexample_decoder.ItemHandler"
   ]
  },
  "type": "class"
 },
 "tf_slim.data.tfexample_decoder.BoundingBoxSequence.__init__": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "super",
    "tf_slim.data.tfexample_decoder.BoundingBoxSequence"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder.BoundingBoxSequence.tensors_to_item": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.math_ops.to_int64",
    "tensorflow.python.ops.sparse_ops.sparse_concat",
    "tensorflow.python.ops.sparse_ops.sparse_reshape",
    "tensorflow.python.ops.sparse_ops.sparse_tensor_to_dense"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder.Image": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "tf_slim.data.tfexample_decoder.ItemHandler"
   ]
  },
  "type": "class"
 },
 "tf_slim.data.tfexample_decoder.Image.__init__": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.framework.dtypes.uint8",
    "tf_slim.data.tfexample_decoder.Image"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder.Image._decode": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.control_flow_ops.case",
    "tensorflow.python.ops.math_ops.equal",
    "tensorflow.python.ops.math_ops.logical_or"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder.Image._decode.check_jpeg": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "tensorflow.python.ops.control_flow_ops.cond",
    "tensorflow.python.ops.image_ops.is_jpeg"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder.Image._decode.decode_image": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "tensorflow.python.ops.image_ops.decode_image",
    "tensorflow.python.ops.math_ops.cast"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder.Image._decode.decode_jpeg": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "tensorflow.python.ops.image_ops.decode_jpeg",
    "tensorflow.python.ops.math_ops.cast"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder.Image._decode.decode_raw": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "tensorflow.python.ops.parsing_ops.decode_raw"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder.Image.tensors_to_item": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "tensorflow.python.ops.map_fn.map_fn"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder.ItemHandler": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "object",
    "tf_slim.data.tfexample_decoder.abc",
    "tf_slim.data.tfexample_decoder.six"
   ]
  },
  "type": "class"
 },
 "tf_slim.data.tfexample_decoder.ItemHandler.__init__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder.ItemHandler.keys": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder.ItemHandler.tensors_to_item": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "tf_slim.data.tfexample_decoder.abc"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder.ItemHandlerCallback": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "tf_slim.data.tfexample_decoder.ItemHandler"
   ]
  },
  "type": "class"
 },
 "tf_slim.data.tfexample_decoder.ItemHandlerCallback.__init__": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "super",
    "tf_slim.data.tfexample_decoder.ItemHandlerCallback"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder.ItemHandlerCallback.tensors_to_item": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder.KeypointsSequence": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "tf_slim.data.tfexample_decoder.ItemHandler"
   ]
  },
  "type": "class"
 },
 "tf_slim.data.tfexample_decoder.KeypointsSequence.__init__": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "super",
    "tf_slim.data.tfexample_decoder.KeypointsSequence"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder.KeypointsSequence.tensors_to_item": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.math_ops.to_int64",
    "tensorflow.python.ops.sparse_ops.sparse_concat",
    "tensorflow.python.ops.sparse_ops.sparse_reshape",
    "tensorflow.python.ops.sparse_ops.sparse_tensor_to_dense"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder.LookupTensor": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "tf_slim.data.tfexample_decoder.Tensor"
   ]
  },
  "type": "class"
 },
 "tf_slim.data.tfexample_decoder.LookupTensor.__init__": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "super",
    "tf_slim.data.tfexample_decoder.LookupTensor"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder.LookupTensor.tensors_to_item": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "super",
    "tf_slim.data.tfexample_decoder.LookupTensor"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder.NumBoxesSequence": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "tf_slim.data.tfexample_decoder.ItemHandler"
   ]
  },
  "type": "class"
 },
 "tf_slim.data.tfexample_decoder.NumBoxesSequence.__init__": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "ValueError",
    "super",
    "tf_slim.data.tfexample_decoder.NumBoxesSequence"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder.NumBoxesSequence.tensors_to_item": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "_compute_num_boxes",
    "len",
    "range",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.check_ops.assert_equal"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder.NumBoxesSequence.tensors_to_item._compute_num_boxes": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "tensorflow.python.framework.sparse_tensor.SparseTensor",
    "tensorflow.python.ops.array_ops.pad",
    "tensorflow.python.ops.math_ops.reduce_max",
    "tensorflow.python.ops.sparse_ops.sparse_tensor_to_dense"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder.SparseTensor": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "tf_slim.data.tfexample_decoder.ItemHandler"
   ]
  },
  "type": "class"
 },
 "tf_slim.data.tfexample_decoder.SparseTensor.__init__": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "super",
    "tf_slim.data.tfexample_decoder.SparseTensor"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder.SparseTensor.tensors_to_item": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.framework.sparse_tensor.SparseTensor",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.array_ops.stack",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.sparse_ops.sparse_tensor_to_dense"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder.TFExampleDecoder": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "tf_slim.data.data_decoder.DataDecoder"
   ]
  },
  "type": "class"
 },
 "tf_slim.data.tfexample_decoder.TFExampleDecoder.__init__": {
  "data": {
   "lineno": 675
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder.TFExampleDecoder.decode": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "isinstance",
    "sorted",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.parsing_ops.FixedLenFeature",
    "tensorflow.python.ops.parsing_ops.parse_single_example"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder.TFExampleDecoder.list_items": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder.TFSequenceExampleDecoder": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "tf_slim.data.data_decoder.DataDecoder"
   ]
  },
  "type": "class"
 },
 "tf_slim.data.tfexample_decoder.TFSequenceExampleDecoder.__init__": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder.TFSequenceExampleDecoder.decode": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.parsing_ops.FixedLenFeature",
    "tensorflow.python.ops.parsing_ops.parse_single_sequence_example"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder.TFSequenceExampleDecoder.list_items": {
  "data": {
   "lineno": 778
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder.Tensor": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "tf_slim.data.tfexample_decoder.ItemHandler"
   ]
  },
  "type": "class"
 },
 "tf_slim.data.tfexample_decoder.Tensor.__init__": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "super",
    "tf_slim.data.tfexample_decoder.Tensor"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder.Tensor.tensors_to_item": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.sparse_tensor.SparseTensor",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.stack",
    "tensorflow.python.ops.sparse_ops.sparse_reshape",
    "tensorflow.python.ops.sparse_ops.sparse_tensor_to_dense"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "tf_slim.data.tfexample_decoder.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.data.tfexample_decoder.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tf_slim.data.tfexample_decoder.check_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.check_ops"
  },
  "type": "import"
 },
 "tf_slim.data.tfexample_decoder.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tf_slim.data.tfexample_decoder.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tf_slim.data.tfexample_decoder.data_decoder": {
  "data": {
   "shadows": "tf_slim.data.data_decoder"
  },
  "type": "import"
 },
 "tf_slim.data.tfexample_decoder.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.data.tfexample_decoder.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tf_slim.data.tfexample_decoder.image_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.image_ops"
  },
  "type": "import"
 },
 "tf_slim.data.tfexample_decoder.map_fn": {
  "data": {
   "shadows": "tensorflow.python.ops.map_fn"
  },
  "type": "import"
 },
 "tf_slim.data.tfexample_decoder.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tf_slim.data.tfexample_decoder.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tf_slim.data.tfexample_decoder.parsing_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.parsing_ops"
  },
  "type": "import"
 },
 "tf_slim.data.tfexample_decoder.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.data.tfexample_decoder.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tf_slim.data.tfexample_decoder.sparse_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.sparse_ops"
  },
  "type": "import"
 },
 "tf_slim.data.tfexample_decoder.sparse_tensor": {
  "data": {
   "shadows": "tensorflow.python.framework.sparse_tensor"
  },
  "type": "import"
 },
 "tf_slim.data.tfexample_decoder_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.test.main"
   ]
  },
  "type": "module"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest.DecodeExample": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "tensorflow.compat.v1.string",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.parsing_ops.FixedLenFeature",
    "tf_slim.data.tfexample_decoder.TFExampleDecoder"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest.GenerateImage": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.uint8",
    "tensorflow.compat.v1.train.Example",
    "tensorflow.compat.v1.train.Features"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest.RunDecodeExample": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest._BytesFeature": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "len",
    "range",
    "tensorflow.compat.v1.train.BytesList",
    "tensorflow.compat.v1.train.Feature"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest._EncodedBytesFeature": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "BytesList",
    "tensorflow.compat.v1.train.Feature"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest._EncodedBytesFeature.BytesList": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "tensorflow.compat.v1.train.BytesList"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest._EncodedFloatFeature": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "tensorflow.compat.v1.train.Feature",
    "tensorflow.compat.v1.train.FloatList"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest._EncodedInt64Feature": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "tensorflow.compat.v1.train.Feature",
    "tensorflow.compat.v1.train.Int64List"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest._Encoder": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "numpy.float32",
    "tensorflow.compat.v1.constant",
    "tensorflow.compat.v1.string",
    "tensorflow.compat.v1.uint8",
    "tensorflow.python.ops.image_ops.encode_jpeg",
    "tensorflow.python.ops.image_ops.encode_png",
    "tf_slim.data.tfexample_decoder_test.sys"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest._SequenceFloatFeature": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "tensorflow.compat.v1.train.FeatureList"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest._StringFeature": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "tensorflow.compat.v1.train.BytesList",
    "tensorflow.compat.v1.train.Feature"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleMultiShapeKeyTensor": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.rand",
    "tensorflow.compat.v1.float32",
    "tensorflow.compat.v1.int64",
    "tensorflow.compat.v1.train.Example",
    "tensorflow.compat.v1.train.Features",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.parsing_ops.VarLenFeature",
    "tf_slim.data.tfexample_decoder.TFExampleDecoder",
    "tf_slim.data.tfexample_decoder.Tensor"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleShapeKeyTensor": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.rand",
    "tensorflow.compat.v1.float32",
    "tensorflow.compat.v1.int64",
    "tensorflow.compat.v1.train.Example",
    "tensorflow.compat.v1.train.Features",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.parsing_ops.VarLenFeature",
    "tf_slim.data.tfexample_decoder.TFExampleDecoder",
    "tf_slim.data.tfexample_decoder.Tensor"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleWithBackupHandlerLookup": {
  "data": {
   "lineno": 929,
   "symbols_in_volume": [
    "numpy.array",
    "tensorflow.compat.v1.constant",
    "tensorflow.compat.v1.int64",
    "tensorflow.compat.v1.string",
    "tensorflow.compat.v1.train.Example",
    "tensorflow.compat.v1.train.Features",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.lookup_ops.index_table_from_tensor",
    "tensorflow.python.ops.lookup_ops.tables_initializer",
    "tensorflow.python.ops.parsing_ops.VarLenFeature",
    "tf_slim.data.tfexample_decoder.BackupHandler",
    "tf_slim.data.tfexample_decoder.LookupTensor",
    "tf_slim.data.tfexample_decoder.TFExampleDecoder",
    "tf_slim.data.tfexample_decoder.Tensor"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleWithBoundingBoxDense": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": [
    "numpy.hstack",
    "numpy.random.rand",
    "tensorflow.compat.v1.float32",
    "tensorflow.compat.v1.train.Example",
    "tensorflow.compat.v1.train.Features",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.parsing_ops.FixedLenSequenceFeature",
    "tf_slim.data.tfexample_decoder.BoundingBox",
    "tf_slim.data.tfexample_decoder.TFExampleDecoder"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleWithBoundingBoxSparse": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "numpy.hstack",
    "numpy.random.rand",
    "tensorflow.compat.v1.float32",
    "tensorflow.compat.v1.train.Example",
    "tensorflow.compat.v1.train.Features",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.parsing_ops.VarLenFeature",
    "tf_slim.data.tfexample_decoder.BoundingBox",
    "tf_slim.data.tfexample_decoder.TFExampleDecoder"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleWithFixLenTensorWithShape": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "numpy.array",
    "tensorflow.compat.v1.int64",
    "tensorflow.compat.v1.train.Example",
    "tensorflow.compat.v1.train.Features",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.parsing_ops.FixedLenFeature",
    "tf_slim.data.tfexample_decoder.TFExampleDecoder",
    "tf_slim.data.tfexample_decoder.Tensor"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleWithFloatTensor": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "numpy.random.rand",
    "tensorflow.compat.v1.float32",
    "tensorflow.compat.v1.train.Example",
    "tensorflow.compat.v1.train.Features",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.parsing_ops.FixedLenFeature",
    "tf_slim.data.tfexample_decoder.TFExampleDecoder",
    "tf_slim.data.tfexample_decoder.Tensor"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleWithInt64Tensor": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "numpy.random.randint",
    "tensorflow.compat.v1.int64",
    "tensorflow.compat.v1.train.Example",
    "tensorflow.compat.v1.train.Features",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.parsing_ops.FixedLenFeature",
    "tf_slim.data.tfexample_decoder.TFExampleDecoder",
    "tf_slim.data.tfexample_decoder.Tensor"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleWithItemHandlerCallback": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "numpy.random.rand",
    "numpy.random.seed",
    "tensorflow.compat.v1.float32",
    "tensorflow.compat.v1.train.Example",
    "tensorflow.compat.v1.train.Features",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.parsing_ops.FixedLenFeature",
    "tf_slim.data.tfexample_decoder.ItemHandlerCallback",
    "tf_slim.data.tfexample_decoder.TFExampleDecoder"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleWithItemHandlerCallback.HandleDepth": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleWithJPEGEncoding": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "tf_slim.data.tfexample_decoder.Image"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleWithJpegEncoding": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "tf_slim.data.tfexample_decoder.Image"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleWithJpegEncodingAt16BitDoesNotCauseError": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "tensorflow.compat.v1.uint16",
    "tf_slim.data.tfexample_decoder.Image"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleWithLookup": {
  "data": {
   "lineno": 896,
   "symbols_in_volume": [
    "numpy.array",
    "tensorflow.compat.v1.constant",
    "tensorflow.compat.v1.string",
    "tensorflow.compat.v1.train.Example",
    "tensorflow.compat.v1.train.Features",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.lookup_ops.index_table_from_tensor",
    "tensorflow.python.ops.lookup_ops.tables_initializer",
    "tensorflow.python.ops.parsing_ops.VarLenFeature",
    "tf_slim.data.tfexample_decoder.LookupTensor",
    "tf_slim.data.tfexample_decoder.TFExampleDecoder"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleWithNoShapeInfo": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "tf_slim.data.tfexample_decoder.Image"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleWithPNGEncoding": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "tf_slim.data.tfexample_decoder.Image"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleWithPngEncoding": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "tf_slim.data.tfexample_decoder.Image"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleWithRAWEncoding": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "tf_slim.data.tfexample_decoder.Image"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleWithRawEncoding": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "tf_slim.data.tfexample_decoder.Image"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleWithRawEncodingFloatDtype": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "numpy.float32",
    "tensorflow.compat.v1.float32",
    "tf_slim.data.tfexample_decoder.Image"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleWithRepeatedImages": {
  "data": {
   "lineno": 854,
   "symbols_in_volume": [
    "numpy.squeeze",
    "tensorflow.compat.v1.string",
    "tensorflow.compat.v1.train.BytesList",
    "tensorflow.compat.v1.train.Example",
    "tensorflow.compat.v1.train.Feature",
    "tensorflow.compat.v1.train.Features",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.parsing_ops.FixedLenFeature",
    "tf_slim.data.tfexample_decoder.Image",
    "tf_slim.data.tfexample_decoder.TFExampleDecoder"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleWithSparseTensor": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "numpy.array",
    "tensorflow.compat.v1.float32",
    "tensorflow.compat.v1.int64",
    "tensorflow.compat.v1.train.Example",
    "tensorflow.compat.v1.train.Features",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.parsing_ops.VarLenFeature",
    "tf_slim.data.tfexample_decoder.SparseTensor",
    "tf_slim.data.tfexample_decoder.TFExampleDecoder"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleWithSparseTensorToDense": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "numpy.array",
    "tensorflow.compat.v1.float32",
    "tensorflow.compat.v1.int64",
    "tensorflow.compat.v1.train.Example",
    "tensorflow.compat.v1.train.Features",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.parsing_ops.VarLenFeature",
    "tf_slim.data.tfexample_decoder.SparseTensor",
    "tf_slim.data.tfexample_decoder.TFExampleDecoder"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleWithSparseTensorWithGivenShape": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "numpy.array",
    "tensorflow.compat.v1.float32",
    "tensorflow.compat.v1.int64",
    "tensorflow.compat.v1.train.Example",
    "tensorflow.compat.v1.train.Features",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.parsing_ops.VarLenFeature",
    "tf_slim.data.tfexample_decoder.SparseTensor",
    "tf_slim.data.tfexample_decoder.TFExampleDecoder"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleWithSparseTensorWithKeyShape": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "numpy.array",
    "tensorflow.compat.v1.float32",
    "tensorflow.compat.v1.int64",
    "tensorflow.compat.v1.train.Example",
    "tensorflow.compat.v1.train.Features",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.parsing_ops.VarLenFeature",
    "tf_slim.data.tfexample_decoder.SparseTensor",
    "tf_slim.data.tfexample_decoder.TFExampleDecoder"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleWithStringTensor": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array_equal",
    "tensorflow.compat.v1.constant",
    "tensorflow.compat.v1.string",
    "tensorflow.compat.v1.train.Example",
    "tensorflow.compat.v1.train.Features",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.parsing_ops.FixedLenFeature",
    "tf_slim.data.tfexample_decoder.TFExampleDecoder",
    "tf_slim.data.tfexample_decoder.Tensor"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleWithTensor": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "numpy.random.rand",
    "tensorflow.compat.v1.float32",
    "tensorflow.compat.v1.train.Example",
    "tensorflow.compat.v1.train.Features",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.parsing_ops.FixedLenFeature",
    "tf_slim.data.tfexample_decoder.TFExampleDecoder",
    "tf_slim.data.tfexample_decoder.Tensor"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleWithVarLenTensor": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "numpy.array",
    "tensorflow.compat.v1.int64",
    "tensorflow.compat.v1.train.Example",
    "tensorflow.compat.v1.train.Features",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.parsing_ops.VarLenFeature",
    "tf_slim.data.tfexample_decoder.TFExampleDecoder",
    "tf_slim.data.tfexample_decoder.Tensor"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeExampleWithVarLenTensorToDense": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "numpy.array",
    "tensorflow.compat.v1.int64",
    "tensorflow.compat.v1.train.Example",
    "tensorflow.compat.v1.train.Features",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.parsing_ops.VarLenFeature",
    "tf_slim.data.tfexample_decoder.TFExampleDecoder",
    "tf_slim.data.tfexample_decoder.Tensor"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeImageWithItemHandlerCallback": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "numpy.float32",
    "tensorflow.compat.v1.string",
    "tensorflow.python.ops.parsing_ops.FixedLenFeature",
    "tf_slim.data.tfexample_decoder.ItemHandlerCallback",
    "tf_slim.data.tfexample_decoder.TFExampleDecoder"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeImageWithItemHandlerCallback.ConditionalDecoding": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.control_flow_ops.case",
    "tensorflow.python.ops.math_ops.equal"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeImageWithItemHandlerCallback.ConditionalDecoding.DecodeJpg": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "tensorflow.python.ops.image_ops.decode_jpeg"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeImageWithItemHandlerCallback.ConditionalDecoding.DecodePng": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "tensorflow.python.ops.image_ops.decode_png"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeSequenceExample": {
  "data": {
   "lineno": 1206,
   "symbols_in_volume": [
    "numpy.array",
    "tensorflow.compat.v1.float32",
    "tensorflow.compat.v1.string",
    "tensorflow.compat.v1.train.FeatureLists",
    "tensorflow.compat.v1.train.Features",
    "tensorflow.compat.v1.train.SequenceExample",
    "tensorflow.python.ops.parsing_ops.FixedLenFeature",
    "tensorflow.python.ops.parsing_ops.FixedLenSequenceFeature",
    "tf_slim.data.tfexample_decoder.TFSequenceExampleDecoder",
    "tf_slim.data.tfexample_decoder.Tensor"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeSequenceExampleBoundingBoxSequence": {
  "data": {
   "lineno": 1063,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.stack",
    "tensorflow.compat.v1.float32",
    "tensorflow.compat.v1.train.FeatureLists",
    "tensorflow.compat.v1.train.SequenceExample",
    "tensorflow.python.ops.parsing_ops.VarLenFeature",
    "tf_slim.data.tfexample_decoder.BoundingBoxSequence",
    "tf_slim.data.tfexample_decoder.TFSequenceExampleDecoder"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeSequenceExampleBoundingBoxSequenceWithDefaultValue": {
  "data": {
   "lineno": 1102,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.stack",
    "tensorflow.compat.v1.float32",
    "tensorflow.compat.v1.train.FeatureLists",
    "tensorflow.compat.v1.train.SequenceExample",
    "tensorflow.python.ops.parsing_ops.VarLenFeature",
    "tf_slim.data.tfexample_decoder.BoundingBoxSequence",
    "tf_slim.data.tfexample_decoder.TFSequenceExampleDecoder"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeSequenceExampleKeypointsSequence": {
  "data": {
   "lineno": 1142,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.stack",
    "tensorflow.compat.v1.float32",
    "tensorflow.compat.v1.train.FeatureLists",
    "tensorflow.compat.v1.train.SequenceExample",
    "tensorflow.python.ops.parsing_ops.VarLenFeature",
    "tf_slim.data.tfexample_decoder.KeypointsSequence",
    "tf_slim.data.tfexample_decoder.TFSequenceExampleDecoder"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeSequenceExampleKeypointsSequenceWithDefaultValue": {
  "data": {
   "lineno": 1174,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.stack",
    "tensorflow.compat.v1.float32",
    "tensorflow.compat.v1.train.FeatureLists",
    "tensorflow.compat.v1.train.SequenceExample",
    "tensorflow.python.ops.parsing_ops.VarLenFeature",
    "tf_slim.data.tfexample_decoder.KeypointsSequence",
    "tf_slim.data.tfexample_decoder.TFSequenceExampleDecoder"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeSequenceExampleNoBoxes": {
  "data": {
   "lineno": 1237,
   "symbols_in_volume": [
    "google.protobuf.text_format.Parse",
    "tensorflow.compat.v1.float32",
    "tensorflow.compat.v1.train.SequenceExample",
    "tensorflow.python.ops.parsing_ops.VarLenFeature",
    "tf_slim.data.tfexample_decoder.NumBoxesSequence",
    "tf_slim.data.tfexample_decoder.TFSequenceExampleDecoder"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeSequenceExampleNumBoxesSequenceNoCheck": {
  "data": {
   "lineno": 979,
   "symbols_in_volume": [
    "numpy.array",
    "tensorflow.compat.v1.float32",
    "tensorflow.compat.v1.train.FeatureLists",
    "tensorflow.compat.v1.train.SequenceExample",
    "tensorflow.python.ops.parsing_ops.VarLenFeature",
    "tf_slim.data.tfexample_decoder.NumBoxesSequence",
    "tf_slim.data.tfexample_decoder.TFSequenceExampleDecoder"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeSequenceExampleNumBoxesSequenceNotSparse": {
  "data": {
   "lineno": 1039,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "tensorflow.compat.v1.float32",
    "tensorflow.compat.v1.train.FeatureLists",
    "tensorflow.compat.v1.train.SequenceExample",
    "tensorflow.python.ops.parsing_ops.FixedLenSequenceFeature",
    "tf_slim.data.tfexample_decoder.NumBoxesSequence",
    "tf_slim.data.tfexample_decoder.TFSequenceExampleDecoder"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeSequenceExampleNumBoxesSequenceWithCheck": {
  "data": {
   "lineno": 1009,
   "symbols_in_volume": [
    "numpy.array",
    "tensorflow.compat.v1.errors.InvalidArgumentError",
    "tensorflow.compat.v1.float32",
    "tensorflow.compat.v1.train.FeatureLists",
    "tensorflow.compat.v1.train.SequenceExample",
    "tensorflow.python.ops.parsing_ops.VarLenFeature",
    "tf_slim.data.tfexample_decoder.NumBoxesSequence",
    "tf_slim.data.tfexample_decoder.TFSequenceExampleDecoder"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.TFExampleDecoderTest.testDecodeSequenceExamplePartialBoxes": {
  "data": {
   "lineno": 1269,
   "symbols_in_volume": [
    "google.protobuf.text_format.Parse",
    "tensorflow.compat.v1.float32",
    "tensorflow.compat.v1.train.SequenceExample",
    "tensorflow.python.ops.parsing_ops.VarLenFeature",
    "tf_slim.data.tfexample_decoder.NumBoxesSequence",
    "tf_slim.data.tfexample_decoder.TFSequenceExampleDecoder"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.data.tfexample_decoder_test.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tf_slim.data.tfexample_decoder_test.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tf_slim.data.tfexample_decoder_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.data.tfexample_decoder_test.image_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.image_ops"
  },
  "type": "import"
 },
 "tf_slim.data.tfexample_decoder_test.lookup_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.lookup_ops"
  },
  "type": "import"
 },
 "tf_slim.data.tfexample_decoder_test.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tf_slim.data.tfexample_decoder_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tf_slim.data.tfexample_decoder_test.parsing_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.parsing_ops"
  },
  "type": "import"
 },
 "tf_slim.data.tfexample_decoder_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.data.tfexample_decoder_test.setUpModule": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "tensorflow.compat.v1.disable_eager_execution"
   ]
  },
  "type": "function"
 },
 "tf_slim.data.tfexample_decoder_test.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tf_slim.data.tfexample_decoder_test.test": {
  "data": {
   "shadows": "tensorflow.python.platform.test"
  },
  "type": "import"
 },
 "tf_slim.data.tfexample_decoder_test.text_format": {
  "data": {
   "shadows": "google.protobuf.text_format"
  },
  "type": "import"
 },
 "tf_slim.data.tfexample_decoder_test.tf": {
  "data": {
   "shadows": "tensorflow.compat.v1"
  },
  "type": "import"
 },
 "tf_slim.data.tfexample_decoder_test.tfexample_decoder": {
  "data": {
   "shadows": "tf_slim.data.tfexample_decoder"
  },
  "type": "import"
 },
 "tf_slim.data_decoder": {
  "data": {
   "shadows": "tf_slim.data.data_decoder"
  },
  "type": "import"
 },
 "tf_slim.data_provider": {
  "data": {
   "shadows": "tf_slim.data.data_provider"
  },
  "type": "import"
 },
 "tf_slim.dataset": {
  "data": {
   "shadows": "tf_slim.data.dataset"
  },
  "type": "import"
 },
 "tf_slim.dataset_data_provider": {
  "data": {
   "shadows": "tf_slim.data.dataset_data_provider"
  },
  "type": "import"
 },
 "tf_slim.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.evaluation": {
  "data": {
   "shadows": "tf_slim.evaluation"
  },
  "type": "import"
 },
 "tf_slim.evaluation.StopAfterNEvalsHook": {
  "data": {
   "lineno": 149
  },
  "type": "constant"
 },
 "tf_slim.evaluation.SummaryAtEndHook": {
  "data": {
   "lineno": 150
  },
  "type": "constant"
 },
 "tf_slim.evaluation._USE_DEFAULT": {
  "data": {
   "lineno": 157
  },
  "type": "constant"
 },
 "tf_slim.evaluation.__all__": {
  "data": {
   "lineno": 139
  },
  "type": "constant"
 },
 "tf_slim.evaluation.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.evaluation.checkpoints_iterator": {
  "data": {
   "lineno": 155
  },
  "type": "constant"
 },
 "tf_slim.evaluation.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.evaluation.evaluate_once": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "tensorflow.python.summary.summary.merge_all",
    "tensorflow.python.training.monitored_session.Scaffold",
    "tensorflow.python.training.saver",
    "tensorflow.python.training.saver.Saver",
    "tf_slim.evaluation._USE_DEFAULT",
    "tf_slim.training.evaluation.StopAfterNEvalsHook",
    "tf_slim.training.evaluation.SummaryAtEndHook",
    "tf_slim.training.evaluation.evaluate_once"
   ]
  },
  "type": "function"
 },
 "tf_slim.evaluation.evaluate_repeatedly": {
  "data": {
   "lineno": 151
  },
  "type": "constant"
 },
 "tf_slim.evaluation.evaluation": {
  "data": {
   "shadows": "tf_slim.training.evaluation"
  },
  "type": "import"
 },
 "tf_slim.evaluation.evaluation_loop": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "tensorflow.python.summary.summary.merge_all",
    "tensorflow.python.training.monitored_session.Scaffold",
    "tensorflow.python.training.saver",
    "tensorflow.python.training.saver.Saver",
    "tf_slim.evaluation._USE_DEFAULT",
    "tf_slim.training.evaluation.StopAfterNEvalsHook",
    "tf_slim.training.evaluation.SummaryAtEndHook",
    "tf_slim.training.evaluation.evaluate_repeatedly"
   ]
  },
  "type": "function"
 },
 "tf_slim.evaluation.get_or_create_eval_step": {
  "data": {
   "lineno": 153
  },
  "type": "constant"
 },
 "tf_slim.evaluation.monitored_session": {
  "data": {
   "shadows": "tensorflow.python.training.monitored_session"
  },
  "type": "import"
 },
 "tf_slim.evaluation.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.evaluation.summary": {
  "data": {
   "shadows": "tensorflow.python.summary.summary"
  },
  "type": "import"
 },
 "tf_slim.evaluation.tf_saver": {
  "data": {
   "shadows": "tensorflow.python.training.saver"
  },
  "type": "import"
 },
 "tf_slim.evaluation.wait_for_new_checkpoint": {
  "data": {
   "lineno": 154
  },
  "type": "constant"
 },
 "tf_slim.evaluation_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.flags.FLAGS",
    "tensorflow.python.platform.test.main"
   ]
  },
  "type": "module"
 },
 "tf_slim.evaluation_test.EvaluationTest": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.evaluation_test.EvaluationTest._create_names_to_metrics": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "tensorflow.python.ops.metrics.accuracy"
   ]
  },
  "type": "function"
 },
 "tf_slim.evaluation_test.EvaluationTest._verify_summaries": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "events",
    "len",
    "tensorflow.python.summary.summary_iterator.summary_iterator",
    "tf_slim.evaluation_test.glob",
    "tf_slim.evaluation_test.os"
   ]
  },
  "type": "function"
 },
 "tf_slim.evaluation_test.EvaluationTest.setUp": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int64",
    "tf_slim.evaluation_test.EvaluationTest",
    "tf_slim.evaluation_test.GenerateTestData",
    "tf_slim.evaluation_test.GroundTruthAccuracy",
    "tf_slim.evaluation_test.TestModel",
    "tf_slim.ops.variables.get_or_create_global_step"
   ]
  },
  "type": "function"
 },
 "tf_slim.evaluation_test.EvaluationTest.testFinalOpsOnEvaluationLoop": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "CustomHook",
    "Object",
    "tensorflow.python.ops.control_flow_ops.group",
    "tensorflow.python.ops.metrics.accuracy",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tensorflow.python.training.saver",
    "tensorflow.python.training.saver.Saver",
    "tensorflow.python.training.saver.save",
    "tf_slim.evaluation_test.os",
    "tf_slim.evaluation_test.tempfile",
    "tf_slim.training.evaluation.evaluation_loop"
   ]
  },
  "type": "function"
 },
 "tf_slim.evaluation_test.EvaluationTest.testFinalOpsOnEvaluationLoop.CustomHook": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "tensorflow.python.training.session_run_hook.SessionRunHook"
   ]
  },
  "type": "class"
 },
 "tf_slim.evaluation_test.EvaluationTest.testFinalOpsOnEvaluationLoop.CustomHook.__init__": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "tf_slim.evaluation_test.EvaluationTest.testFinalOpsOnEvaluationLoop.CustomHook.end": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "tf_slim.evaluation_test.EvaluationTest.testFinalOpsOnEvaluationLoop.Object": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tf_slim.evaluation_test.EvaluationTest.testFinalOpsOnEvaluationLoop.Object.__init__": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "tf_slim.evaluation_test.EvaluationTest.testLatestCheckpointReturnsNoneAfterTimeout": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "tf_slim.evaluation_test.time",
    "tf_slim.training.evaluation.wait_for_new_checkpoint"
   ]
  },
  "type": "function"
 },
 "tf_slim.evaluation_test.EvaluationTest.testMonitorCheckpointsLoopTimeout": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "list",
    "tf_slim.training.evaluation.checkpoints_iterator"
   ]
  },
  "type": "function"
 },
 "tf_slim.evaluation_test.EvaluationTest.testTimeoutFnOnEvaluationLoop": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "tf_slim.training.evaluation.evaluation_loop"
   ]
  },
  "type": "function"
 },
 "tf_slim.evaluation_test.EvaluationTest.testTimeoutFnOnEvaluationLoop._TimeoutFn": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "tf_slim.evaluation_test.EvaluationTest.testWithEpochLimit": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "tensorflow.python.ops.control_flow_ops.group",
    "tensorflow.python.ops.metrics.accuracy",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tensorflow.python.platform.gfile.MakeDirs",
    "tensorflow.python.training.input.limit_epochs",
    "tensorflow.python.training.saver",
    "tensorflow.python.training.saver.Saver",
    "tensorflow.python.training.saver.save",
    "tf_slim.evaluation_test.os",
    "tf_slim.evaluation_test.tempfile",
    "tf_slim.training.evaluation.evaluation_loop"
   ]
  },
  "type": "function"
 },
 "tf_slim.evaluation_test.FLAGS": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "tf_slim.evaluation_test.GenerateTestData": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "tf_slim.evaluation_test.GroundTruthAccuracy": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "float",
    "numpy.argmax",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "tf_slim.evaluation_test.SingleEvaluationTest": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.evaluation_test.SingleEvaluationTest._prepareCheckpoint": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "tensorflow.core.protobuf.saver_pb2.SaverDef.V1",
    "tensorflow.python.ops.control_flow_ops.group",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tensorflow.python.training.saver",
    "tensorflow.python.training.saver.Saver",
    "tensorflow.python.training.saver.save"
   ]
  },
  "type": "function"
 },
 "tf_slim.evaluation_test.SingleEvaluationTest.setUp": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int64",
    "tf_slim.evaluation_test.GenerateTestData",
    "tf_slim.evaluation_test.GroundTruthAccuracy",
    "tf_slim.evaluation_test.SingleEvaluationTest",
    "tf_slim.evaluation_test.TestModel",
    "tf_slim.ops.variables.get_or_create_global_step"
   ]
  },
  "type": "function"
 },
 "tf_slim.evaluation_test.SingleEvaluationTest.testAdditionalHooks": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "tensorflow.python.debug.lib.debug_data.DebugDumpDir",
    "tensorflow.python.debug.wrappers.hooks.DumpingDebugHook",
    "tensorflow.python.ops.metrics.accuracy",
    "tf_slim.evaluation_test.glob",
    "tf_slim.evaluation_test.os",
    "tf_slim.evaluation_test.shutil",
    "tf_slim.evaluation_test.tempfile",
    "tf_slim.training.evaluation.evaluate_once"
   ]
  },
  "type": "function"
 },
 "tf_slim.evaluation_test.SingleEvaluationTest.testErrorRaisedIfCheckpointDoesntExist": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "ValueError",
    "tf_slim.evaluation_test.os",
    "tf_slim.evaluation_test.tempfile",
    "tf_slim.training.evaluation.evaluate_once"
   ]
  },
  "type": "function"
 },
 "tf_slim.evaluation_test.SingleEvaluationTest.testRestoredModelPerformance": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "tensorflow.python.ops.metrics.accuracy",
    "tf_slim.evaluation_test.os",
    "tf_slim.evaluation_test.tempfile",
    "tf_slim.training.evaluation.evaluate_once"
   ]
  },
  "type": "function"
 },
 "tf_slim.evaluation_test.TestModel": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "nose.tools.nottest",
    "tensorflow.python.ops.math_ops.argmax",
    "tensorflow.python.ops.math_ops.multiply",
    "tensorflow.python.ops.variables.Variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.evaluation_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.evaluation_test.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tf_slim.evaluation_test.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tf_slim.evaluation_test.debug_data": {
  "data": {
   "shadows": "tensorflow.python.debug.lib.debug_data"
  },
  "type": "import"
 },
 "tf_slim.evaluation_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.evaluation_test.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tf_slim.evaluation_test.evaluation": {
  "data": {
   "shadows": "tf_slim.evaluation"
  },
  "type": "import"
 },
 "tf_slim.evaluation_test.evaluation_lib": {
  "data": {
   "shadows": "tf_slim.training.evaluation"
  },
  "type": "import"
 },
 "tf_slim.evaluation_test.flags": {
  "data": {
   "shadows": "tensorflow.python.platform.flags"
  },
  "type": "import"
 },
 "tf_slim.evaluation_test.gfile": {
  "data": {
   "shadows": "tensorflow.python.platform.gfile"
  },
  "type": "import"
 },
 "tf_slim.evaluation_test.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "tf_slim.evaluation_test.hooks": {
  "data": {
   "shadows": "tensorflow.python.debug.wrappers.hooks"
  },
  "type": "import"
 },
 "tf_slim.evaluation_test.input": {
  "data": {
   "shadows": "tensorflow.python.training.input"
  },
  "type": "import"
 },
 "tf_slim.evaluation_test.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tf_slim.evaluation_test.metrics": {
  "data": {
   "shadows": "tensorflow.python.ops.metrics"
  },
  "type": "import"
 },
 "tf_slim.evaluation_test.nottest": {
  "data": {
   "shadows": "nose.tools.nottest"
  },
  "type": "import"
 },
 "tf_slim.evaluation_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tf_slim.evaluation_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tf_slim.evaluation_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.evaluation_test.saver_lib": {
  "data": {
   "shadows": "tensorflow.python.training.saver"
  },
  "type": "import"
 },
 "tf_slim.evaluation_test.saver_pb2": {
  "data": {
   "shadows": "tensorflow.core.protobuf.saver_pb2"
  },
  "type": "import"
 },
 "tf_slim.evaluation_test.session_run_hook": {
  "data": {
   "shadows": "tensorflow.python.training.session_run_hook"
  },
  "type": "import"
 },
 "tf_slim.evaluation_test.setUpModule": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "tensorflow.compat.v1.disable_eager_execution"
   ]
  },
  "type": "function"
 },
 "tf_slim.evaluation_test.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "tf_slim.evaluation_test.summary_iterator": {
  "data": {
   "shadows": "tensorflow.python.summary.summary_iterator"
  },
  "type": "import"
 },
 "tf_slim.evaluation_test.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "tf_slim.evaluation_test.test": {
  "data": {
   "shadows": "tensorflow.python.platform.test"
  },
  "type": "import"
 },
 "tf_slim.evaluation_test.tf": {
  "data": {
   "shadows": "tensorflow.compat.v1"
  },
  "type": "import"
 },
 "tf_slim.evaluation_test.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "tf_slim.evaluation_test.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tf_slim.evaluation_test.variables_lib": {
  "data": {
   "shadows": "tf_slim.ops.variables"
  },
  "type": "import"
 },
 "tf_slim.has_arg_scope": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "tf_slim.layers": {
  "data": {},
  "type": "module"
 },
 "tf_slim.layers.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.layers.bucketization_op": {
  "data": {},
  "type": "module"
 },
 "tf_slim.layers.bucketization_op.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.layers.bucketization_op.bucketize": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops._bucketize"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.bucketization_op.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.layers.bucketization_op.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tf_slim.layers.bucketization_op.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.layers.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.layers.initializers": {
  "data": {
   "symbols_in_volume": [
    "tf_slim.layers.initializers.xavier_initializer"
   ]
  },
  "type": "module"
 },
 "tf_slim.layers.initializers.__all__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "tf_slim.layers.initializers.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.layers.initializers.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.layers.initializers.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tf_slim.layers.initializers.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "tf_slim.layers.initializers.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.layers.initializers.random_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.random_ops"
  },
  "type": "import"
 },
 "tf_slim.layers.initializers.variance_scaling_initializer": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "TypeError",
    "tensorflow.python.framework.dtypes.float32"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.initializers.variance_scaling_initializer._initializer": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "TypeError",
    "float",
    "len",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.random_ops.truncated_normal",
    "tf_slim.layers.initializers.math"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.initializers.xavier_initializer": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tf_slim.layers.initializers.variance_scaling_initializer"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.initializers.xavier_initializer_conv2d": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "tf_slim.layers.initializers_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.test.main"
   ]
  },
  "type": "module"
 },
 "tf_slim.layers.initializers_test.InitializerTest": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.initializers_test.InitializerTest._test_xavier": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "initializer",
    "numpy.var",
    "tensorflow.python.client.session.Session",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variable_scope.get_variable",
    "tensorflow.python.ops.variables.global_variables_initializer"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.initializers_test.InitializerTest.test_xavier_conv2d_normal": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "tf_slim.layers.initializers_test.tf_slim"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.initializers_test.InitializerTest.test_xavier_conv2d_uniform": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "tf_slim.layers.initializers_test.tf_slim"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.initializers_test.InitializerTest.test_xavier_normal": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "tf_slim.layers.initializers.xavier_initializer"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.initializers_test.InitializerTest.test_xavier_scalar": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "tf_slim.layers.initializers.xavier_initializer"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.initializers_test.InitializerTest.test_xavier_uniform": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "tf_slim.layers.initializers.xavier_initializer"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.initializers_test.InitializerTest.test_xavier_wrong_dtype": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "TypeError",
    "tensorflow.python.framework.dtypes.int32",
    "tf_slim.layers.initializers.xavier_initializer",
    "tf_slim.layers.regularizers.l1_regularizer"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.initializers_test.VarianceScalingInitializerTest": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.initializers_test.VarianceScalingInitializerTest._test_variance": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "initializer",
    "numpy.var",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.ops.variable_scope.get_variable",
    "tensorflow.python.ops.variables.global_variables_initializer"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.initializers_test.VarianceScalingInitializerTest.test_1d_shape_fan_avg": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "tf_slim.layers.initializers.variance_scaling_initializer"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.initializers_test.VarianceScalingInitializerTest.test_1d_shape_fan_in": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "tf_slim.layers.initializers.variance_scaling_initializer"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.initializers_test.VarianceScalingInitializerTest.test_1d_shape_fan_out": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "tf_slim.layers.initializers.variance_scaling_initializer"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.initializers_test.VarianceScalingInitializerTest.test_conv2d_fan_avg": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "tf_slim.layers.initializers.variance_scaling_initializer"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.initializers_test.VarianceScalingInitializerTest.test_conv2d_fan_in": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "tf_slim.layers.initializers.variance_scaling_initializer"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.initializers_test.VarianceScalingInitializerTest.test_conv2d_fan_out": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "tf_slim.layers.initializers.variance_scaling_initializer"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.initializers_test.VarianceScalingInitializerTest.test_fan_avg": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "tf_slim.layers.initializers.variance_scaling_initializer"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.initializers_test.VarianceScalingInitializerTest.test_fan_in": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "tf_slim.layers.initializers.variance_scaling_initializer"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.initializers_test.VarianceScalingInitializerTest.test_fan_out": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "tf_slim.layers.initializers.variance_scaling_initializer"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.initializers_test.VarianceScalingInitializerTest.test_wrong_dtype": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "TypeError",
    "initializer",
    "tensorflow.python.framework.dtypes.int32",
    "tf_slim.layers.initializers.variance_scaling_initializer"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.initializers_test.VarianceScalingInitializerTest.test_xavier_conv2d_normal": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "tf_slim.layers.initializers.variance_scaling_initializer"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.initializers_test.VarianceScalingInitializerTest.test_xavier_conv2d_uniform": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "tf_slim.layers.initializers.variance_scaling_initializer"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.initializers_test.VarianceScalingInitializerTest.test_xavier_normal": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "tf_slim.layers.initializers.variance_scaling_initializer"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.initializers_test.VarianceScalingInitializerTest.test_xavier_scalar": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "tf_slim.layers.initializers.variance_scaling_initializer"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.initializers_test.VarianceScalingInitializerTest.test_xavier_uniform": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "tf_slim.layers.initializers.variance_scaling_initializer"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.initializers_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.layers.initializers_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.layers.initializers_test.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tf_slim.layers.initializers_test.initializers": {
  "data": {
   "shadows": "tf_slim.layers.initializers"
  },
  "type": "import"
 },
 "tf_slim.layers.initializers_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tf_slim.layers.initializers_test.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tf_slim.layers.initializers_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.layers.initializers_test.regularizers": {
  "data": {
   "shadows": "tf_slim.layers.regularizers"
  },
  "type": "import"
 },
 "tf_slim.layers.initializers_test.session": {
  "data": {
   "shadows": "tensorflow.python.client.session"
  },
  "type": "import"
 },
 "tf_slim.layers.initializers_test.test": {
  "data": {
   "shadows": "tensorflow.python.platform.test"
  },
  "type": "import"
 },
 "tf_slim.layers.initializers_test.tf_slim": {
  "data": {
   "shadows": "tf_slim"
  },
  "type": "import"
 },
 "tf_slim.layers.initializers_test.variable_scope": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tf_slim.layers.initializers_test.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tf_slim.layers.layers_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.test.main",
    "tf_slim.ops.arg_scope",
    "tf_slim.ops.arg_scope.arg_scope"
   ]
  },
  "type": "module"
 },
 "tf_slim.layers.layers_test.AvgPool2DTest": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.layers_test.AvgPool2DTest.testCollectOutputs": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.avg_pool2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.AvgPool2DTest.testCreateAvgPool": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "numpy.random.uniform",
    "tf_slim.layers.layers.avg_pool2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.AvgPool2DTest.testCreateAvgPoolNCHW": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "numpy.random.uniform",
    "tf_slim.layers.layers.avg_pool2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.AvgPool2DTest.testCreateAvgPoolStrideWithSamePadding": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.avg_pool2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.AvgPool2DTest.testCreateAvgPoolWithSamePadding": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.avg_pool2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.AvgPool2DTest.testCreateAvgPoolWithSamePaddingNCHW": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.avg_pool2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.AvgPool2DTest.testCreateAvgPoolWithScope": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.avg_pool2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.AvgPool2DTest.testCreateSquareAvgPool": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.avg_pool2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.AvgPool2DTest.testGlobalAvgPool": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.avg_pool2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.AvgPool2DTest.testInvalidDataFormat": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.uniform",
    "tf_slim.layers.layers.avg_pool2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.AvgPool3DTest": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.layers_test.AvgPool3DTest.testCollectOutputs": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.avg_pool3d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.AvgPool3DTest.testCreateAvgPool": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "numpy.random.uniform",
    "tf_slim.layers.layers.avg_pool3d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.AvgPool3DTest.testCreateAvgPoolNCDHW": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "numpy.random.uniform",
    "tf_slim.layers.layers.avg_pool3d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.AvgPool3DTest.testCreateAvgPoolStrideWithSamePadding": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.avg_pool3d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.AvgPool3DTest.testCreateAvgPoolWithSamePadding": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.avg_pool3d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.AvgPool3DTest.testCreateAvgPoolWithSamePaddingNCDHW": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.avg_pool3d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.AvgPool3DTest.testCreateAvgPoolWithScope": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.avg_pool3d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.AvgPool3DTest.testCreateSquareAvgPool": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.avg_pool3d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.AvgPool3DTest.testGlobalAvgPool": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.avg_pool3d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.AvgPool3DTest.testInvalidDataFormat": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.uniform",
    "tf_slim.layers.layers.avg_pool3d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest": {
  "data": {
   "lineno": 1824,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.layers_test.BatchNormTest._addBesselsCorrection": {
  "data": {
   "lineno": 1826
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest._runBatchNormalizationWithFormat": {
  "data": {
   "lineno": 2704,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.arange",
    "numpy.float32",
    "numpy.product",
    "range",
    "tensorflow.python.ops.array_ops.transpose",
    "tensorflow.python.ops.init_ops.constant_initializer",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.layers.batch_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest._runFusedBatchNorm": {
  "data": {
   "lineno": 2791,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float32",
    "numpy.product",
    "tensorflow.python.ops.init_ops.constant_initializer",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.layers.batch_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest._testCreateOp": {
  "data": {
   "lineno": 1864,
   "symbols_in_volume": [
    "numpy.random.uniform",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.python.framework.ops.get_collection",
    "tf_slim.layers.layers.batch_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest._testCreateOpBetaRegularizer": {
  "data": {
   "lineno": 1888,
   "symbols_in_volume": [
    "len",
    "numpy.random.uniform",
    "tensorflow.python.framework.ops.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tf_slim.layers.layers.batch_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest._testCreateOpGammaRegularizer": {
  "data": {
   "lineno": 1905,
   "symbols_in_volume": [
    "len",
    "numpy.random.uniform",
    "tensorflow.python.framework.ops.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tf_slim.layers.layers.batch_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest._testDelayedUpdateMovingVars": {
  "data": {
   "lineno": 2157,
   "symbols_in_volume": [
    "len",
    "numpy.mean",
    "numpy.random.rand",
    "numpy.random.seed",
    "numpy.var",
    "range",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.GraphKeys.UPDATE_OPS",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.control_flow_ops.no_op",
    "tensorflow.python.ops.control_flow_ops.with_dependencies",
    "tensorflow.python.ops.state_ops.assign",
    "tensorflow.python.ops.variables.get_variables",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.layers.batch_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest._testEvalMovingVars": {
  "data": {
   "lineno": 2237,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.random.rand",
    "numpy.var",
    "range",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.GraphKeys.UPDATE_OPS",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.state_ops.assign",
    "tensorflow.python.ops.variables.get_variables",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.layers.batch_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest._testIsTrainingVariable": {
  "data": {
   "lineno": 2360,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.mean",
    "numpy.random.rand",
    "numpy.random.seed",
    "numpy.var",
    "range",
    "tensorflow.compat.v1.Variable",
    "tensorflow.compat.v1.identity",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.GraphKeys.UPDATE_OPS",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.control_flow_ops.no_op",
    "tensorflow.python.ops.control_flow_ops.with_dependencies",
    "tensorflow.python.ops.state_ops.assign",
    "tensorflow.python.ops.variables.get_variables",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.layers.batch_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest._testNoneUpdatesCollectionIsTrainingVariable": {
  "data": {
   "lineno": 2510,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.mean",
    "numpy.random.rand",
    "numpy.random.seed",
    "numpy.var",
    "range",
    "tensorflow.compat.v1.Variable",
    "tensorflow.compat.v1.identity",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.GraphKeys.UPDATE_OPS",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.state_ops.assign",
    "tensorflow.python.ops.variables.get_variables",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.layers.batch_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest._testNoneUpdatesCollections": {
  "data": {
   "lineno": 2072,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.random.rand",
    "numpy.random.seed",
    "numpy.var",
    "range",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.GraphKeys.UPDATE_OPS",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.variables.get_variables",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.layers.batch_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest._testReuseVars": {
  "data": {
   "lineno": 2286,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.mean",
    "numpy.random.rand",
    "numpy.var",
    "range",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.GraphKeys.UPDATE_OPS",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.control_flow_ops.no_op",
    "tensorflow.python.ops.control_flow_ops.with_dependencies",
    "tensorflow.python.ops.state_ops.assign",
    "tensorflow.python.ops.variables.get_variables",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.layers.batch_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest._testTrainMovingVars": {
  "data": {
   "lineno": 2598,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.max",
    "numpy.mean",
    "numpy.random.rand",
    "numpy.random.seed",
    "numpy.var",
    "range",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.GraphKeys.UPDATE_OPS",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.gradients_impl.gradients",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.variables.get_variables",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.layers.batch_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.is_float_var": {
  "data": {
   "lineno": 2769,
   "symbols_in_volume": [
    "tensorflow.compat.v1.float32",
    "tensorflow.compat.v1.resource",
    "tensorflow.python.framework.dtypes.float32_ref"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testAdjustmentCreated": {
  "data": {
   "lineno": 2826,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.ops.array_ops.zeros",
    "tf_slim.layers.layers.batch_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testAdjustmentCreated._create_adjustment": {
  "data": {
   "lineno": 2831,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.array_ops.zeros"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testBatchNormBeta": {
  "data": {
   "lineno": 2758,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float16",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.layers.batch_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testBatchNormCenterFalse": {
  "data": {
   "lineno": 1831,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.layers.layers.batch_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testCreateMovingVars": {
  "data": {
   "lineno": 2019,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.get_variables",
    "tf_slim.layers.layers.batch_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testCreateOpBetaRegularizerFused": {
  "data": {
   "lineno": 1899
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testCreateOpBetaRegularizerNonFused": {
  "data": {
   "lineno": 1902
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testCreateOpDefault": {
  "data": {
   "lineno": 1879
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testCreateOpFused": {
  "data": {
   "lineno": 1882
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testCreateOpFusedFloat16": {
  "data": {
   "lineno": 1885,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float16"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testCreateOpGammaRegularizerFused": {
  "data": {
   "lineno": 1917
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testCreateOpGammaRegularizerNonFused": {
  "data": {
   "lineno": 1920
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testCreateVariables": {
  "data": {
   "lineno": 1923,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.get_variables_by_name",
    "tf_slim.layers.layers.batch_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testCustomInitializer": {
  "data": {
   "lineno": 2676,
   "symbols_in_volume": [
    "numpy.ones",
    "tensorflow.python.ops.init_ops.constant_initializer",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.layers.batch_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testDelayedUpdateMovingVars": {
  "data": {
   "lineno": 2234
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testDelayedUpdateMovingVarsFusedNCHW": {
  "data": {
   "lineno": 2227,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.is_gpu_available"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testDelayedUpdateMovingVarsFusedNHWC": {
  "data": {
   "lineno": 2231
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testDelayedUpdateMovingVarsNCHW": {
  "data": {
   "lineno": 2224
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testDelayedUpdateMovingVarsNHWC": {
  "data": {
   "lineno": 2221
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testEvalMovingVars": {
  "data": {
   "lineno": 2271
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testEvalMovingVarsWithPartitioner": {
  "data": {
   "lineno": 2277,
   "symbols_in_volume": [
    "tensorflow.python.ops.partitioned_variables.fixed_size_partitioner",
    "tensorflow.python.ops.variable_scope.get_variable_scope",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testEvalMovingVarsZeroDebias": {
  "data": {
   "lineno": 2274
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testFusedBatchNormFloat16MatchesFloat32": {
  "data": {
   "lineno": 2819,
   "symbols_in_volume": [
    "numpy.float16",
    "numpy.float32",
    "tensorflow.python.platform.test.is_gpu_available"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testInvalidDataFormat": {
  "data": {
   "lineno": 1843,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.layers.layers.batch_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testIsTrainingVariableFusedNCHW": {
  "data": {
   "lineno": 2444,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.is_gpu_available"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testIsTrainingVariableFusedNCHWZeroDebias": {
  "data": {
   "lineno": 2451,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.is_gpu_available"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testIsTrainingVariableFusedNHWC": {
  "data": {
   "lineno": 2448
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testIsTrainingVariableFusedNHWCZeroDebias": {
  "data": {
   "lineno": 2456
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testIsTrainingVariableNCHW": {
  "data": {
   "lineno": 2433
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testIsTrainingVariableNCHWZeroDebias": {
  "data": {
   "lineno": 2440
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testIsTrainingVariableNHWC": {
  "data": {
   "lineno": 2430
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testIsTrainingVariableNHWCZeroDebias": {
  "data": {
   "lineno": 2436
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testMovingAverageVariables": {
  "data": {
   "lineno": 1937,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.get_model_variables",
    "tensorflow.python.ops.variables.get_variables_by_name",
    "tf_slim.layers.layers.batch_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testMovingAverageVariablesZeroDebias": {
  "data": {
   "lineno": 1948,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.get_model_variables",
    "tensorflow.python.ops.variables.get_variables_by_name",
    "tf_slim.layers.layers.batch_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testNHWCAndNCHWInferenceProduceSameOutput": {
  "data": {
   "lineno": 2740,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.is_gpu_available"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testNHWCAndNCHWTrainingProduceSameOutput": {
  "data": {
   "lineno": 2749,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.is_gpu_available"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testNoUpdatesWhenIsTrainingFalse": {
  "data": {
   "lineno": 2460,
   "symbols_in_volume": [
    "len",
    "numpy.random.rand",
    "range",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.GraphKeys.UPDATE_OPS",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.variables.get_variables",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.layers.batch_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testNoneUpdatesCollectionIsTrainingVariableFusedNCHW": {
  "data": {
   "lineno": 2589,
   "symbols_in_volume": [
    "tensorflow.compat.v1.Graph",
    "tensorflow.python.platform.test.is_gpu_available"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testNoneUpdatesCollectionIsTrainingVariableFusedNHWC": {
  "data": {
   "lineno": 2595
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testNoneUpdatesCollectionIsTrainingVariableNCHW": {
  "data": {
   "lineno": 2586
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testNoneUpdatesCollectionIsTrainingVariableNHWC": {
  "data": {
   "lineno": 2583
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testNoneUpdatesCollectionNoTraining": {
  "data": {
   "lineno": 2485,
   "symbols_in_volume": [
    "numpy.random.rand",
    "range",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.GraphKeys.UPDATE_OPS",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.variables.get_variables",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.layers.batch_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testNoneUpdatesCollectionsFusedNCHW": {
  "data": {
   "lineno": 2141,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.is_gpu_available"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testNoneUpdatesCollectionsFusedNCHWZeroDebias": {
  "data": {
   "lineno": 2148,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.is_gpu_available"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testNoneUpdatesCollectionsFusedNHWC": {
  "data": {
   "lineno": 2145
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testNoneUpdatesCollectionsFusedNHWCZeroDebias": {
  "data": {
   "lineno": 2153
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testNoneUpdatesCollectionsNCHW": {
  "data": {
   "lineno": 2130
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testNoneUpdatesCollectionsNCHWZeroDebias": {
  "data": {
   "lineno": 2137
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testNoneUpdatesCollectionsNHWC": {
  "data": {
   "lineno": 2126,
   "symbols_in_volume": [
    "print",
    "tensorflow.compat.v1.all_variables"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testNoneUpdatesCollectionsNHWCZeroDebias": {
  "data": {
   "lineno": 2133
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testReuseUpdateOps": {
  "data": {
   "lineno": 2009,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.batch_norm",
    "tf_slim.ops.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testReuseVariables": {
  "data": {
   "lineno": 1994,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.get_variables_by_name",
    "tf_slim.layers.layers.batch_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testReuseVarsDefault": {
  "data": {
   "lineno": 2348
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testReuseVarsDefaultZeroDebias": {
  "data": {
   "lineno": 2354
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testReuseVarsFused": {
  "data": {
   "lineno": 2351
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testReuseVarsFusedZeroDebias": {
  "data": {
   "lineno": 2357
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testTrainMovingVarsFusedNCHW": {
  "data": {
   "lineno": 2669,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.is_gpu_available"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testTrainMovingVarsFusedNHWC": {
  "data": {
   "lineno": 2673
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testTrainMovingVarsNCHW": {
  "data": {
   "lineno": 2666
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testTrainMovingVarsNHWC": {
  "data": {
   "lineno": 2663
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testUnknownChannelsDimNCHW": {
  "data": {
   "lineno": 1857,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.layers.layers.batch_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testUnknownChannelsDimNHWC": {
  "data": {
   "lineno": 1850,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.layers.layers.batch_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testUnknownShape": {
  "data": {
   "lineno": 1837,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.layers.layers.batch_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testUpdatesCollection": {
  "data": {
   "lineno": 1965,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.batch_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testVariablesAreFloat32": {
  "data": {
   "lineno": 2776,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float16",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.get_variables_by_name",
    "tf_slim.layers.layers.batch_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testVariablesCollections": {
  "data": {
   "lineno": 1978,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.batch_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BatchNormTest.testZeroDebiasMovingMean": {
  "data": {
   "lineno": 2031,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.random.rand",
    "numpy.random.seed",
    "numpy.var",
    "range",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.get_variables_by_name",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.layers.batch_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BiasAddTest": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.layers_test.BiasAddTest.testCreate": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "numpy.random.uniform",
    "tf_slim.layers.layers.bias_add"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BiasAddTest.testCreateDimensions": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.get_variables_by_name",
    "tf_slim.layers.layers.bias_add"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.BiasAddTest.testCreateWithActivation": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "tensorflow.python.ops.nn_ops.relu",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.bias_add"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.Convolution2dTransposeTests": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.layers_test.Convolution2dTransposeTests.testDeconvWithoutBiasesProducesConv2dTranspose": {
  "data": {
   "lineno": 1153,
   "symbols_in_volume": [
    "numpy.isclose",
    "tensorflow.python.ops.nn_ops.conv2d_transpose",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.get_variables_by_name",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.conv2d_transpose"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.Convolution2dTransposeTests.testDynamicOutputSizeWithStrideTwoSamePadding": {
  "data": {
   "lineno": 1103,
   "symbols_in_volume": [
    "list",
    "numpy.float32",
    "numpy.zeros",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.conv2d_transpose"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.Convolution2dTransposeTests.testDynamicOutputSizeWithStrideTwoValidPadding": {
  "data": {
   "lineno": 1085,
   "symbols_in_volume": [
    "list",
    "numpy.float32",
    "numpy.zeros",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.conv2d_transpose"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.Convolution2dTransposeTests.testInvalidDataFormat": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.convolution2d_transpose"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.Convolution2dTransposeTests.testOutputSizeRandomSizesAndStridesValidPadding": {
  "data": {
   "lineno": 1055,
   "symbols_in_volume": [
    "list",
    "numpy.random.randint",
    "numpy.random.seed",
    "range",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.ops.reset_default_graph",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.conv2d",
    "tf_slim.layers.conv2d_transpose"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.Convolution2dTransposeTests.testOutputSizeWith1x1StrideTwoSamePadding": {
  "data": {
   "lineno": 962,
   "symbols_in_volume": [
    "list",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.conv2d_transpose"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.Convolution2dTransposeTests.testOutputSizeWith1x1StrideTwoSamePaddingNCHW": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "list",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tensorflow.python.platform.test.is_gpu_available",
    "tf_slim.layers.conv2d_transpose"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.Convolution2dTransposeTests.testOutputSizeWith1x1StrideTwoValidPadding": {
  "data": {
   "lineno": 977,
   "symbols_in_volume": [
    "list",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.conv2d_transpose"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.Convolution2dTransposeTests.testOutputSizeWith1x1StrideTwoValidPaddingNCHW": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "list",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tensorflow.python.platform.test.is_gpu_available",
    "tf_slim.layers.conv2d_transpose"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.Convolution2dTransposeTests.testOutputSizeWith2x2StrideTwoSamePadding": {
  "data": {
   "lineno": 990,
   "symbols_in_volume": [
    "list",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.conv2d_transpose"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.Convolution2dTransposeTests.testOutputSizeWith2x2StrideTwoSamePaddingNCHW": {
  "data": {
   "lineno": 829,
   "symbols_in_volume": [
    "list",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tensorflow.python.platform.test.is_gpu_available",
    "tf_slim.layers.conv2d_transpose"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.Convolution2dTransposeTests.testOutputSizeWith2x2StrideTwoValidPadding": {
  "data": {
   "lineno": 1003,
   "symbols_in_volume": [
    "list",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.conv2d_transpose"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.Convolution2dTransposeTests.testOutputSizeWith2x2StrideTwoValidPaddingNCHW": {
  "data": {
   "lineno": 847,
   "symbols_in_volume": [
    "list",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tensorflow.python.platform.test.is_gpu_available",
    "tf_slim.layers.conv2d_transpose"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.Convolution2dTransposeTests.testOutputSizeWithStride2x1": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": [
    "list",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.conv2d_transpose"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.Convolution2dTransposeTests.testOutputSizeWithStride2x1NCHW": {
  "data": {
   "lineno": 865,
   "symbols_in_volume": [
    "list",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tensorflow.python.platform.test.is_gpu_available",
    "tf_slim.layers.conv2d_transpose"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.Convolution2dTransposeTests.testOutputSizeWithStride2x4": {
  "data": {
   "lineno": 1029,
   "symbols_in_volume": [
    "list",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.conv2d_transpose"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.Convolution2dTransposeTests.testOutputSizeWithStride2x4NCHW": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": [
    "list",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tensorflow.python.platform.test.is_gpu_available",
    "tf_slim.layers.conv2d_transpose"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.Convolution2dTransposeTests.testOutputSizeWithStride2x5": {
  "data": {
   "lineno": 1042,
   "symbols_in_volume": [
    "list",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.conv2d_transpose"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.Convolution2dTransposeTests.testOutputSizeWithStride2x5NCHW": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": [
    "list",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tensorflow.python.platform.test.is_gpu_available",
    "tf_slim.layers.conv2d_transpose"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.Convolution2dTransposeTests.testOutputSizeWithStrideOneSamePadding": {
  "data": {
   "lineno": 919,
   "symbols_in_volume": [
    "list",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.conv2d_transpose"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.Convolution2dTransposeTests.testOutputSizeWithStrideOneSamePaddingNCHW": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "list",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tensorflow.python.platform.test.is_gpu_available",
    "tf_slim.layers.conv2d_transpose"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.Convolution2dTransposeTests.testOutputSizeWithStrideOneValidPadding": {
  "data": {
   "lineno": 933,
   "symbols_in_volume": [
    "list",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.conv2d_transpose"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.Convolution2dTransposeTests.testOutputSizeWithStrideOneValidPaddingNCHW": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "list",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tensorflow.python.platform.test.is_gpu_available",
    "tf_slim.layers.conv2d_transpose"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.Convolution2dTransposeTests.testOutputSizeWithStrideTwoValidPadding": {
  "data": {
   "lineno": 947,
   "symbols_in_volume": [
    "list",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.conv2d_transpose"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.Convolution2dTransposeTests.testOutputSizeWithStrideTwoValidPaddingNCHW": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "list",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tensorflow.python.platform.test.is_gpu_available",
    "tf_slim.layers.conv2d_transpose"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.Convolution2dTransposeTests.testTrainableFlagIsPassedOn": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.get_model_variables",
    "tensorflow.python.ops.variables.trainable_variables",
    "tf_slim.layers.conv2d_transpose"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.Convolution2dTransposeTests.testWithScope": {
  "data": {
   "lineno": 1120,
   "symbols_in_volume": [
    "list",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.conv2d_transpose"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.Convolution2dTransposeTests.testWithScopeWithoutActivation": {
  "data": {
   "lineno": 1134,
   "symbols_in_volume": [
    "list",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.conv2d_transpose"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.ConvolutionInPlaneTest": {
  "data": {
   "lineno": 1186,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.layers_test.ConvolutionInPlaneTest.testConv1dShape": {
  "data": {
   "lineno": 1326,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.convolution1d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.ConvolutionInPlaneTest.testConvInferSpatialDims": {
  "data": {
   "lineno": 1334,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.random.uniform",
    "tf_slim.layers.convolution"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.ConvolutionInPlaneTest.testHorzConvWithBlankImage": {
  "data": {
   "lineno": 1188,
   "symbols_in_volume": [
    "numpy.zeros",
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.init_ops.constant_initializer",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.conv2d_in_plane"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.ConvolutionInPlaneTest.testHorzConvWithBlankImageAndPlaceholder": {
  "data": {
   "lineno": 1205,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.zeros",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.init_ops.constant_initializer",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.conv2d_in_plane"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.ConvolutionInPlaneTest.testHorzConvWithRandomImageMultiBatch": {
  "data": {
   "lineno": 1225,
   "symbols_in_volume": [
    "numpy.random.rand",
    "numpy.random.seed",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.init_ops.constant_initializer",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.conv2d_in_plane"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.ConvolutionInPlaneTest.testHorzConvWithRandomImageMultiBatchMultiChannel": {
  "data": {
   "lineno": 1245,
   "symbols_in_volume": [
    "numpy.random.rand",
    "numpy.random.seed",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.init_ops.constant_initializer",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.conv2d_in_plane"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.ConvolutionInPlaneTest.testHorzConvWithVaryingImage": {
  "data": {
   "lineno": 1265,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.asmatrix",
    "numpy.reshape",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.init_ops.constant_initializer",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.conv2d_in_plane"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.ConvolutionInPlaneTest.testVertConvWithBlankImage": {
  "data": {
   "lineno": 1287,
   "symbols_in_volume": [
    "numpy.zeros",
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.init_ops.constant_initializer",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.conv2d_in_plane"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.ConvolutionInPlaneTest.testVertConvWithVaryingImage": {
  "data": {
   "lineno": 1304,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.asmatrix",
    "numpy.reshape",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.init_ops.constant_initializer",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.conv2d_in_plane"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.ConvolutionTest": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.layers_test.ConvolutionTest.testConvWithBatchNorm": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.get_variables",
    "tf_slim.layers.convolution2d",
    "tf_slim.layers.layers.batch_norm",
    "tf_slim.ops.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.ConvolutionTest.testCreateConv": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.random.uniform",
    "tensorflow.python.ops.variables.get_variables_by_name",
    "tf_slim.layers.convolution2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.ConvolutionTest.testCreateConvCreatesWeightsAndBiasesVars": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.get_variables",
    "tf_slim.layers.convolution2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.ConvolutionTest.testCreateConvCreatesWeightsAndBiasesVarsWithRateTwo": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.get_variables",
    "tf_slim.layers.convolution2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.ConvolutionTest.testCreateConvNCHW": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.random.uniform",
    "tensorflow.python.ops.variables.get_variables_by_name",
    "tf_slim.layers.convolution2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.ConvolutionTest.testCreateConvNoRegularizers": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.convolution2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.ConvolutionTest.testCreateConvValid": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.convolution2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.ConvolutionTest.testCreateConvWithCollection": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.convolution2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.ConvolutionTest.testCreateConvWithScope": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.convolution2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.ConvolutionTest.testCreateConvWithStride": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.convolution2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.ConvolutionTest.testCreateConvWithTensorShape": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.convolution2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.ConvolutionTest.testCreateConvWithWD": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.nn_ops.l2_loss",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.get_variables_by_name",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.convolution2d",
    "tf_slim.layers.regularizers.l2_regularizer"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.ConvolutionTest.testCreateConvWithoutActivation": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.convolution2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.ConvolutionTest.testCreateFullyConv": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.get_variables_by_name",
    "tf_slim.layers.convolution2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.ConvolutionTest.testCreateHorizontalConv": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.get_variables_by_name",
    "tf_slim.layers.convolution2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.ConvolutionTest.testCreateSquareConv": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.convolution2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.ConvolutionTest.testCreateVerticalConv": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.get_variables_by_name",
    "tf_slim.layers.convolution2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.ConvolutionTest.testDynamicOutputSizeWithRateOneValidPadding": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "list",
    "numpy.float32",
    "numpy.zeros",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.convolution2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.ConvolutionTest.testDynamicOutputSizeWithRateOneValidPaddingNCHW": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "list",
    "numpy.float32",
    "numpy.zeros",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tensorflow.python.platform.test.is_gpu_available",
    "tf_slim.layers.convolution2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.ConvolutionTest.testDynamicOutputSizeWithRateTwoValidPadding": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "list",
    "numpy.float32",
    "numpy.zeros",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.convolution2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.ConvolutionTest.testFullyConvWithCustomGetter": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.layers.convolution2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.ConvolutionTest.testFullyConvWithCustomGetter.custom_getter": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "getter"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.ConvolutionTest.testInvalidDataFormat": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.convolution2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.ConvolutionTest.testInvalidShape": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.convolution2d",
    "tf_slim.layers.convolution3d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.ConvolutionTest.testNonReuseVars": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.get_variables",
    "tf_slim.layers.convolution2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.ConvolutionTest.testOutputSizeWithRateTwoSamePadding": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "list",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.convolution2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.ConvolutionTest.testOutputSizeWithRateTwoThreeValidPadding": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "list",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.convolution2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.ConvolutionTest.testOutputSizeWithRateTwoValidPadding": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "list",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.convolution2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.ConvolutionTest.testReuseConvWithBatchNorm": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.get_variables",
    "tf_slim.layers.convolution2d",
    "tf_slim.layers.layers.batch_norm",
    "tf_slim.ops.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.ConvolutionTest.testReuseConvWithWD": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.framework.ops.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.get_variables",
    "tf_slim.layers.convolution2d",
    "tf_slim.layers.regularizers.l2_regularizer",
    "tf_slim.ops.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.ConvolutionTest.testReuseVars": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.get_variables",
    "tf_slim.layers.convolution2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.ConvolutionTest.testWithScope": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "list",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.convolution2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.ConvolutionTest.testWithScopeWithoutActivation": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "list",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.convolution2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.DenseToSparseTest": {
  "data": {
   "lineno": 1350,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.layers_test.DenseToSparseTest.testDenseFromConstantToSparse": {
  "data": {
   "lineno": 1352,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.int64",
    "numpy.reshape",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.sparse_ops.sparse_to_dense",
    "tf_slim.layers.layers.dense_to_sparse"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.DropoutTest": {
  "data": {
   "lineno": 1363,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.layers_test.DropoutTest.testCollectOutputs": {
  "data": {
   "lineno": 1407,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.dropout"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.DropoutTest.testCreateDropout": {
  "data": {
   "lineno": 1365,
   "symbols_in_volume": [
    "numpy.random.uniform",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tf_slim.layers.layers.dropout"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.DropoutTest.testCreateDropoutNoTraining": {
  "data": {
   "lineno": 1439,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.reduce_mean",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.dropout"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.DropoutTest.testCreateDropoutWithConstantFalse": {
  "data": {
   "lineno": 1382,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.dropout"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.DropoutTest.testCreateDropoutWithConstantTrue": {
  "data": {
   "lineno": 1374,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.dropout"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.DropoutTest.testCreateDropoutWithPlaceholder": {
  "data": {
   "lineno": 1390,
   "symbols_in_volume": [
    "repr",
    "tensorflow.compat.v1.reset_default_graph",
    "tensorflow.python.framework.dtypes.bool",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.dropout"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.DropoutTest.testCreateFCFollowByDropout": {
  "data": {
   "lineno": 1453,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.reduce_mean",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.layers.dropout",
    "tf_slim.layers.layers.fully_connected"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.DropoutTest.testCreateFCWithDropout": {
  "data": {
   "lineno": 1468,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.reduce_mean",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.layers.dropout",
    "tf_slim.layers.layers.fully_connected"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.DropoutTest.testDropout": {
  "data": {
   "lineno": 1416,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.reduce_mean",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.dropout"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.DropoutTest.testDropoutSeed": {
  "data": {
   "lineno": 1429,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.dropout"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.FCTest": {
  "data": {
   "lineno": 1648,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.layers_test.FCTest.testCreateFC": {
  "data": {
   "lineno": 1650,
   "symbols_in_volume": [
    "layer_fn",
    "numpy.random.uniform",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.ops.variables.get_variables_by_name",
    "tf_slim.layers.layers.fully_connected",
    "tf_slim.layers.relu"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.FCTest.testCreateFCWithBD": {
  "data": {
   "lineno": 1754,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.layers.fully_connected",
    "tf_slim.layers.regularizers.l2_regularizer"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.FCTest.testCreateFCWithCollection": {
  "data": {
   "lineno": 1670,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.fully_connected"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.FCTest.testCreateFCWithScope": {
  "data": {
   "lineno": 1663,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.fully_connected"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.FCTest.testCreateFCWithWD": {
  "data": {
   "lineno": 1742,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.layers.fully_connected",
    "tf_slim.layers.regularizers.l2_regularizer"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.FCTest.testCreateFCWithoutActivation": {
  "data": {
   "lineno": 1735,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.fully_connected"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.FCTest.testCreateFcCreatesWeightsAndBiasesVars": {
  "data": {
   "lineno": 1680,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.get_variables",
    "tf_slim.layers.layers.fully_connected"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.FCTest.testCreateNoRegularizers": {
  "data": {
   "lineno": 1766,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.fully_connected"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.FCTest.testFCWithBatchNorm": {
  "data": {
   "lineno": 1790,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.get_variables",
    "tf_slim.layers.layers.batch_norm",
    "tf_slim.layers.layers.fully_connected",
    "tf_slim.ops.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.FCTest.testNonReuseVars": {
  "data": {
   "lineno": 1699,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.get_variables",
    "tf_slim.layers.layers.fully_connected"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.FCTest.testReuseFCWithBatchNorm": {
  "data": {
   "lineno": 1808,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.get_variables",
    "tf_slim.layers.layers.batch_norm",
    "tf_slim.layers.layers.fully_connected",
    "tf_slim.ops.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.FCTest.testReuseFCWithWD": {
  "data": {
   "lineno": 1774,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.framework.ops.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.get_variables",
    "tf_slim.layers.layers.fully_connected",
    "tf_slim.layers.regularizers.l2_regularizer"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.FCTest.testReuseVars": {
  "data": {
   "lineno": 1690,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.get_variables",
    "tf_slim.layers.layers.fully_connected"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.FCTest.testReuseWithRegularizer": {
  "data": {
   "lineno": 1708,
   "symbols_in_volume": [
    "len",
    "tensorflow.compat.v1.losses.get_regularization_losses",
    "tensorflow.python.framework.ops.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.layers.layers.fully_connected"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.FlattenTest": {
  "data": {
   "lineno": 1482,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.layers_test.FlattenTest.testCollectOutputs": {
  "data": {
   "lineno": 1491,
   "symbols_in_volume": [
    "numpy.random.uniform",
    "tensorflow.python.framework.ops.get_collection",
    "tf_slim.layers.layers.flatten"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.FlattenTest.testFlatten0D": {
  "data": {
   "lineno": 1520,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.flatten"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.FlattenTest.testFlatten3D": {
  "data": {
   "lineno": 1510,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.flatten"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.FlattenTest.testFlatten4D": {
  "data": {
   "lineno": 1500,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.flatten"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.FlattenTest.testFlattenBatchSize": {
  "data": {
   "lineno": 1526,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.flatten"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.FlattenTest.testUnknownDims": {
  "data": {
   "lineno": 1538,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.flatten"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.FlattenTest.testUnknownLastDim": {
  "data": {
   "lineno": 1484,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.layers.layers.flatten"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.GDNTest": {
  "data": {
   "lineno": 2992,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.layers_test.GDNTest._runGDN": {
  "data": {
   "lineno": 2994,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.layers.gdn"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.GDNTest.testChannelsFirst": {
  "data": {
   "lineno": 3019,
   "symbols_in_volume": [
    "numpy.random.uniform",
    "numpy.sqrt",
    "tensorflow.python.platform.test.is_gpu_available"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.GDNTest.testChannelsLast": {
  "data": {
   "lineno": 3012,
   "symbols_in_volume": [
    "numpy.random.uniform",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.GDNTest.testIGDN": {
  "data": {
   "lineno": 3034,
   "symbols_in_volume": [
    "numpy.random.uniform",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.GDNTest.testInvalidDataFormat": {
  "data": {
   "lineno": 3002,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.uniform"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.GDNTest.testUnknownDim": {
  "data": {
   "lineno": 3007,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.uniform"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.GDNTest.testWrongDims": {
  "data": {
   "lineno": 3028,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.uniform"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.ImagesToSequenceTest": {
  "data": {
   "lineno": 3041,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.layers_test.ImagesToSequenceTest.testImagesToSequenceDims": {
  "data": {
   "lineno": 3050,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.random.uniform",
    "tf_slim.layers.layers.images_to_sequence"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.ImagesToSequenceTest.testImagesToSequenceNCHW": {
  "data": {
   "lineno": 3056,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.random.uniform",
    "tf_slim.layers.layers.images_to_sequence"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.ImagesToSequenceTest.testInvalidDataFormat": {
  "data": {
   "lineno": 3043,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.uniform",
    "tf_slim.layers.layers.images_to_sequence"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.LayerNormTest": {
  "data": {
   "lineno": 2846,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.layers_test.LayerNormTest.doOutputTest": {
  "data": {
   "lineno": 2904,
   "symbols_in_volume": [
    "len",
    "numpy.float64",
    "numpy.isnan",
    "numpy.mean",
    "numpy.ones",
    "numpy.random.randn",
    "numpy.sqrt",
    "numpy.var",
    "numpy.zeros",
    "range",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float16",
    "tensorflow.python.framework.dtypes.float64",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.ops.variable_scope.get_variable",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.layers.layer_norm",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.LayerNormTest.testCreateOp": {
  "data": {
   "lineno": 2861,
   "symbols_in_volume": [
    "numpy.random.uniform",
    "tf_slim.layers.layers.layer_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.LayerNormTest.testCreateVariables": {
  "data": {
   "lineno": 2869,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.get_variables_by_name",
    "tf_slim.layers.layers.layer_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.LayerNormTest.testOutput2DInput": {
  "data": {
   "lineno": 2959
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.LayerNormTest.testOutput2DInputDegenerateNormAxis": {
  "data": {
   "lineno": 2962,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.LayerNormTest.testOutput4DInput": {
  "data": {
   "lineno": 2966
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.LayerNormTest.testOutput4DInputNormOnInnermostAxis": {
  "data": {
   "lineno": 2969,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float64"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.LayerNormTest.testOutputBigInput": {
  "data": {
   "lineno": 2982
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.LayerNormTest.testOutputBigInputFloat16": {
  "data": {
   "lineno": 2988,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float16"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.LayerNormTest.testOutputBigInputFloat32": {
  "data": {
   "lineno": 2985,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.LayerNormTest.testOutputSmallInput": {
  "data": {
   "lineno": 2976
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.LayerNormTest.testOutputSmallInputNormOnInnermostAxis": {
  "data": {
   "lineno": 2979
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.LayerNormTest.testParamsDimsNotFullyDefined": {
  "data": {
   "lineno": 2854,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.layers.layers.layer_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.LayerNormTest.testReuseVariables": {
  "data": {
   "lineno": 2879,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.get_variables_by_name",
    "tf_slim.layers.layers.layer_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.LayerNormTest.testReuseVars": {
  "data": {
   "lineno": 2890,
   "symbols_in_volume": [
    "numpy.random.rand",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.layers.layer_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.LayerNormTest.testUnknownShape": {
  "data": {
   "lineno": 2848,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.layers.layers.layer_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.LegacyFullyConnectedTest": {
  "data": {
   "lineno": 3976,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.layers_test.LegacyFullyConnectedTest._custom_initializers": {
  "data": {
   "lineno": 4062,
   "symbols_in_volume": [
    "numpy.array",
    "tensorflow.python.client.session.Session",
    "tensorflow.python.ops.init_ops.constant_initializer",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.legacy_relu"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.LegacyFullyConnectedTest._fully_connected_basic_use": {
  "data": {
   "lineno": 3989,
   "symbols_in_volume": [
    "len",
    "numpy.all",
    "tensorflow.python.client.session.Session",
    "tensorflow.python.framework.errors_impl.FailedPreconditionError",
    "tensorflow.python.framework.ops.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.python.framework.ops.GraphKeys.TRAINABLE_VARIABLES",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.nn_ops.relu",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.layers.legacy_fully_connected"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.LegacyFullyConnectedTest._unknown_dim_invalid_input": {
  "data": {
   "lineno": 4207,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.layers.layers.legacy_fully_connected"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.LegacyFullyConnectedTest.setUp": {
  "data": {
   "lineno": 3978,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.GraphKeys.SUMMARIES",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tf_slim.layers.layers_test.LegacyFullyConnectedTest"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.LegacyFullyConnectedTest.test_1d_invalid_input": {
  "data": {
   "lineno": 4219,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.nn_ops.softmax",
    "tf_slim.layers.layers.legacy_fully_connected"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.LegacyFullyConnectedTest.test_all_custom_collections": {
  "data": {
   "lineno": 4097,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.framework.ops.GraphKeys.TRAINABLE_VARIABLES",
    "tensorflow.python.framework.ops.get_collection",
    "tf_slim.layers.legacy_relu"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.LegacyFullyConnectedTest.test_custom_collections": {
  "data": {
   "lineno": 4084,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.framework.ops.GraphKeys.GLOBAL_VARIABLES",
    "tensorflow.python.framework.ops.get_collection",
    "tf_slim.layers.legacy_relu"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.LegacyFullyConnectedTest.test_custom_initializers": {
  "data": {
   "lineno": 4075
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.LegacyFullyConnectedTest.test_custom_initializers_multi_dim": {
  "data": {
   "lineno": 4078
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.LegacyFullyConnectedTest.test_empty_x_results_in_empty_output": {
  "data": {
   "lineno": 4171,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "tensorflow.python.ops.array_ops.size",
    "tensorflow.python.ops.nn_ops.softmax",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.layers.legacy_fully_connected"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.LegacyFullyConnectedTest.test_fully_connected_basic_use": {
  "data": {
   "lineno": 4009
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.LegacyFullyConnectedTest.test_fully_connected_basic_use_multi_dim": {
  "data": {
   "lineno": 4012
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.LegacyFullyConnectedTest.test_known_dim_valid_input": {
  "data": {
   "lineno": 4211
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.LegacyFullyConnectedTest.test_no_activation": {
  "data": {
   "lineno": 4114,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.framework.ops.GraphKeys.GLOBAL_VARIABLES",
    "tensorflow.python.framework.ops.get_collection",
    "tf_slim.layers.layers.legacy_fully_connected"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.LegacyFullyConnectedTest.test_no_activation_no_bias": {
  "data": {
   "lineno": 4119,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.framework.ops.GraphKeys.GLOBAL_VARIABLES",
    "tensorflow.python.framework.ops.get_collection",
    "tf_slim.layers.layers.legacy_fully_connected"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.LegacyFullyConnectedTest.test_no_bias": {
  "data": {
   "lineno": 4110,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.framework.ops.GraphKeys.GLOBAL_VARIABLES",
    "tensorflow.python.framework.ops.get_collection",
    "tf_slim.layers.legacy_relu"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.LegacyFullyConnectedTest.test_regularizer": {
  "data": {
   "lineno": 4124,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.get_collection",
    "tf_slim.layers.layers.legacy_fully_connected"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.LegacyFullyConnectedTest.test_regularizer.test_fn": {
  "data": {
   "lineno": 4127
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.LegacyFullyConnectedTest.test_regularizer_with_multiple_variables": {
  "data": {
   "lineno": 4138,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.get_collection",
    "tf_slim.layers.layers.legacy_fully_connected"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.LegacyFullyConnectedTest.test_regularizer_with_multiple_variables.test_fn": {
  "data": {
   "lineno": 4141
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.LegacyFullyConnectedTest.test_regularizer_with_variable_reuse": {
  "data": {
   "lineno": 4153,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.layers.layers.legacy_fully_connected"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.LegacyFullyConnectedTest.test_regularizer_with_variable_reuse.test_fn": {
  "data": {
   "lineno": 4156
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.LegacyFullyConnectedTest.test_relu_layer_basic_use": {
  "data": {
   "lineno": 4018,
   "symbols_in_volume": [
    "len",
    "numpy.all",
    "tensorflow.python.client.session.Session",
    "tensorflow.python.framework.errors_impl.FailedPreconditionError",
    "tensorflow.python.framework.ops.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.python.framework.ops.GraphKeys.TRAINABLE_VARIABLES",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.legacy_relu"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.LegacyFullyConnectedTest.test_shapes_variable_first_dim": {
  "data": {
   "lineno": 4183,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.layers.legacy_fully_connected"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.LegacyFullyConnectedTest.test_unknown_dim_invalid_input": {
  "data": {
   "lineno": 4214,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.LegacyFullyConnectedTest.test_variable_reuse_with_scope": {
  "data": {
   "lineno": 4036,
   "symbols_in_volume": [
    "numpy.allclose",
    "tensorflow.python.client.session.Session",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.legacy_relu"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.LegacyFullyConnectedTest.test_variable_reuse_with_template": {
  "data": {
   "lineno": 4051,
   "symbols_in_volume": [
    "tensorflow.python.client.session.Session",
    "tensorflow.python.ops.template.make_template",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.layers.legacy_fully_connected",
    "tmpl1"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.MaxOutTest": {
  "data": {
   "lineno": 4227,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.layers_test.MaxOutTest.test_fully_connected": {
  "data": {
   "lineno": 4234,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.fully_connected",
    "tf_slim.layers.layers.maxout"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.MaxOutTest.test_invalid_shape": {
  "data": {
   "lineno": 4246,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.conv2d",
    "tf_slim.layers.layers.maxout"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.MaxOutTest.test_nchw": {
  "data": {
   "lineno": 4240,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.conv2d",
    "tf_slim.layers.layers.maxout"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.MaxOutTest.test_simple": {
  "data": {
   "lineno": 4229,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.maxout"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.MaxPool2DTest": {
  "data": {
   "lineno": 3063,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.layers_test.MaxPool2DTest.testCollectOutputs": {
  "data": {
   "lineno": 3085,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.max_pool2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.MaxPool2DTest.testCreateMaxPool": {
  "data": {
   "lineno": 3072,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.random.uniform",
    "tf_slim.layers.layers.max_pool2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.MaxPool2DTest.testCreateMaxPoolNCHW": {
  "data": {
   "lineno": 3079,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.random.uniform",
    "tf_slim.layers.layers.max_pool2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.MaxPool2DTest.testCreateMaxPoolStrideWithSamePadding": {
  "data": {
   "lineno": 3119,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.max_pool2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.MaxPool2DTest.testCreateMaxPoolWithSamePadding": {
  "data": {
   "lineno": 3106,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.max_pool2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.MaxPool2DTest.testCreateMaxPoolWithSamePaddingNCHW": {
  "data": {
   "lineno": 3112,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.max_pool2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.MaxPool2DTest.testCreateMaxPoolWithScope": {
  "data": {
   "lineno": 3100,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.max_pool2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.MaxPool2DTest.testCreateSquareMaxPool": {
  "data": {
   "lineno": 3093,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.max_pool2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.MaxPool2DTest.testGlobalMaxPool": {
  "data": {
   "lineno": 3125,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.max_pool2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.MaxPool2DTest.testInvalidDataFormat": {
  "data": {
   "lineno": 3065,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.uniform",
    "tf_slim.layers.layers.max_pool2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.MaxPool3DTest": {
  "data": {
   "lineno": 3132,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.layers_test.MaxPool3DTest.testCollectOutputs": {
  "data": {
   "lineno": 3157,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.max_pool3d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.MaxPool3DTest.testCreateMaxPool": {
  "data": {
   "lineno": 3141,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.random.uniform",
    "tf_slim.layers.layers.max_pool3d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.MaxPool3DTest.testCreateMaxPoolNCDHW": {
  "data": {
   "lineno": 3149,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.random.uniform",
    "tf_slim.layers.layers.max_pool3d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.MaxPool3DTest.testCreateMaxPoolStrideWithSamePadding": {
  "data": {
   "lineno": 3192,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.max_pool3d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.MaxPool3DTest.testCreateMaxPoolWithSamePadding": {
  "data": {
   "lineno": 3179,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.max_pool3d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.MaxPool3DTest.testCreateMaxPoolWithSamePaddingNCDHW": {
  "data": {
   "lineno": 3185,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.max_pool3d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.MaxPool3DTest.testCreateMaxPoolWithScope": {
  "data": {
   "lineno": 3173,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.max_pool3d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.MaxPool3DTest.testCreateSquareMaxPool": {
  "data": {
   "lineno": 3166,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.max_pool3d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.MaxPool3DTest.testGlobalMaxPool": {
  "data": {
   "lineno": 3199,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.max_pool3d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.MaxPool3DTest.testInvalidDataFormat": {
  "data": {
   "lineno": 3134,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.uniform",
    "tf_slim.layers.layers.max_pool3d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.OneHotEncodingTest": {
  "data": {
   "lineno": 3206,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.layers_test.OneHotEncodingTest.testCollectOutputs": {
  "data": {
   "lineno": 3215,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.get_collection",
    "tf_slim.layers.layers.one_hot_encoding"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.OneHotEncodingTest.testOneHotEncoding": {
  "data": {
   "lineno": 3224,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.layers.layers.one_hot_encoding"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.OneHotEncodingTest.testOneHotEncodingCreate": {
  "data": {
   "lineno": 3208,
   "symbols_in_volume": [
    "numpy.array",
    "tf_slim.layers.layers.one_hot_encoding"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.OneHotEncodingTest.testOneHotEncodingInt32": {
  "data": {
   "lineno": 3231,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.int32",
    "tf_slim.layers.layers.one_hot_encoding"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.PartialFlattenTest": {
  "data": {
   "lineno": 1559,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.layers_test.PartialFlattenTest.testDenseFlattenRankAssertion": {
  "data": {
   "lineno": 1623,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.layers.layers._inner_flatten"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.PartialFlattenTest.testDensePartialFlatten": {
  "data": {
   "lineno": 1561,
   "symbols_in_volume": [
    "numpy.prod",
    "numpy.random.randint",
    "numpy.random.seed",
    "numpy.reshape",
    "numpy.testing.assert_array_equal",
    "tf_slim.layers.layers._inner_flatten"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.PartialFlattenTest.testIncompleteShape": {
  "data": {
   "lineno": 1602,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.layers.layers._inner_flatten"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.PartialFlattenTest.testSparseFlattenRankAssertion": {
  "data": {
   "lineno": 1634,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.rand",
    "numpy.random.seed",
    "tensorflow.python.framework.sparse_tensor.SparseTensor",
    "tf_slim.layers.layers._inner_flatten",
    "tf_slim.layers.layers_test._sparsify"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.PartialFlattenTest.testSparsePartialFlatten": {
  "data": {
   "lineno": 1579,
   "symbols_in_volume": [
    "numpy.prod",
    "numpy.random.rand",
    "numpy.random.seed",
    "numpy.reshape",
    "numpy.testing.assert_array_equal",
    "tensorflow.python.framework.sparse_tensor.SparseTensor",
    "tf_slim.layers.layers._inner_flatten",
    "tf_slim.layers.layers_test._sparsify"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.PoincareNormalizeTest": {
  "data": {
   "lineno": 3912,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.layers_test.PoincareNormalizeTest._PoincareNormalize": {
  "data": {
   "lineno": 3914,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.apply_along_axis",
    "numpy.expand_dims",
    "numpy.linalg.norm",
    "numpy.where",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.PoincareNormalizeTest.testPoincareNormalize": {
  "data": {
   "lineno": 3925,
   "symbols_in_volume": [
    "len",
    "numpy.float32",
    "numpy.linalg.norm",
    "numpy.random.random_sample",
    "numpy.random.seed",
    "range",
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.layers.layers.poincare_normalize"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.PoincareNormalizeTest.testPoincareNormalizeDimArray": {
  "data": {
   "lineno": 3943,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.linalg.norm",
    "numpy.random.random_sample",
    "numpy.random.seed",
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.layers.layers.poincare_normalize",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.PoincareNormalizeTest.testPoincareNormalizeGradient": {
  "data": {
   "lineno": 3961,
   "symbols_in_volume": [
    "len",
    "numpy.float64",
    "numpy.random.random_sample",
    "numpy.random.seed",
    "print",
    "range",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.gradient_checker.compute_gradient_error",
    "tf_slim.layers.layers.poincare_normalize"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.PoolTest": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.layers_test.PoolTest.testAvgPoolWithDilation": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.pool"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.PoolTest.testAvgPoolWithDilationNCHW": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.pool"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.PoolTest.testAvgPoolWithStride": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.pool"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.PoolTest.testCollectOutputs": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.pool"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.PoolTest.testCreateAvgPoolStrideWithSamePadding": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.pool"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.PoolTest.testCreateMaxPoolWithSamePadding": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.pool"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.PoolTest.testCreateMaxPoolWithScope": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.pool"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.PoolTest.testCreatePool": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "numpy.random.uniform",
    "tf_slim.layers.layers.pool"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.PoolTest.testCreatePoolNCHW": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "numpy.random.uniform",
    "tf_slim.layers.layers.pool"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.PoolTest.testCreateSquareAvgPool": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.pool"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.PoolTest.testGlobalAvgPool": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.pool"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.RepeatTests": {
  "data": {
   "lineno": 3239,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.layers_test.RepeatTests.testRepeat": {
  "data": {
   "lineno": 3241,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.random.uniform",
    "tf_slim.layers.conv2d",
    "tf_slim.layers.layers.repeat"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.RepeatTests.testRepeatWithScope": {
  "data": {
   "lineno": 3249,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.conv2d",
    "tf_slim.layers.layers.repeat"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.ScaleGradientTests": {
  "data": {
   "lineno": 3515,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.layers_test.ScaleGradientTests.testBasic": {
  "data": {
   "lineno": 3518,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "numpy.testing.assert_array_equal",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.gradients_impl.gradients",
    "tf_slim.layers.scale_gradient"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.SeparableConv2dTest": {
  "data": {
   "lineno": 3260,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.layers_test.SeparableConv2dTest.testConvWithBatchNorm": {
  "data": {
   "lineno": 3434,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.get_variables",
    "tf_slim.layers.layers.batch_norm",
    "tf_slim.layers.separable_conv2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.SeparableConv2dTest.testConvWithInputsViaPlaceHolder": {
  "data": {
   "lineno": 3464,
   "symbols_in_volume": [
    "numpy.random.rand",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.layers.batch_norm",
    "tf_slim.layers.separable_conv2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.SeparableConv2dTest.testCreateAtrousConvCreatesWeightsAndBiasesVars": {
  "data": {
   "lineno": 3299,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.get_variables",
    "tf_slim.layers.separable_conv2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.SeparableConv2dTest.testCreateAtrousConvValid": {
  "data": {
   "lineno": 3346,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.separable_conv2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.SeparableConv2dTest.testCreateAtrousDepthwiseConvValid": {
  "data": {
   "lineno": 3362,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.separable_conv2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.SeparableConv2dTest.testCreateConvCreatesWeightsAndBiasesVars": {
  "data": {
   "lineno": 3287,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.get_variables",
    "tf_slim.layers.separable_conv2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.SeparableConv2dTest.testCreateConvFloat32": {
  "data": {
   "lineno": 3270,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.separable_conv2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.SeparableConv2dTest.testCreateConvInt32": {
  "data": {
   "lineno": 3262,
   "symbols_in_volume": [
    "TypeError",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.separable_conv2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.SeparableConv2dTest.testCreateConvValid": {
  "data": {
   "lineno": 3338,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.separable_conv2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.SeparableConv2dTest.testCreateConvWithScope": {
  "data": {
   "lineno": 3323,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.separable_conv2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.SeparableConv2dTest.testCreateConvWithWeightDecay": {
  "data": {
   "lineno": 3370,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.framework.ops.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.ops.init_ops.ones_initializer",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.regularizers.l2_regularizer",
    "tf_slim.layers.separable_conv2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.SeparableConv2dTest.testCreateConvWithoutActivation": {
  "data": {
   "lineno": 3330,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.separable_conv2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.SeparableConv2dTest.testCreateDepthwiseConv": {
  "data": {
   "lineno": 3279,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.separable_conv2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.SeparableConv2dTest.testCreateDepthwiseConvCreatesWeightsAndBiasesVars": {
  "data": {
   "lineno": 3311,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.get_variables",
    "tf_slim.layers.separable_conv2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.SeparableConv2dTest.testCreateDepthwiseConvValid": {
  "data": {
   "lineno": 3354,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.separable_conv2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.SeparableConv2dTest.testReuseConvWithWeightDecay": {
  "data": {
   "lineno": 3415,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.framework.ops.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.regularizers.l2_regularizer",
    "tf_slim.layers.separable_conv2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.SeparableConv2dTest.testSepConvNCHW": {
  "data": {
   "lineno": 3495,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.separable_conv2d",
    "zip"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.SeparableConv2dTest.testTrainableFlagIsPassedOn": {
  "data": {
   "lineno": 3481,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.get_model_variables",
    "tensorflow.python.ops.variables.trainable_variables",
    "tf_slim.layers.separable_conv2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.SequenceToImagesTest": {
  "data": {
   "lineno": 3531,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.layers_test.SequenceToImagesTest.testImagesToSequenceDims": {
  "data": {
   "lineno": 3533,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.random.uniform",
    "tf_slim.layers.layers.sequence_to_images"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.SequenceToImagesTest.testImagesToSequenceNCHW": {
  "data": {
   "lineno": 3544,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.random.uniform",
    "tf_slim.layers.layers.sequence_to_images"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.SoftmaxTests": {
  "data": {
   "lineno": 3558,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.layers_test.SoftmaxTests.setUp": {
  "data": {
   "lineno": 3560,
   "symbols_in_volume": [
    "super",
    "tf_slim.layers.layers_test.SoftmaxTests",
    "tf_slim.layers.layers_test.math"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.SoftmaxTests.testSoftmax2D": {
  "data": {
   "lineno": 3565,
   "symbols_in_volume": [
    "numpy.array",
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.layers.layers.softmax"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.SoftmaxTests.testSoftmax3D": {
  "data": {
   "lineno": 3575,
   "symbols_in_volume": [
    "numpy.ones",
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.layers.layers.softmax"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.SoftmaxTests.testSoftmax3DUnknownSize": {
  "data": {
   "lineno": 3591,
   "symbols_in_volume": [
    "numpy.ones",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.layers.layers.softmax"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.SoftmaxTests.testSoftmaxUndefinedNthDimension": {
  "data": {
   "lineno": 3609,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.layers.layers.softmax"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.SpatialSoftmaxTests": {
  "data": {
   "lineno": 3615,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.layers_test.SpatialSoftmaxTests._SpatialSoftmax": {
  "data": {
   "lineno": 3617,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.concatenate",
    "numpy.expand_dims",
    "numpy.linspace",
    "numpy.reshape",
    "range"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.SpatialSoftmaxTests.testMaxActivationsAtEdges": {
  "data": {
   "lineno": 3677,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.zeros",
    "range",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.layers.spatial_softmax",
    "zip"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.SpatialSoftmaxTests.testSpatialSoftmax": {
  "data": {
   "lineno": 3737,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.zeros",
    "range",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.layers.spatial_softmax"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.SpatialSoftmaxTests.testSpatialSoftmaxNCHW": {
  "data": {
   "lineno": 3760,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.zeros",
    "range",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.layers.spatial_softmax"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.SpatialSoftmaxTests.testSpatialSoftmaxShape": {
  "data": {
   "lineno": 3628,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.zeros",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.layers.spatial_softmax"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.SpatialSoftmaxTests.testSpatialSoftmaxShapeNCHW": {
  "data": {
   "lineno": 3639,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.zeros",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.layers.spatial_softmax"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.SpatialSoftmaxTests.testSpatialSoftmaxToFullyConnected": {
  "data": {
   "lineno": 3783,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.zeros",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.layers.fully_connected",
    "tf_slim.layers.layers.spatial_softmax"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.SpatialSoftmaxTests.testSpatialSoftmaxVariableSized": {
  "data": {
   "lineno": 3701,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.zeros",
    "range",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.layers.spatial_softmax"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.SpatialSoftmaxTests.testTwoMaxActivationsSameChannel": {
  "data": {
   "lineno": 3650,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.zeros",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.layers.spatial_softmax"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.StackTests": {
  "data": {
   "lineno": 3795,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.layers_test.StackTests.testStackConvolution2d": {
  "data": {
   "lineno": 3831,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.convolution2d",
    "tf_slim.layers.layers.stack"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.StackTests.testStackElu": {
  "data": {
   "lineno": 3822,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.elu",
    "tf_slim.layers.layers.stack"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.StackTests.testStackFullyConnected": {
  "data": {
   "lineno": 3797,
   "symbols_in_volume": [
    "numpy.random.uniform",
    "tf_slim.layers.layers.fully_connected",
    "tf_slim.layers.layers.stack"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.StackTests.testStackFullyConnectedFailOnReuse": {
  "data": {
   "lineno": 3805,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.uniform",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.layers.layers.fully_connected",
    "tf_slim.layers.layers.stack"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.StackTests.testStackRelu": {
  "data": {
   "lineno": 3813,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.stack",
    "tf_slim.layers.relu"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.StackTests.testStackWithScope": {
  "data": {
   "lineno": 3844,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.convolution2d",
    "tf_slim.layers.layers.stack"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.UnitNormTests": {
  "data": {
   "lineno": 3859,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.layers_test.UnitNormTests.testDimEqualToRankRaisesError": {
  "data": {
   "lineno": 3879,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.unit_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.UnitNormTests.testKnownRankUnknownDimsSucceeds": {
  "data": {
   "lineno": 3893,
   "symbols_in_volume": [
    "numpy.ones",
    "range",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.sqrt",
    "tensorflow.python.ops.math_ops.square",
    "tf_slim.layers.layers.unit_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.UnitNormTests.testUnitNormWithRandomMatrix": {
  "data": {
   "lineno": 3861,
   "symbols_in_volume": [
    "numpy.ones",
    "range",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.sqrt",
    "tensorflow.python.ops.math_ops.square",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.layers.unit_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.UnitNormTests.testUnknownRankRaisesError": {
  "data": {
   "lineno": 3888,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.layers.layers.unit_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test._layers": {
  "data": {
   "shadows": "tf_slim.layers.layers"
  },
  "type": "import"
 },
 "tf_slim.layers.layers_test._sparsify": {
  "data": {
   "lineno": 1550,
   "symbols_in_volume": [
    "numpy.vstack",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.layers.layers_test.arg_scope": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "tf_slim.layers.layers_test.arg_scope_lib": {
  "data": {
   "shadows": "tf_slim.ops.arg_scope"
  },
  "type": "import"
 },
 "tf_slim.layers.layers_test.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tf_slim.layers.layers_test.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tf_slim.layers.layers_test.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tf_slim.layers.layers_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.layers.layers_test.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tf_slim.layers.layers_test.errors_impl": {
  "data": {
   "shadows": "tensorflow.python.framework.errors_impl"
  },
  "type": "import"
 },
 "tf_slim.layers.layers_test.gradient_checker": {
  "data": {
   "shadows": "tensorflow.python.ops.gradient_checker"
  },
  "type": "import"
 },
 "tf_slim.layers.layers_test.gradients_impl": {
  "data": {
   "shadows": "tensorflow.python.ops.gradients_impl"
  },
  "type": "import"
 },
 "tf_slim.layers.layers_test.init_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.init_ops"
  },
  "type": "import"
 },
 "tf_slim.layers.layers_test.layers_lib": {
  "data": {
   "shadows": "tf_slim.layers"
  },
  "type": "import"
 },
 "tf_slim.layers.layers_test.losses": {
  "data": {
   "shadows": "tensorflow.compat.v1.losses"
  },
  "type": "import"
 },
 "tf_slim.layers.layers_test.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "tf_slim.layers.layers_test.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tf_slim.layers.layers_test.nn_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.nn_ops"
  },
  "type": "import"
 },
 "tf_slim.layers.layers_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tf_slim.layers.layers_test.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tf_slim.layers.layers_test.partitioned_variables": {
  "data": {
   "shadows": "tensorflow.python.ops.partitioned_variables"
  },
  "type": "import"
 },
 "tf_slim.layers.layers_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.layers.layers_test.random_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.random_ops"
  },
  "type": "import"
 },
 "tf_slim.layers.layers_test.random_seed": {
  "data": {
   "shadows": "tensorflow.python.framework.random_seed"
  },
  "type": "import"
 },
 "tf_slim.layers.layers_test.regularizers": {
  "data": {
   "shadows": "tf_slim.layers.regularizers"
  },
  "type": "import"
 },
 "tf_slim.layers.layers_test.session": {
  "data": {
   "shadows": "tensorflow.python.client.session"
  },
  "type": "import"
 },
 "tf_slim.layers.layers_test.setUpModule": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "tensorflow.compat.v1.disable_eager_execution"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.layers_test.sparse_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.sparse_ops"
  },
  "type": "import"
 },
 "tf_slim.layers.layers_test.sparse_tensor": {
  "data": {
   "shadows": "tensorflow.python.framework.sparse_tensor"
  },
  "type": "import"
 },
 "tf_slim.layers.layers_test.state_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.state_ops"
  },
  "type": "import"
 },
 "tf_slim.layers.layers_test.template": {
  "data": {
   "shadows": "tensorflow.python.ops.template"
  },
  "type": "import"
 },
 "tf_slim.layers.layers_test.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tf_slim.layers.layers_test.test": {
  "data": {
   "shadows": "tensorflow.python.platform.test"
  },
  "type": "import"
 },
 "tf_slim.layers.layers_test.tf": {
  "data": {
   "shadows": "tensorflow.compat.v1"
  },
  "type": "import"
 },
 "tf_slim.layers.layers_test.variable_scope": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tf_slim.layers.layers_test.variables": {
  "data": {
   "shadows": "tf_slim.ops.variables"
  },
  "type": "import"
 },
 "tf_slim.layers.layers_test.variables_lib": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tf_slim.layers.normalization": {
  "data": {},
  "type": "module"
 },
 "tf_slim.layers.normalization.DATA_FORMAT_NCHW": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "tf_slim.layers.normalization.DATA_FORMAT_NHWC": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "tf_slim.layers.normalization.__all__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "tf_slim.layers.normalization.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.layers.normalization.add_arg_scope": {
  "data": {
   "shadows": "tf_slim.ops.arg_scope.add_arg_scope"
  },
  "type": "import"
 },
 "tf_slim.layers.normalization.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tf_slim.layers.normalization.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.layers.normalization.group_norm": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "ValueError",
    "activation_fn",
    "enumerate",
    "len",
    "list",
    "range",
    "tensorflow.compat.v1.dimension_value",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.init_ops.ones_initializer",
    "tensorflow.python.ops.init_ops.zeros_initializer",
    "tensorflow.python.ops.math_ops.rsqrt",
    "tensorflow.python.ops.nn.moments",
    "tensorflow.python.ops.nn.normalize_moments",
    "tensorflow.python.ops.nn.sufficient_statistics",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.layers.utils.collect_named_outputs",
    "tf_slim.layers.utils.get_variable_collections",
    "tf_slim.ops.arg_scope.add_arg_scope",
    "tf_slim.ops.variables.model_variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.normalization.init_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.init_ops"
  },
  "type": "import"
 },
 "tf_slim.layers.normalization.instance_norm": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ValueError",
    "activation_fn",
    "list",
    "range",
    "tensorflow.compat.v1.dimension_value",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.init_ops.ones_initializer",
    "tensorflow.python.ops.init_ops.zeros_initializer",
    "tensorflow.python.ops.nn.batch_normalization",
    "tensorflow.python.ops.nn.moments",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.layers.normalization.DATA_FORMAT_NCHW",
    "tf_slim.layers.normalization.DATA_FORMAT_NHWC",
    "tf_slim.layers.utils.collect_named_outputs",
    "tf_slim.layers.utils.get_variable_collections",
    "tf_slim.ops.arg_scope.add_arg_scope",
    "tf_slim.ops.variables.model_variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.normalization.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tf_slim.layers.normalization.nn": {
  "data": {
   "shadows": "tensorflow.python.ops.nn"
  },
  "type": "import"
 },
 "tf_slim.layers.normalization.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tf_slim.layers.normalization.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.layers.normalization.tf": {
  "data": {
   "shadows": "tensorflow.compat.v1"
  },
  "type": "import"
 },
 "tf_slim.layers.normalization.utils": {
  "data": {
   "shadows": "tf_slim.layers.utils"
  },
  "type": "import"
 },
 "tf_slim.layers.normalization.variable_scope": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tf_slim.layers.normalization.variables": {
  "data": {
   "shadows": "tf_slim.ops.variables"
  },
  "type": "import"
 },
 "tf_slim.layers.normalization_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.test.main"
   ]
  },
  "type": "module"
 },
 "tf_slim.layers.normalization_test.GroupNormTest": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.normalization_test.GroupNormTest.doOutputTest": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.isnan",
    "numpy.mean",
    "numpy.ones",
    "numpy.reshape",
    "numpy.var",
    "numpy.zeros",
    "tensorflow.python.ops.random_ops.random_normal",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.normalization.group_norm",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.normalization_test.GroupNormTest.doOutputTestForMeanCloseToZero": {
  "data": {
   "lineno": 384
  },
  "type": "function"
 },
 "tf_slim.layers.normalization_test.GroupNormTest.testAxisIsBad": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.layers.normalization.group_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.normalization_test.GroupNormTest.testBadCommensurateGroup": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.layers.normalization.group_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.normalization_test.GroupNormTest.testCreateOp": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "print",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.normalization.group_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.normalization_test.GroupNormTest.testCreateOpFloat64": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float64",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.normalization.group_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.normalization_test.GroupNormTest.testCreateOpNoScaleCenter": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.normalization.group_norm",
    "tf_slim.ops.variables.get_variables_by_name"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.normalization_test.GroupNormTest.testCreateVariables_NCHW": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.normalization.group_norm",
    "tf_slim.ops.variables.get_variables_by_name"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.normalization_test.GroupNormTest.testCreateVariables_NHWC": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.normalization.group_norm",
    "tf_slim.ops.variables.get_variables_by_name"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.normalization_test.GroupNormTest.testInvalidGroupSize": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.layers.normalization.group_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.normalization_test.GroupNormTest.testNotMutuallyExclusiveAxis": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.layers.normalization.group_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.normalization_test.GroupNormTest.testOutputBigInput4D_NCHW": {
  "data": {
   "lineno": 456
  },
  "type": "function"
 },
 "tf_slim.layers.normalization_test.GroupNormTest.testOutputBigInput4D_NHWC": {
  "data": {
   "lineno": 450
  },
  "type": "function"
 },
 "tf_slim.layers.normalization_test.GroupNormTest.testOutputSmallInput2D_NC": {
  "data": {
   "lineno": 462
  },
  "type": "function"
 },
 "tf_slim.layers.normalization_test.GroupNormTest.testOutputSmallInput3D_NCHW": {
  "data": {
   "lineno": 437
  },
  "type": "function"
 },
 "tf_slim.layers.normalization_test.GroupNormTest.testOutputSmallInput3D_NHWC": {
  "data": {
   "lineno": 411
  },
  "type": "function"
 },
 "tf_slim.layers.normalization_test.GroupNormTest.testOutputSmallInput4D_NCHW": {
  "data": {
   "lineno": 424
  },
  "type": "function"
 },
 "tf_slim.layers.normalization_test.GroupNormTest.testOutputSmallInput4D_NHWC": {
  "data": {
   "lineno": 398
  },
  "type": "function"
 },
 "tf_slim.layers.normalization_test.GroupNormTest.testOutputSmallInput5D_NCXXX": {
  "data": {
   "lineno": 468
  },
  "type": "function"
 },
 "tf_slim.layers.normalization_test.GroupNormTest.testParamsShapeNotFullyDefinedBatchAxis": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.layers.normalization.group_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.normalization_test.GroupNormTest.testParamsShapeNotFullyDefinedChannelsAxis": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.layers.normalization.group_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.normalization_test.GroupNormTest.testParamsShapeNotFullyDefinedReductionAxes": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.layers.normalization.group_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.normalization_test.GroupNormTest.testReuseVariables": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.normalization.group_norm",
    "tf_slim.ops.variables.get_variables_by_name"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.normalization_test.GroupNormTest.testUnknownShape": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.layers.normalization.group_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.normalization_test.GroupNormTest.testValueCorrectWithReuseVars": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.normalization.group_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.normalization_test.InstanceNormTest": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.normalization_test.InstanceNormTest.doOutputTest": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.isnan",
    "numpy.mean",
    "numpy.ones",
    "numpy.var",
    "numpy.zeros",
    "range",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.normalization.instance_norm",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.normalization_test.InstanceNormTest.testBadDataFormat": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.layers.normalization.instance_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.normalization_test.InstanceNormTest.testCreateOp": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "print",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.normalization.instance_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.normalization_test.InstanceNormTest.testCreateOpFloat64": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float64",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.normalization.instance_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.normalization_test.InstanceNormTest.testCreateOpNoScaleCenter": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.framework.dtypes.float64",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.normalization.instance_norm",
    "tf_slim.ops.variables.get_variables_by_name"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.normalization_test.InstanceNormTest.testCreateVariables": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.normalization.instance_norm",
    "tf_slim.ops.variables.get_variables_by_name"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.normalization_test.InstanceNormTest.testOutputBigInput4DNCHW": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "tf_slim.layers.normalization_test.InstanceNormTest.testOutputBigInput4DNHWC": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "tf_slim.layers.normalization_test.InstanceNormTest.testOutputBigInput5DNCHW": {
  "data": {
   "lineno": 175
  },
  "type": "function"
 },
 "tf_slim.layers.normalization_test.InstanceNormTest.testOutputBigInput5DNHWC": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "tf_slim.layers.normalization_test.InstanceNormTest.testOutputSmallInput4DNCHW": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "tf_slim.layers.normalization_test.InstanceNormTest.testOutputSmallInput4DNHWC": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "tf_slim.layers.normalization_test.InstanceNormTest.testOutputSmallInput5DNCHW": {
  "data": {
   "lineno": 169
  },
  "type": "function"
 },
 "tf_slim.layers.normalization_test.InstanceNormTest.testOutputSmallInput5DNHWC": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "tf_slim.layers.normalization_test.InstanceNormTest.testParamsShapeNotFullyDefinedNCHW": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.layers.normalization.instance_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.normalization_test.InstanceNormTest.testParamsShapeNotFullyDefinedNHWC": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.layers.normalization.instance_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.normalization_test.InstanceNormTest.testReuseVariables": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.layers.normalization.instance_norm",
    "tf_slim.ops.variables.get_variables_by_name"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.normalization_test.InstanceNormTest.testUnknownShape": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.layers.normalization.instance_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.normalization_test.InstanceNormTest.testValueCorrectWithReuseVars": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.normalization.instance_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.normalization_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.layers.normalization_test.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tf_slim.layers.normalization_test.contrib_variables": {
  "data": {
   "shadows": "tf_slim.ops.variables"
  },
  "type": "import"
 },
 "tf_slim.layers.normalization_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.layers.normalization_test.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tf_slim.layers.normalization_test.normalization": {
  "data": {
   "shadows": "tf_slim.layers.normalization"
  },
  "type": "import"
 },
 "tf_slim.layers.normalization_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tf_slim.layers.normalization_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.layers.normalization_test.random_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.random_ops"
  },
  "type": "import"
 },
 "tf_slim.layers.normalization_test.setUpModule": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "tensorflow.compat.v1.disable_eager_execution"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.normalization_test.test": {
  "data": {
   "shadows": "tensorflow.python.platform.test"
  },
  "type": "import"
 },
 "tf_slim.layers.normalization_test.tf": {
  "data": {
   "shadows": "tensorflow.compat.v1"
  },
  "type": "import"
 },
 "tf_slim.layers.normalization_test.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tf_slim.layers.optimizers": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.training.training.AdagradOptimizer",
    "tensorflow.python.training.training.AdamOptimizer",
    "tensorflow.python.training.training.FtrlOptimizer",
    "tensorflow.python.training.training.GradientDescentOptimizer",
    "tensorflow.python.training.training.MomentumOptimizer",
    "tensorflow.python.training.training.RMSPropOptimizer"
   ]
  },
  "type": "module"
 },
 "tf_slim.layers.optimizers.OPTIMIZER_CLS_NAMES": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "tf_slim.layers.optimizers.OPTIMIZER_SUMMARIES": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "tf_slim.layers.optimizers._adaptive_max_norm": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "moving_average",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.exp",
    "tensorflow.python.ops.math_ops.log",
    "tensorflow.python.ops.math_ops.maximum",
    "tensorflow.python.ops.math_ops.minimum",
    "tensorflow.python.ops.math_ops.sqrt",
    "tensorflow.python.ops.math_ops.square",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.optimizers._adaptive_max_norm.moving_average": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "tensorflow.python.ops.init_ops.zeros_initializer",
    "tensorflow.python.ops.variable_scope.get_variable",
    "tensorflow.python.training.moving_averages.assign_moving_average"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.optimizers._add_scaled_noise_to_gradients": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.ops.random_ops.truncated_normal",
    "tensorflow.python.ops.variables",
    "zip"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.optimizers._clip_gradients_by_norm": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "clip_gradients",
    "list",
    "tensorflow.python.ops.clip_ops.clip_by_global_norm",
    "tensorflow.python.ops.variables",
    "zip"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.optimizers._multiply_gradients": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.ops.math_ops.cast"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.optimizers.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.layers.optimizers.adaptive_clipping_fn": {
  "data": {
   "lineno": 341
  },
  "type": "function"
 },
 "tf_slim.layers.optimizers.adaptive_clipping_fn.gradient_clipping": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.ops.array_ops.ones_like",
    "tensorflow.python.ops.array_ops.where",
    "tensorflow.python.ops.clip_ops.global_norm",
    "tensorflow.python.ops.math_ops.exp",
    "tensorflow.python.ops.math_ops.minimum",
    "tensorflow.python.ops.variables",
    "tensorflow.python.summary.summary.scalar",
    "tf_slim.layers.optimizers._adaptive_max_norm",
    "zip"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.optimizers.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tf_slim.layers.optimizers.check_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.check_ops"
  },
  "type": "import"
 },
 "tf_slim.layers.optimizers.clip_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.clip_ops"
  },
  "type": "import"
 },
 "tf_slim.layers.optimizers.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tf_slim.layers.optimizers.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.layers.optimizers.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tf_slim.layers.optimizers.init_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.init_ops"
  },
  "type": "import"
 },
 "tf_slim.layers.optimizers.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tf_slim.layers.optimizers.moving_averages": {
  "data": {
   "shadows": "tensorflow.python.training.moving_averages"
  },
  "type": "import"
 },
 "tf_slim.layers.optimizers.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tf_slim.layers.optimizers.optimize_loss": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "clip_gradients",
    "float",
    "isinstance",
    "issubclass",
    "learning_rate_decay_fn",
    "list",
    "set",
    "str",
    "tensorflow.python.framework.ops.GraphKeys.UPDATE_OPS",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.check_ops.assert_scalar",
    "tensorflow.python.ops.clip_ops.global_norm",
    "tensorflow.python.ops.control_flow_ops.with_dependencies",
    "tensorflow.python.ops.init_ops.constant_initializer",
    "tensorflow.python.ops.variable_scope.get_variable",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tensorflow.python.ops.variables",
    "tensorflow.python.ops.variables.trainable_variables",
    "tensorflow.python.summary.summary.histogram",
    "tensorflow.python.summary.summary.scalar",
    "tensorflow.python.training.optimizer",
    "tensorflow.python.training.optimizer.Optimizer",
    "tensorflow.python.training.training.assert_global_step",
    "tensorflow.python.training.training.get_global_step",
    "tf_slim.layers.optimizers.OPTIMIZER_CLS_NAMES",
    "tf_slim.layers.optimizers.OPTIMIZER_SUMMARIES",
    "tf_slim.layers.optimizers._add_scaled_noise_to_gradients",
    "tf_slim.layers.optimizers._clip_gradients_by_norm",
    "tf_slim.layers.optimizers._multiply_gradients",
    "tf_slim.layers.optimizers.six",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.optimizers.optimizer_": {
  "data": {
   "shadows": "tensorflow.python.training.optimizer"
  },
  "type": "import"
 },
 "tf_slim.layers.optimizers.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.layers.optimizers.random_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.random_ops"
  },
  "type": "import"
 },
 "tf_slim.layers.optimizers.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tf_slim.layers.optimizers.summary": {
  "data": {
   "shadows": "tensorflow.python.summary.summary"
  },
  "type": "import"
 },
 "tf_slim.layers.optimizers.train": {
  "data": {
   "shadows": "tensorflow.python.training.training"
  },
  "type": "import"
 },
 "tf_slim.layers.optimizers.vars_": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tf_slim.layers.optimizers.vs": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tf_slim.layers.optimizers_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.test.main"
   ]
  },
  "type": "module"
 },
 "tf_slim.layers.optimizers_test.AdaptiveClipping": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.optimizers_test.AdaptiveClipping.testAverages": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.log",
    "numpy.sqrt",
    "range",
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.variables.global_variables",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.optimizers.adaptive_clipping_fn"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.optimizers_test.AdaptiveClipping.testClip": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "numpy.ones",
    "range",
    "run",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.optimizers.adaptive_clipping_fn"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.optimizers_test.AdaptiveClipping.testClip.run": {
  "data": {
   "lineno": 529
  },
  "type": "function"
 },
 "tf_slim.layers.optimizers_test.OptimizersTest": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.optimizers_test.OptimizersTest.testAdaptiveGradientClip": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "tensorflow.python.ops.variables.global_variables",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.optimizers.adaptive_clipping_fn",
    "tf_slim.layers.optimizers.optimize_loss",
    "tf_slim.layers.optimizers_test._setup_model"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.optimizers_test.OptimizersTest.testBadSummaries": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.ops.Graph",
    "tf_slim.layers.optimizers.optimize_loss",
    "tf_slim.layers.optimizers_test._setup_model"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.optimizers_test.OptimizersTest.testGradientClip": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.optimizers.optimize_loss",
    "tf_slim.layers.optimizers_test._setup_model"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.optimizers_test.OptimizersTest.testGradientMultiply": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.optimizers.optimize_loss",
    "tf_slim.layers.optimizers_test._setup_model"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.optimizers_test.OptimizersTest.testGradientMultiplyInt32Tensor": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.optimizers.optimize_loss",
    "tf_slim.layers.optimizers_test._setup_model"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.optimizers_test.OptimizersTest.testGradientMultiplyInt64Tensor": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float64",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.optimizers.optimize_loss",
    "tf_slim.layers.optimizers_test._setup_model"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.optimizers_test.OptimizersTest.testGradientNoise": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.optimizers.optimize_loss",
    "tf_slim.layers.optimizers_test._setup_model",
    "tf_slim.layers.optimizers_test.disable_resource_variables"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.optimizers_test.OptimizersTest.testGradientNoiseWithClipping": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.optimizers.optimize_loss",
    "tf_slim.layers.optimizers_test._setup_model",
    "tf_slim.layers.optimizers_test.disable_resource_variables"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.optimizers_test.OptimizersTest.testIgnoreVariablesWithNoGradients": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "tensorflow.python.ops.variable_scope.get_variable",
    "tf_slim.layers.optimizers.optimize_loss",
    "tf_slim.layers.optimizers_test._setup_model"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.optimizers_test.OptimizersTest.testInvalidGlobalStep": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "ValueError",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.float64",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.init_ops.constant_initializer",
    "tensorflow.python.ops.math_ops.abs",
    "tensorflow.python.ops.variable_scope.get_variable",
    "tf_slim.layers.optimizers.optimize_loss"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.optimizers_test.OptimizersTest.testInvalidLearningRate": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.ops.Graph",
    "tf_slim.layers.optimizers.optimize_loss",
    "tf_slim.layers.optimizers_test._setup_model"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.optimizers_test.OptimizersTest.testInvalidLoss": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.ops.Graph",
    "tf_slim.layers.optimizers.optimize_loss",
    "tf_slim.layers.optimizers_test._setup_model"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.optimizers_test.OptimizersTest.testNoGlobalStep": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.init_ops.constant_initializer",
    "tensorflow.python.ops.math_ops.abs",
    "tensorflow.python.ops.state_ops.assign",
    "tensorflow.python.ops.variable_scope.get_variable",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tensorflow.python.training.gradient_descent.GradientDescentOptimizer",
    "tf_slim.layers.optimizers",
    "tf_slim.layers.optimizers.optimize_loss"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.optimizers_test.OptimizersTest.testNoGlobalStepArg": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.ops.init_ops.constant_initializer",
    "tensorflow.python.ops.state_ops.assign",
    "tensorflow.python.ops.variable_scope.get_variable",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tensorflow.python.training.gradient_descent.GradientDescentOptimizer",
    "tf_slim.layers.optimizers",
    "tf_slim.layers.optimizers.optimize_loss",
    "tf_slim.layers.optimizers_test._setup_model"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.optimizers_test.OptimizersTest.testNoGlobalStepWithDecay": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.init_ops.constant_initializer",
    "tensorflow.python.ops.math_ops.abs",
    "tensorflow.python.ops.state_ops.assign",
    "tensorflow.python.ops.variable_scope.get_variable",
    "tensorflow.python.training.gradient_descent.GradientDescentOptimizer",
    "tf_slim.layers.optimizers",
    "tf_slim.layers.optimizers.optimize_loss",
    "tf_slim.layers.optimizers_test._no_op_learning_rate_decay_fn"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.optimizers_test.OptimizersTest.testNoLrCallable": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.optimizers.optimize_loss",
    "tf_slim.layers.optimizers_test._setup_model"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.optimizers_test.OptimizersTest.testNoLrCallable.optimizer_fn": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "tensorflow.python.training.gradient_descent.GradientDescentOptimizer"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.optimizers_test.OptimizersTest.testSGDOptimizer": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tensorflow.python.training.gradient_descent.GradientDescentOptimizer",
    "tf_slim.layers.optimizers",
    "tf_slim.layers.optimizers.optimize_loss",
    "tf_slim.layers.optimizers_test._setup_model"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.optimizers_test.OptimizersTest.testUpdateOp": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.ops.init_ops.constant_initializer",
    "tensorflow.python.ops.state_ops.assign",
    "tensorflow.python.ops.variable_scope.get_variable",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tensorflow.python.training.gradient_descent.GradientDescentOptimizer",
    "tf_slim.layers.optimizers",
    "tf_slim.layers.optimizers.optimize_loss",
    "tf_slim.layers.optimizers_test._setup_model"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.optimizers_test.OptimizersTest.testUpdateOpFromCollection": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.ops.GraphKeys.UPDATE_OPS",
    "tensorflow.python.framework.ops.add_to_collection",
    "tensorflow.python.ops.init_ops.constant_initializer",
    "tensorflow.python.ops.state_ops.assign",
    "tensorflow.python.ops.variable_scope.get_variable",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tensorflow.python.training.gradient_descent.GradientDescentOptimizer",
    "tf_slim.layers.optimizers",
    "tf_slim.layers.optimizers.optimize_loss",
    "tf_slim.layers.optimizers_test._setup_model"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.optimizers_test.OptimizersTest.testUpdateOpNoIncrementGlobalStep": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.ops.init_ops.constant_initializer",
    "tensorflow.python.ops.state_ops.assign",
    "tensorflow.python.ops.variable_scope.get_variable",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tensorflow.python.training.gradient_descent.GradientDescentOptimizer",
    "tf_slim.layers.optimizers",
    "tf_slim.layers.optimizers.optimize_loss",
    "tf_slim.layers.optimizers_test._setup_model"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.optimizers_test.OptimizersTest.testUpdateOpWithNoOpDecay": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.ops.init_ops.constant_initializer",
    "tensorflow.python.ops.state_ops.assign",
    "tensorflow.python.ops.variable_scope.get_variable",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tensorflow.python.training.gradient_descent.GradientDescentOptimizer",
    "tf_slim.layers.optimizers",
    "tf_slim.layers.optimizers.optimize_loss",
    "tf_slim.layers.optimizers_test._no_op_learning_rate_decay_fn",
    "tf_slim.layers.optimizers_test._setup_model"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.optimizers_test.OptimizersTest.testWrongOptimizer": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "ValueError",
    "object",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.ops.variables.Variable",
    "tf_slim.layers.optimizers",
    "tf_slim.layers.optimizers.optimize_loss",
    "tf_slim.layers.optimizers_test._setup_model"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.optimizers_test._no_op_learning_rate_decay_fn": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "tf_slim.layers.optimizers_test._setup_model": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "tensorflow.compat.v1.train.create_global_step",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.init_ops.constant_initializer",
    "tensorflow.python.ops.math_ops.abs",
    "tensorflow.python.ops.variable_scope.get_variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.optimizers_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.layers.optimizers_test.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tf_slim.layers.optimizers_test.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tf_slim.layers.optimizers_test.disable_resource_variables": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "tf_slim.layers.optimizers_test.disable_resource_variables.wrapper": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "f",
    "tensorflow.python.ops.variable_scope.disable_resource_variables",
    "tensorflow.python.ops.variable_scope.enable_resource_variables"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.optimizers_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.layers.optimizers_test.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tf_slim.layers.optimizers_test.gradient_descent": {
  "data": {
   "shadows": "tensorflow.python.training.gradient_descent"
  },
  "type": "import"
 },
 "tf_slim.layers.optimizers_test.init_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.init_ops"
  },
  "type": "import"
 },
 "tf_slim.layers.optimizers_test.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tf_slim.layers.optimizers_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tf_slim.layers.optimizers_test.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tf_slim.layers.optimizers_test.optimizers_lib": {
  "data": {
   "shadows": "tf_slim.layers.optimizers"
  },
  "type": "import"
 },
 "tf_slim.layers.optimizers_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.layers.optimizers_test.random_seed": {
  "data": {
   "shadows": "tensorflow.python.framework.random_seed"
  },
  "type": "import"
 },
 "tf_slim.layers.optimizers_test.setUpModule": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "tensorflow.compat.v1.disable_eager_execution"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.optimizers_test.state_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.state_ops"
  },
  "type": "import"
 },
 "tf_slim.layers.optimizers_test.test": {
  "data": {
   "shadows": "tensorflow.python.platform.test"
  },
  "type": "import"
 },
 "tf_slim.layers.optimizers_test.tf": {
  "data": {
   "shadows": "tensorflow.compat.v1"
  },
  "type": "import"
 },
 "tf_slim.layers.optimizers_test.variable_scope": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tf_slim.layers.optimizers_test.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tf_slim.layers.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.layers.regularizers": {
  "data": {},
  "type": "module"
 },
 "tf_slim.layers.regularizers.__all__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "tf_slim.layers.regularizers.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.layers.regularizers.apply_regularization": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "ValueError",
    "regularizer",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.python.framework.ops.GraphKeys.WEIGHTS",
    "tensorflow.python.framework.ops.add_to_collection",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.add_n"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.regularizers.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tf_slim.layers.regularizers.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.layers.regularizers.l1_l2_regularizer": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "tf_slim.layers.regularizers.l1_regularizer",
    "tf_slim.layers.regularizers.l2_regularizer",
    "tf_slim.layers.regularizers.numbers",
    "tf_slim.layers.regularizers.sum_regularizer"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.regularizers.l1_regularizer": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "tensorflow.python.platform.tf_logging.info",
    "tf_slim.layers.regularizers.numbers"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.regularizers.l1_regularizer.l1": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.standard_ops.abs",
    "tensorflow.python.ops.standard_ops.multiply",
    "tensorflow.python.ops.standard_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.regularizers.l2_regularizer": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "tensorflow.python.platform.tf_logging.info",
    "tf_slim.layers.regularizers.numbers"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.regularizers.l2_regularizer.l2": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.nn.l2_loss",
    "tensorflow.python.ops.standard_ops.multiply"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.regularizers.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tf_slim.layers.regularizers.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tf_slim.layers.regularizers.nn": {
  "data": {
   "shadows": "tensorflow.python.ops.nn"
  },
  "type": "import"
 },
 "tf_slim.layers.regularizers.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "tf_slim.layers.regularizers.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tf_slim.layers.regularizers.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.layers.regularizers.standard_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.standard_ops"
  },
  "type": "import"
 },
 "tf_slim.layers.regularizers.sum_regularizer": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "tf_slim.layers.regularizers.sum_regularizer.sum_reg": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "reg",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.add_n"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.regularizers_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.test.main"
   ]
  },
  "type": "module"
 },
 "tf_slim.layers.regularizers_test.RegularizerTest": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.regularizers_test.RegularizerTest.testL1L2RegularizerWithScope": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.name_scope",
    "tf_slim.layers.regularizers.l1_l2_regularizer"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.regularizers_test.RegularizerTest.test_apply_regularization": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "sum",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tf_slim.layers.regularizers.apply_regularization"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.regularizers_test.RegularizerTest.test_apply_regularization_invalid_regularizer": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.array_ops.tile",
    "tf_slim.layers.regularizers.apply_regularization"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.regularizers_test.RegularizerTest.test_apply_zero_regularization": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.layers.regularizers.apply_regularization",
    "tf_slim.layers.regularizers.l2_regularizer"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.regularizers_test.RegularizerTest.test_l1": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ValueError",
    "numpy.abs",
    "numpy.array",
    "tensorflow.python.client.session.Session",
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.layers.regularizers.l1_regularizer"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.regularizers_test.RegularizerTest.test_l1_l2": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.layers.regularizers.l1_l2_regularizer"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.regularizers_test.RegularizerTest.test_l1_l2_scale_l1Zero": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.layers.regularizers.l1_l2_regularizer"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.regularizers_test.RegularizerTest.test_l1_l2_scale_l2Zero": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.layers.regularizers.l1_l2_regularizer"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.regularizers_test.RegularizerTest.test_l1_l2_scales_Zero": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.layers.regularizers.l1_l2_regularizer"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.regularizers_test.RegularizerTest.test_l2": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.power",
    "tensorflow.python.client.session.Session",
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.layers.regularizers.l2_regularizer"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.regularizers_test.RegularizerTest.test_sum_regularizer": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "l1_l2_reg",
    "l1_reg1",
    "l1_reg2",
    "l1_reg3",
    "numpy.abs",
    "numpy.array",
    "numpy.power",
    "tensorflow.python.client.session.Session",
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.layers.regularizers.l1_regularizer",
    "tf_slim.layers.regularizers.l2_regularizer",
    "tf_slim.layers.regularizers.sum_regularizer"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.regularizers_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.layers.regularizers_test.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tf_slim.layers.regularizers_test.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tf_slim.layers.regularizers_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.layers.regularizers_test.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tf_slim.layers.regularizers_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tf_slim.layers.regularizers_test.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tf_slim.layers.regularizers_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.layers.regularizers_test.regularizers": {
  "data": {
   "shadows": "tf_slim.layers.regularizers"
  },
  "type": "import"
 },
 "tf_slim.layers.regularizers_test.session": {
  "data": {
   "shadows": "tensorflow.python.client.session"
  },
  "type": "import"
 },
 "tf_slim.layers.regularizers_test.setUpModule": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "tensorflow.compat.v1.disable_eager_execution"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.regularizers_test.test": {
  "data": {
   "shadows": "tensorflow.python.platform.test"
  },
  "type": "import"
 },
 "tf_slim.layers.regularizers_test.tf": {
  "data": {
   "shadows": "tensorflow.compat.v1"
  },
  "type": "import"
 },
 "tf_slim.layers.rev_block_lib": {
  "data": {
   "symbols_in_volume": [
    "tf_slim.layers.rev_block_lib.re"
   ]
  },
  "type": "module"
 },
 "tf_slim.layers.rev_block_lib.LAYER_RE": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "tf_slim.layers.rev_block_lib.RevBlock": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "tensorflow.python.layers.base.Layer"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.rev_block_lib.RevBlock.__init__": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "enumerate",
    "f",
    "fn",
    "g",
    "isinstance",
    "len",
    "list",
    "super",
    "tf_slim.layers.rev_block_lib.RevBlock",
    "tf_slim.layers.rev_block_lib._scope_wrap"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib.RevBlock._backward": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "f",
    "f.reverse",
    "g",
    "g.reverse",
    "list",
    "six.moves.xrange"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib.RevBlock._forward": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "_forward_with_custom_grad",
    "_forward_wrap",
    "tensorflow.python.util.nest.flatten"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib.RevBlock._forward._forward_with_custom_grad": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "_forward_wrap",
    "tensorflow.python.ops.custom_gradient.custom_gradient"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib.RevBlock._forward._forward_wrap": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "tensorflow.python.util.nest.pack_sequence_as",
    "tf_slim.layers.rev_block_lib._rev_block_forward"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib.RevBlock._make_efficient_grad_fn": {
  "data": {
   "lineno": 252
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib.RevBlock._make_efficient_grad_fn._efficient_grad_fn": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "enumerate",
    "f",
    "f.reverse",
    "g",
    "g.reverse",
    "int",
    "len",
    "list",
    "range",
    "six.moves.xrange",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tensorflow.python.ops.variables",
    "tf_slim.layers.rev_block_lib.LAYER_RE",
    "tf_slim.layers.rev_block_lib._acc_grads",
    "tf_slim.layers.rev_block_lib._rev_layer_backward",
    "zip"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib.RevBlock.backward": {
  "data": {
   "lineno": 244
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib.RevBlock.build": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "tensorflow.python.platform.tf_logging.warn"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib.RevBlock.call": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.ops.variable_scope.get_variable_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib.RevBlock.forward": {
  "data": {
   "lineno": 241
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib._USE_DEFAULT": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "tf_slim.layers.rev_block_lib._WRONG_VARS_ERR": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "tf_slim.layers.rev_block_lib.__all__": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "tf_slim.layers.rev_block_lib._acc_grads": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.add_n",
    "zip"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib._as_ref": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib._force_data_dependency": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "ValueError",
    "_first_element",
    "numpy.finfo",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.array_ops.stop_gradient",
    "tensorflow.python.ops.math_ops.add_n"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib._force_data_dependency._first_element": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.slice"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib._gradients": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "tensorflow.python.ops.gradients_impl.gradients",
    "tensorflow.python.ops.gradients_impl.gradients_v2",
    "tensorflow.python.tf2.enabled"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib._is_on_tpu": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_default_graph",
    "tensorflow.python.ops.control_flow_util.GraphOrParentsInXlaContext"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib._recompute_grad": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "ValueError",
    "fn",
    "fn_with_recompute",
    "isinstance",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.ops.variables.Variable",
    "tensorflow.python.util.tf_inspect.getargspec",
    "tf_slim.layers.rev_block_lib._USE_DEFAULT",
    "tf_slim.layers.rev_block_lib._is_on_tpu"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib._recompute_grad.fn_with_recompute": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "fn",
    "set",
    "tensorflow.python.eager.backprop.GradientTape",
    "tensorflow.python.ops.custom_gradient.custom_gradient",
    "tensorflow.python.ops.variable_scope.get_variable_scope",
    "tf_slim.layers.rev_block_lib._as_ref",
    "tf_slim.ops.arg_scope",
    "tf_slim.ops.arg_scope.current_arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib._recompute_grad.fn_with_recompute._grad_fn": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "ValueError",
    "fn",
    "set",
    "tensorflow.python.ops.variables",
    "tf_slim.layers.rev_block_lib._WRONG_VARS_ERR",
    "tf_slim.layers.rev_block_lib._as_ref",
    "tf_slim.layers.rev_block_lib._recomputing_grad_fn",
    "tf_slim.ops.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib._recompute_grad.fn_with_recompute.grad_fn": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "_grad_fn"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib._recomputing_grad_fn": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "ValueError",
    "compute_fn",
    "g",
    "isinstance",
    "len",
    "list",
    "set",
    "tensorflow.python.eager.backprop.GradientTape",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.control_flow_ops.tuple",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tensorflow.python.ops.variables",
    "tf_slim.layers.rev_block_lib._WRONG_VARS_ERR",
    "tf_slim.layers.rev_block_lib._as_ref",
    "tf_slim.layers.rev_block_lib._force_data_dependency",
    "tf_slim.layers.rev_block_lib._gradients",
    "tf_slim.layers.rev_block_lib._tuple_with_data_dep",
    "tf_slim.ops.arg_scope",
    "tf_slim.ops.arg_scope.arg_scope",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib._rev_block_forward": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "f",
    "g",
    "six.moves.xrange",
    "tf_slim.layers.rev_block_lib._rev_layer_forward"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib._rev_layer_backward": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "f",
    "g",
    "len",
    "tensorflow.python.ops.array_ops.stop_gradient",
    "tensorflow.python.ops.control_flow_ops.tuple",
    "tensorflow.python.util.nest.flatten",
    "tensorflow.python.util.nest.pack_sequence_as",
    "tf_slim.layers.rev_block_lib._acc_grads",
    "tf_slim.layers.rev_block_lib._gradients"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib._rev_layer_forward": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "f",
    "g",
    "tensorflow.python.ops.control_flow_ops.tuple"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib._safe_wraps": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "isinstance",
    "tf_slim.layers.rev_block_lib.functools"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib._safe_wraps.passthrough": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "f"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib._scope_wrap": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib._scope_wrap.wrap": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "fn",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.layers.rev_block_lib._safe_wraps"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib._tuple_with_data_dep": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "tf_slim.layers.rev_block_lib._force_data_dependency"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib._underlying_variable_ref": {
  "data": {
   "lineno": 657
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.layers.rev_block_lib.arg_scope_lib": {
  "data": {
   "shadows": "tf_slim.ops.arg_scope"
  },
  "type": "import"
 },
 "tf_slim.layers.rev_block_lib.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tf_slim.layers.rev_block_lib.backprop": {
  "data": {
   "shadows": "tensorflow.python.eager.backprop"
  },
  "type": "import"
 },
 "tf_slim.layers.rev_block_lib.base": {
  "data": {
   "shadows": "tensorflow.python.layers.base"
  },
  "type": "import"
 },
 "tf_slim.layers.rev_block_lib.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tf_slim.layers.rev_block_lib.control_flow_util": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_util"
  },
  "type": "import"
 },
 "tf_slim.layers.rev_block_lib.custom_gradient": {
  "data": {
   "shadows": "tensorflow.python.ops.custom_gradient"
  },
  "type": "import"
 },
 "tf_slim.layers.rev_block_lib.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.layers.rev_block_lib.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tf_slim.layers.rev_block_lib.enable_with_args": {
  "data": {
   "lineno": 449
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib.enable_with_args.new_dec": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "callable",
    "dec",
    "fn",
    "len",
    "tf_slim.layers.rev_block_lib._safe_wraps"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib.framework_ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tf_slim.layers.rev_block_lib.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "tf_slim.layers.rev_block_lib.gradients_impl": {
  "data": {
   "shadows": "tensorflow.python.ops.gradients_impl"
  },
  "type": "import"
 },
 "tf_slim.layers.rev_block_lib.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tf_slim.layers.rev_block_lib.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tf_slim.layers.rev_block_lib.nest": {
  "data": {
   "shadows": "tensorflow.python.util.nest"
  },
  "type": "import"
 },
 "tf_slim.layers.rev_block_lib.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tf_slim.layers.rev_block_lib.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.layers.rev_block_lib.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "tf_slim.layers.rev_block_lib.recompute_grad": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "fn.__closure__",
    "fn.__code__.co_freevars",
    "isinstance",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.ops.variables.Variable",
    "tf_slim.layers.rev_block_lib._USE_DEFAULT",
    "tf_slim.layers.rev_block_lib.enable_with_args",
    "tf_slim.layers.rev_block_lib.six",
    "zip"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib.recompute_grad.wrapped": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "fn",
    "tf_slim.layers.rev_block_lib._recompute_grad",
    "tf_slim.layers.rev_block_lib._safe_wraps"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib.rev_block": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "f",
    "g",
    "tensorflow.python.ops.variable_scope.get_variable_scope",
    "tf_slim.layers.rev_block_lib.RevBlock"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "tf_slim.layers.rev_block_lib.tf2": {
  "data": {
   "shadows": "tensorflow.python.tf2"
  },
  "type": "import"
 },
 "tf_slim.layers.rev_block_lib.tf_inspect": {
  "data": {
   "shadows": "tensorflow.python.util.tf_inspect"
  },
  "type": "import"
 },
 "tf_slim.layers.rev_block_lib.variable_scope": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tf_slim.layers.rev_block_lib.variables_lib": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tf_slim.layers.rev_block_lib.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "tf_slim.layers.rev_block_lib_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.test.main"
   ]
  },
  "type": "module"
 },
 "tf_slim.layers.rev_block_lib_test.RecomputeTest": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.rev_block_lib_test.RecomputeTest.testDoubleCallInSameScopeFails": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "ValueError",
    "layer_with_recompute",
    "len",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.gradients_impl.gradients",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tensorflow.python.ops.variables.trainable_variables"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib_test.RecomputeTest.testDoubleCallInSameScopeFails.layer_with_recompute": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "tensorflow.python.layers.core.dense",
    "tf_slim.layers.rev_block_lib.recompute_grad"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib_test.RecomputeTest.testDoubleCallInUniqueScope": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "layer_with_recompute",
    "len",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.gradients_impl.gradients",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tensorflow.python.ops.variables.trainable_variables"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib_test.RecomputeTest.testDoubleCallInUniqueScope.layer_with_recompute": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "tensorflow.python.layers.core.dense",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.layers.rev_block_lib.recompute_grad"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib_test.RecomputeTest.testErrorOnClosedOverTensor": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.ops.random_ops.random_uniform"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib_test.RecomputeTest.testErrorOnClosedOverTensor.fn_with_capture": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "tf_slim.layers.rev_block_lib.recompute_grad"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib_test.RecomputeTest.testRecompute": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "fn",
    "list",
    "tensorflow.python.ops.gradients_impl.gradients",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "wrapped_fn",
    "zip"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib_test.RecomputeTest.testRecompute.fn": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "layer",
    "range"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib_test.RecomputeTest.testRecompute.fn_both": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "fn",
    "tf_slim.layers.rev_block_lib.recompute_grad"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib_test.RecomputeTest.testRecompute.fn_recompute": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "fn",
    "tf_slim.layers.rev_block_lib.recompute_grad"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib_test.RecomputeTest.testRecompute.fn_tupleize": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "fn",
    "tf_slim.layers.rev_block_lib.recompute_grad"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib_test.RecomputeTest.testRecompute.fn_use_data_dep": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "fn",
    "tf_slim.layers.rev_block_lib.recompute_grad"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib_test.RecomputeTest.testRecompute.layer": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "tensorflow.python.layers.convolutional.conv1d",
    "tensorflow.python.ops.init_ops.constant_initializer",
    "tensorflow.python.ops.nn_ops.relu",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.layers.layers.layer_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib_test.RecomputeTest.testWithIsRecomputeKwarg": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "layer_with_recompute",
    "len",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.GraphKeys.UPDATE_OPS",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.gradients_impl.gradients",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tensorflow.python.ops.variables.trainable_variables"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib_test.RecomputeTest.testWithIsRecomputeKwarg.layer_with_recompute": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.UPDATE_OPS",
    "tensorflow.python.framework.ops.get_collection_ref",
    "tensorflow.python.layers.core.dense",
    "tensorflow.python.layers.normalization.batch_normalization",
    "tf_slim.layers.rev_block_lib.recompute_grad"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib_test.RecomputeTest.testWithoutVariables": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "concat_n_wrap",
    "range",
    "tensorflow.python.ops.gradients_impl.gradients",
    "tensorflow.python.ops.math_ops.sqrt",
    "tensorflow.python.ops.random_ops.random_uniform"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib_test.RecomputeTest.testWithoutVariables.concat_n": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib_test.RecomputeTest.testWithoutVariables.concat_n_wrap": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "concat_n",
    "tf_slim.layers.rev_block_lib.recompute_grad"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib_test.RevBlockTest": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.rev_block_lib_test.RevBlockTest._testRevBlock": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.split",
    "tensorflow.python.ops.gradients_impl.gradients",
    "tensorflow.python.ops.math_ops.reduce_mean",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tensorflow.python.ops.variables.global_variables",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.rev_block_lib.rev_block",
    "zip"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib_test.RevBlockTest._testRevBlock.f": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "tensorflow.python.layers.core.dense"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib_test.RevBlockTest._testRevBlock.g": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "tensorflow.python.layers.core.dense"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib_test.RevBlockTest.testBackwardForward": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.split",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.rev_block_lib.RevBlock"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib_test.RevBlockTest.testBackwardForward.f": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "tensorflow.python.layers.core.dense"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib_test.RevBlockTest.testBackwardForward.g": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "tensorflow.python.layers.core.dense"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib_test.RevBlockTest.testConvAndBatchNorm": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.random_ops.random_uniform"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib_test.RevBlockTest.testConvAndBatchNorm.f": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "tensorflow.python.layers.convolutional.conv1d",
    "tf_slim.layers.layers.batch_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib_test.RevBlockTest.testForwardBackward": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.split",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.rev_block_lib.RevBlock"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib_test.RevBlockTest.testForwardBackward.f": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "tensorflow.python.layers.core.dense"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib_test.RevBlockTest.testForwardBackward.g": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "tensorflow.python.layers.core.dense"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib_test.RevBlockTest.testMultipleFns": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib_test.RevBlockTest.testMultipleFns.f1": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "tensorflow.python.layers.core.dense"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib_test.RevBlockTest.testMultipleFns.f2": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "tensorflow.python.layers.core.dense",
    "tensorflow.python.ops.nn_ops.relu"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib_test.RevBlockTest.testReuse": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.split",
    "tensorflow.python.ops.gradients_impl.gradients",
    "tensorflow.python.ops.math_ops.reduce_mean",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tensorflow.python.ops.variables.global_variables",
    "tensorflow.python.ops.variables.trainable_variables",
    "tf_slim.layers.rev_block_lib.rev_block"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib_test.RevBlockTest.testReuse.f": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "tensorflow.python.layers.core.dense"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib_test.RevBlockTest.testReuse.g": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "tensorflow.python.layers.core.dense"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib_test.RevBlockTest.testRevBlock": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib_test.RevBlockTest.testSideInput": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib_test.RevBlockTest.testSideInput.f": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "tensorflow.python.layers.core.dense"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.layers.rev_block_lib_test.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tf_slim.layers.rev_block_lib_test.convolutional": {
  "data": {
   "shadows": "tensorflow.python.layers.convolutional"
  },
  "type": "import"
 },
 "tf_slim.layers.rev_block_lib_test.core_layers": {
  "data": {
   "shadows": "tensorflow.python.layers.core"
  },
  "type": "import"
 },
 "tf_slim.layers.rev_block_lib_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.layers.rev_block_lib_test.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tf_slim.layers.rev_block_lib_test.gradients_impl": {
  "data": {
   "shadows": "tensorflow.python.ops.gradients_impl"
  },
  "type": "import"
 },
 "tf_slim.layers.rev_block_lib_test.init_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.init_ops"
  },
  "type": "import"
 },
 "tf_slim.layers.rev_block_lib_test.layers": {
  "data": {
   "shadows": "tf_slim.layers.layers"
  },
  "type": "import"
 },
 "tf_slim.layers.rev_block_lib_test.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tf_slim.layers.rev_block_lib_test.nn_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.nn_ops"
  },
  "type": "import"
 },
 "tf_slim.layers.rev_block_lib_test.normalization_layers": {
  "data": {
   "shadows": "tensorflow.python.layers.normalization"
  },
  "type": "import"
 },
 "tf_slim.layers.rev_block_lib_test.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tf_slim.layers.rev_block_lib_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.layers.rev_block_lib_test.random_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.random_ops"
  },
  "type": "import"
 },
 "tf_slim.layers.rev_block_lib_test.random_seed": {
  "data": {
   "shadows": "tensorflow.python.framework.random_seed"
  },
  "type": "import"
 },
 "tf_slim.layers.rev_block_lib_test.rev_block_lib": {
  "data": {
   "shadows": "tf_slim.layers.rev_block_lib"
  },
  "type": "import"
 },
 "tf_slim.layers.rev_block_lib_test.setUpModule": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "tensorflow.compat.v1.disable_eager_execution"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.rev_block_lib_test.test": {
  "data": {
   "shadows": "tensorflow.python.platform.test"
  },
  "type": "import"
 },
 "tf_slim.layers.rev_block_lib_test.tf": {
  "data": {
   "shadows": "tensorflow.compat.v1"
  },
  "type": "import"
 },
 "tf_slim.layers.rev_block_lib_test.variable_scope": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tf_slim.layers.rev_block_lib_test.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tf_slim.layers.sparse_ops": {
  "data": {},
  "type": "module"
 },
 "tf_slim.layers.sparse_ops._ignore_value_tensor": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.string",
    "tensorflow.python.ops.math_ops.cast"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.sparse_ops._multiplier_helper": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "reversed"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.sparse_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.layers.sparse_ops.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tf_slim.layers.sparse_ops.compat": {
  "data": {
   "shadows": "tensorflow.python.util.compat"
  },
  "type": "import"
 },
 "tf_slim.layers.sparse_ops.dense_to_sparse_tensor": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.framework.sparse_tensor.SparseTensor",
    "tensorflow.python.ops.array_ops.gather_nd",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.where",
    "tensorflow.python.ops.math_ops.not_equal",
    "tf_slim.layers.sparse_ops._ignore_value_tensor"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.sparse_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.layers.sparse_ops.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tf_slim.layers.sparse_ops.indicators_to_sparse_ids": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.framework.sparse_tensor.SparseTensor",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.ones_like",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.where",
    "tensorflow.python.ops.array_ops.zeros_like",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.cumsum",
    "tensorflow.python.ops.math_ops.equal",
    "tensorflow.python.ops.math_ops.reduce_max",
    "tf_slim.layers.sparse_ops._ignore_value_tensor",
    "tf_slim.layers.sparse_ops.dense_to_sparse_tensor"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.sparse_ops.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tf_slim.layers.sparse_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tf_slim.layers.sparse_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.layers.sparse_ops.sparse_row_envelope": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.where",
    "tensorflow.python.ops.array_ops.zeros_like",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.unsorted_segment_max",
    "tensorflow.python.util.compat.integral_types"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.sparse_ops.sparse_tensor": {
  "data": {
   "shadows": "tensorflow.python.framework.sparse_tensor"
  },
  "type": "import"
 },
 "tf_slim.layers.sparse_ops_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.test.main"
   ]
  },
  "type": "module"
 },
 "tf_slim.layers.sparse_ops_test.DenseToSparseTensorTest": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.sparse_ops_test.DenseToSparseTensorTest.test_dense_to_sparse_tensor_1d": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.int32",
    "numpy.int64",
    "tf_slim.layers.sparse_ops.dense_to_sparse_tensor"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.sparse_ops_test.DenseToSparseTensorTest.test_dense_to_sparse_tensor_1d_bool": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "numpy.bool",
    "numpy.int64",
    "tf_slim.layers.sparse_ops.dense_to_sparse_tensor"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.sparse_ops_test.DenseToSparseTensorTest.test_dense_to_sparse_tensor_1d_float": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.int64",
    "tf_slim.layers.sparse_ops.dense_to_sparse_tensor"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.sparse_ops_test.DenseToSparseTensorTest.test_dense_to_sparse_tensor_1d_str": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "numpy.int64",
    "numpy.object",
    "tf_slim.layers.sparse_ops.dense_to_sparse_tensor"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.sparse_ops_test.DenseToSparseTensorTest.test_dense_to_sparse_tensor_1d_str_special_ignore": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "numpy.int64",
    "numpy.object",
    "tf_slim.layers.sparse_ops.dense_to_sparse_tensor"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.sparse_ops_test.DenseToSparseTensorTest.test_dense_to_sparse_tensor_2d": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "tf_slim.layers.sparse_ops.dense_to_sparse_tensor"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.sparse_ops_test.DenseToSparseTensorTest.test_dense_to_sparse_tensor_3d": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "tf_slim.layers.sparse_ops.dense_to_sparse_tensor"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.sparse_ops_test.DenseToSparseTensorTest.test_dense_to_sparse_tensor_unknown_1d_shape": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.layers.sparse_ops.dense_to_sparse_tensor"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.sparse_ops_test.DenseToSparseTensorTest.test_dense_to_sparse_tensor_unknown_3d_shape": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.layers.sparse_ops.dense_to_sparse_tensor"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.sparse_ops_test.DenseToSparseTensorTest.test_dense_to_sparse_unknown_rank": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.layers.sparse_ops.dense_to_sparse_tensor"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.sparse_ops_test.IndicatorToSparseIdsTest": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.sparse_ops_test.IndicatorToSparseIdsTest.test_indicators_to_sparse_ids_1d": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "tensorflow.python.framework.sparse_tensor.SparseTensorValue",
    "tf_slim.layers.sparse_ops.indicators_to_sparse_ids",
    "tf_slim.layers.sparse_ops_test._assert_sparse_tensor_value"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.sparse_ops_test.IndicatorToSparseIdsTest.test_indicators_to_sparse_ids_2d": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "tensorflow.python.framework.sparse_tensor.SparseTensorValue",
    "tf_slim.layers.sparse_ops.indicators_to_sparse_ids",
    "tf_slim.layers.sparse_ops_test._assert_sparse_tensor_value"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.sparse_ops_test.IndicatorToSparseIdsTest.test_indicators_to_sparse_ids_3d": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "tensorflow.python.framework.sparse_tensor.SparseTensorValue",
    "tf_slim.layers.sparse_ops.indicators_to_sparse_ids",
    "tf_slim.layers.sparse_ops_test._assert_sparse_tensor_value"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.sparse_ops_test.IndicatorToSparseIdsTest.test_indicators_to_sparse_ids_ignore_value": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "tensorflow.python.framework.sparse_tensor.SparseTensorValue",
    "tf_slim.layers.sparse_ops.indicators_to_sparse_ids",
    "tf_slim.layers.sparse_ops_test._assert_sparse_tensor_value"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.sparse_ops_test.IndicatorToSparseIdsTest.test_indicators_to_sparse_ids_unknown_3d_shape": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.sparse_tensor.SparseTensorValue",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.layers.sparse_ops.indicators_to_sparse_ids",
    "tf_slim.layers.sparse_ops_test._assert_sparse_tensor_value"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.sparse_ops_test.IndicatorToSparseIdsTest.test_indicators_to_sparse_ids_unknown_rank": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.sparse_tensor.SparseTensorValue",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.layers.sparse_ops.indicators_to_sparse_ids",
    "tf_slim.layers.sparse_ops_test._assert_sparse_tensor_value"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.sparse_ops_test.IndicatorToSparseIdsTest.test_int16_to_sparse_ids_2d": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int16",
    "tensorflow.python.framework.dtypes.int16",
    "tensorflow.python.framework.sparse_tensor.SparseTensorValue",
    "tf_slim.layers.sparse_ops.indicators_to_sparse_ids",
    "tf_slim.layers.sparse_ops_test._assert_sparse_tensor_value"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.sparse_ops_test.IndicatorToSparseIdsTest.test_string_indicators_to_sparse_ids": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "tensorflow.python.framework.sparse_tensor.SparseTensorValue",
    "tf_slim.layers.sparse_ops.indicators_to_sparse_ids",
    "tf_slim.layers.sparse_ops_test._assert_sparse_tensor_value"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.sparse_ops_test.IndicatorToSparseIdsTest.test_string_indicators_to_sparse_ids_ignore_value": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "tensorflow.python.framework.sparse_tensor.SparseTensorValue",
    "tf_slim.layers.sparse_ops.indicators_to_sparse_ids",
    "tf_slim.layers.sparse_ops_test._assert_sparse_tensor_value"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.sparse_ops_test.SparseRowEnvelopeTest": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.sparse_ops_test.SparseRowEnvelopeTest.test_sparse_row_envelope": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "tensorflow.python.framework.sparse_tensor.SparseTensor",
    "tf_slim.layers.sparse_ops.sparse_row_envelope"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.sparse_ops_test.SparseRowEnvelopeTest.test_sparse_row_envelope_empty_3d": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "tensorflow.python.framework.sparse_tensor.SparseTensor",
    "tf_slim.layers.sparse_ops.sparse_row_envelope"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.sparse_ops_test.SparseRowEnvelopeTest.test_sparse_row_envelope_empty_in_the_end": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "tensorflow.python.framework.sparse_tensor.SparseTensor",
    "tf_slim.layers.sparse_ops.sparse_row_envelope"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.sparse_ops_test.SparseRowEnvelopeTest.test_sparse_row_envelope_unsorted_indices": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "tensorflow.python.framework.sparse_tensor.SparseTensor",
    "tf_slim.layers.sparse_ops.sparse_row_envelope"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.sparse_ops_test._assert_sparse_tensor_value": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.sparse_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.layers.sparse_ops_test.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tf_slim.layers.sparse_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.layers.sparse_ops_test.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tf_slim.layers.sparse_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tf_slim.layers.sparse_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.layers.sparse_ops_test.setUpModule": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "tensorflow.compat.v1.disable_eager_execution"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.sparse_ops_test.sparse_ops": {
  "data": {
   "shadows": "tf_slim.layers.sparse_ops"
  },
  "type": "import"
 },
 "tf_slim.layers.sparse_ops_test.sparse_tensor": {
  "data": {
   "shadows": "tensorflow.python.framework.sparse_tensor"
  },
  "type": "import"
 },
 "tf_slim.layers.sparse_ops_test.test": {
  "data": {
   "shadows": "tensorflow.python.platform.test"
  },
  "type": "import"
 },
 "tf_slim.layers.sparse_ops_test.tf": {
  "data": {
   "shadows": "tensorflow.compat.v1"
  },
  "type": "import"
 },
 "tf_slim.layers.summaries": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.BIASES",
    "tensorflow.python.framework.ops.GraphKeys.GLOBAL_VARIABLES",
    "tensorflow.python.framework.ops.GraphKeys.WEIGHTS",
    "tf_slim.layers.summaries.functools",
    "tf_slim.layers.summaries.summarize_collection"
   ]
  },
  "type": "module"
 },
 "tf_slim.layers.summaries.__all__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "tf_slim.layers.summaries._add_histogram_summary": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "tensorflow.python.summary.summary.histogram"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.summaries._add_scalar_summary": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "tensorflow.python.summary.summary.scalar"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.summaries.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.layers.summaries.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.layers.summaries.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tf_slim.layers.summaries.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "tf_slim.layers.summaries.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tf_slim.layers.summaries.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.layers.summaries.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "tf_slim.layers.summaries.standard_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.standard_ops"
  },
  "type": "import"
 },
 "tf_slim.layers.summaries.summarize_activation": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "tensorflow.python.ops.standard_ops.cast",
    "tensorflow.python.ops.standard_ops.greater",
    "tensorflow.python.ops.standard_ops.less",
    "tensorflow.python.ops.standard_ops.reduce_mean",
    "tensorflow.python.ops.standard_ops.to_float",
    "tf_slim.layers.summaries._add_histogram_summary",
    "tf_slim.layers.summaries._add_scalar_summary"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.summaries.summarize_activations": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "summarizer",
    "tensorflow.python.framework.ops.GraphKeys.ACTIVATIONS",
    "tf_slim.layers.summaries.summarize_activation",
    "tf_slim.layers.summaries.summarize_collection"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.summaries.summarize_biases": {
  "data": {
   "lineno": 157
  },
  "type": "constant"
 },
 "tf_slim.layers.summaries.summarize_collection": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "summarizer",
    "tensorflow.python.framework.ops.get_collection",
    "tf_slim.layers.summaries.re",
    "tf_slim.layers.summaries.summarize_tensor",
    "tf_slim.layers.summaries.summarize_tensors"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.summaries.summarize_tensor": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.bool",
    "tensorflow.python.framework.dtypes.string",
    "tf_slim.layers.summaries._add_histogram_summary",
    "tf_slim.layers.summaries._add_scalar_summary"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.summaries.summarize_tensors": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "summarizer",
    "tf_slim.layers.summaries.summarize_tensor"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.summaries.summarize_variables": {
  "data": {
   "lineno": 151
  },
  "type": "constant"
 },
 "tf_slim.layers.summaries.summarize_weights": {
  "data": {
   "lineno": 154
  },
  "type": "constant"
 },
 "tf_slim.layers.summaries.summary": {
  "data": {
   "shadows": "tensorflow.python.summary.summary"
  },
  "type": "import"
 },
 "tf_slim.layers.summaries_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.test.main"
   ]
  },
  "type": "module"
 },
 "tf_slim.layers.summaries_test.SummariesTest": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.summaries_test.SummariesTest.test_summarize_activation": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.framework.ops.GraphKeys.SUMMARIES",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.variables.Variable",
    "tf_slim.layers.summaries.summarize_activation"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.summaries_test.SummariesTest.test_summarize_activation_relu": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.framework.ops.GraphKeys.SUMMARIES",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.nn_ops.relu",
    "tensorflow.python.ops.variables.Variable",
    "tf_slim.layers.summaries.summarize_activation"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.summaries_test.SummariesTest.test_summarize_activation_relu6": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.framework.ops.GraphKeys.SUMMARIES",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.nn_ops.relu6",
    "tensorflow.python.ops.variables.Variable",
    "tf_slim.layers.summaries.summarize_activation"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.summaries_test.SummariesTest.test_summarize_collection_regex": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.framework.ops.add_to_collection",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.variables.Variable",
    "tf_slim.layers.summaries",
    "tf_slim.layers.summaries.summarize_collection"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.summaries_test.SummariesTest.test_summarize_multidim_tensor": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "tensorflow.python.ops.variables.Variable",
    "tf_slim.layers.summaries.summarize_tensor"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.summaries_test.SummariesTest.test_summarize_scalar_tensor": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "tensorflow.python.ops.variables.Variable",
    "tf_slim.layers.summaries.summarize_tensor"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.summaries_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.layers.summaries_test.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tf_slim.layers.summaries_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.layers.summaries_test.nn_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.nn_ops"
  },
  "type": "import"
 },
 "tf_slim.layers.summaries_test.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tf_slim.layers.summaries_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.layers.summaries_test.setUpModule": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "tensorflow.compat.v1.disable_eager_execution"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.summaries_test.summaries_lib": {
  "data": {
   "shadows": "tf_slim.layers.summaries"
  },
  "type": "import"
 },
 "tf_slim.layers.summaries_test.test": {
  "data": {
   "shadows": "tensorflow.python.platform.test"
  },
  "type": "import"
 },
 "tf_slim.layers.summaries_test.tf": {
  "data": {
   "shadows": "tensorflow.compat.v1"
  },
  "type": "import"
 },
 "tf_slim.layers.summaries_test.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tf_slim.layers.utils": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "module"
 },
 "tf_slim.layers.utils.NamedOutputs": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "tf_slim.layers.utils.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "tf_slim.layers.utils.__all__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "tf_slim.layers.utils._get_dimension": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.layers.utils.append_tensor_alias": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.utils.channel_dimension": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "tf_slim.layers.utils._get_dimension"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.utils.collect_named_outputs": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.add_to_collections",
    "tf_slim.layers.utils.append_tensor_alias"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.utils.constant_value": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.framework.tensor_util.constant_value",
    "tensorflow.python.ops.variables.Variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.utils.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tf_slim.layers.utils.convert_collection_to_dict": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.framework.ops.get_default_graph",
    "tf_slim.layers.utils.get_tensor_aliases"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.layers.utils.gather_tensors_aliases": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "aliases",
    "tf_slim.layers.utils.get_tensor_aliases"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.utils.get_tensor_aliases": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "aliases",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.utils.get_variable_collections": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.utils.last_dimension": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "tf_slim.layers.utils._get_dimension"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.utils.n_positive_integers": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "int",
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.utils.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "tf_slim.layers.utils.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tf_slim.layers.utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.layers.utils.smart_cond": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "fn1",
    "fn2",
    "tensorflow.python.ops.control_flow_ops.cond",
    "tf_slim.layers.utils.constant_value",
    "tf_slim.layers.utils.static_cond"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.utils.static_cond": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "TypeError",
    "callable",
    "fn1",
    "fn2"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.utils.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tf_slim.layers.utils.tensor_util": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_util"
  },
  "type": "import"
 },
 "tf_slim.layers.utils.two_element_tuple": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "len",
    "list",
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.utils.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tf_slim.layers.utils_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.test.main"
   ]
  },
  "type": "module"
 },
 "tf_slim.layers.utils_test.CollectNamedOutputsTest": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.utils_test.CollectNamedOutputsTest.test_aliases": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.layers.utils.collect_named_outputs"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.utils_test.CollectNamedOutputsTest.test_collect": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.get_collection",
    "tf_slim.layers.utils.collect_named_outputs"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.utils_test.CollectNamedOutputsTest.test_convert_collection_to_dict": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.layers.utils.collect_named_outputs",
    "tf_slim.layers.utils.convert_collection_to_dict"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.utils_test.CollectNamedOutputsTest.test_convert_collection_to_dict_clear_collection": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.get_collection",
    "tf_slim.layers.utils.collect_named_outputs",
    "tf_slim.layers.utils.convert_collection_to_dict"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.utils_test.CollectNamedOutputsTest.test_gather_aliases": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "aliases",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.add_to_collection",
    "tensorflow.python.framework.ops.get_collection",
    "tf_slim.layers.utils.collect_named_outputs",
    "tf_slim.layers.utils.gather_tensors_aliases"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.utils_test.CollectNamedOutputsTest.test_multiple_aliases": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.layers.utils.collect_named_outputs"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.utils_test.ConstantValueTest": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.utils_test.ConstantValueTest.test_constant": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.layers.utils.constant_value"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.utils_test.ConstantValueTest.test_placeholder": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "numpy.dtype",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.layers.utils.constant_value",
    "type"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.utils_test.ConstantValueTest.test_value": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "tf_slim.layers.utils.constant_value"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.utils_test.ConstantValueTest.test_variable": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.ops.variables.Variable",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.utils.constant_value"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.utils_test.NPositiveIntegersTest": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.utils_test.NPositiveIntegersTest.test_invalid_input": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tf_slim.layers.utils.n_positive_integers"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.utils_test.NPositiveIntegersTest.test_valid_input": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tf_slim.layers.utils.n_positive_integers"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.utils_test.SmartCondDynamicTest": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.utils_test.SmartCondDynamicTest.test_constant": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "expected",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.bool",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.layers.utils.smart_cond"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.utils_test.SmartCondDynamicTest.test_tensors": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "expected",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.bool",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.layers.utils.smart_cond"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.utils_test.SmartCondDynamicTest.test_value": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "expected",
    "tensorflow.python.framework.dtypes.bool",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.layers.utils.smart_cond"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.utils_test.SmartCondDynamicTest.test_variable": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "expected",
    "tensorflow.compat.v1.Graph",
    "tensorflow.python.framework.dtypes.bool",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.variables.Variable",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.utils.smart_cond"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.utils_test.SmartCondStaticTest": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.utils_test.SmartCondStaticTest.test_constant": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "expected",
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.layers.utils.smart_cond"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.utils_test.SmartCondStaticTest.test_tensors": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "expected",
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.layers.utils.smart_cond"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.utils_test.SmartCondStaticTest.test_value": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "expected",
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.layers.utils.smart_cond"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.utils_test.SmartCondStaticTest.test_variable": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "expected",
    "tensorflow.compat.v1.Graph",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.variables.Variable",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.utils.smart_cond"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.utils_test.StaticCondTest": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.layers.utils_test.StaticCondTest.test_constant": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "expected",
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.layers.utils.static_cond"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.utils_test.StaticCondTest.test_tensors": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "expected",
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.layers.utils.static_cond"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.utils_test.StaticCondTest.test_value": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "expected",
    "tf_slim.layers.utils.static_cond"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.utils_test.StaticCondTest.test_variable": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "expected",
    "tensorflow.python.ops.variables.Variable",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.utils.static_cond"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.utils_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.layers.utils_test.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tf_slim.layers.utils_test.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tf_slim.layers.utils_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.layers.utils_test.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tf_slim.layers.utils_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tf_slim.layers.utils_test.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tf_slim.layers.utils_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.layers.utils_test.setUpModule": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "tensorflow.compat.v1.disable_eager_execution"
   ]
  },
  "type": "function"
 },
 "tf_slim.layers.utils_test.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tf_slim.layers.utils_test.test": {
  "data": {
   "shadows": "tensorflow.python.platform.test"
  },
  "type": "import"
 },
 "tf_slim.layers.utils_test.tf": {
  "data": {
   "shadows": "tensorflow.compat.v1"
  },
  "type": "import"
 },
 "tf_slim.layers.utils_test.utils": {
  "data": {
   "shadows": "tf_slim.layers.utils"
  },
  "type": "import"
 },
 "tf_slim.layers.utils_test.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tf_slim.learning": {
  "data": {
   "shadows": "tf_slim.learning"
  },
  "type": "import"
 },
 "tf_slim.learning._USE_DEFAULT": {
  "data": {
   "lineno": 522
  },
  "type": "constant"
 },
 "tf_slim.learning._USE_GLOBAL_STEP": {
  "data": {
   "lineno": 378
  },
  "type": "constant"
 },
 "tf_slim.learning.__all__": {
  "data": {
   "lineno": 281
  },
  "type": "constant"
 },
 "tf_slim.learning._wait_for_step": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "tensorflow.python.training.training_util.global_step",
    "tf_slim.learning.time"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.learning.add_gradients_summaries": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.ops.clip_ops.global_norm",
    "tensorflow.python.platform.tf_logging.info",
    "tensorflow.python.summary.summary.histogram",
    "tensorflow.python.summary.summary.scalar"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tf_slim.learning.clip_gradient_norms": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.ops.clip_ops.clip_by_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning.clip_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.clip_ops"
  },
  "type": "import"
 },
 "tf_slim.learning.config_pb2": {
  "data": {
   "shadows": "tensorflow.core.protobuf.config_pb2"
  },
  "type": "import"
 },
 "tf_slim.learning.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tf_slim.learning.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tf_slim.learning.create_train_op": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "tensorflow.python.training.optimizer",
    "tensorflow.python.training.optimizer.Optimizer.GATE_OP",
    "tf_slim.learning._USE_GLOBAL_STEP",
    "tf_slim.training.training.create_train_op"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning.create_train_op.transform_grads_fn": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope",
    "tf_slim.learning.clip_gradient_norms",
    "tf_slim.learning.multiply_gradients"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.learning.errors": {
  "data": {
   "shadows": "tensorflow.python.framework.errors"
  },
  "type": "import"
 },
 "tf_slim.learning.file_io": {
  "data": {
   "shadows": "tensorflow.python.lib.io.file_io"
  },
  "type": "import"
 },
 "tf_slim.learning.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tf_slim.learning.lookup_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.lookup_ops"
  },
  "type": "import"
 },
 "tf_slim.learning.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tf_slim.learning.multiply_gradients": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "list",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.framework.ops.Tensor"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tf_slim.learning.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tf_slim.learning.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.learning.summary": {
  "data": {
   "shadows": "tensorflow.python.summary.summary"
  },
  "type": "import"
 },
 "tf_slim.learning.supervisor": {
  "data": {
   "shadows": "tensorflow.python.training.supervisor"
  },
  "type": "import"
 },
 "tf_slim.learning.sync_replicas_optimizer": {
  "data": {
   "shadows": "tensorflow.python.training.sync_replicas_optimizer"
  },
  "type": "import"
 },
 "tf_slim.learning.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tf_slim.learning.tf_optimizer": {
  "data": {
   "shadows": "tensorflow.python.training.optimizer"
  },
  "type": "import"
 },
 "tf_slim.learning.tf_saver": {
  "data": {
   "shadows": "tensorflow.python.training.saver"
  },
  "type": "import"
 },
 "tf_slim.learning.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "tf_slim.learning.timeline": {
  "data": {
   "shadows": "tensorflow.python.client.timeline"
  },
  "type": "import"
 },
 "tf_slim.learning.train": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "min",
    "session_wrapper",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.errors.AbortedError",
    "tensorflow.python.framework.errors.OutOfRangeError",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.get_default_graph",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.control_flow_ops.group",
    "tensorflow.python.ops.lookup_ops.tables_initializer",
    "tensorflow.python.ops.math_ops.equal",
    "tensorflow.python.ops.math_ops.greater_equal",
    "tensorflow.python.ops.math_ops.mod",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tensorflow.python.ops.variables.report_uninitialized_variables",
    "tensorflow.python.platform.tf_logging.info",
    "tensorflow.python.summary.summary.merge_all",
    "tensorflow.python.training.saver",
    "tensorflow.python.training.saver.Saver",
    "tensorflow.python.training.supervisor.Supervisor",
    "tensorflow.python.training.supervisor.Supervisor.USE_DEFAULT",
    "tensorflow.python.training.sync_replicas_optimizer.SyncReplicasOptimizer",
    "tensorflow.python.training.training_util.get_or_create_global_step",
    "tf_slim.learning._USE_DEFAULT",
    "tf_slim.learning._wait_for_step",
    "tf_slim.learning.sys",
    "tf_slim.learning.train_step",
    "train_step_fn"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning.train_step": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.core.protobuf.config_pb2.RunMetadata",
    "tensorflow.core.protobuf.config_pb2.RunOptions",
    "tensorflow.core.protobuf.config_pb2.RunOptions.FULL_TRACE",
    "tensorflow.python.client.timeline.Timeline",
    "tensorflow.python.lib.io.file_io.write_string_to_file",
    "tensorflow.python.platform.tf_logging.info",
    "tf_slim.learning.os",
    "tf_slim.learning.time"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning.training": {
  "data": {
   "shadows": "tf_slim.training.training"
  },
  "type": "import"
 },
 "tf_slim.learning.training_util": {
  "data": {
   "shadows": "tensorflow.python.training.training_util"
  },
  "type": "import"
 },
 "tf_slim.learning.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tf_slim.learning_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.compat.v1.losses",
    "tensorflow.python.platform.test.main"
   ]
  },
  "type": "module"
 },
 "tf_slim.learning_test.BatchNormClassifier": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.sigmoid",
    "tf_slim.layers.layers.batch_norm",
    "tf_slim.layers.layers.fully_connected"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning_test.ClipGradientNormsTest": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.learning_test.ClipGradientNormsTest.clip_values": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning_test.ClipGradientNormsTest.setUp": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.seed",
    "numpy.zeros",
    "super",
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning_test.ClipGradientNormsTest.testIndexedSlicesGradIsClippedCorrectly": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_almost_equal",
    "tensorflow.compat.v1.Session",
    "tensorflow.compat.v1.constant",
    "tensorflow.compat.v1.float32",
    "tensorflow.compat.v1.int32",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.ops.variables.Variable",
    "tf_slim.learning.clip_gradient_norms"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning_test.ClipGradientNormsTest.testNoneGradPassesThroughCorrectly": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "tensorflow.compat.v1.float32",
    "tensorflow.python.ops.variables.Variable",
    "tf_slim.learning.clip_gradient_norms"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning_test.ClipGradientNormsTest.testOrdinaryGradIsClippedCorrectly": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "tensorflow.compat.v1.constant",
    "tensorflow.compat.v1.float32",
    "tensorflow.python.ops.variables.Variable",
    "tf_slim.learning.clip_gradient_norms"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning_test.CreateTrainOpTest": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.learning_test.CreateTrainOpTest._addBesselsCorrection": {
  "data": {
   "lineno": 272
  },
  "type": "function"
 },
 "tf_slim.learning_test.CreateTrainOpTest.setUp": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.random.seed",
    "super",
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning_test.CreateTrainOpTest.testEmptyUpdateOps": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "range",
    "tensorflow.compat.v1.Session",
    "tensorflow.compat.v1.constant",
    "tensorflow.compat.v1.float32",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tensorflow.python.training.gradient_descent.GradientDescentOptimizer",
    "tf_slim.learning.create_train_op",
    "tf_slim.learning_test.BatchNormClassifier",
    "tf_slim.learning_test.loss_ops",
    "tf_slim.ops.variables.get_variables_by_name"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning_test.CreateTrainOpTest.testNoneGlobalStep": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "range",
    "tensorflow.compat.v1.Session",
    "tensorflow.compat.v1.constant",
    "tensorflow.compat.v1.float32",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tensorflow.python.training.gradient_descent.GradientDescentOptimizer",
    "tf_slim.learning.create_train_op",
    "tf_slim.learning_test.BatchNormClassifier",
    "tf_slim.learning_test.loss_ops",
    "tf_slim.ops.variables.get_or_create_global_step"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning_test.CreateTrainOpTest.testRecordTrainOpInCollection": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "tensorflow.compat.v1.constant",
    "tensorflow.compat.v1.float32",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.ops.GraphKeys.TRAIN_OP",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.training.gradient_descent.GradientDescentOptimizer",
    "tf_slim.learning.create_train_op",
    "tf_slim.learning_test.LogisticClassifier",
    "tf_slim.learning_test.loss_ops"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning_test.CreateTrainOpTest.testUseGlobalStep": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "range",
    "tensorflow.compat.v1.Session",
    "tensorflow.compat.v1.constant",
    "tensorflow.compat.v1.float32",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tensorflow.python.training.gradient_descent.GradientDescentOptimizer",
    "tf_slim.learning.create_train_op",
    "tf_slim.learning_test.BatchNormClassifier",
    "tf_slim.learning_test.loss_ops",
    "tf_slim.ops.variables.get_or_create_global_step"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning_test.CreateTrainOpTest.testUseUpdateOps": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.var",
    "range",
    "tensorflow.compat.v1.Session",
    "tensorflow.compat.v1.constant",
    "tensorflow.compat.v1.float32",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tensorflow.python.training.gradient_descent.GradientDescentOptimizer",
    "tf_slim.learning.create_train_op",
    "tf_slim.learning_test.BatchNormClassifier",
    "tf_slim.learning_test.loss_ops",
    "tf_slim.ops.variables.get_variables_by_name"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning_test.LogisticClassifier": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.sigmoid",
    "tf_slim.layers.layers.fully_connected"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning_test.MultiplyGradientsTest": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.learning_test.MultiplyGradientsTest.setUp": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.multiply",
    "numpy.random.seed",
    "super",
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning_test.MultiplyGradientsTest.testEmptyMultiplesRaisesError": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.compat.v1.constant",
    "tensorflow.compat.v1.float32",
    "tensorflow.compat.v1.zeros_like",
    "tensorflow.python.ops.variables.Variable",
    "tf_slim.learning.multiply_gradients"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning_test.MultiplyGradientsTest.testIndexedSlicesGradIsMultiplied": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "tensorflow.compat.v1.constant",
    "tensorflow.compat.v1.float32",
    "tensorflow.compat.v1.int32",
    "tensorflow.compat.v1.zeros",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.ops.variables.Variable",
    "tf_slim.learning.multiply_gradients"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning_test.MultiplyGradientsTest.testMultipleGradientsWithVariables": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "tensorflow.compat.v1.constant",
    "tensorflow.compat.v1.float32",
    "tensorflow.compat.v1.zeros_like",
    "tensorflow.python.ops.variables.Variable",
    "tf_slim.learning.multiply_gradients"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning_test.MultiplyGradientsTest.testMultipleOfNoneGradRaisesError": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.compat.v1.constant",
    "tensorflow.compat.v1.float32",
    "tensorflow.compat.v1.zeros_like",
    "tensorflow.python.ops.variables.Variable",
    "tf_slim.learning.multiply_gradients"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning_test.MultiplyGradientsTest.testNonDictMultiplierRaisesError": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.compat.v1.constant",
    "tensorflow.compat.v1.float32",
    "tensorflow.compat.v1.zeros_like",
    "tensorflow.python.ops.variables.Variable",
    "tf_slim.learning.multiply_gradients"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning_test.MultiplyGradientsTest.testNonListGradsRaisesError": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.compat.v1.constant",
    "tensorflow.compat.v1.float32",
    "tensorflow.compat.v1.zeros_like",
    "tensorflow.python.ops.variables.Variable",
    "tf_slim.learning.multiply_gradients"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning_test.MultiplyGradientsTest.testTensorMultiplierOfGradient": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "tensorflow.compat.v1.constant",
    "tensorflow.compat.v1.float32",
    "tensorflow.compat.v1.where",
    "tensorflow.compat.v1.zeros_like",
    "tensorflow.python.ops.variables.Variable",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.learning.multiply_gradients"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning_test.TrainBNClassifierTest": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.learning_test.TrainBNClassifierTest.setUp": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "int",
    "numpy.float32",
    "numpy.random.randint",
    "numpy.random.seed",
    "numpy.zeros",
    "range",
    "super",
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning_test.TrainBNClassifierTest.testTrainWithNoInitAssignCanAchieveZeroLoss": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "tensorflow.compat.v1.constant",
    "tensorflow.compat.v1.float32",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.training.gradient_descent.GradientDescentOptimizer",
    "tf_slim.learning.create_train_op",
    "tf_slim.learning.train",
    "tf_slim.learning_test.BatchNormClassifier",
    "tf_slim.learning_test.loss_ops",
    "tf_slim.learning_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning_test.TrainTest": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.learning_test.TrainTest.ModelLoss": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "tensorflow.compat.v1.constant",
    "tensorflow.compat.v1.float32",
    "tf_slim.learning_test.LogisticClassifier",
    "tf_slim.learning_test.loss_ops"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning_test.TrainTest.create_train_op": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "tensorflow.compat.v1.constant",
    "tensorflow.compat.v1.float32",
    "tensorflow.python.ops.variables",
    "tensorflow.python.ops.variables.trainable_variables",
    "tensorflow.python.training.gradient_descent.GradientDescentOptimizer",
    "tf_slim.learning.create_train_op",
    "tf_slim.learning_test.LogisticClassifier",
    "tf_slim.learning_test.loss_ops"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning_test.TrainTest.setUp": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "int",
    "numpy.float32",
    "numpy.random.randint",
    "numpy.random.seed",
    "numpy.zeros",
    "range",
    "super",
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning_test.TrainTest.testResumeTrainAchievesRoughlyTheSameLoss": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "len",
    "range",
    "tensorflow.compat.v1.constant",
    "tensorflow.compat.v1.float32",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.training.gradient_descent.GradientDescentOptimizer",
    "tf_slim.learning.create_train_op",
    "tf_slim.learning.train",
    "tf_slim.learning_test.LogisticClassifier",
    "tf_slim.learning_test.loss_ops",
    "tf_slim.learning_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning_test.TrainTest.testTrainAllVarsHasLowerLossThanTrainSubsetOfVars": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.training.gradient_descent.GradientDescentOptimizer",
    "tf_slim.learning.create_train_op",
    "tf_slim.learning.train",
    "tf_slim.learning_test.tempfile",
    "tf_slim.ops.variables.get_variables_by_name"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning_test.TrainTest.testTrainWithAlteredGradients": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tf_slim.learning.train",
    "tf_slim.learning_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning_test.TrainTest.testTrainWithEpochLimit": {
  "data": {
   "lineno": 919,
   "symbols_in_volume": [
    "tensorflow.compat.v1.constant",
    "tensorflow.compat.v1.float32",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.training.gradient_descent.GradientDescentOptimizer",
    "tensorflow.python.training.input.limit_epochs",
    "tf_slim.learning.create_train_op",
    "tf_slim.learning.train",
    "tf_slim.learning_test.LogisticClassifier",
    "tf_slim.learning_test.loss_ops",
    "tf_slim.learning_test.os",
    "tf_slim.learning_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning_test.TrainTest.testTrainWithInitFromCheckpoint": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.ops.variables.global_variables",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.learning.train",
    "tf_slim.learning_test.os",
    "tf_slim.learning_test.tempfile",
    "tf_slim.ops.variables.assign_from_checkpoint"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning_test.TrainTest.testTrainWithInitFromCheckpoint.InitAssignFn": {
  "data": {
   "lineno": 724
  },
  "type": "function"
 },
 "tf_slim.learning_test.TrainTest.testTrainWithInitFromFn": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.ops.variables.global_variables",
    "tensorflow.python.training.saver",
    "tensorflow.python.training.saver.Saver",
    "tf_slim.learning.train",
    "tf_slim.learning_test.os",
    "tf_slim.learning_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning_test.TrainTest.testTrainWithInitFromFn.RestoreFn": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": [
    "tensorflow.python.training.saver.restore"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning_test.TrainTest.testTrainWithLocalVariable": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "tensorflow.compat.v1.constant",
    "tensorflow.compat.v1.float32",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.training.gradient_descent.GradientDescentOptimizer",
    "tf_slim.learning.create_train_op",
    "tf_slim.learning.train",
    "tf_slim.learning_test.LogisticClassifier",
    "tf_slim.learning_test.loss_ops",
    "tf_slim.learning_test.tempfile",
    "tf_slim.ops.variables.local_variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning_test.TrainTest.testTrainWithNoInitAssignCanAchieveZeroLoss": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "tensorflow.compat.v1.constant",
    "tensorflow.compat.v1.float32",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.training.gradient_descent.GradientDescentOptimizer",
    "tf_slim.learning.create_train_op",
    "tf_slim.learning.train",
    "tf_slim.learning_test.LogisticClassifier",
    "tf_slim.learning_test.loss_ops",
    "tf_slim.learning_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning_test.TrainTest.testTrainWithNonDefaultGraph": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "tensorflow.compat.v1.constant",
    "tensorflow.compat.v1.float32",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.training.gradient_descent.GradientDescentOptimizer",
    "tf_slim.learning.create_train_op",
    "tf_slim.learning.train",
    "tf_slim.learning_test.LogisticClassifier",
    "tf_slim.learning_test.loss_ops",
    "tf_slim.learning_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning_test.TrainTest.testTrainWithNoneAsInitWhenUsingVarsRaisesError": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "RuntimeError",
    "tensorflow.compat.v1.constant",
    "tensorflow.compat.v1.float32",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.training.gradient_descent.GradientDescentOptimizer",
    "tf_slim.learning.create_train_op",
    "tf_slim.learning.train",
    "tf_slim.learning_test.LogisticClassifier",
    "tf_slim.learning_test.loss_ops",
    "tf_slim.learning_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning_test.TrainTest.testTrainWithNoneAsLogdir": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "tensorflow.compat.v1.constant",
    "tensorflow.compat.v1.float32",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.training.gradient_descent.GradientDescentOptimizer",
    "tf_slim.learning.create_train_op",
    "tf_slim.learning.train",
    "tf_slim.learning_test.LogisticClassifier",
    "tf_slim.learning_test.loss_ops"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning_test.TrainTest.testTrainWithNoneAsLogdirWhenUsingSaverRaisesError": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.compat.v1.constant",
    "tensorflow.compat.v1.float32",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.training.gradient_descent.GradientDescentOptimizer",
    "tensorflow.python.training.saver",
    "tensorflow.python.training.saver.Saver",
    "tf_slim.learning.create_train_op",
    "tf_slim.learning.train",
    "tf_slim.learning_test.LogisticClassifier",
    "tf_slim.learning_test.loss_ops"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning_test.TrainTest.testTrainWithNoneAsLogdirWhenUsingSummariesRaisesError": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.compat.v1.constant",
    "tensorflow.compat.v1.float32",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.summary.summary.merge_all",
    "tensorflow.python.summary.summary.scalar",
    "tensorflow.python.training.gradient_descent.GradientDescentOptimizer",
    "tf_slim.learning.create_train_op",
    "tf_slim.learning.train",
    "tf_slim.learning_test.LogisticClassifier",
    "tf_slim.learning_test.loss_ops"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning_test.TrainTest.testTrainWithNoneAsLogdirWhenUsingTraceRaisesError": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.compat.v1.constant",
    "tensorflow.compat.v1.float32",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.training.gradient_descent.GradientDescentOptimizer",
    "tf_slim.learning.create_train_op",
    "tf_slim.learning.train",
    "tf_slim.learning_test.LogisticClassifier",
    "tf_slim.learning_test.loss_ops"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning_test.TrainTest.testTrainWithSessionConfig": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "tensorflow.compat.v1.ConfigProto",
    "tensorflow.compat.v1.constant",
    "tensorflow.compat.v1.float32",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.training.gradient_descent.GradientDescentOptimizer",
    "tf_slim.learning.create_train_op",
    "tf_slim.learning.train",
    "tf_slim.learning_test.LogisticClassifier",
    "tf_slim.learning_test.loss_ops"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning_test.TrainTest.testTrainWithTrace": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "any",
    "tensorflow.compat.v1.constant",
    "tensorflow.compat.v1.float32",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.summary.summary.scalar",
    "tensorflow.python.training.gradient_descent.GradientDescentOptimizer",
    "tf_slim.learning.create_train_op",
    "tf_slim.learning.train",
    "tf_slim.learning_test.LogisticClassifier",
    "tf_slim.learning_test.loss_ops",
    "tf_slim.learning_test.os",
    "tf_slim.learning_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning_test.TrainTest.testTrainingSubsetsOfVariablesOnlyUpdatesThoseVariables": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "numpy.linalg.norm",
    "tensorflow.compat.v1.Session",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tensorflow.python.training.gradient_descent.GradientDescentOptimizer",
    "tf_slim.learning.create_train_op",
    "tf_slim.ops.variables.get_variables"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.learning_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.learning_test.gradient_descent": {
  "data": {
   "shadows": "tensorflow.python.training.gradient_descent"
  },
  "type": "import"
 },
 "tf_slim.learning_test.input_lib": {
  "data": {
   "shadows": "tensorflow.python.training.input"
  },
  "type": "import"
 },
 "tf_slim.learning_test.layers": {
  "data": {
   "shadows": "tf_slim.layers.layers"
  },
  "type": "import"
 },
 "tf_slim.learning_test.learning": {
  "data": {
   "shadows": "tf_slim.learning"
  },
  "type": "import"
 },
 "tf_slim.learning_test.loss_ops": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "tf_slim.learning_test.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tf_slim.learning_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tf_slim.learning_test.np_testing": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "tf_slim.learning_test.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tf_slim.learning_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tf_slim.learning_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.learning_test.random_seed": {
  "data": {
   "shadows": "tensorflow.python.framework.random_seed"
  },
  "type": "import"
 },
 "tf_slim.learning_test.saver_lib": {
  "data": {
   "shadows": "tensorflow.python.training.saver"
  },
  "type": "import"
 },
 "tf_slim.learning_test.setUpModule": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "tensorflow.compat.v1.disable_eager_execution"
   ]
  },
  "type": "function"
 },
 "tf_slim.learning_test.summary": {
  "data": {
   "shadows": "tensorflow.python.summary.summary"
  },
  "type": "import"
 },
 "tf_slim.learning_test.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "tf_slim.learning_test.test": {
  "data": {
   "shadows": "tensorflow.python.platform.test"
  },
  "type": "import"
 },
 "tf_slim.learning_test.tf": {
  "data": {
   "shadows": "tensorflow.compat.v1"
  },
  "type": "import"
 },
 "tf_slim.learning_test.variables_lib": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tf_slim.learning_test.variables_lib2": {
  "data": {
   "shadows": "tf_slim.ops.variables"
  },
  "type": "import"
 },
 "tf_slim.losses": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.util.all_util.remove_undocumented",
    "tf_slim.losses._allowed_symbols"
   ]
  },
  "type": "module"
 },
 "tf_slim.losses._allowed_symbols": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "tf_slim.losses.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.losses.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.losses.loss_ops": {
  "data": {},
  "type": "module"
 },
 "tf_slim.losses.loss_ops.__all__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "tf_slim.losses.loss_ops._num_present": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "list",
    "range",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.size",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.array_ops.where",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.div",
    "tensorflow.python.ops.math_ops.equal",
    "tensorflow.python.ops.math_ops.multiply",
    "tensorflow.python.ops.math_ops.not_equal",
    "tensorflow.python.ops.math_ops.reduce_prod",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops._safe_mean": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.div_no_nan",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops._scale_losses": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "list",
    "max",
    "range",
    "tensorflow.python.ops.math_ops.multiply",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops.absolute_difference": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.abs",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.subtract",
    "tensorflow.python.util.deprecation.deprecated",
    "tf_slim.losses.loss_ops.compute_weighted_loss"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.losses.loss_ops.add_arg_scope": {
  "data": {
   "shadows": "tf_slim.ops.arg_scope.add_arg_scope"
  },
  "type": "import"
 },
 "tf_slim.losses.loss_ops.add_loss": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.LOSSES",
    "tensorflow.python.framework.ops.add_to_collection",
    "tensorflow.python.util.deprecation.deprecated",
    "tf_slim.ops.arg_scope.add_arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tf_slim.losses.loss_ops.compute_weighted_loss": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.squeeze",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.util.deprecation.deprecated",
    "tf_slim.losses.loss_ops._num_present",
    "tf_slim.losses.loss_ops._safe_mean",
    "tf_slim.losses.loss_ops._scale_losses",
    "tf_slim.losses.loss_ops.add_loss"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops.cosine_distance": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.multiply",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.util.deprecation.deprecated",
    "tensorflow.python.util.deprecation.deprecated_args",
    "tensorflow.python.util.deprecation.deprecated_argument_lookup",
    "tf_slim.losses.loss_ops.compute_weighted_loss"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops.deprecated": {
  "data": {
   "shadows": "tensorflow.python.util.deprecation.deprecated"
  },
  "type": "import"
 },
 "tf_slim.losses.loss_ops.deprecated_args": {
  "data": {
   "shadows": "tensorflow.python.util.deprecation.deprecated_args"
  },
  "type": "import"
 },
 "tf_slim.losses.loss_ops.deprecated_argument_lookup": {
  "data": {
   "shadows": "tensorflow.python.util.deprecation.deprecated_argument_lookup"
  },
  "type": "import"
 },
 "tf_slim.losses.loss_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.losses.loss_ops.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tf_slim.losses.loss_ops.get_losses": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.LOSSES",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.util.deprecation.deprecated"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops.get_regularization_losses": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.util.deprecation.deprecated"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops.get_total_loss": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.add_n",
    "tensorflow.python.util.deprecation.deprecated",
    "tf_slim.losses.loss_ops.get_losses",
    "tf_slim.losses.loss_ops.get_regularization_losses"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops.hinge_loss": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.ones_like",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.multiply",
    "tensorflow.python.ops.math_ops.subtract",
    "tensorflow.python.ops.nn_ops.relu",
    "tensorflow.python.util.deprecation.deprecated"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops.log_loss": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.log",
    "tensorflow.python.ops.math_ops.multiply",
    "tensorflow.python.util.deprecation.deprecated",
    "tf_slim.losses.loss_ops.compute_weighted_loss"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tf_slim.losses.loss_ops.mean_pairwise_squared_error": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "range",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.where",
    "tensorflow.python.ops.array_ops.zeros_like",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.div_no_nan",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.square",
    "tensorflow.python.ops.math_ops.subtract",
    "tensorflow.python.util.deprecation.deprecated",
    "tf_slim.losses.loss_ops._num_present",
    "tf_slim.losses.loss_ops._scale_losses",
    "tf_slim.losses.loss_ops.add_loss"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops.mean_squared_error": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.squared_difference",
    "tensorflow.python.util.deprecation.deprecated",
    "tf_slim.losses.loss_ops.compute_weighted_loss"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops.nn": {
  "data": {
   "shadows": "tensorflow.python.ops.nn"
  },
  "type": "import"
 },
 "tf_slim.losses.loss_ops.nn_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.nn_ops"
  },
  "type": "import"
 },
 "tf_slim.losses.loss_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tf_slim.losses.loss_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.losses.loss_ops.sigmoid_cross_entropy": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.nn.sigmoid_cross_entropy_with_logits",
    "tensorflow.python.util.deprecation.deprecated",
    "tf_slim.losses.loss_ops.compute_weighted_loss"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops.softmax_cross_entropy": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.nn.softmax_cross_entropy_with_logits",
    "tensorflow.python.util.deprecation.deprecated",
    "tf_slim.losses.loss_ops.compute_weighted_loss"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops.sparse_softmax_cross_entropy": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.nn.sparse_softmax_cross_entropy_with_logits",
    "tensorflow.python.util.deprecation.deprecated",
    "tf_slim.losses.loss_ops.compute_weighted_loss"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.test.main"
   ]
  },
  "type": "module"
 },
 "tf_slim.losses.loss_ops_test.AbsoluteDifferenceLossTest": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.losses.loss_ops_test.AbsoluteDifferenceLossTest.setUp": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.loss_ops_test.AbsoluteDifferenceLossTest"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.AbsoluteDifferenceLossTest.testAllCorrectNoLossWeight": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "tf_slim.losses.absolute_difference"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.AbsoluteDifferenceLossTest.testLossWithSampleSpecificWeightsAllZero": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.zeros",
    "tf_slim.losses.absolute_difference"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.AbsoluteDifferenceLossTest.testNonZeroLoss": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "tf_slim.losses.absolute_difference"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.AbsoluteDifferenceLossTest.testNonZeroLossWithOneDimBatchSpecificWeights": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.absolute_difference"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.AbsoluteDifferenceLossTest.testNonZeroLossWithPythonScalarWeight": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "tf_slim.losses.absolute_difference"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.AbsoluteDifferenceLossTest.testNonZeroLossWithSampleSpecificWeights": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.absolute_difference"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.AbsoluteDifferenceLossTest.testNonZeroLossWithSampleSpecificWeightsMostZero": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.absolute_difference"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.AbsoluteDifferenceLossTest.testNonZeroLossWithScalarTensorWeight": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.absolute_difference"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.AbsoluteDifferenceLossTest.testNonZeroLossWithTwoDimBatchSpecificWeights": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.absolute_difference"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.AbsoluteDifferenceLossTest.testValueErrorThrownWhenWeightIsNone": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ValueError",
    "tf_slim.losses.absolute_difference"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.AddLossTest": {
  "data": {
   "lineno": 1249,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.losses.loss_ops_test.AddLossTest.testAddExternalLoss": {
  "data": {
   "lineno": 1251,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.math_ops.reduce_mean",
    "tf_slim.losses.add_loss",
    "tf_slim.losses.get_losses",
    "tf_slim.losses.get_total_loss",
    "tf_slim.losses.hinge_loss"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.AddLossTest.testNoCollectLosses": {
  "data": {
   "lineno": 1273,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.absolute_difference",
    "tf_slim.losses.add_loss",
    "tf_slim.losses.get_losses",
    "tf_slim.losses.log_loss",
    "tf_slim.losses.mean_squared_error",
    "tf_slim.losses.sigmoid_cross_entropy",
    "tf_slim.losses.softmax_cross_entropy",
    "tf_slim.ops.arg_scope.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.AddLossTest.testNoCollectLossesBatch2": {
  "data": {
   "lineno": 1285,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.absolute_difference",
    "tf_slim.losses.add_loss",
    "tf_slim.losses.get_losses",
    "tf_slim.losses.log_loss",
    "tf_slim.losses.mean_squared_error",
    "tf_slim.losses.sigmoid_cross_entropy",
    "tf_slim.losses.softmax_cross_entropy",
    "tf_slim.ops.arg_scope.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.AddLossTest.testNoneLossCollection": {
  "data": {
   "lineno": 1263,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.math_ops.reduce_mean",
    "tf_slim.losses.add_loss",
    "tf_slim.losses.get_losses",
    "tf_slim.losses.hinge_loss"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.ComputeWeightedLossTest": {
  "data": {
   "lineno": 1235,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.losses.loss_ops_test.ComputeWeightedLossTest.testHingeLoss": {
  "data": {
   "lineno": 1237,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.compute_weighted_loss",
    "tf_slim.losses.get_losses",
    "tf_slim.losses.hinge_loss"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.CosineDistanceLossTest": {
  "data": {
   "lineno": 1110,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.losses.loss_ops_test.CosineDistanceLossTest.setUp": {
  "data": {
   "lineno": 1112,
   "symbols_in_volume": [
    "numpy.asarray",
    "super",
    "tf_slim.losses.loss_ops_test.CosineDistanceLossTest"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.CosineDistanceLossTest.testAllCorrectNoWeights": {
  "data": {
   "lineno": 1139,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.cosine_distance"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.CosineDistanceLossTest.testMeasurementSpecificWeights": {
  "data": {
   "lineno": 1182,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.cosine_distance"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.CosineDistanceLossTest.testMeasurementSpecificWeightsWithPlaceholderWithShape": {
  "data": {
   "lineno": 1203,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.losses.cosine_distance"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.CosineDistanceLossTest.testPartiallyCorrectFloatingPointValues": {
  "data": {
   "lineno": 1155,
   "symbols_in_volume": [
    "numpy.matrix",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tf_slim.losses.cosine_distance"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.CosineDistanceLossTest.testPartiallyCorrectWithIntegerValues": {
  "data": {
   "lineno": 1147,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.cosine_distance"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.CosineDistanceLossTest.testSampleSpecificWeights": {
  "data": {
   "lineno": 1173,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.cosine_distance"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.CosineDistanceLossTest.testValueErrorThrownWhenWeightIsNone": {
  "data": {
   "lineno": 1130,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.cosine_distance"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.CosineDistanceLossTest.testValueErrorThrownWithShapelessPlaceholder": {
  "data": {
   "lineno": 1192,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.losses.cosine_distance"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.CosineDistanceLossTest.testZeroLossWhenAllMeasurementSpecificWeightsAreZero": {
  "data": {
   "lineno": 1225,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.array_ops.zeros",
    "tf_slim.losses.cosine_distance"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.CosineDistanceLossTest.testZeroLossWhenAllSampleSpecificWeightsAreZero": {
  "data": {
   "lineno": 1216,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.array_ops.zeros",
    "tf_slim.losses.cosine_distance"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.HingeLossTest": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.losses.loss_ops_test.HingeLossTest.testAllOutsideMargin": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.hinge_loss"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.HingeLossTest.testIncompatibleShapes": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.hinge_loss"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.HingeLossTest.testSomeInsideMargin": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.hinge_loss"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.HingeLossTest.testSomeMisclassified": {
  "data": {
   "lineno": 829,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.hinge_loss"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.LogLossTest": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.losses.loss_ops_test.LogLossTest.setUp": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.log",
    "numpy.multiply",
    "super",
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.loss_ops_test.LogLossTest"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.LogLossTest.testAllCorrectNoLossWeight": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "tf_slim.losses.log_loss"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.LogLossTest.testAllCorrectNoLossWeightWithPlaceholder": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.losses.log_loss"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.LogLossTest.testLossWithSampleSpecificWeightsAllZero": {
  "data": {
   "lineno": 797,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.zeros",
    "tf_slim.losses.log_loss"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.LogLossTest.testNonZeroLoss": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "numpy.sum",
    "tf_slim.losses.log_loss"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.LogLossTest.testNonZeroLossWithMeasurementSpecificWeights": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.multiply",
    "numpy.sum",
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.log_loss"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.LogLossTest.testNonZeroLossWithMeasurementSpecificWeightsWithPlaceholder": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.multiply",
    "numpy.sum",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.losses.log_loss"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.LogLossTest.testNonZeroLossWithOneDimBatchSpecificWeights": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.multiply",
    "numpy.sum",
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.log_loss"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.LogLossTest.testNonZeroLossWithOneDimBatchSpecificWeightsSomeZero": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.multiply",
    "numpy.sum",
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.log_loss"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.LogLossTest.testNonZeroLossWithPythonScalarWeight": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "numpy.sum",
    "tf_slim.losses.log_loss"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.LogLossTest.testNonZeroLossWithSampleSpecificWeightsMostZero": {
  "data": {
   "lineno": 773,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.multiply",
    "numpy.sum",
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.log_loss"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.LogLossTest.testNonZeroLossWithSampleSpecificWeightsMostZeroWithPlaceholder": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.multiply",
    "numpy.sum",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.losses.log_loss"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.LogLossTest.testNonZeroLossWithScalarTensorWeight": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "numpy.sum",
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.log_loss"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.LogLossTest.testNonZeroLossWithScalarTensorWeightAndPlaceholder": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "numpy.sum",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.losses.log_loss"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.LogLossTest.testNonZeroLossWithScalarTensorWeightAndPlaceholderWithRankOnly": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "numpy.sum",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.losses.log_loss"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.LogLossTest.testNonZeroLossWithTwoDimBatchSpecificWeightsSomeZero": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.multiply",
    "numpy.sum",
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.log_loss"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.LogLossTest.testValueErrorThrownWhenWeightIsNone": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "ValueError",
    "tf_slim.losses.log_loss"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.LogLossTest.testWeightsWithSameNumDimsButWrongShapeThrowsException": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.normal",
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.log_loss"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.MeanPairwiseSquaresErrorTest": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.losses.loss_ops_test.MeanPairwiseSquaresErrorTest.setUp": {
  "data": {
   "lineno": 909,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.divide",
    "numpy.zeros",
    "range",
    "super",
    "tf_slim.losses.loss_ops_test.MeanPairwiseSquaresErrorTest"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.MeanPairwiseSquaresErrorTest.testAllCorrectNoLossWeight": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.mean_pairwise_squared_error"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.MeanPairwiseSquaresErrorTest.testGradientWithZeroWeight": {
  "data": {
   "lineno": 950,
   "symbols_in_volume": [
    "numpy.isnan",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.init_ops.truncated_normal_initializer",
    "tensorflow.python.ops.math_ops.matmul",
    "tensorflow.python.ops.variable_scope.get_variable",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tensorflow.python.training.momentum.MomentumOptimizer",
    "tf_slim.losses.mean_pairwise_squared_error"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.MeanPairwiseSquaresErrorTest.testLossIsAssociativeAcrossBatchElements": {
  "data": {
   "lineno": 1074,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.losses.mean_pairwise_squared_error"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.MeanPairwiseSquaresErrorTest.testLossWithAllZeroBatchSpecificWeights": {
  "data": {
   "lineno": 1064,
   "symbols_in_volume": [
    "numpy.zeros",
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.mean_pairwise_squared_error"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.MeanPairwiseSquaresErrorTest.testNonZeroLoss": {
  "data": {
   "lineno": 943,
   "symbols_in_volume": [
    "numpy.sum",
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.mean_pairwise_squared_error"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.MeanPairwiseSquaresErrorTest.testNonZeroLossWithOneDimBatchSpecificWeights": {
  "data": {
   "lineno": 1021,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.multiply",
    "numpy.sum",
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.mean_pairwise_squared_error"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.MeanPairwiseSquaresErrorTest.testNonZeroLossWithOneDimBatchSpecificWeightsAndPlaceholders": {
  "data": {
   "lineno": 1043,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.multiply",
    "numpy.sum",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.losses.mean_pairwise_squared_error"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.MeanPairwiseSquaresErrorTest.testNonZeroLossWithPythonScalarWeight": {
  "data": {
   "lineno": 975,
   "symbols_in_volume": [
    "numpy.sum",
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.mean_pairwise_squared_error"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.MeanPairwiseSquaresErrorTest.testNonZeroLossWithScalarTensorWeight": {
  "data": {
   "lineno": 985,
   "symbols_in_volume": [
    "numpy.sum",
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.mean_pairwise_squared_error"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.MeanPairwiseSquaresErrorTest.testNonZeroLossWithScalarTensorWeightWithPlaceholder": {
  "data": {
   "lineno": 1004,
   "symbols_in_volume": [
    "numpy.sum",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.losses.mean_pairwise_squared_error"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.MeanPairwiseSquaresErrorTest.testNonZeroLossWithScalarZeroWeight": {
  "data": {
   "lineno": 995,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.mean_pairwise_squared_error"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.MeanPairwiseSquaresErrorTest.testValueErrorThrownWhenWeightIsNone": {
  "data": {
   "lineno": 928,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.mean_pairwise_squared_error"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.MeanPairwiseSquaresErrorTest.testZeroLossWithOneDimBatchZeroWeights": {
  "data": {
   "lineno": 1033,
   "symbols_in_volume": [
    "numpy.asarray",
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.mean_pairwise_squared_error"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.MeanSquaredErrorTest": {
  "data": {
   "lineno": 840,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.losses.loss_ops_test.MeanSquaredErrorTest.setUp": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.loss_ops_test.MeanSquaredErrorTest"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.MeanSquaredErrorTest.testAllCorrectNoLossWeight": {
  "data": {
   "lineno": 853,
   "symbols_in_volume": [
    "tf_slim.losses.mean_squared_error"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.MeanSquaredErrorTest.testLossWithSampleSpecificWeightsAllZero": {
  "data": {
   "lineno": 900,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.zeros",
    "tf_slim.losses.mean_squared_error"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.MeanSquaredErrorTest.testNonZeroLoss": {
  "data": {
   "lineno": 858,
   "symbols_in_volume": [
    "tf_slim.losses.mean_squared_error"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.MeanSquaredErrorTest.testNonZeroLossWithOneDimBatchSpecificWeights": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.mean_squared_error"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.MeanSquaredErrorTest.testNonZeroLossWithPythonScalarWeight": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "tf_slim.losses.mean_squared_error"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.MeanSquaredErrorTest.testNonZeroLossWithSampleSpecificWeights": {
  "data": {
   "lineno": 888,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.mean_squared_error"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.MeanSquaredErrorTest.testNonZeroLossWithSampleSpecificWeightsMostZero": {
  "data": {
   "lineno": 894,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.mean_squared_error"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.MeanSquaredErrorTest.testNonZeroLossWithScalarTensorWeight": {
  "data": {
   "lineno": 869,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.mean_squared_error"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.MeanSquaredErrorTest.testNonZeroLossWithTwoDimBatchSpecificWeights": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.mean_squared_error"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.MeanSquaredErrorTest.testValueErrorThrownWhenWeightIsNone": {
  "data": {
   "lineno": 847,
   "symbols_in_volume": [
    "ValueError",
    "tf_slim.losses.mean_squared_error"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.SigmoidCrossEntropyLossTest": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.losses.loss_ops_test.SigmoidCrossEntropyLossTest.testAllCorrectSigmoid": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.sigmoid_cross_entropy"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.SigmoidCrossEntropyLossTest.testAllWrongSigmoid": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.sigmoid_cross_entropy"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.SigmoidCrossEntropyLossTest.testAllWrongSigmoidWithMeasurementSpecificWeights": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.sigmoid_cross_entropy"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.SigmoidCrossEntropyLossTest.testLossWithSingleDimPlaceholderForLogitsAndWeights1": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "numpy.ones",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.ones_like",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.losses.sigmoid_cross_entropy"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.SigmoidCrossEntropyLossTest.testLossWithSingleDimPlaceholderForLogitsAndWeights2": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "numpy.ones",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.ones_like",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.losses.sigmoid_cross_entropy"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.SigmoidCrossEntropyLossTest.testMultiCorrectSigmoid": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.sigmoid_cross_entropy"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.SigmoidCrossEntropyLossTest.testSigmoidLabelSmoothingCorrect": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.sigmoid_cross_entropy"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.SigmoidCrossEntropyLossTest.testSigmoidLabelSmoothingEqualsSoftmaxTwoLabel": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.sigmoid_cross_entropy",
    "tf_slim.losses.softmax_cross_entropy"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.SoftmaxCrossEntropyLossTest": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.losses.loss_ops_test.SoftmaxCrossEntropyLossTest.testAllCorrect": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.softmax_cross_entropy"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.SoftmaxCrossEntropyLossTest.testAllWrong": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.softmax_cross_entropy"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.SoftmaxCrossEntropyLossTest.testAllWrongAllWeightsMissing": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.softmax_cross_entropy"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.SoftmaxCrossEntropyLossTest.testLossWithDynamicallyShapedWeights1D": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "numpy.average",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.losses.softmax_cross_entropy"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.SoftmaxCrossEntropyLossTest.testLossWithDynamicallyShapedWeights2D": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "numpy.average",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.losses.softmax_cross_entropy"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.SoftmaxCrossEntropyLossTest.testNonZeroLossWithOneDimBatchSpecificWeights": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.softmax_cross_entropy"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.SoftmaxCrossEntropyLossTest.testNonZeroLossWithPythonScalarWeight": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.softmax_cross_entropy"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.SoftmaxCrossEntropyLossTest.testNonZeroLossWithScalarTensorWeight": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.softmax_cross_entropy"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.SoftmaxCrossEntropyLossTest.testNoneWeightRaisesValueError": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.softmax_cross_entropy"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.SoftmaxCrossEntropyLossTest.testSoftmaxLabelSmoothing": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.softmax_cross_entropy"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.SoftmaxCrossEntropyLossTest.testSoftmaxWithMeasurementSpecificWeightsRaisesException": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.softmax_cross_entropy"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.SoftmaxCrossEntropyLossTest.testSomeWeightsMissing": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.softmax_cross_entropy"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.SparseSoftmaxCrossEntropyLossTest": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.losses.loss_ops_test.SparseSoftmaxCrossEntropyLossTest.testAllCorrectInt32Labels": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.int32",
    "tf_slim.losses.sparse_softmax_cross_entropy"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.SparseSoftmaxCrossEntropyLossTest.testAllCorrectInt64Labels": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.int64",
    "tf_slim.losses.sparse_softmax_cross_entropy"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.SparseSoftmaxCrossEntropyLossTest.testAllCorrectNonColumnLabels": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.sparse_softmax_cross_entropy"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.SparseSoftmaxCrossEntropyLossTest.testAllWrongAllWeightsMissing": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.sparse_softmax_cross_entropy"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.SparseSoftmaxCrossEntropyLossTest.testAllWrongInt32Labels": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.int32",
    "tf_slim.losses.sparse_softmax_cross_entropy"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.SparseSoftmaxCrossEntropyLossTest.testAllWrongInt64Labels": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.int64",
    "tf_slim.losses.sparse_softmax_cross_entropy"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.SparseSoftmaxCrossEntropyLossTest.testAllWrongNonColumnLabels": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.sparse_softmax_cross_entropy"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.SparseSoftmaxCrossEntropyLossTest.testInconsistentLabelShapeRaisesException": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.sparse_softmax_cross_entropy"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.SparseSoftmaxCrossEntropyLossTest.testInconsistentLabelSizeRaisesException": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.sparse_softmax_cross_entropy"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.SparseSoftmaxCrossEntropyLossTest.testInconsistentWeightShapeRaisesException": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.sparse_softmax_cross_entropy"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.SparseSoftmaxCrossEntropyLossTest.testInconsistentWeightSizeRaisesException": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.sparse_softmax_cross_entropy"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.SparseSoftmaxCrossEntropyLossTest.testLossWithDynamicallyShapedWeights1D": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "numpy.average",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.losses.sparse_softmax_cross_entropy"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.SparseSoftmaxCrossEntropyLossTest.testLossWithDynamicallyShapedWeights2D": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "numpy.average",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.losses.sparse_softmax_cross_entropy"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.SparseSoftmaxCrossEntropyLossTest.testMeasurementSpecificWeightsRaisesException": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.sparse_softmax_cross_entropy"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.SparseSoftmaxCrossEntropyLossTest.testNonZeroLossWithColumnWeights": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.sparse_softmax_cross_entropy"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.SparseSoftmaxCrossEntropyLossTest.testNonZeroLossWithOneDimBatchSpecificWeights": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.sparse_softmax_cross_entropy"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.SparseSoftmaxCrossEntropyLossTest.testNonZeroLossWithPythonScalarWeight": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.sparse_softmax_cross_entropy"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.SparseSoftmaxCrossEntropyLossTest.testNonZeroLossWithScalarTensorWeight": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.sparse_softmax_cross_entropy"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.SparseSoftmaxCrossEntropyLossTest.testNoneWeightRaisesValueError": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.sparse_softmax_cross_entropy"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.SparseSoftmaxCrossEntropyLossTest.testSomeWeightsMissing": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.losses.sparse_softmax_cross_entropy"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.losses.loss_ops_test.arg_scope": {
  "data": {
   "shadows": "tf_slim.ops.arg_scope.arg_scope"
  },
  "type": "import"
 },
 "tf_slim.losses.loss_ops_test.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tf_slim.losses.loss_ops_test.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tf_slim.losses.loss_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.losses.loss_ops_test.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tf_slim.losses.loss_ops_test.init_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.init_ops"
  },
  "type": "import"
 },
 "tf_slim.losses.loss_ops_test.loss_ops": {
  "data": {
   "shadows": "tf_slim.losses"
  },
  "type": "import"
 },
 "tf_slim.losses.loss_ops_test.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tf_slim.losses.loss_ops_test.momentum_lib": {
  "data": {
   "shadows": "tensorflow.python.training.momentum"
  },
  "type": "import"
 },
 "tf_slim.losses.loss_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tf_slim.losses.loss_ops_test.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tf_slim.losses.loss_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.losses.loss_ops_test.random_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.random_ops"
  },
  "type": "import"
 },
 "tf_slim.losses.loss_ops_test.random_seed": {
  "data": {
   "shadows": "tensorflow.python.framework.random_seed"
  },
  "type": "import"
 },
 "tf_slim.losses.loss_ops_test.setUpModule": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "tensorflow.compat.v1.disable_eager_execution"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.loss_ops_test.test": {
  "data": {
   "shadows": "tensorflow.python.platform.test"
  },
  "type": "import"
 },
 "tf_slim.losses.loss_ops_test.tf": {
  "data": {
   "shadows": "tensorflow.compat.v1"
  },
  "type": "import"
 },
 "tf_slim.losses.loss_ops_test.variable_scope": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tf_slim.losses.loss_ops_test.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tf_slim.losses.metric_learning": {
  "data": {
   "shadows": "tf_slim.losses.metric_learning"
  },
  "type": "import"
 },
 "tf_slim.losses.metric_learning.HAS_SKLEARN": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "tf_slim.losses.metric_learning._build_multilabel_adjacency": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "len",
    "range",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.pad",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.sparse_ops.sparse_minimum",
    "tensorflow.python.ops.sparse_ops.sparse_reduce_sum"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning._compute_ami_score": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.float64",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.maximum",
    "tensorflow.python.ops.script_ops.py_func",
    "tf_slim.losses.metric_learning.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning._compute_ari_score": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.float64",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.maximum",
    "tensorflow.python.ops.script_ops.py_func",
    "tf_slim.losses.metric_learning.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning._compute_nmi_score": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.float64",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.script_ops.py_func",
    "tf_slim.losses.metric_learning.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning._compute_vmeasure_score": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.float64",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.maximum",
    "tensorflow.python.ops.script_ops.py_func",
    "tf_slim.losses.metric_learning.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning._compute_zeroone_score": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.equal",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning._find_loss_augmented_facility_idx": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.constant",
    "tensorflow.python.ops.array_ops.gather",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.tile",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.control_flow_ops.while_loop",
    "tensorflow.python.ops.math_ops.add",
    "tensorflow.python.ops.math_ops.argmax",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.reduce_min",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning._find_loss_augmented_facility_idx.func_body": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.zeros",
    "tf_slim.losses.metric_learning.compute_clustering_score",
    "tf_slim.losses.metric_learning.get_cluster_assignment"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning._find_loss_augmented_facility_idx.func_cond": {
  "data": {
   "lineno": 706
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.losses.metric_learning.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tf_slim.losses.metric_learning.cluster_loss": {
  "data": {
   "lineno": 958,
   "symbols_in_volume": [
    "ImportError",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.squeeze",
    "tensorflow.python.ops.logging_ops.Print",
    "tensorflow.python.ops.math_ops.maximum",
    "tensorflow.python.ops.math_ops.range",
    "tensorflow.python.summary.summary.scalar",
    "tf_slim.losses.metric_learning.HAS_SKLEARN",
    "tf_slim.losses.metric_learning.compute_augmented_facility_locations",
    "tf_slim.losses.metric_learning.compute_augmented_facility_locations_pam",
    "tf_slim.losses.metric_learning.compute_clustering_score",
    "tf_slim.losses.metric_learning.compute_facility_energy",
    "tf_slim.losses.metric_learning.compute_gt_cluster_score",
    "tf_slim.losses.metric_learning.get_cluster_assignment",
    "tf_slim.losses.metric_learning.pairwise_distance"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning.compute_augmented_facility_locations": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.tensor_shape.TensorShape",
    "tensorflow.python.ops.array_ops.constant",
    "tensorflow.python.ops.array_ops.size",
    "tensorflow.python.ops.array_ops.unique",
    "tensorflow.python.ops.control_flow_ops.while_loop"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning.compute_augmented_facility_locations.func_body_augmented": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.setdiff1d",
    "tf_slim.losses.metric_learning._find_loss_augmented_facility_idx"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning.compute_augmented_facility_locations.func_cond_augmented": {
  "data": {
   "lineno": 749
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning.compute_augmented_facility_locations_pam": {
  "data": {
   "lineno": 885,
   "symbols_in_volume": [
    "range",
    "tf_slim.losses.metric_learning.get_cluster_assignment",
    "tf_slim.losses.metric_learning.update_all_medoids"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning.compute_clustering_score": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "ValueError",
    "clustering_score_fn",
    "tensorflow.python.ops.array_ops.squeeze"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning.compute_facility_energy": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.gather",
    "tensorflow.python.ops.math_ops.reduce_min",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning.compute_gt_cluster_score": {
  "data": {
   "lineno": 918,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.constant",
    "tensorflow.python.ops.array_ops.size",
    "tensorflow.python.ops.array_ops.unique",
    "tensorflow.python.ops.control_flow_ops.while_loop"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning.compute_gt_cluster_score.func_body": {
  "data": {
   "lineno": 939,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.gather",
    "tensorflow.python.ops.array_ops.transpose",
    "tensorflow.python.ops.array_ops.where",
    "tensorflow.python.ops.math_ops.equal",
    "tensorflow.python.ops.math_ops.reduce_min",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning.compute_gt_cluster_score.func_cond": {
  "data": {
   "lineno": 935
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning.contrastive_loss": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.maximum",
    "tensorflow.python.ops.math_ops.reduce_mean",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.sqrt",
    "tensorflow.python.ops.math_ops.square",
    "tensorflow.python.ops.math_ops.squared_difference"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tf_slim.losses.metric_learning.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.losses.metric_learning.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tf_slim.losses.metric_learning.get_cluster_assignment": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.bool",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.ops.array_ops.constant",
    "tensorflow.python.ops.array_ops.gather",
    "tensorflow.python.ops.array_ops.one_hot",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.transpose",
    "tensorflow.python.ops.array_ops.where",
    "tensorflow.python.ops.math_ops.argmin",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.multiply",
    "tensorflow.python.ops.math_ops.range",
    "tensorflow.python.ops.math_ops.reduce_any",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "tf_slim.losses.metric_learning.lifted_struct_loss": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.diag",
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.size",
    "tensorflow.python.ops.array_ops.tile",
    "tensorflow.python.ops.array_ops.transpose",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.equal",
    "tensorflow.python.ops.math_ops.exp",
    "tensorflow.python.ops.math_ops.log",
    "tensorflow.python.ops.math_ops.logical_not",
    "tensorflow.python.ops.math_ops.maximum",
    "tensorflow.python.ops.math_ops.multiply",
    "tensorflow.python.ops.math_ops.reduce_max",
    "tensorflow.python.ops.math_ops.reduce_min",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.square",
    "tensorflow.python.ops.math_ops.truediv",
    "tf_slim.losses.metric_learning.pairwise_distance"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning.logging_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.logging_ops"
  },
  "type": "import"
 },
 "tf_slim.losses.metric_learning.masked_maximum": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.multiply",
    "tensorflow.python.ops.math_ops.reduce_max",
    "tensorflow.python.ops.math_ops.reduce_min"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning.masked_minimum": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.multiply",
    "tensorflow.python.ops.math_ops.reduce_max",
    "tensorflow.python.ops.math_ops.reduce_min"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tf_slim.losses.metric_learning.metrics": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "tf_slim.losses.metric_learning.nn": {
  "data": {
   "shadows": "tensorflow.python.ops.nn"
  },
  "type": "import"
 },
 "tf_slim.losses.metric_learning.npairs_loss": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.transpose",
    "tensorflow.python.ops.logging_ops.Print",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.equal",
    "tensorflow.python.ops.math_ops.matmul",
    "tensorflow.python.ops.math_ops.multiply",
    "tensorflow.python.ops.math_ops.reduce_mean",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.square",
    "tensorflow.python.ops.nn.softmax_cross_entropy_with_logits"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning.npairs_loss_multilabel": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "str",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.framework.sparse_tensor.SparseTensor",
    "tensorflow.python.ops.logging_ops.Print",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.matmul",
    "tensorflow.python.ops.math_ops.multiply",
    "tensorflow.python.ops.math_ops.reduce_mean",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.square",
    "tensorflow.python.ops.nn.softmax_cross_entropy_with_logits",
    "tf_slim.losses.metric_learning._build_multilabel_adjacency"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tf_slim.losses.metric_learning.pairwise_distance": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.diag",
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.array_ops.ones_like",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.transpose",
    "tensorflow.python.ops.math_ops.add",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.less_equal",
    "tensorflow.python.ops.math_ops.logical_not",
    "tensorflow.python.ops.math_ops.matmul",
    "tensorflow.python.ops.math_ops.maximum",
    "tensorflow.python.ops.math_ops.multiply",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.sqrt",
    "tensorflow.python.ops.math_ops.square"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.losses.metric_learning.script_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.script_ops"
  },
  "type": "import"
 },
 "tf_slim.losses.metric_learning.sparse_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.sparse_ops"
  },
  "type": "import"
 },
 "tf_slim.losses.metric_learning.sparse_tensor": {
  "data": {
   "shadows": "tensorflow.python.framework.sparse_tensor"
  },
  "type": "import"
 },
 "tf_slim.losses.metric_learning.summary": {
  "data": {
   "shadows": "tensorflow.python.summary.summary"
  },
  "type": "import"
 },
 "tf_slim.losses.metric_learning.tensor_shape": {
  "data": {
   "shadows": "tensorflow.python.framework.tensor_shape"
  },
  "type": "import"
 },
 "tf_slim.losses.metric_learning.triplet_semihard_loss": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.diag",
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.array_ops.size",
    "tensorflow.python.ops.array_ops.tile",
    "tensorflow.python.ops.array_ops.transpose",
    "tensorflow.python.ops.array_ops.where",
    "tensorflow.python.ops.math_ops.add",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.equal",
    "tensorflow.python.ops.math_ops.greater",
    "tensorflow.python.ops.math_ops.logical_and",
    "tensorflow.python.ops.math_ops.logical_not",
    "tensorflow.python.ops.math_ops.maximum",
    "tensorflow.python.ops.math_ops.multiply",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.truediv",
    "tf_slim.losses.metric_learning.masked_maximum",
    "tf_slim.losses.metric_learning.masked_minimum",
    "tf_slim.losses.metric_learning.pairwise_distance"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning.update_1d_tensor": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.slice",
    "tensorflow.python.ops.array_ops.squeeze"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning.update_all_medoids": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.constant",
    "tensorflow.python.ops.array_ops.size",
    "tensorflow.python.ops.array_ops.unique",
    "tensorflow.python.ops.control_flow_ops.while_loop"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning.update_all_medoids.func_body_augmented_pam": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.ops.array_ops.gather",
    "tensorflow.python.ops.array_ops.transpose",
    "tensorflow.python.ops.array_ops.where",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.equal",
    "tf_slim.losses.metric_learning.update_medoid_per_cluster"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning.update_all_medoids.func_cond_augmented_pam": {
  "data": {
   "lineno": 852
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning.update_medoid_per_cluster": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.ops.array_ops.constant",
    "tensorflow.python.ops.array_ops.size",
    "tensorflow.python.ops.array_ops.squeeze",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.control_flow_ops.while_loop",
    "tensorflow.python.ops.math_ops.add",
    "tensorflow.python.ops.math_ops.argmax",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tf_slim.losses.metric_learning.update_1d_tensor"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning.update_medoid_per_cluster.func_body": {
  "data": {
   "lineno": 802,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.math_ops.cast",
    "tf_slim.losses.metric_learning.compute_clustering_score",
    "tf_slim.losses.metric_learning.get_cluster_assignment",
    "tf_slim.losses.metric_learning.update_1d_tensor"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning.update_medoid_per_cluster.func_cond": {
  "data": {
   "lineno": 798
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning_test": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "tensorflow.python.platform.test.main"
   ]
  },
  "type": "module"
 },
 "tf_slim.losses.metric_learning_test.ClusterLossTest": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.losses.metric_learning_test.ClusterLossTest._genClusters": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "numpy.float32",
    "sklearn.datasets.make_blobs"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning_test.ClusterLossTest.testClusteringLossPAMOff": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tf_slim.losses.metric_learning.cluster_loss",
    "tf_slim.losses.metric_learning_test.HAS_SKLEARN",
    "tf_slim.losses.metric_learning_test.compute_cluster_loss_numpy"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning_test.ClusterLossTest.testClusteringLossPAMOn": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tf_slim.losses.metric_learning.cluster_loss",
    "tf_slim.losses.metric_learning_test.HAS_SKLEARN",
    "tf_slim.losses.metric_learning_test.compute_cluster_loss_numpy"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning_test.ContrastiveLossTest": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.losses.metric_learning_test.ContrastiveLossTest.testContrastive": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.maximum",
    "numpy.mean",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.sqrt",
    "numpy.square",
    "numpy.sum",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tf_slim.losses.metric_learning.contrastive_loss"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning_test.ForwardGreedyFacility": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tf_slim.losses.metric_learning_test.ForwardGreedyFacility.__init__": {
  "data": {
   "lineno": 373
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning_test.ForwardGreedyFacility._augmented_update_medoid_ics_in_place": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.sum",
    "numpy.where",
    "range",
    "sklearn.metrics.normalized_mutual_info_score",
    "sum"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning_test.ForwardGreedyFacility._check_array": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning_test.ForwardGreedyFacility._check_init_args": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning_test.ForwardGreedyFacility._get_cluster_ics": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "numpy.argmin"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning_test.ForwardGreedyFacility._get_facility_distance": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "numpy.min",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning_test.ForwardGreedyFacility.loss_augmented_fit": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "list",
    "numpy.argmax",
    "numpy.float32",
    "numpy.min",
    "numpy.sum",
    "numpy.zeros",
    "range",
    "sklearn.metrics.normalized_mutual_info_score",
    "tf_slim.losses.metric_learning_test.pairwise_distance_np"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning_test.ForwardGreedyFacility.pam_augmented_fit": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "numpy.float32",
    "print",
    "range",
    "sklearn.metrics.normalized_mutual_info_score",
    "tf_slim.losses.metric_learning_test.pairwise_distance_np"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning_test.HAS_SKLEARN": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "tf_slim.losses.metric_learning_test.LiftedStructLossTest": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.losses.metric_learning_test.LiftedStructLossTest.testLiftedStruct": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "max",
    "numpy.array",
    "numpy.equal",
    "numpy.exp",
    "numpy.float32",
    "numpy.log",
    "numpy.max",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.reshape",
    "numpy.sum",
    "range",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tf_slim.losses.metric_learning.lifted_struct_loss",
    "tf_slim.losses.metric_learning_test.pairwise_distance_np"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning_test.NpairsLossMultiLabelTest": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.losses.metric_learning_test.NpairsLossMultiLabelTest.testNpairsMultiLabel": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.float",
    "numpy.float32",
    "numpy.matmul",
    "numpy.mean",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.square",
    "numpy.sum",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.math_ops.reduce_mean",
    "tensorflow.python.ops.nn.softmax_cross_entropy_with_logits",
    "tf_slim.losses.metric_learning.npairs_loss_multilabel",
    "tf_slim.losses.metric_learning_test.convert_to_list_of_sparse_tensor"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning_test.NpairsLossMultiLabelTest.testNpairsMultiLabelLossWithSingleLabelEqualsNpairsLoss": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float32",
    "numpy.identity",
    "numpy.random.rand",
    "numpy.reshape",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tf_slim.losses.metric_learning.npairs_loss",
    "tf_slim.losses.metric_learning.npairs_loss_multilabel",
    "tf_slim.losses.metric_learning_test.convert_to_list_of_sparse_tensor"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning_test.NpairsLossTest": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.losses.metric_learning_test.NpairsLossTest.testNpairs": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "numpy.equal",
    "numpy.float32",
    "numpy.matmul",
    "numpy.mean",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.reshape",
    "numpy.square",
    "numpy.sum",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.math_ops.reduce_mean",
    "tensorflow.python.ops.nn.softmax_cross_entropy_with_logits",
    "tf_slim.losses.metric_learning.npairs_loss"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning_test.TripletSemiHardLossTest": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.losses.metric_learning_test.TripletSemiHardLossTest.testTripletSemiHard": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "len",
    "numpy.equal",
    "numpy.float32",
    "numpy.maximum",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.reshape",
    "range",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tf_slim.losses.metric_learning.triplet_semihard_loss",
    "tf_slim.losses.metric_learning_test.pairwise_distance_np"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.losses.metric_learning_test.compute_cluster_loss_numpy": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.maximum",
    "numpy.unique",
    "tf_slim.losses.metric_learning_test.ForwardGreedyFacility",
    "tf_slim.losses.metric_learning_test.compute_ground_truth_cluster_score"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning_test.compute_ground_truth_cluster_score": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.min",
    "numpy.sum",
    "numpy.unique",
    "tf_slim.losses.metric_learning_test.pairwise_distance_np"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning_test.convert_to_list_of_sparse_tensor": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.ones",
    "range",
    "tensorflow.python.framework.sparse_tensor.SparseTensor"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning_test.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "tf_slim.losses.metric_learning_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.losses.metric_learning_test.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tf_slim.losses.metric_learning_test.metric_learning": {
  "data": {
   "shadows": "tf_slim.losses.metric_learning"
  },
  "type": "import"
 },
 "tf_slim.losses.metric_learning_test.metrics": {
  "data": {
   "shadows": "sklearn.metrics"
  },
  "type": "import"
 },
 "tf_slim.losses.metric_learning_test.nn": {
  "data": {
   "shadows": "tensorflow.python.ops.nn"
  },
  "type": "import"
 },
 "tf_slim.losses.metric_learning_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tf_slim.losses.metric_learning_test.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tf_slim.losses.metric_learning_test.pairwise_distance_np": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.linalg.norm",
    "numpy.triu_indices",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.losses.metric_learning_test.setUpModule": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "tensorflow.compat.v1.disable_eager_execution"
   ]
  },
  "type": "function"
 },
 "tf_slim.losses.metric_learning_test.sparse_tensor": {
  "data": {
   "shadows": "tensorflow.python.framework.sparse_tensor"
  },
  "type": "import"
 },
 "tf_slim.losses.metric_learning_test.test": {
  "data": {
   "shadows": "tensorflow.python.platform.test"
  },
  "type": "import"
 },
 "tf_slim.losses.metric_learning_test.tf": {
  "data": {
   "shadows": "tensorflow.compat.v1"
  },
  "type": "import"
 },
 "tf_slim.losses.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.losses.remove_undocumented": {
  "data": {
   "shadows": "tensorflow.python.util.all_util.remove_undocumented"
  },
  "type": "import"
 },
 "tf_slim.metrics": {
  "data": {},
  "type": "module"
 },
 "tf_slim.metrics.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.metrics.accuracy": {
  "data": {
   "shadows": "tf_slim.metrics.classification.accuracy"
  },
  "type": "import"
 },
 "tf_slim.metrics.aggregate_metric_map": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.aggregate_metric_map"
  },
  "type": "import"
 },
 "tf_slim.metrics.aggregate_metrics": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.aggregate_metrics"
  },
  "type": "import"
 },
 "tf_slim.metrics.auc_using_histogram": {
  "data": {
   "shadows": "tf_slim.metrics.histogram_ops.auc_using_histogram"
  },
  "type": "import"
 },
 "tf_slim.metrics.auc_with_confidence_intervals": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.auc_with_confidence_intervals"
  },
  "type": "import"
 },
 "tf_slim.metrics.classification": {
  "data": {},
  "type": "module"
 },
 "tf_slim.metrics.classification.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.metrics.classification.accuracy": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.dtypes.bool",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.string",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.ones_like",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.div",
    "tensorflow.python.ops.math_ops.equal",
    "tensorflow.python.ops.math_ops.multiply",
    "tensorflow.python.ops.math_ops.reduce_mean",
    "tensorflow.python.ops.math_ops.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.classification.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tf_slim.metrics.classification.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.metrics.classification.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tf_slim.metrics.classification.f1_score": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "compute_best_f1_score",
    "range",
    "tensorflow.compat.v1.distribute.get_replica_context",
    "tensorflow.python.framework.ops.add_to_collections",
    "tensorflow.python.ops.metrics_impl._confusion_matrix_at_thresholds",
    "tensorflow.python.ops.metrics_impl._remove_squeezable_dimensions",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.classification.f1_score.compute_best_f1_score": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.div",
    "tensorflow.python.ops.math_ops.reduce_max"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.classification.f1_score.f1_across_replicas": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "compute_best_f1_score",
    "tensorflow.python.framework.ops.add_to_collections"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.classification.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tf_slim.metrics.classification.metrics_impl": {
  "data": {
   "shadows": "tensorflow.python.ops.metrics_impl"
  },
  "type": "import"
 },
 "tf_slim.metrics.classification.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tf_slim.metrics.classification.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.metrics.classification.tf": {
  "data": {
   "shadows": "tensorflow.compat.v1"
  },
  "type": "import"
 },
 "tf_slim.metrics.classification.variable_scope": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tf_slim.metrics.classification_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.test.main"
   ]
  },
  "type": "module"
 },
 "tf_slim.metrics.classification_test.ClassificationTest": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.classification_test.ClassificationTest.testAccuracy1D": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.metrics.classification.accuracy"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.classification_test.ClassificationTest.testAccuracy1DBool": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.bool",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.metrics.classification.accuracy"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.classification_test.ClassificationTest.testAccuracy1DInt64": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.metrics.classification.accuracy"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.classification_test.ClassificationTest.testAccuracy1DString": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.string",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.metrics.classification.accuracy"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.classification_test.ClassificationTest.testAccuracy1DWeighted": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.metrics.classification.accuracy"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.classification_test.ClassificationTest.testAccuracy1DWeightedBroadcast": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.metrics.classification.accuracy"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.classification_test.ClassificationTest.testAccuracyDtypeMismatch": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.metrics.classification.accuracy"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.classification_test.ClassificationTest.testAccuracyFloatLabels": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.metrics.classification.accuracy"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.classification_test.F1ScoreTest": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.classification_test.F1ScoreTest.setUp": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "numpy.random.seed",
    "super",
    "tf_slim.metrics.classification_test.F1ScoreTest"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.classification_test.F1ScoreTest.testAllCorrect": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "numpy.random.randint",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.classification.f1_score"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.classification_test.F1ScoreTest.testAllIncorrect": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "numpy.random.randint",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.classification.f1_score"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.classification_test.F1ScoreTest.testMetricsCollection": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.classification.f1_score"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.classification_test.F1ScoreTest.testSomeCorrect": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.classification.f1_score"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.classification_test.F1ScoreTest.testUpdatesCollection": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.classification.f1_score"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.classification_test.F1ScoreTest.testValueTensorIsIdempotent": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.classification.f1_score"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.classification_test.F1ScoreTest.testVars": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "set",
    "tensorflow.python.framework.ops.GraphKeys.METRIC_VARIABLES",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.variables.local_variables",
    "tf_slim.metrics.classification.f1_score"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.classification_test.F1ScoreTest.testWeights1d": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.classification.f1_score"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.classification_test.F1ScoreTest.testWeights2d": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.classification.f1_score"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.classification_test.F1ScoreTest.testWithMultipleUpdates": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "int",
    "numpy.float32",
    "numpy.random.normal",
    "numpy.random.randint",
    "range",
    "tensorflow.compat.v1.data.Dataset.from_tensor_slices",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.classification.f1_score"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.classification_test.F1ScoreTest.testZeroLabelsPredictions": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.classification.f1_score"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.classification_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.metrics.classification_test.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tf_slim.metrics.classification_test.classification": {
  "data": {
   "shadows": "tf_slim.metrics.classification"
  },
  "type": "import"
 },
 "tf_slim.metrics.classification_test.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tf_slim.metrics.classification_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.metrics.classification_test.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tf_slim.metrics.classification_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tf_slim.metrics.classification_test.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tf_slim.metrics.classification_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.metrics.classification_test.random_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.random_ops"
  },
  "type": "import"
 },
 "tf_slim.metrics.classification_test.setUpModule": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "tensorflow.compat.v1.disable_eager_execution"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.classification_test.test": {
  "data": {
   "shadows": "tensorflow.python.platform.test"
  },
  "type": "import"
 },
 "tf_slim.metrics.classification_test.tf": {
  "data": {
   "shadows": "tensorflow.compat.v1"
  },
  "type": "import"
 },
 "tf_slim.metrics.classification_test.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tf_slim.metrics.cohen_kappa": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.cohen_kappa"
  },
  "type": "import"
 },
 "tf_slim.metrics.count": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.count"
  },
  "type": "import"
 },
 "tf_slim.metrics.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.metrics.f1_score": {
  "data": {
   "shadows": "tf_slim.metrics.classification.f1_score"
  },
  "type": "import"
 },
 "tf_slim.metrics.histogram_ops": {
  "data": {},
  "type": "module"
 },
 "tf_slim.metrics.histogram_ops._auc_convert_hist_to_auc": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.reverse_v2",
    "tensorflow.python.ops.math_ops.add",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.reduce_sum",
    "tensorflow.python.ops.math_ops.truediv",
    "tf_slim.metrics.histogram_ops._strict_1d_cumsum"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.histogram_ops._auc_hist_accumulate": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "tensorflow.python.ops.control_flow_ops.group",
    "tensorflow.python.ops.init_ops.zeros_initializer",
    "tensorflow.python.ops.variable_scope.get_variable",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.histogram_ops._check_labels_and_scores": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.dtypes.bool",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.rank",
    "tensorflow.python.ops.array_ops.shape",
    "tensorflow.python.ops.control_flow_ops.Assert",
    "tensorflow.python.ops.math_ops.equal"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.histogram_ops._make_auc_histograms": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.ops.array_ops.boolean_mask",
    "tensorflow.python.ops.histogram_ops.histogram_fixed_width",
    "tensorflow.python.ops.math_ops.logical_not",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.histogram_ops._strict_1d_cumsum": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.cumsum"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.histogram_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.metrics.histogram_ops.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tf_slim.metrics.histogram_ops.auc_using_histogram": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.LOCAL_VARIABLES",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.confusion_matrix.remove_squeezable_dimensions",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.metrics.histogram_ops._auc_convert_hist_to_auc",
    "tf_slim.metrics.histogram_ops._auc_hist_accumulate",
    "tf_slim.metrics.histogram_ops._check_labels_and_scores",
    "tf_slim.metrics.histogram_ops._make_auc_histograms"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.histogram_ops.cm": {
  "data": {
   "shadows": "tensorflow.python.ops.confusion_matrix"
  },
  "type": "import"
 },
 "tf_slim.metrics.histogram_ops.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tf_slim.metrics.histogram_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.metrics.histogram_ops.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tf_slim.metrics.histogram_ops.histogram_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.histogram_ops"
  },
  "type": "import"
 },
 "tf_slim.metrics.histogram_ops.init_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.init_ops"
  },
  "type": "import"
 },
 "tf_slim.metrics.histogram_ops.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tf_slim.metrics.histogram_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tf_slim.metrics.histogram_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.metrics.histogram_ops.variable_scope": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tf_slim.metrics.histogram_ops_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.test.main"
   ]
  },
  "type": "module"
 },
 "tf_slim.metrics.histogram_ops_test.AUCUsingHistogramTest": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.histogram_ops_test.AUCUsingHistogramTest._check_auc": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "range",
    "tensorflow.python.framework.dtypes.bool",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.histogram_ops.auc_using_histogram",
    "tf_slim.metrics.histogram_ops_test.synthetic_data"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.histogram_ops_test.AUCUsingHistogramTest.setUp": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "super",
    "tf_slim.metrics.histogram_ops_test.AUCUsingHistogramTest"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.histogram_ops_test.AUCUsingHistogramTest.test_empty_labels_and_scores_gives_nan_auc": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "numpy.isnan",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.bool",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.histogram_ops.auc_using_histogram"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.histogram_ops_test.AUCUsingHistogramTest.test_large_class_imbalance_still_ok": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "tf_slim.metrics.histogram_ops_test.AUCUsingHistogramTest.test_many_common_conditions": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "tf_slim.metrics.histogram_ops_test.AUCUsingHistogramTest.test_perfect_scores_gives_auc_1": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "tf_slim.metrics.histogram_ops_test.AUCUsingHistogramTest.test_super_accuracy_with_many_bins_and_records": {
  "data": {
   "lineno": 128
  },
  "type": "function"
 },
 "tf_slim.metrics.histogram_ops_test.AUCUsingHistogramTest.test_terrible_scores_gives_auc_0": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "tf_slim.metrics.histogram_ops_test.Strict1dCumsumTest": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.histogram_ops_test.Strict1dCumsumTest.test_empty_tensor_returns_empty": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "tensorflow.python.framework.constant_op.constant",
    "tf_slim.metrics.histogram_ops._strict_1d_cumsum"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.histogram_ops_test.Strict1dCumsumTest.test_length_1_tensor_works": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tf_slim.metrics.histogram_ops._strict_1d_cumsum"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.histogram_ops_test.Strict1dCumsumTest.test_length_3_tensor_works": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tf_slim.metrics.histogram_ops._strict_1d_cumsum"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.histogram_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.metrics.histogram_ops_test.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tf_slim.metrics.histogram_ops_test.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tf_slim.metrics.histogram_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.metrics.histogram_ops_test.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tf_slim.metrics.histogram_ops_test.histogram_ops": {
  "data": {
   "shadows": "tf_slim.metrics.histogram_ops"
  },
  "type": "import"
 },
 "tf_slim.metrics.histogram_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tf_slim.metrics.histogram_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.metrics.histogram_ops_test.setUpModule": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "tensorflow.compat.v1.disable_eager_execution"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.histogram_ops_test.synthetic_data": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "bool",
    "numpy.float32",
    "numpy.nan",
    "numpy.ones",
    "reshape"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.histogram_ops_test.synthetic_data.reshape": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "tf_slim.metrics.histogram_ops_test.test": {
  "data": {
   "shadows": "tensorflow.python.platform.test"
  },
  "type": "import"
 },
 "tf_slim.metrics.histogram_ops_test.tf": {
  "data": {
   "shadows": "tensorflow.compat.v1"
  },
  "type": "import"
 },
 "tf_slim.metrics.histogram_ops_test.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tf_slim.metrics.metric_ops_large_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.test.main"
   ]
  },
  "type": "module"
 },
 "tf_slim.metrics.metric_ops_large_test.StreamingPrecisionRecallAtEqualThresholdsLargeTest": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.metric_ops_large_test.StreamingPrecisionRecallAtEqualThresholdsLargeTest.setUp": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.random.seed",
    "super",
    "tf_slim.metrics.metric_ops_large_test.StreamingPrecisionRecallAtEqualThresholdsLargeTest"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_large_test.StreamingPrecisionRecallAtEqualThresholdsLargeTest.testLargeCase": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.product",
    "six.moves.xrange",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.math_ops.greater",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops.precision_recall_at_equal_thresholds"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_large_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.metrics.metric_ops_large_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.metrics.metric_ops_large_test.dtypes_lib": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tf_slim.metrics.metric_ops_large_test.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tf_slim.metrics.metric_ops_large_test.metric_ops": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops"
  },
  "type": "import"
 },
 "tf_slim.metrics.metric_ops_large_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tf_slim.metrics.metric_ops_large_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.metrics.metric_ops_large_test.random_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.random_ops"
  },
  "type": "import"
 },
 "tf_slim.metrics.metric_ops_large_test.setUpModule": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "tensorflow.compat.v1.disable_eager_execution"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_large_test.test": {
  "data": {
   "shadows": "tensorflow.python.platform.test"
  },
  "type": "import"
 },
 "tf_slim.metrics.metric_ops_large_test.tf": {
  "data": {
   "shadows": "tensorflow.compat.v1"
  },
  "type": "import"
 },
 "tf_slim.metrics.metric_ops_large_test.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tf_slim.metrics.metric_ops_large_test.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "tf_slim.metrics.metric_ops_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "float",
    "tensorflow.compat.v1.test.main",
    "tf_slim.metrics"
   ]
  },
  "type": "module"
 },
 "tf_slim.metrics.metric_ops_test.AggregateMetricMapTest": {
  "data": {
   "lineno": 6876,
   "symbols_in_volume": [
    "tensorflow.compat.v1.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.metric_ops_test.AggregateMetricMapTest.testAggregateMultipleMetricsReturnsListsInOrder": {
  "data": {
   "lineno": 6878,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.AggregateMetricsTest": {
  "data": {
   "lineno": 6843,
   "symbols_in_volume": [
    "tensorflow.compat.v1.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.metric_ops_test.AggregateMetricsTest.testAggregateMultipleMetricsReturnsListsInOrder": {
  "data": {
   "lineno": 6860,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.AggregateMetricsTest.testAggregateNoMetricsRaisesValueError": {
  "data": {
   "lineno": 6845,
   "symbols_in_volume": [
    "ValueError",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.AggregateMetricsTest.testAggregateSingleMetricReturnsOneItemLists": {
  "data": {
   "lineno": 6849,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.AucWithConfidenceIntervalsTest": {
  "data": {
   "lineno": 2184,
   "symbols_in_volume": [
    "tensorflow.compat.v1.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.metric_ops_test.AucWithConfidenceIntervalsTest._testCase": {
  "data": {
   "lineno": 2206,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.auc_with_confidence_intervals"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.AucWithConfidenceIntervalsTest._testResultsEqual": {
  "data": {
   "lineno": 2191,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.AucWithConfidenceIntervalsTest.setUp": {
  "data": {
   "lineno": 2186,
   "symbols_in_volume": [
    "numpy.random.seed",
    "super",
    "tensorflow.python.framework.ops.reset_default_graph",
    "tf_slim.metrics.metric_ops_test.AucWithConfidenceIntervalsTest"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.AucWithConfidenceIntervalsTest.testAllLabelsOnes": {
  "data": {
   "lineno": 2294
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.AucWithConfidenceIntervalsTest.testAllLabelsZeros": {
  "data": {
   "lineno": 2304
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.AucWithConfidenceIntervalsTest.testAucAllCorrect": {
  "data": {
   "lineno": 2233
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.AucWithConfidenceIntervalsTest.testAucEqualOne": {
  "data": {
   "lineno": 2264
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.AucWithConfidenceIntervalsTest.testAucEqualZero": {
  "data": {
   "lineno": 2274
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.AucWithConfidenceIntervalsTest.testAucUnorderedInput": {
  "data": {
   "lineno": 2243
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.AucWithConfidenceIntervalsTest.testAucWithWeights": {
  "data": {
   "lineno": 2253
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.AucWithConfidenceIntervalsTest.testExceptionOnFloatLabels": {
  "data": {
   "lineno": 2354,
   "symbols_in_volume": [
    "TypeError",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.AucWithConfidenceIntervalsTest.testExceptionOnGreaterThanOneLabel": {
  "data": {
   "lineno": 2362,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.errors_impl.InvalidArgumentError",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.AucWithConfidenceIntervalsTest.testExceptionOnNegativeLabel": {
  "data": {
   "lineno": 2373,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.errors_impl.InvalidArgumentError",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.AucWithConfidenceIntervalsTest.testNonZeroOnePredictions": {
  "data": {
   "lineno": 2284
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.AucWithConfidenceIntervalsTest.testWeightSumLessThanOneAll": {
  "data": {
   "lineno": 2314
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.AucWithConfidenceIntervalsTest.testWithMultipleUpdates": {
  "data": {
   "lineno": 2325,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.concatenate",
    "numpy.random.normal",
    "numpy.random.randint",
    "six.moves.xrange",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.GraphKeys.LOCAL_VARIABLES",
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.variables.VariableV1",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test._np_auc",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.CohenKappaTest": {
  "data": {
   "lineno": 7059,
   "symbols_in_volume": [
    "tensorflow.compat.v1.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.metric_ops_test.CohenKappaTest._confusion_matrix_to_samples": {
  "data": {
   "lineno": 7061,
   "symbols_in_volume": [
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.CohenKappaTest.setUp": {
  "data": {
   "lineno": 7070,
   "symbols_in_volume": [
    "numpy.random.seed",
    "super",
    "tensorflow.python.framework.ops.reset_default_graph",
    "tf_slim.metrics.metric_ops_test.CohenKappaTest"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.CohenKappaTest.testAllCorrect": {
  "data": {
   "lineno": 7157,
   "symbols_in_volume": [
    "numpy.arange",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.CohenKappaTest.testAllIncorrect": {
  "data": {
   "lineno": 7175,
   "symbols_in_volume": [
    "numpy.arange",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.CohenKappaTest.testBasic": {
  "data": {
   "lineno": 7123,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.ones_like",
    "numpy.reshape",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes",
    "tensorflow.python.framework.dtypes.int16",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.CohenKappaTest.testConditionalPackingOptimization": {
  "data": {
   "lineno": 7263,
   "symbols_in_volume": [
    "print",
    "range",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.streaming_concat"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.CohenKappaTest.testInvalidDimension": {
  "data": {
   "lineno": 7251,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.CohenKappaTest.testInvalidNumClasses": {
  "data": {
   "lineno": 7245,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.CohenKappaTest.testMetricsCollection": {
  "data": {
   "lineno": 7086,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.CohenKappaTest.testUpdatesCollection": {
  "data": {
   "lineno": 7095,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.CohenKappaTest.testValueTensorIsIdempotent": {
  "data": {
   "lineno": 7104,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.CohenKappaTest.testVars": {
  "data": {
   "lineno": 7075,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test._assert_metric_variables",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.CohenKappaTest.testWeighted": {
  "data": {
   "lineno": 7194,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.int32",
    "numpy.sum",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.CohenKappaTest.testWithMultipleUpdates": {
  "data": {
   "lineno": 7213,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.int32",
    "numpy.sum",
    "range",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.CountTest": {
  "data": {
   "lineno": 6897,
   "symbols_in_volume": [
    "tensorflow.compat.v1.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.metric_ops_test.CountTest.test1dWeightedValues": {
  "data": {
   "lineno": 6960,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.data_flow_ops.FIFOQueue",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test._enqueue_vector",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.CountTest.test1dWeightedValues_placeholders": {
  "data": {
   "lineno": 6987,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.data_flow_ops.FIFOQueue",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test._enqueue_vector",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.CountTest.test2dWeightedValues": {
  "data": {
   "lineno": 7009,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.data_flow_ops.FIFOQueue",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test._enqueue_vector",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.CountTest.test2dWeightedValues_placeholders": {
  "data": {
   "lineno": 7036,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.data_flow_ops.FIFOQueue",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test._enqueue_vector",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.CountTest.testBasic": {
  "data": {
   "lineno": 6922,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.data_flow_ops.FIFOQueue",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test._enqueue_vector",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.CountTest.testMetricsCollection": {
  "data": {
   "lineno": 6903,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.CountTest.testReturnType": {
  "data": {
   "lineno": 6915,
   "symbols_in_volume": [
    "tensorflow.compat.v1.Variable",
    "tensorflow.python.framework.ops.Operation",
    "tensorflow.python.framework.ops.Tensor",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.CountTest.testUpdateOpsReturnsCurrentValue": {
  "data": {
   "lineno": 6939,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.data_flow_ops.FIFOQueue",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test._enqueue_vector",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.CountTest.testUpdatesCollection": {
  "data": {
   "lineno": 6909,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.CountTest.testVars": {
  "data": {
   "lineno": 6899,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test._assert_metric_variables",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.NAN": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "tf_slim.metrics.metric_ops_test.PcntBelowThreshTest": {
  "data": {
   "lineno": 6360,
   "symbols_in_volume": [
    "tensorflow.compat.v1.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.metric_ops_test.PcntBelowThreshTest.testMetricsCollection": {
  "data": {
   "lineno": 6369,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.PcntBelowThreshTest.testOneUpdate": {
  "data": {
   "lineno": 6385,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.PcntBelowThreshTest.testSomePresentOneUpdate": {
  "data": {
   "lineno": 6405,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.PcntBelowThreshTest.testUpdatesCollection": {
  "data": {
   "lineno": 6377,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.PcntBelowThreshTest.testVars": {
  "data": {
   "lineno": 6362,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test._assert_metric_variables",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.PrecisionAtRecallTest": {
  "data": {
   "lineno": 3546,
   "symbols_in_volume": [
    "tensorflow.compat.v1.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.metric_ops_test.PrecisionAtRecallTest.setUp": {
  "data": {
   "lineno": 3548,
   "symbols_in_volume": [
    "numpy.random.seed",
    "super",
    "tensorflow.python.framework.ops.reset_default_graph",
    "tf_slim.metrics.metric_ops_test.PrecisionAtRecallTest"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.PrecisionAtRecallTest.testAllCorrect": {
  "data": {
   "lineno": 3602,
   "symbols_in_volume": [
    "numpy.random.randint",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.PrecisionAtRecallTest.testAllIncorrect": {
  "data": {
   "lineno": 3615,
   "symbols_in_volume": [
    "numpy.random.randint",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.math_ops.reduce_mean",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.PrecisionAtRecallTest.testMetricsCollection": {
  "data": {
   "lineno": 3564,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.PrecisionAtRecallTest.testSomeCorrectHighRecall": {
  "data": {
   "lineno": 3629,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.PrecisionAtRecallTest.testSomeCorrectLowRecall": {
  "data": {
   "lineno": 3644,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.PrecisionAtRecallTest.testUpdatesCollection": {
  "data": {
   "lineno": 3573,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.PrecisionAtRecallTest.testValueTensorIsIdempotent": {
  "data": {
   "lineno": 3582,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.PrecisionAtRecallTest.testVars": {
  "data": {
   "lineno": 3553,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test._assert_metric_variables",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.PrecisionAtRecallTest.testWeighted_multipleLabelDtypes": {
  "data": {
   "lineno": 3659,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.bool",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.RecallAtPrecisionTest": {
  "data": {
   "lineno": 3374,
   "symbols_in_volume": [
    "tensorflow.compat.v1.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.metric_ops_test.RecallAtPrecisionTest._test_strict_mode": {
  "data": {
   "lineno": 3491,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.RecallAtPrecisionTest.setUp": {
  "data": {
   "lineno": 3376,
   "symbols_in_volume": [
    "numpy.random.seed",
    "super",
    "tensorflow.python.framework.ops.reset_default_graph",
    "tf_slim.metrics.metric_ops_test.RecallAtPrecisionTest"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.RecallAtPrecisionTest.testAllCorrect": {
  "data": {
   "lineno": 3429,
   "symbols_in_volume": [
    "numpy.random.randint",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.RecallAtPrecisionTest.testMetricsCollection": {
  "data": {
   "lineno": 3391,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.RecallAtPrecisionTest.testSomeCorrectHighPrecision": {
  "data": {
   "lineno": 3442,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.RecallAtPrecisionTest.testSomeCorrectLowPrecision": {
  "data": {
   "lineno": 3457,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.RecallAtPrecisionTest.testStrictMode_Off": {
  "data": {
   "lineno": 3515
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.RecallAtPrecisionTest.testStrictMode_OnAndFail": {
  "data": {
   "lineno": 3522
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.RecallAtPrecisionTest.testStrictMode_OnAndSucceed": {
  "data": {
   "lineno": 3533
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.RecallAtPrecisionTest.testUpdatesCollection": {
  "data": {
   "lineno": 3400,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.RecallAtPrecisionTest.testValueTensorIsIdempotent": {
  "data": {
   "lineno": 3409,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.RecallAtPrecisionTest.testVars": {
  "data": {
   "lineno": 3381,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test._assert_metric_variables",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.RecallAtPrecisionTest.testWeighted": {
  "data": {
   "lineno": 3473,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingAUCTest": {
  "data": {
   "lineno": 1693,
   "symbols_in_volume": [
    "tensorflow.compat.v1.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.metric_ops_test.StreamingAUCTest.allCorrectAsExpected": {
  "data": {
   "lineno": 1759,
   "symbols_in_volume": [
    "numpy.random.randint",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingAUCTest.setUp": {
  "data": {
   "lineno": 1695,
   "symbols_in_volume": [
    "numpy.random.seed",
    "super",
    "tensorflow.python.framework.ops.reset_default_graph",
    "tf_slim.metrics.metric_ops_test.StreamingAUCTest"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingAUCTest.testAUCPRSpecialCase": {
  "data": {
   "lineno": 1812,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingAUCTest.testAllCorrect": {
  "data": {
   "lineno": 1756
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingAUCTest.testAllIncorrect": {
  "data": {
   "lineno": 1852,
   "symbols_in_volume": [
    "numpy.random.randint",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingAUCTest.testAnotherAUCPRSpecialCase": {
  "data": {
   "lineno": 1824,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingAUCTest.testMetricsCollection": {
  "data": {
   "lineno": 1707,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingAUCTest.testPredictionsOutOfRange": {
  "data": {
   "lineno": 1742,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.errors_impl.InvalidArgumentError",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingAUCTest.testRecallOneAndPrecisionOneGivesOnePRAUC": {
  "data": {
   "lineno": 1876,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingAUCTest.testSomeCorrect": {
  "data": {
   "lineno": 1772,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingAUCTest.testThirdAUCPRSpecialCase": {
  "data": {
   "lineno": 1838,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingAUCTest.testUpdatesCollection": {
  "data": {
   "lineno": 1715,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingAUCTest.testValueTensorIsIdempotent": {
  "data": {
   "lineno": 1723,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingAUCTest.testVars": {
  "data": {
   "lineno": 1700,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test._assert_metric_variables",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingAUCTest.testWeighted1d": {
  "data": {
   "lineno": 1784,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingAUCTest.testWeighted2d": {
  "data": {
   "lineno": 1798,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingAUCTest.testWithMultipleUpdates": {
  "data": {
   "lineno": 1887,
   "symbols_in_volume": [
    "_enqueue_as_batches",
    "int",
    "numpy.ones",
    "numpy.random.exponential",
    "numpy.random.normal",
    "numpy.random.randint",
    "range",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test._np_auc",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingAUCTest.testWithMultipleUpdates._enqueue_as_batches": {
  "data": {
   "lineno": 1899,
   "symbols_in_volume": [
    "numpy.float32",
    "range",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.data_flow_ops.FIFOQueue"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingAUCTest.testZeroTruePositivesAndFalseNegativesGivesOneAUC": {
  "data": {
   "lineno": 1865,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingAccuracyTest": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "tensorflow.compat.v1.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.metric_ops_test.StreamingAccuracyTest.testEffectivelyEquivalentSizes": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingAccuracyTest.testEffectivelyEquivalentSizesWithDynamicallyShapedWeight": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingAccuracyTest.testEffectivelyEquivalentSizesWithStaicShapedWeight": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.convert_to_tensor",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingAccuracyTest.testMetricsCollection": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingAccuracyTest.testMultipleUpdates": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "six.moves.xrange",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.data_flow_ops.FIFOQueue",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test._enqueue_vector",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingAccuracyTest.testMultipleUpdatesWithWeightedValues": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "six.moves.xrange",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.ops.data_flow_ops.FIFOQueue",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test._enqueue_vector",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingAccuracyTest.testPredictionsAndLabelsOfDifferentSizeRaisesValueError": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingAccuracyTest.testPredictionsAndWeightsOfDifferentSizeRaisesValueError": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingAccuracyTest.testUpdatesCollection": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingAccuracyTest.testValueTensorIsIdempotent": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingAccuracyTest.testVars": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test._assert_metric_variables",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingConcatTest": {
  "data": {
   "lineno": 6716,
   "symbols_in_volume": [
    "tensorflow.compat.v1.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.metric_ops_test.StreamingConcatTest.setUp": {
  "data": {
   "lineno": 6718,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.ops.variable_scope.enable_resource_variables",
    "tf_slim.metrics.metric_ops_test.StreamingConcatTest"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingConcatTest.testMetricsCollection": {
  "data": {
   "lineno": 6729,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingConcatTest.testNextArraySize": {
  "data": {
   "lineno": 6741,
   "symbols_in_volume": [
    "next_array_size",
    "tf_slim.metrics.metric_ops._next_array_size"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingConcatTest.testStreamingConcat": {
  "data": {
   "lineno": 6750,
   "symbols_in_volume": [
    "numpy.arange",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingConcatTest.testStreamingConcat2D": {
  "data": {
   "lineno": 6803,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.math_ops.range",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingConcatTest.testStreamingConcatErrors": {
  "data": {
   "lineno": 6812,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.array_ops.zeros",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingConcatTest.testStreamingConcatMaxSize": {
  "data": {
   "lineno": 6786,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.range",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingConcatTest.testStreamingConcatReset": {
  "data": {
   "lineno": 6826,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingConcatTest.testStreamingConcatStringValues": {
  "data": {
   "lineno": 6767,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.string",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingConcatTest.testUpdatesCollection": {
  "data": {
   "lineno": 6735,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingConcatTest.testVars": {
  "data": {
   "lineno": 6722,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test._assert_metric_variables",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingCovarianceTest": {
  "data": {
   "lineno": 5816,
   "symbols_in_volume": [
    "tensorflow.compat.v1.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.metric_ops_test.StreamingCovarianceTest.testMetricsCollection": {
  "data": {
   "lineno": 5831,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.range",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingCovarianceTest.testMultiUpdateWithErrorAndWeights": {
  "data": {
   "lineno": 5946,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.cov",
    "numpy.isnan",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.random.shuffle",
    "numpy.tile",
    "range",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.NAN",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingCovarianceTest.testMultiUpdateWithErrorNoWeights": {
  "data": {
   "lineno": 5912,
   "symbols_in_volume": [
    "numpy.cov",
    "numpy.isnan",
    "numpy.random.randn",
    "numpy.random.seed",
    "range",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.NAN",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingCovarianceTest.testSingleUpdateIdentical": {
  "data": {
   "lineno": 5868,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.cov",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.range",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingCovarianceTest.testSingleUpdateNonIdentical": {
  "data": {
   "lineno": 5880,
   "symbols_in_volume": [
    "numpy.cov",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingCovarianceTest.testSingleUpdateWithErrorAndWeights": {
  "data": {
   "lineno": 5894,
   "symbols_in_volume": [
    "numpy.cov",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingCovarianceTest.testUpdatesCollection": {
  "data": {
   "lineno": 5841,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.range",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingCovarianceTest.testValueTensorIsIdempotent": {
  "data": {
   "lineno": 5851,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.ops.random_ops.random_normal",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingCovarianceTest.testVars": {
  "data": {
   "lineno": 5818,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.range",
    "tf_slim.metrics.metric_ops_test._assert_metric_variables",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingCurvePointsTest": {
  "data": {
   "lineno": 1571,
   "symbols_in_volume": [
    "tensorflow.compat.v1.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.metric_ops_test.StreamingCurvePointsTest._testCase": {
  "data": {
   "lineno": 1626,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.streaming_curve_points"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingCurvePointsTest._testValueTensorIsIdempotent": {
  "data": {
   "lineno": 1602,
   "symbols_in_volume": [
    "numpy.random.uniform",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.streaming_curve_points"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingCurvePointsTest.setUp": {
  "data": {
   "lineno": 1573,
   "symbols_in_volume": [
    "numpy.random.seed",
    "super",
    "tensorflow.python.framework.ops.reset_default_graph",
    "tf_slim.metrics.metric_ops_test.StreamingCurvePointsTest"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingCurvePointsTest.testEdgeCasesPR": {
  "data": {
   "lineno": 1653
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingCurvePointsTest.testEdgeCasesROC": {
  "data": {
   "lineno": 1642
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingCurvePointsTest.testManyValuesPR": {
  "data": {
   "lineno": 1659
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingCurvePointsTest.testManyValuesROC": {
  "data": {
   "lineno": 1648
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingCurvePointsTest.testMetricsCollection": {
  "data": {
   "lineno": 1586,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.streaming_curve_points"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingCurvePointsTest.testUpdatesCollection": {
  "data": {
   "lineno": 1594,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.streaming_curve_points"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingCurvePointsTest.testValueTensorIsIdempotentPR": {
  "data": {
   "lineno": 1623
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingCurvePointsTest.testValueTensorIsIdempotentROC": {
  "data": {
   "lineno": 1620
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingCurvePointsTest.testVars": {
  "data": {
   "lineno": 1578,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test._assert_metric_variables",
    "tf_slim.metrics.streaming_curve_points"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingDynamicAUCTest": {
  "data": {
   "lineno": 1939,
   "symbols_in_volume": [
    "tensorflow.compat.v1.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.metric_ops_test.StreamingDynamicAUCTest.setUp": {
  "data": {
   "lineno": 1941,
   "symbols_in_volume": [
    "numpy.random.seed",
    "super",
    "tensorflow.python.framework.ops.reset_default_graph",
    "tf_slim.metrics.metric_ops_test.StreamingDynamicAUCTest"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingDynamicAUCTest.testAUCPRJumbledPredictions": {
  "data": {
   "lineno": 2121,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingDynamicAUCTest.testAUCPRPredictionsLessThanHalf": {
  "data": {
   "lineno": 2132,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingDynamicAUCTest.testAUCPRReverseIncreasingPredictions": {
  "data": {
   "lineno": 2110,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingDynamicAUCTest.testAllCorrect": {
  "data": {
   "lineno": 2022,
   "symbols_in_volume": [
    "numpy.random.randint",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingDynamicAUCTest.testAllIncorrect": {
  "data": {
   "lineno": 2041,
   "symbols_in_volume": [
    "numpy.random.randint",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingDynamicAUCTest.testAllLabelsOnes": {
  "data": {
   "lineno": 1994,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingDynamicAUCTest.testAllLabelsZeros": {
  "data": {
   "lineno": 2003,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingDynamicAUCTest.testExceptionOnGreaterThanOneLabel": {
  "data": {
   "lineno": 2060,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.errors_impl.InvalidArgumentError",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingDynamicAUCTest.testExceptionOnIncompatibleShapes": {
  "data": {
   "lineno": 2051,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingDynamicAUCTest.testExceptionOnNegativeLabel": {
  "data": {
   "lineno": 2071,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.errors_impl.InvalidArgumentError",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingDynamicAUCTest.testMetricsCollection": {
  "data": {
   "lineno": 1962,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingDynamicAUCTest.testNonZeroOnePredictions": {
  "data": {
   "lineno": 2012,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingDynamicAUCTest.testSomeCorrect": {
  "data": {
   "lineno": 2032,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingDynamicAUCTest.testUnknownCurve": {
  "data": {
   "lineno": 1946,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingDynamicAUCTest.testUpdatesCollection": {
  "data": {
   "lineno": 1970,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingDynamicAUCTest.testValueTensorIsIdempotent": {
  "data": {
   "lineno": 1978,
   "symbols_in_volume": [
    "six.moves.xrange",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingDynamicAUCTest.testVars": {
  "data": {
   "lineno": 1954,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test._assert_metric_variables",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingDynamicAUCTest.testWithMultipleUpdates": {
  "data": {
   "lineno": 2082,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.concatenate",
    "numpy.random.normal",
    "numpy.random.randint",
    "six.moves.xrange",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.GraphKeys.LOCAL_VARIABLES",
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.variables.VariableV1",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test._np_auc",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingDynamicAUCTest.testWithWeights": {
  "data": {
   "lineno": 2145,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.concatenate",
    "numpy.random.randint",
    "numpy.random.uniform",
    "six.moves.xrange",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.GraphKeys.LOCAL_VARIABLES",
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.variables.VariableV1",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test._np_auc",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFNRTest": {
  "data": {
   "lineno": 1447,
   "symbols_in_volume": [
    "tensorflow.compat.v1.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFNRTest.setUp": {
  "data": {
   "lineno": 1449,
   "symbols_in_volume": [
    "numpy.random.seed",
    "super",
    "tensorflow.python.framework.ops.reset_default_graph",
    "tf_slim.metrics.metric_ops_test.StreamingFNRTest"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFNRTest.testAllCorrect": {
  "data": {
   "lineno": 1496,
   "symbols_in_volume": [
    "numpy.random.randint",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFNRTest.testAllIncorrect": {
  "data": {
   "lineno": 1548,
   "symbols_in_volume": [
    "numpy.random.randint",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFNRTest.testMetricsCollection": {
  "data": {
   "lineno": 1461,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFNRTest.testSomeCorrect": {
  "data": {
   "lineno": 1508,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFNRTest.testUpdatesCollection": {
  "data": {
   "lineno": 1469,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFNRTest.testValueTensorIsIdempotent": {
  "data": {
   "lineno": 1477,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFNRTest.testVars": {
  "data": {
   "lineno": 1454,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test._assert_metric_variables",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFNRTest.testWeighted1d": {
  "data": {
   "lineno": 1518,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFNRTest.testWeighted2d": {
  "data": {
   "lineno": 1533,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFNRTest.testZeroFalseNegativesAndTruePositivesGivesZeroFNR": {
  "data": {
   "lineno": 1560,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFNRThresholdsTest": {
  "data": {
   "lineno": 3679,
   "symbols_in_volume": [
    "tensorflow.compat.v1.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFNRThresholdsTest.setUp": {
  "data": {
   "lineno": 3681,
   "symbols_in_volume": [
    "numpy.random.seed",
    "super",
    "tensorflow.python.framework.ops.reset_default_graph",
    "tf_slim.metrics.metric_ops_test.StreamingFNRThresholdsTest"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFNRThresholdsTest.testAllCorrect": {
  "data": {
   "lineno": 3735,
   "symbols_in_volume": [
    "numpy.random.randint",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFNRThresholdsTest.testAllIncorrect": {
  "data": {
   "lineno": 3764,
   "symbols_in_volume": [
    "numpy.random.randint",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFNRThresholdsTest.testExtremeThresholds": {
  "data": {
   "lineno": 3819,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFNRThresholdsTest.testMetricsCollection": {
  "data": {
   "lineno": 3696,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFNRThresholdsTest.testSomeCorrect": {
  "data": {
   "lineno": 3750,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFNRThresholdsTest.testUpdatesCollection": {
  "data": {
   "lineno": 3705,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFNRThresholdsTest.testValueTensorIsIdempotent": {
  "data": {
   "lineno": 3714,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFNRThresholdsTest.testVars": {
  "data": {
   "lineno": 3686,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test._assert_metric_variables",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFNRThresholdsTest.testWeights1d": {
  "data": {
   "lineno": 3779,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFNRThresholdsTest.testWeights2d": {
  "data": {
   "lineno": 3799,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFNRThresholdsTest.testWithMultipleUpdates": {
  "data": {
   "lineno": 3850,
   "symbols_in_volume": [
    "int",
    "numpy.float32",
    "numpy.random.normal",
    "numpy.random.randint",
    "range",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.data_flow_ops.FIFOQueue",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFNRThresholdsTest.testZeroLabelsPredictions": {
  "data": {
   "lineno": 3837,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFPRTest": {
  "data": {
   "lineno": 1323,
   "symbols_in_volume": [
    "tensorflow.compat.v1.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFPRTest.setUp": {
  "data": {
   "lineno": 1325,
   "symbols_in_volume": [
    "numpy.random.seed",
    "super",
    "tensorflow.python.framework.ops.reset_default_graph",
    "tf_slim.metrics.metric_ops_test.StreamingFPRTest"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFPRTest.testAllCorrect": {
  "data": {
   "lineno": 1372,
   "symbols_in_volume": [
    "numpy.random.randint",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFPRTest.testAllIncorrect": {
  "data": {
   "lineno": 1424,
   "symbols_in_volume": [
    "numpy.random.randint",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFPRTest.testMetricsCollection": {
  "data": {
   "lineno": 1337,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFPRTest.testSomeCorrect": {
  "data": {
   "lineno": 1384,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFPRTest.testUpdatesCollection": {
  "data": {
   "lineno": 1345,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFPRTest.testValueTensorIsIdempotent": {
  "data": {
   "lineno": 1353,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFPRTest.testVars": {
  "data": {
   "lineno": 1330,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test._assert_metric_variables",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFPRTest.testWeighted1d": {
  "data": {
   "lineno": 1394,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFPRTest.testWeighted2d": {
  "data": {
   "lineno": 1409,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFPRTest.testZeroFalsePositivesAndTrueNegativesGivesZeroFPR": {
  "data": {
   "lineno": 1436,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFPRThresholdsTest": {
  "data": {
   "lineno": 3141,
   "symbols_in_volume": [
    "tensorflow.compat.v1.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFPRThresholdsTest.setUp": {
  "data": {
   "lineno": 3143,
   "symbols_in_volume": [
    "numpy.random.seed",
    "super",
    "tensorflow.python.framework.ops.reset_default_graph",
    "tf_slim.metrics.metric_ops_test.StreamingFPRThresholdsTest"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFPRThresholdsTest.testAllCorrect": {
  "data": {
   "lineno": 3197,
   "symbols_in_volume": [
    "numpy.random.randint",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFPRThresholdsTest.testAllIncorrect": {
  "data": {
   "lineno": 3226,
   "symbols_in_volume": [
    "numpy.random.randint",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFPRThresholdsTest.testExtremeThresholds": {
  "data": {
   "lineno": 3281,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFPRThresholdsTest.testMetricsCollection": {
  "data": {
   "lineno": 3158,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFPRThresholdsTest.testSomeCorrect": {
  "data": {
   "lineno": 3212,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFPRThresholdsTest.testUpdatesCollection": {
  "data": {
   "lineno": 3167,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFPRThresholdsTest.testValueTensorIsIdempotent": {
  "data": {
   "lineno": 3176,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFPRThresholdsTest.testVars": {
  "data": {
   "lineno": 3148,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test._assert_metric_variables",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFPRThresholdsTest.testWeights1d": {
  "data": {
   "lineno": 3241,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFPRThresholdsTest.testWeights2d": {
  "data": {
   "lineno": 3261,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFPRThresholdsTest.testWithMultipleUpdates": {
  "data": {
   "lineno": 3312,
   "symbols_in_volume": [
    "int",
    "numpy.float32",
    "numpy.random.normal",
    "numpy.random.randint",
    "range",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.data_flow_ops.FIFOQueue",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFPRThresholdsTest.testZeroLabelsPredictions": {
  "data": {
   "lineno": 3299,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFalseNegativesAtThresholdsTest": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "tensorflow.compat.v1.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFalseNegativesAtThresholdsTest.setUp": {
  "data": {
   "lineno": 906,
   "symbols_in_volume": [
    "numpy.random.seed",
    "super",
    "tensorflow.python.framework.ops.reset_default_graph",
    "tf_slim.metrics.metric_ops_test.StreamingFalseNegativesAtThresholdsTest"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFalseNegativesAtThresholdsTest.testUnweighted": {
  "data": {
   "lineno": 920,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFalseNegativesAtThresholdsTest.testVars": {
  "data": {
   "lineno": 911,
   "symbols_in_volume": [
    "tf_slim.metrics.metric_ops_test._assert_metric_variables",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFalseNegativesAtThresholdsTest.testWeighted": {
  "data": {
   "lineno": 933,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFalseNegativesTest": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "tensorflow.compat.v1.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFalseNegativesTest.setUp": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "numpy.random.seed",
    "super",
    "tensorflow.python.framework.ops.reset_default_graph",
    "tf_slim.metrics.metric_ops_test.StreamingFalseNegativesTest"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFalseNegativesTest.testUnweighted": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.bool",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFalseNegativesTest.testVars": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "tf_slim.metrics.metric_ops_test._assert_metric_variables",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFalseNegativesTest.testWeighted": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.bool",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFalsePositivesAtThresholdsTest": {
  "data": {
   "lineno": 950,
   "symbols_in_volume": [
    "tensorflow.compat.v1.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFalsePositivesAtThresholdsTest.setUp": {
  "data": {
   "lineno": 952,
   "symbols_in_volume": [
    "numpy.random.seed",
    "super",
    "tf_slim.metrics.metric_ops_test.StreamingFalsePositivesAtThresholdsTest"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFalsePositivesAtThresholdsTest.testUnweighted": {
  "data": {
   "lineno": 961,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFalsePositivesAtThresholdsTest.testVars": {
  "data": {
   "lineno": 956,
   "symbols_in_volume": [
    "tf_slim.metrics.metric_ops_test._assert_metric_variables",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFalsePositivesAtThresholdsTest.testWeighted": {
  "data": {
   "lineno": 974,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFalsePositivesTest": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "tensorflow.compat.v1.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFalsePositivesTest.setUp": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "numpy.random.seed",
    "super",
    "tf_slim.metrics.metric_ops_test.StreamingFalsePositivesTest"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFalsePositivesTest.testUnweighted": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.bool",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFalsePositivesTest.testVars": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "tf_slim.metrics.metric_ops_test._assert_metric_variables",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingFalsePositivesTest.testWeighted": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.bool",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanAbsoluteErrorTest": {
  "data": {
   "lineno": 5411,
   "symbols_in_volume": [
    "tensorflow.compat.v1.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanAbsoluteErrorTest.testMetricsCollection": {
  "data": {
   "lineno": 5419,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanAbsoluteErrorTest.testSingleUpdateWithErrorAndWeights": {
  "data": {
   "lineno": 5453,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanAbsoluteErrorTest.testUpdatesCollection": {
  "data": {
   "lineno": 5427,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanAbsoluteErrorTest.testValueTensorIsIdempotent": {
  "data": {
   "lineno": 5435,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.ops.random_ops.random_normal",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanAbsoluteErrorTest.testVars": {
  "data": {
   "lineno": 5413,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test._assert_metric_variables",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanCosineDistanceTest": {
  "data": {
   "lineno": 6218,
   "symbols_in_volume": [
    "tensorflow.compat.v1.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanCosineDistanceTest.testMetricsCollection": {
  "data": {
   "lineno": 6230,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanCosineDistanceTest.testSingleUpdateWithError1": {
  "data": {
   "lineno": 6282,
   "symbols_in_volume": [
    "numpy.matrix",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanCosineDistanceTest.testSingleUpdateWithError2": {
  "data": {
   "lineno": 6299,
   "symbols_in_volume": [
    "numpy.matrix",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanCosineDistanceTest.testSingleUpdateWithErrorAndWeights1": {
  "data": {
   "lineno": 6321,
   "symbols_in_volume": [
    "numpy.matrix",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanCosineDistanceTest.testSingleUpdateWithErrorAndWeights2": {
  "data": {
   "lineno": 6340,
   "symbols_in_volume": [
    "numpy.matrix",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanCosineDistanceTest.testSingleUpdateZeroError": {
  "data": {
   "lineno": 6266,
   "symbols_in_volume": [
    "numpy.matrix",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanCosineDistanceTest.testUpdatesCollection": {
  "data": {
   "lineno": 6239,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanCosineDistanceTest.testValueTensorIsIdempotent": {
  "data": {
   "lineno": 6248,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.ops.random_ops.random_normal",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanCosineDistanceTest.testVars": {
  "data": {
   "lineno": 6220,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test._assert_metric_variables",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanIOUTest": {
  "data": {
   "lineno": 6429,
   "symbols_in_volume": [
    "tensorflow.compat.v1.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanIOUTest.setUp": {
  "data": {
   "lineno": 6431,
   "symbols_in_volume": [
    "numpy.random.seed",
    "super",
    "tensorflow.python.framework.ops.reset_default_graph",
    "tf_slim.metrics.metric_ops_test.StreamingMeanIOUTest"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanIOUTest.testAllCorrect": {
  "data": {
   "lineno": 6629,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanIOUTest.testAllWrong": {
  "data": {
   "lineno": 6640,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanIOUTest.testLabelsAndWeightsOfDifferentSizeRaisesValueError": {
  "data": {
   "lineno": 6467,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.array_ops.zeros",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanIOUTest.testMetricsCollections": {
  "data": {
   "lineno": 6443,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanIOUTest.testMissingClassInLabels": {
  "data": {
   "lineno": 6674,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanIOUTest.testMissingClassOverallLarge": {
  "data": {
   "lineno": 6700,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanIOUTest.testMissingClassOverallSmall": {
  "data": {
   "lineno": 6689,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanIOUTest.testMultipleUpdates": {
  "data": {
   "lineno": 6496,
   "symbols_in_volume": [
    "numpy.mean",
    "range",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.ops.data_flow_ops.FIFOQueue",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test._enqueue_vector",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanIOUTest.testMultipleUpdatesWithMissingClass": {
  "data": {
   "lineno": 6573,
   "symbols_in_volume": [
    "numpy.mean",
    "range",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.ops.data_flow_ops.FIFOQueue",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test._enqueue_vector",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanIOUTest.testMultipleUpdatesWithWeights": {
  "data": {
   "lineno": 6528,
   "symbols_in_volume": [
    "numpy.mean",
    "range",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.ops.data_flow_ops.FIFOQueue",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test._enqueue_vector",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanIOUTest.testPredictionsAndLabelsOfDifferentSizeRaisesValueError": {
  "data": {
   "lineno": 6461,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanIOUTest.testResultsWithSomeMissing": {
  "data": {
   "lineno": 6651,
   "symbols_in_volume": [
    "numpy.mean",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanIOUTest.testUpdateOpEvalIsAccumulatedConfusionMatrix": {
  "data": {
   "lineno": 6610,
   "symbols_in_volume": [
    "numpy.mean",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanIOUTest.testUpdatesCollection": {
  "data": {
   "lineno": 6452,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanIOUTest.testValueTensorIsIdempotent": {
  "data": {
   "lineno": 6475,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanIOUTest.testVars": {
  "data": {
   "lineno": 6436,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test._assert_metric_variables",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanRelativeErrorTest": {
  "data": {
   "lineno": 5469,
   "symbols_in_volume": [
    "tensorflow.compat.v1.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanRelativeErrorTest.testMetricsCollection": {
  "data": {
   "lineno": 5479,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanRelativeErrorTest.testSingleUpdateNormalizedByLabels": {
  "data": {
   "lineno": 5516,
   "symbols_in_volume": [
    "numpy.absolute",
    "numpy.asarray",
    "numpy.divide",
    "numpy.float32",
    "numpy.mean",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanRelativeErrorTest.testSingleUpdateNormalizedByZeros": {
  "data": {
   "lineno": 5534,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.float32",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.zeros_like",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanRelativeErrorTest.testUpdatesCollection": {
  "data": {
   "lineno": 5488,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanRelativeErrorTest.testValueTensorIsIdempotent": {
  "data": {
   "lineno": 5497,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.ops.random_ops.random_normal",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanRelativeErrorTest.testVars": {
  "data": {
   "lineno": 5471,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test._assert_metric_variables",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanSquaredErrorTest": {
  "data": {
   "lineno": 5551,
   "symbols_in_volume": [
    "tensorflow.compat.v1.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanSquaredErrorTest.testMetricsCollection": {
  "data": {
   "lineno": 5559,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanSquaredErrorTest.testMetricsComputedConcurrently": {
  "data": {
   "lineno": 5656,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.data_flow_ops.FIFOQueue",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test._enqueue_vector",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanSquaredErrorTest.testMultipleBatchesOfSizeOne": {
  "data": {
   "lineno": 5631,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.data_flow_ops.FIFOQueue",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test._enqueue_vector",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanSquaredErrorTest.testMultipleMetricsOnMultipleBatchesOfSizeOne": {
  "data": {
   "lineno": 5699,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.data_flow_ops.FIFOQueue",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test._enqueue_vector",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanSquaredErrorTest.testSingleUpdateWithError": {
  "data": {
   "lineno": 5603,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanSquaredErrorTest.testSingleUpdateWithErrorAndWeights": {
  "data": {
   "lineno": 5616,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanSquaredErrorTest.testSingleUpdateZeroError": {
  "data": {
   "lineno": 5592,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanSquaredErrorTest.testUpdatesCollection": {
  "data": {
   "lineno": 5567,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanSquaredErrorTest.testValueTensorIsIdempotent": {
  "data": {
   "lineno": 5575,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.ops.random_ops.random_normal",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanSquaredErrorTest.testVars": {
  "data": {
   "lineno": 5553,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test._assert_metric_variables",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanTensorTest": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "tensorflow.compat.v1.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanTensorTest.testBasic": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.data_flow_ops.FIFOQueue",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test._enqueue_vector",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanTensorTest.testMetricsCollection": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanTensorTest.testMultiDimensional": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.data_flow_ops.FIFOQueue",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test._enqueue_vector",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanTensorTest.testUpdateOpsReturnsCurrentValue": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.data_flow_ops.FIFOQueue",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test._enqueue_vector",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanTensorTest.testUpdatesCollection": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanTensorTest.testVars": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test._assert_metric_variables",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanTensorTest.testWeighted1d": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.data_flow_ops.FIFOQueue",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test._enqueue_vector",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanTensorTest.testWeighted2d_1": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.data_flow_ops.FIFOQueue",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test._enqueue_vector",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanTensorTest.testWeighted2d_2": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.data_flow_ops.FIFOQueue",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test._enqueue_vector",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanTest": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "tensorflow.compat.v1.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanTest.test1dWeightedValues": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.data_flow_ops.FIFOQueue",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test._enqueue_vector",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanTest.test1dWeightedValues_placeholders": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.data_flow_ops.FIFOQueue",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test._enqueue_vector",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanTest.test2dWeightedValues": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.data_flow_ops.FIFOQueue",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test._enqueue_vector",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanTest.test2dWeightedValues_placeholders": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.data_flow_ops.FIFOQueue",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test._enqueue_vector",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanTest.testBasic": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.data_flow_ops.FIFOQueue",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test._enqueue_vector",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanTest.testMetricsCollection": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanTest.testUpdateOpsReturnsCurrentValue": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.data_flow_ops.FIFOQueue",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test._enqueue_vector",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanTest.testUpdatesCollection": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingMeanTest.testVars": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test._assert_metric_variables",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPearsonRTest": {
  "data": {
   "lineno": 5988,
   "symbols_in_volume": [
    "tensorflow.compat.v1.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPearsonRTest.testMetricsCollection": {
  "data": {
   "lineno": 6011,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.range",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPearsonRTest.testMultiUpdateWithErrorAndSingletonBatches": {
  "data": {
   "lineno": 6175,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.cov",
    "numpy.isnan",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.random.shuffle",
    "numpy.sqrt",
    "range",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPearsonRTest.testMultiUpdateWithErrorAndWeights": {
  "data": {
   "lineno": 6133,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.cov",
    "numpy.isnan",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.random.shuffle",
    "numpy.sqrt",
    "numpy.tile",
    "range",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.NAN",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPearsonRTest.testMultiUpdateWithErrorNoWeights": {
  "data": {
   "lineno": 6098,
   "symbols_in_volume": [
    "numpy.corrcoef",
    "numpy.isnan",
    "numpy.random.randn",
    "numpy.random.seed",
    "range",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.NAN",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPearsonRTest.testSingleUpdateIdentical": {
  "data": {
   "lineno": 6049,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.corrcoef",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.range",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPearsonRTest.testSingleUpdateNonIdentical": {
  "data": {
   "lineno": 6062,
   "symbols_in_volume": [
    "numpy.corrcoef",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPearsonRTest.testSingleUpdateWithErrorAndWeights": {
  "data": {
   "lineno": 6077,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.cov",
    "numpy.sqrt",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPearsonRTest.testUpdatesCollection": {
  "data": {
   "lineno": 6021,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.range",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPearsonRTest.testValueTensorIsIdempotent": {
  "data": {
   "lineno": 6031,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.ops.random_ops.random_normal",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPearsonRTest.testVars": {
  "data": {
   "lineno": 5990,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.range",
    "tf_slim.metrics.metric_ops_test._assert_metric_variables",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPrecisionRecallAtEqualThresholdsTest": {
  "data": {
   "lineno": 2385,
   "symbols_in_volume": [
    "tensorflow.compat.v1.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPrecisionRecallAtEqualThresholdsTest._testCase": {
  "data": {
   "lineno": 2450,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.bool",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.precision_recall_at_equal_thresholds"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPrecisionRecallAtEqualThresholdsTest._testResultsEqual": {
  "data": {
   "lineno": 2392,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPrecisionRecallAtEqualThresholdsTest.setUp": {
  "data": {
   "lineno": 2387,
   "symbols_in_volume": [
    "numpy.random.seed",
    "super",
    "tensorflow.python.framework.ops.reset_default_graph",
    "tf_slim.metrics.metric_ops_test.StreamingPrecisionRecallAtEqualThresholdsTest"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPrecisionRecallAtEqualThresholdsTest.testAllFalseNegatives": {
  "data": {
   "lineno": 2530
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPrecisionRecallAtEqualThresholdsTest.testAllFalsePositives": {
  "data": {
   "lineno": 2518
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPrecisionRecallAtEqualThresholdsTest.testAllTrueNegatives": {
  "data": {
   "lineno": 2506
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPrecisionRecallAtEqualThresholdsTest.testAllTruePositives": {
  "data": {
   "lineno": 2494
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPrecisionRecallAtEqualThresholdsTest.testFloat16": {
  "data": {
   "lineno": 2583,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float16"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPrecisionRecallAtEqualThresholdsTest.testFloat64": {
  "data": {
   "lineno": 2569,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float64"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPrecisionRecallAtEqualThresholdsTest.testManyValues": {
  "data": {
   "lineno": 2542
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPrecisionRecallAtEqualThresholdsTest.testManyValuesWithWeights": {
  "data": {
   "lineno": 2555
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPrecisionRecallAtEqualThresholdsTest.testValuesAreIdempotent": {
  "data": {
   "lineno": 2427,
   "symbols_in_volume": [
    "numpy.random.uniform",
    "range",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.bool",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.precision_recall_at_equal_thresholds"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPrecisionRecallAtEqualThresholdsTest.testVars": {
  "data": {
   "lineno": 2411,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.bool",
    "tensorflow.python.framework.dtypes.float32",
    "tf_slim.metrics.metric_ops_test._assert_metric_variables",
    "tf_slim.metrics.precision_recall_at_equal_thresholds"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPrecisionRecallAtEqualThresholdsTest.testVarsWithName": {
  "data": {
   "lineno": 2419,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.bool",
    "tensorflow.python.framework.dtypes.float32",
    "tf_slim.metrics.metric_ops_test._assert_metric_variables",
    "tf_slim.metrics.precision_recall_at_equal_thresholds"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPrecisionRecallThresholdsTest": {
  "data": {
   "lineno": 2853,
   "symbols_in_volume": [
    "tensorflow.compat.v1.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPrecisionRecallThresholdsTest.setUp": {
  "data": {
   "lineno": 2855,
   "symbols_in_volume": [
    "numpy.random.seed",
    "super",
    "tensorflow.python.framework.ops.reset_default_graph",
    "tf_slim.metrics.metric_ops_test.StreamingPrecisionRecallThresholdsTest"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPrecisionRecallThresholdsTest.testAllCorrect": {
  "data": {
   "lineno": 2924,
   "symbols_in_volume": [
    "numpy.random.randint",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPrecisionRecallThresholdsTest.testAllIncorrect": {
  "data": {
   "lineno": 2959,
   "symbols_in_volume": [
    "numpy.random.randint",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPrecisionRecallThresholdsTest.testExtremeThresholds": {
  "data": {
   "lineno": 3029,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPrecisionRecallThresholdsTest.testMetricsCollection": {
  "data": {
   "lineno": 2870,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPrecisionRecallThresholdsTest.testSomeCorrect": {
  "data": {
   "lineno": 2942,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPrecisionRecallThresholdsTest.testUpdatesCollection": {
  "data": {
   "lineno": 2884,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPrecisionRecallThresholdsTest.testValueTensorIsIdempotent": {
  "data": {
   "lineno": 2899,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPrecisionRecallThresholdsTest.testVars": {
  "data": {
   "lineno": 2860,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test._assert_metric_variables",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPrecisionRecallThresholdsTest.testWeights1d": {
  "data": {
   "lineno": 2977,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPrecisionRecallThresholdsTest.testWeights2d": {
  "data": {
   "lineno": 3003,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPrecisionRecallThresholdsTest.testWithMultipleUpdates": {
  "data": {
   "lineno": 3069,
   "symbols_in_volume": [
    "int",
    "numpy.float32",
    "numpy.random.normal",
    "numpy.random.randint",
    "range",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.data_flow_ops.FIFOQueue",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPrecisionRecallThresholdsTest.testZeroLabelsPredictions": {
  "data": {
   "lineno": 3053,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPrecisionTest": {
  "data": {
   "lineno": 1034,
   "symbols_in_volume": [
    "tensorflow.compat.v1.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPrecisionTest.setUp": {
  "data": {
   "lineno": 1036,
   "symbols_in_volume": [
    "numpy.random.seed",
    "super",
    "tensorflow.python.framework.ops.reset_default_graph",
    "tf_slim.metrics.metric_ops_test.StreamingPrecisionTest"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPrecisionTest.testAllCorrect": {
  "data": {
   "lineno": 1082,
   "symbols_in_volume": [
    "numpy.random.randint",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPrecisionTest.testAllIncorrect": {
  "data": {
   "lineno": 1176,
   "symbols_in_volume": [
    "numpy.random.randint",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPrecisionTest.testMetricsCollection": {
  "data": {
   "lineno": 1047,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPrecisionTest.testSomeCorrect": {
  "data": {
   "lineno": 1094,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPrecisionTest.testUpdatesCollection": {
  "data": {
   "lineno": 1055,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPrecisionTest.testValueTensorIsIdempotent": {
  "data": {
   "lineno": 1063,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPrecisionTest.testVars": {
  "data": {
   "lineno": 1041,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test._assert_metric_variables",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPrecisionTest.testWeighted1d": {
  "data": {
   "lineno": 1104,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPrecisionTest.testWeighted1d_placeholders": {
  "data": {
   "lineno": 1118,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPrecisionTest.testWeighted2d": {
  "data": {
   "lineno": 1138,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPrecisionTest.testWeighted2d_placeholders": {
  "data": {
   "lineno": 1154,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingPrecisionTest.testZeroTrueAndFalsePositivesGivesZeroPrecision": {
  "data": {
   "lineno": 1188,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingRecallAtKTest": {
  "data": {
   "lineno": 3914,
   "symbols_in_volume": [
    "tensorflow.compat.v1.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.metric_ops_test.StreamingRecallAtKTest.setUp": {
  "data": {
   "lineno": 3916,
   "symbols_in_volume": [
    "numpy.matrix",
    "numpy.random.seed",
    "super",
    "tensorflow.python.framework.ops.reset_default_graph",
    "tf_slim.metrics.metric_ops_test.StreamingRecallAtKTest"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingRecallAtKTest.testMetricsCollection": {
  "data": {
   "lineno": 3937,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingRecallAtKTest.testSingleUpdateKIs1": {
  "data": {
   "lineno": 3955,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingRecallAtKTest.testSingleUpdateKIs2": {
  "data": {
   "lineno": 3973,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingRecallAtKTest.testSingleUpdateKIs3": {
  "data": {
   "lineno": 3991,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingRecallAtKTest.testSingleUpdateSomeMissingKIs2": {
  "data": {
   "lineno": 4009,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingRecallAtKTest.testUpdatesCollection": {
  "data": {
   "lineno": 3946,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingRecallAtKTest.testVars": {
  "data": {
   "lineno": 3929,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test._assert_metric_variables",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingRecallTest": {
  "data": {
   "lineno": 1199,
   "symbols_in_volume": [
    "tensorflow.compat.v1.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.metric_ops_test.StreamingRecallTest.setUp": {
  "data": {
   "lineno": 1201,
   "symbols_in_volume": [
    "numpy.random.seed",
    "super",
    "tensorflow.python.framework.ops.reset_default_graph",
    "tf_slim.metrics.metric_ops_test.StreamingRecallTest"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingRecallTest.testAllCorrect": {
  "data": {
   "lineno": 1248,
   "symbols_in_volume": [
    "numpy.random.randint",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingRecallTest.testAllIncorrect": {
  "data": {
   "lineno": 1300,
   "symbols_in_volume": [
    "numpy.random.randint",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingRecallTest.testMetricsCollection": {
  "data": {
   "lineno": 1213,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingRecallTest.testSomeCorrect": {
  "data": {
   "lineno": 1260,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingRecallTest.testUpdatesCollection": {
  "data": {
   "lineno": 1221,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingRecallTest.testValueTensorIsIdempotent": {
  "data": {
   "lineno": 1229,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingRecallTest.testVars": {
  "data": {
   "lineno": 1206,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test._assert_metric_variables",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingRecallTest.testWeighted1d": {
  "data": {
   "lineno": 1270,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingRecallTest.testWeighted2d": {
  "data": {
   "lineno": 1285,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingRecallTest.testZeroTruePositivesAndFalseNegativesGivesZeroRecall": {
  "data": {
   "lineno": 1312,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingRootMeanSquaredErrorTest": {
  "data": {
   "lineno": 5728,
   "symbols_in_volume": [
    "tensorflow.compat.v1.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.metric_ops_test.StreamingRootMeanSquaredErrorTest.testMetricsCollection": {
  "data": {
   "lineno": 5737,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingRootMeanSquaredErrorTest.testSingleUpdateWithError": {
  "data": {
   "lineno": 5785,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.math",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingRootMeanSquaredErrorTest.testSingleUpdateWithErrorAndWeights": {
  "data": {
   "lineno": 5799,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.math",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingRootMeanSquaredErrorTest.testSingleUpdateZeroError": {
  "data": {
   "lineno": 5771,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingRootMeanSquaredErrorTest.testUpdatesCollection": {
  "data": {
   "lineno": 5745,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingRootMeanSquaredErrorTest.testValueTensorIsIdempotent": {
  "data": {
   "lineno": 5753,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.ops.random_ops.random_normal",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingRootMeanSquaredErrorTest.testVars": {
  "data": {
   "lineno": 5730,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test._assert_metric_variables",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSensitivityAtSpecificityTest": {
  "data": {
   "lineno": 2736,
   "symbols_in_volume": [
    "tensorflow.compat.v1.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSensitivityAtSpecificityTest.setUp": {
  "data": {
   "lineno": 2738,
   "symbols_in_volume": [
    "numpy.random.seed",
    "super",
    "tensorflow.python.framework.ops.reset_default_graph",
    "tf_slim.metrics.metric_ops_test.StreamingSensitivityAtSpecificityTest"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSensitivityAtSpecificityTest.testAllCorrect": {
  "data": {
   "lineno": 2792,
   "symbols_in_volume": [
    "numpy.random.randint",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSensitivityAtSpecificityTest.testMetricsCollection": {
  "data": {
   "lineno": 2754,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSensitivityAtSpecificityTest.testSomeCorrectHighSpecificity": {
  "data": {
   "lineno": 2805,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSensitivityAtSpecificityTest.testSomeCorrectLowSpecificity": {
  "data": {
   "lineno": 2820,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSensitivityAtSpecificityTest.testUpdatesCollection": {
  "data": {
   "lineno": 2763,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSensitivityAtSpecificityTest.testValueTensorIsIdempotent": {
  "data": {
   "lineno": 2772,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSensitivityAtSpecificityTest.testVars": {
  "data": {
   "lineno": 2743,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test._assert_metric_variables",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSensitivityAtSpecificityTest.testWeighted": {
  "data": {
   "lineno": 2835,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSparsePrecisionTest": {
  "data": {
   "lineno": 4034,
   "symbols_in_volume": [
    "tensorflow.compat.v1.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSparsePrecisionTest._test_streaming_sparse_average_precision_at_k": {
  "data": {
   "lineno": 4095,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.errors_impl.OpError",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.ops.variables.local_variables",
    "tensorflow.python.ops.variables.variables_initializer",
    "tf_slim.metrics.metric_ops_test._assert_nan",
    "tf_slim.metrics.metric_ops_test.math",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSparsePrecisionTest._test_streaming_sparse_average_precision_at_top_k": {
  "data": {
   "lineno": 4122,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.errors_impl.OpError",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.ops.variables.local_variables",
    "tensorflow.python.ops.variables.variables_initializer",
    "tf_slim.metrics.metric_ops_test._assert_nan",
    "tf_slim.metrics.metric_ops_test.math",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSparsePrecisionTest._test_streaming_sparse_precision_at_k": {
  "data": {
   "lineno": 4036,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.errors_impl.OpError",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.ops.variables.local_variables",
    "tensorflow.python.ops.variables.variables_initializer",
    "tf_slim.metrics.metric_ops_test._assert_nan",
    "tf_slim.metrics.metric_ops_test.math",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSparsePrecisionTest._test_streaming_sparse_precision_at_top_k": {
  "data": {
   "lineno": 4066,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.errors_impl.OpError",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.ops.variables.local_variables",
    "tensorflow.python.ops.variables.variables_initializer",
    "tf_slim.metrics.metric_ops_test.math",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSparsePrecisionTest.test_3d": {
  "data": {
   "lineno": 4493,
   "symbols_in_volume": [
    "tf_slim.metrics.metric_ops_test._binary_3d_label_to_sparse_value"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSparsePrecisionTest.test_3d_ignore_all": {
  "data": {
   "lineno": 4533,
   "symbols_in_volume": [
    "six.moves.xrange",
    "tf_slim.metrics.metric_ops_test.NAN",
    "tf_slim.metrics.metric_ops_test._binary_3d_label_to_sparse_value"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSparsePrecisionTest.test_3d_ignore_some": {
  "data": {
   "lineno": 4585,
   "symbols_in_volume": [
    "tf_slim.metrics.metric_ops_test.NAN",
    "tf_slim.metrics.metric_ops_test._binary_3d_label_to_sparse_value"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSparsePrecisionTest.test_3d_nan": {
  "data": {
   "lineno": 4447,
   "symbols_in_volume": [
    "tf_slim.metrics.metric_ops_test.NAN",
    "tf_slim.metrics.metric_ops_test._binary_3d_label_to_sparse_value"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSparsePrecisionTest.test_3d_no_labels": {
  "data": {
   "lineno": 4470,
   "symbols_in_volume": [
    "tf_slim.metrics.metric_ops_test._binary_3d_label_to_sparse_value"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSparsePrecisionTest.test_average_precision": {
  "data": {
   "lineno": 4172,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "six.moves.xrange",
    "zip"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSparsePrecisionTest.test_average_precision_at_top_k_static_shape_check": {
  "data": {
   "lineno": 4280,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.int64",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.ops.array_ops.placeholder",
    "tf_slim.metrics.streaming_sparse_average_precision_at_top_k"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSparsePrecisionTest.test_average_precision_some_labels_out_of_range": {
  "data": {
   "lineno": 4259,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "six.moves.xrange"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSparsePrecisionTest.test_one_label_at_k1": {
  "data": {
   "lineno": 4314,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "tf_slim.metrics.metric_ops_test._binary_2d_label_to_sparse_value"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSparsePrecisionTest.test_one_label_at_k1_nan": {
  "data": {
   "lineno": 4299,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "tf_slim.metrics.metric_ops_test.NAN",
    "tf_slim.metrics.metric_ops_test._binary_2d_label_to_sparse_value"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSparsePrecisionTest.test_sparse_tensor_value": {
  "data": {
   "lineno": 4691,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables",
    "tensorflow.python.ops.variables.variables_initializer",
    "tf_slim.metrics.metric_ops_test._binary_2d_label_to_sparse_value",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSparsePrecisionTest.test_three_labels_at_k5": {
  "data": {
   "lineno": 4372,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "tf_slim.metrics.metric_ops_test._binary_2d_label_to_sparse_value"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSparsePrecisionTest.test_three_labels_at_k5_no_labels": {
  "data": {
   "lineno": 4353,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "tf_slim.metrics.metric_ops_test._binary_2d_label_to_sparse_value"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSparsePrecisionTest.test_three_labels_at_k5_no_predictions": {
  "data": {
   "lineno": 4334,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "tf_slim.metrics.metric_ops_test.NAN",
    "tf_slim.metrics.metric_ops_test._binary_2d_label_to_sparse_value"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSparsePrecisionTest.test_three_labels_at_k5_some_out_of_range": {
  "data": {
   "lineno": 4408,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "tensorflow.python.framework.sparse_tensor.SparseTensorValue"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSparsePrecisionTest.test_top_k_rank_invalid": {
  "data": {
   "lineno": 4147,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.int64",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.framework.sparse_tensor.SparseTensorValue",
    "tensorflow.python.ops.variables.local_variables",
    "tensorflow.python.ops.variables.variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSparseRecallTest": {
  "data": {
   "lineno": 4706,
   "symbols_in_volume": [
    "tensorflow.compat.v1.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSparseRecallTest._test_one_label_at_k1_weighted": {
  "data": {
   "lineno": 4817,
   "symbols_in_volume": [
    "tf_slim.metrics.metric_ops_test.NAN"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSparseRecallTest._test_sparse_recall_at_top_k": {
  "data": {
   "lineno": 4738,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.errors_impl.OpError",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.ops.variables.local_variables",
    "tensorflow.python.ops.variables.variables_initializer",
    "tf_slim.metrics.metric_ops_test.math",
    "tf_slim.metrics.sparse_recall_at_top_k"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSparseRecallTest._test_streaming_sparse_recall_at_k": {
  "data": {
   "lineno": 4708,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.errors_impl.OpError",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.ops.variables.local_variables",
    "tensorflow.python.ops.variables.variables_initializer",
    "tf_slim.metrics.metric_ops_test._assert_nan",
    "tf_slim.metrics.metric_ops_test.math",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSparseRecallTest.test_3d": {
  "data": {
   "lineno": 5198,
   "symbols_in_volume": [
    "tf_slim.metrics.metric_ops_test._binary_3d_label_to_sparse_value"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSparseRecallTest.test_3d_ignore_all": {
  "data": {
   "lineno": 5238,
   "symbols_in_volume": [
    "six.moves.xrange",
    "tf_slim.metrics.metric_ops_test.NAN",
    "tf_slim.metrics.metric_ops_test._binary_3d_label_to_sparse_value"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSparseRecallTest.test_3d_ignore_some": {
  "data": {
   "lineno": 5290,
   "symbols_in_volume": [
    "tf_slim.metrics.metric_ops_test.NAN",
    "tf_slim.metrics.metric_ops_test._binary_3d_label_to_sparse_value"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSparseRecallTest.test_3d_nan": {
  "data": {
   "lineno": 5140,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "tf_slim.metrics.metric_ops_test.NAN",
    "tf_slim.metrics.metric_ops_test._binary_3d_label_to_sparse_value"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSparseRecallTest.test_3d_no_predictions": {
  "data": {
   "lineno": 5169,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "tf_slim.metrics.metric_ops_test._binary_3d_label_to_sparse_value"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSparseRecallTest.test_one_label_at_k1": {
  "data": {
   "lineno": 4797,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "tf_slim.metrics.metric_ops_test._binary_2d_label_to_sparse_value"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSparseRecallTest.test_one_label_at_k1_nan": {
  "data": {
   "lineno": 4767,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "tf_slim.metrics.metric_ops_test.NAN",
    "tf_slim.metrics.metric_ops_test._binary_2d_label_to_sparse_value"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSparseRecallTest.test_one_label_at_k1_no_predictions": {
  "data": {
   "lineno": 4783,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "tf_slim.metrics.metric_ops_test._binary_2d_label_to_sparse_value"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSparseRecallTest.test_one_label_at_k1_weighted_dense_labels": {
  "data": {
   "lineno": 5012,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSparseRecallTest.test_one_label_at_k1_weighted_sparse_labels": {
  "data": {
   "lineno": 5007,
   "symbols_in_volume": [
    "tf_slim.metrics.metric_ops_test._binary_2d_label_to_sparse_value"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSparseRecallTest.test_sparse_tensor_value": {
  "data": {
   "lineno": 5396,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables",
    "tensorflow.python.ops.variables.variables_initializer",
    "tf_slim.metrics.metric_ops_test._binary_2d_label_to_sparse_value",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSparseRecallTest.test_three_labels_at_k5": {
  "data": {
   "lineno": 5053,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "tf_slim.metrics.metric_ops_test._binary_2d_label_to_sparse_value"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSparseRecallTest.test_three_labels_at_k5_nan": {
  "data": {
   "lineno": 5016,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "tf_slim.metrics.metric_ops_test.NAN",
    "tf_slim.metrics.metric_ops_test._binary_2d_label_to_sparse_value"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSparseRecallTest.test_three_labels_at_k5_no_predictions": {
  "data": {
   "lineno": 5035,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "tf_slim.metrics.metric_ops_test._binary_2d_label_to_sparse_value"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSparseRecallTest.test_three_labels_at_k5_some_out_of_range": {
  "data": {
   "lineno": 5089,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "tensorflow.python.framework.sparse_tensor.SparseTensorValue"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSpecificityAtSensitivityTest": {
  "data": {
   "lineno": 2599,
   "symbols_in_volume": [
    "tensorflow.compat.v1.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSpecificityAtSensitivityTest.setUp": {
  "data": {
   "lineno": 2601,
   "symbols_in_volume": [
    "numpy.random.seed",
    "super",
    "tensorflow.python.framework.ops.reset_default_graph",
    "tf_slim.metrics.metric_ops_test.StreamingSpecificityAtSensitivityTest"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSpecificityAtSensitivityTest.testAllCorrect": {
  "data": {
   "lineno": 2655,
   "symbols_in_volume": [
    "numpy.random.randint",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSpecificityAtSensitivityTest.testMetricsCollection": {
  "data": {
   "lineno": 2617,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSpecificityAtSensitivityTest.testSomeCorrectHighSensitivity": {
  "data": {
   "lineno": 2668,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSpecificityAtSensitivityTest.testSomeCorrectLowSensitivity": {
  "data": {
   "lineno": 2683,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSpecificityAtSensitivityTest.testUpdatesCollection": {
  "data": {
   "lineno": 2626,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSpecificityAtSensitivityTest.testValueTensorIsIdempotent": {
  "data": {
   "lineno": 2635,
   "symbols_in_volume": [
    "range",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSpecificityAtSensitivityTest.testVars": {
  "data": {
   "lineno": 2606,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.metrics.metric_ops_test._assert_metric_variables",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSpecificityAtSensitivityTest.testWeighted1d": {
  "data": {
   "lineno": 2699,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingSpecificityAtSensitivityTest.testWeighted2d": {
  "data": {
   "lineno": 2717,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingTrueNegativesAtThresholdsTest": {
  "data": {
   "lineno": 992,
   "symbols_in_volume": [
    "tensorflow.compat.v1.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.metric_ops_test.StreamingTrueNegativesAtThresholdsTest.setUp": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": [
    "numpy.random.seed",
    "super",
    "tensorflow.python.framework.ops.reset_default_graph",
    "tf_slim.metrics.metric_ops_test.StreamingTrueNegativesAtThresholdsTest"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingTrueNegativesAtThresholdsTest.testUnweighted": {
  "data": {
   "lineno": 1004,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingTrueNegativesAtThresholdsTest.testVars": {
  "data": {
   "lineno": 999,
   "symbols_in_volume": [
    "tf_slim.metrics.metric_ops_test._assert_metric_variables",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingTrueNegativesAtThresholdsTest.testWeighted": {
  "data": {
   "lineno": 1017,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingTrueNegativesTest": {
  "data": {
   "lineno": 814,
   "symbols_in_volume": [
    "tensorflow.compat.v1.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.metric_ops_test.StreamingTrueNegativesTest.setUp": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "numpy.random.seed",
    "super",
    "tensorflow.python.framework.ops.reset_default_graph",
    "tf_slim.metrics.metric_ops_test.StreamingTrueNegativesTest"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingTrueNegativesTest.testUnweighted": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.bool",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingTrueNegativesTest.testVars": {
  "data": {
   "lineno": 821,
   "symbols_in_volume": [
    "tf_slim.metrics.metric_ops_test._assert_metric_variables",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingTrueNegativesTest.testWeighted": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.bool",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingTruePositivesAtThresholdsTest": {
  "data": {
   "lineno": 866,
   "symbols_in_volume": [
    "tensorflow.compat.v1.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.metric_ops_test.StreamingTruePositivesAtThresholdsTest.setUp": {
  "data": {
   "lineno": 868,
   "symbols_in_volume": [
    "numpy.random.seed",
    "super",
    "tf_slim.metrics.metric_ops_test.StreamingTruePositivesAtThresholdsTest"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingTruePositivesAtThresholdsTest.testUnweighted": {
  "data": {
   "lineno": 877,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingTruePositivesAtThresholdsTest.testVars": {
  "data": {
   "lineno": 872,
   "symbols_in_volume": [
    "tf_slim.metrics.metric_ops_test._assert_metric_variables",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingTruePositivesAtThresholdsTest.testWeighted": {
  "data": {
   "lineno": 890,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingTruePositivesTest": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "tensorflow.compat.v1.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.metrics.metric_ops_test.StreamingTruePositivesTest.setUp": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "numpy.random.seed",
    "super",
    "tf_slim.metrics.metric_ops_test.StreamingTruePositivesTest"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingTruePositivesTest.testUnweighted": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.bool",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.ops.array_ops.expand_dims",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingTruePositivesTest.testVars": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "tf_slim.metrics.metric_ops_test._assert_metric_variables",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.StreamingTruePositivesTest.testWeighted": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.bool",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.metrics.metric_ops_test.metrics"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test._assert_metric_variables": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "set",
    "tensorflow.python.framework.ops.GraphKeys.METRIC_VARIABLES",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.variables.local_variables"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test._assert_nan": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "tf_slim.metrics.metric_ops_test.math"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test._binary_2d_label_to_sparse": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "tensorflow.python.framework.sparse_tensor.SparseTensor.from_value",
    "tf_slim.metrics.metric_ops_test._binary_2d_label_to_sparse_value"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test._binary_2d_label_to_sparse_value": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.int64",
    "tensorflow.python.framework.sparse_tensor.SparseTensorValue"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test._binary_3d_label_to_sparse": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "tensorflow.python.framework.sparse_tensor.SparseTensor.from_value",
    "tf_slim.metrics.metric_ops_test._binary_3d_label_to_sparse_value"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test._binary_3d_label_to_sparse_value": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.array",
    "numpy.int64",
    "tensorflow.python.framework.sparse_tensor.SparseTensorValue"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test._enqueue_vector": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "len",
    "tensorflow.python.framework.constant_op.constant"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test._next_array_size": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops._next_array_size"
  },
  "type": "import"
 },
 "tf_slim.metrics.metric_ops_test._np_auc": {
  "data": {
   "lineno": 1665,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.cumsum",
    "numpy.ones",
    "numpy.size",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.metrics.metric_ops_test.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tf_slim.metrics.metric_ops_test.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tf_slim.metrics.metric_ops_test.data_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.data_flow_ops"
  },
  "type": "import"
 },
 "tf_slim.metrics.metric_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.metrics.metric_ops_test.dtypes_lib": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tf_slim.metrics.metric_ops_test.errors_impl": {
  "data": {
   "shadows": "tensorflow.python.framework.errors_impl"
  },
  "type": "import"
 },
 "tf_slim.metrics.metric_ops_test.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "tf_slim.metrics.metric_ops_test.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tf_slim.metrics.metric_ops_test.metrics": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "tf_slim.metrics.metric_ops_test.metrics_lib": {
  "data": {
   "shadows": "tf_slim.metrics"
  },
  "type": "import"
 },
 "tf_slim.metrics.metric_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tf_slim.metrics.metric_ops_test.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tf_slim.metrics.metric_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.metrics.metric_ops_test.random_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.random_ops"
  },
  "type": "import"
 },
 "tf_slim.metrics.metric_ops_test.setUpModule": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "tensorflow.compat.v1.disable_eager_execution"
   ]
  },
  "type": "function"
 },
 "tf_slim.metrics.metric_ops_test.sparse_tensor": {
  "data": {
   "shadows": "tensorflow.python.framework.sparse_tensor"
  },
  "type": "import"
 },
 "tf_slim.metrics.metric_ops_test.tf": {
  "data": {
   "shadows": "tensorflow.compat.v1"
  },
  "type": "import"
 },
 "tf_slim.metrics.metric_ops_test.variable_scope": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tf_slim.metrics.metric_ops_test.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tf_slim.metrics.metric_ops_test.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "tf_slim.metrics.precision_at_recall": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.precision_at_recall"
  },
  "type": "import"
 },
 "tf_slim.metrics.precision_recall_at_equal_thresholds": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.precision_recall_at_equal_thresholds"
  },
  "type": "import"
 },
 "tf_slim.metrics.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.metrics.recall_at_precision": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.recall_at_precision"
  },
  "type": "import"
 },
 "tf_slim.metrics.sparse_recall_at_top_k": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.sparse_recall_at_top_k"
  },
  "type": "import"
 },
 "tf_slim.metrics.streaming_accuracy": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.streaming_accuracy"
  },
  "type": "import"
 },
 "tf_slim.metrics.streaming_auc": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.streaming_auc"
  },
  "type": "import"
 },
 "tf_slim.metrics.streaming_concat": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.streaming_concat"
  },
  "type": "import"
 },
 "tf_slim.metrics.streaming_covariance": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.streaming_covariance"
  },
  "type": "import"
 },
 "tf_slim.metrics.streaming_curve_points": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.streaming_curve_points"
  },
  "type": "import"
 },
 "tf_slim.metrics.streaming_dynamic_auc": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.streaming_dynamic_auc"
  },
  "type": "import"
 },
 "tf_slim.metrics.streaming_false_negative_rate": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.streaming_false_negative_rate"
  },
  "type": "import"
 },
 "tf_slim.metrics.streaming_false_negative_rate_at_thresholds": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.streaming_false_negative_rate_at_thresholds"
  },
  "type": "import"
 },
 "tf_slim.metrics.streaming_false_negatives": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.streaming_false_negatives"
  },
  "type": "import"
 },
 "tf_slim.metrics.streaming_false_negatives_at_thresholds": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.streaming_false_negatives_at_thresholds"
  },
  "type": "import"
 },
 "tf_slim.metrics.streaming_false_positive_rate": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.streaming_false_positive_rate"
  },
  "type": "import"
 },
 "tf_slim.metrics.streaming_false_positive_rate_at_thresholds": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.streaming_false_positive_rate_at_thresholds"
  },
  "type": "import"
 },
 "tf_slim.metrics.streaming_false_positives": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.streaming_false_positives"
  },
  "type": "import"
 },
 "tf_slim.metrics.streaming_false_positives_at_thresholds": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.streaming_false_positives_at_thresholds"
  },
  "type": "import"
 },
 "tf_slim.metrics.streaming_mean": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.streaming_mean"
  },
  "type": "import"
 },
 "tf_slim.metrics.streaming_mean_absolute_error": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.streaming_mean_absolute_error"
  },
  "type": "import"
 },
 "tf_slim.metrics.streaming_mean_cosine_distance": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.streaming_mean_cosine_distance"
  },
  "type": "import"
 },
 "tf_slim.metrics.streaming_mean_iou": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.streaming_mean_iou"
  },
  "type": "import"
 },
 "tf_slim.metrics.streaming_mean_relative_error": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.streaming_mean_relative_error"
  },
  "type": "import"
 },
 "tf_slim.metrics.streaming_mean_squared_error": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.streaming_mean_squared_error"
  },
  "type": "import"
 },
 "tf_slim.metrics.streaming_mean_tensor": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.streaming_mean_tensor"
  },
  "type": "import"
 },
 "tf_slim.metrics.streaming_pearson_correlation": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.streaming_pearson_correlation"
  },
  "type": "import"
 },
 "tf_slim.metrics.streaming_percentage_less": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.streaming_percentage_less"
  },
  "type": "import"
 },
 "tf_slim.metrics.streaming_precision": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.streaming_precision"
  },
  "type": "import"
 },
 "tf_slim.metrics.streaming_precision_at_thresholds": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.streaming_precision_at_thresholds"
  },
  "type": "import"
 },
 "tf_slim.metrics.streaming_recall": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.streaming_recall"
  },
  "type": "import"
 },
 "tf_slim.metrics.streaming_recall_at_k": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.streaming_recall_at_k"
  },
  "type": "import"
 },
 "tf_slim.metrics.streaming_recall_at_thresholds": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.streaming_recall_at_thresholds"
  },
  "type": "import"
 },
 "tf_slim.metrics.streaming_root_mean_squared_error": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.streaming_root_mean_squared_error"
  },
  "type": "import"
 },
 "tf_slim.metrics.streaming_sensitivity_at_specificity": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.streaming_sensitivity_at_specificity"
  },
  "type": "import"
 },
 "tf_slim.metrics.streaming_sparse_average_precision_at_k": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.streaming_sparse_average_precision_at_k"
  },
  "type": "import"
 },
 "tf_slim.metrics.streaming_sparse_average_precision_at_top_k": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.streaming_sparse_average_precision_at_top_k"
  },
  "type": "import"
 },
 "tf_slim.metrics.streaming_sparse_precision_at_k": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.streaming_sparse_precision_at_k"
  },
  "type": "import"
 },
 "tf_slim.metrics.streaming_sparse_precision_at_top_k": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.streaming_sparse_precision_at_top_k"
  },
  "type": "import"
 },
 "tf_slim.metrics.streaming_sparse_recall_at_k": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.streaming_sparse_recall_at_k"
  },
  "type": "import"
 },
 "tf_slim.metrics.streaming_specificity_at_sensitivity": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.streaming_specificity_at_sensitivity"
  },
  "type": "import"
 },
 "tf_slim.metrics.streaming_true_negatives": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.streaming_true_negatives"
  },
  "type": "import"
 },
 "tf_slim.metrics.streaming_true_negatives_at_thresholds": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.streaming_true_negatives_at_thresholds"
  },
  "type": "import"
 },
 "tf_slim.metrics.streaming_true_positives": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.streaming_true_positives"
  },
  "type": "import"
 },
 "tf_slim.metrics.streaming_true_positives_at_thresholds": {
  "data": {
   "shadows": "tf_slim.metrics.metric_ops.streaming_true_positives_at_thresholds"
  },
  "type": "import"
 },
 "tf_slim.model_analyzer": {
  "data": {
   "shadows": "tf_slim.model_analyzer"
  },
  "type": "import"
 },
 "tf_slim.model_analyzer.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.model_analyzer.analyze_ops": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "print",
    "str",
    "tf_slim.model_analyzer.tensor_description"
   ]
  },
  "type": "function"
 },
 "tf_slim.model_analyzer.analyze_vars": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "print",
    "tf_slim.model_analyzer.tensor_description"
   ]
  },
  "type": "function"
 },
 "tf_slim.model_analyzer.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.model_analyzer.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.model_analyzer.tensor_description": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.util.all_util.make_all"
   ]
  },
  "type": "module"
 },
 "tf_slim.nets.__all__": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "tf_slim.nets.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.nets.alexnet": {
  "data": {
   "shadows": "tf_slim.nets.alexnet"
  },
  "type": "import"
 },
 "tf_slim.nets.alexnet.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.nets.alexnet.alexnet_v2": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.squeeze",
    "tensorflow.python.ops.init_ops.constant_initializer",
    "tensorflow.python.ops.init_ops.zeros_initializer",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.layers.layers.conv2d",
    "tf_slim.layers.layers.dropout",
    "tf_slim.layers.layers.fully_connected",
    "tf_slim.layers.layers.max_pool2d",
    "tf_slim.layers.utils.convert_collection_to_dict",
    "tf_slim.nets.alexnet.trunc_normal",
    "tf_slim.ops.arg_scope.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.alexnet.alexnet_v2_arg_scope": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "tensorflow.python.ops.init_ops.constant_initializer",
    "tensorflow.python.ops.nn_ops.relu",
    "tf_slim.layers.layers.conv2d",
    "tf_slim.layers.layers.fully_connected",
    "tf_slim.layers.layers.max_pool2d",
    "tf_slim.layers.regularizers.l2_regularizer",
    "tf_slim.ops.arg_scope.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.alexnet.arg_scope": {
  "data": {
   "shadows": "tf_slim.ops.arg_scope.arg_scope"
  },
  "type": "import"
 },
 "tf_slim.nets.alexnet.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tf_slim.nets.alexnet.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.nets.alexnet.init_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.init_ops"
  },
  "type": "import"
 },
 "tf_slim.nets.alexnet.layers": {
  "data": {
   "shadows": "tf_slim.layers"
  },
  "type": "import"
 },
 "tf_slim.nets.alexnet.layers_lib": {
  "data": {
   "shadows": "tf_slim.layers.layers"
  },
  "type": "import"
 },
 "tf_slim.nets.alexnet.nn_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.nn_ops"
  },
  "type": "import"
 },
 "tf_slim.nets.alexnet.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.nets.alexnet.regularizers": {
  "data": {
   "shadows": "tf_slim.layers.regularizers"
  },
  "type": "import"
 },
 "tf_slim.nets.alexnet.trunc_normal": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "tf_slim.nets.alexnet.utils": {
  "data": {
   "shadows": "tf_slim.layers.utils"
  },
  "type": "import"
 },
 "tf_slim.nets.alexnet.variable_scope": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tf_slim.nets.alexnet_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.test.main"
   ]
  },
  "type": "module"
 },
 "tf_slim.nets.alexnet_test.AlexnetV2Test": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.nets.alexnet_test.AlexnetV2Test.testBuild": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.nets.alexnet.alexnet_v2"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.alexnet_test.AlexnetV2Test.testEndPoints": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "set",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.nets.alexnet.alexnet_v2"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.alexnet_test.AlexnetV2Test.testEvaluation": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.argmax",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.nets.alexnet.alexnet_v2"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.alexnet_test.AlexnetV2Test.testForward": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.nets.alexnet.alexnet_v2"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.alexnet_test.AlexnetV2Test.testFullyConvolutional": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.nets.alexnet.alexnet_v2"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.alexnet_test.AlexnetV2Test.testModelVariables": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "set",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.nets.alexnet.alexnet_v2",
    "tf_slim.ops.variables.get_model_variables"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.alexnet_test.AlexnetV2Test.testTrainEvalWithReuse": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.argmax",
    "tensorflow.python.ops.math_ops.reduce_mean",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variable_scope.get_variable_scope",
    "tf_slim.nets.alexnet.alexnet_v2"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.alexnet_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.nets.alexnet_test.alexnet": {
  "data": {
   "shadows": "tf_slim.nets.alexnet"
  },
  "type": "import"
 },
 "tf_slim.nets.alexnet_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.nets.alexnet_test.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tf_slim.nets.alexnet_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.nets.alexnet_test.random_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.random_ops"
  },
  "type": "import"
 },
 "tf_slim.nets.alexnet_test.setUpModule": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "tensorflow.compat.v1.disable_eager_execution"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.alexnet_test.test": {
  "data": {
   "shadows": "tensorflow.python.platform.test"
  },
  "type": "import"
 },
 "tf_slim.nets.alexnet_test.tf": {
  "data": {
   "shadows": "tensorflow.compat.v1"
  },
  "type": "import"
 },
 "tf_slim.nets.alexnet_test.variable_scope": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tf_slim.nets.alexnet_test.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tf_slim.nets.alexnet_test.variables_lib": {
  "data": {
   "shadows": "tf_slim.ops.variables"
  },
  "type": "import"
 },
 "tf_slim.nets.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.nets.inception": {
  "data": {
   "shadows": "tf_slim.nets.inception"
  },
  "type": "import"
 },
 "tf_slim.nets.inception.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.nets.inception.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.nets.inception.inception_v1": {
  "data": {
   "shadows": "tf_slim.nets.inception_v1.inception_v1"
  },
  "type": "import"
 },
 "tf_slim.nets.inception.inception_v1_arg_scope": {
  "data": {
   "shadows": "tf_slim.nets.inception_v1.inception_v1_arg_scope"
  },
  "type": "import"
 },
 "tf_slim.nets.inception.inception_v1_base": {
  "data": {
   "shadows": "tf_slim.nets.inception_v1.inception_v1_base"
  },
  "type": "import"
 },
 "tf_slim.nets.inception.inception_v2": {
  "data": {
   "shadows": "tf_slim.nets.inception_v2.inception_v2"
  },
  "type": "import"
 },
 "tf_slim.nets.inception.inception_v2_arg_scope": {
  "data": {
   "shadows": "tf_slim.nets.inception_v2.inception_v2_arg_scope"
  },
  "type": "import"
 },
 "tf_slim.nets.inception.inception_v2_base": {
  "data": {
   "shadows": "tf_slim.nets.inception_v2.inception_v2_base"
  },
  "type": "import"
 },
 "tf_slim.nets.inception.inception_v3": {
  "data": {
   "shadows": "tf_slim.nets.inception_v3.inception_v3"
  },
  "type": "import"
 },
 "tf_slim.nets.inception.inception_v3_arg_scope": {
  "data": {
   "shadows": "tf_slim.nets.inception_v3.inception_v3_arg_scope"
  },
  "type": "import"
 },
 "tf_slim.nets.inception.inception_v3_base": {
  "data": {
   "shadows": "tf_slim.nets.inception_v3.inception_v3_base"
  },
  "type": "import"
 },
 "tf_slim.nets.inception.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v1": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.ops.init_ops.truncated_normal_initializer",
    "tf_slim.nets.inception_v1.inception_v1"
   ]
  },
  "type": "module"
 },
 "tf_slim.nets.inception_v1.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v1.arg_scope": {
  "data": {
   "shadows": "tf_slim.ops.arg_scope.arg_scope"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v1.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v1.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v1.inception_v1": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "prediction_fn",
    "tensorflow.python.ops.array_ops.squeeze",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.layers.layers.avg_pool2d",
    "tf_slim.layers.layers.batch_norm",
    "tf_slim.layers.layers.conv2d",
    "tf_slim.layers.layers.dropout",
    "tf_slim.layers.layers.softmax",
    "tf_slim.nets.inception_v1.inception_v1_base",
    "tf_slim.ops.arg_scope.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v1.inception_v1_arg_scope": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.UPDATE_OPS",
    "tensorflow.python.ops.nn_ops.relu",
    "tf_slim.layers.initializers.variance_scaling_initializer",
    "tf_slim.layers.layers.batch_norm",
    "tf_slim.layers.layers.conv2d",
    "tf_slim.layers.layers.fully_connected",
    "tf_slim.layers.regularizers.l2_regularizer",
    "tf_slim.ops.arg_scope.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v1.inception_v1_base": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.layers.layers.conv2d",
    "tf_slim.layers.layers.fully_connected",
    "tf_slim.layers.layers.max_pool2d",
    "tf_slim.nets.inception_v1.trunc_normal",
    "tf_slim.ops.arg_scope.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v1.init_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.init_ops"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v1.initializers": {
  "data": {
   "shadows": "tf_slim.layers.initializers"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v1.layers": {
  "data": {
   "shadows": "tf_slim.layers"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v1.layers_lib": {
  "data": {
   "shadows": "tf_slim.layers.layers"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v1.nn_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.nn_ops"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v1.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v1.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v1.regularizers": {
  "data": {
   "shadows": "tf_slim.layers.regularizers"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v1.trunc_normal": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "tf_slim.nets.inception_v1.variable_scope": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v1_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.test.main"
   ]
  },
  "type": "module"
 },
 "tf_slim.nets.inception_v1_test.InceptionV1Test": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.nets.inception_v1_test.InceptionV1Test.testBuildAndCheckAllEndPointsUptoMixed5c": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.nets.inception_v1.inception_v1_base"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v1_test.InceptionV1Test.testBuildBaseNetwork": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.nets.inception_v1.inception_v1_base"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v1_test.InceptionV1Test.testBuildClassificationNetwork": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.nets.inception_v1.inception_v1"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v1_test.InceptionV1Test.testBuildOnlyUptoFinalEndpoint": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "enumerate",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.nets.inception_v1.inception_v1_base"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v1_test.InceptionV1Test.testEvaluation": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.argmax",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.nets.inception_v1.inception_v1"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v1_test.InceptionV1Test.testHalfSizeImages": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.nets.inception_v1.inception_v1_base"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v1_test.InceptionV1Test.testLogitsNotSqueezed": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "list",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.nets.inception_v1.inception_v1"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v1_test.InceptionV1Test.testModelHasExpectedNumberOfParameters": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.model_analyzer.analyze_vars",
    "tf_slim.nets.inception_v1.inception_v1_arg_scope",
    "tf_slim.nets.inception_v1.inception_v1_base",
    "tf_slim.ops.arg_scope.arg_scope",
    "tf_slim.ops.variables.get_model_variables"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v1_test.InceptionV1Test.testTrainEvalWithReuse": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.argmax",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.nets.inception_v1.inception_v1"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v1_test.InceptionV1Test.testUnknownBatchSize": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.nets.inception_v1.inception_v1"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v1_test.InceptionV1Test.testUnknownImageShape": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "list",
    "numpy.random.uniform",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.reset_default_graph",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.nets.inception_v1.inception_v1"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v1_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v1_test.arg_scope": {
  "data": {
   "shadows": "tf_slim.ops.arg_scope.arg_scope"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v1_test.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v1_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v1_test.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v1_test.inception_v1": {
  "data": {
   "shadows": "tf_slim.nets.inception_v1"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v1_test.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v1_test.model_analyzer": {
  "data": {
   "shadows": "tf_slim.model_analyzer"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v1_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v1_test.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v1_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v1_test.random_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.random_ops"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v1_test.setUpModule": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "tensorflow.compat.v1.disable_eager_execution"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v1_test.test": {
  "data": {
   "shadows": "tensorflow.python.platform.test"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v1_test.tf": {
  "data": {
   "shadows": "tensorflow.compat.v1"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v1_test.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v1_test.variables_lib": {
  "data": {
   "shadows": "tf_slim.ops.variables"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v2": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.ops.init_ops.truncated_normal_initializer",
    "tf_slim.nets.inception_v2.inception_v2"
   ]
  },
  "type": "module"
 },
 "tf_slim.nets.inception_v2._reduced_kernel_size_for_small_input": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "min"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v2.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v2.arg_scope": {
  "data": {
   "shadows": "tf_slim.ops.arg_scope.arg_scope"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v2.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v2.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v2.inception_v2": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "ValueError",
    "prediction_fn",
    "tensorflow.python.ops.array_ops.squeeze",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.layers.layers.avg_pool2d",
    "tf_slim.layers.layers.batch_norm",
    "tf_slim.layers.layers.conv2d",
    "tf_slim.layers.layers.dropout",
    "tf_slim.layers.layers.softmax",
    "tf_slim.nets.inception_v2._reduced_kernel_size_for_small_input",
    "tf_slim.nets.inception_v2.inception_v2_base",
    "tf_slim.ops.arg_scope.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v2.inception_v2_arg_scope": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.UPDATE_OPS",
    "tensorflow.python.ops.nn_ops.relu",
    "tf_slim.layers.initializers.variance_scaling_initializer",
    "tf_slim.layers.layers.batch_norm",
    "tf_slim.layers.layers.conv2d",
    "tf_slim.layers.layers.fully_connected",
    "tf_slim.layers.regularizers.l2_regularizer",
    "tf_slim.ops.arg_scope.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v2.inception_v2_base": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ValueError",
    "depth",
    "int",
    "max",
    "min",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.layers.layers.avg_pool2d",
    "tf_slim.layers.layers.conv2d",
    "tf_slim.layers.layers.max_pool2d",
    "tf_slim.layers.layers.separable_conv2d",
    "tf_slim.nets.inception_v2.trunc_normal",
    "tf_slim.ops.arg_scope.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v2.init_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.init_ops"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v2.initializers": {
  "data": {
   "shadows": "tf_slim.layers.initializers"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v2.layers": {
  "data": {
   "shadows": "tf_slim.layers"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v2.layers_lib": {
  "data": {
   "shadows": "tf_slim.layers.layers"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v2.nn_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.nn_ops"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v2.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v2.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v2.regularizers": {
  "data": {
   "shadows": "tf_slim.layers.regularizers"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v2.trunc_normal": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "tf_slim.nets.inception_v2.variable_scope": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v2_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.test.main"
   ]
  },
  "type": "module"
 },
 "tf_slim.nets.inception_v2_test.InceptionV2Test": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.nets.inception_v2_test.InceptionV2Test.testBuildAndCheckAllEndPointsUptoMixed5c": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.nets.inception_v2.inception_v2_base"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v2_test.InceptionV2Test.testBuildBaseNetwork": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.nets.inception_v2.inception_v2_base"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v2_test.InceptionV2Test.testBuildClassificationNetwork": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.nets.inception_v2.inception_v2"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v2_test.InceptionV2Test.testBuildEndPointsWithDepthMultiplierGreaterThanOne": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.nets.inception_v2.inception_v2"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v2_test.InceptionV2Test.testBuildEndPointsWithDepthMultiplierLessThanOne": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.nets.inception_v2.inception_v2"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v2_test.InceptionV2Test.testBuildOnlyUptoFinalEndpoint": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "enumerate",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.nets.inception_v2.inception_v2_base"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v2_test.InceptionV2Test.testEvaluation": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.argmax",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.nets.inception_v2.inception_v2"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v2_test.InceptionV2Test.testHalfSizeImages": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.nets.inception_v2.inception_v2"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v2_test.InceptionV2Test.testLogitsNotSqueezed": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "list",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.nets.inception_v2.inception_v2"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v2_test.InceptionV2Test.testModelHasExpectedNumberOfParameters": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.model_analyzer.analyze_vars",
    "tf_slim.nets.inception_v2.inception_v2_arg_scope",
    "tf_slim.nets.inception_v2.inception_v2_base",
    "tf_slim.ops.arg_scope.arg_scope",
    "tf_slim.ops.variables.get_model_variables"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v2_test.InceptionV2Test.testRaiseValueErrorWithInvalidDepthMultiplier": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.nets.inception_v2.inception_v2"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v2_test.InceptionV2Test.testTrainEvalWithReuse": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.argmax",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.nets.inception_v2.inception_v2"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v2_test.InceptionV2Test.testUnknownBatchSize": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.nets.inception_v2.inception_v2"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v2_test.InceptionV2Test.testUnknownImageShape": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "list",
    "numpy.random.uniform",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.reset_default_graph",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.nets.inception_v2.inception_v2"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v2_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v2_test.arg_scope": {
  "data": {
   "shadows": "tf_slim.ops.arg_scope.arg_scope"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v2_test.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v2_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v2_test.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v2_test.inception_v2": {
  "data": {
   "shadows": "tf_slim.nets.inception_v2"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v2_test.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v2_test.model_analyzer": {
  "data": {
   "shadows": "tf_slim.model_analyzer"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v2_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v2_test.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v2_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v2_test.random_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.random_ops"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v2_test.setUpModule": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "tensorflow.compat.v1.disable_eager_execution"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v2_test.test": {
  "data": {
   "shadows": "tensorflow.python.platform.test"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v2_test.tf": {
  "data": {
   "shadows": "tensorflow.compat.v1"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v2_test.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v2_test.variables_lib": {
  "data": {
   "shadows": "tf_slim.ops.variables"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v3": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.ops.init_ops.truncated_normal_initializer",
    "tf_slim.nets.inception_v3.inception_v3"
   ]
  },
  "type": "module"
 },
 "tf_slim.nets.inception_v3._reduced_kernel_size_for_small_input": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "min"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v3.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v3.arg_scope": {
  "data": {
   "shadows": "tf_slim.ops.arg_scope.arg_scope"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v3.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v3.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v3.inception_v3": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "ValueError",
    "depth",
    "int",
    "max",
    "prediction_fn",
    "tensorflow.python.ops.array_ops.squeeze",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.layers.layers.avg_pool2d",
    "tf_slim.layers.layers.batch_norm",
    "tf_slim.layers.layers.conv2d",
    "tf_slim.layers.layers.dropout",
    "tf_slim.layers.layers.max_pool2d",
    "tf_slim.layers.layers.softmax",
    "tf_slim.nets.inception_v3._reduced_kernel_size_for_small_input",
    "tf_slim.nets.inception_v3.inception_v3_base",
    "tf_slim.nets.inception_v3.trunc_normal",
    "tf_slim.ops.arg_scope.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v3.inception_v3_arg_scope": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.UPDATE_OPS",
    "tensorflow.python.ops.nn_ops.relu",
    "tf_slim.layers.initializers.variance_scaling_initializer",
    "tf_slim.layers.layers.batch_norm",
    "tf_slim.layers.layers.conv2d",
    "tf_slim.layers.layers.fully_connected",
    "tf_slim.layers.regularizers.l2_regularizer",
    "tf_slim.ops.arg_scope.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v3.inception_v3_base": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ValueError",
    "depth",
    "int",
    "max",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.layers.layers.avg_pool2d",
    "tf_slim.layers.layers.conv2d",
    "tf_slim.layers.layers.max_pool2d",
    "tf_slim.ops.arg_scope.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v3.init_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.init_ops"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v3.initializers": {
  "data": {
   "shadows": "tf_slim.layers.initializers"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v3.layers": {
  "data": {
   "shadows": "tf_slim.layers"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v3.layers_lib": {
  "data": {
   "shadows": "tf_slim.layers.layers"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v3.nn_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.nn_ops"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v3.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v3.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v3.regularizers": {
  "data": {
   "shadows": "tf_slim.layers.regularizers"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v3.trunc_normal": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "tf_slim.nets.inception_v3.variable_scope": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v3_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.test.main"
   ]
  },
  "type": "module"
 },
 "tf_slim.nets.inception_v3_test.InceptionV3Test": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.nets.inception_v3_test.InceptionV3Test.testBuildAndCheckAllEndPointsUptoMixed7c": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.nets.inception_v3.inception_v3_base"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v3_test.InceptionV3Test.testBuildBaseNetwork": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.nets.inception_v3.inception_v3_base"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v3_test.InceptionV3Test.testBuildClassificationNetwork": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.nets.inception_v3.inception_v3"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v3_test.InceptionV3Test.testBuildEndPoints": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.nets.inception_v3.inception_v3"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v3_test.InceptionV3Test.testBuildEndPointsWithDepthMultiplierGreaterThanOne": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.nets.inception_v3.inception_v3"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v3_test.InceptionV3Test.testBuildEndPointsWithDepthMultiplierLessThanOne": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.nets.inception_v3.inception_v3"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v3_test.InceptionV3Test.testBuildOnlyUptoFinalEndpoint": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "enumerate",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.nets.inception_v3.inception_v3_base"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v3_test.InceptionV3Test.testEvaluation": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.argmax",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.nets.inception_v3.inception_v3"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v3_test.InceptionV3Test.testHalfSizeImages": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.nets.inception_v3.inception_v3"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v3_test.InceptionV3Test.testLogitsNotSqueezed": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "list",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.nets.inception_v3.inception_v3"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v3_test.InceptionV3Test.testModelHasExpectedNumberOfParameters": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.model_analyzer.analyze_vars",
    "tf_slim.nets.inception_v3.inception_v3_arg_scope",
    "tf_slim.nets.inception_v3.inception_v3_base",
    "tf_slim.ops.arg_scope.arg_scope",
    "tf_slim.ops.variables.get_model_variables"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v3_test.InceptionV3Test.testRaiseValueErrorWithInvalidDepthMultiplier": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.nets.inception_v3.inception_v3"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v3_test.InceptionV3Test.testTrainEvalWithReuse": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.argmax",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.nets.inception_v3.inception_v3"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v3_test.InceptionV3Test.testUnknownBatchSize": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.nets.inception_v3.inception_v3"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v3_test.InceptionV3Test.testUnknownImageShape": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "list",
    "numpy.random.uniform",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.reset_default_graph",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.nets.inception_v3.inception_v3"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v3_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v3_test.arg_scope": {
  "data": {
   "shadows": "tf_slim.ops.arg_scope.arg_scope"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v3_test.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v3_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v3_test.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v3_test.inception_v3": {
  "data": {
   "shadows": "tf_slim.nets.inception_v3"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v3_test.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v3_test.model_analyzer": {
  "data": {
   "shadows": "tf_slim.model_analyzer"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v3_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v3_test.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v3_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v3_test.random_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.random_ops"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v3_test.setUpModule": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "tensorflow.compat.v1.disable_eager_execution"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.inception_v3_test.test": {
  "data": {
   "shadows": "tensorflow.python.platform.test"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v3_test.tf": {
  "data": {
   "shadows": "tensorflow.compat.v1"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v3_test.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tf_slim.nets.inception_v3_test.variables_lib": {
  "data": {
   "shadows": "tf_slim.ops.variables"
  },
  "type": "import"
 },
 "tf_slim.nets.make_all": {
  "data": {
   "shadows": "tensorflow.python.util.all_util.make_all"
  },
  "type": "import"
 },
 "tf_slim.nets.overfeat": {
  "data": {
   "shadows": "tf_slim.nets.overfeat"
  },
  "type": "import"
 },
 "tf_slim.nets.overfeat.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.nets.overfeat.arg_scope": {
  "data": {
   "shadows": "tf_slim.ops.arg_scope.arg_scope"
  },
  "type": "import"
 },
 "tf_slim.nets.overfeat.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tf_slim.nets.overfeat.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.nets.overfeat.init_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.init_ops"
  },
  "type": "import"
 },
 "tf_slim.nets.overfeat.layers": {
  "data": {
   "shadows": "tf_slim.layers"
  },
  "type": "import"
 },
 "tf_slim.nets.overfeat.layers_lib": {
  "data": {
   "shadows": "tf_slim.layers.layers"
  },
  "type": "import"
 },
 "tf_slim.nets.overfeat.nn_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.nn_ops"
  },
  "type": "import"
 },
 "tf_slim.nets.overfeat.overfeat": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.squeeze",
    "tensorflow.python.ops.init_ops.constant_initializer",
    "tensorflow.python.ops.init_ops.zeros_initializer",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.layers.layers.conv2d",
    "tf_slim.layers.layers.dropout",
    "tf_slim.layers.layers.fully_connected",
    "tf_slim.layers.layers.max_pool2d",
    "tf_slim.layers.utils.convert_collection_to_dict",
    "tf_slim.nets.overfeat.trunc_normal",
    "tf_slim.ops.arg_scope.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.overfeat.overfeat_arg_scope": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "tensorflow.python.ops.init_ops.zeros_initializer",
    "tensorflow.python.ops.nn_ops.relu",
    "tf_slim.layers.layers.conv2d",
    "tf_slim.layers.layers.fully_connected",
    "tf_slim.layers.layers.max_pool2d",
    "tf_slim.layers.regularizers.l2_regularizer",
    "tf_slim.ops.arg_scope.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.overfeat.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.nets.overfeat.regularizers": {
  "data": {
   "shadows": "tf_slim.layers.regularizers"
  },
  "type": "import"
 },
 "tf_slim.nets.overfeat.trunc_normal": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "tf_slim.nets.overfeat.utils": {
  "data": {
   "shadows": "tf_slim.layers.utils"
  },
  "type": "import"
 },
 "tf_slim.nets.overfeat.variable_scope": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tf_slim.nets.overfeat_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.test.main"
   ]
  },
  "type": "module"
 },
 "tf_slim.nets.overfeat_test.OverFeatTest": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.nets.overfeat_test.OverFeatTest.testBuild": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.nets.overfeat.overfeat"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.overfeat_test.OverFeatTest.testEndPoints": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "set",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.nets.overfeat.overfeat"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.overfeat_test.OverFeatTest.testEvaluation": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.argmax",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.nets.overfeat.overfeat"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.overfeat_test.OverFeatTest.testForward": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.nets.overfeat.overfeat"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.overfeat_test.OverFeatTest.testFullyConvolutional": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.nets.overfeat.overfeat"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.overfeat_test.OverFeatTest.testModelVariables": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "set",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.nets.overfeat.overfeat",
    "tf_slim.ops.variables.get_model_variables"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.overfeat_test.OverFeatTest.testTrainEvalWithReuse": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.argmax",
    "tensorflow.python.ops.math_ops.reduce_mean",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variable_scope.get_variable_scope",
    "tf_slim.nets.overfeat.overfeat"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.overfeat_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.nets.overfeat_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.nets.overfeat_test.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tf_slim.nets.overfeat_test.overfeat": {
  "data": {
   "shadows": "tf_slim.nets.overfeat"
  },
  "type": "import"
 },
 "tf_slim.nets.overfeat_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.nets.overfeat_test.random_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.random_ops"
  },
  "type": "import"
 },
 "tf_slim.nets.overfeat_test.setUpModule": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "tensorflow.compat.v1.disable_eager_execution"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.overfeat_test.test": {
  "data": {
   "shadows": "tensorflow.python.platform.test"
  },
  "type": "import"
 },
 "tf_slim.nets.overfeat_test.tf": {
  "data": {
   "shadows": "tensorflow.compat.v1"
  },
  "type": "import"
 },
 "tf_slim.nets.overfeat_test.variable_scope": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tf_slim.nets.overfeat_test.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tf_slim.nets.overfeat_test.variables_lib": {
  "data": {
   "shadows": "tf_slim.ops.variables"
  },
  "type": "import"
 },
 "tf_slim.nets.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_utils": {
  "data": {},
  "type": "module"
 },
 "tf_slim.nets.resnet_utils.Block": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "tf_slim.nets.resnet_utils.collections"
   ]
  },
  "type": "class"
 },
 "tf_slim.nets.resnet_utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_utils.add_arg_scope": {
  "data": {
   "shadows": "tf_slim.ops.arg_scope.add_arg_scope"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_utils.arg_scope": {
  "data": {
   "shadows": "tf_slim.ops.arg_scope.arg_scope"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_utils.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_utils.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_utils.conv2d_same": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.pad",
    "tf_slim.layers.conv2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_utils.initializers": {
  "data": {
   "shadows": "tf_slim.layers.initializers"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_utils.layers": {
  "data": {
   "shadows": "tf_slim.layers.layers"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_utils.layers_lib": {
  "data": {
   "shadows": "tf_slim.layers"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_utils.nn_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.nn_ops"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_utils.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_utils.regularizers": {
  "data": {
   "shadows": "tf_slim.layers.regularizers"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_utils.resnet_arg_scope": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.UPDATE_OPS",
    "tensorflow.python.ops.nn_ops.relu",
    "tf_slim.layers.conv2d",
    "tf_slim.layers.initializers.variance_scaling_initializer",
    "tf_slim.layers.layers.batch_norm",
    "tf_slim.layers.layers.max_pool2d",
    "tf_slim.layers.regularizers.l2_regularizer",
    "tf_slim.ops.arg_scope.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_utils.stack_blocks_dense": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "enumerate",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.layers.utils.collect_named_outputs",
    "tf_slim.ops.arg_scope.add_arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_utils.subsample": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "tf_slim.layers.layers.max_pool2d"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_utils.utils": {
  "data": {
   "shadows": "tf_slim.layers.utils"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_utils.variable_scope": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v1": {
  "data": {
   "shadows": "tf_slim.nets.resnet_v1"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v1.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v1.add_arg_scope": {
  "data": {
   "shadows": "tf_slim.ops.arg_scope.add_arg_scope"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v1.arg_scope": {
  "data": {
   "shadows": "tf_slim.ops.arg_scope.arg_scope"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v1.bottleneck": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "tensorflow.python.ops.nn_ops.relu",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.layers.layers.conv2d",
    "tf_slim.layers.utils.collect_named_outputs",
    "tf_slim.layers.utils.last_dimension",
    "tf_slim.nets.resnet_utils.conv2d_same",
    "tf_slim.nets.resnet_utils.subsample",
    "tf_slim.ops.arg_scope.add_arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v1.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v1.layers": {
  "data": {
   "shadows": "tf_slim.layers"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v1.layers_lib": {
  "data": {
   "shadows": "tf_slim.layers.layers"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v1.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v1.nn_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.nn_ops"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v1.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v1.resnet_arg_scope": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "tf_slim.nets.resnet_v1.resnet_utils": {
  "data": {
   "shadows": "tf_slim.nets.resnet_utils"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v1.resnet_v1": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.ops.math_ops.reduce_mean",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.layers.layers.batch_norm",
    "tf_slim.layers.layers.conv2d",
    "tf_slim.layers.layers.max_pool2d",
    "tf_slim.layers.layers.softmax",
    "tf_slim.layers.utils.convert_collection_to_dict",
    "tf_slim.nets.resnet_utils.conv2d_same",
    "tf_slim.nets.resnet_utils.stack_blocks_dense",
    "tf_slim.nets.resnet_v1.bottleneck",
    "tf_slim.ops.arg_scope.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v1.resnet_v1_101": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "tf_slim.nets.resnet_v1.resnet_v1",
    "tf_slim.nets.resnet_v1.resnet_v1_block"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v1.resnet_v1_152": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "tf_slim.nets.resnet_v1.resnet_v1",
    "tf_slim.nets.resnet_v1.resnet_v1_block"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v1.resnet_v1_200": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "tf_slim.nets.resnet_v1.resnet_v1",
    "tf_slim.nets.resnet_v1.resnet_v1_block"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v1.resnet_v1_50": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "tf_slim.nets.resnet_v1.resnet_v1",
    "tf_slim.nets.resnet_v1.resnet_v1_block"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v1.resnet_v1_block": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "tf_slim.nets.resnet_utils.Block",
    "tf_slim.nets.resnet_v1.bottleneck"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v1.utils": {
  "data": {
   "shadows": "tf_slim.layers.utils"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v1.variable_scope": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v1_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.test.main"
   ]
  },
  "type": "module"
 },
 "tf_slim.nets.resnet_v1_test.ResnetCompleteNetworkTest": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.nets.resnet_v1_test.ResnetCompleteNetworkTest._resnet_small": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "block",
    "tf_slim.nets.resnet_v1.resnet_v1",
    "tf_slim.nets.resnet_v1.resnet_v1_block"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v1_test.ResnetCompleteNetworkTest.testAtrousFullyConvolutionalEndpointShapes": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "tf_slim.nets.resnet_utils.resnet_arg_scope",
    "tf_slim.nets.resnet_v1_test.create_input",
    "tf_slim.ops.arg_scope.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v1_test.ResnetCompleteNetworkTest.testAtrousFullyConvolutionalUnknownHeightWidth": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.nets.resnet_utils.resnet_arg_scope",
    "tf_slim.nets.resnet_v1_test.create_input",
    "tf_slim.ops.arg_scope.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v1_test.ResnetCompleteNetworkTest.testAtrousFullyConvolutionalValues": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.ops.variable_scope.get_variable_scope",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.nets.resnet_utils.resnet_arg_scope",
    "tf_slim.nets.resnet_utils.subsample",
    "tf_slim.nets.resnet_v1_test.create_input",
    "tf_slim.ops.arg_scope.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v1_test.ResnetCompleteNetworkTest.testClassificationEndPoints": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "tf_slim.nets.resnet_utils.resnet_arg_scope",
    "tf_slim.nets.resnet_v1_test.create_input",
    "tf_slim.ops.arg_scope.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v1_test.ResnetCompleteNetworkTest.testClassificationShapes": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "tf_slim.nets.resnet_utils.resnet_arg_scope",
    "tf_slim.nets.resnet_v1_test.create_input",
    "tf_slim.ops.arg_scope.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v1_test.ResnetCompleteNetworkTest.testFullyConvolutionalEndpointShapes": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "tf_slim.nets.resnet_utils.resnet_arg_scope",
    "tf_slim.nets.resnet_v1_test.create_input",
    "tf_slim.ops.arg_scope.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v1_test.ResnetCompleteNetworkTest.testFullyConvolutionalUnknownHeightWidth": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.nets.resnet_utils.resnet_arg_scope",
    "tf_slim.nets.resnet_v1_test.create_input",
    "tf_slim.ops.arg_scope.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v1_test.ResnetCompleteNetworkTest.testRootlessFullyConvolutionalEndpointShapes": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "tf_slim.nets.resnet_utils.resnet_arg_scope",
    "tf_slim.nets.resnet_v1_test.create_input",
    "tf_slim.ops.arg_scope.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v1_test.ResnetCompleteNetworkTest.testUnknownBatchSize": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.nets.resnet_utils.resnet_arg_scope",
    "tf_slim.nets.resnet_v1_test.create_input",
    "tf_slim.ops.arg_scope.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v1_test.ResnetUtilsTest": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.nets.resnet_v1_test.ResnetUtilsTest._resnet_plain": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.layers.conv2d",
    "tf_slim.layers.utils.convert_collection_to_dict",
    "tf_slim.nets.resnet_utils.stack_blocks_dense",
    "tf_slim.ops.arg_scope.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v1_test.ResnetUtilsTest._stack_blocks_nondense": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "enumerate",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v1_test.ResnetUtilsTest.testAtrousValuesBottleneck": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "block",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.ops.variable_scope.get_variable_scope",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.batch_norm",
    "tf_slim.nets.resnet_utils.resnet_arg_scope",
    "tf_slim.nets.resnet_utils.stack_blocks_dense",
    "tf_slim.nets.resnet_utils.subsample",
    "tf_slim.nets.resnet_v1.resnet_v1_block",
    "tf_slim.nets.resnet_v1_test.create_input",
    "tf_slim.ops.arg_scope.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v1_test.ResnetUtilsTest.testConv2DSameEven": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.variable_scope.get_variable",
    "tensorflow.python.ops.variable_scope.get_variable_scope",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.conv2d",
    "tf_slim.nets.resnet_utils.conv2d_same",
    "tf_slim.nets.resnet_utils.subsample",
    "tf_slim.nets.resnet_v1_test.create_input"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v1_test.ResnetUtilsTest.testConv2DSameOdd": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.variable_scope.get_variable",
    "tensorflow.python.ops.variable_scope.get_variable_scope",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.conv2d",
    "tf_slim.nets.resnet_utils.conv2d_same",
    "tf_slim.nets.resnet_utils.subsample",
    "tf_slim.nets.resnet_v1_test.create_input"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v1_test.ResnetUtilsTest.testEndPointsV1": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "tf_slim.nets.resnet_utils.resnet_arg_scope",
    "tf_slim.nets.resnet_v1.resnet_v1_block",
    "tf_slim.nets.resnet_v1_test.create_input",
    "tf_slim.ops.arg_scope.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v1_test.ResnetUtilsTest.testSubsampleFourByFour": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.range",
    "tf_slim.nets.resnet_utils.subsample"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v1_test.ResnetUtilsTest.testSubsampleThreeByThree": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.range",
    "tf_slim.nets.resnet_utils.subsample"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v1_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v1_test.arg_scope": {
  "data": {
   "shadows": "tf_slim.ops.arg_scope.arg_scope"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v1_test.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v1_test.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v1_test.create_input": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.reshape",
    "numpy.tile",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.math_ops.cast"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v1_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v1_test.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v1_test.layers": {
  "data": {
   "shadows": "tf_slim.layers"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v1_test.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v1_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v1_test.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v1_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v1_test.random_seed": {
  "data": {
   "shadows": "tensorflow.python.framework.random_seed"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v1_test.resnet_utils": {
  "data": {
   "shadows": "tf_slim.nets.resnet_utils"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v1_test.resnet_v1": {
  "data": {
   "shadows": "tf_slim.nets.resnet_v1"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v1_test.setUpModule": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "tensorflow.compat.v1.disable_eager_execution"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v1_test.test": {
  "data": {
   "shadows": "tensorflow.python.platform.test"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v1_test.tf": {
  "data": {
   "shadows": "tensorflow.compat.v1"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v1_test.utils": {
  "data": {
   "shadows": "tf_slim.layers.utils"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v1_test.variable_scope": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v1_test.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v2": {
  "data": {
   "shadows": "tf_slim.nets.resnet_v2"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v2.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v2.add_arg_scope": {
  "data": {
   "shadows": "tf_slim.ops.arg_scope.add_arg_scope"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v2.arg_scope": {
  "data": {
   "shadows": "tf_slim.ops.arg_scope.arg_scope"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v2.bottleneck": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "tensorflow.python.ops.nn_ops.relu",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.layers.conv2d",
    "tf_slim.layers.layers.batch_norm",
    "tf_slim.layers.utils.collect_named_outputs",
    "tf_slim.layers.utils.last_dimension",
    "tf_slim.nets.resnet_utils.conv2d_same",
    "tf_slim.nets.resnet_utils.subsample",
    "tf_slim.ops.arg_scope.add_arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v2.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v2.layers": {
  "data": {
   "shadows": "tf_slim.layers.layers"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v2.layers_lib": {
  "data": {
   "shadows": "tf_slim.layers"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v2.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v2.nn_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.nn_ops"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v2.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v2.resnet_arg_scope": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "tf_slim.nets.resnet_v2.resnet_utils": {
  "data": {
   "shadows": "tf_slim.nets.resnet_utils"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v2.resnet_v2": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.ops.math_ops.reduce_mean",
    "tensorflow.python.ops.nn_ops.relu",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.layers.conv2d",
    "tf_slim.layers.layers.batch_norm",
    "tf_slim.layers.layers.max_pool2d",
    "tf_slim.layers.layers.softmax",
    "tf_slim.layers.utils.convert_collection_to_dict",
    "tf_slim.nets.resnet_utils.conv2d_same",
    "tf_slim.nets.resnet_utils.stack_blocks_dense",
    "tf_slim.nets.resnet_v2.bottleneck",
    "tf_slim.ops.arg_scope.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v2.resnet_v2_101": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "tf_slim.nets.resnet_v2.resnet_v2",
    "tf_slim.nets.resnet_v2.resnet_v2_block"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v2.resnet_v2_152": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "tf_slim.nets.resnet_v2.resnet_v2",
    "tf_slim.nets.resnet_v2.resnet_v2_block"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v2.resnet_v2_200": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "tf_slim.nets.resnet_v2.resnet_v2",
    "tf_slim.nets.resnet_v2.resnet_v2_block"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v2.resnet_v2_50": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "tf_slim.nets.resnet_v2.resnet_v2",
    "tf_slim.nets.resnet_v2.resnet_v2_block"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v2.resnet_v2_block": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "tf_slim.nets.resnet_utils.Block",
    "tf_slim.nets.resnet_v2.bottleneck"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v2.utils": {
  "data": {
   "shadows": "tf_slim.layers.utils"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v2.variable_scope": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v2_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.test.main"
   ]
  },
  "type": "module"
 },
 "tf_slim.nets.resnet_v2_test.ResnetCompleteNetworkTest": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.nets.resnet_v2_test.ResnetCompleteNetworkTest._resnet_small": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "block",
    "tf_slim.nets.resnet_v2.resnet_v2",
    "tf_slim.nets.resnet_v2.resnet_v2_block"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v2_test.ResnetCompleteNetworkTest.testAtrousFullyConvolutionalEndpointShapes": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "tf_slim.nets.resnet_utils.resnet_arg_scope",
    "tf_slim.nets.resnet_v2_test.create_input",
    "tf_slim.ops.arg_scope.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v2_test.ResnetCompleteNetworkTest.testAtrousFullyConvolutionalUnknownHeightWidth": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.nets.resnet_utils.resnet_arg_scope",
    "tf_slim.nets.resnet_v2_test.create_input",
    "tf_slim.ops.arg_scope.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v2_test.ResnetCompleteNetworkTest.testAtrousFullyConvolutionalValues": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.ops.variable_scope.get_variable_scope",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.nets.resnet_utils.resnet_arg_scope",
    "tf_slim.nets.resnet_utils.subsample",
    "tf_slim.nets.resnet_v2_test.create_input",
    "tf_slim.ops.arg_scope.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v2_test.ResnetCompleteNetworkTest.testClassificationEndPoints": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "tf_slim.nets.resnet_utils.resnet_arg_scope",
    "tf_slim.nets.resnet_v2_test.create_input",
    "tf_slim.ops.arg_scope.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v2_test.ResnetCompleteNetworkTest.testClassificationShapes": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "tf_slim.nets.resnet_utils.resnet_arg_scope",
    "tf_slim.nets.resnet_v2_test.create_input",
    "tf_slim.ops.arg_scope.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v2_test.ResnetCompleteNetworkTest.testFullyConvolutionalEndpointShapes": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "tf_slim.nets.resnet_utils.resnet_arg_scope",
    "tf_slim.nets.resnet_v2_test.create_input",
    "tf_slim.ops.arg_scope.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v2_test.ResnetCompleteNetworkTest.testFullyConvolutionalUnknownHeightWidth": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.nets.resnet_utils.resnet_arg_scope",
    "tf_slim.nets.resnet_v2_test.create_input",
    "tf_slim.ops.arg_scope.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v2_test.ResnetCompleteNetworkTest.testRootlessFullyConvolutionalEndpointShapes": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "tf_slim.nets.resnet_utils.resnet_arg_scope",
    "tf_slim.nets.resnet_v2_test.create_input",
    "tf_slim.ops.arg_scope.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v2_test.ResnetCompleteNetworkTest.testUnknownBatchSize": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.nets.resnet_utils.resnet_arg_scope",
    "tf_slim.nets.resnet_v2_test.create_input",
    "tf_slim.ops.arg_scope.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v2_test.ResnetUtilsTest": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.nets.resnet_v2_test.ResnetUtilsTest._resnet_plain": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.layers.conv2d",
    "tf_slim.layers.utils.convert_collection_to_dict",
    "tf_slim.nets.resnet_utils.stack_blocks_dense",
    "tf_slim.ops.arg_scope.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v2_test.ResnetUtilsTest._stack_blocks_nondense": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "enumerate",
    "tensorflow.python.ops.variable_scope.variable_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v2_test.ResnetUtilsTest.testAtrousValuesBottleneck": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "block",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.ops.variable_scope.get_variable_scope",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.batch_norm",
    "tf_slim.nets.resnet_utils.resnet_arg_scope",
    "tf_slim.nets.resnet_utils.stack_blocks_dense",
    "tf_slim.nets.resnet_utils.subsample",
    "tf_slim.nets.resnet_v2.resnet_v2_block",
    "tf_slim.nets.resnet_v2_test.create_input",
    "tf_slim.ops.arg_scope.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v2_test.ResnetUtilsTest.testConv2DSameEven": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.variable_scope.get_variable",
    "tensorflow.python.ops.variable_scope.get_variable_scope",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.conv2d",
    "tf_slim.nets.resnet_utils.conv2d_same",
    "tf_slim.nets.resnet_utils.subsample",
    "tf_slim.nets.resnet_v2_test.create_input"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v2_test.ResnetUtilsTest.testConv2DSameOdd": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.zeros",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.variable_scope.get_variable",
    "tensorflow.python.ops.variable_scope.get_variable_scope",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.layers.conv2d",
    "tf_slim.nets.resnet_utils.conv2d_same",
    "tf_slim.nets.resnet_utils.subsample",
    "tf_slim.nets.resnet_v2_test.create_input"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v2_test.ResnetUtilsTest.testEndPointsV2": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "tf_slim.nets.resnet_utils.resnet_arg_scope",
    "tf_slim.nets.resnet_v2.resnet_v2_block",
    "tf_slim.nets.resnet_v2_test.create_input",
    "tf_slim.ops.arg_scope.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v2_test.ResnetUtilsTest.testSubsampleFourByFour": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.range",
    "tf_slim.nets.resnet_utils.subsample"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v2_test.ResnetUtilsTest.testSubsampleThreeByThree": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.math_ops.cast",
    "tensorflow.python.ops.math_ops.range",
    "tf_slim.nets.resnet_utils.subsample"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v2_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v2_test.arg_scope": {
  "data": {
   "shadows": "tf_slim.ops.arg_scope.arg_scope"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v2_test.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v2_test.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v2_test.create_input": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.reshape",
    "numpy.tile",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.math_ops.cast"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v2_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v2_test.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v2_test.layers": {
  "data": {
   "shadows": "tf_slim.layers"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v2_test.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v2_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v2_test.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v2_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v2_test.random_seed": {
  "data": {
   "shadows": "tensorflow.python.framework.random_seed"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v2_test.resnet_utils": {
  "data": {
   "shadows": "tf_slim.nets.resnet_utils"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v2_test.resnet_v2": {
  "data": {
   "shadows": "tf_slim.nets.resnet_v2"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v2_test.setUpModule": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "tensorflow.compat.v1.disable_eager_execution"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.resnet_v2_test.test": {
  "data": {
   "shadows": "tensorflow.python.platform.test"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v2_test.tf": {
  "data": {
   "shadows": "tensorflow.compat.v1"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v2_test.utils": {
  "data": {
   "shadows": "tf_slim.layers.utils"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v2_test.variable_scope": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tf_slim.nets.resnet_v2_test.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tf_slim.nets.vgg": {
  "data": {
   "shadows": "tf_slim.nets.vgg"
  },
  "type": "import"
 },
 "tf_slim.nets.vgg.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.nets.vgg.arg_scope": {
  "data": {
   "shadows": "tf_slim.ops.arg_scope.arg_scope"
  },
  "type": "import"
 },
 "tf_slim.nets.vgg.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tf_slim.nets.vgg.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.nets.vgg.init_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.init_ops"
  },
  "type": "import"
 },
 "tf_slim.nets.vgg.layers": {
  "data": {
   "shadows": "tf_slim.layers"
  },
  "type": "import"
 },
 "tf_slim.nets.vgg.layers_lib": {
  "data": {
   "shadows": "tf_slim.layers.layers"
  },
  "type": "import"
 },
 "tf_slim.nets.vgg.nn_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.nn_ops"
  },
  "type": "import"
 },
 "tf_slim.nets.vgg.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.nets.vgg.regularizers": {
  "data": {
   "shadows": "tf_slim.layers.regularizers"
  },
  "type": "import"
 },
 "tf_slim.nets.vgg.utils": {
  "data": {
   "shadows": "tf_slim.layers.utils"
  },
  "type": "import"
 },
 "tf_slim.nets.vgg.variable_scope": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tf_slim.nets.vgg.vgg_16": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.squeeze",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.layers.layers.conv2d",
    "tf_slim.layers.layers.dropout",
    "tf_slim.layers.layers.fully_connected",
    "tf_slim.layers.layers.max_pool2d",
    "tf_slim.layers.layers.repeat",
    "tf_slim.layers.utils.convert_collection_to_dict",
    "tf_slim.ops.arg_scope.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.vgg.vgg_19": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.squeeze",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.layers.layers.conv2d",
    "tf_slim.layers.layers.dropout",
    "tf_slim.layers.layers.fully_connected",
    "tf_slim.layers.layers.max_pool2d",
    "tf_slim.layers.layers.repeat",
    "tf_slim.layers.utils.convert_collection_to_dict",
    "tf_slim.ops.arg_scope.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.vgg.vgg_a": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.squeeze",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.layers.layers.conv2d",
    "tf_slim.layers.layers.dropout",
    "tf_slim.layers.layers.max_pool2d",
    "tf_slim.layers.layers.repeat",
    "tf_slim.layers.utils.convert_collection_to_dict",
    "tf_slim.ops.arg_scope.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.vgg.vgg_arg_scope": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "tensorflow.python.ops.init_ops.zeros_initializer",
    "tensorflow.python.ops.nn_ops.relu",
    "tf_slim.layers.layers.conv2d",
    "tf_slim.layers.layers.fully_connected",
    "tf_slim.layers.regularizers.l2_regularizer",
    "tf_slim.ops.arg_scope.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.vgg.vgg_d": {
  "data": {
   "lineno": 275
  },
  "type": "constant"
 },
 "tf_slim.nets.vgg.vgg_e": {
  "data": {
   "lineno": 276
  },
  "type": "constant"
 },
 "tf_slim.nets.vgg_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.test.main"
   ]
  },
  "type": "module"
 },
 "tf_slim.nets.vgg_test.VGG16Test": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.nets.vgg_test.VGG16Test.testBuild": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.nets.vgg.vgg_16"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.vgg_test.VGG16Test.testEndPoints": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "set",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.nets.vgg.vgg_16"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.vgg_test.VGG16Test.testEvaluation": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.argmax",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.nets.vgg.vgg_16"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.vgg_test.VGG16Test.testForward": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.nets.vgg.vgg_16"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.vgg_test.VGG16Test.testFullyConvolutional": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.nets.vgg.vgg_16"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.vgg_test.VGG16Test.testModelVariables": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "set",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.nets.vgg.vgg_16",
    "tf_slim.ops.variables.get_model_variables"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.vgg_test.VGG16Test.testTrainEvalWithReuse": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.argmax",
    "tensorflow.python.ops.math_ops.reduce_mean",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variable_scope.get_variable_scope",
    "tf_slim.nets.vgg.vgg_16"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.vgg_test.VGG19Test": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.nets.vgg_test.VGG19Test.testBuild": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.nets.vgg.vgg_19"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.vgg_test.VGG19Test.testEndPoints": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "set",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.nets.vgg.vgg_19"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.vgg_test.VGG19Test.testEvaluation": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.argmax",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.nets.vgg.vgg_19"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.vgg_test.VGG19Test.testForward": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.nets.vgg.vgg_19"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.vgg_test.VGG19Test.testFullyConvolutional": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.nets.vgg.vgg_19"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.vgg_test.VGG19Test.testModelVariables": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "set",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.nets.vgg.vgg_19",
    "tf_slim.ops.variables.get_model_variables"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.vgg_test.VGG19Test.testTrainEvalWithReuse": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.argmax",
    "tensorflow.python.ops.math_ops.reduce_mean",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variable_scope.get_variable_scope",
    "tf_slim.nets.vgg.vgg_19"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.vgg_test.VGGATest": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.nets.vgg_test.VGGATest.testBuild": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.nets.vgg.vgg_a"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.vgg_test.VGGATest.testEndPoints": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "set",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.nets.vgg.vgg_a"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.vgg_test.VGGATest.testEvaluation": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.argmax",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.nets.vgg.vgg_a"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.vgg_test.VGGATest.testForward": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.nets.vgg.vgg_a"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.vgg_test.VGGATest.testFullyConvolutional": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.nets.vgg.vgg_a"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.vgg_test.VGGATest.testModelVariables": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "set",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tf_slim.nets.vgg.vgg_a",
    "tf_slim.ops.variables.get_model_variables"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.vgg_test.VGGATest.testTrainEvalWithReuse": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.argmax",
    "tensorflow.python.ops.math_ops.reduce_mean",
    "tensorflow.python.ops.random_ops.random_uniform",
    "tensorflow.python.ops.variable_scope.get_variable_scope",
    "tf_slim.nets.vgg.vgg_a"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.vgg_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.nets.vgg_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.nets.vgg_test.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tf_slim.nets.vgg_test.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tf_slim.nets.vgg_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.nets.vgg_test.random_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.random_ops"
  },
  "type": "import"
 },
 "tf_slim.nets.vgg_test.setUpModule": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "tensorflow.compat.v1.disable_eager_execution"
   ]
  },
  "type": "function"
 },
 "tf_slim.nets.vgg_test.test": {
  "data": {
   "shadows": "tensorflow.python.platform.test"
  },
  "type": "import"
 },
 "tf_slim.nets.vgg_test.tf": {
  "data": {
   "shadows": "tensorflow.compat.v1"
  },
  "type": "import"
 },
 "tf_slim.nets.vgg_test.variable_scope": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tf_slim.nets.vgg_test.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tf_slim.nets.vgg_test.variables_lib": {
  "data": {
   "shadows": "tf_slim.ops.variables"
  },
  "type": "import"
 },
 "tf_slim.nets.vgg_test.vgg": {
  "data": {
   "shadows": "tf_slim.nets.vgg"
  },
  "type": "import"
 },
 "tf_slim.ops": {
  "data": {},
  "type": "module"
 },
 "tf_slim.ops.arg_scope": {
  "data": {},
  "type": "module"
 },
 "tf_slim.ops.arg_scope._ARGSTACK": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "tf_slim.ops.arg_scope._DECORATED_OPS": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "tf_slim.ops.arg_scope.__all__": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "tf_slim.ops.arg_scope._add_op": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "tf_slim.ops.arg_scope._DECORATED_OPS",
    "tf_slim.ops.arg_scope._kwarg_names",
    "tf_slim.ops.arg_scope.arg_scope_func_key"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.arg_scope._get_arg_stack": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "tf_slim.ops.arg_scope._ARGSTACK"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.arg_scope._kwarg_names": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.arg_scope._name_op": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "tf_slim.ops.arg_scope.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.ops.arg_scope.add_arg_scope": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "func",
    "setattr",
    "tensorflow.python.util.tf_decorator.make_decorator",
    "tf_slim.ops.arg_scope._add_op",
    "tf_slim.ops.arg_scope.arg_scope_func_key"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.arg_scope.add_arg_scope.func_with_args": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "func",
    "tf_slim.ops.arg_scope.arg_scope_func_key",
    "tf_slim.ops.arg_scope.current_arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.arg_scope.arg_scope": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dict",
    "isinstance",
    "list",
    "tensorflow.python.util.tf_contextlib.contextmanager",
    "tf_slim.ops.arg_scope._get_arg_stack",
    "tf_slim.ops.arg_scope._name_op",
    "tf_slim.ops.arg_scope.arg_scope_func_key",
    "tf_slim.ops.arg_scope.current_arg_scope",
    "tf_slim.ops.arg_scope.has_arg_scope",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.arg_scope.arg_scope_func_key": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "getattr",
    "str"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.arg_scope.arg_scoped_arguments": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "func",
    "tf_slim.ops.arg_scope._DECORATED_OPS",
    "tf_slim.ops.arg_scope.arg_scope_func_key",
    "tf_slim.ops.arg_scope.has_arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.arg_scope.current_arg_scope": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "tf_slim.ops.arg_scope._get_arg_stack"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.arg_scope.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.ops.arg_scope.has_arg_scope": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "func",
    "tf_slim.ops.arg_scope._DECORATED_OPS",
    "tf_slim.ops.arg_scope.arg_scope_func_key"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.arg_scope.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.ops.arg_scope.tf_contextlib": {
  "data": {
   "shadows": "tensorflow.python.util.tf_contextlib"
  },
  "type": "import"
 },
 "tf_slim.ops.arg_scope.tf_decorator": {
  "data": {
   "shadows": "tensorflow.python.util.tf_decorator"
  },
  "type": "import"
 },
 "tf_slim.ops.arg_scope_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.compat.v1.test.main",
    "tf_slim.ops.arg_scope",
    "tf_slim.ops.arg_scope.add_arg_scope",
    "tf_slim.ops.arg_scope.arg_scope",
    "tf_slim.ops.arg_scope.arg_scoped_arguments"
   ]
  },
  "type": "module"
 },
 "tf_slim.ops.arg_scope_test.ArgScopeTest": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "tensorflow.compat.v1.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.ops.arg_scope_test.ArgScopeTest.testAddArgScopeRaceCondition": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "range",
    "tf_slim.ops.arg_scope_test.arg_scoped_arguments",
    "tf_slim.ops.arg_scope_test.func4"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.arg_scope_test.ArgScopeTest.testAddArgScopeRaceCondition.func4": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "tf_slim.ops.arg_scope_test.add_arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.arg_scope_test.ArgScopeTest.testArgScopeObjectCreatedWithinScopeInheritsArgScope": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "get_scope_object",
    "tf_slim.ops.arg_scope",
    "tf_slim.ops.arg_scope_test.func1"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.arg_scope_test.ArgScopeTest.testArgScopeObjectCreatedWithinScopeInheritsArgScope.get_scope_object": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "tf_slim.ops.arg_scope",
    "tf_slim.ops.arg_scope_test.func1"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.arg_scope_test.ArgScopeTest.testArgScopedArguments": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "tf_slim.ops.arg_scope_test.arg_scoped_arguments",
    "tf_slim.ops.arg_scope_test.func3"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.arg_scope_test.ArgScopeTest.testClearArgScope": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "tf_slim.ops.arg_scope",
    "tf_slim.ops.arg_scope_test._key_op",
    "tf_slim.ops.arg_scope_test.func1"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.arg_scope_test.ArgScopeTest.testCurrentArgScope": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "tf_slim.ops.arg_scope",
    "tf_slim.ops.arg_scope_test._key_op",
    "tf_slim.ops.arg_scope_test.func1"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.arg_scope_test.ArgScopeTest.testCurrentArgScopeNested": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "key",
    "tf_slim.ops.arg_scope",
    "tf_slim.ops.arg_scope_test._key_op",
    "tf_slim.ops.arg_scope_test.func1",
    "tf_slim.ops.arg_scope_test.func2"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.arg_scope_test.ArgScopeTest.testDocString": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "tf_slim.ops.arg_scope_test.func3"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.arg_scope_test.ArgScopeTest.testEmptyArgScope": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "tf_slim.ops.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.arg_scope_test.ArgScopeTest.testNestedArgScope": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "tf_slim.ops.arg_scope",
    "tf_slim.ops.arg_scope_test.func1"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.arg_scope_test.ArgScopeTest.testNestedArgScopeObjectCreatedOutsideScopeOverridesArgScope": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "get_scope_object",
    "tf_slim.ops.arg_scope",
    "tf_slim.ops.arg_scope_test.func1"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.arg_scope_test.ArgScopeTest.testNestedArgScopeObjectCreatedOutsideScopeOverridesArgScope.get_scope_object": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "tf_slim.ops.arg_scope",
    "tf_slim.ops.arg_scope_test.func1"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.arg_scope_test.ArgScopeTest.testNonDecorated": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ValueError",
    "tf_slim.ops.arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.arg_scope_test.ArgScopeTest.testNonDecorated.my_func": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "tf_slim.ops.arg_scope_test.ArgScopeTest.testOverwriteArgScope": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "tf_slim.ops.arg_scope",
    "tf_slim.ops.arg_scope_test.func1"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.arg_scope_test.ArgScopeTest.testPartiallySharedArgScope": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "tf_slim.ops.arg_scope",
    "tf_slim.ops.arg_scope_test.func1",
    "tf_slim.ops.arg_scope_test.func2"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.arg_scope_test.ArgScopeTest.testReuseArgScope": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "tf_slim.ops.arg_scope",
    "tf_slim.ops.arg_scope_test._key_op",
    "tf_slim.ops.arg_scope_test.func1"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.arg_scope_test.ArgScopeTest.testReuseArgScopeNested": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "key",
    "tf_slim.ops.arg_scope",
    "tf_slim.ops.arg_scope_test._key_op",
    "tf_slim.ops.arg_scope_test.func1",
    "tf_slim.ops.arg_scope_test.func2"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.arg_scope_test.ArgScopeTest.testSharedArgScope": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "tf_slim.ops.arg_scope",
    "tf_slim.ops.arg_scope_test.func1",
    "tf_slim.ops.arg_scope_test.func2"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.arg_scope_test.ArgScopeTest.testSharedArgScopeTuple": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "tf_slim.ops.arg_scope",
    "tf_slim.ops.arg_scope_test.func1",
    "tf_slim.ops.arg_scope_test.func2"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.arg_scope_test.ArgScopeTest.testSimpleArgScope": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "tf_slim.ops.arg_scope",
    "tf_slim.ops.arg_scope_test.func1"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.arg_scope_test.ArgScopeTest.testSimpleArgScopeWithTuple": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "tf_slim.ops.arg_scope",
    "tf_slim.ops.arg_scope_test.func1"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.arg_scope_test.ArgScopeTest.testUnexpectedArg": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "TypeError",
    "tf_slim.ops.arg_scope",
    "tf_slim.ops.arg_scope_test.func3"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.arg_scope_test._key_op": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "getattr",
    "str"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.arg_scope_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.ops.arg_scope_test.add_arg_scope": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "tf_slim.ops.arg_scope_test.arg_scope": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "tf_slim.ops.arg_scope_test.arg_scope_lib": {
  "data": {
   "shadows": "tf_slim.ops.arg_scope"
  },
  "type": "import"
 },
 "tf_slim.ops.arg_scope_test.arg_scoped_arguments": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "tf_slim.ops.arg_scope_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.ops.arg_scope_test.func1": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "tf_slim.ops.arg_scope_test.add_arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.arg_scope_test.func2": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "tf_slim.ops.arg_scope_test.add_arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.arg_scope_test.func3": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "tf_slim.ops.arg_scope_test.add_arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.arg_scope_test.func4": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "tf_slim.ops.arg_scope_test.add_arg_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.arg_scope_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.ops.arg_scope_test.tf": {
  "data": {
   "shadows": "tensorflow.compat.v1"
  },
  "type": "import"
 },
 "tf_slim.ops.framework_ops": {
  "data": {},
  "type": "module"
 },
 "tf_slim.ops.framework_ops.__all__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "tf_slim.ops.framework_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.ops.framework_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.ops.framework_ops.get_graph_from_inputs": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops._get_graph_from_inputs"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.framework_ops.get_name_scope": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_default_graph"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.framework_ops.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tf_slim.ops.framework_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.ops.framework_ops_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.test.main"
   ]
  },
  "type": "module"
 },
 "tf_slim.ops.framework_ops_test.OpsTest": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.ops.framework_ops_test.OpsTest.testGetGraphFromEmptyInputs": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.Graph",
    "tf_slim.ops.framework_ops.get_graph_from_inputs"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.framework_ops_test.OpsTest.testGetGraphFromInvalidInputs": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.Graph",
    "tf_slim.ops.framework_ops.get_graph_from_inputs"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.framework_ops_test.OpsTest.testGetGraphFromValidInputs": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.Graph",
    "tf_slim.ops.framework_ops.get_graph_from_inputs"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.framework_ops_test.OpsTest.testGetNameScope": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope",
    "tf_slim.ops.framework_ops.get_name_scope"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.framework_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.ops.framework_ops_test.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tf_slim.ops.framework_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.ops.framework_ops_test.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tf_slim.ops.framework_ops_test.ops_lib": {
  "data": {
   "shadows": "tf_slim.ops.framework_ops"
  },
  "type": "import"
 },
 "tf_slim.ops.framework_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.ops.framework_ops_test.setUpModule": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "tensorflow.compat.v1.disable_eager_execution"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.framework_ops_test.test": {
  "data": {
   "shadows": "tensorflow.python.platform.test"
  },
  "type": "import"
 },
 "tf_slim.ops.framework_ops_test.tf": {
  "data": {
   "shadows": "tensorflow.compat.v1"
  },
  "type": "import"
 },
 "tf_slim.ops.variables": {
  "data": {},
  "type": "module"
 },
 "tf_slim.ops.variables.VariableDeviceChooser": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tf_slim.ops.variables.VariableDeviceChooser.__call__": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": [
    "tensorflow.python.framework.device_spec",
    "tensorflow.python.framework.device_spec.DeviceSpecV1",
    "tensorflow.python.framework.device_spec.job",
    "tensorflow.python.framework.device_spec.task",
    "tensorflow.python.framework.device_spec.to_string"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables.VariableDeviceChooser.__init__": {
  "data": {
   "lineno": 747
  },
  "type": "function"
 },
 "tf_slim.ops.variables.__all__": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "tf_slim.ops.variables.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.ops.variables.add_model_variable": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.MODEL_VARIABLES",
    "tensorflow.python.framework.ops.add_to_collection",
    "tensorflow.python.framework.ops.get_collection"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables.arg_scope": {
  "data": {
   "shadows": "tf_slim.ops.arg_scope"
  },
  "type": "import"
 },
 "tf_slim.ops.variables.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tf_slim.ops.variables.assert_global_step": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "tensorflow.python.training.training_util.assert_global_step",
    "tensorflow.python.util.deprecation.deprecated"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables.assert_or_get_global_step": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "tf_slim.ops.variables.assert_global_step",
    "tf_slim.ops.variables.get_global_step"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables.assign_from_checkpoint": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "slice",
    "str",
    "tensorflow.compat.v1.train.NewCheckpointReader",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.control_flow_ops.group",
    "tensorflow.python.platform.tf_logging.warning",
    "tf_slim.ops.variables.get_variable_full_name",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables.assign_from_checkpoint_fn": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "tensorflow.compat.v1.train.NewCheckpointReader",
    "tensorflow.core.protobuf.saver_pb2.SaverDef.V1",
    "tensorflow.python.platform.tf_logging.warning",
    "tensorflow.python.training.saver",
    "tensorflow.python.training.saver.Saver"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables.assign_from_checkpoint_fn.callback": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "tensorflow.python.training.saver.restore"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables.assign_from_values": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "tensorflow.python.framework.ops.GraphKeys.GLOBAL_VARIABLES",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.control_flow_ops.group"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables.assign_from_values_fn": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "tf_slim.ops.variables.assign_from_values"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables.assign_from_values_fn.callback": {
  "data": {
   "lineno": 564
  },
  "type": "function"
 },
 "tf_slim.ops.variables.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tf_slim.ops.variables.create_global_step": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "tensorflow.python.training.training_util.create_global_step",
    "tensorflow.python.util.deprecation.deprecated"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables.deprecated": {
  "data": {
   "shadows": "tensorflow.python.util.deprecation.deprecated"
  },
  "type": "import"
 },
 "tf_slim.ops.variables.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.ops.variables.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tf_slim.ops.variables.filter_variables": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "any",
    "list",
    "reg_exp_func",
    "tf_slim.ops.variables.re"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "tf_slim.ops.variables.get_global_step": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "tensorflow.python.training.training_util.get_global_step",
    "tensorflow.python.util.deprecation.deprecated"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables.get_local_variables": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.LOCAL_VARIABLES",
    "tf_slim.ops.variables.get_variables"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables.get_model_variables": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.MODEL_VARIABLES",
    "tf_slim.ops.variables.get_variables"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables.get_or_create_global_step": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "tensorflow.python.training.training_util.get_or_create_global_step",
    "tensorflow.python.util.deprecation.deprecated"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables.get_trainable_variables": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.TRAINABLE_VARIABLES",
    "tf_slim.ops.variables.get_variables"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables.get_unique_variable": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "ValueError",
    "tf_slim.ops.variables.get_variables"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables.get_variable_full_name": {
  "data": {
   "lineno": 573
  },
  "type": "function"
 },
 "tf_slim.ops.variables.get_variables": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.ops.GraphKeys.GLOBAL_VARIABLES",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.variable_scope.VariableScope"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables.get_variables_by_name": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "tf_slim.ops.variables.get_variables"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables.get_variables_by_suffix": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "tf_slim.ops.variables.get_variables"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables.get_variables_to_restore": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "list",
    "set",
    "tf_slim.ops.variables.get_variables",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables.global_variable": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.GLOBAL_VARIABLES",
    "tensorflow.python.ops.variable_scope.variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables.local_variable": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.LOCAL_VARIABLES",
    "tensorflow.python.ops.variable_scope.variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tf_slim.ops.variables.model_variable": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "list",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.GraphKeys.GLOBAL_VARIABLES",
    "tensorflow.python.framework.ops.GraphKeys.MODEL_VARIABLES",
    "tensorflow.python.ops.variables.VariableAggregation.NONE",
    "tensorflow.python.ops.variables.VariableSynchronization.AUTO",
    "tf_slim.ops.arg_scope.add_arg_scope",
    "tf_slim.ops.variables.variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tf_slim.ops.variables.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.ops.variables.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "tf_slim.ops.variables.saver_pb2": {
  "data": {
   "shadows": "tensorflow.core.protobuf.saver_pb2"
  },
  "type": "import"
 },
 "tf_slim.ops.variables.tf": {
  "data": {
   "shadows": "tensorflow.compat.v1"
  },
  "type": "import"
 },
 "tf_slim.ops.variables.tf_device": {
  "data": {
   "shadows": "tensorflow.python.framework.device_spec"
  },
  "type": "import"
 },
 "tf_slim.ops.variables.tf_saver": {
  "data": {
   "shadows": "tensorflow.python.training.saver"
  },
  "type": "import"
 },
 "tf_slim.ops.variables.training_util": {
  "data": {
   "shadows": "tensorflow.python.training.training_util"
  },
  "type": "import"
 },
 "tf_slim.ops.variables.variable": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "getter",
    "list",
    "set",
    "tensorflow.python.framework.ops.GraphKeys.GLOBAL_VARIABLES",
    "tensorflow.python.framework.ops.device",
    "tensorflow.python.ops.variable_scope.get_variable",
    "tensorflow.python.ops.variable_scope.get_variable_scope",
    "tensorflow.python.ops.variables.VariableAggregation.NONE",
    "tensorflow.python.ops.variables.VariableSynchronization.AUTO",
    "tf_slim.ops.arg_scope.add_arg_scope",
    "tf_slim.ops.variables.functools"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables.variable_scope": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tf_slim.ops.variables.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tf_slim.ops.variables_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.test.main"
   ]
  },
  "type": "module"
 },
 "tf_slim.ops.variables_test.AssignFromCheckpointFnTest": {
  "data": {
   "lineno": 1110,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.ops.variables_test.AssignFromCheckpointFnTest.create_checkpoint_from_values": {
  "data": {
   "lineno": 1112,
   "symbols_in_volume": [
    "tensorflow.python.client.session.Session",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.ops.variables.VariableV1",
    "tensorflow.python.ops.variables.variables_initializer",
    "tensorflow.python.training.saver",
    "tensorflow.python.training.saver.Saver",
    "tensorflow.python.training.saver.save"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.AssignFromCheckpointFnTest.testLoadExistingVariables": {
  "data": {
   "lineno": 1138,
   "symbols_in_volume": [
    "init_fn",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tensorflow.python.platform.gfile.DeleteRecursively",
    "tensorflow.python.platform.gfile.Exists",
    "tf_slim.ops.variables.assign_from_checkpoint_fn",
    "tf_slim.ops.variables.variable",
    "tf_slim.ops.variables_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.AssignFromCheckpointFnTest.testLoadExistingVariablesDifferentShapeAllowReshape": {
  "data": {
   "lineno": 1194,
   "symbols_in_volume": [
    "init_fn",
    "numpy.array",
    "numpy.transpose",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tensorflow.python.platform.gfile.DeleteRecursively",
    "tensorflow.python.platform.gfile.Exists",
    "tf_slim.ops.variables.assign_from_checkpoint_fn",
    "tf_slim.ops.variables.variable",
    "tf_slim.ops.variables_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.AssignFromCheckpointFnTest.testLoadExistingVariablesDifferentShapeDefaultDoesNotAllowReshape": {
  "data": {
   "lineno": 1167,
   "symbols_in_volume": [
    "init_fn",
    "tensorflow.python.framework.errors_impl.InvalidArgumentError",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tensorflow.python.platform.gfile.DeleteRecursively",
    "tensorflow.python.platform.gfile.Exists",
    "tf_slim.ops.variables.assign_from_checkpoint_fn",
    "tf_slim.ops.variables.variable",
    "tf_slim.ops.variables_test.tempfile",
    "tf_slim.ops.variables_test.unittest"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.AssignFromCheckpointFnTest.testMissingVariablesDict": {
  "data": {
   "lineno": 1281,
   "symbols_in_volume": [
    "init_fn",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tensorflow.python.platform.gfile.DeleteRecursively",
    "tensorflow.python.platform.gfile.Exists",
    "tf_slim.ops.variables.assign_from_checkpoint_fn",
    "tf_slim.ops.variables.variable",
    "tf_slim.ops.variables_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.AssignFromCheckpointFnTest.testMissingVariablesList": {
  "data": {
   "lineno": 1251,
   "symbols_in_volume": [
    "init_fn",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tensorflow.python.platform.gfile.DeleteRecursively",
    "tensorflow.python.platform.gfile.Exists",
    "tf_slim.ops.variables.assign_from_checkpoint_fn",
    "tf_slim.ops.variables.variable",
    "tf_slim.ops.variables_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.AssignFromCheckpointFnTest.testNotFoundError": {
  "data": {
   "lineno": 1224,
   "symbols_in_volume": [
    "init_fn",
    "tensorflow.python.framework.errors_impl.NotFoundError",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tensorflow.python.platform.gfile.DeleteRecursively",
    "tensorflow.python.platform.gfile.Exists",
    "tf_slim.ops.variables.assign_from_checkpoint_fn",
    "tf_slim.ops.variables.variable",
    "tf_slim.ops.variables_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.AssignFromCheckpointTest": {
  "data": {
   "lineno": 963,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.ops.variables_test.AssignFromCheckpointTest.create_checkpoint_from_values": {
  "data": {
   "lineno": 965,
   "symbols_in_volume": [
    "tensorflow.python.client.session.Session",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.ops.variables.VariableV1",
    "tensorflow.python.ops.variables.variables_initializer",
    "tensorflow.python.training.saver",
    "tensorflow.python.training.saver.Saver",
    "tensorflow.python.training.saver.save"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.AssignFromCheckpointTest.testInitFromCheckpointWithScopes": {
  "data": {
   "lineno": 1077,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.float32",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.ops.variables.assign_from_checkpoint",
    "tf_slim.ops.variables.variable",
    "tf_slim.ops.variables_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.AssignFromCheckpointTest.testLoadExistingVariables": {
  "data": {
   "lineno": 991,
   "symbols_in_volume": [
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.ops.variables.assign_from_checkpoint",
    "tf_slim.ops.variables.variable",
    "tf_slim.ops.variables_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.AssignFromCheckpointTest.testLoadPartitionedVariables": {
  "data": {
   "lineno": 1020,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.array_equal",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.partitioned_variables.variable_axis_size_partitioner",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.ops.variables.assign_from_checkpoint",
    "tf_slim.ops.variables.variable",
    "tf_slim.ops.variables_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.AssignFromCheckpointTest.testRaisesValueErrorIfAVariableIsntFound": {
  "data": {
   "lineno": 1059,
   "symbols_in_volume": [
    "ValueError",
    "tf_slim.ops.variables.assign_from_checkpoint",
    "tf_slim.ops.variables.variable",
    "tf_slim.ops.variables_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.AssignFromValuesFnTest": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.ops.variables_test.AssignFromValuesFnTest.testNoScopes": {
  "data": {
   "lineno": 906,
   "symbols_in_volume": [
    "init_fn",
    "numpy.asarray",
    "tensorflow.python.ops.init_ops.truncated_normal_initializer",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.ops.variables.assign_from_values_fn",
    "tf_slim.ops.variables.variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.AssignFromValuesFnTest.testWithScopes": {
  "data": {
   "lineno": 931,
   "symbols_in_volume": [
    "init_fn",
    "numpy.asarray",
    "tensorflow.python.ops.init_ops.truncated_normal_initializer",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.ops.variables.assign_from_values_fn",
    "tf_slim.ops.variables.variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.AssignFromValuesTest": {
  "data": {
   "lineno": 843,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.ops.variables_test.AssignFromValuesTest.testNoScopes": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "numpy.asarray",
    "tensorflow.python.ops.init_ops.truncated_normal_initializer",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.ops.variables.assign_from_values",
    "tf_slim.ops.variables.variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.AssignFromValuesTest.testWithScopes": {
  "data": {
   "lineno": 871,
   "symbols_in_volume": [
    "numpy.asarray",
    "tensorflow.python.ops.init_ops.truncated_normal_initializer",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.ops.variables.assign_from_values",
    "tf_slim.ops.variables.variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.FilterVariablesTest": {
  "data": {
   "lineno": 1312,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.ops.variables_test.FilterVariablesTest._test_filter_variables": {
  "data": {
   "lineno": 1328,
   "symbols_in_volume": [
    "len",
    "tf_slim.ops.variables.filter_variables"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.FilterVariablesTest.setUp": {
  "data": {
   "lineno": 1314,
   "symbols_in_volume": [
    "super",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.ops.variables.VariableV1",
    "tf_slim.ops.variables_test.FilterVariablesTest"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.FilterVariablesTest.testExcludeWeights": {
  "data": {
   "lineno": 1358
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.FilterVariablesTest.testExcludeWeightsAndConv1": {
  "data": {
   "lineno": 1363
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.FilterVariablesTest.testIncludeBiases": {
  "data": {
   "lineno": 1353
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.FilterVariablesTest.testIncludeConv1ExcludeBiases": {
  "data": {
   "lineno": 1375
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.FilterVariablesTest.testNoFiltering": {
  "data": {
   "lineno": 1347
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.FilterVariablesTest.testRegMatchIncludeBiases": {
  "data": {
   "lineno": 1381
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.FilterVariablesTest.testRegMatchIncludeBiasesWithIncompleteRegExpHasNoMatches": {
  "data": {
   "lineno": 1387
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.FilterVariablesTest.testTwoIncludePatternsEnsureNoVariablesTwiceInFilteredList": {
  "data": {
   "lineno": 1368
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.GetVariableFullNameTest": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.ops.variables_test.GetVariableFullNameTest.testPartitionedVariable": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": [
    "list",
    "tensorflow.python.ops.partitioned_variables.variable_axis_size_partitioner",
    "tf_slim.ops.variables.get_variable_full_name",
    "tf_slim.ops.variables.variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.GetVariableFullNameTest.testVariable": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": [
    "tf_slim.ops.variables.get_variable_full_name",
    "tf_slim.ops.variables.variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.GetVariablesByNameTest": {
  "data": {
   "lineno": 789,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.ops.variables_test.GetVariablesByNameTest.testGetVariableGivenNameScoped": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.ops.variables.get_variables_by_name",
    "tf_slim.ops.variables.variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.GetVariablesByNameTest.testGetVariableWithScope": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.ops.variables.get_variables_by_name",
    "tf_slim.ops.variables.variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.GetVariablesByNameTest.testGetVariableWithoutScope": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "tf_slim.ops.variables.get_variables_by_name",
    "tf_slim.ops.variables.variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.GetVariablesBySuffixTest": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.ops.variables_test.GetVariablesBySuffixTest.testGetVariableGivenNameScoped": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.ops.variables.get_variables_by_suffix",
    "tf_slim.ops.variables.variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.GetVariablesBySuffixTest.testGetVariableWithScope": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.ops.variables.get_variables_by_suffix",
    "tf_slim.ops.variables.variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.GetVariablesBySuffixTest.testGetVariableWithoutScope": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": [
    "tf_slim.ops.variables.get_variables_by_suffix",
    "tf_slim.ops.variables.variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.GetVariablesCollections": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.ops.variables_test.GetVariablesCollections.testVariableCollection": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tf_slim.ops.variables.variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.GetVariablesCollections.testVariableCollections": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tf_slim.ops.variables.variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.GetVariablesCollections.testVariableCollectionsWithArgScope": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tf_slim.ops.arg_scope.arg_scope",
    "tf_slim.ops.variables.variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.GetVariablesCollections.testVariableCollectionsWithArgScopeNested": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tf_slim.ops.arg_scope.arg_scope",
    "tf_slim.ops.variables.variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.GetVariablesCollections.testVariableCollectionsWithArgScopeNonNested": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tf_slim.ops.arg_scope.arg_scope",
    "tf_slim.ops.variables.variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.GetVariablesCollections.testVariableRestoreWithArgScopeNested": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.variables.trainable_variables",
    "tf_slim.ops.arg_scope.arg_scope",
    "tf_slim.ops.variables.get_variables_to_restore",
    "tf_slim.ops.variables.variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.GlobalStepTest": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.ops.variables_test.GlobalStepTest._assert_global_step": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int64",
    "tensorflow.python.framework.ops.GraphKeys.GLOBAL_STEP"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.GlobalStepTest.test_create_global_step": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.framework.ops.Graph",
    "tf_slim.ops.variables.create_global_step",
    "tf_slim.ops.variables.get_global_step"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.GlobalStepTest.test_get_global_step": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.ops.GraphKeys.GLOBAL_STEP",
    "tensorflow.python.framework.ops.GraphKeys.GLOBAL_VARIABLES",
    "tensorflow.python.ops.variables.VariableV1",
    "tf_slim.ops.variables.get_global_step"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.GlobalStepTest.test_get_or_create_global_step": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.Graph",
    "tf_slim.ops.variables.get_global_step",
    "tf_slim.ops.variables.get_or_create_global_step"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.GlobalStepTest.test_invalid_dtype": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "TypeError",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.ops.GraphKeys.GLOBAL_STEP",
    "tensorflow.python.ops.variables.VariableV1",
    "tf_slim.ops.variables.get_global_step"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.GlobalStepTest.test_invalid_shape": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "TypeError",
    "tensorflow.python.framework.dtypes.int32",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.ops.GraphKeys.GLOBAL_STEP",
    "tensorflow.python.framework.ops.GraphKeys.GLOBAL_VARIABLES",
    "tensorflow.python.ops.variables.VariableV1",
    "tf_slim.ops.variables.get_global_step"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.GlobalVariableTest": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.ops.variables_test.GlobalVariableTest.testGetLocalVariablesDontReturnsThem": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.ops.variables.get_local_variables",
    "tf_slim.ops.variables.global_variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.GlobalVariableTest.testGetVariablesReturnsThem": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.ops.variables.get_variables",
    "tf_slim.ops.variables.global_variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.GlobalVariableTest.testGlobalVariableInVariablesToRestore": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tensorflow.python.ops.variables.local_variables",
    "tf_slim.ops.variables.get_variables_to_restore",
    "tf_slim.ops.variables.global_variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.GlobalVariableTest.testGlobalVariableNotInLocalVariables": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tensorflow.python.ops.variables.global_variables",
    "tensorflow.python.ops.variables.local_variables",
    "tf_slim.ops.variables.global_variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.GlobalVariableTest.testInitializedVariableValue": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.ops.variables.global_variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.GlobalVariableTest.testResourceVariable": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "tensorflow.python.ops.resource_variable_ops.ResourceVariable",
    "tensorflow.python.ops.variables.Variable",
    "tf_slim.ops.variables.global_variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.GlobalVariableTest.testVariableNameAndShape": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tensorflow.python.ops.variables.global_variables",
    "tf_slim.ops.variables.global_variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.GlobalVariableTest.test_global_variable": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "len",
    "set",
    "tensorflow.python.framework.errors_impl.FailedPreconditionError",
    "tensorflow.python.ops.variables",
    "tensorflow.python.ops.variables.global_variables",
    "tensorflow.python.ops.variables.variables_initializer",
    "tf_slim.ops.variables.global_variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.LocalVariableTest": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.ops.variables_test.LocalVariableTest.testGetLocalVariablesReturnsTransients": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.ops.variables.get_local_variables",
    "tf_slim.ops.variables.local_variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.LocalVariableTest.testGetVariablesDontReturnsTransients": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.ops.variables.get_variables",
    "tf_slim.ops.variables.local_variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.LocalVariableTest.testInitializedVariableValue": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "tensorflow.python.ops.variables.local_variables_initializer",
    "tf_slim.ops.variables.local_variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.LocalVariableTest.testLocalVariableNameAndShape": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.ops.variables.get_local_variables",
    "tf_slim.ops.variables.local_variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.LocalVariableTest.testLocalVariableNotInAllVariables": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tensorflow.python.ops.variables.global_variables",
    "tensorflow.python.ops.variables.local_variables",
    "tf_slim.ops.variables.local_variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.LocalVariableTest.testLocalVariableNotInVariablesToRestore": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tensorflow.python.ops.variables.local_variables",
    "tf_slim.ops.variables.get_variables_to_restore",
    "tf_slim.ops.variables.local_variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.LocalVariableTest.testResourceVariable": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "tensorflow.python.ops.resource_variable_ops.ResourceVariable",
    "tensorflow.python.ops.variables.Variable",
    "tf_slim.ops.variables.local_variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.LocalVariableTest.test_local_variable": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "len",
    "set",
    "tensorflow.python.framework.errors_impl.OpError",
    "tensorflow.python.ops.variables",
    "tensorflow.python.ops.variables.local_variables",
    "tensorflow.python.ops.variables.variables_initializer",
    "tf_slim.ops.variables.local_variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.ModelVariablesTest": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.ops.variables_test.ModelVariablesTest.testDeviceFn": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "DevFn",
    "tensorflow.python.framework.ops.Graph",
    "tf_slim.ops.arg_scope.arg_scope",
    "tf_slim.ops.variables.model_variable",
    "tf_slim.ops.variables_test.temporary_disable_resource_variables"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.ModelVariablesTest.testDeviceFn.DevFn": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tf_slim.ops.variables_test.ModelVariablesTest.testDeviceFn.DevFn.__call__": {
  "data": {
   "lineno": 667
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.ModelVariablesTest.testDeviceFn.DevFn.__init__": {
  "data": {
   "lineno": 664
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.ModelVariablesTest.testGetLocalVariables": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.ops.variables.get_local_variables",
    "tf_slim.ops.variables.model_variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.ModelVariablesTest.testGetModelVariables": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.ops.variables.get_model_variables",
    "tf_slim.ops.variables.model_variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.ModelVariablesTest.testGetTrainableVariables": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tensorflow.python.ops.variables.VariableV1",
    "tf_slim.ops.variables.get_trainable_variables",
    "tf_slim.ops.variables.local_variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.ModelVariablesTest.testGetVariablesReturns": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.ops.variables.get_variables",
    "tf_slim.ops.variables.model_variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.ModelVariablesTest.testInitializedVariableValue": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "tensorflow.python.ops.init_ops.ones_initializer",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.ops.variables.model_variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.ModelVariablesTest.testNameAndShape": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.ops.variables.get_model_variables",
    "tf_slim.ops.variables.model_variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.ModelVariablesTest.testNotInLocalVariables": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.MODEL_VARIABLES",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tensorflow.python.ops.variables.global_variables",
    "tensorflow.python.ops.variables.local_variables",
    "tf_slim.ops.variables.model_variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.ModelVariablesTest.testVariableWithVariableDeviceChooser": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.Graph",
    "tf_slim.ops.arg_scope.arg_scope",
    "tf_slim.ops.variables.VariableDeviceChooser",
    "tf_slim.ops.variables.model_variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.VariablesTest": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.ops.variables_test.VariablesTest.testCreateVariable": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.GLOBAL_VARIABLES",
    "tensorflow.python.framework.ops.GraphKeys.MODEL_VARIABLES",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tensorflow.python.ops.variables.local_variables",
    "tf_slim.ops.variables.variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.VariablesTest.testExcludeGetMixedVariablesToRestore": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.ops.variables.get_variables",
    "tf_slim.ops.variables.get_variables_to_restore",
    "tf_slim.ops.variables.variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.VariablesTest.testExcludeGetVariablesToRestore": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.ops.variables.get_variables",
    "tf_slim.ops.variables.get_variables_to_restore",
    "tf_slim.ops.variables.variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.VariablesTest.testGetMixedVariablesToRestore": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.ops.variables.get_variables",
    "tf_slim.ops.variables.get_variables_to_restore",
    "tf_slim.ops.variables.variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.VariablesTest.testGetThrowsExceptionWithChildrenButNoMatch": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.ops.variables.get_unique_variable",
    "tf_slim.ops.variables.variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.VariablesTest.testGetVariableThrowsExceptionWithNoMatch": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "ValueError",
    "tf_slim.ops.variables.get_unique_variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.VariablesTest.testGetVariableWithDistractors": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.ops.variables.get_unique_variable",
    "tf_slim.ops.variables.variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.VariablesTest.testGetVariableWithSingleVar": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.ops.variables.get_unique_variable",
    "tf_slim.ops.variables.variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.VariablesTest.testGetVariables": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.ops.variables.get_variables",
    "tf_slim.ops.variables.variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.VariablesTest.testGetVariablesSuffix": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.ops.variables.get_variables",
    "tf_slim.ops.variables.variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.VariablesTest.testGetVariablesToRestore": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.ops.variables.get_variables_to_restore",
    "tf_slim.ops.variables.variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.VariablesTest.testGetVariablesWithScope": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "set",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.ops.variables.get_variables",
    "tf_slim.ops.variables.variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.VariablesTest.testIncludeGetVariablesToRestore": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.ops.variables.get_variables",
    "tf_slim.ops.variables.get_variables_to_restore",
    "tf_slim.ops.variables.variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.VariablesTest.testReuseVariable": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.ops.variables.get_variables",
    "tf_slim.ops.variables.variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.VariablesTest.testVariableGPUPlacement": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.ops.device",
    "tf_slim.ops.arg_scope.arg_scope",
    "tf_slim.ops.variables.VariableDeviceChooser",
    "tf_slim.ops.variables.variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.VariablesTest.testVariableWithDevice": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.ops.variables.variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.VariablesTest.testVariableWithDeviceFromScope": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.device",
    "tf_slim.ops.variables.variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.VariablesTest.testVariableWithDeviceFunction": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "DevFn",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.device",
    "tf_slim.ops.arg_scope.arg_scope",
    "tf_slim.ops.variables.variable",
    "tf_slim.ops.variables_test.temporary_disable_resource_variables"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.VariablesTest.testVariableWithDeviceFunction.DevFn": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tf_slim.ops.variables_test.VariablesTest.testVariableWithDeviceFunction.DevFn.__call__": {
  "data": {
   "lineno": 453
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.VariablesTest.testVariableWithDeviceFunction.DevFn.__init__": {
  "data": {
   "lineno": 450
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.VariablesTest.testVariableWithRegularizer": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.nn_ops.l2_loss",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.ops.variables.variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.VariablesTest.testVariableWithRegularizerColocate": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.REGULARIZATION_LOSSES",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.nn_ops.l2_loss",
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.ops.variables.variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.VariablesTest.testVariableWithReplicaDeviceSetter": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.device",
    "tensorflow.python.training.device_setter.replica_device_setter",
    "tf_slim.ops.variables.variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.VariablesTest.testVariableWithVariableDeviceChooser": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.ops.device",
    "tf_slim.ops.arg_scope.arg_scope",
    "tf_slim.ops.variables.VariableDeviceChooser",
    "tf_slim.ops.variables.variable",
    "tf_slim.ops.variables_test.temporary_disable_resource_variables"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.VariablesTest.testVariableWithVariableDeviceChooserWithReplica": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.ops.device",
    "tf_slim.ops.arg_scope.arg_scope",
    "tf_slim.ops.variables.VariableDeviceChooser",
    "tf_slim.ops.variables.variable",
    "tf_slim.ops.variables_test.temporary_disable_resource_variables"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.VariablesTest.testWrongIncludeGetVariablesToRestore": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "tensorflow.python.ops.variable_scope.variable_scope",
    "tf_slim.ops.variables.get_variables",
    "tf_slim.ops.variables.get_variables_to_restore",
    "tf_slim.ops.variables.variable"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.ops.variables_test.arg_scope": {
  "data": {
   "shadows": "tf_slim.ops.arg_scope.arg_scope"
  },
  "type": "import"
 },
 "tf_slim.ops.variables_test.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tf_slim.ops.variables_test.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tf_slim.ops.variables_test.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "tf_slim.ops.variables_test.device_setter": {
  "data": {
   "shadows": "tensorflow.python.training.device_setter"
  },
  "type": "import"
 },
 "tf_slim.ops.variables_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.ops.variables_test.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tf_slim.ops.variables_test.errors_impl": {
  "data": {
   "shadows": "tensorflow.python.framework.errors_impl"
  },
  "type": "import"
 },
 "tf_slim.ops.variables_test.gfile": {
  "data": {
   "shadows": "tensorflow.python.platform.gfile"
  },
  "type": "import"
 },
 "tf_slim.ops.variables_test.init_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.init_ops"
  },
  "type": "import"
 },
 "tf_slim.ops.variables_test.nn_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.nn_ops"
  },
  "type": "import"
 },
 "tf_slim.ops.variables_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tf_slim.ops.variables_test.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tf_slim.ops.variables_test.partitioned_variables": {
  "data": {
   "shadows": "tensorflow.python.ops.partitioned_variables"
  },
  "type": "import"
 },
 "tf_slim.ops.variables_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.ops.variables_test.resource_variable_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.resource_variable_ops"
  },
  "type": "import"
 },
 "tf_slim.ops.variables_test.saver_lib": {
  "data": {
   "shadows": "tensorflow.python.training.saver"
  },
  "type": "import"
 },
 "tf_slim.ops.variables_test.session": {
  "data": {
   "shadows": "tensorflow.python.client.session"
  },
  "type": "import"
 },
 "tf_slim.ops.variables_test.setUpModule": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "tensorflow.compat.v1.disable_eager_execution"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "tf_slim.ops.variables_test.temporary_disable_resource_variables": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "tensorflow.python.ops.variable_scope.disable_resource_variables",
    "tensorflow.python.ops.variable_scope.enable_resource_variables",
    "tensorflow.python.ops.variable_scope.resource_variables_enabled",
    "tf_slim.ops.variables_test.contextlib"
   ]
  },
  "type": "function"
 },
 "tf_slim.ops.variables_test.test": {
  "data": {
   "shadows": "tensorflow.python.platform.test"
  },
  "type": "import"
 },
 "tf_slim.ops.variables_test.tf": {
  "data": {
   "shadows": "tensorflow.compat.v1"
  },
  "type": "import"
 },
 "tf_slim.ops.variables_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "tf_slim.ops.variables_test.variable_scope": {
  "data": {
   "shadows": "tensorflow.python.ops.variable_scope"
  },
  "type": "import"
 },
 "tf_slim.ops.variables_test.variables_lib": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tf_slim.ops.variables_test.variables_lib2": {
  "data": {
   "shadows": "tf_slim.ops.variables"
  },
  "type": "import"
 },
 "tf_slim.parallel_reader": {
  "data": {
   "shadows": "tf_slim.data.parallel_reader"
  },
  "type": "import"
 },
 "tf_slim.prefetch_queue": {
  "data": {
   "shadows": "tf_slim.data.prefetch_queue"
  },
  "type": "import"
 },
 "tf_slim.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.queues": {
  "data": {
   "shadows": "tf_slim.queues"
  },
  "type": "import"
 },
 "tf_slim.queues.NestedQueueRunnerError": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "tf_slim.queues.QueueRunners": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "RuntimeError",
    "tensorflow.python.framework.ops.GraphKeys.QUEUE_RUNNERS",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.training.coordinator.Coordinator",
    "tf_slim.queues.NestedQueueRunnerError",
    "tf_slim.queues._queue_runner_lock",
    "tf_slim.queues.contextlib"
   ]
  },
  "type": "function"
 },
 "tf_slim.queues.__all__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "tf_slim.queues._queue_runner_lock": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "tf_slim.queues.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.queues.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "tf_slim.queues.coordinator": {
  "data": {
   "shadows": "tensorflow.python.training.coordinator"
  },
  "type": "import"
 },
 "tf_slim.queues.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.queues.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tf_slim.queues.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.queues.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "tf_slim.summaries": {
  "data": {
   "shadows": "tf_slim.summaries"
  },
  "type": "import"
 },
 "tf_slim.summaries.__all__": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "tf_slim.summaries._get_summary_name": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "tf_slim.summaries.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.summaries.add_histogram_summaries": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "tf_slim.summaries.add_histogram_summary"
   ]
  },
  "type": "function"
 },
 "tf_slim.summaries.add_histogram_summary": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "tensorflow.python.summary.summary.histogram",
    "tf_slim.summaries._get_summary_name"
   ]
  },
  "type": "function"
 },
 "tf_slim.summaries.add_image_summaries": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "tf_slim.summaries.add_image_summary"
   ]
  },
  "type": "function"
 },
 "tf_slim.summaries.add_image_summary": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.SUMMARIES",
    "tensorflow.python.framework.ops.add_to_collection",
    "tensorflow.python.ops.logging_ops.Print",
    "tensorflow.python.summary.summary.image",
    "tf_slim.summaries._get_summary_name"
   ]
  },
  "type": "function"
 },
 "tf_slim.summaries.add_scalar_summaries": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "tf_slim.summaries.add_scalar_summary"
   ]
  },
  "type": "function"
 },
 "tf_slim.summaries.add_scalar_summary": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.SUMMARIES",
    "tensorflow.python.framework.ops.add_to_collection",
    "tensorflow.python.ops.logging_ops.Print",
    "tensorflow.python.summary.summary.scalar",
    "tf_slim.summaries._get_summary_name"
   ]
  },
  "type": "function"
 },
 "tf_slim.summaries.add_zero_fraction_summaries": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "tf_slim.summaries.add_zero_fraction_summary"
   ]
  },
  "type": "function"
 },
 "tf_slim.summaries.add_zero_fraction_summary": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "tensorflow.python.ops.nn_impl.zero_fraction",
    "tf_slim.summaries._get_summary_name",
    "tf_slim.summaries.add_scalar_summary"
   ]
  },
  "type": "function"
 },
 "tf_slim.summaries.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.summaries.logging_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.logging_ops"
  },
  "type": "import"
 },
 "tf_slim.summaries.nn": {
  "data": {
   "shadows": "tensorflow.python.ops.nn_impl"
  },
  "type": "import"
 },
 "tf_slim.summaries.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tf_slim.summaries.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.summaries.summary": {
  "data": {
   "shadows": "tensorflow.python.summary.summary"
  },
  "type": "import"
 },
 "tf_slim.summaries_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.test.main"
   ]
  },
  "type": "module"
 },
 "tf_slim.summaries_test.SummariesTest": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.summaries_test.SummariesTest.assert_scalar_summary": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "events",
    "len",
    "tensorflow.python.summary.summary_iterator.summary_iterator",
    "tf_slim.summaries_test.glob",
    "tf_slim.summaries_test.os"
   ]
  },
  "type": "function"
 },
 "tf_slim.summaries_test.SummariesTest.testScalarSummaryIsPartOfCollectionWithNoPrint": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.SUMMARIES",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.summaries.add_scalar_summary"
   ]
  },
  "type": "function"
 },
 "tf_slim.summaries_test.SummariesTest.testScalarSummaryIsPartOfCollectionWithPrint": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.GraphKeys.SUMMARIES",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.ops.array_ops.ones",
    "tf_slim.summaries.add_scalar_summary"
   ]
  },
  "type": "function"
 },
 "tf_slim.summaries_test.SummariesTest.testScalarSummaryIsWrittenWithNoPrint": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "tf_slim.summaries_test.SummariesTest.testScalarSummaryIsWrittenWithPrint": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "tf_slim.summaries_test.SummariesTest.verify_scalar_summary_is_written": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.ones",
    "tensorflow.python.summary.summary.FileWriter",
    "tensorflow.python.summary.summary.merge_all",
    "tf_slim.summaries.add_scalar_summary",
    "tf_slim.summaries_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tf_slim.summaries_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.summaries_test.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tf_slim.summaries_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.summaries_test.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "tf_slim.summaries_test.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tf_slim.summaries_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tf_slim.summaries_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.summaries_test.setUpModule": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "tensorflow.compat.v1.disable_eager_execution"
   ]
  },
  "type": "function"
 },
 "tf_slim.summaries_test.summaries": {
  "data": {
   "shadows": "tf_slim.summaries"
  },
  "type": "import"
 },
 "tf_slim.summaries_test.summary": {
  "data": {
   "shadows": "tensorflow.python.summary.summary"
  },
  "type": "import"
 },
 "tf_slim.summaries_test.summary_iterator": {
  "data": {
   "shadows": "tensorflow.python.summary.summary_iterator"
  },
  "type": "import"
 },
 "tf_slim.summaries_test.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "tf_slim.summaries_test.test": {
  "data": {
   "shadows": "tensorflow.python.platform.test"
  },
  "type": "import"
 },
 "tf_slim.summaries_test.tf": {
  "data": {
   "shadows": "tensorflow.compat.v1"
  },
  "type": "import"
 },
 "tf_slim.tfexample_decoder": {
  "data": {
   "shadows": "tf_slim.data.tfexample_decoder"
  },
  "type": "import"
 },
 "tf_slim.train_eval": {
  "data": {
   "shadows": "tf_slim.training.evaluation"
  },
  "type": "import"
 },
 "tf_slim.training": {
  "data": {},
  "type": "module"
 },
 "tf_slim.training.evaluation": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.python.training.evaluation._StopAfterNEvalsHook",
    "tensorflow.python.training.evaluation._evaluate_once",
    "tensorflow.python.training.evaluation._get_or_create_eval_step"
   ]
  },
  "type": "module"
 },
 "tf_slim.training.evaluation.StopAfterNEvalsHook": {
  "data": {
   "lineno": 164
  },
  "type": "constant"
 },
 "tf_slim.training.evaluation.SummaryAtEndHook": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "tensorflow.python.training.session_run_hook.SessionRunHook"
   ]
  },
  "type": "class"
 },
 "tf_slim.training.evaluation.SummaryAtEndHook.__init__": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.evaluation.SummaryAtEndHook.after_create_session": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "tensorflow.python.summary.summary.FileWriterCache.get"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.evaluation.SummaryAtEndHook.begin": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "tensorflow.python.summary.summary.merge_all",
    "tensorflow.python.training.training_util.get_or_create_global_step"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.evaluation.SummaryAtEndHook.end": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "tensorflow.python.training.training_util.global_step"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.evaluation.__all__": {
  "data": {
   "lineno": 152
  },
  "type": "constant"
 },
 "tf_slim.training.evaluation._scaffold_with_init": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "tensorflow.python.training.monitored_session.Scaffold"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.evaluation._scaffold_with_init.restore_checkpoint": {
  "data": {
   "lineno": 332
  },
  "type": "function"
 },
 "tf_slim.training.evaluation.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.training.evaluation.basic_session_run_hooks": {
  "data": {
   "shadows": "tensorflow.python.training.basic_session_run_hooks"
  },
  "type": "import"
 },
 "tf_slim.training.evaluation.checkpoint_management": {
  "data": {
   "shadows": "tensorflow.python.training.checkpoint_management"
  },
  "type": "import"
 },
 "tf_slim.training.evaluation.checkpoints_iterator": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "tensorflow.python.platform.tf_logging.info",
    "tf_slim.training.evaluation.time",
    "tf_slim.training.evaluation.wait_for_new_checkpoint",
    "timeout_fn"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.evaluation.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.training.evaluation.evaluate_once": {
  "data": {
   "lineno": 165
  },
  "type": "constant"
 },
 "tf_slim.training.evaluation.evaluate_repeatedly": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "list",
    "tensorflow.compat.v1.assign_add",
    "tensorflow.python.platform.tf_logging.info",
    "tensorflow.python.training.basic_session_run_hooks.FinalOpsHook",
    "tensorflow.python.training.monitored_session.ChiefSessionCreator",
    "tensorflow.python.training.monitored_session.MonitoredSession",
    "tf_slim.training.evaluation.StopAfterNEvalsHook",
    "tf_slim.training.evaluation.checkpoints_iterator",
    "tf_slim.training.evaluation.get_or_create_eval_step",
    "tf_slim.training.evaluation.time",
    "timeout_fn",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.evaluation.evaluation": {
  "data": {
   "shadows": "tensorflow.python.training.evaluation"
  },
  "type": "import"
 },
 "tf_slim.training.evaluation.get_or_create_eval_step": {
  "data": {
   "lineno": 166
  },
  "type": "constant"
 },
 "tf_slim.training.evaluation.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tf_slim.training.evaluation.monitored_session": {
  "data": {
   "shadows": "tensorflow.python.training.monitored_session"
  },
  "type": "import"
 },
 "tf_slim.training.evaluation.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.training.evaluation.session_run_hook": {
  "data": {
   "shadows": "tensorflow.python.training.session_run_hook"
  },
  "type": "import"
 },
 "tf_slim.training.evaluation.summary": {
  "data": {
   "shadows": "tensorflow.python.summary.summary"
  },
  "type": "import"
 },
 "tf_slim.training.evaluation.tf": {
  "data": {
   "shadows": "tensorflow.compat.v1"
  },
  "type": "import"
 },
 "tf_slim.training.evaluation.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "tf_slim.training.evaluation.training_util": {
  "data": {
   "shadows": "tensorflow.python.training.training_util"
  },
  "type": "import"
 },
 "tf_slim.training.evaluation.wait_for_new_checkpoint": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "tensorflow.python.platform.tf_logging.info",
    "tensorflow.python.training.checkpoint_management.latest_checkpoint",
    "tf_slim.training.evaluation.time"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.evaluation_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.test.main"
   ]
  },
  "type": "module"
 },
 "tf_slim.training.evaluation_test.CheckpointIteratorTest": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.training.evaluation_test.CheckpointIteratorTest.testReturnsEmptyIfNoCheckpointsFound": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "tf_slim.training.evaluation.checkpoints_iterator",
    "tf_slim.training.evaluation_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.evaluation_test.CheckpointIteratorTest.testReturnsSingleCheckpointIfOneCheckpointFound": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "tensorflow.python.client.session",
    "tensorflow.python.client.session.run",
    "tensorflow.python.ops.variables.get_or_create_global_step",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tensorflow.python.platform.gfile.Exists",
    "tensorflow.python.platform.gfile.MakeDirs",
    "tensorflow.python.training.saver",
    "tensorflow.python.training.saver.Saver",
    "tensorflow.python.training.saver.save",
    "tf_slim.training.evaluation.checkpoints_iterator",
    "tf_slim.training.evaluation_test.os",
    "tf_slim.training.evaluation_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.evaluation_test.CheckpointIteratorTest.testReturnsSingleCheckpointIfOneShardedCheckpoint": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "tensorflow.core.protobuf.config_pb2.ConfigProto",
    "tensorflow.python.client.session",
    "tensorflow.python.client.session.Session",
    "tensorflow.python.client.session.run",
    "tensorflow.python.framework.ops.device",
    "tensorflow.python.ops.variables.Variable",
    "tensorflow.python.ops.variables.get_or_create_global_step",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tensorflow.python.platform.gfile.Exists",
    "tensorflow.python.platform.gfile.MakeDirs",
    "tensorflow.python.training.saver",
    "tensorflow.python.training.saver.Saver",
    "tensorflow.python.training.saver.save",
    "tf_slim.training.evaluation.checkpoints_iterator",
    "tf_slim.training.evaluation_test.os",
    "tf_slim.training.evaluation_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.evaluation_test.CheckpointIteratorTest.testTimeoutFn": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "list",
    "tf_slim.training.evaluation.checkpoints_iterator"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.evaluation_test.CheckpointIteratorTest.testTimeoutFn.timeout_fn": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "tf_slim.training.evaluation_test.EvaluateOnceTest": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.training.evaluation_test.EvaluateOnceTest._train_model": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.training.basic_session_run_hooks.StopAtStepHook",
    "tensorflow.python.training.gradient_descent.GradientDescentOptimizer",
    "tf_slim.losses.log_loss",
    "tf_slim.training.evaluation_test.logistic_classifier",
    "tf_slim.training.training.create_train_op",
    "tf_slim.training.training.train"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.evaluation_test.EvaluateOnceTest.setUp": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "int",
    "numpy.float32",
    "numpy.random.randint",
    "numpy.random.seed",
    "numpy.zeros",
    "range",
    "super",
    "tf_slim.training.evaluation_test.EvaluateOnceTest"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.evaluation_test.EvaluateOnceTest.testEvalOpAndFinalOp": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.state_ops.assign_add",
    "tensorflow.python.ops.variables.local_variable",
    "tf_slim.training.evaluation.StopAfterNEvalsHook",
    "tf_slim.training.evaluation.evaluate_once",
    "tf_slim.training.evaluation.wait_for_new_checkpoint",
    "tf_slim.training.evaluation_test.logistic_classifier",
    "tf_slim.training.evaluation_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.evaluation_test.EvaluateOnceTest.testEvaluatePerfectModel": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.math_ops.round",
    "tensorflow.python.ops.metrics.accuracy",
    "tf_slim.training.evaluation.StopAfterNEvalsHook",
    "tf_slim.training.evaluation.evaluate_once",
    "tf_slim.training.evaluation.wait_for_new_checkpoint",
    "tf_slim.training.evaluation_test.logistic_classifier",
    "tf_slim.training.evaluation_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.evaluation_test.EvaluateOnceTest.testOnlyFinalOp": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.variables.local_variable",
    "tf_slim.training.evaluation.evaluate_once",
    "tf_slim.training.evaluation.wait_for_new_checkpoint",
    "tf_slim.training.evaluation_test.logistic_classifier",
    "tf_slim.training.evaluation_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.evaluation_test.EvaluateRepeatedlyTest": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.training.evaluation_test.EvaluateRepeatedlyTest._create_names_to_metrics": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "tensorflow.python.ops.metrics.accuracy"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.evaluation_test.EvaluateRepeatedlyTest._train_model": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.training.basic_session_run_hooks.StopAtStepHook",
    "tensorflow.python.training.gradient_descent.GradientDescentOptimizer",
    "tf_slim.losses.log_loss",
    "tf_slim.training.evaluation_test.logistic_classifier",
    "tf_slim.training.training.create_train_op",
    "tf_slim.training.training.train"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.evaluation_test.EvaluateRepeatedlyTest._verify_events": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "events",
    "len",
    "tensorflow.python.summary.summary",
    "tensorflow.python.summary.summary.value",
    "tensorflow.python.summary.summary_iterator.summary_iterator",
    "tf_slim.training.evaluation_test.glob",
    "tf_slim.training.evaluation_test.os"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.evaluation_test.EvaluateRepeatedlyTest.setUp": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "int",
    "numpy.float32",
    "numpy.random.randint",
    "numpy.random.seed",
    "numpy.zeros",
    "range",
    "super",
    "tf_slim.training.evaluation_test.EvaluateRepeatedlyTest"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.evaluation_test.EvaluateRepeatedlyTest.testEvaluatePerfectModel": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.math_ops.round",
    "tensorflow.python.ops.metrics.accuracy",
    "tf_slim.training.evaluation.StopAfterNEvalsHook",
    "tf_slim.training.evaluation.evaluate_repeatedly",
    "tf_slim.training.evaluation_test.logistic_classifier",
    "tf_slim.training.evaluation_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.evaluation_test.EvaluateRepeatedlyTest.testEvaluateWithEvalFeedDict": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.identity",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.state_ops.assign_add",
    "tensorflow.python.ops.variables.get_or_create_global_step",
    "tensorflow.python.ops.variables.local_variable",
    "tf_slim.training.evaluation.StopAfterNEvalsHook",
    "tf_slim.training.evaluation.evaluate_repeatedly",
    "tf_slim.training.evaluation_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.evaluation_test.EvaluateRepeatedlyTest.testEvaluationLoopTimeout": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.variables.get_or_create_global_step",
    "tensorflow.python.platform.gfile.Exists",
    "tensorflow.python.platform.gfile.MakeDirs",
    "tf_slim.training.evaluation.StopAfterNEvalsHook",
    "tf_slim.training.evaluation.evaluate_repeatedly",
    "tf_slim.training.evaluation_test.tempfile",
    "tf_slim.training.evaluation_test.time"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.evaluation_test.EvaluateRepeatedlyTest.testEvaluationLoopTimeoutWithTimeoutFn": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.ops.math_ops.round",
    "tensorflow.python.ops.metrics.accuracy",
    "tf_slim.training.evaluation.StopAfterNEvalsHook",
    "tf_slim.training.evaluation.evaluate_repeatedly",
    "tf_slim.training.evaluation_test.logistic_classifier",
    "tf_slim.training.evaluation_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.evaluation_test.EvaluateRepeatedlyTest.testEvaluationLoopTimeoutWithTimeoutFn.timeout_fn": {
  "data": {
   "lineno": 378
  },
  "type": "function"
 },
 "tf_slim.training.evaluation_test.EvaluateRepeatedlyTest.testSummariesAreFlushedToDisk": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.platform.gfile.DeleteRecursively",
    "tensorflow.python.platform.gfile.Exists",
    "tensorflow.python.summary.summary.scalar",
    "tf_slim.training.evaluation.SummaryAtEndHook",
    "tf_slim.training.evaluation.evaluate_repeatedly",
    "tf_slim.training.evaluation_test.logistic_classifier",
    "tf_slim.training.evaluation_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.evaluation_test.EvaluateRepeatedlyTest.testSummaryAtEndHookWithoutSummaries": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "tensorflow.python.client.session",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.platform.gfile.DeleteRecursively",
    "tensorflow.python.platform.gfile.Exists",
    "tf_slim.training.evaluation.SummaryAtEndHook",
    "tf_slim.training.evaluation_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.evaluation_test.WaitForNewCheckpointTest": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.training.evaluation_test.WaitForNewCheckpointTest.testReturnsNoneAfterTimeout": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "tf_slim.training.evaluation.wait_for_new_checkpoint",
    "tf_slim.training.evaluation_test.time"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.evaluation_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.training.evaluation_test.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tf_slim.training.evaluation_test.basic_session_run_hooks": {
  "data": {
   "shadows": "tensorflow.python.training.basic_session_run_hooks"
  },
  "type": "import"
 },
 "tf_slim.training.evaluation_test.config_pb2": {
  "data": {
   "shadows": "tensorflow.core.protobuf.config_pb2"
  },
  "type": "import"
 },
 "tf_slim.training.evaluation_test.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tf_slim.training.evaluation_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.training.evaluation_test.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tf_slim.training.evaluation_test.evaluation": {
  "data": {
   "shadows": "tf_slim.training.evaluation"
  },
  "type": "import"
 },
 "tf_slim.training.evaluation_test.gfile": {
  "data": {
   "shadows": "tensorflow.python.platform.gfile"
  },
  "type": "import"
 },
 "tf_slim.training.evaluation_test.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "tf_slim.training.evaluation_test.gradient_descent": {
  "data": {
   "shadows": "tensorflow.python.training.gradient_descent"
  },
  "type": "import"
 },
 "tf_slim.training.evaluation_test.layers": {
  "data": {
   "shadows": "tf_slim.layers.layers"
  },
  "type": "import"
 },
 "tf_slim.training.evaluation_test.logistic_classifier": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.sigmoid",
    "tf_slim.layers.layers.fully_connected"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.evaluation_test.loss_ops": {
  "data": {
   "shadows": "tf_slim.losses"
  },
  "type": "import"
 },
 "tf_slim.training.evaluation_test.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tf_slim.training.evaluation_test.metrics": {
  "data": {
   "shadows": "tensorflow.python.ops.metrics"
  },
  "type": "import"
 },
 "tf_slim.training.evaluation_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tf_slim.training.evaluation_test.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tf_slim.training.evaluation_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tf_slim.training.evaluation_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.training.evaluation_test.random_seed": {
  "data": {
   "shadows": "tensorflow.python.framework.random_seed"
  },
  "type": "import"
 },
 "tf_slim.training.evaluation_test.saver_lib": {
  "data": {
   "shadows": "tensorflow.python.training.saver"
  },
  "type": "import"
 },
 "tf_slim.training.evaluation_test.session_lib": {
  "data": {
   "shadows": "tensorflow.python.client.session"
  },
  "type": "import"
 },
 "tf_slim.training.evaluation_test.setUpModule": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "tensorflow.compat.v1.disable_eager_execution"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.evaluation_test.state_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.state_ops"
  },
  "type": "import"
 },
 "tf_slim.training.evaluation_test.summary_iterator": {
  "data": {
   "shadows": "tensorflow.python.summary.summary_iterator"
  },
  "type": "import"
 },
 "tf_slim.training.evaluation_test.summary_lib": {
  "data": {
   "shadows": "tensorflow.python.summary.summary"
  },
  "type": "import"
 },
 "tf_slim.training.evaluation_test.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "tf_slim.training.evaluation_test.test": {
  "data": {
   "shadows": "tensorflow.python.platform.test"
  },
  "type": "import"
 },
 "tf_slim.training.evaluation_test.tf": {
  "data": {
   "shadows": "tensorflow.compat.v1"
  },
  "type": "import"
 },
 "tf_slim.training.evaluation_test.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "tf_slim.training.evaluation_test.training": {
  "data": {
   "shadows": "tf_slim.training.training"
  },
  "type": "import"
 },
 "tf_slim.training.evaluation_test.variables": {
  "data": {
   "shadows": "tf_slim.ops.variables"
  },
  "type": "import"
 },
 "tf_slim.training.evaluation_test.variables_lib": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tf_slim.training.training": {
  "data": {},
  "type": "module"
 },
 "tf_slim.training.training._USE_GLOBAL_STEP": {
  "data": {
   "lineno": 371
  },
  "type": "constant"
 },
 "tf_slim.training.training.__all__": {
  "data": {
   "lineno": 263
  },
  "type": "constant"
 },
 "tf_slim.training.training.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.training.training.add_gradients_summaries": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.ops.clip_ops.global_norm",
    "tensorflow.python.platform.tf_logging.info",
    "tensorflow.python.summary.summary.histogram",
    "tensorflow.python.summary.summary.scalar"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.training.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "tf_slim.training.training.clip_gradient_norms": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "isinstance",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.ops.clip_ops.clip_by_norm"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.training.clip_gradient_norms_fn": {
  "data": {
   "lineno": 322
  },
  "type": "function"
 },
 "tf_slim.training.training.clip_gradient_norms_fn.clip_norms": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "tf_slim.training.training.clip_gradient_norms"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.training.clip_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.clip_ops"
  },
  "type": "import"
 },
 "tf_slim.training.training.control_flow_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.control_flow_ops"
  },
  "type": "import"
 },
 "tf_slim.training.training.create_train_op": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "set",
    "tensorflow.python.framework.ops.GraphKeys.TRAIN_OP",
    "tensorflow.python.framework.ops.GraphKeys.UPDATE_OPS",
    "tensorflow.python.framework.ops.control_dependencies",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.framework.ops.get_collection_ref",
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.array_ops.check_numerics",
    "tensorflow.python.ops.control_flow_ops.no_op",
    "tensorflow.python.ops.control_flow_ops.with_dependencies",
    "tensorflow.python.ops.variables.trainable_variables",
    "tensorflow.python.platform.tf_logging.warning",
    "tensorflow.python.training.optimizer.Optimizer.GATE_OP",
    "tensorflow.python.training.optimizer.apply_gradients",
    "tensorflow.python.training.optimizer.compute_gradients",
    "tensorflow.python.training.training_util.get_or_create_global_step",
    "tf_slim.training.training._USE_GLOBAL_STEP",
    "tf_slim.training.training.add_gradients_summaries",
    "transform_grads_fn"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.training.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.training.training.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "tf_slim.training.training.monitored_session": {
  "data": {
   "shadows": "tensorflow.python.training.monitored_session"
  },
  "type": "import"
 },
 "tf_slim.training.training.multiply_gradients": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "list",
    "tensorflow.python.framework.ops.IndexedSlices",
    "tensorflow.python.framework.ops.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.training.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tf_slim.training.training.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.training.training.summary": {
  "data": {
   "shadows": "tensorflow.python.summary.summary"
  },
  "type": "import"
 },
 "tf_slim.training.training.tf_optimizer": {
  "data": {
   "shadows": "tensorflow.python.training.optimizer"
  },
  "type": "import"
 },
 "tf_slim.training.training.tf_variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "tf_slim.training.training.train": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.training.monitored_session.MonitoredTrainingSession"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.training.training_util": {
  "data": {
   "shadows": "tensorflow.python.training.training_util"
  },
  "type": "import"
 },
 "tf_slim.training.training_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.python.platform.test.main"
   ]
  },
  "type": "module"
 },
 "tf_slim.training.training_test.ClipGradsTest": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.training.training_test.ClipGradsTest.testClipGrads": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "list",
    "tensorflow.python.ops.gradients_impl.gradients",
    "tensorflow.python.ops.variables.Variable",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.training.training.clip_gradient_norms",
    "zip"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.training_test.ClipGradsTest.testClipGradsFn": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "list",
    "tensorflow.python.ops.gradients_impl.gradients",
    "tensorflow.python.ops.variables.Variable",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tf_slim.training.training.clip_gradient_norms_fn",
    "zip"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.training_test.CreateTrainOpTest": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.training.training_test.CreateTrainOpTest.setUp": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.random.seed",
    "super",
    "tf_slim.training.training_test.CreateTrainOpTest"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.training_test.CreateTrainOpTest.testEmptyUpdateOps": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "range",
    "tensorflow.compat.v1.losses.log_loss",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tensorflow.python.training.gradient_descent.GradientDescentOptimizer",
    "tf_slim.ops.variables.get_variables_by_name",
    "tf_slim.training.training.create_train_op",
    "tf_slim.training.training_test.batchnorm_classifier"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.training_test.CreateTrainOpTest.testGlobalStepIsIncrementedByDefault": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "range",
    "tensorflow.compat.v1.losses.log_loss",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tensorflow.python.training.gradient_descent.GradientDescentOptimizer",
    "tf_slim.ops.variables.get_or_create_global_step",
    "tf_slim.training.training.create_train_op",
    "tf_slim.training.training_test.batchnorm_classifier"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.training_test.CreateTrainOpTest.testGlobalStepNotIncrementedWhenSetToNone": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "range",
    "tensorflow.compat.v1.losses.log_loss",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tensorflow.python.training.gradient_descent.GradientDescentOptimizer",
    "tf_slim.ops.variables.get_or_create_global_step",
    "tf_slim.training.training.create_train_op",
    "tf_slim.training.training_test.batchnorm_classifier"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.training_test.CreateTrainOpTest.testTrainOpInCollection": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "tensorflow.compat.v1.losses.log_loss",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.ops.GraphKeys.TRAIN_OP",
    "tensorflow.python.framework.ops.get_collection",
    "tensorflow.python.training.gradient_descent.GradientDescentOptimizer",
    "tf_slim.training.training.create_train_op",
    "tf_slim.training.training_test.batchnorm_classifier"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.training_test.CreateTrainOpTest.testUseUpdateOps": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.var",
    "range",
    "tensorflow.compat.v1.losses.log_loss",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tensorflow.python.training.gradient_descent.GradientDescentOptimizer",
    "tf_slim.ops.variables.get_variables_by_name",
    "tf_slim.training.training.create_train_op",
    "tf_slim.training.training_test.batchnorm_classifier"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.training_test.TrainBatchNormClassifierTest": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.training.training_test.TrainBatchNormClassifierTest.setUp": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "int",
    "numpy.float32",
    "numpy.random.randint",
    "numpy.random.seed",
    "numpy.zeros",
    "range",
    "super",
    "tf_slim.training.training_test.TrainBatchNormClassifierTest"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.training_test.TrainBatchNormClassifierTest.testTrainWithNoInitAssignCanAchieveZeroLoss": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "tensorflow.compat.v1.losses.get_total_loss",
    "tensorflow.compat.v1.losses.log_loss",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.training.basic_session_run_hooks.StopAtStepHook",
    "tensorflow.python.training.gradient_descent.GradientDescentOptimizer",
    "tf_slim.training.training.create_train_op",
    "tf_slim.training.training.train",
    "tf_slim.training.training_test.batchnorm_classifier"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.training_test.TrainTest": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "tensorflow.python.platform.test.TestCase"
   ]
  },
  "type": "class"
 },
 "tf_slim.training.training_test.TrainTest.ModelLoss": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "tensorflow.compat.v1.losses.get_total_loss",
    "tensorflow.compat.v1.losses.log_loss",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tf_slim.training.training_test.logistic_classifier"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.training_test.TrainTest.create_train_op": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "tensorflow.compat.v1.losses.get_total_loss",
    "tensorflow.compat.v1.losses.log_loss",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.training.gradient_descent.GradientDescentOptimizer",
    "tf_slim.training.training.create_train_op",
    "tf_slim.training.training_test.logistic_classifier"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.training_test.TrainTest.create_train_op.transform_grads_fn": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.name_scope",
    "tensorflow.python.ops.variables",
    "tensorflow.python.ops.variables.trainable_variables",
    "tf_slim.training.training.multiply_gradients"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.training_test.TrainTest.setUp": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "int",
    "numpy.float32",
    "numpy.random.randint",
    "numpy.random.seed",
    "numpy.zeros",
    "range",
    "super",
    "tf_slim.training.training_test.TrainTest"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.training_test.TrainTest.testCanAchieveZeroLoss": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "tensorflow.compat.v1.losses.get_total_loss",
    "tensorflow.compat.v1.losses.log_loss",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.training.basic_session_run_hooks.StopAtStepHook",
    "tensorflow.python.training.gradient_descent.GradientDescentOptimizer",
    "tf_slim.training.training.create_train_op",
    "tf_slim.training.training.train",
    "tf_slim.training.training_test.logistic_classifier"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.training_test.TrainTest.testResumeTrainAchievesRoughlyTheSameLoss": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "len",
    "range",
    "tensorflow.compat.v1.losses.get_total_loss",
    "tensorflow.compat.v1.losses.log_loss",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.training.basic_session_run_hooks.CheckpointSaverHook",
    "tensorflow.python.training.basic_session_run_hooks.StopAtStepHook",
    "tensorflow.python.training.gradient_descent.GradientDescentOptimizer",
    "tensorflow.python.training.saver",
    "tensorflow.python.training.saver.Saver",
    "tf_slim.training.training.create_train_op",
    "tf_slim.training.training.train",
    "tf_slim.training.training_test.logistic_classifier",
    "tf_slim.training.training_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.training_test.TrainTest.testTrainAllVarsHasLowerLossThanTrainSubsetOfVars": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.platform.gfile.DeleteRecursively",
    "tensorflow.python.platform.gfile.Exists",
    "tensorflow.python.training.basic_session_run_hooks.CheckpointSaverHook",
    "tensorflow.python.training.basic_session_run_hooks.StopAtStepHook",
    "tensorflow.python.training.gradient_descent.GradientDescentOptimizer",
    "tensorflow.python.training.saver",
    "tensorflow.python.training.saver.Saver",
    "tf_slim.ops.variables.get_variables_by_name",
    "tf_slim.training.training.create_train_op",
    "tf_slim.training.training.train",
    "tf_slim.training.training_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.training_test.TrainTest.testTrainWithAlteredGradients": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.training.basic_session_run_hooks.StopAtStepHook",
    "tf_slim.training.training.train"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.training_test.TrainTest.testTrainWithInitFromCheckpoint": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.ops.variables.global_variables",
    "tensorflow.python.platform.gfile.DeleteRecursively",
    "tensorflow.python.platform.gfile.Exists",
    "tensorflow.python.training.basic_session_run_hooks.CheckpointSaverHook",
    "tensorflow.python.training.basic_session_run_hooks.StopAtStepHook",
    "tensorflow.python.training.checkpoint_management.latest_checkpoint",
    "tensorflow.python.training.monitored_session.Scaffold",
    "tensorflow.python.training.saver",
    "tensorflow.python.training.saver.Saver",
    "tf_slim.ops.variables.assign_from_checkpoint_fn",
    "tf_slim.training.training.train",
    "tf_slim.training.training_test.tempfile"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.training_test.TrainTest.testTrainWithInitFromCheckpoint.init_fn": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "assign_fn"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.training_test.TrainTest.testTrainWithLocalVariable": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "tensorflow.compat.v1.losses.get_total_loss",
    "tensorflow.compat.v1.losses.log_loss",
    "tensorflow.python.framework.constant_op.constant",
    "tensorflow.python.framework.dtypes.float32",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.training.basic_session_run_hooks.StopAtStepHook",
    "tensorflow.python.training.gradient_descent.GradientDescentOptimizer",
    "tf_slim.ops.variables.local_variable",
    "tf_slim.training.training.create_train_op",
    "tf_slim.training.training.train",
    "tf_slim.training.training_test.logistic_classifier"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.training_test.TrainTest.testTrainingSubsetsOfVariablesOnlyUpdatesThoseVariables": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "numpy.linalg.norm",
    "tensorflow.python.framework.ops.Graph",
    "tensorflow.python.framework.random_seed.set_random_seed",
    "tensorflow.python.ops.variables.global_variables_initializer",
    "tensorflow.python.training.gradient_descent.GradientDescentOptimizer",
    "tf_slim.ops.variables.get_variables",
    "tf_slim.training.training.create_train_op"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.training_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "tf_slim.training.training_test.basic_session_run_hooks": {
  "data": {
   "shadows": "tensorflow.python.training.basic_session_run_hooks"
  },
  "type": "import"
 },
 "tf_slim.training.training_test.batchnorm_classifier": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.sigmoid",
    "tf_slim.layers.layers.batch_norm",
    "tf_slim.layers.layers.fully_connected"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.training_test.checkpoint_management": {
  "data": {
   "shadows": "tensorflow.python.training.checkpoint_management"
  },
  "type": "import"
 },
 "tf_slim.training.training_test.constant_op": {
  "data": {
   "shadows": "tensorflow.python.framework.constant_op"
  },
  "type": "import"
 },
 "tf_slim.training.training_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tf_slim.training.training_test.dtypes": {
  "data": {
   "shadows": "tensorflow.python.framework.dtypes"
  },
  "type": "import"
 },
 "tf_slim.training.training_test.gfile": {
  "data": {
   "shadows": "tensorflow.python.platform.gfile"
  },
  "type": "import"
 },
 "tf_slim.training.training_test.gradient_descent": {
  "data": {
   "shadows": "tensorflow.python.training.gradient_descent"
  },
  "type": "import"
 },
 "tf_slim.training.training_test.gradients_impl": {
  "data": {
   "shadows": "tensorflow.python.ops.gradients_impl"
  },
  "type": "import"
 },
 "tf_slim.training.training_test.layers": {
  "data": {
   "shadows": "tf_slim.layers.layers"
  },
  "type": "import"
 },
 "tf_slim.training.training_test.logistic_classifier": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "tensorflow.python.ops.math_ops.sigmoid",
    "tf_slim.layers.layers.fully_connected"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.training_test.losses": {
  "data": {
   "shadows": "tensorflow.compat.v1.losses"
  },
  "type": "import"
 },
 "tf_slim.training.training_test.math_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.math_ops"
  },
  "type": "import"
 },
 "tf_slim.training.training_test.monitored_session": {
  "data": {
   "shadows": "tensorflow.python.training.monitored_session"
  },
  "type": "import"
 },
 "tf_slim.training.training_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tf_slim.training.training_test.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "tf_slim.training.training_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tf_slim.training.training_test.random_seed": {
  "data": {
   "shadows": "tensorflow.python.framework.random_seed"
  },
  "type": "import"
 },
 "tf_slim.training.training_test.saver_lib": {
  "data": {
   "shadows": "tensorflow.python.training.saver"
  },
  "type": "import"
 },
 "tf_slim.training.training_test.setUpModule": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "tensorflow.compat.v1.disable_eager_execution"
   ]
  },
  "type": "function"
 },
 "tf_slim.training.training_test.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "tf_slim.training.training_test.test": {
  "data": {
   "shadows": "tensorflow.python.platform.test"
  },
  "type": "import"
 },
 "tf_slim.training.training_test.tf": {
  "data": {
   "shadows": "tensorflow.compat.v1"
  },
  "type": "import"
 },
 "tf_slim.training.training_test.training": {
  "data": {
   "shadows": "tf_slim.training.training"
  },
  "type": "import"
 },
 "tf_slim.training.training_test.variables_lib": {
  "data": {
   "shadows": "tf_slim.ops.variables"
  },
  "type": "import"
 },
 "tf_slim.training.training_test.variables_lib2": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 }
}