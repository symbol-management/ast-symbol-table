{
 "norbert": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "norbert._covariance": {
  "lineno": 453,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.conj",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "norbert._invert": {
  "lineno": 315,
  "symbols_in_volume": [
   "numpy.empty_like",
   "numpy.linalg.pinv"
  ],
  "type": "function"
 },
 "norbert.apply_filter": {
  "lineno": 400,
  "symbols_in_volume": [],
  "type": "function"
 },
 "norbert.contrib": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "norbert.contrib._logit": {
  "lineno": 6,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "norbert.contrib.compress_filter": {
  "lineno": 154,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.trace"
  ],
  "type": "function"
 },
 "norbert.contrib.reduce_interferences": {
  "lineno": 109,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.float32",
   "numpy.sum"
  ],
  "type": "function"
 },
 "norbert.contrib.residual_model": {
  "lineno": 10,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.concatenate",
   "numpy.finfo",
   "numpy.maximum",
   "numpy.sum"
  ],
  "type": "function"
 },
 "norbert.contrib.smooth": {
  "lineno": 81,
  "symbols_in_volume": [
   "scipy.ndimage.filters.gaussian_filter1d",
   "scipy.ndimage.gaussian_filter"
  ],
  "type": "function"
 },
 "norbert.expectation_maximization": {
  "lineno": 7,
  "symbols_in_volume": [
   "numpy.complex64",
   "numpy.eye",
   "numpy.finfo",
   "numpy.real",
   "numpy.sqrt",
   "numpy.tile",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "norbert.get_local_gaussian_model": {
  "lineno": 476,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.mean"
  ],
  "type": "function"
 },
 "norbert.get_mix_model": {
  "lineno": 427,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "norbert.softmask": {
  "lineno": 265,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.real",
   "numpy.sum"
  ],
  "type": "function"
 },
 "norbert.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "norbert.wiener": {
  "lineno": 155,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.angle",
   "numpy.exp"
  ],
  "type": "function"
 },
 "norbert.wiener_gain": {
  "lineno": 358,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.zeros_like"
  ],
  "type": "function"
 }
}