{
 "movingpandas": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "movingpandas.geometry_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "movingpandas.geometry_utils.angular_difference": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "movingpandas.geometry_utils.azimuth": {
  "lineno": 60,
  "symbols_in_volume": [
   "math.atan2",
   "math.degrees",
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "movingpandas.geometry_utils.calculate_initial_compass_bearing": {
  "lineno": 30,
  "symbols_in_volume": [
   "math.atan2",
   "math.cos",
   "math.degrees",
   "math.radians",
   "math.sin",
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "movingpandas.geometry_utils.measure_distance_euclidean": {
  "lineno": 24,
  "symbols_in_volume": [
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "movingpandas.geometry_utils.measure_distance_spherical": {
  "lineno": 9,
  "symbols_in_volume": [
   "math.atan2",
   "math.cos",
   "math.radians",
   "math.sin",
   "math.sqrt",
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "movingpandas.overlay": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "movingpandas.overlay.SpatioTemporalRange": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "movingpandas.overlay.SpatioTemporalRange.__init__": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "function"
 },
 "movingpandas.overlay.TemporalRange": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "class"
 },
 "movingpandas.overlay.TemporalRange.__init__": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "movingpandas.overlay._determine_time_ranges_linebased": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "movingpandas.overlay._determine_time_ranges_pointbased": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "movingpandas.overlay._dissolve_ranges": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "movingpandas.overlay._get_geometry_and_properties_from_feature": {
  "lineno": 187,
  "symbols_in_volume": [
   "shapely.geometry.shape"
  ],
  "type": "function"
 },
 "movingpandas.overlay._get_potentially_intersecting_lines": {
  "lineno": 152,
  "symbols_in_volume": [],
  "type": "function"
 },
 "movingpandas.overlay._get_segments_for_ranges": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "movingpandas.overlay._get_spatiotemporal_ref": {
  "lineno": 23,
  "symbols_in_volume": [
   "datetime.datetime",
   "shapely.affinity.translate",
   "shapely.geometry.LineString",
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "movingpandas.overlay.clip": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "function"
 },
 "movingpandas.overlay.create_entry_and_exit_points": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "movingpandas.overlay.intersection": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "movingpandas.overlay.intersects": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "movingpandas.overlay.is_equal": {
  "lineno": 85,
  "symbols_in_volume": [
   "datetime.timedelta",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "movingpandas.trajectory": {
  "lineno": null,
  "symbols_in_volume": [
   "os.path.dirname",
   "sys.path.append"
  ],
  "type": "module"
 },
 "movingpandas.trajectory.Trajectory": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "movingpandas.trajectory.Trajectory.__eq__": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "movingpandas.trajectory.Trajectory.__init__": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "movingpandas.trajectory.Trajectory.__str__": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "movingpandas.trajectory.Trajectory._compute_distance": {
  "lineno": 198,
  "symbols_in_volume": [
   "movingpandas.geometry_utils.measure_distance_euclidean",
   "movingpandas.geometry_utils.measure_distance_spherical",
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "movingpandas.trajectory.Trajectory._compute_heading": {
  "lineno": 238,
  "symbols_in_volume": [
   "movingpandas.geometry_utils.azimuth",
   "movingpandas.geometry_utils.calculate_initial_compass_bearing",
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "movingpandas.trajectory.Trajectory._compute_speed": {
  "lineno": 250,
  "symbols_in_volume": [
   "movingpandas.geometry_utils.measure_distance_euclidean",
   "movingpandas.geometry_utils.measure_distance_spherical",
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "movingpandas.trajectory.Trajectory._connect_prev_pt_and_geometry": {
  "lineno": 265,
  "symbols_in_volume": [
   "shapely.affinity.translate",
   "shapely.geometry.LineString",
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "movingpandas.trajectory.Trajectory._to_line_df": {
  "lineno": 421,
  "symbols_in_volume": [],
  "type": "function"
 },
 "movingpandas.trajectory.Trajectory.add_direction": {
  "lineno": 278,
  "symbols_in_volume": [],
  "type": "function"
 },
 "movingpandas.trajectory.Trajectory.add_prev_pt": {
  "lineno": 211,
  "symbols_in_volume": [],
  "type": "function"
 },
 "movingpandas.trajectory.Trajectory.add_speed": {
  "lineno": 286,
  "symbols_in_volume": [],
  "type": "function"
 },
 "movingpandas.trajectory.Trajectory.apply_offset_minutes": {
  "lineno": 360,
  "symbols_in_volume": [],
  "type": "function"
 },
 "movingpandas.trajectory.Trajectory.apply_offset_seconds": {
  "lineno": 357,
  "symbols_in_volume": [],
  "type": "function"
 },
 "movingpandas.trajectory.Trajectory.clip": {
  "lineno": 323,
  "symbols_in_volume": [
   "movingpandas.overlay.clip"
  ],
  "type": "function"
 },
 "movingpandas.trajectory.Trajectory.copy": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "movingpandas.trajectory.Trajectory.generalize": {
  "lineno": 363,
  "symbols_in_volume": [],
  "type": "function"
 },
 "movingpandas.trajectory.Trajectory.generalize_douglas_peucker": {
  "lineno": 393,
  "symbols_in_volume": [
   "shapely.geometry.LineString"
  ],
  "type": "function"
 },
 "movingpandas.trajectory.Trajectory.generalize_min_time_delta": {
  "lineno": 372,
  "symbols_in_volume": [],
  "type": "function"
 },
 "movingpandas.trajectory.Trajectory.get_bbox": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "movingpandas.trajectory.Trajectory.get_df_with_speed": {
  "lineno": 297,
  "symbols_in_volume": [],
  "type": "function"
 },
 "movingpandas.trajectory.Trajectory.get_direction": {
  "lineno": 229,
  "symbols_in_volume": [
   "movingpandas.geometry_utils.azimuth",
   "movingpandas.geometry_utils.calculate_initial_compass_bearing"
  ],
  "type": "function"
 },
 "movingpandas.trajectory.Trajectory.get_duration": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "movingpandas.trajectory.Trajectory.get_end_location": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "movingpandas.trajectory.Trajectory.get_end_time": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "movingpandas.trajectory.Trajectory.get_length": {
  "lineno": 219,
  "symbols_in_volume": [],
  "type": "function"
 },
 "movingpandas.trajectory.Trajectory.get_linestring_between": {
  "lineno": 176,
  "symbols_in_volume": [
   "movingpandas.overlay.SpatioTemporalRange",
   "movingpandas.overlay.create_entry_and_exit_points"
  ],
  "type": "function"
 },
 "movingpandas.trajectory.Trajectory.get_position_at": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "movingpandas.trajectory.Trajectory.get_row_at": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "movingpandas.trajectory.Trajectory.get_segment_between": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "movingpandas.trajectory.Trajectory.get_start_location": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "movingpandas.trajectory.Trajectory.get_start_time": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "movingpandas.trajectory.Trajectory.has_parent": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "movingpandas.trajectory.Trajectory.interpolate_position_at": {
  "lineno": 150,
  "symbols_in_volume": [
   "shapely.geometry.LineString"
  ],
  "type": "function"
 },
 "movingpandas.trajectory.Trajectory.intersection": {
  "lineno": 327,
  "symbols_in_volume": [
   "movingpandas.overlay.intersection"
  ],
  "type": "function"
 },
 "movingpandas.trajectory.Trajectory.intersects": {
  "lineno": 320,
  "symbols_in_volume": [
   "movingpandas.overlay.intersects"
  ],
  "type": "function"
 },
 "movingpandas.trajectory.Trajectory.is_latlon": {
  "lineno": 90,
  "symbols_in_volume": [
   "fiona.crs.from_epsg"
  ],
  "type": "function"
 },
 "movingpandas.trajectory.Trajectory.is_valid": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "movingpandas.trajectory.Trajectory.plot": {
  "lineno": 52,
  "symbols_in_volume": [
   "contextily.add_basemap"
  ],
  "type": "function"
 },
 "movingpandas.trajectory.Trajectory.set_crs": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "movingpandas.trajectory.Trajectory.split_by_date": {
  "lineno": 330,
  "symbols_in_volume": [],
  "type": "function"
 },
 "movingpandas.trajectory.Trajectory.split_by_observation_gap": {
  "lineno": 344,
  "symbols_in_volume": [],
  "type": "function"
 },
 "movingpandas.trajectory.Trajectory.to_linestring": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "movingpandas.trajectory.Trajectory.to_linestringm_wkt": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "movingpandas.trajectory.point_gdf_to_linestring": {
  "lineno": 435,
  "symbols_in_volume": [
   "shapely.geometry.LineString"
  ],
  "type": "function"
 },
 "movingpandas.trajectory.to_unixtime": {
  "lineno": 430,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "function"
 },
 "tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_geometry_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_geometry_utils.TestGeometryUtils": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_geometry_utils.TestGeometryUtils.test_anglular_difference_halfcicle": {
  "lineno": 53,
  "symbols_in_volume": [
   "movingpandas.geometry_utils.angular_difference"
  ],
  "type": "function"
 },
 "tests.test_geometry_utils.TestGeometryUtils.test_anglular_difference_onenegative": {
  "lineno": 59,
  "symbols_in_volume": [
   "movingpandas.geometry_utils.angular_difference"
  ],
  "type": "function"
 },
 "tests.test_geometry_utils.TestGeometryUtils.test_anglular_difference_same": {
  "lineno": 56,
  "symbols_in_volume": [
   "movingpandas.geometry_utils.angular_difference"
  ],
  "type": "function"
 },
 "tests.test_geometry_utils.TestGeometryUtils.test_anglular_difference_tohigher": {
  "lineno": 47,
  "symbols_in_volume": [
   "movingpandas.geometry_utils.angular_difference"
  ],
  "type": "function"
 },
 "tests.test_geometry_utils.TestGeometryUtils.test_anglular_difference_tolower": {
  "lineno": 50,
  "symbols_in_volume": [
   "movingpandas.geometry_utils.angular_difference"
  ],
  "type": "function"
 },
 "tests.test_geometry_utils.TestGeometryUtils.test_anglular_difference_twonegative": {
  "lineno": 62,
  "symbols_in_volume": [
   "movingpandas.geometry_utils.angular_difference"
  ],
  "type": "function"
 },
 "tests.test_geometry_utils.TestGeometryUtils.test_azimuth_east": {
  "lineno": 22,
  "symbols_in_volume": [
   "movingpandas.geometry_utils.azimuth",
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "tests.test_geometry_utils.TestGeometryUtils.test_azimuth_north": {
  "lineno": 29,
  "symbols_in_volume": [
   "movingpandas.geometry_utils.azimuth",
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "tests.test_geometry_utils.TestGeometryUtils.test_azimuth_northeast": {
  "lineno": 35,
  "symbols_in_volume": [
   "movingpandas.geometry_utils.azimuth",
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "tests.test_geometry_utils.TestGeometryUtils.test_azimuth_northwest": {
  "lineno": 44,
  "symbols_in_volume": [
   "movingpandas.geometry_utils.azimuth",
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "tests.test_geometry_utils.TestGeometryUtils.test_azimuth_south": {
  "lineno": 32,
  "symbols_in_volume": [
   "movingpandas.geometry_utils.azimuth",
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "tests.test_geometry_utils.TestGeometryUtils.test_azimuth_southeast": {
  "lineno": 38,
  "symbols_in_volume": [
   "movingpandas.geometry_utils.azimuth",
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "tests.test_geometry_utils.TestGeometryUtils.test_azimuth_southwest": {
  "lineno": 41,
  "symbols_in_volume": [
   "movingpandas.geometry_utils.azimuth",
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "tests.test_geometry_utils.TestGeometryUtils.test_azimuth_west": {
  "lineno": 26,
  "symbols_in_volume": [
   "movingpandas.geometry_utils.azimuth",
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "tests.test_geometry_utils.TestGeometryUtils.test_compass_bearing_east": {
  "lineno": 10,
  "symbols_in_volume": [
   "movingpandas.geometry_utils.calculate_initial_compass_bearing",
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "tests.test_geometry_utils.TestGeometryUtils.test_compass_bearing_north": {
  "lineno": 16,
  "symbols_in_volume": [
   "movingpandas.geometry_utils.calculate_initial_compass_bearing",
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "tests.test_geometry_utils.TestGeometryUtils.test_compass_bearing_south": {
  "lineno": 19,
  "symbols_in_volume": [
   "movingpandas.geometry_utils.calculate_initial_compass_bearing",
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "tests.test_geometry_utils.TestGeometryUtils.test_compass_bearing_west": {
  "lineno": 13,
  "symbols_in_volume": [
   "movingpandas.geometry_utils.calculate_initial_compass_bearing",
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "tests.test_overlay": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_overlay.TestOverlay": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_overlay.TestOverlay.setup_method": {
  "lineno": 12,
  "symbols_in_volume": [
   "tests.test_trajectory.CRS_LATLON",
   "tests.test_trajectory.CRS_METRIC",
   "tests.test_trajectory.Node",
   "tests.test_trajectory.make_traj"
  ],
  "type": "function"
 },
 "tests.test_overlay.TestOverlay.test_clip_does_not_alter_df": {
  "lineno": 74,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "shapely.geometry.Polygon"
  ],
  "type": "function"
 },
 "tests.test_overlay.TestOverlay.test_clip_interpolated_singlepoint": {
  "lineno": 66,
  "symbols_in_volume": [
   "shapely.geometry.Polygon",
   "tests.test_trajectory.Node",
   "tests.test_trajectory.make_traj"
  ],
  "type": "function"
 },
 "tests.test_overlay.TestOverlay.test_clip_one_intersections": {
  "lineno": 24,
  "symbols_in_volume": [
   "shapely.geometry.Polygon",
   "tests.test_trajectory.Node",
   "tests.test_trajectory.make_traj"
  ],
  "type": "function"
 },
 "tests.test_overlay.TestOverlay.test_clip_pointbased": {
  "lineno": 51,
  "symbols_in_volume": [
   "shapely.geometry.Polygon",
   "tests.test_trajectory.Node",
   "tests.test_trajectory.make_traj"
  ],
  "type": "function"
 },
 "tests.test_overlay.TestOverlay.test_clip_pointbased_singlepoint_returns_empty": {
  "lineno": 60,
  "symbols_in_volume": [
   "shapely.geometry.Polygon",
   "tests.test_trajectory.Node",
   "tests.test_trajectory.make_traj"
  ],
  "type": "function"
 },
 "tests.test_overlay.TestOverlay.test_clip_two_intersections_with_same_polygon": {
  "lineno": 32,
  "symbols_in_volume": [
   "shapely.geometry.Polygon",
   "tests.test_trajectory.Node",
   "tests.test_trajectory.make_traj"
  ],
  "type": "function"
 },
 "tests.test_overlay.TestOverlay.test_clip_with_duplicate_traj_points_does_not_drop_any_points": {
  "lineno": 42,
  "symbols_in_volume": [
   "shapely.geometry.Polygon",
   "tests.test_trajectory.Node",
   "tests.test_trajectory.make_traj"
  ],
  "type": "function"
 },
 "tests.test_overlay.TestOverlay.test_clip_with_milliseconds": {
  "lineno": 88,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.timedelta",
   "shapely.geometry.Polygon",
   "tests.test_trajectory.Node",
   "tests.test_trajectory.make_traj"
  ],
  "type": "function"
 },
 "tests.test_overlay.TestOverlay.test_clip_with_no_intersection": {
  "lineno": 106,
  "symbols_in_volume": [
   "shapely.geometry.Polygon"
  ],
  "type": "function"
 },
 "tests.test_overlay.TestOverlay.test_clip_with_numerical_time_issues": {
  "lineno": 97,
  "symbols_in_volume": [
   "shapely.geometry.Polygon",
   "tests.test_trajectory.Node",
   "tests.test_trajectory.make_traj"
  ],
  "type": "function"
 },
 "tests.test_overlay.TestOverlay.test_clip_with_one_intersection_reversed": {
  "lineno": 80,
  "symbols_in_volume": [
   "shapely.geometry.Polygon",
   "tests.test_trajectory.Node",
   "tests.test_trajectory.make_traj"
  ],
  "type": "function"
 },
 "tests.test_overlay.TestOverlay.test_intersection_with_feature": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_trajectory": {
  "lineno": null,
  "symbols_in_volume": [
   "fiona.crs.from_epsg"
  ],
  "type": "module"
 },
 "tests.test_trajectory.Node": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_trajectory.Node.__init__": {
  "lineno": 18,
  "symbols_in_volume": [
   "datetime.datetime",
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "tests.test_trajectory.Node.to_dict": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_trajectory.TestTrajectory.setup_method": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_add_direction": {
  "lineno": 110,
  "symbols_in_volume": [
   "movingpandas.trajectory.DIRECTION_COL_NAME.tolist"
  ],
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_add_direction_latlon": {
  "lineno": 115,
  "symbols_in_volume": [
   "movingpandas.trajectory.DIRECTION_COL_NAME.tolist",
   "pytest.approx"
  ],
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_add_speed": {
  "lineno": 122,
  "symbols_in_volume": [
   "movingpandas.trajectory.SPEED_COL_NAME.tolist"
  ],
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_add_speed_can_overwrite": {
  "lineno": 127,
  "symbols_in_volume": [
   "movingpandas.trajectory.SPEED_COL_NAME.tolist"
  ],
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_add_speed_latlon": {
  "lineno": 139,
  "symbols_in_volume": [
   "movingpandas.trajectory.SPEED_COL_NAME.tolist",
   "pytest.approx"
  ],
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_add_speed_latlon_numerical_issues": {
  "lineno": 144,
  "symbols_in_volume": [
   "shapely.geometry.Polygon"
  ],
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_add_speed_only_adds_speed_column_and_doesnt_otherwise_alter_df": {
  "lineno": 133,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_douglas_peucker": {
  "lineno": 223,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_endlocation": {
  "lineno": 48,
  "symbols_in_volume": [
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_generalize_min_time_delta": {
  "lineno": 228,
  "symbols_in_volume": [
   "datetime.timedelta"
  ],
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_get_bbox": {
  "lineno": 152,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_get_direction": {
  "lineno": 164,
  "symbols_in_volume": [
   "pytest.approx"
  ],
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_get_interpolated_position_at_existing_timestamp": {
  "lineno": 65,
  "symbols_in_volume": [
   "datetime.datetime",
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_get_length_euclidiean": {
  "lineno": 160,
  "symbols_in_volume": [
   "pytest.approx"
  ],
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_get_length_spherical": {
  "lineno": 156,
  "symbols_in_volume": [
   "pytest.approx"
  ],
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_get_linestring_between_interpolate": {
  "lineno": 100,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_get_linestring_between_within": {
  "lineno": 105,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_get_position_at_existing_timestamp": {
  "lineno": 57,
  "symbols_in_volume": [
   "datetime.datetime",
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_get_position_interpolated_at_timestamp_1": {
  "lineno": 78,
  "symbols_in_volume": [
   "datetime.datetime",
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_get_position_interpolated_at_timestamp_2": {
  "lineno": 82,
  "symbols_in_volume": [
   "datetime.datetime",
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_get_position_of_nearest_timestamp_1": {
  "lineno": 70,
  "symbols_in_volume": [
   "datetime.datetime",
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_get_position_of_nearest_timestamp_2": {
  "lineno": 74,
  "symbols_in_volume": [
   "datetime.datetime",
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_get_position_with_invalid_method": {
  "lineno": 61,
  "symbols_in_volume": [
   "datetime.datetime",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_get_segment_between_existing_timestamps": {
  "lineno": 86,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_get_segment_between_new_timestamps": {
  "lineno": 94,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_getlength_does_not_alter_df": {
  "lineno": 244,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_getpositionat_does_not_alter_df": {
  "lineno": 269,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_linestringbetween_does_not_alter_df": {
  "lineno": 264,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_nonchronological_input": {
  "lineno": 217,
  "symbols_in_volume": [
   "datetime.datetime",
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_offset_minutes": {
  "lineno": 211,
  "symbols_in_volume": [
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_offset_seconds": {
  "lineno": 205,
  "symbols_in_volume": [
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_plot_does_not_alter_df": {
  "lineno": 254,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_plot_exists": {
  "lineno": 233,
  "symbols_in_volume": [
   "matplotlib.axes.Axes"
  ],
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_split_by_date_ignores_single_node_sgements": {
  "lineno": 174,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_split_by_daybreak": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_split_by_daybreak_same_day_of_year": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_split_by_observation_gap": {
  "lineno": 192,
  "symbols_in_volume": [
   "datetime.timedelta"
  ],
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_split_by_observation_gap_skip_single_points": {
  "lineno": 199,
  "symbols_in_volume": [
   "datetime.timedelta"
  ],
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_split_by_year": {
  "lineno": 185,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_splitbyobservationgap_does_not_alter_df": {
  "lineno": 259,
  "symbols_in_volume": [
   "datetime.timedelta",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_str_does_not_alter_df": {
  "lineno": 249,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_tolinestring_does_not_alter_df": {
  "lineno": 238,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_write_linestring_m_wkt_with_unix_time": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_write_linestring_wkt": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_trajectory.make_traj": {
  "lineno": 27,
  "symbols_in_volume": [
   "geopandas.GeoDataFrame",
   "movingpandas.trajectory.Trajectory",
   "pandas.DataFrame"
  ],
  "type": "function"
 }
}