{
 "movingpandas": {
  "data": {},
  "type": "module"
 },
 "movingpandas.__version__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "movingpandas.geometry_utils": {
  "data": {},
  "type": "module"
 },
 "movingpandas.geometry_utils.Point": {
  "data": {
   "shadows": "shapely.geometry.Point"
  },
  "type": "import"
 },
 "movingpandas.geometry_utils.R_EARTH": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "movingpandas.geometry_utils.angular_difference": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "movingpandas.geometry_utils.atan2": {
  "data": {
   "shadows": "math.atan2"
  },
  "type": "import"
 },
 "movingpandas.geometry_utils.azimuth": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "TypeError",
    "math.atan2",
    "math.degrees",
    "shapely.geometry.Point",
    "type"
   ]
  },
  "type": "function"
 },
 "movingpandas.geometry_utils.calculate_initial_compass_bearing": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "TypeError",
    "math.atan2",
    "math.cos",
    "math.degrees",
    "math.radians",
    "math.sin",
    "shapely.geometry.Point",
    "type"
   ]
  },
  "type": "function"
 },
 "movingpandas.geometry_utils.cos": {
  "data": {
   "shadows": "math.cos"
  },
  "type": "import"
 },
 "movingpandas.geometry_utils.degrees": {
  "data": {
   "shadows": "math.degrees"
  },
  "type": "import"
 },
 "movingpandas.geometry_utils.measure_distance_euclidean": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "TypeError",
    "shapely.geometry.Point",
    "type"
   ]
  },
  "type": "function"
 },
 "movingpandas.geometry_utils.measure_distance_spherical": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "TypeError",
    "float",
    "math.atan2",
    "math.cos",
    "math.radians",
    "math.sin",
    "math.sqrt",
    "movingpandas.geometry_utils.R_EARTH",
    "shapely.geometry.Point",
    "type"
   ]
  },
  "type": "function"
 },
 "movingpandas.geometry_utils.radians": {
  "data": {
   "shadows": "math.radians"
  },
  "type": "import"
 },
 "movingpandas.geometry_utils.sin": {
  "data": {
   "shadows": "math.sin"
  },
  "type": "import"
 },
 "movingpandas.geometry_utils.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "movingpandas.name": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "tests": {
  "data": {},
  "type": "module"
 },
 "tests.test_geometry_utils": {
  "data": {},
  "type": "module"
 },
 "tests.test_geometry_utils.Point": {
  "data": {
   "shadows": "shapely.geometry.Point"
  },
  "type": "import"
 },
 "tests.test_geometry_utils.TestGeometryUtils": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "tests.test_geometry_utils.TestGeometryUtils.test_anglular_difference_halfcicle": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "movingpandas.geometry_utils.angular_difference"
   ]
  },
  "type": "function"
 },
 "tests.test_geometry_utils.TestGeometryUtils.test_anglular_difference_onenegative": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "movingpandas.geometry_utils.angular_difference"
   ]
  },
  "type": "function"
 },
 "tests.test_geometry_utils.TestGeometryUtils.test_anglular_difference_same": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "movingpandas.geometry_utils.angular_difference"
   ]
  },
  "type": "function"
 },
 "tests.test_geometry_utils.TestGeometryUtils.test_anglular_difference_tohigher": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "movingpandas.geometry_utils.angular_difference"
   ]
  },
  "type": "function"
 },
 "tests.test_geometry_utils.TestGeometryUtils.test_anglular_difference_tolower": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "movingpandas.geometry_utils.angular_difference"
   ]
  },
  "type": "function"
 },
 "tests.test_geometry_utils.TestGeometryUtils.test_anglular_difference_twonegative": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "movingpandas.geometry_utils.angular_difference"
   ]
  },
  "type": "function"
 },
 "tests.test_geometry_utils.TestGeometryUtils.test_azimuth_east": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "movingpandas.geometry_utils.azimuth",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "tests.test_geometry_utils.TestGeometryUtils.test_azimuth_north": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "movingpandas.geometry_utils.azimuth",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "tests.test_geometry_utils.TestGeometryUtils.test_azimuth_northeast": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "movingpandas.geometry_utils.azimuth",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "tests.test_geometry_utils.TestGeometryUtils.test_azimuth_northwest": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "movingpandas.geometry_utils.azimuth",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "tests.test_geometry_utils.TestGeometryUtils.test_azimuth_south": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "movingpandas.geometry_utils.azimuth",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "tests.test_geometry_utils.TestGeometryUtils.test_azimuth_southeast": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "movingpandas.geometry_utils.azimuth",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "tests.test_geometry_utils.TestGeometryUtils.test_azimuth_southwest": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "movingpandas.geometry_utils.azimuth",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "tests.test_geometry_utils.TestGeometryUtils.test_azimuth_west": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "movingpandas.geometry_utils.azimuth",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "tests.test_geometry_utils.TestGeometryUtils.test_compass_bearing_east": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "movingpandas.geometry_utils.calculate_initial_compass_bearing",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "tests.test_geometry_utils.TestGeometryUtils.test_compass_bearing_north": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "movingpandas.geometry_utils.calculate_initial_compass_bearing",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "tests.test_geometry_utils.TestGeometryUtils.test_compass_bearing_south": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "movingpandas.geometry_utils.calculate_initial_compass_bearing",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "tests.test_geometry_utils.TestGeometryUtils.test_compass_bearing_west": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "movingpandas.geometry_utils.calculate_initial_compass_bearing",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "tests.test_geometry_utils.angular_difference": {
  "data": {
   "shadows": "movingpandas.geometry_utils.angular_difference"
  },
  "type": "import"
 },
 "tests.test_geometry_utils.azimuth": {
  "data": {
   "shadows": "movingpandas.geometry_utils.azimuth"
  },
  "type": "import"
 },
 "tests.test_geometry_utils.calculate_initial_compass_bearing": {
  "data": {
   "shadows": "movingpandas.geometry_utils.calculate_initial_compass_bearing"
  },
  "type": "import"
 },
 "tests.test_geometry_utils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_overlay": {
  "data": {},
  "type": "module"
 },
 "tests.test_overlay.CRS_LATLON": {
  "data": {
   "shadows": "tests.test_trajectory.CRS_LATLON"
  },
  "type": "import"
 },
 "tests.test_overlay.CRS_METRIC": {
  "data": {
   "shadows": "tests.test_trajectory.CRS_METRIC"
  },
  "type": "import"
 },
 "tests.test_overlay.LineString": {
  "data": {
   "shadows": "shapely.geometry.LineString"
  },
  "type": "import"
 },
 "tests.test_overlay.Node": {
  "data": {
   "shadows": "tests.test_trajectory.Node"
  },
  "type": "import"
 },
 "tests.test_overlay.Point": {
  "data": {
   "shadows": "shapely.geometry.Point"
  },
  "type": "import"
 },
 "tests.test_overlay.Polygon": {
  "data": {
   "shadows": "shapely.geometry.Polygon"
  },
  "type": "import"
 },
 "tests.test_overlay.TestOverlay": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "tests.test_overlay.TestOverlay.setup_method": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "tests.test_trajectory.CRS_LATLON",
    "tests.test_trajectory.CRS_METRIC",
    "tests.test_trajectory.Node",
    "tests.test_trajectory.make_traj"
   ]
  },
  "type": "function"
 },
 "tests.test_overlay.TestOverlay.test_clip_does_not_alter_df": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "shapely.geometry.Polygon"
   ]
  },
  "type": "function"
 },
 "tests.test_overlay.TestOverlay.test_clip_interpolated_singlepoint": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "len",
    "shapely.geometry.Polygon",
    "tests.test_trajectory.Node",
    "tests.test_trajectory.make_traj"
   ]
  },
  "type": "function"
 },
 "tests.test_overlay.TestOverlay.test_clip_one_intersections": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "len",
    "shapely.geometry.Polygon",
    "tests.test_trajectory.Node",
    "tests.test_trajectory.make_traj"
   ]
  },
  "type": "function"
 },
 "tests.test_overlay.TestOverlay.test_clip_pointbased": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "len",
    "shapely.geometry.Polygon",
    "tests.test_trajectory.Node",
    "tests.test_trajectory.make_traj"
   ]
  },
  "type": "function"
 },
 "tests.test_overlay.TestOverlay.test_clip_pointbased_singlepoint_returns_empty": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "shapely.geometry.Polygon",
    "tests.test_trajectory.Node",
    "tests.test_trajectory.make_traj"
   ]
  },
  "type": "function"
 },
 "tests.test_overlay.TestOverlay.test_clip_two_intersections_with_same_polygon": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "len",
    "shapely.geometry.Polygon",
    "tests.test_trajectory.Node",
    "tests.test_trajectory.make_traj"
   ]
  },
  "type": "function"
 },
 "tests.test_overlay.TestOverlay.test_clip_with_duplicate_traj_points_does_not_drop_any_points": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "len",
    "shapely.geometry.Polygon",
    "tests.test_trajectory.Node",
    "tests.test_trajectory.make_traj"
   ]
  },
  "type": "function"
 },
 "tests.test_overlay.TestOverlay.test_clip_with_milliseconds": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta",
    "shapely.geometry.Polygon",
    "tests.test_trajectory.Node",
    "tests.test_trajectory.make_traj"
   ]
  },
  "type": "function"
 },
 "tests.test_overlay.TestOverlay.test_clip_with_no_intersection": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "shapely.geometry.Polygon"
   ]
  },
  "type": "function"
 },
 "tests.test_overlay.TestOverlay.test_clip_with_numerical_time_issues": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "shapely.geometry.Polygon",
    "tests.test_trajectory.Node",
    "tests.test_trajectory.make_traj"
   ]
  },
  "type": "function"
 },
 "tests.test_overlay.TestOverlay.test_clip_with_one_intersection_reversed": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "len",
    "shapely.geometry.Polygon",
    "tests.test_trajectory.Node",
    "tests.test_trajectory.make_traj"
   ]
  },
  "type": "function"
 },
 "tests.test_overlay.TestOverlay.test_intersection_with_feature": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "tests.test_overlay.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "tests.test_overlay.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "tests.test_overlay.make_traj": {
  "data": {
   "shadows": "tests.test_trajectory.make_traj"
  },
  "type": "import"
 },
 "tests.test_overlay.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_overlay.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "tests.test_trajectory": {
  "data": {
   "symbols_in_volume": [
    "fiona.crs.from_epsg"
   ]
  },
  "type": "module"
 },
 "tests.test_trajectory.Axes": {
  "data": {
   "shadows": "matplotlib.axes.Axes"
  },
  "type": "import"
 },
 "tests.test_trajectory.CRS_LATLON": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "tests.test_trajectory.CRS_METRIC": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "tests.test_trajectory.DIRECTION_COL_NAME": {
  "data": {
   "shadows": "movingpandas.trajectory.DIRECTION_COL_NAME"
  },
  "type": "import"
 },
 "tests.test_trajectory.GeoDataFrame": {
  "data": {
   "shadows": "geopandas.GeoDataFrame"
  },
  "type": "import"
 },
 "tests.test_trajectory.Node": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "tests.test_trajectory.Node.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "datetime.datetime",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "tests.test_trajectory.Node.to_dict": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "tests.test_trajectory.Point": {
  "data": {
   "shadows": "shapely.geometry.Point"
  },
  "type": "import"
 },
 "tests.test_trajectory.Polygon": {
  "data": {
   "shadows": "shapely.geometry.Polygon"
  },
  "type": "import"
 },
 "tests.test_trajectory.SPEED_COL_NAME": {
  "data": {
   "shadows": "movingpandas.trajectory.SPEED_COL_NAME"
  },
  "type": "import"
 },
 "tests.test_trajectory.TestTrajectory": {
  "data": {
   "lineno": 34
  },
  "type": "class"
 },
 "tests.test_trajectory.TestTrajectory.setup_method": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "tests.test_trajectory.CRS_LATLON",
    "tests.test_trajectory.CRS_METRIC",
    "tests.test_trajectory.Node",
    "tests.test_trajectory.make_traj"
   ]
  },
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_add_direction": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "movingpandas.trajectory.DIRECTION_COL_NAME.tolist",
    "tests.test_trajectory.Node",
    "tests.test_trajectory.make_traj"
   ]
  },
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_add_direction_latlon": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "movingpandas.trajectory.DIRECTION_COL_NAME.tolist",
    "tests.test_trajectory.CRS_LATLON",
    "tests.test_trajectory.Node",
    "tests.test_trajectory.make_traj",
    "tests.test_trajectory.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_add_speed": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "movingpandas.trajectory.SPEED_COL_NAME.tolist",
    "tests.test_trajectory.Node",
    "tests.test_trajectory.make_traj"
   ]
  },
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_add_speed_can_overwrite": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "movingpandas.trajectory.SPEED_COL_NAME.tolist",
    "tests.test_trajectory.Node",
    "tests.test_trajectory.make_traj"
   ]
  },
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_add_speed_latlon": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "movingpandas.trajectory.SPEED_COL_NAME.tolist",
    "tests.test_trajectory.CRS_LATLON",
    "tests.test_trajectory.Node",
    "tests.test_trajectory.make_traj",
    "tests.test_trajectory.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_add_speed_latlon_numerical_issues": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "shapely.geometry.Polygon",
    "tests.test_trajectory.CRS_LATLON",
    "tests.test_trajectory.Node",
    "tests.test_trajectory.make_traj"
   ]
  },
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_add_speed_only_adds_speed_column_and_doesnt_otherwise_alter_df": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_douglas_peucker": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "tests.test_trajectory.Node",
    "tests.test_trajectory.make_traj"
   ]
  },
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_endlocation": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_generalize_min_time_delta": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "datetime.timedelta",
    "tests.test_trajectory.Node",
    "tests.test_trajectory.make_traj"
   ]
  },
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_get_bbox": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "tests.test_trajectory.CRS_LATLON",
    "tests.test_trajectory.Node",
    "tests.test_trajectory.make_traj"
   ]
  },
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_get_direction": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "tests.test_trajectory.Node",
    "tests.test_trajectory.make_traj",
    "tests.test_trajectory.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_get_interpolated_position_at_existing_timestamp": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "datetime.datetime",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_get_length_euclidiean": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "tests.test_trajectory.Node",
    "tests.test_trajectory.make_traj",
    "tests.test_trajectory.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_get_length_spherical": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "tests.test_trajectory.CRS_LATLON",
    "tests.test_trajectory.Node",
    "tests.test_trajectory.make_traj",
    "tests.test_trajectory.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_get_linestring_between_interpolate": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "datetime.datetime"
   ]
  },
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_get_linestring_between_within": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "datetime.datetime"
   ]
  },
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_get_position_at_existing_timestamp": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "datetime.datetime",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_get_position_interpolated_at_timestamp_1": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "datetime.datetime",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_get_position_interpolated_at_timestamp_2": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "datetime.datetime",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_get_position_of_nearest_timestamp_1": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "datetime.datetime",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_get_position_of_nearest_timestamp_2": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "datetime.datetime",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_get_position_with_invalid_method": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ValueError",
    "datetime.datetime",
    "tests.test_trajectory.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_get_segment_between_existing_timestamps": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "datetime.datetime",
    "tests.test_trajectory.Node",
    "tests.test_trajectory.make_traj"
   ]
  },
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_get_segment_between_new_timestamps": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "datetime.datetime",
    "tests.test_trajectory.Node",
    "tests.test_trajectory.make_traj"
   ]
  },
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_getlength_does_not_alter_df": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_getpositionat_does_not_alter_df": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_linestringbetween_does_not_alter_df": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_nonchronological_input": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "datetime.datetime",
    "shapely.geometry.Point",
    "tests.test_trajectory.Node",
    "tests.test_trajectory.make_traj"
   ]
  },
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_offset_minutes": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "shapely.geometry.Point",
    "tests.test_trajectory.Node",
    "tests.test_trajectory.make_traj"
   ]
  },
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_offset_seconds": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_plot_does_not_alter_df": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_plot_exists": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "isinstance",
    "matplotlib.axes.Axes"
   ]
  },
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_split_by_date_ignores_single_node_sgements": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "len",
    "tests.test_trajectory.Node",
    "tests.test_trajectory.make_traj"
   ]
  },
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_split_by_daybreak": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "len",
    "tests.test_trajectory.Node",
    "tests.test_trajectory.make_traj"
   ]
  },
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_split_by_daybreak_same_day_of_year": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "len",
    "tests.test_trajectory.Node",
    "tests.test_trajectory.make_traj"
   ]
  },
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_split_by_observation_gap": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "datetime.timedelta",
    "len",
    "tests.test_trajectory.Node",
    "tests.test_trajectory.make_traj"
   ]
  },
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_split_by_observation_gap_skip_single_points": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "datetime.timedelta",
    "len",
    "tests.test_trajectory.Node",
    "tests.test_trajectory.make_traj"
   ]
  },
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_split_by_year": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "len",
    "tests.test_trajectory.Node",
    "tests.test_trajectory.make_traj"
   ]
  },
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_splitbyobservationgap_does_not_alter_df": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "datetime.timedelta",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_str_does_not_alter_df": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_tolinestring_does_not_alter_df": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_write_linestring_m_wkt_with_unix_time": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "tests.test_trajectory.TestTrajectory.test_write_linestring_wkt": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "tests.test_trajectory.Trajectory": {
  "data": {
   "shadows": "movingpandas.trajectory.Trajectory"
  },
  "type": "import"
 },
 "tests.test_trajectory.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "tests.test_trajectory.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "tests.test_trajectory.from_epsg": {
  "data": {
   "shadows": "fiona.crs.from_epsg"
  },
  "type": "import"
 },
 "tests.test_trajectory.make_traj": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "geopandas.GeoDataFrame",
    "id",
    "movingpandas.trajectory.Trajectory",
    "pandas.DataFrame",
    "tests.test_trajectory.CRS_METRIC"
   ]
  },
  "type": "function"
 },
 "tests.test_trajectory.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "tests.test_trajectory.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_trajectory.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 }
}