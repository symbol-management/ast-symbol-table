{
 "movingpandas": {
  "data": {},
  "type": "module"
 },
 "movingpandas.__version__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "movingpandas.geometry_utils": {
  "data": {},
  "type": "module"
 },
 "movingpandas.geometry_utils.Point": {
  "data": {
   "shadows": "shapely.geometry.Point"
  },
  "type": "import"
 },
 "movingpandas.geometry_utils.R_EARTH": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "movingpandas.geometry_utils.angular_difference": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "movingpandas.geometry_utils.atan2": {
  "data": {
   "shadows": "math.atan2"
  },
  "type": "import"
 },
 "movingpandas.geometry_utils.azimuth": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "math.atan2",
    "math.degrees",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "movingpandas.geometry_utils.calculate_initial_compass_bearing": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "math.atan2",
    "math.cos",
    "math.degrees",
    "math.radians",
    "math.sin",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "movingpandas.geometry_utils.cos": {
  "data": {
   "shadows": "math.cos"
  },
  "type": "import"
 },
 "movingpandas.geometry_utils.degrees": {
  "data": {
   "shadows": "math.degrees"
  },
  "type": "import"
 },
 "movingpandas.geometry_utils.measure_distance_euclidean": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "movingpandas.geometry_utils.measure_distance_spherical": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "TypeError",
    "float",
    "math.atan2",
    "math.cos",
    "math.radians",
    "math.sin",
    "math.sqrt",
    "movingpandas.geometry_utils.R_EARTH",
    "shapely.geometry.Point",
    "type"
   ]
  },
  "type": "function"
 },
 "movingpandas.geometry_utils.radians": {
  "data": {
   "shadows": "math.radians"
  },
  "type": "import"
 },
 "movingpandas.geometry_utils.sin": {
  "data": {
   "shadows": "math.sin"
  },
  "type": "import"
 },
 "movingpandas.geometry_utils.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "movingpandas.name": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "movingpandas.tests": {
  "data": {},
  "type": "module"
 },
 "movingpandas.tests.test_geometry_utils": {
  "data": {},
  "type": "module"
 },
 "movingpandas.tests.test_geometry_utils.Point": {
  "data": {
   "shadows": "shapely.geometry.Point"
  },
  "type": "import"
 },
 "movingpandas.tests.test_geometry_utils.TestGeometryUtils": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "movingpandas.tests.test_geometry_utils.TestGeometryUtils.test_anglular_difference_halfcicle": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "movingpandas.geometry_utils.angular_difference"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_geometry_utils.TestGeometryUtils.test_anglular_difference_onenegative": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "movingpandas.geometry_utils.angular_difference"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_geometry_utils.TestGeometryUtils.test_anglular_difference_same": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "movingpandas.geometry_utils.angular_difference"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_geometry_utils.TestGeometryUtils.test_anglular_difference_tohigher": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "movingpandas.geometry_utils.angular_difference"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_geometry_utils.TestGeometryUtils.test_anglular_difference_tolower": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "movingpandas.geometry_utils.angular_difference"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_geometry_utils.TestGeometryUtils.test_anglular_difference_twonegative": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "movingpandas.geometry_utils.angular_difference"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_geometry_utils.TestGeometryUtils.test_azimuth_east": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "movingpandas.geometry_utils.azimuth",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_geometry_utils.TestGeometryUtils.test_azimuth_north": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "movingpandas.geometry_utils.azimuth",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_geometry_utils.TestGeometryUtils.test_azimuth_northeast": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "movingpandas.geometry_utils.azimuth",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_geometry_utils.TestGeometryUtils.test_azimuth_northwest": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "movingpandas.geometry_utils.azimuth",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_geometry_utils.TestGeometryUtils.test_azimuth_south": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "movingpandas.geometry_utils.azimuth",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_geometry_utils.TestGeometryUtils.test_azimuth_southeast": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "movingpandas.geometry_utils.azimuth",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_geometry_utils.TestGeometryUtils.test_azimuth_southwest": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "movingpandas.geometry_utils.azimuth",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_geometry_utils.TestGeometryUtils.test_azimuth_west": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "movingpandas.geometry_utils.azimuth",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_geometry_utils.TestGeometryUtils.test_compass_bearing_east": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "movingpandas.geometry_utils.calculate_initial_compass_bearing",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_geometry_utils.TestGeometryUtils.test_compass_bearing_north": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "movingpandas.geometry_utils.calculate_initial_compass_bearing",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_geometry_utils.TestGeometryUtils.test_compass_bearing_south": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "movingpandas.geometry_utils.calculate_initial_compass_bearing",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_geometry_utils.TestGeometryUtils.test_compass_bearing_west": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "movingpandas.geometry_utils.calculate_initial_compass_bearing",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_geometry_utils.angular_difference": {
  "data": {
   "shadows": "movingpandas.geometry_utils.angular_difference"
  },
  "type": "import"
 },
 "movingpandas.tests.test_geometry_utils.azimuth": {
  "data": {
   "shadows": "movingpandas.geometry_utils.azimuth"
  },
  "type": "import"
 },
 "movingpandas.tests.test_geometry_utils.calculate_initial_compass_bearing": {
  "data": {
   "shadows": "movingpandas.geometry_utils.calculate_initial_compass_bearing"
  },
  "type": "import"
 },
 "movingpandas.tests.test_geometry_utils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "movingpandas.tests.test_overlay": {
  "data": {},
  "type": "module"
 },
 "movingpandas.tests.test_overlay.CRS_LATLON": {
  "data": {
   "shadows": "movingpandas.tests.test_trajectory.CRS_LATLON"
  },
  "type": "import"
 },
 "movingpandas.tests.test_overlay.CRS_METRIC": {
  "data": {
   "shadows": "movingpandas.tests.test_trajectory.CRS_METRIC"
  },
  "type": "import"
 },
 "movingpandas.tests.test_overlay.Node": {
  "data": {
   "shadows": "movingpandas.tests.test_trajectory.Node"
  },
  "type": "import"
 },
 "movingpandas.tests.test_overlay.Polygon": {
  "data": {
   "shadows": "shapely.geometry.Polygon"
  },
  "type": "import"
 },
 "movingpandas.tests.test_overlay.TestOverlay": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "movingpandas.tests.test_overlay.TestOverlay.setup_method": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "movingpandas.tests.test_trajectory.CRS_LATLON",
    "movingpandas.tests.test_trajectory.CRS_METRIC",
    "movingpandas.tests.test_trajectory.Node",
    "movingpandas.tests.test_trajectory.make_traj"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_overlay.TestOverlay.test_clip_does_not_alter_df": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "shapely.geometry.Polygon"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_overlay.TestOverlay.test_clip_interpolated_singlepoint": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "len",
    "movingpandas.tests.test_trajectory.Node",
    "movingpandas.tests.test_trajectory.make_traj",
    "shapely.geometry.Polygon"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_overlay.TestOverlay.test_clip_one_intersections": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "len",
    "movingpandas.tests.test_trajectory.Node",
    "movingpandas.tests.test_trajectory.make_traj",
    "shapely.geometry.Polygon"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_overlay.TestOverlay.test_clip_pointbased": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "len",
    "movingpandas.tests.test_trajectory.Node",
    "movingpandas.tests.test_trajectory.make_traj",
    "shapely.geometry.Polygon"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_overlay.TestOverlay.test_clip_pointbased_singlepoint_returns_empty": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "movingpandas.tests.test_trajectory.Node",
    "movingpandas.tests.test_trajectory.make_traj",
    "shapely.geometry.Polygon"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_overlay.TestOverlay.test_clip_two_intersections_with_same_polygon": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "len",
    "movingpandas.tests.test_trajectory.Node",
    "movingpandas.tests.test_trajectory.make_traj",
    "shapely.geometry.Polygon"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_overlay.TestOverlay.test_clip_with_duplicate_traj_points_does_not_drop_any_points": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "len",
    "movingpandas.tests.test_trajectory.Node",
    "movingpandas.tests.test_trajectory.make_traj",
    "shapely.geometry.Polygon"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_overlay.TestOverlay.test_clip_with_milliseconds": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta",
    "movingpandas.tests.test_trajectory.Node",
    "movingpandas.tests.test_trajectory.make_traj",
    "shapely.geometry.Polygon"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_overlay.TestOverlay.test_clip_with_no_intersection": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "shapely.geometry.Polygon"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_overlay.TestOverlay.test_clip_with_numerical_time_issues": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "movingpandas.tests.test_trajectory.Node",
    "movingpandas.tests.test_trajectory.make_traj",
    "shapely.geometry.Polygon"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_overlay.TestOverlay.test_clip_with_one_intersection_reversed": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "len",
    "movingpandas.tests.test_trajectory.Node",
    "movingpandas.tests.test_trajectory.make_traj",
    "shapely.geometry.Polygon"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_overlay.TestOverlay.test_intersection_with_feature": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_overlay.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "movingpandas.tests.test_overlay.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "movingpandas.tests.test_overlay.make_traj": {
  "data": {
   "shadows": "movingpandas.tests.test_trajectory.make_traj"
  },
  "type": "import"
 },
 "movingpandas.tests.test_overlay.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "movingpandas.tests.test_trajectory": {
  "data": {
   "symbols_in_volume": [
    "fiona.crs.from_epsg"
   ]
  },
  "type": "module"
 },
 "movingpandas.tests.test_trajectory.Axes": {
  "data": {
   "shadows": "matplotlib.axes.Axes"
  },
  "type": "import"
 },
 "movingpandas.tests.test_trajectory.CRS_LATLON": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "movingpandas.tests.test_trajectory.CRS_METRIC": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "movingpandas.tests.test_trajectory.DIRECTION_COL_NAME": {
  "data": {
   "shadows": "movingpandas.trajectory.DIRECTION_COL_NAME"
  },
  "type": "import"
 },
 "movingpandas.tests.test_trajectory.GeoDataFrame": {
  "data": {
   "shadows": "geopandas.GeoDataFrame"
  },
  "type": "import"
 },
 "movingpandas.tests.test_trajectory.Node": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "movingpandas.tests.test_trajectory.Node.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "datetime.datetime",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.Node.to_dict": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.Point": {
  "data": {
   "shadows": "shapely.geometry.Point"
  },
  "type": "import"
 },
 "movingpandas.tests.test_trajectory.Polygon": {
  "data": {
   "shadows": "shapely.geometry.Polygon"
  },
  "type": "import"
 },
 "movingpandas.tests.test_trajectory.SPEED_COL_NAME": {
  "data": {
   "shadows": "movingpandas.trajectory.SPEED_COL_NAME"
  },
  "type": "import"
 },
 "movingpandas.tests.test_trajectory.TestPoint": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "shapely.geometry.Point"
   ]
  },
  "type": "class"
 },
 "movingpandas.tests.test_trajectory.TestPoint.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory": {
  "data": {
   "lineno": 39
  },
  "type": "class"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.setup_method": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "movingpandas.tests.test_trajectory.CRS_LATLON",
    "movingpandas.tests.test_trajectory.CRS_METRIC",
    "movingpandas.tests.test_trajectory.Node",
    "movingpandas.tests.test_trajectory.make_traj"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_add_direction": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "movingpandas.tests.test_trajectory.Node",
    "movingpandas.tests.test_trajectory.make_traj",
    "movingpandas.trajectory.DIRECTION_COL_NAME.tolist"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_add_direction_latlon": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "movingpandas.tests.test_trajectory.CRS_LATLON",
    "movingpandas.tests.test_trajectory.Node",
    "movingpandas.tests.test_trajectory.make_traj",
    "movingpandas.tests.test_trajectory.pytest",
    "movingpandas.trajectory.DIRECTION_COL_NAME.tolist"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_add_speed": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "movingpandas.tests.test_trajectory.Node",
    "movingpandas.tests.test_trajectory.make_traj",
    "movingpandas.trajectory.SPEED_COL_NAME.tolist"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_add_speed_can_overwrite": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "movingpandas.tests.test_trajectory.Node",
    "movingpandas.tests.test_trajectory.make_traj",
    "movingpandas.trajectory.SPEED_COL_NAME.tolist"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_add_speed_latlon": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "movingpandas.tests.test_trajectory.CRS_LATLON",
    "movingpandas.tests.test_trajectory.Node",
    "movingpandas.tests.test_trajectory.make_traj",
    "movingpandas.tests.test_trajectory.pytest",
    "movingpandas.trajectory.SPEED_COL_NAME.tolist"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_add_speed_latlon_numerical_issues": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "movingpandas.tests.test_trajectory.CRS_LATLON",
    "movingpandas.tests.test_trajectory.Node",
    "movingpandas.tests.test_trajectory.make_traj",
    "shapely.geometry.Polygon"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_add_speed_only_adds_speed_column_and_doesnt_otherwise_alter_df": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_add_speed_without_crs": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "movingpandas.tests.test_trajectory.Node",
    "movingpandas.tests.test_trajectory.make_traj",
    "movingpandas.trajectory.SPEED_COL_NAME.tolist"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_endlocation": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_get_bbox": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "movingpandas.tests.test_trajectory.CRS_LATLON",
    "movingpandas.tests.test_trajectory.Node",
    "movingpandas.tests.test_trajectory.make_traj"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_get_direction": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "movingpandas.tests.test_trajectory.Node",
    "movingpandas.tests.test_trajectory.make_traj",
    "movingpandas.tests.test_trajectory.pytest"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_get_interpolated_position_at_existing_timestamp": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "datetime.datetime",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_get_length_euclidiean": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "movingpandas.tests.test_trajectory.Node",
    "movingpandas.tests.test_trajectory.make_traj",
    "movingpandas.tests.test_trajectory.pytest"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_get_length_spherical": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "movingpandas.tests.test_trajectory.CRS_LATLON",
    "movingpandas.tests.test_trajectory.Node",
    "movingpandas.tests.test_trajectory.make_traj",
    "movingpandas.tests.test_trajectory.pytest"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_get_linestring_between_interpolate": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "datetime.datetime"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_get_linestring_between_within": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "datetime.datetime"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_get_position_at_existing_timestamp": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "datetime.datetime",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_get_position_interpolated_at_timestamp_1": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "datetime.datetime",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_get_position_interpolated_at_timestamp_2": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "datetime.datetime",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_get_position_of_nearest_timestamp_1": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "datetime.datetime",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_get_position_of_nearest_timestamp_2": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "datetime.datetime",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_get_position_with_invalid_method": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ValueError",
    "datetime.datetime",
    "movingpandas.tests.test_trajectory.pytest"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_get_segment_between_existing_timestamps": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "datetime.datetime",
    "movingpandas.tests.test_trajectory.Node",
    "movingpandas.tests.test_trajectory.make_traj"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_get_segment_between_new_timestamps": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "datetime.datetime",
    "movingpandas.tests.test_trajectory.Node",
    "movingpandas.tests.test_trajectory.make_traj"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_getlength_does_not_alter_df": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_getpositionat_does_not_alter_df": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_hvplot_exists": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "movingpandas.tests.test_trajectory.holoviews"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_hvplot_exists_without_crs": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "isinstance",
    "movingpandas.tests.test_trajectory.Node",
    "movingpandas.tests.test_trajectory.holoviews",
    "movingpandas.tests.test_trajectory.make_traj"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_latlon": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "movingpandas.tests.test_trajectory.CRS_LATLON",
    "movingpandas.tests.test_trajectory.Node",
    "movingpandas.tests.test_trajectory.make_traj"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_linestringbetween_does_not_alter_df": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_nonchronological_input": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta",
    "movingpandas.tests.test_trajectory.Node",
    "movingpandas.tests.test_trajectory.make_traj",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_offset_minutes": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "movingpandas.tests.test_trajectory.Node",
    "movingpandas.tests.test_trajectory.make_traj",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_offset_seconds": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_plot_does_not_alter_df": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_plot_exists": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "isinstance",
    "matplotlib.axes.Axes"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_split_by_date_ignores_single_node_sgements": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "len",
    "movingpandas.tests.test_trajectory.Node",
    "movingpandas.tests.test_trajectory.make_traj"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_split_by_daybreak": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "len",
    "movingpandas.tests.test_trajectory.Node",
    "movingpandas.tests.test_trajectory.make_traj"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_split_by_daybreak_same_day_of_year": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "len",
    "movingpandas.tests.test_trajectory.Node",
    "movingpandas.tests.test_trajectory.make_traj"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_split_by_observation_gap": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "datetime.timedelta",
    "len",
    "movingpandas.tests.test_trajectory.Node",
    "movingpandas.tests.test_trajectory.make_traj"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_split_by_observation_gap_skip_single_points": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "datetime.timedelta",
    "len",
    "movingpandas.tests.test_trajectory.Node",
    "movingpandas.tests.test_trajectory.make_traj"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_split_by_year": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "len",
    "movingpandas.tests.test_trajectory.Node",
    "movingpandas.tests.test_trajectory.make_traj"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_splitbyobservationgap_does_not_alter_df": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "datetime.timedelta",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_str_does_not_alter_df": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_support_for_other_geometry_column_names": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "datetime.datetime",
    "geopandas.GeoDataFrame",
    "movingpandas.tests.test_trajectory.CRS_METRIC",
    "movingpandas.tests.test_trajectory.TestPoint",
    "movingpandas.trajectory.Trajectory",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_support_for_other_time_column_names": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "datetime.datetime",
    "geopandas.GeoDataFrame",
    "movingpandas.tests.test_trajectory.CRS_METRIC",
    "movingpandas.tests.test_trajectory.TestPoint",
    "movingpandas.trajectory.Trajectory",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_support_for_subclasses_of_point": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "datetime.datetime",
    "geopandas.GeoDataFrame",
    "movingpandas.tests.test_trajectory.CRS_METRIC",
    "movingpandas.tests.test_trajectory.TestPoint",
    "movingpandas.trajectory.Trajectory",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_tolinestring_does_not_alter_df": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_without_crs": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "movingpandas.tests.test_trajectory.Node",
    "movingpandas.tests.test_trajectory.make_traj"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_write_linestring_m_wkt_with_unix_time": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.TestTrajectory.test_write_linestring_wkt": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.Trajectory": {
  "data": {
   "shadows": "movingpandas.trajectory.Trajectory"
  },
  "type": "import"
 },
 "movingpandas.tests.test_trajectory.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "movingpandas.tests.test_trajectory.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "movingpandas.tests.test_trajectory.from_epsg": {
  "data": {
   "shadows": "fiona.crs.from_epsg"
  },
  "type": "import"
 },
 "movingpandas.tests.test_trajectory.holoviews": {
  "data": {
   "shadows": "holoviews"
  },
  "type": "import"
 },
 "movingpandas.tests.test_trajectory.make_traj": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "geopandas.GeoDataFrame",
    "id",
    "movingpandas.tests.test_trajectory.CRS_METRIC",
    "movingpandas.trajectory.Trajectory",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "movingpandas.tests.test_trajectory.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "movingpandas.tests.test_trajectory.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "movingpandas.tests.test_trajectory_aggregator": {
  "data": {
   "symbols_in_volume": [
    "pyproj.CRS.from_user_input"
   ]
  },
  "type": "module"
 },
 "movingpandas.tests.test_trajectory_aggregator.CRS": {
  "data": {
   "shadows": "pyproj.CRS"
  },
  "type": "import"
 },
 "movingpandas.tests.test_trajectory_aggregator.CRS_LATLON": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "movingpandas.tests.test_trajectory_aggregator.CRS_METRIC": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "movingpandas.tests.test_trajectory_aggregator.GeoDataFrame": {
  "data": {
   "shadows": "geopandas.GeoDataFrame"
  },
  "type": "import"
 },
 "movingpandas.tests.test_trajectory_aggregator.Point": {
  "data": {
   "shadows": "shapely.geometry.Point"
  },
  "type": "import"
 },
 "movingpandas.tests.test_trajectory_aggregator.TestTrajectoryCollectionAggregator": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "movingpandas.tests.test_trajectory_aggregator.TestTrajectoryCollectionAggregator.setup_method": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta",
    "geopandas.GeoDataFrame",
    "movingpandas.tests.test_trajectory_aggregator.CRS_LATLON",
    "movingpandas.tests.test_trajectory_aggregator.CRS_METRIC",
    "movingpandas.trajectory_aggregator.TrajectoryCollectionAggregator",
    "movingpandas.trajectory_collection.TrajectoryCollection",
    "pandas.DataFrame",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory_aggregator.TestTrajectoryCollectionAggregator.test_get_clusters_gdf_crs_latlon": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "movingpandas.tests.test_trajectory_aggregator.CRS_LATLON"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory_aggregator.TestTrajectoryCollectionAggregator.test_get_clusters_gdf_crs_metric": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "movingpandas.tests.test_trajectory_aggregator.CRS_METRIC"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory_aggregator.TestTrajectoryCollectionAggregator.test_get_flows_gdf_crs_latlon": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "movingpandas.tests.test_trajectory_aggregator.CRS_LATLON"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory_aggregator.TestTrajectoryCollectionAggregator.test_get_flows_gdf_crs_metric": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "movingpandas.tests.test_trajectory_aggregator.CRS_METRIC"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory_aggregator.TestTrajectoryCollectionAggregator.test_get_significant_points_gdf_crs_latlon": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "movingpandas.tests.test_trajectory_aggregator.CRS_LATLON",
    "print"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory_aggregator.TestTrajectoryCollectionAggregator.test_get_significant_points_gdf_crs_metric": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "movingpandas.tests.test_trajectory_aggregator.CRS_METRIC",
    "print"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory_aggregator.TrajectoryCollection": {
  "data": {
   "shadows": "movingpandas.trajectory_collection.TrajectoryCollection"
  },
  "type": "import"
 },
 "movingpandas.tests.test_trajectory_aggregator.TrajectoryCollectionAggregator": {
  "data": {
   "shadows": "movingpandas.trajectory_aggregator.TrajectoryCollectionAggregator"
  },
  "type": "import"
 },
 "movingpandas.tests.test_trajectory_aggregator.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "movingpandas.tests.test_trajectory_aggregator.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "movingpandas.tests.test_trajectory_aggregator.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "movingpandas.tests.test_trajectory_collection": {
  "data": {
   "symbols_in_volume": [
    "fiona.crs.from_epsg"
   ]
  },
  "type": "module"
 },
 "movingpandas.tests.test_trajectory_collection.Axes": {
  "data": {
   "shadows": "matplotlib.axes.Axes"
  },
  "type": "import"
 },
 "movingpandas.tests.test_trajectory_collection.CRS_LATLON": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "movingpandas.tests.test_trajectory_collection.CRS_METRIC": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "movingpandas.tests.test_trajectory_collection.GeoDataFrame": {
  "data": {
   "shadows": "geopandas.GeoDataFrame"
  },
  "type": "import"
 },
 "movingpandas.tests.test_trajectory_collection.Point": {
  "data": {
   "shadows": "shapely.geometry.Point"
  },
  "type": "import"
 },
 "movingpandas.tests.test_trajectory_collection.Polygon": {
  "data": {
   "shadows": "shapely.geometry.Polygon"
  },
  "type": "import"
 },
 "movingpandas.tests.test_trajectory_collection.TestTrajectoryCollection": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "movingpandas.tests.test_trajectory_collection.TestTrajectoryCollection.setup_method": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "datetime.datetime",
    "geopandas.GeoDataFrame",
    "movingpandas.tests.test_trajectory_collection.CRS_LATLON",
    "movingpandas.tests.test_trajectory_collection.CRS_METRIC",
    "movingpandas.trajectory_collection.TrajectoryCollection",
    "pandas.DataFrame",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory_collection.TestTrajectoryCollection.test_clip": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "len",
    "shapely.geometry.Polygon"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory_collection.TestTrajectoryCollection.test_filter": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory_collection.TestTrajectoryCollection.test_get_end_locations": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "len",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory_collection.TestTrajectoryCollection.test_get_intersecting": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "len",
    "shapely.geometry.Polygon"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory_collection.TestTrajectoryCollection.test_get_min_and_max": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory_collection.TestTrajectoryCollection.test_get_start_locations": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "len",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory_collection.TestTrajectoryCollection.test_get_trajectory": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory_collection.TestTrajectoryCollection.test_hvplot_exists": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "isinstance",
    "movingpandas.tests.test_trajectory_collection.holoviews"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory_collection.TestTrajectoryCollection.test_iteration": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "len",
    "sum"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory_collection.TestTrajectoryCollection.test_iteration_error": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "ValueError",
    "copy.copy",
    "enumerate",
    "filter_trajectory",
    "len",
    "movingpandas.tests.test_trajectory_collection.pytest"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory_collection.TestTrajectoryCollection.test_iteration_error.filter_trajectory": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory_collection.TestTrajectoryCollection.test_number_of_trajectories": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory_collection.TestTrajectoryCollection.test_number_of_trajectories_min_length": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "len",
    "movingpandas.trajectory_collection.TrajectoryCollection"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory_collection.TestTrajectoryCollection.test_number_of_trajectories_min_length_never_reached": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "len",
    "movingpandas.trajectory_collection.TrajectoryCollection"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory_collection.TestTrajectoryCollection.test_plot_exists": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "isinstance",
    "matplotlib.axes.Axes"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory_collection.TestTrajectoryCollection.test_split_by_date": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory_collection.TestTrajectoryCollection.test_split_by_observation_gap": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "datetime.timedelta",
    "len"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory_collection.TrajectoryCollection": {
  "data": {
   "shadows": "movingpandas.trajectory_collection.TrajectoryCollection"
  },
  "type": "import"
 },
 "movingpandas.tests.test_trajectory_collection.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "movingpandas.tests.test_trajectory_collection.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "movingpandas.tests.test_trajectory_collection.from_epsg": {
  "data": {
   "shadows": "fiona.crs.from_epsg"
  },
  "type": "import"
 },
 "movingpandas.tests.test_trajectory_collection.holoviews": {
  "data": {
   "shadows": "holoviews"
  },
  "type": "import"
 },
 "movingpandas.tests.test_trajectory_collection.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "movingpandas.tests.test_trajectory_collection.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "movingpandas.tests.test_trajectory_collection.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "movingpandas.tests.test_trajectory_generalizer": {
  "data": {
   "symbols_in_volume": [
    "fiona.crs.from_epsg"
   ]
  },
  "type": "module"
 },
 "movingpandas.tests.test_trajectory_generalizer.CRS_LATLON": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "movingpandas.tests.test_trajectory_generalizer.CRS_METRIC": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "movingpandas.tests.test_trajectory_generalizer.DouglasPeuckerGeneralizer": {
  "data": {
   "shadows": "movingpandas.trajectory_generalizer.DouglasPeuckerGeneralizer"
  },
  "type": "import"
 },
 "movingpandas.tests.test_trajectory_generalizer.GeoDataFrame": {
  "data": {
   "shadows": "geopandas.GeoDataFrame"
  },
  "type": "import"
 },
 "movingpandas.tests.test_trajectory_generalizer.MaxDistanceGeneralizer": {
  "data": {
   "shadows": "movingpandas.trajectory_generalizer.MaxDistanceGeneralizer"
  },
  "type": "import"
 },
 "movingpandas.tests.test_trajectory_generalizer.MinDistanceGeneralizer": {
  "data": {
   "shadows": "movingpandas.trajectory_generalizer.MinDistanceGeneralizer"
  },
  "type": "import"
 },
 "movingpandas.tests.test_trajectory_generalizer.MinTimeDeltaGeneralizer": {
  "data": {
   "shadows": "movingpandas.trajectory_generalizer.MinTimeDeltaGeneralizer"
  },
  "type": "import"
 },
 "movingpandas.tests.test_trajectory_generalizer.Point": {
  "data": {
   "shadows": "shapely.geometry.Point"
  },
  "type": "import"
 },
 "movingpandas.tests.test_trajectory_generalizer.Polygon": {
  "data": {
   "shadows": "shapely.geometry.Polygon"
  },
  "type": "import"
 },
 "movingpandas.tests.test_trajectory_generalizer.TestTrajectoryGeneralizer": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "movingpandas.tests.test_trajectory_generalizer.TestTrajectoryGeneralizer.setup_method": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "datetime.datetime",
    "geopandas.GeoDataFrame",
    "movingpandas.tests.test_trajectory_generalizer.CRS_METRIC",
    "movingpandas.trajectory_collection.TrajectoryCollection",
    "pandas.DataFrame",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory_generalizer.TestTrajectoryGeneralizer.test_collection": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "datetime.timedelta",
    "len",
    "movingpandas.trajectory_generalizer.MinTimeDeltaGeneralizer"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory_generalizer.TestTrajectoryGeneralizer.test_douglas_peucker": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "Node",
    "make_traj",
    "movingpandas.trajectory_generalizer.DouglasPeuckerGeneralizer"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory_generalizer.TestTrajectoryGeneralizer.test_max_distance": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "Node",
    "make_traj",
    "movingpandas.trajectory_generalizer.MaxDistanceGeneralizer"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory_generalizer.TestTrajectoryGeneralizer.test_min_distance": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "Node",
    "make_traj",
    "movingpandas.tests.test_trajectory_generalizer.CRS_METRIC",
    "movingpandas.trajectory_generalizer.MinDistanceGeneralizer"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory_generalizer.TestTrajectoryGeneralizer.test_min_time_delta": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "Node",
    "datetime.timedelta",
    "make_traj",
    "movingpandas.trajectory_generalizer.MinTimeDeltaGeneralizer"
   ]
  },
  "type": "function"
 },
 "movingpandas.tests.test_trajectory_generalizer.TrajectoryCollection": {
  "data": {
   "shadows": "movingpandas.trajectory_collection.TrajectoryCollection"
  },
  "type": "import"
 },
 "movingpandas.tests.test_trajectory_generalizer.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "movingpandas.tests.test_trajectory_generalizer.from_epsg": {
  "data": {
   "shadows": "fiona.crs.from_epsg"
  },
  "type": "import"
 },
 "movingpandas.tests.test_trajectory_generalizer.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "movingpandas.tests.test_trajectory_generalizer.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "movingpandas.trajectory_aggregator": {
  "data": {},
  "type": "module"
 },
 "movingpandas.trajectory_aggregator.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "movingpandas.trajectory_aggregator.GeoDataFrame": {
  "data": {
   "shadows": "geopandas.GeoDataFrame"
  },
  "type": "import"
 },
 "movingpandas.trajectory_aggregator.LineString": {
  "data": {
   "shadows": "shapely.geometry.LineString"
  },
  "type": "import"
 },
 "movingpandas.trajectory_aggregator.Point": {
  "data": {
   "shadows": "shapely.geometry.Point"
  },
  "type": "import"
 },
 "movingpandas.trajectory_aggregator.TrajectoryCollectionAggregator": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "movingpandas.trajectory_aggregator.TrajectoryCollectionAggregator.__init__": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "movingpandas.trajectory_aggregator.TrajectoryCollectionAggregator._cluster_significant_points": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "movingpandas.trajectory_aggregator._Grid"
   ]
  },
  "type": "function"
 },
 "movingpandas.trajectory_aggregator.TrajectoryCollectionAggregator._compute_flows_between_clusters": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "movingpandas.trajectory_aggregator._SequenceGenerator"
   ]
  },
  "type": "function"
 },
 "movingpandas.trajectory_aggregator.TrajectoryCollectionAggregator._extract_significant_points": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "movingpandas.trajectory_aggregator._PtsExtractor"
   ]
  },
  "type": "function"
 },
 "movingpandas.trajectory_aggregator.TrajectoryCollectionAggregator.get_clusters_gdf": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "geopandas.GeoDataFrame",
    "len",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "movingpandas.trajectory_aggregator.TrajectoryCollectionAggregator.get_flows_gdf": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "geopandas.GeoDataFrame"
   ]
  },
  "type": "function"
 },
 "movingpandas.trajectory_aggregator.TrajectoryCollectionAggregator.get_significant_points_gdf": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "geopandas.GeoDataFrame",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "movingpandas.trajectory_aggregator._Grid": {
  "data": {
   "lineno": 212
  },
  "type": "class"
 },
 "movingpandas.trajectory_aggregator._Grid.__init__": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "int",
    "movingpandas.trajectory_aggregator.math",
    "range"
   ]
  },
  "type": "function"
 },
 "movingpandas.trajectory_aggregator._Grid.get_closest_centroid": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "max",
    "measure_distance_euclidean",
    "min",
    "range"
   ]
  },
  "type": "function"
 },
 "movingpandas.trajectory_aggregator._Grid.get_grid_position": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "int",
    "movingpandas.trajectory_aggregator.math"
   ]
  },
  "type": "function"
 },
 "movingpandas.trajectory_aggregator._Grid.get_group": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "movingpandas.trajectory_aggregator._Grid.insert_points": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "movingpandas.trajectory_aggregator._PointCluster",
    "print"
   ]
  },
  "type": "function"
 },
 "movingpandas.trajectory_aggregator._Grid.redistribute_points": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "movingpandas.trajectory_aggregator._PointCluster": {
  "data": {
   "lineno": 195
  },
  "type": "class"
 },
 "movingpandas.trajectory_aggregator._PointCluster.__init__": {
  "data": {
   "lineno": 196
  },
  "type": "function"
 },
 "movingpandas.trajectory_aggregator._PointCluster.add_point": {
  "data": {
   "lineno": 200
  },
  "type": "function"
 },
 "movingpandas.trajectory_aggregator._PointCluster.delete_points": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "movingpandas.trajectory_aggregator._PointCluster.recompute_centroid": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "len",
    "shapely.geometry.Point",
    "sum"
   ]
  },
  "type": "function"
 },
 "movingpandas.trajectory_aggregator._PtsExtractor": {
  "data": {
   "lineno": 115
  },
  "type": "class"
 },
 "movingpandas.trajectory_aggregator._PtsExtractor.__init__": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "movingpandas.trajectory_aggregator._PtsExtractor.compute_angle_between_vectors": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "angular_difference",
    "azimuth"
   ]
  },
  "type": "function"
 },
 "movingpandas.trajectory_aggregator._PtsExtractor.find_significant_points": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "movingpandas.trajectory_aggregator._PtsExtractor.is_representative_max_distance": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "measure_distance_euclidean",
    "measure_distance_spherical"
   ]
  },
  "type": "function"
 },
 "movingpandas.trajectory_aggregator._PtsExtractor.more_points_further_than_min_distance": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "measure_distance_euclidean",
    "measure_distance_spherical",
    "range"
   ]
  },
  "type": "function"
 },
 "movingpandas.trajectory_aggregator._SequenceGenerator": {
  "data": {
   "lineno": 283
  },
  "type": "class"
 },
 "movingpandas.trajectory_aggregator._SequenceGenerator.__init__": {
  "data": {
   "lineno": 284
  },
  "type": "function"
 },
 "movingpandas.trajectory_aggregator._SequenceGenerator.create_flow_lines": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "shapely.geometry.LineString"
   ]
  },
  "type": "function"
 },
 "movingpandas.trajectory_aggregator._SequenceGenerator.evaluate_trajectory": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "movingpandas.trajectory_aggregator._SequenceGenerator.get_nearest": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "shapely.ops.nearest_points"
   ]
  },
  "type": "function"
 },
 "movingpandas.trajectory_aggregator.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "movingpandas.trajectory_aggregator.nearest_points": {
  "data": {
   "shadows": "shapely.ops.nearest_points"
  },
  "type": "import"
 },
 "movingpandas.trajectory_collection": {
  "data": {
   "symbols_in_volume": [
    "movingpandas.trajectory_collection.os",
    "movingpandas.trajectory_collection.sys"
   ]
  },
  "type": "module"
 },
 "movingpandas.trajectory_collection.GeoDataFrame": {
  "data": {
   "shadows": "geopandas.GeoDataFrame"
  },
  "type": "import"
 },
 "movingpandas.trajectory_collection.TrajectoryCollection": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "movingpandas.trajectory_collection.TrajectoryCollection.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "list",
    "type"
   ]
  },
  "type": "function"
 },
 "movingpandas.trajectory_collection.TrajectoryCollection.__iter__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "movingpandas.trajectory_collection.TrajectoryCollection.__len__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "movingpandas.trajectory_collection.TrajectoryCollection.__str__": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "movingpandas.trajectory_collection.TrajectoryCollection._df_to_trajectories": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "Trajectory",
    "len"
   ]
  },
  "type": "function"
 },
 "movingpandas.trajectory_collection.TrajectoryCollection.add_speed": {
  "data": {
   "lineno": 288
  },
  "type": "function"
 },
 "movingpandas.trajectory_collection.TrajectoryCollection.clip": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "copy.copy"
   ]
  },
  "type": "function"
 },
 "movingpandas.trajectory_collection.TrajectoryCollection.filter": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "copy.copy"
   ]
  },
  "type": "function"
 },
 "movingpandas.trajectory_collection.TrajectoryCollection.get_end_locations": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "geopandas.GeoDataFrame",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "movingpandas.trajectory_collection.TrajectoryCollection.get_intersecting": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "copy.copy"
   ]
  },
  "type": "function"
 },
 "movingpandas.trajectory_collection.TrajectoryCollection.get_max": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "max"
   ]
  },
  "type": "function"
 },
 "movingpandas.trajectory_collection.TrajectoryCollection.get_min": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "min"
   ]
  },
  "type": "function"
 },
 "movingpandas.trajectory_collection.TrajectoryCollection.get_start_locations": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "geopandas.GeoDataFrame",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "movingpandas.trajectory_collection.TrajectoryCollection.get_trajectory": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "movingpandas.trajectory_collection.TrajectoryCollection.hvplot": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "_TrajectoryCollectionPlotter"
   ]
  },
  "type": "function"
 },
 "movingpandas.trajectory_collection.TrajectoryCollection.plot": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "_TrajectoryCollectionPlotter"
   ]
  },
  "type": "function"
 },
 "movingpandas.trajectory_collection.TrajectoryCollection.split_by_date": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "copy.copy"
   ]
  },
  "type": "function"
 },
 "movingpandas.trajectory_collection.TrajectoryCollection.split_by_observation_gap": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "copy.copy"
   ]
  },
  "type": "function"
 },
 "movingpandas.trajectory_collection.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "movingpandas.trajectory_collection.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "movingpandas.trajectory_collection.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "movingpandas.trajectory_collection.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "movingpandas.trajectory_generalizer": {
  "data": {},
  "type": "module"
 },
 "movingpandas.trajectory_generalizer.DouglasPeuckerGeneralizer": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "movingpandas.trajectory_generalizer.TrajectoryGeneralizer"
   ]
  },
  "type": "class"
 },
 "movingpandas.trajectory_generalizer.DouglasPeuckerGeneralizer._generalize_traj": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "Trajectory"
   ]
  },
  "type": "function"
 },
 "movingpandas.trajectory_generalizer.LineString": {
  "data": {
   "shadows": "shapely.geometry.LineString"
  },
  "type": "import"
 },
 "movingpandas.trajectory_generalizer.MaxDistanceGeneralizer": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "movingpandas.trajectory_generalizer.TrajectoryGeneralizer"
   ]
  },
  "type": "class"
 },
 "movingpandas.trajectory_generalizer.MaxDistanceGeneralizer._generalize_traj": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "Trajectory",
    "shapely.geometry.LineString"
   ]
  },
  "type": "function"
 },
 "movingpandas.trajectory_generalizer.MinDistanceGeneralizer": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "movingpandas.trajectory_generalizer.TrajectoryGeneralizer"
   ]
  },
  "type": "class"
 },
 "movingpandas.trajectory_generalizer.MinDistanceGeneralizer._generalize_traj": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "Trajectory",
    "len",
    "measure_distance_euclidean",
    "measure_distance_spherical"
   ]
  },
  "type": "function"
 },
 "movingpandas.trajectory_generalizer.MinTimeDeltaGeneralizer": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "movingpandas.trajectory_generalizer.TrajectoryGeneralizer"
   ]
  },
  "type": "class"
 },
 "movingpandas.trajectory_generalizer.MinTimeDeltaGeneralizer._generalize_traj": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "Trajectory",
    "len"
   ]
  },
  "type": "function"
 },
 "movingpandas.trajectory_generalizer.TrajectoryGeneralizer": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "movingpandas.trajectory_generalizer.TrajectoryGeneralizer.__init__": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "movingpandas.trajectory_generalizer.TrajectoryGeneralizer._generalize_traj": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "movingpandas.trajectory_generalizer.TrajectoryGeneralizer._generalize_traj_collection": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "copy.copy"
   ]
  },
  "type": "function"
 },
 "movingpandas.trajectory_generalizer.TrajectoryGeneralizer.generalize": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "TypeError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "movingpandas.trajectory_generalizer.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "movingpandas.trajectory_plotter": {
  "data": {},
  "type": "module"
 },
 "movingpandas.trajectory_plotter._TrajectoryCollectionPlotter": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "movingpandas.trajectory_plotter._TrajectoryPlotter"
   ]
  },
  "type": "class"
 },
 "movingpandas.trajectory_plotter._TrajectoryCollectionPlotter.__init__": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "movingpandas.trajectory_plotter._TrajectoryCollectionPlotter.hvplot": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "holoviews.opts.Overlay",
    "holoviews.opts.defaults"
   ]
  },
  "type": "function"
 },
 "movingpandas.trajectory_plotter._TrajectoryCollectionPlotter.plot": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "matplotlib.pyplot.figure"
   ]
  },
  "type": "function"
 },
 "movingpandas.trajectory_plotter._TrajectoryPlotter": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "movingpandas.trajectory_plotter._TrajectoryPlotter.__init__": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "movingpandas.trajectory_plotter._TrajectoryPlotter._hvplot_trajectory": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "KeyError",
    "holoviews.dim",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "movingpandas.trajectory_plotter._TrajectoryPlotter._make_line_df": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "movingpandas.trajectory_plotter._TrajectoryPlotter._plot_trajectory": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "movingpandas.trajectory_plotter._TrajectoryPlotter.hvplot": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "holoviews.opts.Overlay",
    "holoviews.opts.defaults"
   ]
  },
  "type": "function"
 },
 "movingpandas.trajectory_plotter._TrajectoryPlotter.plot": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "matplotlib.pyplot.figure"
   ]
  },
  "type": "function"
 },
 "movingpandas.trajectory_plotter.dim": {
  "data": {
   "shadows": "holoviews.dim"
  },
  "type": "import"
 },
 "movingpandas.trajectory_plotter.hvplot.pandas": {
  "data": {
   "shadows": "hvplot.pandas"
  },
  "type": "import"
 },
 "movingpandas.trajectory_plotter.opts": {
  "data": {
   "shadows": "holoviews.opts"
  },
  "type": "import"
 },
 "movingpandas.trajectory_plotter.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 }
}