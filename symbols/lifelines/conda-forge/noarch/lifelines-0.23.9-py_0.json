{
 "lifelines": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.datasets": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.datasets._load_dataset": {
  "lineno": 6,
  "symbols_in_volume": [
   "pandas.read_csv",
   "pkg_resources.resource_filename"
  ],
  "type": "function"
 },
 "lifelines.datasets.dfcv_dataset": {
  "lineno": null,
  "symbols_in_volume": [
   "lifelines.utils.add_covariate_to_timeline",
   "lifelines.utils.to_long_format",
   "pandas.DataFrame",
   "pandas.DataFrame.from_records"
  ],
  "type": "module"
 },
 "lifelines.datasets.load_canadian_senators": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.datasets.load_dd": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.datasets.load_dfcv": {
  "lineno": 443,
  "symbols_in_volume": [
   "lifelines.datasets.dfcv_dataset.dfcv.copy"
  ],
  "type": "function"
 },
 "lifelines.datasets.load_diabetes": {
  "lineno": 488,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.datasets.load_g3": {
  "lineno": 375,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.datasets.load_gbsg2": {
  "lineno": 417,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.datasets.load_holly_molly_polly": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.datasets.load_kidney_transplant": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.datasets.load_larynx": {
  "lineno": 184,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.datasets.load_lcd": {
  "lineno": 274,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.datasets.load_leukemia": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.datasets.load_lung": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.datasets.load_lupus": {
  "lineno": 514,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.datasets.load_lymph_node": {
  "lineno": 536,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.datasets.load_lymphoma": {
  "lineno": 467,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.datasets.load_multicenter_aids_cohort_study": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.datasets.load_nh4": {
  "lineno": 297,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.datasets.load_panel_test": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.datasets.load_psychiatric_patients": {
  "lineno": 239,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.datasets.load_recur": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.datasets.load_regression_dataset": {
  "lineno": 357,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.datasets.load_rossi": {
  "lineno": 332,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.datasets.load_stanford_heart_transplants": {
  "lineno": 393,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.datasets.load_static_test": {
  "lineno": 256,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.datasets.load_waltons": {
  "lineno": 315,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.fitters.BaseFitter": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.fitters.BaseFitter.__init__": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.BaseFitter.__repr__": {
  "lineno": 38,
  "symbols_in_volume": [
   "lifelines.utils.CensoringType.get_human_readable_censoring_type"
  ],
  "type": "function"
 },
 "lifelines.fitters.BaseFitter.fit": {
  "lineno": 56,
  "symbols_in_volume": [
   "lifelines.utils.CensoringType.right_censoring"
  ],
  "type": "function"
 },
 "lifelines.fitters.BaseFitter.fit_right_censoring": {
  "lineno": 60,
  "symbols_in_volume": [
   "lifelines.utils.CensoringType.right_censoring"
  ],
  "type": "function"
 },
 "lifelines.fitters.KnownModelParametricUnivariateFitter": {
  "lineno": 1113,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter": {
  "lineno": 2289,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter.__init__": {
  "lineno": 2293,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter._add_penalty": {
  "lineno": 2814,
  "symbols_in_volume": [
   "autograd.misc.flatten",
   "autograd.numpy.abs"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter._create_initial_point": {
  "lineno": 2772,
  "symbols_in_volume": [
   "lifelines",
   "lifelines.utils.CensoringType.is_interval_censoring",
   "lifelines.utils.CensoringType.is_left_censoring",
   "lifelines.utils.CensoringType.is_right_censoring",
   "numpy.array",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter._create_initial_point._transform_ith_param": {
  "lineno": 2778,
  "symbols_in_volume": [
   "numpy.log"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter._prep_inputs_for_prediction_and_return_scores": {
  "lineno": 2983,
  "symbols_in_volume": [
   "numpy.exp",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter.compute_residuals": {
  "lineno": 3195,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter.fit": {
  "lineno": 2302,
  "symbols_in_volume": [
   "lifelines.utils.CensoringType.right_censoring",
   "lifelines.utils.coalesce",
   "lifelines.utils.pass_for_numeric_dtypes_or_raise_array",
   "pandas.DataFrame",
   "pandas.concat"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter.fit_interval_censoring": {
  "lineno": 2457,
  "symbols_in_volume": [
   "lifelines.utils.CensoringType.interval_censoring",
   "lifelines.utils.coalesce",
   "lifelines.utils.pass_for_numeric_dtypes_or_raise_array",
   "numpy.clip",
   "pandas.DataFrame",
   "pandas.concat"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter.fit_left_censoring": {
  "lineno": 2625,
  "symbols_in_volume": [
   "lifelines.utils.CensoringType.left_censoring",
   "lifelines.utils.coalesce",
   "lifelines.utils.pass_for_numeric_dtypes_or_raise_array",
   "pandas.DataFrame",
   "pandas.concat"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter.plot": {
  "lineno": 2826,
  "symbols_in_volume": [
   "lifelines.utils.inv_normal_cdf",
   "matplotlib.pyplot.gca",
   "matplotlib.pyplot.xlabel",
   "matplotlib.pyplot.yticks",
   "pandas.MultiIndex"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter.plot_covariate_groups": {
  "lineno": 2899,
  "symbols_in_volume": [
   "lifelines.utils._to_list",
   "matplotlib.pyplot.gca",
   "numpy.array_equal",
   "numpy.atleast_1d",
   "numpy.eye",
   "pandas.concat"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter.predict_cumulative_hazard": {
  "lineno": 3129,
  "symbols_in_volume": [
   "lifelines.utils.coalesce",
   "numpy.asarray",
   "numpy.atleast_1d",
   "numpy.clip",
   "numpy.inf",
   "numpy.tile",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter.predict_hazard": {
  "lineno": 3080,
  "symbols_in_volume": [
   "lifelines.utils.coalesce",
   "numpy.atleast_1d",
   "numpy.tile",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter.predict_median": {
  "lineno": 3049,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter.predict_percentile": {
  "lineno": 3075,
  "symbols_in_volume": [
   "lifelines.utils.qth_survival_times",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter.predict_survival_function": {
  "lineno": 3018,
  "symbols_in_volume": [
   "numpy.exp",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter": {
  "lineno": 1123,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.fitters.ParametricRegressionFitter.__init__": {
  "lineno": 1129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter._add_penalty": {
  "lineno": 1636,
  "symbols_in_volume": [
   "autograd.misc.flatten"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter._check_values_post_fitting": {
  "lineno": 1133,
  "symbols_in_volume": [
   "lifelines.utils.check_complete_separation"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter._check_values_pre_fitting": {
  "lineno": 1136,
  "symbols_in_volume": [
   "lifelines.utils.StatisticalWarning",
   "lifelines.utils.check_entry_times",
   "lifelines.utils.check_for_numeric_dtypes_or_raise",
   "lifelines.utils.check_nans_or_infs",
   "lifelines.utils.check_positivity",
   "textwrap.dedent",
   "warnings.warn"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter._compute_confidence_intervals": {
  "lineno": 1778,
  "symbols_in_volume": [
   "lifelines.utils.inv_normal_cdf",
   "numpy.c_",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter._compute_p_values": {
  "lineno": 1750,
  "symbols_in_volume": [
   "scipy.stats.chi2.sf"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter._compute_sandwich_errors": {
  "lineno": 1763,
  "symbols_in_volume": [
   "autograd.grad",
   "lifelines.utils.safe_zip",
   "numpy.errstate",
   "numpy.outer",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter._compute_standard_errors": {
  "lineno": 1754,
  "symbols_in_volume": [
   "numpy.sqrt",
   "pandas.Series",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter._compute_variance_matrix": {
  "lineno": 1711,
  "symbols_in_volume": [
   "lifelines.utils.ApproximationWarning",
   "lifelines.utils.StatisticalWarning",
   "numpy.linalg.LinAlgError",
   "numpy.linalg.inv",
   "numpy.linalg.pinv",
   "numpy.outer",
   "textwrap.dedent",
   "warnings.warn"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter._compute_z_values": {
  "lineno": 1747,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter._create_Xs_dict": {
  "lineno": 1509,
  "symbols_in_volume": [
   "lifelines.utils.DataframeSliceDict"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter._create_initial_point": {
  "lineno": 1630,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter._create_neg_likelihood_with_penalty_function": {
  "lineno": 1646,
  "symbols_in_volume": [
   "autograd.misc.flatten"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter._cumulative_hazard": {
  "lineno": 1159,
  "symbols_in_volume": [
   "autograd.numpy.log"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter._filter_dataframe_to_covariates": {
  "lineno": 1512,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter._fit": {
  "lineno": 1518,
  "symbols_in_volume": [
   "datetime.datetime.utcnow",
   "lifelines.utils.check_nans_or_infs",
   "lifelines.utils.coalesce",
   "lifelines.utils.normalize",
   "lifelines.utils.pass_for_numeric_dtypes_or_raise_array",
   "numpy.asarray",
   "numpy.concatenate",
   "numpy.ones",
   "numpy.sort",
   "numpy.unique",
   "numpy.zeros",
   "pandas.MultiIndex.from_tuples",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter._fit_model": {
  "lineno": 1655,
  "symbols_in_volume": [
   "autograd.hessian",
   "autograd.misc.flatten",
   "autograd.value_and_grad",
   "functools.partial",
   "lifelines.utils.ConvergenceError",
   "lifelines.utils.coalesce",
   "numpy.ndarray",
   "scipy.optimize.minimize",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter._hazard": {
  "lineno": 1162,
  "symbols_in_volume": [
   "autograd.elementwise_grad"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter._ll_null": {
  "lineno": 1789,
  "symbols_in_volume": [
   "lifelines.utils.CensoringType.is_interval_censoring",
   "lifelines.utils.CensoringType.is_left_censoring",
   "lifelines.utils.CensoringType.is_right_censoring",
   "pandas.DataFrame",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter._log_1m_sf": {
  "lineno": 1171,
  "symbols_in_volume": [
   "autograd.numpy.log1p"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter._log_hazard": {
  "lineno": 1165,
  "symbols_in_volume": [
   "autograd.numpy.clip",
   "autograd.numpy.log",
   "numpy.inf"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter._log_likelihood_interval_censoring": {
  "lineno": 1210,
  "symbols_in_volume": [
   "autograd.numpy.log",
   "autograd.numpy.sum"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter._log_likelihood_left_censoring": {
  "lineno": 1194,
  "symbols_in_volume": [
   "autograd.numpy.sum"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter._log_likelihood_right_censoring": {
  "lineno": 1178,
  "symbols_in_volume": [
   "autograd.numpy.sum"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter._survival_function": {
  "lineno": 1175,
  "symbols_in_volume": [
   "autograd.numpy.clip",
   "autograd.numpy.exp"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter.fit": {
  "lineno": 1419,
  "symbols_in_volume": [
   "lifelines.utils.CensoringType.right_censoring",
   "lifelines.utils.pass_for_numeric_dtypes_or_raise_array"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter.fit_interval_censoring": {
  "lineno": 1323,
  "symbols_in_volume": [
   "lifelines.utils.CensoringType.interval_censoring",
   "lifelines.utils.pass_for_numeric_dtypes_or_raise_array"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter.fit_left_censoring": {
  "lineno": 1230,
  "symbols_in_volume": [
   "lifelines.utils.CensoringType.left_censoring",
   "lifelines.utils.pass_for_numeric_dtypes_or_raise_array"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter.log_likelihood_ratio_test": {
  "lineno": 1816,
  "symbols_in_volume": [
   "lifelines.statistics.StatisticalResult",
   "lifelines.statistics._chisq_test_p_value"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter.mean_survival_time_": {
  "lineno": 2133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter.median_survival_time_": {
  "lineno": 2126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter.plot": {
  "lineno": 2140,
  "symbols_in_volume": [
   "lifelines.utils.inv_normal_cdf",
   "matplotlib.pyplot.gca",
   "matplotlib.pyplot.xlabel",
   "matplotlib.pyplot.yticks",
   "pandas.MultiIndex"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter.plot_covariate_groups": {
  "lineno": 2212,
  "symbols_in_volume": [
   "lifelines.utils._to_list",
   "matplotlib.pyplot.gca",
   "numpy.array_equal",
   "numpy.atleast_1d",
   "numpy.eye",
   "pandas.concat"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter.predict_cumulative_hazard": {
  "lineno": 1976,
  "symbols_in_volume": [
   "lifelines.utils.coalesce",
   "numpy.asarray",
   "numpy.atleast_1d",
   "numpy.clip",
   "numpy.inf",
   "numpy.tile",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter.predict_expectation": {
  "lineno": 2071,
  "symbols_in_volume": [
   "lifelines.utils.ApproximationWarning",
   "lifelines.utils._get_index",
   "pandas.DataFrame",
   "scipy.integrate.trapz",
   "warnings.warn"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter.predict_hazard": {
  "lineno": 2033,
  "symbols_in_volume": [
   "lifelines.utils.coalesce",
   "numpy.atleast_1d",
   "numpy.tile",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter.predict_median": {
  "lineno": 1940,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter.predict_percentile": {
  "lineno": 1970,
  "symbols_in_volume": [
   "lifelines.utils._get_index",
   "lifelines.utils.qth_survival_times",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter.predict_survival_function": {
  "lineno": 1912,
  "symbols_in_volume": [
   "numpy.exp",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter.print_summary": {
  "lineno": 1864,
  "symbols_in_volume": [
   "lifelines.utils.CensoringType.is_interval_censoring",
   "lifelines.utils.printer.Printer",
   "lifelines.utils.string_justify"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter.score_": {
  "lineno": 2107,
  "symbols_in_volume": [
   "lifelines.utils.concordance_index"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter.summary": {
  "lineno": 1838,
  "symbols_in_volume": [
   "lifelines.utils.inv_normal_cdf",
   "numpy.errstate",
   "numpy.exp",
   "numpy.log2",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricUnivariateFitter": {
  "lineno": 260,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.fitters.ParametricUnivariateFitter.__init__": {
  "lineno": 270,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.ParametricUnivariateFitter._buffer_bounds": {
  "lineno": 331,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.ParametricUnivariateFitter._check_bounds_initial_point_names_shape": {
  "lineno": 928,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.ParametricUnivariateFitter._check_cumulative_hazard_is_monotone_and_positive": {
  "lineno": 280,
  "symbols_in_volume": [
   "lifelines.utils.StatisticalWarning",
   "numpy.all",
   "textwrap.dedent",
   "warnings.warn"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricUnivariateFitter._compute_confidence_bounds_of_cumulative_hazard": {
  "lineno": 410,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricUnivariateFitter._compute_confidence_bounds_of_parameters": {
  "lineno": 542,
  "symbols_in_volume": [
   "lifelines.utils.inv_normal_cdf",
   "numpy.c_",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricUnivariateFitter._compute_confidence_bounds_of_transform": {
  "lineno": 413,
  "symbols_in_volume": [
   "autograd.differential_operators.make_jvp_reversemode",
   "lifelines.utils.inv_normal_cdf",
   "numpy.einsum",
   "numpy.eye",
   "numpy.sqrt",
   "numpy.vstack",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricUnivariateFitter._compute_p_values": {
  "lineno": 530,
  "symbols_in_volume": [
   "scipy.stats.chi2.sf"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricUnivariateFitter._compute_standard_errors": {
  "lineno": 537,
  "symbols_in_volume": [
   "numpy.sqrt",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricUnivariateFitter._compute_z_values": {
  "lineno": 551,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.ParametricUnivariateFitter._conditional_time_to_event_": {
  "lineno": 1070,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricUnivariateFitter._create_initial_point": {
  "lineno": 456,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricUnivariateFitter._cumulative_density": {
  "lineno": 352,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.ParametricUnivariateFitter._cumulative_hazard": {
  "lineno": 342,
  "symbols_in_volume": [
   "autograd.numpy.log"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricUnivariateFitter._estimation_method": {
  "lineno": 534,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.ParametricUnivariateFitter._fit": {
  "lineno": 829,
  "symbols_in_volume": [
   "lifelines.utils.ApproximationWarning",
   "lifelines.utils.StatisticalWarning",
   "lifelines.utils.check_nans_or_infs",
   "lifelines.utils.coalesce",
   "numpy.asarray",
   "numpy.linalg.LinAlgError",
   "numpy.linalg.inv",
   "numpy.linalg.pinv",
   "numpy.linspace",
   "numpy.ones",
   "numpy.sort",
   "numpy.zeros",
   "textwrap.dedent",
   "warnings.warn"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricUnivariateFitter._fit_model": {
  "lineno": 461,
  "symbols_in_volume": [
   "autograd.hessian",
   "autograd.value_and_grad",
   "lifelines.utils.CensoringType.is_interval_censoring",
   "lifelines.utils.CensoringType.is_left_censoring",
   "lifelines.utils.CensoringType.is_right_censoring",
   "lifelines.utils.ConvergenceError",
   "scipy.optimize.minimize",
   "textwrap.dedent",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricUnivariateFitter._hazard": {
  "lineno": 345,
  "symbols_in_volume": [
   "autograd.elementwise_grad"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricUnivariateFitter._initial_values_from_bounds": {
  "lineno": 320,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.ParametricUnivariateFitter._log_1m_sf": {
  "lineno": 360,
  "symbols_in_volume": [
   "autograd.numpy.log1p"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricUnivariateFitter._log_hazard": {
  "lineno": 355,
  "symbols_in_volume": [
   "autograd.numpy.clip",
   "autograd.numpy.log",
   "numpy.inf"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricUnivariateFitter._negative_log_likelihood_interval_censoring": {
  "lineno": 388,
  "symbols_in_volume": [
   "autograd.numpy.log"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricUnivariateFitter._negative_log_likelihood_left_censoring": {
  "lineno": 364,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.ParametricUnivariateFitter._negative_log_likelihood_right_censoring": {
  "lineno": 377,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.ParametricUnivariateFitter._survival_function": {
  "lineno": 349,
  "symbols_in_volume": [
   "autograd.numpy.exp"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricUnivariateFitter.confidence_interval_": {
  "lineno": 1012,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricUnivariateFitter.confidence_interval_cumulative_density_": {
  "lineno": 1040,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricUnivariateFitter.confidence_interval_cumulative_hazard_": {
  "lineno": 1019,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricUnivariateFitter.confidence_interval_hazard_": {
  "lineno": 1026,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricUnivariateFitter.confidence_interval_survival_function_": {
  "lineno": 1033,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricUnivariateFitter.cumulative_density_at_times": {
  "lineno": 964,
  "symbols_in_volume": [
   "lifelines.utils._to_1d_array",
   "lifelines.utils.coalesce",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricUnivariateFitter.cumulative_hazard_at_times": {
  "lineno": 981,
  "symbols_in_volume": [
   "lifelines.utils._to_1d_array",
   "lifelines.utils.coalesce",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricUnivariateFitter.event_table": {
  "lineno": 934,
  "symbols_in_volume": [
   "lifelines.utils.CensoringType.is_right_censoring",
   "lifelines.utils.survival_table_from_events",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricUnivariateFitter.fit": {
  "lineno": 615,
  "symbols_in_volume": [
   "lifelines.utils.CensoringType.right_censoring",
   "lifelines.utils.check_nans_or_infs",
   "lifelines.utils.check_positivity",
   "lifelines.utils.pass_for_numeric_dtypes_or_raise_array",
   "numpy.asarray"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricUnivariateFitter.fit_interval_censoring": {
  "lineno": 746,
  "symbols_in_volume": [
   "lifelines.utils.CensoringType.interval_censoring",
   "lifelines.utils.check_nans_or_infs",
   "lifelines.utils.check_positivity",
   "lifelines.utils.pass_for_numeric_dtypes_or_raise_array",
   "numpy.atleast_1d",
   "numpy.clip"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricUnivariateFitter.fit_left_censoring": {
  "lineno": 680,
  "symbols_in_volume": [
   "lifelines.utils.CensoringType.left_censoring",
   "lifelines.utils.check_nans_or_infs",
   "lifelines.utils.check_positivity",
   "lifelines.utils.pass_for_numeric_dtypes_or_raise_array",
   "numpy.asarray"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricUnivariateFitter.hazard_at_times": {
  "lineno": 997,
  "symbols_in_volume": [
   "lifelines.utils._to_1d_array",
   "lifelines.utils.coalesce",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricUnivariateFitter.percentile": {
  "lineno": 1090,
  "symbols_in_volume": [
   "numpy.vectorize"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricUnivariateFitter.percentile._find_root": {
  "lineno": 1104,
  "symbols_in_volume": [
   "scipy.optimize.root_scalar"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricUnivariateFitter.plot": {
  "lineno": 1047,
  "symbols_in_volume": [
   "lifelines.plotting._plot_estimate",
   "lifelines.plotting.set_kwargs_drawstyle"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricUnivariateFitter.plot_cumulative_density": {
  "lineno": 1062,
  "symbols_in_volume": [
   "lifelines.plotting._plot_estimate",
   "lifelines.plotting.set_kwargs_drawstyle"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricUnivariateFitter.plot_cumulative_hazard": {
  "lineno": 1054,
  "symbols_in_volume": [
   "lifelines.plotting.set_kwargs_drawstyle"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricUnivariateFitter.plot_hazard": {
  "lineno": 1066,
  "symbols_in_volume": [
   "lifelines.plotting._plot_estimate",
   "lifelines.plotting.set_kwargs_drawstyle"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricUnivariateFitter.plot_survival_function": {
  "lineno": 1058,
  "symbols_in_volume": [
   "lifelines.plotting._plot_estimate",
   "lifelines.plotting.set_kwargs_drawstyle"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricUnivariateFitter.print_summary": {
  "lineno": 576,
  "symbols_in_volume": [
   "lifelines.utils.printer.Printer",
   "lifelines.utils.string_justify"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricUnivariateFitter.summary": {
  "lineno": 554,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.log2",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametricUnivariateFitter.survival_function_at_times": {
  "lineno": 947,
  "symbols_in_volume": [
   "lifelines.utils._to_1d_array",
   "lifelines.utils.coalesce",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.fitters.RegressionFitter": {
  "lineno": 1118,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.fitters.RegressionFitter.__init__": {
  "lineno": 1119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.UnivariateFitter": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.fitters.UnivariateFitter._update_docstrings": {
  "lineno": 72,
  "symbols_in_volume": [
   "lifelines.plotting._plot_estimate.__doc__.format"
  ],
  "type": "function"
 },
 "lifelines.fitters.UnivariateFitter.conditional_time_to_event_": {
  "lineno": 188,
  "symbols_in_volume": [
   "lifelines.utils.qth_survival_times",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.UnivariateFitter.cumulative_density_at_times": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.UnivariateFitter.cumulative_hazard_at_times": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.UnivariateFitter.divide": {
  "lineno": 141,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.unique",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.UnivariateFitter.hazard_at_times": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.UnivariateFitter.median_survival_time_": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.UnivariateFitter.percentile": {
  "lineno": 241,
  "symbols_in_volume": [
   "lifelines.utils.ApproximationWarning",
   "lifelines.utils.qth_survival_times",
   "warnings.warn"
  ],
  "type": "function"
 },
 "lifelines.fitters.UnivariateFitter.plot": {
  "lineno": 79,
  "symbols_in_volume": [
   "lifelines.plotting._plot_estimate"
  ],
  "type": "function"
 },
 "lifelines.fitters.UnivariateFitter.plot_cumulative_density": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.UnivariateFitter.plot_cumulative_hazard": {
  "lineno": 221,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.UnivariateFitter.plot_hazard": {
  "lineno": 227,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.UnivariateFitter.plot_survival_function": {
  "lineno": 224,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.UnivariateFitter.predict": {
  "lineno": 162,
  "symbols_in_volume": [
   "lifelines.utils._to_1d_array",
   "lifelines.utils.interpolate_at_times_and_return_pandas",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.fitters.UnivariateFitter.subtract": {
  "lineno": 121,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.unique",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.UnivariateFitter.survival_function_at_times": {
  "lineno": 212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter": {
  "lineno": 37,
  "symbols_in_volume": [
   "lifelines.fitters.BaseFitter"
  ],
  "type": "class"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter.__init__": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter._check_values": {
  "lineno": 342,
  "symbols_in_volume": [
   "lifelines.utils.check_for_numeric_dtypes_or_raise",
   "lifelines.utils.check_nans_or_infs"
  ],
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter._compute_confidence_intervals": {
  "lineno": 412,
  "symbols_in_volume": [
   "lifelines.utils.inv_normal_cdf",
   "numpy.sqrt",
   "pandas.concat"
  ],
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter._compute_slopes": {
  "lineno": 509,
  "symbols_in_volume": [
   "lifelines.utils.survival_table_from_events",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter._compute_slopes._univariate_linear_regression_without_intercept": {
  "lineno": 510,
  "symbols_in_volume": [
   "numpy.outer",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter._fit_model": {
  "lineno": 193,
  "symbols_in_volume": [
   "numpy.sort",
   "numpy.unique",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter._fit_model_to_data_batch": {
  "lineno": 210,
  "symbols_in_volume": [
   "lifelines.utils.ConvergenceWarning",
   "lifelines.utils.ridge_regression",
   "numpy.linalg.LinAlgError",
   "numpy.sort",
   "numpy.sqrt",
   "numpy.unique",
   "numpy.zeros",
   "numpy.zeros_like",
   "time.time",
   "warnings.warn"
  ],
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter._preprocess_dataframe": {
  "lineno": 267,
  "symbols_in_volume": [
   "lifelines.utils.StatisticalWarning",
   "lifelines.utils.check_nans_or_infs",
   "numpy.ones",
   "pandas.Series",
   "warnings.warn"
  ],
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter.fit": {
  "lineno": 97,
  "symbols_in_volume": [
   "datetime.datetime.utcnow",
   "lifelines.utils.CensoringType.right_censoring",
   "lifelines.utils.normalize"
  ],
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter.plot": {
  "lineno": 423,
  "symbols_in_volume": [
   "lifelines.utils._to_list",
   "matplotlib.pyplot.gca",
   "matplotlib.pyplot.hlines"
  ],
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter.plot.create_df_slicer": {
  "lineno": 445,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter.plot.shaded_plot": {
  "lineno": 441,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter.predict_cumulative_hazard": {
  "lineno": 309,
  "symbols_in_volume": [
   "lifelines.utils._get_index",
   "numpy.c_",
   "numpy.dot",
   "numpy.ones",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter.predict_expectation": {
  "lineno": 395,
  "symbols_in_volume": [
   "lifelines.utils._get_index",
   "pandas.DataFrame",
   "scipy.integrate.trapz"
  ],
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter.predict_median": {
  "lineno": 381,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter.predict_percentile": {
  "lineno": 363,
  "symbols_in_volume": [
   "lifelines.utils._get_index",
   "lifelines.utils.qth_survival_times"
  ],
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter.predict_survival_function": {
  "lineno": 347,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter.print_summary": {
  "lineno": 538,
  "symbols_in_volume": [
   "lifelines.utils.printer.Printer",
   "lifelines.utils.string_justify"
  ],
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter.score_": {
  "lineno": 492,
  "symbols_in_volume": [
   "lifelines.utils.concordance_index"
  ],
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter.smoothed_hazards_": {
  "lineno": 480,
  "symbols_in_volume": [
   "lifelines.utils.epanechnikov_kernel",
   "numpy.dot",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter.summary": {
  "lineno": 523,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.aalen_johansen_fitter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.fitters.aalen_johansen_fitter.AalenJohansenFitter": {
  "lineno": 12,
  "symbols_in_volume": [
   "lifelines.fitters.UnivariateFitter"
  ],
  "type": "class"
 },
 "lifelines.fitters.aalen_johansen_fitter.AalenJohansenFitter.__init__": {
  "lineno": 59,
  "symbols_in_volume": [
   "lifelines.fitters.UnivariateFitter.__init__"
  ],
  "type": "function"
 },
 "lifelines.fitters.aalen_johansen_fitter.AalenJohansenFitter._bounds": {
  "lineno": 197,
  "symbols_in_volume": [
   "lifelines.utils.inv_normal_cdf",
   "numpy.absolute",
   "numpy.exp",
   "numpy.log",
   "numpy.sqrt",
   "numpy.sum"
  ],
  "type": "function"
 },
 "lifelines.fitters.aalen_johansen_fitter.AalenJohansenFitter._check_for_duplicates": {
  "lineno": 256,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.aalen_johansen_fitter.AalenJohansenFitter._jitter": {
  "lineno": 176,
  "symbols_in_volume": [
   "numpy.random.seed",
   "numpy.random.uniform"
  ],
  "type": "function"
 },
 "lifelines.fitters.aalen_johansen_fitter.AalenJohansenFitter.fit": {
  "lineno": 65,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "lifelines.utils.CensoringType.right_censoring",
   "lifelines.utils._preprocess_inputs",
   "lifelines.utils.coalesce",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.concat",
   "textwrap.dedent",
   "warnings.warn"
  ],
  "type": "function"
 },
 "lifelines.fitters.breslow_fleming_harrington_fitter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.fitters.breslow_fleming_harrington_fitter.BreslowFlemingHarringtonFitter": {
  "lineno": 12,
  "symbols_in_volume": [
   "lifelines.fitters.UnivariateFitter"
  ],
  "type": "class"
 },
 "lifelines.fitters.breslow_fleming_harrington_fitter.BreslowFlemingHarringtonFitter.fit": {
  "lineno": 29,
  "symbols_in_volume": [
   "lifelines.NelsonAalenFitter",
   "lifelines.utils.CensoringType.right_censoring",
   "lifelines.utils.coalesce",
   "numpy.exp"
  ],
  "type": "function"
 },
 "lifelines.fitters.breslow_fleming_harrington_fitter.BreslowFlemingHarringtonFitter.survival_function_at_times": {
  "lineno": 102,
  "symbols_in_volume": [
   "lifelines.utils._to_1d_array",
   "lifelines.utils.coalesce",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "module"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter": {
  "lineno": 47,
  "symbols_in_volume": [
   "lifelines.fitters.BaseFitter"
  ],
  "type": "class"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter.__init__": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter.__repr__": {
  "lineno": 792,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter._check_values": {
  "lineno": 231,
  "symbols_in_volume": [
   "lifelines.utils.check_complete_separation_low_variance",
   "lifelines.utils.check_for_immediate_deaths",
   "lifelines.utils.check_for_instantaneous_events_at_death_time",
   "lifelines.utils.check_for_instantaneous_events_at_time_zero",
   "lifelines.utils.check_for_numeric_dtypes_or_raise",
   "lifelines.utils.check_low_var",
   "lifelines.utils.check_nans_or_infs"
  ],
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter._compute_baseline_survival": {
  "lineno": 787,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter._compute_confidence_intervals": {
  "lineno": 269,
  "symbols_in_volume": [
   "lifelines.utils.inv_normal_cdf",
   "numpy.c_",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter._compute_cumulative_baseline_hazard": {
  "lineno": 762,
  "symbols_in_volume": [
   "numpy.unique",
   "numpy.zeros_like",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter._compute_delta_beta": {
  "lineno": 808,
  "symbols_in_volume": [
   "numpy.linalg.inv"
  ],
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter._compute_p_values": {
  "lineno": 265,
  "symbols_in_volume": [
   "scipy.stats.chi2.sf"
  ],
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter._compute_residuals": {
  "lineno": 805,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter._compute_sandwich_estimator": {
  "lineno": 818,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter._compute_standard_errors": {
  "lineno": 828,
  "symbols_in_volume": [
   "numpy.sqrt",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter._compute_z_values": {
  "lineno": 262,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter._get_gradients": {
  "lineno": 474,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.dot",
   "numpy.einsum",
   "numpy.exp",
   "numpy.log",
   "numpy.outer",
   "numpy.sum",
   "numpy.unique",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter._newton_rhaphson": {
  "lineno": 305,
  "symbols_in_volume": [
   "lifelines.utils.ConvergenceError",
   "lifelines.utils.ConvergenceWarning",
   "lifelines.utils.StepSizer",
   "numpy.all",
   "numpy.any",
   "numpy.isnan",
   "numpy.linalg.norm",
   "numpy.zeros",
   "numpy.zeros_like",
   "scipy.linalg.LinAlgError",
   "scipy.linalg.solve",
   "time.time",
   "warnings.warn"
  ],
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter._partition_by_strata": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter._partition_by_strata_and_apply": {
  "lineno": 255,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter.fit": {
  "lineno": 93,
  "symbols_in_volume": [
   "datetime.datetime.utcnow",
   "lifelines.utils._to_list",
   "lifelines.utils.coalesce",
   "lifelines.utils.normalize",
   "lifelines.utils.pass_for_numeric_dtypes_or_raise_array",
   "numpy.exp",
   "numpy.linalg.inv",
   "numpy.outer",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter.log_likelihood_ratio_test": {
  "lineno": 664,
  "symbols_in_volume": [
   "lifelines.statistics.StatisticalResult",
   "lifelines.statistics._chisq_test_p_value"
  ],
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter.plot": {
  "lineno": 706,
  "symbols_in_volume": [
   "lifelines.utils.inv_normal_cdf",
   "matplotlib.pyplot.gca",
   "numpy.argsort"
  ],
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter.predict_log_partial_hazard": {
  "lineno": 563,
  "symbols_in_volume": [
   "lifelines.utils._get_index",
   "lifelines.utils.check_for_numeric_dtypes_or_raise",
   "lifelines.utils.normalize",
   "numpy.dot",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter.predict_partial_hazard": {
  "lineno": 597,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter.print_summary": {
  "lineno": 622,
  "symbols_in_volume": [
   "lifelines.utils.printer.Printer",
   "lifelines.utils.string_justify"
  ],
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter.summary": {
  "lineno": 280,
  "symbols_in_volume": [
   "lifelines.utils.inv_normal_cdf",
   "numpy.errstate",
   "numpy.exp",
   "numpy.log2",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.fitters.coxph_fitter.BatchVsSingle": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.fitters.coxph_fitter.BatchVsSingle.decide": {
  "lineno": 58,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter": {
  "lineno": 83,
  "symbols_in_volume": [
   "lifelines.fitters.RegressionFitter"
  ],
  "type": "class"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.__init__": {
  "lineno": 149,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._check_values_post_fitting": {
  "lineno": 385,
  "symbols_in_volume": [
   "lifelines.utils.check_complete_separation"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._check_values_pre_fitting": {
  "lineno": 391,
  "symbols_in_volume": [
   "lifelines.utils.StatisticalWarning",
   "lifelines.utils.check_for_numeric_dtypes_or_raise",
   "lifelines.utils.check_low_var",
   "lifelines.utils.check_nans_or_infs",
   "warnings.warn"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_baseline_cumulative_hazard": {
  "lineno": 1682,
  "symbols_in_volume": [
   "pandas.core.frame.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_baseline_hazard": {
  "lineno": 1652,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.core.frame.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_baseline_hazards": {
  "lineno": 1665,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_baseline_survival": {
  "lineno": 1688,
  "symbols_in_volume": [
   "numpy.exp",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_confidence_intervals": {
  "lineno": 1228,
  "symbols_in_volume": [
   "lifelines.utils.inv_normal_cdf",
   "numpy.c_",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_delta_beta": {
  "lineno": 1125,
  "symbols_in_volume": [
   "numpy.tile",
   "pandas.DataFrame",
   "pandas.core.frame.DataFrame",
   "pandas.core.indexes.base.Index",
   "pandas.core.series.Series",
   "typing.Optional"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_deviance": {
  "lineno": 969,
  "symbols_in_volume": [
   "numpy.log",
   "numpy.sign",
   "numpy.sqrt",
   "numpy.warnings.catch_warnings",
   "numpy.warnings.filterwarnings",
   "numpy.where",
   "pandas.DataFrame",
   "pandas.core.frame.DataFrame",
   "pandas.core.indexes.base.Index",
   "pandas.core.series.Series",
   "typing.Optional"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_martingale": {
  "lineno": 951,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.empty",
   "pandas.DataFrame",
   "pandas.core.frame.DataFrame",
   "pandas.core.indexes.base.Index",
   "pandas.core.series.Series",
   "typing.Optional"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_p_values": {
  "lineno": 1261,
  "symbols_in_volume": [
   "numpy.ndarray",
   "scipy.stats.chi2.sf"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_sandwich_estimator": {
  "lineno": 1248,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.core.frame.DataFrame",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_scaled_schoenfeld": {
  "lineno": 983,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.core.frame.DataFrame",
   "pandas.core.indexes.base.Index",
   "pandas.core.series.Series",
   "typing.Optional"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_schoenfeld": {
  "lineno": 1013,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.empty",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_schoenfeld_within_strata": {
  "lineno": 1038,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.append",
   "numpy.dot",
   "numpy.empty",
   "numpy.exp",
   "numpy.ndarray",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_score": {
  "lineno": 1142,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.empty",
   "pandas.DataFrame",
   "pandas.core.frame.DataFrame",
   "pandas.core.indexes.base.Index",
   "pandas.core.series.Series",
   "typing.Optional"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_score_within_strata": {
  "lineno": 1161,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.exp",
   "numpy.ndarray",
   "numpy.zeros",
   "pandas.core.series.Series",
   "typing.Union"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_standard_errors": {
  "lineno": 1239,
  "symbols_in_volume": [
   "numpy.sqrt",
   "pandas.Series",
   "pandas.core.frame.DataFrame",
   "pandas.core.series.Series",
   "typing.Optional"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_z_values": {
  "lineno": 1258,
  "symbols_in_volume": [
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._fit_model": {
  "lineno": 409,
  "symbols_in_volume": [
   "lifelines.utils.ConvergenceError",
   "lifelines.utils.ConvergenceWarning",
   "lifelines.utils.StepSizer",
   "numpy.all",
   "numpy.any",
   "numpy.isnan",
   "numpy.ndarray",
   "numpy.zeros",
   "numpy.zeros_like",
   "pandas.core.frame.DataFrame",
   "pandas.core.series.Series",
   "scipy.linalg.LinAlgError",
   "scipy.linalg.norm",
   "scipy.linalg.solve",
   "time.time",
   "typing.Optional",
   "warnings.warn"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._get_efron_values_batch": {
  "lineno": 825,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.dot",
   "numpy.einsum",
   "numpy.exp",
   "numpy.log",
   "numpy.multiply.outer",
   "numpy.ndarray",
   "numpy.unique",
   "numpy.zeros",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._get_efron_values_single": {
  "lineno": 599,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.dot",
   "numpy.einsum",
   "numpy.empty",
   "numpy.exp",
   "numpy.log",
   "numpy.multiply.outer",
   "numpy.ndarray",
   "numpy.zeros",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._partition_by_strata": {
  "lineno": 937,
  "symbols_in_volume": [
   "pandas.core.frame.DataFrame",
   "pandas.core.series.Series"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._partition_by_strata_and_apply": {
  "lineno": 945,
  "symbols_in_volume": [
   "pandas.core.frame.DataFrame",
   "pandas.core.series.Series",
   "typing.Callable"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._preprocess_dataframe": {
  "lineno": 342,
  "symbols_in_volume": [
   "lifelines.utils._to_list",
   "lifelines.utils.check_nans_or_infs",
   "numpy.ones",
   "pandas.Series",
   "pandas.core.frame.DataFrame",
   "pandas.core.indexes.base.Index",
   "pandas.core.series.Series",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._trivial_log_likelihood": {
  "lineno": 1338,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._trivial_log_likelihood_batch": {
  "lineno": 729,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.log",
   "numpy.unique"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._trivial_log_likelihood_single": {
  "lineno": 772,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.log"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.check_assumptions": {
  "lineno": 1903,
  "symbols_in_volume": [
   "lifelines.statistics.TimeTransformers",
   "lifelines.statistics.proportional_hazard_test",
   "lifelines.utils.format_p_value",
   "lifelines.utils.lowess.lowess",
   "matplotlib.pyplot.figure",
   "matplotlib.pyplot.subplots_adjust",
   "matplotlib.pyplot.tight_layout",
   "numpy.random.choice",
   "numpy.round",
   "pandas.core.frame.DataFrame",
   "textwrap.dedent",
   "textwrap.fill",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.compute_residuals": {
  "lineno": 1207,
  "symbols_in_volume": [
   "lifelines.utils.ConvergenceWarning",
   "pandas.DataFrame",
   "pandas.core.frame.DataFrame",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.fit": {
  "lineno": 166,
  "symbols_in_volume": [
   "datetime.datetime.utcnow",
   "lifelines.utils.CensoringType.right_censoring",
   "lifelines.utils.coalesce",
   "lifelines.utils.normalize",
   "numpy.exp",
   "numpy.ndarray",
   "numpy.outer",
   "pandas.DataFrame",
   "pandas.Series",
   "scipy.linalg.inv",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.log_likelihood_ratio_test": {
  "lineno": 1348,
  "symbols_in_volume": [
   "lifelines.statistics.StatisticalResult",
   "lifelines.statistics._chisq_test_p_value"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.plot": {
  "lineno": 1711,
  "symbols_in_volume": [
   "lifelines.utils.inv_normal_cdf",
   "matplotlib.pyplot.gca",
   "numpy.argsort",
   "numpy.exp",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.plot_covariate_groups": {
  "lineno": 1789,
  "symbols_in_volume": [
   "lifelines.plotting.set_kwargs_drawstyle",
   "lifelines.utils._to_list",
   "lifelines.utils._to_tuple",
   "matplotlib.pyplot.figure",
   "matplotlib.pyplot.legend",
   "numpy.array_equal",
   "numpy.asarray",
   "numpy.eye",
   "pandas.concat"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.predict_cumulative_hazard": {
  "lineno": 1433,
  "symbols_in_volume": [
   "lifelines.utils.StatError",
   "lifelines.utils._get_index",
   "lifelines.utils._to_1d_array",
   "lifelines.utils.coalesce",
   "lifelines.utils.interpolate_at_times",
   "numpy.atleast_1d",
   "numpy.clip",
   "numpy.inf",
   "numpy.ndarray",
   "numpy.tile",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.core.frame.DataFrame",
   "pandas.core.series.Series",
   "textwrap.dedent",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.predict_expectation": {
  "lineno": 1613,
  "symbols_in_volume": [
   "lifelines.utils._get_index",
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.core.frame.DataFrame",
   "scipy.integrate.trapz",
   "typing.Optional"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.predict_log_partial_hazard": {
  "lineno": 1390,
  "symbols_in_volume": [
   "lifelines.utils._get_index",
   "lifelines.utils.normalize",
   "numpy.dot",
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.core.frame.DataFrame",
   "typing.Union"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.predict_median": {
  "lineno": 1588,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.core.frame.DataFrame",
   "typing.Optional"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.predict_partial_hazard": {
  "lineno": 1370,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.core.frame.DataFrame",
   "typing.Union"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.predict_percentile": {
  "lineno": 1558,
  "symbols_in_volume": [
   "lifelines.utils._get_index",
   "lifelines.utils.qth_survival_times",
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.core.frame.DataFrame",
   "typing.Optional"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.predict_survival_function": {
  "lineno": 1528,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.core.frame.DataFrame",
   "pandas.core.series.Series",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.print_summary": {
  "lineno": 1290,
  "symbols_in_volume": [
   "lifelines.utils.printer.Printer",
   "lifelines.utils.string_justify",
   "typing.Optional"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.score_": {
  "lineno": 2113,
  "symbols_in_volume": [
   "lifelines.utils.concordance._concordance_ratio",
   "lifelines.utils.concordance._concordance_summary_statistics"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.summary": {
  "lineno": 1265,
  "symbols_in_volume": [
   "lifelines.utils.inv_normal_cdf",
   "numpy.errstate",
   "numpy.exp",
   "numpy.log2",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.exponential_fitter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.fitters.exponential_fitter.ExponentialFitter": {
  "lineno": 7,
  "symbols_in_volume": [
   "lifelines.fitters.KnownModelParametricUnivariateFitter"
  ],
  "type": "class"
 },
 "lifelines.fitters.exponential_fitter.ExponentialFitter._cumulative_hazard": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.exponential_fitter.ExponentialFitter._log_hazard": {
  "lineno": 79,
  "symbols_in_volume": [
   "autograd.numpy.log"
  ],
  "type": "function"
 },
 "lifelines.fitters.exponential_fitter.ExponentialFitter.percentile": {
  "lineno": 72,
  "symbols_in_volume": [
   "numpy.log"
  ],
  "type": "function"
 },
 "lifelines.fitters.generalized_gamma_fitter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.fitters.generalized_gamma_fitter.GeneralizedGammaFitter": {
  "lineno": 11,
  "symbols_in_volume": [
   "autograd.numpy.array",
   "lifelines.fitters.KnownModelParametricUnivariateFitter"
  ],
  "type": "class"
 },
 "lifelines.fitters.generalized_gamma_fitter.GeneralizedGammaFitter._create_initial_point": {
  "lineno": 106,
  "symbols_in_volume": [
   "autograd.numpy.array",
   "autograd.numpy.log",
   "lifelines.utils.CensoringType.is_interval_censoring",
   "lifelines.utils.CensoringType.is_left_censoring",
   "lifelines.utils.CensoringType.is_right_censoring"
  ],
  "type": "function"
 },
 "lifelines.fitters.generalized_gamma_fitter.GeneralizedGammaFitter._cumulative_hazard": {
  "lineno": 125,
  "symbols_in_volume": [
   "autograd.numpy.log",
   "autograd_gamma.gammainccln",
   "autograd_gamma.gammaincln",
   "lifelines.utils.safe_exp.safe_exp"
  ],
  "type": "function"
 },
 "lifelines.fitters.generalized_gamma_fitter.GeneralizedGammaFitter._log_1m_sf": {
  "lineno": 136,
  "symbols_in_volume": [
   "autograd.numpy.log",
   "autograd_gamma.gammainccln",
   "autograd_gamma.gammaincln",
   "lifelines.utils.safe_exp.safe_exp"
  ],
  "type": "function"
 },
 "lifelines.fitters.generalized_gamma_fitter.GeneralizedGammaFitter._log_hazard": {
  "lineno": 147,
  "symbols_in_volume": [
   "autograd.numpy.log",
   "autograd_gamma.gammainccln",
   "autograd_gamma.gammaincln",
   "autograd_gamma.gammaln",
   "lifelines.utils.safe_exp.safe_exp"
  ],
  "type": "function"
 },
 "lifelines.fitters.generalized_gamma_fitter.GeneralizedGammaFitter._survival_function": {
  "lineno": 116,
  "symbols_in_volume": [
   "autograd.numpy.log",
   "autograd_gamma.gammainc",
   "autograd_gamma.gammaincc",
   "lifelines.utils.safe_exp.safe_exp"
  ],
  "type": "function"
 },
 "lifelines.fitters.generalized_gamma_fitter.GeneralizedGammaFitter.percentile": {
  "lineno": 171,
  "symbols_in_volume": [
   "autograd.numpy.exp",
   "autograd.numpy.log",
   "scipy.special.gammainccinv",
   "scipy.special.gammaincinv"
  ],
  "type": "function"
 },
 "lifelines.fitters.generalized_gamma_regression_fitter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.fitters.generalized_gamma_regression_fitter.GeneralizedGammaRegressionFitter": {
  "lineno": 13,
  "symbols_in_volume": [
   "lifelines.fitters.ParametricRegressionFitter"
  ],
  "type": "class"
 },
 "lifelines.fitters.generalized_gamma_regression_fitter.GeneralizedGammaRegressionFitter._create_initial_point": {
  "lineno": 106,
  "symbols_in_volume": [
   "autograd.numpy.array",
   "lifelines.GeneralizedGammaFitter",
   "lifelines.utils.CensoringType.is_interval_censoring",
   "lifelines.utils.CensoringType.is_left_censoring",
   "lifelines.utils.CensoringType.is_right_censoring",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "lifelines.fitters.generalized_gamma_regression_fitter.GeneralizedGammaRegressionFitter._cumulative_hazard": {
  "lineno": 155,
  "symbols_in_volume": [
   "autograd.numpy.abs",
   "autograd.numpy.clip",
   "autograd.numpy.inf",
   "autograd.numpy.log",
   "autograd.numpy.where",
   "autograd_gamma.gammainccln",
   "autograd_gamma.gammaincln",
   "lifelines.utils.safe_exp.safe_exp"
  ],
  "type": "function"
 },
 "lifelines.fitters.generalized_gamma_regression_fitter.GeneralizedGammaRegressionFitter._log_hazard": {
  "lineno": 166,
  "symbols_in_volume": [
   "autograd.numpy.abs",
   "autograd.numpy.clip",
   "autograd.numpy.inf",
   "autograd.numpy.log",
   "autograd.numpy.where",
   "autograd_gamma.gammainccln",
   "autograd_gamma.gammaincln",
   "autograd_gamma.gammaln",
   "lifelines.utils.safe_exp.safe_exp"
  ],
  "type": "function"
 },
 "lifelines.fitters.generalized_gamma_regression_fitter.GeneralizedGammaRegressionFitter._survival_function": {
  "lineno": 144,
  "symbols_in_volume": [
   "autograd.numpy.abs",
   "autograd.numpy.clip",
   "autograd.numpy.log",
   "autograd.numpy.where",
   "autograd_gamma.gammainc",
   "autograd_gamma.gammaincc",
   "lifelines.utils.safe_exp.safe_exp"
  ],
  "type": "function"
 },
 "lifelines.fitters.kaplan_meier_fitter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.fitters.kaplan_meier_fitter.KaplanMeierFitter": {
  "lineno": 24,
  "symbols_in_volume": [
   "lifelines.fitters.UnivariateFitter"
  ],
  "type": "class"
 },
 "lifelines.fitters.kaplan_meier_fitter.KaplanMeierFitter._additive_f": {
  "lineno": 388,
  "symbols_in_volume": [
   "numpy.log",
   "numpy.seterr"
  ],
  "type": "function"
 },
 "lifelines.fitters.kaplan_meier_fitter.KaplanMeierFitter._additive_var": {
  "lineno": 392,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.seterr"
  ],
  "type": "function"
 },
 "lifelines.fitters.kaplan_meier_fitter.KaplanMeierFitter._bounds": {
  "lineno": 373,
  "symbols_in_volume": [
   "lifelines.utils.inv_normal_cdf",
   "numpy.exp",
   "numpy.log",
   "numpy.sqrt",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.kaplan_meier_fitter.KaplanMeierFitter._check_values": {
  "lineno": 281,
  "symbols_in_volume": [
   "lifelines.utils.check_nans_or_infs"
  ],
  "type": "function"
 },
 "lifelines.fitters.kaplan_meier_fitter.KaplanMeierFitter._fit": {
  "lineno": 165,
  "symbols_in_volume": [
   "functools.partial",
   "lifelines.utils.CensoringType.is_left_censoring",
   "lifelines.utils.StatError",
   "lifelines.utils.StatisticalWarning",
   "lifelines.utils._additive_estimate",
   "lifelines.utils._preprocess_inputs",
   "lifelines.utils.coalesce",
   "lifelines.utils.median_survival_times",
   "lifelines.utils.qth_survival_time",
   "numpy.asarray",
   "numpy.exp",
   "numpy.ones_like",
   "pandas.DataFrame",
   "warnings.warn"
  ],
  "type": "function"
 },
 "lifelines.fitters.kaplan_meier_fitter.KaplanMeierFitter.cumulative_density_at_times": {
  "lineno": 306,
  "symbols_in_volume": [
   "lifelines.utils._to_1d_array",
   "lifelines.utils.coalesce",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.fitters.kaplan_meier_fitter.KaplanMeierFitter.fit": {
  "lineno": 74,
  "symbols_in_volume": [
   "lifelines.utils.CensoringType.right_censoring"
  ],
  "type": "function"
 },
 "lifelines.fitters.kaplan_meier_fitter.KaplanMeierFitter.fit_left_censoring": {
  "lineno": 120,
  "symbols_in_volume": [
   "lifelines.utils.CensoringType.left_censoring"
  ],
  "type": "function"
 },
 "lifelines.fitters.kaplan_meier_fitter.KaplanMeierFitter.median_survival_time_": {
  "lineno": 277,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.kaplan_meier_fitter.KaplanMeierFitter.plot_cumulative_density": {
  "lineno": 326,
  "symbols_in_volume": [
   "lifelines.plotting._plot_estimate"
  ],
  "type": "function"
 },
 "lifelines.fitters.kaplan_meier_fitter.KaplanMeierFitter.plot_cumulative_hazard": {
  "lineno": 397,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.kaplan_meier_fitter.KaplanMeierFitter.plot_hazard": {
  "lineno": 402,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.kaplan_meier_fitter.KaplanMeierFitter.plot_loglogs": {
  "lineno": 284,
  "symbols_in_volume": [
   "lifelines.plotting.loglogs_plot"
  ],
  "type": "function"
 },
 "lifelines.fitters.kaplan_meier_fitter.KaplanMeierFitter.plot_survival_function": {
  "lineno": 322,
  "symbols_in_volume": [
   "lifelines.plotting._plot_estimate"
  ],
  "type": "function"
 },
 "lifelines.fitters.kaplan_meier_fitter.KaplanMeierFitter.survival_function_at_times": {
  "lineno": 290,
  "symbols_in_volume": [
   "lifelines.utils._to_1d_array",
   "lifelines.utils.coalesce",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.fitters.log_logistic_aft_fitter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.fitters.log_logistic_aft_fitter.LogLogisticAFTFitter": {
  "lineno": 12,
  "symbols_in_volume": [
   "lifelines.fitters.ParametericAFTRegressionFitter"
  ],
  "type": "class"
 },
 "lifelines.fitters.log_logistic_aft_fitter.LogLogisticAFTFitter.__init__": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.log_logistic_aft_fitter.LogLogisticAFTFitter._cumulative_hazard": {
  "lineno": 78,
  "symbols_in_volume": [
   "autograd.numpy.clip",
   "autograd.numpy.dot",
   "autograd.numpy.exp",
   "autograd.numpy.inf",
   "autograd.numpy.log",
   "autograd.numpy.logaddexp",
   "lifelines.utils.safe_exp.safe_exp"
  ],
  "type": "function"
 },
 "lifelines.fitters.log_logistic_aft_fitter.LogLogisticAFTFitter._log_1m_sf": {
  "lineno": 102,
  "symbols_in_volume": [
   "autograd.numpy.dot",
   "autograd.numpy.log",
   "autograd.numpy.logaddexp",
   "lifelines.utils.safe_exp.safe_exp"
  ],
  "type": "function"
 },
 "lifelines.fitters.log_logistic_aft_fitter.LogLogisticAFTFitter._log_hazard": {
  "lineno": 86,
  "symbols_in_volume": [
   "autograd.numpy.dot",
   "autograd.numpy.expm1",
   "autograd.numpy.log",
   "autograd.numpy.logaddexp",
   "lifelines.utils.safe_exp.safe_exp"
  ],
  "type": "function"
 },
 "lifelines.fitters.log_logistic_aft_fitter.LogLogisticAFTFitter.predict_expectation": {
  "lineno": 149,
  "symbols_in_volume": [
   "autograd.numpy.nan",
   "autograd.numpy.pi",
   "autograd.numpy.sin",
   "autograd.numpy.where",
   "lifelines.utils._get_index",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.log_logistic_aft_fitter.LogLogisticAFTFitter.predict_percentile": {
  "lineno": 112,
  "symbols_in_volume": [
   "autograd.numpy.asarray",
   "lifelines.utils._get_index",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.log_logistic_fitter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.fitters.log_logistic_fitter.LogLogisticFitter": {
  "lineno": 8,
  "symbols_in_volume": [
   "autograd.numpy.array",
   "lifelines.fitters.KnownModelParametricUnivariateFitter"
  ],
  "type": "class"
 },
 "lifelines.fitters.log_logistic_fitter.LogLogisticFitter._create_initial_point": {
  "lineno": 83,
  "symbols_in_volume": [
   "autograd.numpy.array",
   "autograd.numpy.median",
   "lifelines.utils.CensoringType.is_interval_censoring",
   "lifelines.utils.CensoringType.is_left_censoring",
   "lifelines.utils.CensoringType.is_right_censoring"
  ],
  "type": "function"
 },
 "lifelines.fitters.log_logistic_fitter.LogLogisticFitter._cumulative_hazard": {
  "lineno": 96,
  "symbols_in_volume": [
   "autograd.numpy.clip",
   "autograd.numpy.inf",
   "autograd.numpy.log",
   "autograd.numpy.logaddexp"
  ],
  "type": "function"
 },
 "lifelines.fitters.log_logistic_fitter.LogLogisticFitter._log_1m_sf": {
  "lineno": 100,
  "symbols_in_volume": [
   "autograd.numpy.log",
   "autograd.numpy.logaddexp"
  ],
  "type": "function"
 },
 "lifelines.fitters.log_logistic_fitter.LogLogisticFitter.median_survival_time_": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.log_logistic_fitter.LogLogisticFitter.percentile": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.log_normal_aft_fitter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.fitters.log_normal_aft_fitter.LogNormalAFTFitter": {
  "lineno": 19,
  "symbols_in_volume": [
   "lifelines.fitters.ParametericAFTRegressionFitter"
  ],
  "type": "class"
 },
 "lifelines.fitters.log_normal_aft_fitter.LogNormalAFTFitter.__init__": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.log_normal_aft_fitter.LogNormalAFTFitter._cumulative_hazard": {
  "lineno": 77,
  "symbols_in_volume": [
   "autograd.builtins.DictBox",
   "autograd.numpy.dot",
   "autograd.numpy.log",
   "autograd.numpy.numpy_boxes.ArrayBox",
   "autograd.scipy.stats.norm.logsf",
   "lifelines.utils.DataframeSliceDict",
   "lifelines.utils.safe_exp.safe_exp",
   "numpy.ndarray",
   "typing.Dict",
   "typing.Union"
  ],
  "type": "function"
 },
 "lifelines.fitters.log_normal_aft_fitter.LogNormalAFTFitter._log_1m_sf": {
  "lineno": 100,
  "symbols_in_volume": [
   "autograd.numpy.dot",
   "autograd.numpy.log",
   "autograd.scipy.stats.norm.logcdf",
   "lifelines.utils.safe_exp.safe_exp"
  ],
  "type": "function"
 },
 "lifelines.fitters.log_normal_aft_fitter.LogNormalAFTFitter._log_hazard": {
  "lineno": 88,
  "symbols_in_volume": [
   "autograd.builtins.DictBox",
   "autograd.numpy.dot",
   "autograd.numpy.log",
   "autograd.numpy.numpy_boxes.ArrayBox",
   "autograd.scipy.stats.norm.logpdf",
   "autograd.scipy.stats.norm.logsf",
   "lifelines.utils.DataframeSliceDict",
   "lifelines.utils.safe_exp.safe_exp",
   "numpy.ndarray",
   "typing.Union"
  ],
  "type": "function"
 },
 "lifelines.fitters.log_normal_aft_fitter.LogNormalAFTFitter.predict_expectation": {
  "lineno": 166,
  "symbols_in_volume": [
   "autograd.numpy.exp",
   "lifelines.utils._get_index",
   "pandas.DataFrame",
   "pandas.core.frame.DataFrame",
   "typing.Optional"
  ],
  "type": "function"
 },
 "lifelines.fitters.log_normal_aft_fitter.LogNormalAFTFitter.predict_percentile": {
  "lineno": 111,
  "symbols_in_volume": [
   "autograd.numpy.asarray",
   "autograd.numpy.exp",
   "autograd.numpy.log",
   "autograd.numpy.sqrt",
   "autograd.scipy.stats.norm.sf",
   "lifelines.utils._get_index",
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.core.frame.DataFrame",
   "scipy.special.erfinv",
   "typing.Optional"
  ],
  "type": "function"
 },
 "lifelines.fitters.log_normal_fitter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.fitters.log_normal_fitter.LogNormalFitter": {
  "lineno": 10,
  "symbols_in_volume": [
   "autograd.numpy.array",
   "lifelines.fitters.KnownModelParametricUnivariateFitter"
  ],
  "type": "class"
 },
 "lifelines.fitters.log_normal_fitter.LogNormalFitter._create_initial_point": {
  "lineno": 63,
  "symbols_in_volume": [
   "autograd.numpy.array",
   "autograd.numpy.log",
   "autograd.numpy.median",
   "lifelines.utils.CensoringType.is_interval_censoring",
   "lifelines.utils.CensoringType.is_left_censoring",
   "lifelines.utils.CensoringType.is_right_censoring"
  ],
  "type": "function"
 },
 "lifelines.fitters.log_normal_fitter.LogNormalFitter._cumulative_hazard": {
  "lineno": 79,
  "symbols_in_volume": [
   "autograd.numpy.log",
   "autograd.scipy.stats.norm.logsf"
  ],
  "type": "function"
 },
 "lifelines.fitters.log_normal_fitter.LogNormalFitter._log_1m_sf": {
  "lineno": 89,
  "symbols_in_volume": [
   "autograd.numpy.log",
   "autograd.scipy.stats.norm.logcdf"
  ],
  "type": "function"
 },
 "lifelines.fitters.log_normal_fitter.LogNormalFitter._log_hazard": {
  "lineno": 84,
  "symbols_in_volume": [
   "autograd.numpy.log",
   "autograd.scipy.stats.norm.logpdf",
   "autograd.scipy.stats.norm.logsf"
  ],
  "type": "function"
 },
 "lifelines.fitters.log_normal_fitter.LogNormalFitter.median_survival_time_": {
  "lineno": 72,
  "symbols_in_volume": [
   "autograd.numpy.exp"
  ],
  "type": "function"
 },
 "lifelines.fitters.log_normal_fitter.LogNormalFitter.percentile": {
  "lineno": 76,
  "symbols_in_volume": [
   "autograd.numpy.exp",
   "autograd.numpy.sqrt",
   "scipy.special.erfinv"
  ],
  "type": "function"
 },
 "lifelines.fitters.nelson_aalen_fitter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.fitters.nelson_aalen_fitter.NelsonAalenFitter": {
  "lineno": 22,
  "symbols_in_volume": [
   "lifelines.fitters.UnivariateFitter"
  ],
  "type": "class"
 },
 "lifelines.fitters.nelson_aalen_fitter.NelsonAalenFitter.__init__": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.nelson_aalen_fitter.NelsonAalenFitter._additive_f_discrete": {
  "lineno": 206,
  "symbols_in_volume": [
   "numpy.inf"
  ],
  "type": "function"
 },
 "lifelines.fitters.nelson_aalen_fitter.NelsonAalenFitter._additive_f_smooth": {
  "lineno": 199,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.cumsum",
   "numpy.max",
   "numpy.where",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.fitters.nelson_aalen_fitter.NelsonAalenFitter._bounds": {
  "lineno": 171,
  "symbols_in_volume": [
   "lifelines.utils.inv_normal_cdf",
   "numpy.exp",
   "numpy.sqrt",
   "numpy.where",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.nelson_aalen_fitter.NelsonAalenFitter._variance_f_discrete": {
  "lineno": 196,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.nelson_aalen_fitter.NelsonAalenFitter._variance_f_smooth": {
  "lineno": 189,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.cumsum",
   "numpy.max",
   "numpy.where",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.fitters.nelson_aalen_fitter.NelsonAalenFitter.conditional_time_to_event_": {
  "lineno": 264,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.nelson_aalen_fitter.NelsonAalenFitter.fit": {
  "lineno": 74,
  "symbols_in_volume": [
   "lifelines.utils.CensoringType.right_censoring",
   "lifelines.utils.StatisticalWarning",
   "lifelines.utils._additive_estimate",
   "lifelines.utils._preprocess_inputs",
   "lifelines.utils.check_nans_or_infs",
   "lifelines.utils.coalesce",
   "pandas.DataFrame",
   "warnings.warn"
  ],
  "type": "function"
 },
 "lifelines.fitters.nelson_aalen_fitter.NelsonAalenFitter.percentile": {
  "lineno": 268,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.nelson_aalen_fitter.NelsonAalenFitter.plot_hazard": {
  "lineno": 161,
  "symbols_in_volume": [
   "lifelines.plotting._plot_estimate"
  ],
  "type": "function"
 },
 "lifelines.fitters.nelson_aalen_fitter.NelsonAalenFitter.smoothed_hazard_": {
  "lineno": 209,
  "symbols_in_volume": [
   "lifelines.utils.epanechnikov_kernel",
   "numpy.dot",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.nelson_aalen_fitter.NelsonAalenFitter.smoothed_hazard_confidence_intervals_": {
  "lineno": 234,
  "symbols_in_volume": [
   "lifelines.utils.epanechnikov_kernel",
   "lifelines.utils.inv_normal_cdf",
   "numpy.dot",
   "numpy.exp",
   "numpy.sqrt",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.piecewise_exponential_fitter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.fitters.piecewise_exponential_fitter.PiecewiseExponentialFitter": {
  "lineno": 7,
  "symbols_in_volume": [
   "lifelines.fitters.KnownModelParametricUnivariateFitter"
  ],
  "type": "class"
 },
 "lifelines.fitters.piecewise_exponential_fitter.PiecewiseExponentialFitter.__init__": {
  "lineno": 66,
  "symbols_in_volume": [
   "autograd.numpy.append",
   "autograd.numpy.inf",
   "autograd.numpy.sort"
  ],
  "type": "function"
 },
 "lifelines.fitters.piecewise_exponential_fitter.PiecewiseExponentialFitter._cumulative_hazard": {
  "lineno": 84,
  "symbols_in_volume": [
   "autograd.numpy.atleast_1d",
   "autograd.numpy.diff",
   "autograd.numpy.dot",
   "autograd.numpy.hstack",
   "autograd.numpy.minimum",
   "autograd.numpy.tile"
  ],
  "type": "function"
 },
 "lifelines.fitters.piecewise_exponential_regression_fitter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.fitters.piecewise_exponential_regression_fitter.PiecewiseExponentialRegressionFitter": {
  "lineno": 9,
  "symbols_in_volume": [
   "lifelines.fitters.ParametricRegressionFitter"
  ],
  "type": "class"
 },
 "lifelines.fitters.piecewise_exponential_regression_fitter.PiecewiseExponentialRegressionFitter.__init__": {
  "lineno": 44,
  "symbols_in_volume": [
   "autograd.numpy.append",
   "autograd.numpy.inf",
   "autograd.numpy.sort"
  ],
  "type": "function"
 },
 "lifelines.fitters.piecewise_exponential_regression_fitter.PiecewiseExponentialRegressionFitter._add_penalty": {
  "lineno": 60,
  "symbols_in_volume": [
   "autograd.numpy.stack"
  ],
  "type": "function"
 },
 "lifelines.fitters.piecewise_exponential_regression_fitter.PiecewiseExponentialRegressionFitter._cumulative_hazard": {
  "lineno": 71,
  "symbols_in_volume": [
   "autograd.numpy.array",
   "autograd.numpy.diff",
   "autograd.numpy.dot",
   "autograd.numpy.hstack",
   "autograd.numpy.minimum",
   "autograd.numpy.tile",
   "lifelines.utils.safe_exp.safe_exp"
  ],
  "type": "function"
 },
 "lifelines.fitters.piecewise_exponential_regression_fitter.PiecewiseExponentialRegressionFitter._ll_null": {
  "lineno": 131,
  "symbols_in_volume": [
   "autograd.numpy.zeros",
   "lifelines.utils.CensoringType.is_interval_censoring",
   "lifelines.utils.CensoringType.is_left_censoring",
   "lifelines.utils.CensoringType.is_right_censoring",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.piecewise_exponential_regression_fitter.PiecewiseExponentialRegressionFitter._log_hazard": {
  "lineno": 79,
  "symbols_in_volume": [
   "autograd.numpy.clip",
   "autograd.numpy.inf",
   "autograd.numpy.log"
  ],
  "type": "function"
 },
 "lifelines.fitters.piecewise_exponential_regression_fitter.PiecewiseExponentialRegressionFitter._prep_inputs_for_prediction_and_return_parameters": {
  "lineno": 84,
  "symbols_in_volume": [
   "autograd.numpy.array",
   "autograd.numpy.dot",
   "autograd.numpy.exp",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.piecewise_exponential_regression_fitter.PiecewiseExponentialRegressionFitter.predict_cumulative_hazard": {
  "lineno": 92,
  "symbols_in_volume": [
   "autograd.numpy.atleast_1d",
   "autograd.numpy.diff",
   "autograd.numpy.dot",
   "autograd.numpy.hstack",
   "autograd.numpy.minimum",
   "autograd.numpy.tile",
   "autograd.numpy.unique",
   "lifelines.utils._get_index",
   "lifelines.utils.coalesce",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.fitters.spline_fitter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.fitters.spline_fitter.SplineFitter": {
  "lineno": 23,
  "symbols_in_volume": [
   "lifelines.fitters.KnownModelParametricUnivariateFitter"
  ],
  "type": "class"
 },
 "lifelines.fitters.spline_fitter.SplineFitter.__init__": {
  "lineno": 88,
  "symbols_in_volume": [
   "autograd.numpy.ndarray"
  ],
  "type": "function"
 },
 "lifelines.fitters.spline_fitter.SplineFitter._create_initial_point": {
  "lineno": 95,
  "symbols_in_volume": [
   "autograd.numpy.ones"
  ],
  "type": "function"
 },
 "lifelines.fitters.spline_fitter.SplineFitter._cumulative_hazard": {
  "lineno": 98,
  "symbols_in_volume": [
   "autograd.numpy.exp",
   "autograd.numpy.log"
  ],
  "type": "function"
 },
 "lifelines.fitters.spline_fitter.SplineFitterMixin": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.fitters.spline_fitter.SplineFitterMixin.basis": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.spline_fitter.SplineFitterMixin.relu": {
  "lineno": 12,
  "symbols_in_volume": [
   "autograd.numpy.maximum"
  ],
  "type": "function"
 },
 "lifelines.fitters.weibull_aft_fitter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.fitters.weibull_aft_fitter.WeibullAFTFitter": {
  "lineno": 18,
  "symbols_in_volume": [
   "lifelines.fitters.ParametericAFTRegressionFitter"
  ],
  "type": "class"
 },
 "lifelines.fitters.weibull_aft_fitter.WeibullAFTFitter.__init__": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.weibull_aft_fitter.WeibullAFTFitter._compute_scaled_schoenfeld": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.weibull_aft_fitter.WeibullAFTFitter._compute_schoenfeld": {
  "lineno": 214,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.weibull_aft_fitter.WeibullAFTFitter._cumulative_hazard": {
  "lineno": 94,
  "symbols_in_volume": [
   "autograd.builtins.DictBox",
   "autograd.numpy.clip",
   "autograd.numpy.inf",
   "autograd.numpy.log",
   "autograd.numpy.numpy_boxes.ArrayBox",
   "lifelines.utils.DataframeSliceDict",
   "lifelines.utils.safe_exp.safe_exp",
   "numpy.ndarray",
   "typing.Dict",
   "typing.Union"
  ],
  "type": "function"
 },
 "lifelines.fitters.weibull_aft_fitter.WeibullAFTFitter._log_hazard": {
  "lineno": 105,
  "symbols_in_volume": [
   "autograd.builtins.DictBox",
   "autograd.numpy.expm1",
   "autograd.numpy.log",
   "autograd.numpy.numpy_boxes.ArrayBox",
   "lifelines.utils.DataframeSliceDict",
   "numpy.ndarray",
   "typing.Dict",
   "typing.Union"
  ],
  "type": "function"
 },
 "lifelines.fitters.weibull_aft_fitter.WeibullAFTFitter.check_assumptions": {
  "lineno": 220,
  "symbols_in_volume": [
   "autograd.numpy.random.choice",
   "autograd.numpy.round",
   "lifelines.statistics.proportional_hazard_test",
   "matplotlib.pyplot.figure",
   "matplotlib.pyplot.subplots_adjust",
   "matplotlib.pyplot.tight_layout",
   "pandas.core.frame.DataFrame",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "lifelines.fitters.weibull_aft_fitter.WeibullAFTFitter.compute_residuals": {
  "lineno": 193,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.core.frame.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.weibull_aft_fitter.WeibullAFTFitter.predict_expectation": {
  "lineno": 164,
  "symbols_in_volume": [
   "lifelines.utils._get_index",
   "pandas.DataFrame",
   "pandas.core.frame.DataFrame",
   "scipy.special.gamma",
   "typing.Optional"
  ],
  "type": "function"
 },
 "lifelines.fitters.weibull_aft_fitter.WeibullAFTFitter.predict_percentile": {
  "lineno": 116,
  "symbols_in_volume": [
   "autograd.numpy.log",
   "autograd.numpy.power",
   "autograd.numpy.zeros",
   "lifelines.utils._get_index",
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.core.frame.DataFrame",
   "typing.Optional"
  ],
  "type": "function"
 },
 "lifelines.fitters.weibull_fitter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.fitters.weibull_fitter.WeibullFitter": {
  "lineno": 8,
  "symbols_in_volume": [
   "autograd.numpy.array",
   "lifelines.fitters.KnownModelParametricUnivariateFitter"
  ],
  "type": "class"
 },
 "lifelines.fitters.weibull_fitter.WeibullFitter._create_initial_point": {
  "lineno": 92,
  "symbols_in_volume": [
   "autograd.numpy.array",
   "lifelines.utils.coalesce"
  ],
  "type": "function"
 },
 "lifelines.fitters.weibull_fitter.WeibullFitter._cumulative_hazard": {
  "lineno": 95,
  "symbols_in_volume": [
   "autograd.numpy.clip",
   "autograd.numpy.inf",
   "autograd.numpy.log",
   "lifelines.utils.safe_exp.safe_exp"
  ],
  "type": "function"
 },
 "lifelines.fitters.weibull_fitter.WeibullFitter._log_hazard": {
  "lineno": 99,
  "symbols_in_volume": [
   "autograd.numpy.log"
  ],
  "type": "function"
 },
 "lifelines.fitters.weibull_fitter.WeibullFitter.percentile": {
  "lineno": 103,
  "symbols_in_volume": [
   "autograd.numpy.log"
  ],
  "type": "function"
 },
 "lifelines.generate_datasets": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.random"
  ],
  "type": "module"
 },
 "lifelines.generate_datasets.coeff_func": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.generate_datasets.coeff_func.__call__": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.generate_datasets.coeff_func.__call__.__repr__": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.generate_datasets.coeff_func.__init__": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.generate_datasets.constant_": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.generate_datasets.constant_coefficients": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.generate_datasets.construct_survival_curves": {
  "lineno": 314,
  "symbols_in_volume": [
   "numpy.exp",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.generate_datasets.cumulative_integral": {
  "lineno": 302,
  "symbols_in_volume": [
   "scipy.integrate.cumtrapz"
  ],
  "type": "function"
 },
 "lifelines.generate_datasets.exp_comp_": {
  "lineno": 97,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.maximum"
  ],
  "type": "function"
 },
 "lifelines.generate_datasets.exponential_survival_data": {
  "lineno": 53,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.log",
   "numpy.minimum",
   "numpy.ones",
   "scipy.optimize.newton",
   "scipy.stats.expon.rvs",
   "scipy.stats.uniform.rvs"
  ],
  "type": "function"
 },
 "lifelines.generate_datasets.exponential_survival_data.pF": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "lifelines.generate_datasets.generate_covariates": {
  "lineno": 149,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "lifelines.generate_datasets.generate_hazard_rates": {
  "lineno": 219,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.exp",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.generate_datasets.generate_observational_matrix": {
  "lineno": 292,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.generate_datasets.generate_random_lifetimes": {
  "lineno": 249,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.inf",
   "numpy.less_equal",
   "numpy.log",
   "numpy.minimum"
  ],
  "type": "function"
 },
 "lifelines.generate_datasets.inverseSq_": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.generate_datasets.log_": {
  "lineno": 103,
  "symbols_in_volume": [
   "numpy.log",
   "numpy.maximum"
  ],
  "type": "function"
 },
 "lifelines.generate_datasets.periodic_": {
  "lineno": 115,
  "symbols_in_volume": [
   "numpy.sin"
  ],
  "type": "function"
 },
 "lifelines.generate_datasets.piecewise_exponential_survival_data": {
  "lineno": 13,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.diff",
   "numpy.empty",
   "numpy.log"
  ],
  "type": "function"
 },
 "lifelines.generate_datasets.right_censor_lifetimes": {
  "lineno": 130,
  "symbols_in_volume": [
   "numpy.minimum"
  ],
  "type": "function"
 },
 "lifelines.generate_datasets.time_varying_coefficients": {
  "lineno": 182,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.zeros",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.metrics": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.metrics.uncensored_l1_log_loss": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.log",
   "numpy.ones_like"
  ],
  "type": "function"
 },
 "lifelines.metrics.uncensored_l2_log_loss": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.log",
   "numpy.ones_like",
   "numpy.power"
  ],
  "type": "function"
 },
 "lifelines.plotting": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.plotting.PlotEstimateConfig": {
  "lineno": 696,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.plotting.PlotEstimateConfig.__init__": {
  "lineno": 697,
  "symbols_in_volume": [
   "lifelines.utils.coalesce",
   "matplotlib.pyplot.gca"
  ],
  "type": "function"
 },
 "lifelines.plotting._plot_estimate": {
  "lineno": 573,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "lifelines.plotting.add_at_risk_counts": {
  "lineno": 320,
  "symbols_in_volume": [
   "matplotlib.pyplot.gca",
   "matplotlib.pyplot.gcf",
   "matplotlib.pyplot.tight_layout",
   "matplotlib.pyplot.twiny"
  ],
  "type": "function"
 },
 "lifelines.plotting.cdf_plot": {
  "lineno": 50,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "lifelines.utils.CensoringType.is_interval_censoring",
   "lifelines.utils.CensoringType.is_left_censoring",
   "lifelines.utils.CensoringType.is_right_censoring",
   "matplotlib.pyplot.gca"
  ],
  "type": "function"
 },
 "lifelines.plotting.create_dataframe_slicer": {
  "lineno": 518,
  "symbols_in_volume": [
   "lifelines.utils.coalesce"
  ],
  "type": "function"
 },
 "lifelines.plotting.create_scipy_stats_model_from_lifelines_model": {
  "lineno": 17,
  "symbols_in_volume": [
   "lifelines.fitters.KnownModelParametricUnivariateFitter",
   "numpy.exp",
   "scipy.stats"
  ],
  "type": "function"
 },
 "lifelines.plotting.get_distribution_name_of_lifelines_model": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.plotting.is_latex_enabled": {
  "lineno": 256,
  "symbols_in_volume": [
   "matplotlib.rcParams"
  ],
  "type": "function"
 },
 "lifelines.plotting.loglogs_plot": {
  "lineno": 531,
  "symbols_in_volume": [
   "matplotlib.pyplot.gca"
  ],
  "type": "function"
 },
 "lifelines.plotting.loglogs_plot.loglog": {
  "lineno": 536,
  "symbols_in_volume": [
   "numpy.log"
  ],
  "type": "function"
 },
 "lifelines.plotting.move_spines": {
  "lineno": 283,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.plotting.plot_lifetimes": {
  "lineno": 428,
  "symbols_in_volume": [
   "matplotlib.pyplot.gca",
   "numpy.argsort",
   "numpy.ones",
   "numpy.zeros",
   "warnings.warn"
  ],
  "type": "function"
 },
 "lifelines.plotting.qq_plot": {
  "lineno": 191,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "lifelines.utils.CensoringType.is_interval_censoring",
   "lifelines.utils.CensoringType.is_left_censoring",
   "lifelines.utils.CensoringType.is_right_censoring",
   "lifelines.utils.qth_survival_times",
   "matplotlib.pyplot.gca",
   "numpy.inf",
   "numpy.nan",
   "numpy.unique"
  ],
  "type": "function"
 },
 "lifelines.plotting.remove_spines": {
  "lineno": 266,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.plotting.remove_ticks": {
  "lineno": 300,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.plotting.rmst_plot": {
  "lineno": 85,
  "symbols_in_volume": [
   "lifelines.utils.restricted_mean_survival_time",
   "matplotlib.pyplot.gca",
   "numpy.append",
   "numpy.inf",
   "numpy.percentile",
   "numpy.unique"
  ],
  "type": "function"
 },
 "lifelines.plotting.set_kwargs_color": {
  "lineno": 506,
  "symbols_in_volume": [
   "lifelines.utils.coalesce"
  ],
  "type": "function"
 },
 "lifelines.plotting.set_kwargs_drawstyle": {
  "lineno": 510,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.plotting.set_kwargs_label": {
  "lineno": 514,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.statistics": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.statistics.StatisticalResult": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.statistics.StatisticalResult.__add__": {
  "lineno": 210,
  "symbols_in_volume": [
   "numpy.r_"
  ],
  "type": "function"
 },
 "lifelines.statistics.StatisticalResult.__init__": {
  "lineno": 58,
  "symbols_in_volume": [
   "lifelines.utils._to_1d_array",
   "lifelines.utils._to_list"
  ],
  "type": "function"
 },
 "lifelines.statistics.StatisticalResult.__repr__": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.statistics.StatisticalResult._stringify_meta_data": {
  "lineno": 201,
  "symbols_in_volume": [
   "lifelines.utils.string_justify"
  ],
  "type": "function"
 },
 "lifelines.statistics.StatisticalResult.ascii_print": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.statistics.StatisticalResult.html_print": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.statistics.StatisticalResult.html_print_inside_jupyter": {
  "lineno": 125,
  "symbols_in_volume": [
   "IPython.display.HTML",
   "IPython.display.display"
  ],
  "type": "function"
 },
 "lifelines.statistics.StatisticalResult.latex_print": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.statistics.StatisticalResult.print_specific_style": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.statistics.StatisticalResult.print_summary": {
  "lineno": 98,
  "symbols_in_volume": [
   "IPython.core.getipython.get_ipython"
  ],
  "type": "function"
 },
 "lifelines.statistics.StatisticalResult.summary": {
  "lineno": 159,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples"
  ],
  "type": "function"
 },
 "lifelines.statistics.StatisticalResult.to_ascii": {
  "lineno": 182,
  "symbols_in_volume": [
   "lifelines.utils.format_floats",
   "lifelines.utils.format_p_value",
   "numpy.errstate",
   "numpy.log2"
  ],
  "type": "function"
 },
 "lifelines.statistics.StatisticalResult.to_html": {
  "lineno": 136,
  "symbols_in_volume": [
   "lifelines.utils.format_floats",
   "lifelines.utils.format_p_value",
   "pandas.DataFrame.from_records"
  ],
  "type": "function"
 },
 "lifelines.statistics.StatisticalResult.to_latex": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.statistics.TimeTransformers": {
  "lineno": 740,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "numpy.cumsum",
   "numpy.log"
  ],
  "type": "class"
 },
 "lifelines.statistics.TimeTransformers.get": {
  "lineno": 750,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.statistics.TimeTransformers.iter": {
  "lineno": 753,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.statistics._chisq_test_p_value": {
  "lineno": 735,
  "symbols_in_volume": [
   "scipy.stats.chi2.sf"
  ],
  "type": "function"
 },
 "lifelines.statistics.difference_of_restricted_mean_survival_time_test": {
  "lineno": 617,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.statistics.logrank_test": {
  "lineno": 438,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ones",
   "numpy.r_",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "lifelines.statistics.multivariate_logrank_test": {
  "lineno": 621,
  "symbols_in_volume": [
   "lifelines.utils.group_survival_table_from_events",
   "numpy.arange",
   "numpy.asarray",
   "numpy.dot",
   "numpy.inf",
   "numpy.linalg.pinv",
   "numpy.max",
   "numpy.nan",
   "numpy.ones",
   "numpy.sqrt",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.statistics.pairwise_logrank_test": {
  "lineno": 542,
  "symbols_in_volume": [
   "itertools.combinations",
   "numpy.arange",
   "numpy.asarray",
   "numpy.max",
   "numpy.ones",
   "numpy.unique",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.statistics.power_under_cph": {
  "lineno": 291,
  "symbols_in_volume": [
   "numpy.sqrt",
   "scipy.stats.norm.cdf"
  ],
  "type": "function"
 },
 "lifelines.statistics.power_under_cph.z": {
  "lineno": 334,
  "symbols_in_volume": [
   "scipy.stats.norm.ppf"
  ],
  "type": "function"
 },
 "lifelines.statistics.proportional_hazard_test": {
  "lineno": 759,
  "symbols_in_volume": [
   "lifelines.utils._to_1d_array"
  ],
  "type": "function"
 },
 "lifelines.statistics.proportional_hazard_test.compute_statistic": {
  "lineno": 795,
  "symbols_in_volume": [
   "numpy.diag"
  ],
  "type": "function"
 },
 "lifelines.statistics.sample_size_necessary_under_cph": {
  "lineno": 219,
  "symbols_in_volume": [
   "numpy.ceil"
  ],
  "type": "function"
 },
 "lifelines.statistics.sample_size_necessary_under_cph.z": {
  "lineno": 275,
  "symbols_in_volume": [
   "scipy.stats.norm.ppf"
  ],
  "type": "function"
 },
 "lifelines.statistics.survival_difference_at_fixed_point_in_time_test": {
  "lineno": 344,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "lifelines.utils.interpolate_at_times_and_return_pandas",
   "numpy.log"
  ],
  "type": "function"
 },
 "lifelines.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.tests.test_estimation": {
  "lineno": null,
  "symbols_in_volume": [
   "warnings.simplefilter"
  ],
  "type": "module"
 },
 "lifelines.tests.test_estimation.CureModelA": {
  "lineno": 1522,
  "symbols_in_volume": [
   "lifelines.fitters.ParametricRegressionFitter"
  ],
  "type": "class"
 },
 "lifelines.tests.test_estimation.CureModelA._cumulative_hazard": {
  "lineno": 1526,
  "symbols_in_volume": [
   "autograd.numpy.dot",
   "autograd.numpy.exp",
   "autograd.numpy.log",
   "autograd.scipy.special.expit"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.CureModelB": {
  "lineno": 1536,
  "symbols_in_volume": [
   "lifelines.fitters.ParametricRegressionFitter"
  ],
  "type": "class"
 },
 "lifelines.tests.test_estimation.CureModelB._cumulative_hazard": {
  "lineno": 1540,
  "symbols_in_volume": [
   "autograd.numpy.dot",
   "autograd.numpy.exp",
   "autograd.numpy.log",
   "autograd.scipy.special.expit"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.CureModelC": {
  "lineno": 1550,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.tests.test_estimation.CustomRegressionModelTesting": {
  "lineno": 124,
  "symbols_in_volume": [
   "lifelines.fitters.ParametricRegressionFitter"
  ],
  "type": "class"
 },
 "lifelines.tests.test_estimation.CustomRegressionModelTesting.__init__": {
  "lineno": 128,
  "symbols_in_volume": [
   "lifelines.datasets.load_rossi"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.CustomRegressionModelTesting._cumulative_hazard": {
  "lineno": 133,
  "symbols_in_volume": [
   "autograd.numpy.dot",
   "autograd.numpy.exp",
   "autograd.numpy.log",
   "autograd.scipy.special.expit"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.PiecewiseExponentialFitterTesting": {
  "lineno": 114,
  "symbols_in_volume": [
   "lifelines.PiecewiseExponentialFitter"
  ],
  "type": "class"
 },
 "lifelines.tests.test_estimation.PiecewiseExponentialFitterTesting.__init__": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.tests.test_estimation.SplineFitterTesting": {
  "lineno": 119,
  "symbols_in_volume": [
   "lifelines.SplineFitter"
  ],
  "type": "class"
 },
 "lifelines.tests.test_estimation.SplineFitterTesting.__init__": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAFTFitters": {
  "lineno": 1894,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestAFTFitters.models": {
  "lineno": 1895,
  "symbols_in_volume": [
   "lifelines.LogLogisticAFTFitter",
   "lifelines.LogNormalAFTFitter",
   "lifelines.WeibullAFTFitter",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAFTFitters.test_accept_initial_params": {
  "lineno": 2014,
  "symbols_in_volume": [
   "numpy.ones"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAFTFitters.test_aft_mean_behaviour": {
  "lineno": 2086,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAFTFitters.test_aft_median_behaviour": {
  "lineno": 2073,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAFTFitters.test_aft_models_can_do_left_censoring": {
  "lineno": 2099,
  "symbols_in_volume": [
   "numpy.maximum",
   "numpy.percentile",
   "numpy.random.randint",
   "numpy.random.weibull",
   "numpy.where",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAFTFitters.test_fit_intercept_can_be_false_and_not_provided": {
  "lineno": 1965,
  "symbols_in_volume": [
   "lifelines.WeibullAFTFitter"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAFTFitters.test_fit_intercept_can_be_false_but_provided": {
  "lineno": 1982,
  "symbols_in_volume": [
   "lifelines.LogLogisticAFTFitter",
   "lifelines.LogNormalAFTFitter",
   "lifelines.WeibullAFTFitter"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAFTFitters.test_heterogenous_initial_point": {
  "lineno": 1932,
  "symbols_in_volume": [
   "lifelines.WeibullAFTFitter",
   "numpy.zeros",
   "pytest.raises"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAFTFitters.test_log_likelihood_is_maximized_for_data_generating_model": {
  "lineno": 2018,
  "symbols_in_volume": [
   "autograd.scipy.stats.norm.rvs",
   "lifelines.LogLogisticAFTFitter",
   "lifelines.LogNormalAFTFitter",
   "lifelines.WeibullAFTFitter",
   "numpy.exp",
   "numpy.log",
   "numpy.random.binomial",
   "pandas.DataFrame",
   "scipy.stats.logistic.rvs",
   "scipy.stats.weibull_min.rvs"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAFTFitters.test_model_ancillary_parameter_works_as_expected": {
  "lineno": 2122,
  "symbols_in_volume": [
   "lifelines.WeibullAFTFitter"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAFTFitters.test_percentile_gives_proper_result_compared_to_survival_function": {
  "lineno": 1942,
  "symbols_in_volume": [
   "lifelines.utils.qth_survival_time",
   "numpy.linspace"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAFTFitters.test_predict_median_accepts_series": {
  "lineno": 1916,
  "symbols_in_volume": [
   "lifelines.WeibullAFTFitter",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAFTFitters.test_predict_median_takes_dataframe_with_bools": {
  "lineno": 1899,
  "symbols_in_volume": [
   "lifelines.WeibullAFTFitter",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAFTFitters.test_warning_is_present_if_entry_greater_than_duration": {
  "lineno": 1991,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAFTFitters.test_weights_col_and_start_col_is_not_included_in_the_output": {
  "lineno": 1997,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenAdditiveFitter": {
  "lineno": 4069,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestAalenAdditiveFitter.aaf": {
  "lineno": 4070,
  "symbols_in_volume": [
   "lifelines.AalenAdditiveFitter",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenAdditiveFitter.test_aalen_additive_fitter_versus_R": {
  "lineno": 4182,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenAdditiveFitter.test_aalen_additive_fitter_versus_R_with_weights": {
  "lineno": 4192,
  "symbols_in_volume": [
   "lifelines.utils.StatisticalWarning",
   "numpy.testing.assert_allclose",
   "pytest.warns"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenAdditiveFitter.test_aalen_additive_median_predictions_split_data": {
  "lineno": 4131,
  "symbols_in_volume": [
   "lifelines.AalenAdditiveFitter",
   "lifelines.generate_datasets.generate_hazard_rates",
   "lifelines.generate_datasets.generate_random_lifetimes",
   "numpy.inf",
   "numpy.linspace"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenAdditiveFitter.test_crossval_for_aalen_add": {
  "lineno": 4162,
  "symbols_in_volume": [
   "lifelines.AalenAdditiveFitter",
   "lifelines.utils.k_fold_cross_validation",
   "numpy.mean"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenAdditiveFitter.test_cumulative_hazards_versus_R": {
  "lineno": 4207,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenAdditiveFitter.test_dataframe_input_with_nonstandard_index": {
  "lineno": 4153,
  "symbols_in_volume": [
   "lifelines.AalenAdditiveFitter",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenAdditiveFitter.test_input_column_order_is_equal_to_output_hazards_order": {
  "lineno": 4096,
  "symbols_in_volume": [
   "lifelines.AalenAdditiveFitter"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenAdditiveFitter.test_large_dimensions_for_recursion_error": {
  "lineno": 4122,
  "symbols_in_volume": [
   "lifelines.AalenAdditiveFitter",
   "numpy.random.exponential",
   "numpy.random.randn",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenAdditiveFitter.test_penalizer_reduces_norm_of_hazards": {
  "lineno": 4085,
  "symbols_in_volume": [
   "lifelines.AalenAdditiveFitter",
   "numpy.linalg.norm"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenAdditiveFitter.test_predict_cumulative_hazard_inputs": {
  "lineno": 4174,
  "symbols_in_volume": [
   "lifelines.AalenAdditiveFitter",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenAdditiveFitter.test_slope_tests_against_R": {
  "lineno": 4074,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenAdditiveFitter.test_swapping_order_of_columns_in_a_df_is_okay": {
  "lineno": 4107,
  "symbols_in_volume": [
   "lifelines.AalenAdditiveFitter",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenJohansenFitter": {
  "lineno": 4689,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestAalenJohansenFitter.duration": {
  "lineno": 4690,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenJohansenFitter.event_observed": {
  "lineno": 4694,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenJohansenFitter.fitter": {
  "lineno": 4698,
  "symbols_in_volume": [
   "lifelines.AalenJohansenFitter",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenJohansenFitter.kmfitter": {
  "lineno": 4702,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenJohansenFitter.test_aj_less_than_km": {
  "lineno": 4806,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.array",
   "numpy.where"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenJohansenFitter.test_ci_calculation_against_sas": {
  "lineno": 4829,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenJohansenFitter.test_event_table_is_correct": {
  "lineno": 4731,
  "symbols_in_volume": [
   "pandas.DataFrame.from_records",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenJohansenFitter.test_jitter": {
  "lineno": 4706,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.not_equal",
   "numpy.testing.assert_equal",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenJohansenFitter.test_no_competing_risk": {
  "lineno": 4816,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenJohansenFitter.test_tied_input_data": {
  "lineno": 4712,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.not_equal",
   "numpy.testing.assert_equal",
   "pytest.warns"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenJohansenFitter.test_updated_censor_ties": {
  "lineno": 4725,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenJohansenFitter.test_updated_input_ties": {
  "lineno": 4719,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenJohansenFitter.test_variance_calculation_against_sas": {
  "lineno": 4823,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestBaseFitter": {
  "lineno": 197,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestBaseFitter.test_repr_without_fitter": {
  "lineno": 198,
  "symbols_in_volume": [
   "lifelines.fitters.BaseFitter"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestBreslowFlemingHarringtonFitter": {
  "lineno": 1453,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestBreslowFlemingHarringtonFitter.test_BHF_fit_when_KMF_throws_an_error": {
  "lineno": 1454,
  "symbols_in_volume": [
   "lifelines.BreslowFlemingHarringtonFitter",
   "lifelines.KaplanMeierFitter",
   "lifelines.utils.StatError",
   "numpy.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter": {
  "lineno": 2482,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.cph": {
  "lineno": 2483,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_adding_non_integer_weights_is_fine_if_robust_is_on": {
  "lineno": 3614,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "numpy.random.exponential",
   "pytest.warns"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_all_okay_with_non_trivial_index_in_dataframe": {
  "lineno": 3986,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "numpy.random.randint",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_baseline_cumulative_hazard_is_the_same_indp_of_location": {
  "lineno": 3860,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_baseline_hazard_works_with_strata_against_R_output": {
  "lineno": 3790,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_baseline_hazard_works_with_weights_against_R_output": {
  "lineno": 3811,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_baseline_survival_is_the_same_indp_of_location": {
  "lineno": 3847,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_baseline_survival_is_the_same_indp_of_scale": {
  "lineno": 3891,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_batch_efron_computed_by_hand_examples": {
  "lineno": 2918,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array",
   "numpy.ones_like"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_check_assumptions": {
  "lineno": 2580,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_check_assumptions_fails_for_nonunique_index": {
  "lineno": 4060,
  "symbols_in_volume": [
   "numpy.ones",
   "pytest.raises"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_check_assumptions_for_subset_of_columns": {
  "lineno": 2585,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_cluster_option": {
  "lineno": 3277,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_cluster_option_with_strata": {
  "lineno": 3306,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_coef_output_against_R_super_accurate": {
  "lineno": 3102,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "numpy.array",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_coef_output_against_R_using_non_trivial_but_integer_weights": {
  "lineno": 3137,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "numpy.array",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_coef_output_against_R_with_strata_super_accurate": {
  "lineno": 3121,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "numpy.array",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_coef_output_against_Survival_Analysis_by_John_Klein_and_Melvin_Moeschberger": {
  "lineno": 3696,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.datasets.load_kidney_transplant",
   "numpy.array",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_compute_likelihood_ratio_test_is_different_if_weights_are_provided": {
  "lineno": 3467,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.utils.StatisticalWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_conditional_after_in_prediction": {
  "lineno": 2487,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_conditional_after_in_prediction_multiple_subjects": {
  "lineno": 2521,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_conditional_after_in_prediction_multiple_subjects_with_custom_times": {
  "lineno": 2546,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_conditional_after_with_strata_in_prediction": {
  "lineno": 2500,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_conditional_after_with_strata_in_prediction2": {
  "lineno": 2513,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_cox_ph_prediction_monotonicity": {
  "lineno": 3014,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.utils.concordance_index"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_cox_ph_prediction_with_series": {
  "lineno": 3001,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_cox_ph_prediction_with_series_of_longer_length": {
  "lineno": 3007,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_coxph_throws_a_explainable_error_when_predict_sees_a_strata_it_hasnt_seen": {
  "lineno": 3749,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.utils.StatError",
   "pandas.DataFrame.from_records",
   "pytest.raises"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_cph_doesnt_modify_original_dataframe": {
  "lineno": 2591,
  "symbols_in_volume": [
   "numpy.dtype",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_cph_will_handle_times_with_only_censored_individuals": {
  "lineno": 2606,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_crossval_for_cox_ph": {
  "lineno": 3057,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.utils.k_fold_cross_validation",
   "numpy.mean"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_crossval_for_cox_ph_normalized": {
  "lineno": 3071,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.utils.k_fold_cross_validation",
   "numpy.mean",
   "numpy.std"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_crossval_for_cox_ph_with_normalizing_times": {
  "lineno": 3034,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.utils.k_fold_cross_validation",
   "numpy.mean",
   "numpy.std"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_data_normalization": {
  "lineno": 2986,
  "symbols_in_volume": [
   "lifelines.utils.concordance_index"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_delta_betas_are_the_same_as_in_R": {
  "lineno": 3183,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.utils.normalize",
   "numpy.array",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_delta_betas_with_strata_are_the_same_as_in_R": {
  "lineno": 3213,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.utils.normalize",
   "numpy.array",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_delta_betas_with_weights_are_the_same_as_in_R": {
  "lineno": 3246,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.utils.normalize",
   "numpy.array",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_doubling_the_weights_halves_the_variance": {
  "lineno": 3600,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_durations_of_zero_are_okay": {
  "lineno": 3982,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_efron_newtons_method": {
  "lineno": 2960,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.ones_like",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_error_thrown_weights_are_nonpositive": {
  "lineno": 3904,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "pytest.raises"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_fit_method": {
  "lineno": 2966,
  "symbols_in_volume": [
   "numpy.abs"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_input_column_order_is_equal_to_output_hazards_order": {
  "lineno": 3729,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_less_trival_float_weights_with_no_ties_is_the_same_as_R": {
  "lineno": 3540,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.utils.StatisticalWarning",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pytest.warns"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_log_likelihood": {
  "lineno": 2872,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_log_likelihood_test_against_R": {
  "lineno": 3655,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_log_likelihood_test_against_R_with_weights": {
  "lineno": 3483,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.utils.StatisticalWarning",
   "pandas.DataFrame",
   "pytest.warns"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_martingale_residuals": {
  "lineno": 2781,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_non_trival_float_weights_with_no_ties_is_the_same_as_R": {
  "lineno": 3568,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.utils.StatisticalWarning",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pytest.warns"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_original_index_is_respected_in_all_residual_tests": {
  "lineno": 2747,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_original_index_is_respected_in_all_residual_tests_with_strata": {
  "lineno": 2764,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_output_with_strata_against_R": {
  "lineno": 3671,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "numpy.array",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_p_value_against_Survival_Analysis_by_John_Klein_and_Melvin_Moeschberger": {
  "lineno": 3718,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.datasets.load_larynx",
   "numpy.array",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_penalized_output_against_R": {
  "lineno": 3684,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "numpy.array",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_prediction_methods_will_accept_a_times_arg_to_reindex_the_predictions": {
  "lineno": 2976,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_print_summary": {
  "lineno": 2818,
  "symbols_in_volume": [
   "io.StringIO",
   "sys.stdout"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_print_summary_with_decimals": {
  "lineno": 2795,
  "symbols_in_volume": [
   "io.StringIO",
   "lifelines.CoxPHFitter",
   "sys.stdout"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_print_summary_with_styles": {
  "lineno": 2866,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_robust_errors_against_R_no_ties": {
  "lineno": 3998,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_robust_errors_is_the_same_as_R": {
  "lineno": 3438,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_robust_errors_with_less_trival_weights_is_the_same_as_R": {
  "lineno": 3335,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "numpy.array",
   "numpy.testing.assert_array_almost_equal",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_robust_errors_with_non_trivial_weights_is_the_same_as_R": {
  "lineno": 3374,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_robust_errors_with_non_trivial_weights_with_censorship_is_the_same_as_R": {
  "lineno": 3406,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_robust_errors_with_strata_against_R": {
  "lineno": 4004,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_robust_errors_with_strata_against_R_super_accurate": {
  "lineno": 4030,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "pandas.DataFrame",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_robust_errors_with_trivial_weights_is_the_same_than_R": {
  "lineno": 3147,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "numpy.array",
   "numpy.testing.assert_array_almost_equal",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_scaled_schoenfeld_residuals_against_R": {
  "lineno": 2733,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_schoenfeld_residuals_no_strata_but_with_censorship": {
  "lineno": 2617,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_schoenfeld_residuals_with_censorship_and_ties": {
  "lineno": 2643,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_schoenfeld_residuals_with_first_subjects_censored": {
  "lineno": 2727,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_schoenfeld_residuals_with_strata": {
  "lineno": 2696,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_schoenfeld_residuals_with_weights": {
  "lineno": 2669,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_se_against_Survival_Analysis_by_John_Klein_and_Melvin_Moeschberger": {
  "lineno": 3707,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.datasets.load_larynx",
   "numpy.array",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_single_efron_computed_by_hand_examples": {
  "lineno": 2876,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array",
   "numpy.ones_like"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_standard_error_coef_output_against_R": {
  "lineno": 3623,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "numpy.array",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_strata_against_R_output": {
  "lineno": 3775,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_strata_from_init_is_used_in_fit_later": {
  "lineno": 3835,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_strata_removes_variable_from_summary_output": {
  "lineno": 3735,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_strata_will_work_with_matched_pairs": {
  "lineno": 2790,
  "symbols_in_volume": [
   "numpy.floor"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_strata_works_if_only_a_single_element_is_in_the_strata": {
  "lineno": 3740,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.datasets.load_holly_molly_polly"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_summary_output_using_non_trivial_but_integer_weights": {
  "lineno": 3585,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_survival_prediction_is_the_same_indp_of_location": {
  "lineno": 3873,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_survival_prediction_is_the_same_indp_of_scale": {
  "lineno": 3910,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_that_a_convergence_warning_is_not_thrown_if_using_compute_residuals": {
  "lineno": 2553,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "pytest.warns"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_that_adding_strata_will_change_c_index": {
  "lineno": 2564,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_trival_float_weights_with_no_ties_is_the_same_as_R": {
  "lineno": 3509,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.utils.StatisticalWarning",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pytest.warns"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_using_dataframes_vs_numpy_arrays": {
  "lineno": 2970,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_warning_is_raised_if_complete_separation_is_present": {
  "lineno": 3947,
  "symbols_in_volume": [
   "lifelines.utils.ConvergenceWarning",
   "numpy.arange",
   "numpy.random.randn",
   "pandas.DataFrame.from_records",
   "pytest.warns"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_warning_is_raised_if_df_has_a_near_constant_column": {
  "lineno": 3927,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.utils.ConvergenceError",
   "lifelines.utils.ConvergenceWarning",
   "pytest.raises",
   "pytest.warns"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_warning_is_raised_if_df_has_a_near_constant_column_in_one_separation": {
  "lineno": 3935,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.utils.ConvergenceWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_what_happens_to_nans": {
  "lineno": 4055,
  "symbols_in_volume": [
   "numpy.nan",
   "pytest.raises"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_what_happens_when_column_is_constant_for_all_non_deaths": {
  "lineno": 3963,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.utils.ConvergenceWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_what_happens_with_colinear_inputs": {
  "lineno": 3977,
  "symbols_in_volume": [
   "lifelines.utils.ConvergenceError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_z_value_output_against_R_to_3_decimal_places": {
  "lineno": 3639,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "numpy.array",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter": {
  "lineno": 4224,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.ctv": {
  "lineno": 4225,
  "symbols_in_volume": [
   "lifelines.CoxTimeVaryingFitter",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.dfcv": {
  "lineno": 4229,
  "symbols_in_volume": [
   "lifelines.datasets.load_dfcv",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.heart": {
  "lineno": 4235,
  "symbols_in_volume": [
   "lifelines.datasets.load_stanford_heart_transplants",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_all_okay_with_non_trivial_index_in_dataframe": {
  "lineno": 4569,
  "symbols_in_volume": [
   "lifelines.CoxTimeVaryingFitter",
   "numpy.random.randint",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_ctv_against_cph_for_static_datasets_but_one_is_long": {
  "lineno": 4648,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.CoxTimeVaryingFitter",
   "lifelines.datasets.load_rossi",
   "lifelines.utils.to_episodic_format",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_ctv_baseline_cumulative_hazard_against_R": {
  "lineno": 4481,
  "symbols_in_volume": [
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_ctv_fitter_will_give_the_same_results_as_static_cox_model": {
  "lineno": 4357,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.utils.to_long_format",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_ctv_fitter_will_handle_integer_weight_as_static_model": {
  "lineno": 4369,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.utils.to_long_format",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_ctv_fitter_will_handle_trivial_weight_col": {
  "lineno": 4334,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_ctv_prediction_methods": {
  "lineno": 4476,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_ctv_ratio_test_with_strata": {
  "lineno": 4680,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_ctv_ratio_test_with_strata_and_initial_point": {
  "lineno": 4684,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_ctv_with_multiple_strata": {
  "lineno": 4676,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_ctv_with_strata_against_R": {
  "lineno": 4661,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_doubling_the_weights_halves_the_variance": {
  "lineno": 4344,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_error_is_raised_if_using_non_numeric_data": {
  "lineno": 4445,
  "symbols_in_volume": [
   "lifelines.CoxTimeVaryingFitter",
   "pandas.DataFrame.from_dict",
   "pandas.Series",
   "pytest.raises"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_error_thrown_if_column_doesnt_exist": {
  "lineno": 4599,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_error_thrown_weights_are_nonpositive": {
  "lineno": 4594,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_fitter_accept_boolean_columns": {
  "lineno": 4391,
  "symbols_in_volume": [
   "pandas.DataFrame.from_records"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_fitter_will_error_if_degenerate_time": {
  "lineno": 4318,
  "symbols_in_volume": [
   "pandas.DataFrame.from_records",
   "pytest.raises"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_fitter_will_raise_a_warning_if_instaneous_observation_present": {
  "lineno": 4300,
  "symbols_in_volume": [
   "pandas.DataFrame.from_records",
   "pytest.warns"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_fitter_will_raise_an_error_if_immediate_death_present": {
  "lineno": 4288,
  "symbols_in_volume": [
   "pandas.DataFrame.from_records",
   "pytest.raises"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_inference_against_known_R_output": {
  "lineno": 4239,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_inference_against_known_R_output_with_weights": {
  "lineno": 4262,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_likelihood_ratio_test_against_R": {
  "lineno": 4586,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_penalizer": {
  "lineno": 4581,
  "symbols_in_volume": [
   "lifelines.CoxTimeVaryingFitter"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_print_summary": {
  "lineno": 4603,
  "symbols_in_volume": [
   "io.StringIO",
   "sys.stdout"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_repr_with_fitter": {
  "lineno": 4560,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_summary_output_versus_Rs_against_standford_heart_transplant": {
  "lineno": 4434,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_warning_is_raised_if_df_has_a_near_constant_column": {
  "lineno": 4403,
  "symbols_in_volume": [
   "lifelines.utils.ConvergenceError",
   "lifelines.utils.ConvergenceWarning",
   "pytest.raises",
   "pytest.warns"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_warning_is_raised_if_df_has_a_near_constant_column_in_one_separation": {
  "lineno": 4410,
  "symbols_in_volume": [
   "lifelines.utils.ConvergenceWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_warning_is_raised_if_df_has_start_eq_stop_at_event_time": {
  "lineno": 4419,
  "symbols_in_volume": [
   "lifelines.utils.ConvergenceWarning",
   "pandas.DataFrame.from_records",
   "pytest.warns"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_what_happens_to_nans": {
  "lineno": 4251,
  "symbols_in_volume": [
   "numpy.nan",
   "pytest.raises"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCustomRegressionModel": {
  "lineno": 1555,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestCustomRegressionModel.rossi": {
  "lineno": 1556,
  "symbols_in_volume": [
   "lifelines.datasets.load_rossi",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCustomRegressionModel.test_reparameterization_flips_the_sign": {
  "lineno": 1562,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestExponentialFitter": {
  "lineno": 1064,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestExponentialFitter.test_fit_computes_correct_asymptotic_variance": {
  "lineno": 1072,
  "symbols_in_volume": [
   "lifelines.ExponentialFitter",
   "numpy.minimum",
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestExponentialFitter.test_fit_computes_correct_lambda_": {
  "lineno": 1065,
  "symbols_in_volume": [
   "lifelines.ExponentialFitter",
   "numpy.array"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestGeneralizedGammaFitter": {
  "lineno": 992,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestGeneralizedGammaFitter.test_against_reliability_software": {
  "lineno": 1030,
  "symbols_in_volume": [
   "lifelines.GeneralizedGammaFitter",
   "numpy.exp",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestGeneralizedGammaFitter.test_exponential_data_inference": {
  "lineno": 993,
  "symbols_in_volume": [
   "lifelines.GeneralizedGammaFitter",
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestGeneralizedGammaFitter.test_gamma_data_inference": {
  "lineno": 1006,
  "symbols_in_volume": [
   "lifelines.GeneralizedGammaFitter",
   "numpy.exp",
   "numpy.random.gamma"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestGeneralizedGammaFitter.test_inverse_gamma_inference": {
  "lineno": 1024,
  "symbols_in_volume": [
   "lifelines.GeneralizedGammaFitter",
   "numpy.exp",
   "scipy.stats.invgamma"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestGeneralizedGammaFitter.test_inverse_weibull_inference": {
  "lineno": 1018,
  "symbols_in_volume": [
   "lifelines.GeneralizedGammaFitter",
   "scipy.stats.invweibull"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestGeneralizedGammaFitter.test_lognormal_data_inference": {
  "lineno": 1012,
  "symbols_in_volume": [
   "lifelines.GeneralizedGammaFitter",
   "numpy.exp",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestGeneralizedGammaFitter.test_weibull_data_inference": {
  "lineno": 1000,
  "symbols_in_volume": [
   "lifelines.GeneralizedGammaFitter",
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestKaplanMeierFitter": {
  "lineno": 1083,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestKaplanMeierFitter.kaplan_meier": {
  "lineno": 1084,
  "symbols_in_volume": [
   "collections.Counter",
   "numpy.insert",
   "numpy.sort",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestKaplanMeierFitter.test_adding_weights_to_KaplanMeierFitter": {
  "lineno": 1235,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "numpy.random.binomial",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestKaplanMeierFitter.test_kaplan_meier_no_censorship": {
  "lineno": 1130,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestKaplanMeierFitter.test_kaplan_meier_with_censorship": {
  "lineno": 1136,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestKaplanMeierFitter.test_kmf_confidence_intervals_output_against_R": {
  "lineno": 1214,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "lifelines.datasets.load_g3",
   "numpy.array",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestKaplanMeierFitter.test_kmf_does_not_drop_to_zero_if_last_point_is_censored": {
  "lineno": 1227,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "numpy.arange",
   "numpy.argmax",
   "numpy.random.binomial"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestKaplanMeierFitter.test_kmf_has_both_survival_function_and_cumulative_density": {
  "lineno": 1284,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "numpy.arange",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestKaplanMeierFitter.test_kmf_left_censored_data_stats": {
  "lineno": 1163,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "numpy.array",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestKaplanMeierFitter.test_kmf_overflow_error": {
  "lineno": 1106,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestKaplanMeierFitter.test_kmf_survival_curve_output_against_R": {
  "lineno": 1187,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "lifelines.datasets.load_g3",
   "numpy.array",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestKaplanMeierFitter.test_kmf_survival_curve_output_against_R_super_accurate": {
  "lineno": 1200,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "lifelines.datasets.load_g3",
   "numpy.array",
   "numpy.testing.assert_allclose",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestKaplanMeierFitter.test_late_entry_with_against_R": {
  "lineno": 1275,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestKaplanMeierFitter.test_late_entry_with_almost_tied_entry_and_death_against_R": {
  "lineno": 1266,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestKaplanMeierFitter.test_late_entry_with_tied_entry_and_death": {
  "lineno": 1307,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "numpy.ceil",
   "numpy.cumprod",
   "numpy.floor",
   "numpy.min",
   "numpy.random.seed",
   "numpy.random.weibull",
   "numpy.testing.assert_allclose",
   "numpy.where",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestKaplanMeierFitter.test_left_truncation_against_Cole_and_Hudgens": {
  "lineno": 1114,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "lifelines.datasets.load_multicenter_aids_cohort_study"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestKaplanMeierFitter.test_passing_in_left_censorship_creates_a_cumulative_density": {
  "lineno": 1156,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestKaplanMeierFitter.test_shifting_durations_doesnt_affect_survival_function_values": {
  "lineno": 1173,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "numpy.random.exponential",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestKaplanMeierFitter.test_sort_doesnt_affect_kmf": {
  "lineno": 1151,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestKaplanMeierFitter.test_stat_error_is_raised_if_too_few_early_deaths": {
  "lineno": 1142,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "lifelines.utils.StatError",
   "numpy.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestKaplanMeierFitter.test_weights_can_be_floats": {
  "lineno": 1248,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "lifelines.utils.StatisticalWarning",
   "numpy.random.binomial",
   "numpy.random.random",
   "pytest.warns"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestKaplanMeierFitter.test_weights_with_unaligned_index": {
  "lineno": 1256,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "lifelines.utils.StatisticalWarning",
   "pandas.DataFrame",
   "pytest.warns"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestLogLogisticAFTFitter": {
  "lineno": 2151,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestLogLogisticAFTFitter.aft": {
  "lineno": 2152,
  "symbols_in_volume": [
   "lifelines.LogLogisticAFTFitter",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestLogLogisticAFTFitter.test_coefs_with_fitted_ancillary_params": {
  "lineno": 2156,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestLogLogisticAFTFitter.test_proportional_odds": {
  "lineno": 2171,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestLogLogisticFitter": {
  "lineno": 811,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestLogLogisticFitter.llf": {
  "lineno": 812,
  "symbols_in_volume": [
   "lifelines.LogLogisticFitter",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestLogLogisticFitter.test_llf_large_values": {
  "lineno": 859,
  "symbols_in_volume": [
   "numpy.minimum",
   "scipy.stats.fisk.rvs"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestLogLogisticFitter.test_llf_less_simple_inference": {
  "lineno": 834,
  "symbols_in_volume": [
   "scipy.stats.fisk.rvs"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestLogLogisticFitter.test_llf_less_simple_inference_with_censorship": {
  "lineno": 844,
  "symbols_in_volume": [
   "numpy.minimum",
   "scipy.stats.fisk.rvs"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestLogLogisticFitter.test_llf_simple_inference": {
  "lineno": 826,
  "symbols_in_volume": [
   "scipy.stats.fisk.rvs"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestLogLogisticFitter.test_llf_small_values": {
  "lineno": 875,
  "symbols_in_volume": [
   "numpy.minimum",
   "pytest.mark.xfail",
   "scipy.stats.fisk.rvs"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestLogLogisticFitter.test_loglogistic_model_does_not_except_negative_or_zero_values": {
  "lineno": 816,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestLogNormalAFTFitter": {
  "lineno": 2130,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestLogNormalAFTFitter.aft": {
  "lineno": 2131,
  "symbols_in_volume": [
   "lifelines.LogNormalAFTFitter",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestLogNormalAFTFitter.test_coefs_with_fitted_ancillary_params": {
  "lineno": 2135,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestLogNormalFitter": {
  "lineno": 708,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestLogNormalFitter.lnf": {
  "lineno": 709,
  "symbols_in_volume": [
   "lifelines.LogNormalFitter",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestLogNormalFitter.test_cumulative_hazard_doesnt_fail": {
  "lineno": 729,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.random.randn",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestLogNormalFitter.test_fit": {
  "lineno": 713,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.ones_like",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestLogNormalFitter.test_lnf_inference": {
  "lineno": 741,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.minimum",
   "numpy.percentile",
   "numpy.random.randn",
   "numpy.random.uniform"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestLogNormalFitter.test_lnf_inference_no_censorship": {
  "lineno": 798,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.random.exponential",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestLogNormalFitter.test_lnf_inference_with_large_sigma": {
  "lineno": 756,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.minimum",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestLogNormalFitter.test_lnf_inference_with_really_small_sigma": {
  "lineno": 784,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.minimum",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestLogNormalFitter.test_lnf_inference_with_small_sigma": {
  "lineno": 770,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.minimum",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestLogNormalFitter.test_lognormal_model_does_not_except_negative_or_zero_values": {
  "lineno": 720,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestNelsonAalenFitter": {
  "lineno": 1353,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestNelsonAalenFitter.nelson_aalen": {
  "lineno": 1354,
  "symbols_in_volume": [
   "collections.Counter",
   "numpy.insert",
   "numpy.sort",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestNelsonAalenFitter.test_adding_weights_to_NelsonAalenFitter": {
  "lineno": 1439,
  "symbols_in_volume": [
   "lifelines.NelsonAalenFitter",
   "numpy.random.binomial",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestNelsonAalenFitter.test_censor_nelson_aalen": {
  "lineno": 1382,
  "symbols_in_volume": [
   "lifelines.NelsonAalenFitter",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestNelsonAalenFitter.test_iloc_slicing": {
  "lineno": 1392,
  "symbols_in_volume": [
   "lifelines.NelsonAalenFitter"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestNelsonAalenFitter.test_loc_slicing": {
  "lineno": 1388,
  "symbols_in_volume": [
   "lifelines.NelsonAalenFitter"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestNelsonAalenFitter.test_nelson_aalen_no_censorship": {
  "lineno": 1376,
  "symbols_in_volume": [
   "lifelines.NelsonAalenFitter",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestNelsonAalenFitter.test_nelson_aalen_smoothing": {
  "lineno": 1427,
  "symbols_in_volume": [
   "lifelines.NelsonAalenFitter",
   "numpy.random.binomial",
   "numpy.random.exponential",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestNelsonAalenFitter.test_smoothing_hazard_nontied": {
  "lineno": 1404,
  "symbols_in_volume": [
   "lifelines.NelsonAalenFitter",
   "numpy.random.binomial",
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestNelsonAalenFitter.test_smoothing_hazard_ties": {
  "lineno": 1397,
  "symbols_in_volume": [
   "lifelines.NelsonAalenFitter",
   "numpy.random.binomial"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestNelsonAalenFitter.test_smoothing_hazard_ties_all_events_observed": {
  "lineno": 1413,
  "symbols_in_volume": [
   "lifelines.NelsonAalenFitter",
   "numpy.random.binomial"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestNelsonAalenFitter.test_smoothing_hazard_with_spike_at_time_0": {
  "lineno": 1419,
  "symbols_in_volume": [
   "lifelines.NelsonAalenFitter",
   "numpy.random.binomial"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestParametricRegressionFitter": {
  "lineno": 1469,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestParametricRegressionFitter.rossi": {
  "lineno": 1470,
  "symbols_in_volume": [
   "lifelines.datasets.load_rossi",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestParametricRegressionFitter.test_custom_weibull_model_gives_the_same_data_as_implemented_weibull_model": {
  "lineno": 1476,
  "symbols_in_volume": [
   "lifelines.WeibullAFTFitter",
   "numpy.testing.assert_allclose",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestParametricRegressionFitter.test_custom_weibull_model_gives_the_same_data_as_implemented_weibull_model.CustomWeibull": {
  "lineno": 1477,
  "symbols_in_volume": [
   "lifelines.fitters.ParametricRegressionFitter"
  ],
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestParametricRegressionFitter.test_custom_weibull_model_gives_the_same_data_as_implemented_weibull_model.CustomWeibull._cumulative_hazard": {
  "lineno": 1482,
  "symbols_in_volume": [
   "autograd.numpy.dot",
   "autograd.numpy.exp"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestParametricRegressionFitter.test_custom_weibull_model_gives_the_same_data_as_implemented_weibull_model.CustomWeibull._log_hazard": {
  "lineno": 1488,
  "symbols_in_volume": [
   "autograd.numpy.expm1",
   "autograd.numpy.log"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestParametricUnivariateFitters": {
  "lineno": 203,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestParametricUnivariateFitters.test_confidence_interval_is_expected": {
  "lineno": 204,
  "symbols_in_volume": [
   "autograd.scipy.special.logit",
   "flaky.flaky",
   "numpy.isnan",
   "numpy.log",
   "numpy.random.exponential",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestParametricUnivariateFitters.test_confidence_interval_is_expected.UpperAsymptoteFitter": {
  "lineno": 217,
  "symbols_in_volume": [
   "lifelines.fitters.ParametricUnivariateFitter"
  ],
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestParametricUnivariateFitters.test_confidence_interval_is_expected.UpperAsymptoteFitter._cumulative_hazard": {
  "lineno": 223,
  "symbols_in_volume": [
   "autograd.scipy.stats.norm.cdf"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestParametricUnivariateFitters.test_models_can_handle_really_large_duration_values": {
  "lineno": 237,
  "symbols_in_volume": [
   "numpy.minimum",
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestParametricUnivariateFitters.test_models_can_handle_really_small_duration_values": {
  "lineno": 245,
  "symbols_in_volume": [
   "numpy.minimum",
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestParametricUnivariateFitters.test_models_can_handle_really_small_duration_values_for_left_censorship": {
  "lineno": 254,
  "symbols_in_volume": [
   "numpy.maximum",
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestParametricUnivariateFitters.test_parameteric_models_all_can_do_interval_censoring": {
  "lineno": 303,
  "symbols_in_volume": [
   "lifelines.datasets.load_diabetes"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestParametricUnivariateFitters.test_parameteric_models_all_can_do_interval_censoring_with_prediction": {
  "lineno": 309,
  "symbols_in_volume": [
   "lifelines.datasets.load_diabetes"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestParametricUnivariateFitters.test_parameteric_models_fail_if_passing_in_bad_event_data": {
  "lineno": 317,
  "symbols_in_volume": [
   "lifelines.datasets.load_diabetes",
   "numpy.ones_like",
   "pytest.raises"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestParametricUnivariateFitters.test_parametric_univariate_fitters_can_print_summary": {
  "lineno": 265,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestParametricUnivariateFitters.test_parametric_univariate_fitters_has_confidence_intervals": {
  "lineno": 273,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestParametricUnivariateFitters.test_print_summary": {
  "lineno": 323,
  "symbols_in_volume": [
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestParametricUnivariateFitters.test_warnings_for_problematic_cumulative_hazards": {
  "lineno": 282,
  "symbols_in_volume": [
   "lifelines.utils.StatisticalWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestParametricUnivariateFitters.test_warnings_for_problematic_cumulative_hazards.DecreasingFitter": {
  "lineno": 290,
  "symbols_in_volume": [
   "lifelines.fitters.ParametricUnivariateFitter"
  ],
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestParametricUnivariateFitters.test_warnings_for_problematic_cumulative_hazards.DecreasingFitter._cumulative_hazard": {
  "lineno": 294,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestParametricUnivariateFitters.test_warnings_for_problematic_cumulative_hazards.NegativeFitter": {
  "lineno": 283,
  "symbols_in_volume": [
   "lifelines.fitters.ParametricUnivariateFitter"
  ],
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestParametricUnivariateFitters.test_warnings_for_problematic_cumulative_hazards.NegativeFitter._cumulative_hazard": {
  "lineno": 287,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestPiecewiseExponentialFitter": {
  "lineno": 678,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestPiecewiseExponentialFitter.test_fit_on_simulated_data": {
  "lineno": 692,
  "symbols_in_volume": [
   "flaky.flaky",
   "lifelines.PiecewiseExponentialFitter",
   "lifelines.generate_datasets.piecewise_exponential_survival_data",
   "numpy.minimum",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestPiecewiseExponentialFitter.test_fit_with_bad_breakpoints_raises_error": {
  "lineno": 679,
  "symbols_in_volume": [
   "lifelines.PiecewiseExponentialFitter",
   "numpy.inf",
   "pytest.raises"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestPiecewiseExponentialRegressionFitter": {
  "lineno": 1834,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestPiecewiseExponentialRegressionFitter.test_inference": {
  "lineno": 1835,
  "symbols_in_volume": [
   "lifelines.PiecewiseExponentialRegressionFitter",
   "lifelines.generate_datasets.piecewise_exponential_survival_data",
   "numpy.array",
   "numpy.c_",
   "numpy.empty",
   "numpy.exp",
   "numpy.log",
   "numpy.maximum",
   "numpy.minimum",
   "numpy.ones",
   "numpy.random.exponential",
   "numpy.round",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestPiecewiseExponentialRegressionFitter.test_inference.assert_allclose": {
  "lineno": 1873,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestRegressionFitters": {
  "lineno": 1584,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestRegressionFitters.regression_models": {
  "lineno": 1603,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestRegressionFitters.regression_models_sans_strata_model": {
  "lineno": 1590,
  "symbols_in_volume": [
   "lifelines.AalenAdditiveFitter",
   "lifelines.CoxPHFitter",
   "lifelines.GeneralizedGammaRegressionFitter",
   "lifelines.LogLogisticAFTFitter",
   "lifelines.LogNormalAFTFitter",
   "lifelines.PiecewiseExponentialRegressionFitter",
   "lifelines.WeibullAFTFitter",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestRegressionFitters.rossi": {
  "lineno": 1585,
  "symbols_in_volume": [
   "lifelines.datasets.load_rossi",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestRegressionFitters.test_all_models_have_censoring_type": {
  "lineno": 1811,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestRegressionFitters.test_dill_serialization": {
  "lineno": 1621,
  "symbols_in_volume": [
   "dill.dumps",
   "dill.loads"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestRegressionFitters.test_duration_vector_can_be_normalized_up_to_an_intercept": {
  "lineno": 1711,
  "symbols_in_volume": [
   "lifelines.GeneralizedGammaRegressionFitter",
   "lifelines.PiecewiseExponentialRegressionFitter",
   "pandas.DataFrame",
   "pandas.MultiIndex",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestRegressionFitters.test_error_is_raised_if_using_non_numeric_data_in_fit": {
  "lineno": 1757,
  "symbols_in_volume": [
   "pandas.DataFrame.from_dict",
   "pandas.Series",
   "pytest.raises"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestRegressionFitters.test_error_is_thrown_if_there_is_nans_in_the_duration_col": {
  "lineno": 1799,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestRegressionFitters.test_error_is_thrown_if_there_is_nans_in_the_event_col": {
  "lineno": 1805,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestRegressionFitters.test_fit_methods_can_accept_optional_event_col_param": {
  "lineno": 1666,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.testing.assert_array_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestRegressionFitters.test_fit_methods_require_duration_col": {
  "lineno": 1661,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestRegressionFitters.test_fit_raise_an_error_if_nan_in_event_col": {
  "lineno": 1654,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestRegressionFitters.test_fit_will_accept_object_dtype_as_event_col": {
  "lineno": 1642,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestRegressionFitters.test_joblib_serialization": {
  "lineno": 1631,
  "symbols_in_volume": [
   "joblib.dump",
   "joblib.load"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestRegressionFitters.test_pickle_serialization": {
  "lineno": 1613,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestRegressionFitters.test_predict_methods_in_regression_return_same_index": {
  "lineno": 1693,
  "symbols_in_volume": [
   "itertools.combinations",
   "pandas.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestRegressionFitters.test_predict_methods_in_regression_return_same_types": {
  "lineno": 1675,
  "symbols_in_volume": [
   "itertools.combinations"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestRegressionFitters.test_prediction_methods_respect_index": {
  "lineno": 1744,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_equal",
   "pandas.Index"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestRegressionFitters.test_print_summary": {
  "lineno": 1608,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestRegressionFitters.test_regression_model_has_score_": {
  "lineno": 1779,
  "symbols_in_volume": [
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestRegressionFitters.test_regression_model_updates_score_": {
  "lineno": 1787,
  "symbols_in_volume": [
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestRegressionFitters.test_regression_models_will_not_fail_when_provided_int_times_on_prediction": {
  "lineno": 1816,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters": {
  "lineno": 333,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_all_models_have_censoring_type": {
  "lineno": 670,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_allow_dataframes": {
  "lineno": 371,
  "symbols_in_volume": [
   "numpy.random.exponential",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_ci_is_not_all_nan": {
  "lineno": 528,
  "symbols_in_volume": [
   "pandas.isnull"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_ci_labels": {
  "lineno": 521,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_conditional_time_to_allows_custom_timelines": {
  "lineno": 404,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.random.binomial"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_confidence_interval_has_the_correct_order_so_plotting_doesnt_break": {
  "lineno": 349,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_custom_timeline": {
  "lineno": 501,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_custom_timeline_can_be_list_or_array": {
  "lineno": 486,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_default_alpha_is_005": {
  "lineno": 385,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_dill_serialization": {
  "lineno": 645,
  "symbols_in_volume": [
   "dill.dumps",
   "dill.loads"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_divide_function": {
  "lineno": 591,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.concatenate",
   "numpy.log",
   "numpy.testing.assert_array_almost_equal",
   "numpy.unique"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_divide_function_with_labelled_data": {
  "lineno": 604,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_has_percentile_function": {
  "lineno": 378,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_joblib_serialization": {
  "lineno": 657,
  "symbols_in_volume": [
   "joblib.dump",
   "joblib.load"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_label_is_a_property": {
  "lineno": 512,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_lists_as_input": {
  "lineno": 538,
  "symbols_in_volume": [
   "lifelines.NelsonAalenFitter",
   "lifelines.fitters.ParametricUnivariateFitter",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_pickle_serialization": {
  "lineno": 635,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_predict_method_returns_an_approximation_if_not_in_the_index_and_interpolate_set_to_true": {
  "lineno": 472,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_predict_method_returns_exact_value_if_given_an_observed_time": {
  "lineno": 465,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_predict_method_returns_the_previous_value_if_not_in_the_index": {
  "lineno": 479,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_predict_methods_returns_a_scalar_or_a_array_depending_on_input": {
  "lineno": 455,
  "symbols_in_volume": [
   "collections.Iterable"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_repr_with_fitter": {
  "lineno": 359,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_subtract_function_with_labelled_data": {
  "lineno": 578,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_subtraction_function": {
  "lineno": 564,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.concatenate",
   "numpy.testing.assert_array_almost_equal",
   "numpy.unique"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_typeerror_is_thrown_if_there_is_nans_in_the_duration_col": {
  "lineno": 622,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pytest.raises"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_typeerror_is_thrown_if_there_is_nans_in_the_event_col": {
  "lineno": 628,
  "symbols_in_volume": [
   "numpy.arange",
   "pytest.raises"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_univariate_fitters_accept_late_entries": {
  "lineno": 389,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_univariate_fitters_allows_one_to_change_alpha_at_fit_time": {
  "lineno": 412,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_univariate_fitters_have_a_plot_method": {
  "lineno": 425,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_univariate_fitters_ok_if_given_timedelta": {
  "lineno": 432,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_allclose",
   "pandas.Series",
   "pandas.to_datetime",
   "pytest.warns"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_univariate_fitters_okay_if_given_boolean_col_with_object_dtype": {
  "lineno": 445,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.warns"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_univariate_fitters_with_survival_function_have_conditional_time_to_": {
  "lineno": 395,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_valueerror_is_thrown_if_alpha_out_of_bounds": {
  "lineno": 617,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.univariate_fitters": {
  "lineno": 334,
  "symbols_in_volume": [
   "lifelines.BreslowFlemingHarringtonFitter",
   "lifelines.ExponentialFitter",
   "lifelines.GeneralizedGammaFitter",
   "lifelines.KaplanMeierFitter",
   "lifelines.LogLogisticFitter",
   "lifelines.LogNormalFitter",
   "lifelines.NelsonAalenFitter",
   "lifelines.WeibullFitter",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullAFTFitter": {
  "lineno": 2190,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestWeibullAFTFitter.aft": {
  "lineno": 2191,
  "symbols_in_volume": [
   "lifelines.WeibullAFTFitter",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullAFTFitter.test_aft_weibull_can_do_interval_prediction": {
  "lineno": 2462,
  "symbols_in_volume": [
   "lifelines.WeibullAFTFitter",
   "lifelines.datasets.load_diabetes"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullAFTFitter.test_aft_weibull_with_ancillary_model_and_with_weights": {
  "lineno": 2449,
  "symbols_in_volume": [
   "lifelines.WeibullAFTFitter",
   "numpy.log",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullAFTFitter.test_aft_weibull_with_weights": {
  "lineno": 2432,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullAFTFitter.test_ancillary_None_is_same_as_False": {
  "lineno": 2315,
  "symbols_in_volume": [
   "lifelines.WeibullAFTFitter",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullAFTFitter.test_ancillary_True_is_same_as_full_df": {
  "lineno": 2308,
  "symbols_in_volume": [
   "lifelines.WeibullAFTFitter",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullAFTFitter.test_coefs_with_fitted_ancillary_params": {
  "lineno": 2293,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullAFTFitter.test_fit_intercept": {
  "lineno": 2322,
  "symbols_in_volume": [
   "lifelines.WeibullAFTFitter",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullAFTFitter.test_fitted_coefs_match_with_flexsurv_has": {
  "lineno": 2246,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullAFTFitter.test_fitted_coefs_with_eha_when_left_truncated": {
  "lineno": 2195,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullAFTFitter.test_fitted_log_likelihood_match_with_flexsurv_has": {
  "lineno": 2283,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullAFTFitter.test_fitted_log_likelihood_ratio_test_match_with_flexsurv_has": {
  "lineno": 2288,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullAFTFitter.test_fitted_se_match_with_flexsurv_has": {
  "lineno": 2265,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullAFTFitter.test_fitted_se_with_eha_when_left_truncated": {
  "lineno": 2221,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullAFTFitter.test_inference_is_the_same_if_using_right_censorship_or_interval_censorship_with_inf_endpoints": {
  "lineno": 2384,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.where",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullAFTFitter.test_passing_in_additional_ancillary_df_in_predict_methods_if_fitted_with_one": {
  "lineno": 2332,
  "symbols_in_volume": [
   "lifelines.WeibullAFTFitter"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullAFTFitter.test_passing_in_additional_ancillary_df_in_predict_methods_okay_if_not_fitted_with_one": {
  "lineno": 2347,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullAFTFitter.test_robust_errors_against_R": {
  "lineno": 2355,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullAFTFitter.test_robust_errors_against_R_with_weights": {
  "lineno": 2370,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullAFTFitter.test_weibull_interval_censoring_inference_on_known_R_output": {
  "lineno": 2400,
  "symbols_in_volume": [
   "lifelines.datasets.load_diabetes",
   "numpy.log",
   "numpy.testing.assert_allclose",
   "pytest.raises"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullFitter": {
  "lineno": 893,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestWeibullFitter.test_convergence_completes_for_ever_increasing_data_sizes": {
  "lineno": 981,
  "symbols_in_volume": [
   "lifelines.WeibullFitter",
   "numpy.random.weibull",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullFitter.test_exponential_data_produces_correct_inference_no_censorship": {
  "lineno": 960,
  "symbols_in_volume": [
   "lifelines.WeibullFitter",
   "numpy.log",
   "numpy.median",
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullFitter.test_exponential_data_produces_correct_inference_with_censorship": {
  "lineno": 970,
  "symbols_in_volume": [
   "lifelines.WeibullFitter",
   "numpy.log",
   "numpy.minimum",
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullFitter.test_left_censorship_inference": {
  "lineno": 900,
  "symbols_in_volume": [
   "flaky.flaky",
   "lifelines.WeibullFitter",
   "numpy.maximum",
   "numpy.percentile",
   "numpy.random.randint",
   "numpy.random.weibull",
   "numpy.where",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullFitter.test_unstable_data": {
  "lineno": 894,
  "symbols_in_volume": [
   "lifelines.LogNormalFitter",
   "lifelines.WeibullFitter",
   "pandas.read_csv"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullFitter.test_weibull_fit_returns_float_timelines": {
  "lineno": 942,
  "symbols_in_volume": [
   "lifelines.WeibullFitter",
   "numpy.linspace",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullFitter.test_weibull_model_does_not_except_negative_or_zero_values": {
  "lineno": 949,
  "symbols_in_volume": [
   "lifelines.WeibullFitter",
   "pytest.raises"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullFitter.test_weibull_with_delayed_entries": {
  "lineno": 924,
  "symbols_in_volume": [
   "lifelines.WeibullFitter",
   "numpy.abs",
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.data_nus": {
  "lineno": 154,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.data_pred1": {
  "lineno": 104,
  "symbols_in_volume": [
   "numpy.random.normal",
   "numpy.random.uniform",
   "pandas.DataFrame",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.data_pred2": {
  "lineno": 143,
  "symbols_in_volume": [
   "numpy.random.normal",
   "numpy.random.uniform",
   "pandas.DataFrame",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.known_parametric_univariate_fitters": {
  "lineno": 184,
  "symbols_in_volume": [
   "lifelines.ExponentialFitter",
   "lifelines.GeneralizedGammaFitter",
   "lifelines.LogLogisticFitter",
   "lifelines.LogNormalFitter",
   "lifelines.WeibullFitter",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.positive_sample_lifetimes": {
  "lineno": 93,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.regression_dataset": {
  "lineno": 179,
  "symbols_in_volume": [
   "lifelines.datasets.load_regression_dataset",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.rossi": {
  "lineno": 174,
  "symbols_in_volume": [
   "lifelines.datasets.load_rossi",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.sample_lifetimes": {
  "lineno": 87,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "lifelines.tests.test_estimation.waltons_dataset": {
  "lineno": 99,
  "symbols_in_volume": [
   "lifelines.datasets.load_waltons",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "lifelines.tests.test_generate_datasets": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.tests.test_generate_datasets.test_exponential_data_sets_correct_censor": {
  "lineno": 11,
  "symbols_in_volume": [
   "lifelines.generate_datasets.exponential_survival_data"
  ],
  "type": "function"
 },
 "lifelines.tests.test_generate_datasets.test_exponential_data_sets_fit": {
  "lineno": 18,
  "symbols_in_volume": [
   "lifelines.NelsonAalenFitter",
   "lifelines.generate_datasets.exponential_survival_data",
   "matplotlib.pyplot.title",
   "os.environ",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "lifelines.tests.test_generate_datasets.test_kmf_minimum_observation_bias": {
  "lineno": 27,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "lifelines.generate_datasets.exponential_survival_data",
   "matplotlib.pyplot.title",
   "os.environ",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.tests.test_plotting.TestPlotting": {
  "lineno": 44,
  "symbols_in_volume": [
   "os.environ",
   "pytest.mark.skipif"
  ],
  "type": "class"
 },
 "lifelines.tests.test_plotting.TestPlotting.kmf": {
  "lineno": 46,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.setup_method": {
  "lineno": 50,
  "symbols_in_volume": [
   "matplotlib.pyplot",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_MACS_data_with_plot_lifetimes": {
  "lineno": 234,
  "symbols_in_volume": [
   "lifelines.datasets.load_multicenter_aids_cohort_study",
   "lifelines.plotting.plot_lifetimes"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_aalen_additive_fit_no_censor": {
  "lineno": 485,
  "symbols_in_volume": [
   "lifelines.AalenAdditiveFitter",
   "lifelines.generate_datasets.cumulative_integral",
   "lifelines.generate_datasets.generate_hazard_rates",
   "lifelines.generate_datasets.generate_random_lifetimes",
   "numpy.isinf",
   "numpy.linspace",
   "numpy.random.binomial",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_aalen_additive_fit_with_censor": {
  "lineno": 510,
  "symbols_in_volume": [
   "lifelines.AalenAdditiveFitter",
   "lifelines.generate_datasets.cumulative_integral",
   "lifelines.generate_datasets.generate_hazard_rates",
   "lifelines.generate_datasets.generate_random_lifetimes",
   "numpy.isinf",
   "numpy.linspace",
   "numpy.random.binomial",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_aalen_additive_plot": {
  "lineno": 158,
  "symbols_in_volume": [
   "lifelines.AalenAdditiveFitter",
   "lifelines.generate_datasets.generate_hazard_rates",
   "lifelines.generate_datasets.generate_random_lifetimes",
   "numpy.isinf",
   "numpy.linspace",
   "numpy.random.binomial"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_aalen_additive_smoothed_plot": {
  "lineno": 181,
  "symbols_in_volume": [
   "lifelines.AalenAdditiveFitter",
   "lifelines.generate_datasets.generate_hazard_rates",
   "lifelines.generate_datasets.generate_random_lifetimes",
   "numpy.linspace",
   "numpy.random.binomial",
   "numpy.random.uniform"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_ajf_plotting": {
  "lineno": 131,
  "symbols_in_volume": [
   "lifelines.AalenJohansenFitter"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_ajf_plotting_no_confidence_intervals": {
  "lineno": 140,
  "symbols_in_volume": [
   "lifelines.AalenJohansenFitter"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_ajf_plotting_with_add_count_at_risk": {
  "lineno": 149,
  "symbols_in_volume": [
   "lifelines.AalenJohansenFitter"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_coxph_plot_covariate_groups": {
  "lineno": 405,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.datasets.load_rossi"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_coxph_plot_covariate_groups_with_multiple_variables": {
  "lineno": 438,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.datasets.load_rossi"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_coxph_plot_covariate_groups_with_multiple_variables_and_strata": {
  "lineno": 446,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.datasets.load_rossi",
   "numpy.random.choice"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_coxph_plot_covariate_groups_with_nonnumeric_strata": {
  "lineno": 429,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.datasets.load_rossi",
   "numpy.random.choice"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_coxph_plot_covariate_groups_with_single_strata": {
  "lineno": 421,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.datasets.load_rossi"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_coxph_plot_covariate_groups_with_strata": {
  "lineno": 413,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.datasets.load_rossi"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_coxph_plotting": {
  "lineno": 381,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.datasets.load_regression_dataset"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_coxph_plotting_with_hazards_ratios": {
  "lineno": 389,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.datasets.load_regression_dataset"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_coxph_plotting_with_subset_of_columns": {
  "lineno": 397,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.datasets.load_regression_dataset"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_coxtv_plotting": {
  "lineno": 463,
  "symbols_in_volume": [
   "lifelines.CoxTimeVaryingFitter",
   "lifelines.datasets.load_stanford_heart_transplants"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_coxtv_plotting_with_subset_of_columns": {
  "lineno": 455,
  "symbols_in_volume": [
   "lifelines.CoxTimeVaryingFitter",
   "lifelines.datasets.load_stanford_heart_transplants"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_flat_style_with_custom_censor_styles": {
  "lineno": 342,
  "symbols_in_volume": [
   "numpy.random.exponential",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_kmf_left_censorship_plots": {
  "lineno": 471,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "lifelines.datasets.load_lcd"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_kmf_plotting": {
  "lineno": 98,
  "symbols_in_volume": [
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_kmf_with_risk_counts": {
  "lineno": 112,
  "symbols_in_volume": [
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_label_can_be_changed_on_univariate_fitters": {
  "lineno": 316,
  "symbols_in_volume": [
   "lifelines.WeibullFitter",
   "numpy.linspace",
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_left_censorship_cdf_plots": {
  "lineno": 572,
  "symbols_in_volume": [
   "lifelines.ExponentialFitter",
   "lifelines.LogLogisticFitter",
   "lifelines.LogNormalFitter",
   "lifelines.WeibullFitter",
   "lifelines.datasets.load_nh4",
   "lifelines.plotting.cdf_plot"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_loglogs_plot": {
  "lineno": 351,
  "symbols_in_volume": [
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_naf_plot_cumulative_hazard": {
  "lineno": 257,
  "symbols_in_volume": [
   "lifelines.NelsonAalenFitter",
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_naf_plot_cumulative_hazard_bandwidth_2": {
  "lineno": 267,
  "symbols_in_volume": [
   "lifelines.NelsonAalenFitter",
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_naf_plot_cumulative_hazard_bandwith_1": {
  "lineno": 276,
  "symbols_in_volume": [
   "lifelines.NelsonAalenFitter",
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_naf_plotting_slice": {
  "lineno": 202,
  "symbols_in_volume": [
   "lifelines.NelsonAalenFitter",
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_naf_plotting_with_custom_colours": {
  "lineno": 119,
  "symbols_in_volume": [
   "lifelines.NelsonAalenFitter",
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_negative_times_still_plots": {
  "lineno": 88,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_parametric_plotting_with_show_censors": {
  "lineno": 297,
  "symbols_in_volume": [
   "lifelines.WeibullFitter",
   "numpy.linspace",
   "numpy.random.exponential",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_parametric_univaraite_fitters_has_cumhazard_plotting_methods": {
  "lineno": 66,
  "symbols_in_volume": [
   "lifelines.tests.test_estimation.known_parametric_univariate_fitters",
   "numpy.arange"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_parametric_univariate_fitters_has_hazard_plotting_methods": {
  "lineno": 56,
  "symbols_in_volume": [
   "lifelines.tests.test_estimation.known_parametric_univariate_fitters",
   "numpy.arange"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_parametric_univariate_fitters_has_survival_plotting_methods": {
  "lineno": 77,
  "symbols_in_volume": [
   "lifelines.tests.test_estimation.known_parametric_univariate_fitters",
   "numpy.arange"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_plot_lifetimes_calendar": {
  "lineno": 214,
  "symbols_in_volume": [
   "lifelines.plotting.plot_lifetimes",
   "numpy.random.uniform"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_plot_lifetimes_left_truncation": {
  "lineno": 223,
  "symbols_in_volume": [
   "lifelines.plotting.plot_lifetimes",
   "numpy.random.uniform"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_plot_lifetimes_relative": {
  "lineno": 250,
  "symbols_in_volume": [
   "lifelines.plotting.plot_lifetimes"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_qq_plot_left_censoring": {
  "lineno": 594,
  "symbols_in_volume": [
   "lifelines.ExponentialFitter",
   "lifelines.LogLogisticFitter",
   "lifelines.LogNormalFitter",
   "lifelines.WeibullFitter",
   "lifelines.datasets.load_nh4",
   "lifelines.plotting.qq_plot"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_qq_plot_left_censoring2": {
  "lineno": 605,
  "symbols_in_volume": [
   "lifelines.ExponentialFitter",
   "lifelines.LogLogisticFitter",
   "lifelines.LogNormalFitter",
   "lifelines.WeibullFitter",
   "lifelines.datasets.load_lcd",
   "lifelines.plotting.qq_plot"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_qq_plot_left_censoring_with_known_distribution": {
  "lineno": 616,
  "symbols_in_volume": [
   "lifelines.ExponentialFitter",
   "lifelines.LogLogisticFitter",
   "lifelines.LogNormalFitter",
   "lifelines.WeibullFitter",
   "lifelines.plotting.qq_plot",
   "numpy.maximum",
   "numpy.percentile",
   "numpy.random.randint",
   "numpy.where",
   "scipy.stats.fisk"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_qq_plot_right_censoring_with_known_distribution": {
  "lineno": 639,
  "symbols_in_volume": [
   "lifelines.ExponentialFitter",
   "lifelines.LogLogisticFitter",
   "lifelines.LogNormalFitter",
   "lifelines.WeibullFitter",
   "lifelines.plotting.qq_plot",
   "numpy.minimum",
   "scipy.stats.fisk"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_right_censorship_cdf_plots": {
  "lineno": 583,
  "symbols_in_volume": [
   "lifelines.ExponentialFitter",
   "lifelines.LogLogisticFitter",
   "lifelines.LogNormalFitter",
   "lifelines.WeibullFitter",
   "lifelines.datasets.load_rossi",
   "lifelines.plotting.cdf_plot"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_rmst_plot_with_single_model": {
  "lineno": 655,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "lifelines.datasets.load_waltons",
   "lifelines.plotting.rmst_plot"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_rmst_plot_with_two_model": {
  "lineno": 663,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "lifelines.datasets.load_waltons",
   "lifelines.plotting.rmst_plot"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_seaborn_doesnt_cause_kmf_plot_error": {
  "lineno": 364,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "lifelines.datasets.load_waltons"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_show_censor_with_discrete_date": {
  "lineno": 326,
  "symbols_in_volume": [
   "numpy.random.binomial"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_show_censor_with_index_0": {
  "lineno": 334,
  "symbols_in_volume": [
   "numpy.random.binomial"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_weibull_aft_plot_covariate_groups": {
  "lineno": 554,
  "symbols_in_volume": [
   "lifelines.WeibullAFTFitter",
   "lifelines.datasets.load_rossi"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_weibull_aft_plot_covariate_groups_with_multiple_columns": {
  "lineno": 563,
  "symbols_in_volume": [
   "lifelines.WeibullAFTFitter",
   "lifelines.datasets.load_rossi"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_weibull_aft_plotting": {
  "lineno": 536,
  "symbols_in_volume": [
   "lifelines.WeibullAFTFitter",
   "lifelines.datasets.load_regression_dataset"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_weibull_aft_plotting_with_subset_of_columns": {
  "lineno": 545,
  "symbols_in_volume": [
   "lifelines.WeibullAFTFitter",
   "lifelines.datasets.load_regression_dataset"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_weibull_plotting": {
  "lineno": 285,
  "symbols_in_volume": [
   "lifelines.WeibullFitter",
   "numpy.linspace",
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "lifelines.tests.test_plotting.waltons": {
  "lineno": 39,
  "symbols_in_volume": [
   "lifelines.datasets.load_waltons",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "lifelines.tests.test_requirements": {
  "lineno": null,
  "symbols_in_volume": [
   "pathlib.Path"
  ],
  "type": "module"
 },
 "lifelines.tests.test_requirements.TestRequirements": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.tests.test_requirements.TestRequirements.test_requirements": {
  "lineno": 13,
  "symbols_in_volume": [
   "pkg_resources.require"
  ],
  "type": "function"
 },
 "lifelines.tests.test_statistics": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.tests.test_statistics.test_StatisticalResult_can_be_added": {
  "lineno": 215,
  "symbols_in_volume": [
   "lifelines.statistics.StatisticalResult"
  ],
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_StatisticalResult_can_be_printed": {
  "lineno": 227,
  "symbols_in_volume": [
   "lifelines.statistics.StatisticalResult"
  ],
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_StatisticalResult_kwargs": {
  "lineno": 207,
  "symbols_in_volume": [
   "lifelines.statistics.StatisticalResult"
  ],
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_equal_intensity_with_negative_data": {
  "lineno": 122,
  "symbols_in_volume": [
   "lifelines.statistics.logrank_test",
   "numpy.random.normal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_integer_times_logrank_test": {
  "lineno": 115,
  "symbols_in_volume": [
   "lifelines.statistics.logrank_test",
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_load_lymphoma_logrank": {
  "lineno": 72,
  "symbols_in_volume": [
   "lifelines.datasets.load_lymphoma",
   "lifelines.statistics.multivariate_logrank_test"
  ],
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_log_rank_returns_None_if_equal_arrays": {
  "lineno": 182,
  "symbols_in_volume": [
   "lifelines.statistics.logrank_test",
   "numpy.random.binomial",
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_log_rank_test_on_waltons_dataset": {
  "lineno": 140,
  "symbols_in_volume": [
   "lifelines.datasets.load_waltons",
   "lifelines.statistics.logrank_test"
  ],
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_logrank_test_is_symmetric": {
  "lineno": 149,
  "symbols_in_volume": [
   "lifelines.statistics.logrank_test",
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_logrank_test_output_against_R_1": {
  "lineno": 32,
  "symbols_in_volume": [
   "lifelines.datasets.load_g3",
   "lifelines.statistics.logrank_test"
  ],
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_logrank_test_output_against_R_2": {
  "lineno": 43,
  "symbols_in_volume": [
   "lifelines.statistics.logrank_test",
   "numpy.ones_like"
  ],
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_multivariate_log_rank_is_identital_to_log_rank_for_n_equals_2": {
  "lineno": 192,
  "symbols_in_volume": [
   "lifelines.statistics.logrank_test",
   "lifelines.statistics.multivariate_logrank_test",
   "numpy.array",
   "numpy.r_",
   "numpy.random.binomial",
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_multivariate_logrank_on_dd_dataset": {
  "lineno": 80,
  "symbols_in_volume": [
   "lifelines.datasets.load_dd",
   "lifelines.statistics.multivariate_logrank_test"
  ],
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_multivariate_unequal_intensities": {
  "lineno": 157,
  "symbols_in_volume": [
   "lifelines.statistics.multivariate_logrank_test",
   "numpy.random.binomial",
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_pairwise_allows_dataframes_and_gives_correct_counts": {
  "lineno": 171,
  "symbols_in_volume": [
   "lifelines.statistics.pairwise_logrank_test",
   "numpy.arange",
   "numpy.empty",
   "numpy.random.binomial",
   "numpy.random.exponential",
   "numpy.tile",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_pairwise_waltons_dataset_is_significantly_different": {
  "lineno": 165,
  "symbols_in_volume": [
   "lifelines.datasets.load_waltons",
   "lifelines.statistics.pairwise_logrank_test"
  ],
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_power_under_cph": {
  "lineno": 20,
  "symbols_in_volume": [
   "lifelines.statistics.power_under_cph"
  ],
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_proportional_hazard_test": {
  "lineno": 235,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.datasets.load_regression_dataset",
   "lifelines.statistics.proportional_hazard_test",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_proportional_hazard_test_with_all": {
  "lineno": 419,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.statistics.proportional_hazard_test",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_proportional_hazard_test_with_kmf": {
  "lineno": 330,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.statistics.proportional_hazard_test",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_proportional_hazard_test_with_kmf_with_some_censorship": {
  "lineno": 359,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.statistics.proportional_hazard_test",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_proportional_hazard_test_with_kmf_with_some_censorship_and_weights": {
  "lineno": 388,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.statistics.proportional_hazard_test",
   "lifelines.utils.StatisticalWarning",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame",
   "pytest.warns"
  ],
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_proportional_hazard_test_with_list": {
  "lineno": 435,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.statistics.proportional_hazard_test",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_proportional_hazard_test_with_log_transform": {
  "lineno": 251,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.datasets.load_regression_dataset",
   "lifelines.statistics.proportional_hazard_test",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_proportional_hazard_test_with_weights": {
  "lineno": 263,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.statistics.proportional_hazard_test",
   "lifelines.utils.StatisticalWarning",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame",
   "pytest.warns"
  ],
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_proportional_hazard_test_with_weights_and_strata": {
  "lineno": 296,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.statistics.proportional_hazard_test",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_rank_test_output_against_R_no_censorship": {
  "lineno": 58,
  "symbols_in_volume": [
   "lifelines.statistics.multivariate_logrank_test"
  ],
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_rank_test_output_against_R_with_censorship": {
  "lineno": 92,
  "symbols_in_volume": [
   "lifelines.statistics.multivariate_logrank_test"
  ],
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_sample_size_necessary_under_cph": {
  "lineno": 13,
  "symbols_in_volume": [
   "lifelines.statistics.sample_size_necessary_under_cph"
  ],
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_survival_difference_at_fixed_point_in_time_test": {
  "lineno": 452,
  "symbols_in_volume": [
   "lifelines.datasets.load_waltons",
   "lifelines.statistics.survival_difference_at_fixed_point_in_time_test"
  ],
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_unequal_intensity_event_observed": {
  "lineno": 106,
  "symbols_in_volume": [
   "lifelines.statistics.logrank_test",
   "numpy.random.binomial",
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_unequal_intensity_with_negative_data": {
  "lineno": 133,
  "symbols_in_volume": [
   "lifelines.statistics.logrank_test",
   "numpy.random.normal"
  ],
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_unequal_intensity_with_random_data": {
  "lineno": 25,
  "symbols_in_volume": [
   "lifelines.statistics.logrank_test",
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "lifelines.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.utils.ApproximationWarning": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.utils.CensoringType": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.utils.CensoringType.get_human_readable_censoring_type": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.CensoringType.interval_censoring": {
  "lineno": 63,
  "symbols_in_volume": [
   "typing.Callable"
  ],
  "type": "function"
 },
 "lifelines.utils.CensoringType.interval_censoring.f": {
  "lineno": 65,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "lifelines.utils.CensoringType.is_interval_censoring": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.CensoringType.is_left_censoring": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.CensoringType.is_right_censoring": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.CensoringType.left_censoring": {
  "lineno": 54,
  "symbols_in_volume": [
   "typing.Callable"
  ],
  "type": "function"
 },
 "lifelines.utils.CensoringType.left_censoring.f": {
  "lineno": 56,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "lifelines.utils.CensoringType.right_censoring": {
  "lineno": 45,
  "symbols_in_volume": [
   "typing.Callable"
  ],
  "type": "function"
 },
 "lifelines.utils.CensoringType.right_censoring.f": {
  "lineno": 47,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "lifelines.utils.ConvergenceError": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.utils.ConvergenceError.__init__": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.ConvergenceWarning": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.utils.DataframeSliceDict": {
  "lineno": 1649,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.utils.DataframeSliceDict.__getitem__": {
  "lineno": 1655,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.DataframeSliceDict.__init__": {
  "lineno": 1650,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.DataframeSliceDict.__iter__": {
  "lineno": 1662,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.DataframeSliceDict.filter": {
  "lineno": 1666,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.DataframeSliceDict.iterdicts": {
  "lineno": 1670,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.StatError": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.utils.StatisticalWarning": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.utils.StepSizer": {
  "lineno": 1498,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.utils.StepSizer.__init__": {
  "lineno": 1511,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "lifelines.utils.StepSizer._is_monotonically_decreasing": {
  "lineno": 1549,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.diff",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "lifelines.utils.StepSizer.next": {
  "lineno": 1553,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.StepSizer.update": {
  "lineno": 1519,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils._additive_estimate": {
  "lineno": 876,
  "symbols_in_volume": [
   "numpy.cumsum"
  ],
  "type": "function"
 },
 "lifelines.utils._expected_value_of_survival_squared_up_to_t": {
  "lineno": 297,
  "symbols_in_volume": [
   "lifelines.fitters.UnivariateFitter",
   "numpy.inf",
   "pandas.DataFrame",
   "scipy.integrate.quad",
   "scipy.integrate.trapz"
  ],
  "type": "function"
 },
 "lifelines.utils._expected_value_of_survival_up_to_t": {
  "lineno": 270,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "lifelines.fitters.UnivariateFitter",
   "numpy.inf",
   "pandas.DataFrame",
   "scipy.integrate.quad",
   "scipy.integrate.trapz",
   "warnings.warn"
  ],
  "type": "function"
 },
 "lifelines.utils._get_index": {
  "lineno": 942,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "typing.Any",
   "typing.List"
  ],
  "type": "function"
 },
 "lifelines.utils._group_event_table_by_intervals": {
  "lineno": 548,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.percentile",
   "pandas.DataFrame",
   "pandas.cut"
  ],
  "type": "function"
 },
 "lifelines.utils._low_var": {
  "lineno": 1072,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils._preprocess_inputs": {
  "lineno": 912,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.ones",
   "numpy.ones_like"
  ],
  "type": "function"
 },
 "lifelines.utils._to_1d_array": {
  "lineno": 1557,
  "symbols_in_volume": [
   "numpy.atleast_1d"
  ],
  "type": "function"
 },
 "lifelines.utils._to_list": {
  "lineno": 1567,
  "symbols_in_volume": [
   "typing.Any",
   "typing.List"
  ],
  "type": "function"
 },
 "lifelines.utils._to_tuple": {
  "lineno": 1573,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "lifelines.utils.add_covariate_to_timeline": {
  "lineno": 1310,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.utils.add_covariate_to_timeline.expand": {
  "lineno": 1392,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "lifelines.utils.add_covariate_to_timeline.remove_redundant_rows": {
  "lineno": 1371,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.add_covariate_to_timeline.transform_cv_to_long_format": {
  "lineno": 1389,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.btree": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.utils.btree._BTree": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.utils.btree._BTree.__init__": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "lifelines.utils.btree._BTree.__len__": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.btree._BTree._treeify": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.delete",
   "numpy.empty_like",
   "numpy.log2",
   "numpy.s_"
  ],
  "type": "function"
 },
 "lifelines.utils.btree._BTree.insert": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.btree._BTree.rank": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.check_complete_separation": {
  "lineno": 1149,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.utils.check_complete_separation_close_to_perfect_correlation": {
  "lineno": 1119,
  "symbols_in_volume": [
   "numpy.errstate",
   "pandas.DataFrame",
   "pandas.Series",
   "textwrap.dedent",
   "warnings.warn"
  ],
  "type": "function"
 },
 "lifelines.utils.check_complete_separation_low_variance": {
  "lineno": 1089,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.DataFrame",
   "textwrap.dedent",
   "warnings.warn"
  ],
  "type": "function"
 },
 "lifelines.utils.check_entry_times": {
  "lineno": 1113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.check_for_immediate_deaths": {
  "lineno": 993,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "lifelines.utils.check_for_instantaneous_events_at_death_time": {
  "lineno": 1022,
  "symbols_in_volume": [
   "textwrap.dedent",
   "warnings.warn"
  ],
  "type": "function"
 },
 "lifelines.utils.check_for_instantaneous_events_at_time_zero": {
  "lineno": 1008,
  "symbols_in_volume": [
   "textwrap.dedent",
   "warnings.warn"
  ],
  "type": "function"
 },
 "lifelines.utils.check_for_numeric_dtypes_or_raise": {
  "lineno": 982,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.check_for_overlapping_intervals": {
  "lineno": 1053,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.check_low_var": {
  "lineno": 1076,
  "symbols_in_volume": [
   "textwrap.dedent",
   "warnings.warn"
  ],
  "type": "function"
 },
 "lifelines.utils.check_nans_or_infs": {
  "lineno": 1154,
  "symbols_in_volume": [
   "numpy.isinf",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.isnull",
   "warnings.warn"
  ],
  "type": "function"
 },
 "lifelines.utils.check_positivity": {
  "lineno": 1065,
  "symbols_in_volume": [
   "numpy.any"
  ],
  "type": "function"
 },
 "lifelines.utils.coalesce": {
  "lineno": 694,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Optional"
  ],
  "type": "function"
 },
 "lifelines.utils.concordance": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.utils.concordance._concordance_ratio": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.concordance._concordance_summary_statistics": {
  "lineno": 67,
  "symbols_in_volume": [
   "lifelines.utils.btree._BTree",
   "numpy.argsort",
   "numpy.int64",
   "numpy.logical_not",
   "numpy.unique"
  ],
  "type": "function"
 },
 "lifelines.utils.concordance._handle_pairs": {
  "lineno": 157,
  "symbols_in_volume": [
   "numpy.int64"
  ],
  "type": "function"
 },
 "lifelines.utils.concordance._naive_concordance_summary_statistics": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.concordance._naive_concordance_summary_statistics._concordance_value": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.concordance._naive_concordance_summary_statistics._valid_comparison": {
  "lineno": 188,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.concordance._preprocess_scoring_data": {
  "lineno": 241,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.isnan",
   "numpy.ones"
  ],
  "type": "function"
 },
 "lifelines.utils.concordance.concordance_index": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.concordance.naive_concordance_index": {
  "lineno": 232,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.covariates_from_event_matrix": {
  "lineno": 1451,
  "symbols_in_volume": [
   "numpy.inf",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.utils.datetimes_to_durations": {
  "lineno": 633,
  "symbols_in_volume": [
   "datetime.datetime.today",
   "pandas.Series",
   "pandas.isnull",
   "pandas.to_datetime",
   "warnings.warn"
  ],
  "type": "function"
 },
 "lifelines.utils.epanechnikov_kernel": {
  "lineno": 827,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.find_best_parametric_model": {
  "lineno": 1675,
  "symbols_in_volume": [
   "lifelines.ExponentialFitter",
   "lifelines.GeneralizedGammaFitter",
   "lifelines.LogLogisticFitter",
   "lifelines.LogNormalFitter",
   "lifelines.PiecewiseExponentialFitter",
   "lifelines.SplineFitter",
   "lifelines.WeibullFitter",
   "numpy.inf",
   "numpy.linspace",
   "numpy.log",
   "numpy.ones_like",
   "numpy.percentile",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "lifelines.utils.format_exp_floats": {
  "lineno": 1584,
  "symbols_in_volume": [
   "typing.Callable"
  ],
  "type": "function"
 },
 "lifelines.utils.format_floats": {
  "lineno": 1594,
  "symbols_in_volume": [
   "typing.Callable"
  ],
  "type": "function"
 },
 "lifelines.utils.format_p_value": {
  "lineno": 1579,
  "symbols_in_volume": [
   "typing.Callable"
  ],
  "type": "function"
 },
 "lifelines.utils.group_survival_table_from_events": {
  "lineno": 335,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.max",
   "numpy.min",
   "numpy.zeros",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.utils.interpolate_at_times": {
  "lineno": 1606,
  "symbols_in_volume": [
   "numpy.interp",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "lifelines.utils.interpolate_at_times_and_return_pandas": {
  "lineno": 1624,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "typing.Union"
  ],
  "type": "function"
 },
 "lifelines.utils.inv_normal_cdf": {
  "lineno": 701,
  "symbols_in_volume": [
   "scipy.stats.norm.ppf"
  ],
  "type": "function"
 },
 "lifelines.utils.k_fold_cross_validation": {
  "lineno": 705,
  "symbols_in_volume": [
   "lifelines.utils.concordance.concordance_index",
   "numpy.array",
   "numpy.random.permutation"
  ],
  "type": "function"
 },
 "lifelines.utils.leading_space": {
  "lineno": 1598,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.lowess": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.utils.lowess.lowess": {
  "lineno": 26,
  "symbols_in_volume": [
   "math.ceil",
   "numpy.abs",
   "numpy.array",
   "numpy.clip",
   "numpy.median",
   "numpy.ones",
   "numpy.sort",
   "numpy.sum",
   "numpy.zeros",
   "scipy.linalg.solve"
  ],
  "type": "function"
 },
 "lifelines.utils.map_leading_space": {
  "lineno": 1602,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "lifelines.utils.median_survival_times": {
  "lineno": 203,
  "symbols_in_volume": [
   "lifelines.fitters.UnivariateFitter",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.utils.normalize": {
  "lineno": 808,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.pass_for_numeric_dtypes_or_raise_array": {
  "lineno": 954,
  "symbols_in_volume": [
   "numpy.asarray",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.to_numeric"
  ],
  "type": "function"
 },
 "lifelines.utils.pearson_correlation": {
  "lineno": 1109,
  "symbols_in_volume": [
   "numpy.ndarray",
   "scipy.stats.pearsonr"
  ],
  "type": "function"
 },
 "lifelines.utils.printer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.utils.printer.Printer": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.utils.printer.Printer.__init__": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.printer.Printer.add_to_headers": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.printer.Printer.ascii_print": {
  "lineno": 107,
  "symbols_in_volume": [
   "lifelines.utils.CensoringType.is_right_censoring",
   "lifelines.utils.format_exp_floats",
   "lifelines.utils.format_floats",
   "lifelines.utils.format_p_value",
   "lifelines.utils.leading_space",
   "lifelines.utils.map_leading_space",
   "numpy.errstate",
   "numpy.log2"
  ],
  "type": "function"
 },
 "lifelines.utils.printer.Printer.html_print": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.printer.Printer.html_print_inside_jupyter": {
  "lineno": 52,
  "symbols_in_volume": [
   "IPython.display.HTML",
   "IPython.display.display"
  ],
  "type": "function"
 },
 "lifelines.utils.printer.Printer.latex_print": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.printer.Printer.print": {
  "lineno": 31,
  "symbols_in_volume": [
   "IPython.core.getipython.get_ipython"
  ],
  "type": "function"
 },
 "lifelines.utils.printer.Printer.print_specific_style": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.printer.Printer.to_html": {
  "lineno": 60,
  "symbols_in_volume": [
   "lifelines.utils.CensoringType.is_right_censoring",
   "lifelines.utils.format_exp_floats",
   "lifelines.utils.format_floats",
   "lifelines.utils.format_p_value",
   "numpy.errstate",
   "numpy.log2",
   "pandas.DataFrame.from_records"
  ],
  "type": "function"
 },
 "lifelines.utils.printer.Printer.to_latex": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.qth_survival_time": {
  "lineno": 166,
  "symbols_in_volume": [
   "lifelines.fitters.UnivariateFitter",
   "numpy.inf",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.utils.qth_survival_times": {
  "lineno": 117,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "typing.Union"
  ],
  "type": "function"
 },
 "lifelines.utils.restricted_mean_survival_time": {
  "lineno": 223,
  "symbols_in_volume": [
   "numpy.inf"
  ],
  "type": "function"
 },
 "lifelines.utils.ridge_regression": {
  "lineno": 833,
  "symbols_in_volume": [
   "numpy.c_",
   "numpy.dot",
   "numpy.eye",
   "scipy.linalg.solve"
  ],
  "type": "function"
 },
 "lifelines.utils.safe_exp": {
  "lineno": null,
  "symbols_in_volume": [
   "autograd.extend.defvjp",
   "autograd.numpy.finfo",
   "autograd.numpy.log"
  ],
  "type": "module"
 },
 "lifelines.utils.safe_exp.safe_exp": {
  "lineno": 95,
  "symbols_in_volume": [
   "autograd.extend.primitive",
   "autograd.numpy.clip",
   "autograd.numpy.exp",
   "autograd.numpy.inf"
  ],
  "type": "function"
 },
 "lifelines.utils.safe_exp.safe_exp_vjp": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.safe_zip": {
  "lineno": 1640,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.sklearn_adapter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.utils.sklearn_adapter._SklearnModel": {
  "lineno": 20,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.MetaEstimatorMixin",
   "sklearn.base.RegressorMixin"
  ],
  "type": "class"
 },
 "lifelines.utils.sklearn_adapter._SklearnModel.__init__": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.sklearn_adapter._SklearnModel._eventColumn": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.sklearn_adapter._SklearnModel._yColumn": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.sklearn_adapter._SklearnModel.fit": {
  "lineno": 35,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.utils.sklearn_adapter._SklearnModel.get_params": {
  "lineno": 62,
  "symbols_in_volume": [
   "inspect.signature"
  ],
  "type": "function"
 },
 "lifelines.utils.sklearn_adapter._SklearnModel.predict": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.sklearn_adapter._SklearnModel.score": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.sklearn_adapter._SklearnModel.set_params": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.sklearn_adapter.filter_kwargs": {
  "lineno": 14,
  "symbols_in_volume": [
   "inspect.signature"
  ],
  "type": "function"
 },
 "lifelines.utils.sklearn_adapter.sklearn_adapter": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.survival_events_from_table": {
  "lineno": 571,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "lifelines.utils.survival_table_from_events": {
  "lineno": 445,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.asarray",
   "numpy.ones",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.utils.to_episodic_format": {
  "lineno": 1178,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ceil",
   "numpy.empty",
   "numpy.tile",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.utils.to_long_format": {
  "lineno": 1285,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.utils.unnormalize": {
  "lineno": 819,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 }
}