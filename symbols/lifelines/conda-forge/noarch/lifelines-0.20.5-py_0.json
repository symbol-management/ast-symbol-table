{
 "lifelines": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.datasets": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.datasets._load_dataset": {
  "lineno": 6,
  "symbols_in_volume": [
   "pandas.read_csv",
   "pkg_resources.resource_filename"
  ],
  "type": "function"
 },
 "lifelines.datasets.dfcv_dataset": {
  "lineno": null,
  "symbols_in_volume": [
   "lifelines.utils.add_covariate_to_timeline",
   "lifelines.utils.to_long_format",
   "pandas.DataFrame",
   "pandas.DataFrame.from_records"
  ],
  "type": "module"
 },
 "lifelines.datasets.load_canadian_senators": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.datasets.load_dd": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.datasets.load_dfcv": {
  "lineno": 443,
  "symbols_in_volume": [
   "lifelines.datasets.dfcv_dataset.dfcv.copy"
  ],
  "type": "function"
 },
 "lifelines.datasets.load_g3": {
  "lineno": 375,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.datasets.load_gbsg2": {
  "lineno": 417,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.datasets.load_holly_molly_polly": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.datasets.load_kidney_transplant": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.datasets.load_larynx": {
  "lineno": 184,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.datasets.load_lcd": {
  "lineno": 274,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.datasets.load_leukemia": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.datasets.load_lung": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.datasets.load_lymphoma": {
  "lineno": 467,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.datasets.load_multicenter_aids_cohort_study": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.datasets.load_nh4": {
  "lineno": 297,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.datasets.load_panel_test": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.datasets.load_psychiatric_patients": {
  "lineno": 239,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.datasets.load_recur": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.datasets.load_regression_dataset": {
  "lineno": 357,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.datasets.load_rossi": {
  "lineno": 332,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.datasets.load_stanford_heart_transplants": {
  "lineno": 393,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.datasets.load_static_test": {
  "lineno": 256,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.datasets.load_waltons": {
  "lineno": 315,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters": {
  "lineno": null,
  "symbols_in_volume": [
   "warnings.simplefilter"
  ],
  "type": "module"
 },
 "lifelines.fitters.BaseFitter": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.fitters.BaseFitter.__init__": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.BaseFitter.__repr__": {
  "lineno": 74,
  "symbols_in_volume": [
   "numpy.where"
  ],
  "type": "function"
 },
 "lifelines.fitters.KnownModelParametericUnivariateFitter": {
  "lineno": 894,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter": {
  "lineno": 899,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter.__init__": {
  "lineno": 900,
  "symbols_in_volume": [
   "autograd.elementwise_grad"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter._check_values": {
  "lineno": 1119,
  "symbols_in_volume": [
   "lifelines.utils.StatisticalWarning",
   "lifelines.utils.check_complete_separation",
   "lifelines.utils.check_for_numeric_dtypes_or_raise",
   "lifelines.utils.check_low_var",
   "lifelines.utils.check_nans_or_infs",
   "lifelines.utils.check_positivity",
   "textwrap.dedent",
   "warnings.warn"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter._compute_confidence_intervals": {
  "lineno": 1268,
  "symbols_in_volume": [
   "lifelines.utils.inv_normal_cdf",
   "numpy.c_",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter._compute_likelihood_ratio_test": {
  "lineno": 1295,
  "symbols_in_volume": [
   "lifelines.statistics.chisq_test",
   "numpy.errstate",
   "numpy.log2"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter._compute_p_values": {
  "lineno": 1242,
  "symbols_in_volume": [
   "scipy.stats.chi2.sf"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter._compute_sandwich_errors": {
  "lineno": 1253,
  "symbols_in_volume": [
   "autograd.grad",
   "numpy.errstate",
   "numpy.outer",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter._compute_standard_errors": {
  "lineno": 1246,
  "symbols_in_volume": [
   "numpy.sqrt",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter._compute_variance_matrix": {
  "lineno": 1221,
  "symbols_in_volume": [
   "lifelines.utils.StatisticalWarning",
   "numpy.linalg.LinAlgError",
   "numpy.linalg.inv",
   "numpy.linalg.pinv",
   "numpy.outer",
   "textwrap.dedent",
   "warnings.warn"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter._compute_z_values": {
  "lineno": 1239,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter._create_initial_point": {
  "lineno": 1148,
  "symbols_in_volume": [
   "lifelines",
   "numpy.concatenate"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter._create_initial_point.transform_ith_param": {
  "lineno": 1154,
  "symbols_in_volume": [
   "numpy.log"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter._create_slicer": {
  "lineno": 1211,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter._fit_model": {
  "lineno": 1175,
  "symbols_in_volume": [
   "autograd.hessian",
   "autograd.value_and_grad",
   "lifelines.utils.ConvergenceError",
   "scipy.optimize.minimize",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter._ll_null": {
  "lineno": 1276,
  "symbols_in_volume": [
   "numpy.zeros",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter._log_hazard": {
  "lineno": 908,
  "symbols_in_volume": [
   "autograd.numpy.clip",
   "autograd.numpy.log",
   "numpy.inf"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter._negative_log_likelihood": {
  "lineno": 914,
  "symbols_in_volume": [
   "autograd.numpy.abs",
   "numpy.sum",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter._prep_inputs_for_prediction_and_return_scores": {
  "lineno": 1634,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.exp",
   "numpy.ones",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter.fit": {
  "lineno": 933,
  "symbols_in_volume": [
   "datetime.datetime.utcnow",
   "lifelines.utils.check_for_numeric_dtypes_or_raise",
   "lifelines.utils.check_nans_or_infs",
   "lifelines.utils.normalize",
   "lifelines.utils.pass_for_numeric_dtypes_or_raise_array",
   "numpy.append",
   "numpy.ones",
   "numpy.zeros",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter.mean_survival_time_": {
  "lineno": 1476,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter.median_survival_time_": {
  "lineno": 1470,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter.plot": {
  "lineno": 1482,
  "symbols_in_volume": [
   "lifelines.plotting.set_kwargs_ax",
   "lifelines.utils.inv_normal_cdf",
   "matplotlib.pyplot.xlabel",
   "matplotlib.pyplot.yticks",
   "pandas.MultiIndex"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter.plot_covariate_groups": {
  "lineno": 1551,
  "symbols_in_volume": [
   "lifelines.utils._to_array",
   "lifelines.utils._to_list",
   "matplotlib.pyplot.figure",
   "numpy.array_equal",
   "numpy.eye",
   "pandas.concat"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter.predict_median": {
  "lineno": 1423,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter.predict_survival_function": {
  "lineno": 1394,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter.print_summary": {
  "lineno": 1334,
  "symbols_in_volume": [
   "lifelines.utils.format_exp_floats",
   "lifelines.utils.format_floats",
   "lifelines.utils.format_p_value",
   "lifelines.utils.string_justify"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter.score_": {
  "lineno": 1453,
  "symbols_in_volume": [
   "lifelines.utils.concordance_index"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter.summary": {
  "lineno": 1313,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.exp",
   "numpy.log2",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter": {
  "lineno": 281,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.fitters.ParametericUnivariateFitter.__init__": {
  "lineno": 290,
  "symbols_in_volume": [
   "autograd.elementwise_grad",
   "numpy.array"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter._buffer_bounds": {
  "lineno": 361,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter._check_cumulative_hazard_is_monotone_and_positive": {
  "lineno": 311,
  "symbols_in_volume": [
   "lifelines.utils.StatisticalWarning",
   "numpy.all",
   "textwrap.dedent",
   "warnings.warn"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter._compute_confidence_bounds_of_cumulative_hazard": {
  "lineno": 410,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter._compute_confidence_bounds_of_parameters": {
  "lineno": 527,
  "symbols_in_volume": [
   "lifelines.utils.inv_normal_cdf",
   "numpy.c_",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter._compute_confidence_bounds_of_transform": {
  "lineno": 413,
  "symbols_in_volume": [
   "autograd.differential_operators.make_jvp_reversemode",
   "lifelines.utils.inv_normal_cdf",
   "numpy.einsum",
   "numpy.eye",
   "numpy.sqrt",
   "numpy.vstack",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter._compute_p_values": {
  "lineno": 515,
  "symbols_in_volume": [
   "scipy.stats.chi2.sf"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter._compute_standard_errors": {
  "lineno": 522,
  "symbols_in_volume": [
   "numpy.sqrt",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter._compute_z_values": {
  "lineno": 536,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter._cumulative_density": {
  "lineno": 378,
  "symbols_in_volume": [
   "autograd.numpy.exp"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter._cumulative_hazard": {
  "lineno": 372,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter._estimation_method": {
  "lineno": 519,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter._fit_model": {
  "lineno": 456,
  "symbols_in_volume": [
   "autograd.hessian",
   "autograd.value_and_grad",
   "lifelines.utils.ConvergenceError",
   "scipy.optimize.minimize",
   "textwrap.dedent",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter._initial_values_from_bounds": {
  "lineno": 350,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter._log_1m_sf": {
  "lineno": 386,
  "symbols_in_volume": [
   "autograd.numpy.exp",
   "autograd.numpy.log1p"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter._log_hazard": {
  "lineno": 381,
  "symbols_in_volume": [
   "autograd.numpy.clip",
   "autograd.numpy.log",
   "numpy.inf"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter._negative_log_likelihood_left_censoring": {
  "lineno": 391,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter._negative_log_likelihood_right_censoring": {
  "lineno": 402,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter._survival_function": {
  "lineno": 375,
  "symbols_in_volume": [
   "autograd.numpy.exp"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter.confidence_interval_": {
  "lineno": 811,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter.confidence_interval_cumulative_density_": {
  "lineno": 843,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter.confidence_interval_cumulative_hazard_": {
  "lineno": 819,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter.confidence_interval_hazard_": {
  "lineno": 827,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter.confidence_interval_survival_function_": {
  "lineno": 835,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter.cumulative_density_at_times": {
  "lineno": 742,
  "symbols_in_volume": [
   "lifelines.utils._to_array",
   "lifelines.utils.coalesce",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter.cumulative_hazard_at_times": {
  "lineno": 762,
  "symbols_in_volume": [
   "lifelines.utils._to_array",
   "lifelines.utils.coalesce",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter.fit": {
  "lineno": 610,
  "symbols_in_volume": [
   "lifelines.utils.StatisticalWarning",
   "lifelines.utils.check_nans_or_infs",
   "lifelines.utils.check_positivity",
   "lifelines.utils.coalesce",
   "lifelines.utils.pass_for_numeric_dtypes_or_raise_array",
   "numpy.asarray",
   "numpy.linalg.LinAlgError",
   "numpy.linalg.inv",
   "numpy.linalg.pinv",
   "numpy.linspace",
   "numpy.ones_like",
   "numpy.sort",
   "numpy.zeros_like",
   "textwrap.dedent",
   "warnings.warn"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter.hazard_at_times": {
  "lineno": 782,
  "symbols_in_volume": [
   "lifelines.utils._to_array",
   "lifelines.utils.coalesce",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter.median_": {
  "lineno": 802,
  "symbols_in_volume": [
   "lifelines.utils.median_survival_times"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter.plot": {
  "lineno": 851,
  "symbols_in_volume": [
   "lifelines.plotting._plot_estimate",
   "lifelines.plotting.set_kwargs_drawstyle"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter.plot_cumulative_density": {
  "lineno": 876,
  "symbols_in_volume": [
   "lifelines.plotting._plot_estimate",
   "lifelines.plotting.set_kwargs_drawstyle"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter.plot_cumulative_hazard": {
  "lineno": 861,
  "symbols_in_volume": [
   "lifelines.plotting.set_kwargs_drawstyle"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter.plot_hazard": {
  "lineno": 886,
  "symbols_in_volume": [
   "lifelines.plotting._plot_estimate",
   "lifelines.plotting.set_kwargs_drawstyle"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter.plot_survival_function": {
  "lineno": 866,
  "symbols_in_volume": [
   "lifelines.plotting._plot_estimate",
   "lifelines.plotting.set_kwargs_drawstyle"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter.print_summary": {
  "lineno": 566,
  "symbols_in_volume": [
   "lifelines.utils.format_exp_floats",
   "lifelines.utils.format_floats",
   "lifelines.utils.format_p_value",
   "lifelines.utils.string_justify",
   "numpy.where"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter.summary": {
  "lineno": 539,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.log2",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter.survival_function_at_times": {
  "lineno": 722,
  "symbols_in_volume": [
   "lifelines.utils._to_array",
   "lifelines.utils.coalesce",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.fitters.UnivariateFitter": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.fitters.UnivariateFitter._conditional_time_to_event_": {
  "lineno": 221,
  "symbols_in_volume": [
   "lifelines.utils.qth_survival_times",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.UnivariateFitter._update_docstrings": {
  "lineno": 88,
  "symbols_in_volume": [
   "lifelines.plotting._plot_estimate.__doc__.format"
  ],
  "type": "function"
 },
 "lifelines.fitters.UnivariateFitter.conditional_time_to_event_": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.UnivariateFitter.cumulative_density_at_times": {
  "lineno": 260,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.UnivariateFitter.cumulative_hazard_at_times": {
  "lineno": 256,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.UnivariateFitter.divide": {
  "lineno": 163,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.unique",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.UnivariateFitter.hazard_at_times": {
  "lineno": 248,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.UnivariateFitter.plot": {
  "lineno": 96,
  "symbols_in_volume": [
   "lifelines.plotting._plot_estimate"
  ],
  "type": "function"
 },
 "lifelines.fitters.UnivariateFitter.plot_cumulative_density": {
  "lineno": 276,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.UnivariateFitter.plot_cumulative_hazard": {
  "lineno": 264,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.UnivariateFitter.plot_hazard": {
  "lineno": 272,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.UnivariateFitter.plot_survival_function": {
  "lineno": 268,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.UnivariateFitter.predict": {
  "lineno": 185,
  "symbols_in_volume": [
   "lifelines.utils._to_array",
   "lifelines.utils.dataframe_interpolate_at_times",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.UnivariateFitter.subtract": {
  "lineno": 143,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.unique",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.UnivariateFitter.survival_function_at_times": {
  "lineno": 252,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters._must_call_fit_first": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters._must_call_fit_first.error_wrapper": {
  "lineno": 56,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter": {
  "lineno": 37,
  "symbols_in_volume": [
   "lifelines.fitters.BaseFitter"
  ],
  "type": "class"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter.__init__": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter._check_values": {
  "lineno": 335,
  "symbols_in_volume": [
   "lifelines.utils.check_for_numeric_dtypes_or_raise",
   "lifelines.utils.check_nans_or_infs"
  ],
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter._compute_confidence_intervals": {
  "lineno": 404,
  "symbols_in_volume": [
   "lifelines.utils.inv_normal_cdf",
   "numpy.sqrt",
   "pandas.concat"
  ],
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter._compute_slopes": {
  "lineno": 499,
  "symbols_in_volume": [
   "lifelines.utils.survival_table_from_events",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter._compute_slopes._univariate_linear_regression_without_intercept": {
  "lineno": 500,
  "symbols_in_volume": [
   "numpy.outer",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter._fit_model": {
  "lineno": 191,
  "symbols_in_volume": [
   "numpy.sort",
   "numpy.unique",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter._fit_model_to_data_batch": {
  "lineno": 208,
  "symbols_in_volume": [
   "lifelines.utils.ConvergenceWarning",
   "lifelines.utils.ridge_regression",
   "numpy.linalg.LinAlgError",
   "numpy.sort",
   "numpy.sqrt",
   "numpy.unique",
   "numpy.zeros",
   "numpy.zeros_like",
   "time.time",
   "warnings.warn"
  ],
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter._preprocess_dataframe": {
  "lineno": 265,
  "symbols_in_volume": [
   "lifelines.utils.StatisticalWarning",
   "numpy.ones",
   "pandas.Series",
   "warnings.warn"
  ],
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter.fit": {
  "lineno": 96,
  "symbols_in_volume": [
   "datetime.datetime.utcnow",
   "lifelines.utils.normalize"
  ],
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter.plot": {
  "lineno": 414,
  "symbols_in_volume": [
   "lifelines.plotting.set_kwargs_ax",
   "lifelines.utils._to_list",
   "matplotlib.pyplot.hlines"
  ],
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter.plot.create_df_slicer": {
  "lineno": 436,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter.plot.shaded_plot": {
  "lineno": 432,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter.predict_cumulative_hazard": {
  "lineno": 305,
  "symbols_in_volume": [
   "lifelines.utils._get_index",
   "numpy.c_",
   "numpy.dot",
   "numpy.ones",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter.predict_expectation": {
  "lineno": 387,
  "symbols_in_volume": [
   "lifelines.utils._get_index",
   "pandas.DataFrame",
   "scipy.integrate.trapz"
  ],
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter.predict_median": {
  "lineno": 373,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter.predict_percentile": {
  "lineno": 355,
  "symbols_in_volume": [
   "lifelines.utils._get_index",
   "lifelines.utils.qth_survival_times"
  ],
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter.predict_survival_function": {
  "lineno": 341,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter.print_summary": {
  "lineno": 528,
  "symbols_in_volume": [
   "lifelines.utils.format_exp_floats",
   "lifelines.utils.format_floats",
   "lifelines.utils.format_p_value",
   "lifelines.utils.string_justify"
  ],
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter.score_": {
  "lineno": 482,
  "symbols_in_volume": [
   "lifelines.utils.concordance_index"
  ],
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter.smoothed_hazards_": {
  "lineno": 470,
  "symbols_in_volume": [
   "lifelines.utils.epanechnikov_kernel",
   "numpy.dot",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter.summary": {
  "lineno": 513,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.aalen_johansen_fitter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.fitters.aalen_johansen_fitter.AalenJohansenFitter": {
  "lineno": 12,
  "symbols_in_volume": [
   "lifelines.fitters.UnivariateFitter"
  ],
  "type": "class"
 },
 "lifelines.fitters.aalen_johansen_fitter.AalenJohansenFitter.__init__": {
  "lineno": 57,
  "symbols_in_volume": [
   "lifelines.fitters.UnivariateFitter.__init__"
  ],
  "type": "function"
 },
 "lifelines.fitters.aalen_johansen_fitter.AalenJohansenFitter._bounds": {
  "lineno": 193,
  "symbols_in_volume": [
   "lifelines.utils.inv_normal_cdf",
   "numpy.absolute",
   "numpy.exp",
   "numpy.log",
   "numpy.sqrt",
   "numpy.sum"
  ],
  "type": "function"
 },
 "lifelines.fitters.aalen_johansen_fitter.AalenJohansenFitter._check_for_duplicates": {
  "lineno": 252,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.aalen_johansen_fitter.AalenJohansenFitter._jitter": {
  "lineno": 172,
  "symbols_in_volume": [
   "numpy.random.seed",
   "numpy.random.uniform"
  ],
  "type": "function"
 },
 "lifelines.fitters.aalen_johansen_fitter.AalenJohansenFitter.fit": {
  "lineno": 63,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "lifelines.utils._preprocess_inputs",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.concat",
   "textwrap.dedent",
   "warnings.warn"
  ],
  "type": "function"
 },
 "lifelines.fitters.breslow_fleming_harrington_fitter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.fitters.breslow_fleming_harrington_fitter.BreslowFlemingHarringtonFitter": {
  "lineno": 12,
  "symbols_in_volume": [
   "lifelines.fitters.UnivariateFitter"
  ],
  "type": "class"
 },
 "lifelines.fitters.breslow_fleming_harrington_fitter.BreslowFlemingHarringtonFitter.fit": {
  "lineno": 31,
  "symbols_in_volume": [
   "lifelines.NelsonAalenFitter",
   "lifelines.utils.coalesce",
   "numpy.exp"
  ],
  "type": "function"
 },
 "lifelines.fitters.breslow_fleming_harrington_fitter.BreslowFlemingHarringtonFitter.survival_function_at_times": {
  "lineno": 97,
  "symbols_in_volume": [
   "lifelines.utils._to_array",
   "lifelines.utils.coalesce",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "module"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter": {
  "lineno": 48,
  "symbols_in_volume": [
   "lifelines.fitters.BaseFitter"
  ],
  "type": "class"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter.__init__": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter.__repr__": {
  "lineno": 788,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter._check_values": {
  "lineno": 229,
  "symbols_in_volume": [
   "lifelines.utils.check_complete_separation_low_variance",
   "lifelines.utils.check_for_immediate_deaths",
   "lifelines.utils.check_for_instantaneous_events",
   "lifelines.utils.check_for_numeric_dtypes_or_raise",
   "lifelines.utils.check_low_var",
   "lifelines.utils.check_nans_or_infs"
  ],
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter._compute_baseline_survival": {
  "lineno": 783,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter._compute_confidence_intervals": {
  "lineno": 266,
  "symbols_in_volume": [
   "lifelines.utils.inv_normal_cdf",
   "numpy.c_",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter._compute_cumulative_baseline_hazard": {
  "lineno": 758,
  "symbols_in_volume": [
   "numpy.unique",
   "numpy.zeros_like",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter._compute_delta_beta": {
  "lineno": 804,
  "symbols_in_volume": [
   "numpy.linalg.inv"
  ],
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter._compute_likelihood_ratio_test": {
  "lineno": 670,
  "symbols_in_volume": [
   "lifelines.statistics.chisq_test",
   "numpy.errstate",
   "numpy.log2"
  ],
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter._compute_p_values": {
  "lineno": 262,
  "symbols_in_volume": [
   "scipy.stats.chi2.sf"
  ],
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter._compute_residuals": {
  "lineno": 801,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter._compute_sandwich_estimator": {
  "lineno": 814,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter._compute_standard_errors": {
  "lineno": 824,
  "symbols_in_volume": [
   "numpy.sqrt",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter._compute_z_values": {
  "lineno": 259,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter._get_gradients": {
  "lineno": 464,
  "symbols_in_volume": [
   "bottleneck.nansum",
   "numpy.arange",
   "numpy.array",
   "numpy.dot",
   "numpy.einsum",
   "numpy.exp",
   "numpy.log",
   "numpy.outer",
   "numpy.unique",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter._newton_rhaphson": {
  "lineno": 296,
  "symbols_in_volume": [
   "lifelines.utils.ConvergenceError",
   "lifelines.utils.ConvergenceWarning",
   "lifelines.utils.StepSizer",
   "numpy.all",
   "numpy.any",
   "numpy.isnan",
   "numpy.linalg.norm",
   "numpy.zeros",
   "numpy.zeros_like",
   "scipy.linalg.LinAlgError",
   "scipy.linalg.solve",
   "time.time",
   "warnings.warn"
  ],
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter._partition_by_strata": {
  "lineno": 238,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter._partition_by_strata_and_apply": {
  "lineno": 252,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter.fit": {
  "lineno": 92,
  "symbols_in_volume": [
   "datetime.datetime.utcnow",
   "lifelines.utils._to_list",
   "lifelines.utils.coalesce",
   "lifelines.utils.normalize",
   "lifelines.utils.pass_for_numeric_dtypes_or_raise_array",
   "numpy.linalg.inv",
   "numpy.outer",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter.plot": {
  "lineno": 707,
  "symbols_in_volume": [
   "lifelines.utils.inv_normal_cdf",
   "matplotlib.pyplot.figure",
   "matplotlib.pyplot.xlabel",
   "matplotlib.pyplot.yticks",
   "numpy.argsort"
  ],
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter.predict_log_partial_hazard": {
  "lineno": 553,
  "symbols_in_volume": [
   "lifelines.utils._get_index",
   "lifelines.utils.check_for_numeric_dtypes_or_raise",
   "lifelines.utils.normalize",
   "numpy.dot",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter.predict_partial_hazard": {
  "lineno": 587,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter.print_summary": {
  "lineno": 612,
  "symbols_in_volume": [
   "lifelines.utils.format_exp_floats",
   "lifelines.utils.format_floats",
   "lifelines.utils.format_p_value",
   "lifelines.utils.string_justify"
  ],
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter.summary": {
  "lineno": 274,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.exp",
   "numpy.log2",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "module"
 },
 "lifelines.fitters.coxph_fitter.BatchVsSingle": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.fitters.coxph_fitter.BatchVsSingle.decide": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter": {
  "lineno": 66,
  "symbols_in_volume": [
   "lifelines.fitters.BaseFitter"
  ],
  "type": "class"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.__init__": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._check_values": {
  "lineno": 347,
  "symbols_in_volume": [
   "lifelines.utils.StatisticalWarning",
   "lifelines.utils.check_complete_separation",
   "lifelines.utils.check_for_numeric_dtypes_or_raise",
   "lifelines.utils.check_low_var",
   "lifelines.utils.check_nans_or_infs",
   "warnings.warn"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_baseline_cumulative_hazard": {
  "lineno": 1573,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_baseline_hazard": {
  "lineno": 1544,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_baseline_hazards": {
  "lineno": 1556,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_baseline_survival": {
  "lineno": 1576,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_confidence_intervals": {
  "lineno": 1163,
  "symbols_in_volume": [
   "lifelines.utils.inv_normal_cdf",
   "numpy.c_",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_delta_beta": {
  "lineno": 1067,
  "symbols_in_volume": [
   "numpy.tile"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_deviance": {
  "lineno": 917,
  "symbols_in_volume": [
   "numpy.log",
   "numpy.sign",
   "numpy.sqrt",
   "numpy.warnings.catch_warnings",
   "numpy.warnings.filterwarnings",
   "numpy.where"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_likelihood_ratio_test": {
  "lineno": 1281,
  "symbols_in_volume": [
   "lifelines.statistics.chisq_test",
   "numpy.errstate",
   "numpy.log2"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_martingale": {
  "lineno": 901,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.empty",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_p_values": {
  "lineno": 1191,
  "symbols_in_volume": [
   "scipy.stats.chi2.sf"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_sandwich_estimator": {
  "lineno": 1178,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_scaled_schoenfeld": {
  "lineno": 929,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_schoenfeld": {
  "lineno": 957,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.empty",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_schoenfeld_within_strata": {
  "lineno": 980,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.append",
   "numpy.dot",
   "numpy.empty",
   "numpy.exp",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_score": {
  "lineno": 1082,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.empty",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_score_within_strata": {
  "lineno": 1099,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.exp",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_standard_errors": {
  "lineno": 1171,
  "symbols_in_volume": [
   "numpy.sqrt",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_z_values": {
  "lineno": 1188,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._get_efron_values_batch": {
  "lineno": 780,
  "symbols_in_volume": [
   "bottleneck.nansum",
   "numpy.arange",
   "numpy.array",
   "numpy.dot",
   "numpy.einsum",
   "numpy.exp",
   "numpy.log",
   "numpy.outer",
   "numpy.unique",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._get_efron_values_single": {
  "lineno": 557,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.dot",
   "numpy.einsum",
   "numpy.exp",
   "numpy.log",
   "numpy.outer",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._newton_rhaphson": {
  "lineno": 367,
  "symbols_in_volume": [
   "lifelines.utils.ConvergenceError",
   "lifelines.utils.ConvergenceWarning",
   "lifelines.utils.StepSizer",
   "numpy.all",
   "numpy.any",
   "numpy.isnan",
   "numpy.linalg.norm",
   "numpy.zeros",
   "numpy.zeros_like",
   "scipy.linalg.LinAlgError",
   "scipy.linalg.solve",
   "time.time",
   "warnings.warn"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._partition_by_strata": {
  "lineno": 889,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._partition_by_strata_and_apply": {
  "lineno": 897,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._preprocess_dataframe": {
  "lineno": 311,
  "symbols_in_volume": [
   "lifelines.utils._to_list",
   "numpy.ones",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._trivial_log_likelihood_batch": {
  "lineno": 684,
  "symbols_in_volume": [
   "bottleneck.nansum",
   "numpy.arange",
   "numpy.log",
   "numpy.unique"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._trivial_log_likelihood_single": {
  "lineno": 727,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.log"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.check_assumptions": {
  "lineno": 1747,
  "symbols_in_volume": [
   "lifelines.statistics.TimeTransformers",
   "lifelines.statistics.proportional_hazard_test",
   "lifelines.utils.format_p_value",
   "lifelines.utils.lowess.lowess",
   "matplotlib.pyplot.figure",
   "matplotlib.pyplot.subplots_adjust",
   "matplotlib.pyplot.tight_layout",
   "numpy.random.choice",
   "numpy.round",
   "textwrap.dedent",
   "textwrap.fill"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.compute_residuals": {
  "lineno": 1143,
  "symbols_in_volume": [
   "lifelines.utils.ConvergenceWarning",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.fit": {
  "lineno": 141,
  "symbols_in_volume": [
   "datetime.datetime.utcnow",
   "lifelines.utils.coalesce",
   "lifelines.utils.normalize",
   "numpy.linalg.inv",
   "numpy.outer",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.plot": {
  "lineno": 1599,
  "symbols_in_volume": [
   "lifelines.plotting.set_kwargs_ax",
   "lifelines.utils.inv_normal_cdf",
   "matplotlib.pyplot.xlabel",
   "matplotlib.pyplot.yticks",
   "numpy.argsort"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.plot_covariate_groups": {
  "lineno": 1650,
  "symbols_in_volume": [
   "lifelines.plotting.set_kwargs_drawstyle",
   "lifelines.utils._to_array",
   "lifelines.utils._to_list",
   "lifelines.utils._to_tuple",
   "matplotlib.pyplot.figure",
   "matplotlib.pyplot.legend",
   "numpy.array_equal",
   "numpy.eye",
   "pandas.concat"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.predict_cumulative_hazard": {
  "lineno": 1376,
  "symbols_in_volume": [
   "lifelines.utils.StatError",
   "lifelines.utils._get_index",
   "lifelines.utils.dataframe_interpolate_at_times",
   "numpy.dot",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.predict_expectation": {
  "lineno": 1506,
  "symbols_in_volume": [
   "lifelines.utils._get_index",
   "pandas.DataFrame",
   "scipy.integrate.trapz"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.predict_log_partial_hazard": {
  "lineno": 1328,
  "symbols_in_volume": [
   "lifelines.utils._get_index",
   "lifelines.utils.check_for_numeric_dtypes_or_raise",
   "lifelines.utils.normalize",
   "numpy.dot",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.predict_median": {
  "lineno": 1480,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.predict_partial_hazard": {
  "lineno": 1305,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.predict_percentile": {
  "lineno": 1453,
  "symbols_in_volume": [
   "lifelines.utils._get_index",
   "lifelines.utils.qth_survival_times"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.predict_survival_function": {
  "lineno": 1428,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.print_summary": {
  "lineno": 1217,
  "symbols_in_volume": [
   "lifelines.utils.format_exp_floats",
   "lifelines.utils.format_floats",
   "lifelines.utils.format_p_value",
   "lifelines.utils.string_justify"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.score_": {
  "lineno": 1951,
  "symbols_in_volume": [
   "lifelines.utils.concordance._concordance_ratio",
   "lifelines.utils.concordance._concordance_summary_statistics"
  ],
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.summary": {
  "lineno": 1195,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.exp",
   "numpy.log2",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.exponential_fitter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.fitters.exponential_fitter.ExponentialFitter": {
  "lineno": 8,
  "symbols_in_volume": [
   "lifelines.fitters.KnownModelParametericUnivariateFitter"
  ],
  "type": "class"
 },
 "lifelines.fitters.exponential_fitter.ExponentialFitter._cumulative_hazard": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.exponential_fitter.ExponentialFitter.median_": {
  "lineno": 72,
  "symbols_in_volume": [
   "numpy.log"
  ],
  "type": "function"
 },
 "lifelines.fitters.kaplan_meier_fitter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.fitters.kaplan_meier_fitter.KaplanMeierFitter": {
  "lineno": 21,
  "symbols_in_volume": [
   "lifelines.fitters.UnivariateFitter"
  ],
  "type": "class"
 },
 "lifelines.fitters.kaplan_meier_fitter.KaplanMeierFitter._additive_f": {
  "lineno": 293,
  "symbols_in_volume": [
   "numpy.log",
   "numpy.seterr"
  ],
  "type": "function"
 },
 "lifelines.fitters.kaplan_meier_fitter.KaplanMeierFitter._additive_var": {
  "lineno": 297,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.seterr"
  ],
  "type": "function"
 },
 "lifelines.fitters.kaplan_meier_fitter.KaplanMeierFitter._bounds": {
  "lineno": 278,
  "symbols_in_volume": [
   "lifelines.utils.inv_normal_cdf",
   "numpy.exp",
   "numpy.log",
   "numpy.sqrt",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.kaplan_meier_fitter.KaplanMeierFitter._check_values": {
  "lineno": 179,
  "symbols_in_volume": [
   "lifelines.utils.check_nans_or_infs"
  ],
  "type": "function"
 },
 "lifelines.fitters.kaplan_meier_fitter.KaplanMeierFitter.cumulative_density_at_times": {
  "lineno": 204,
  "symbols_in_volume": [
   "lifelines.utils._to_array",
   "lifelines.utils.coalesce",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.fitters.kaplan_meier_fitter.KaplanMeierFitter.fit": {
  "lineno": 70,
  "symbols_in_volume": [
   "lifelines.utils.StatError",
   "lifelines.utils.StatisticalWarning",
   "lifelines.utils._additive_estimate",
   "lifelines.utils._preprocess_inputs",
   "lifelines.utils.median_survival_times",
   "numpy.asarray",
   "numpy.exp",
   "pandas.DataFrame",
   "warnings.warn"
  ],
  "type": "function"
 },
 "lifelines.fitters.kaplan_meier_fitter.KaplanMeierFitter.plot_cumulative_density": {
  "lineno": 229,
  "symbols_in_volume": [
   "lifelines.plotting._plot_estimate"
  ],
  "type": "function"
 },
 "lifelines.fitters.kaplan_meier_fitter.KaplanMeierFitter.plot_cumulative_hazard": {
  "lineno": 301,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.kaplan_meier_fitter.KaplanMeierFitter.plot_hazard": {
  "lineno": 306,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.kaplan_meier_fitter.KaplanMeierFitter.plot_loglogs": {
  "lineno": 182,
  "symbols_in_volume": [
   "lifelines.plotting.plot_loglogs"
  ],
  "type": "function"
 },
 "lifelines.fitters.kaplan_meier_fitter.KaplanMeierFitter.plot_survival_function": {
  "lineno": 220,
  "symbols_in_volume": [
   "lifelines.plotting._plot_estimate"
  ],
  "type": "function"
 },
 "lifelines.fitters.kaplan_meier_fitter.KaplanMeierFitter.survival_function_at_times": {
  "lineno": 188,
  "symbols_in_volume": [
   "lifelines.utils._to_array",
   "lifelines.utils.coalesce",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.fitters.log_logistic_aft_fitter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.fitters.log_logistic_aft_fitter.LogLogisticAFTFitter": {
  "lineno": 11,
  "symbols_in_volume": [
   "lifelines.fitters.ParametericAFTRegressionFitter"
  ],
  "type": "class"
 },
 "lifelines.fitters.log_logistic_aft_fitter.LogLogisticAFTFitter.__init__": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.log_logistic_aft_fitter.LogLogisticAFTFitter._cumulative_hazard": {
  "lineno": 65,
  "symbols_in_volume": [
   "autograd.numpy.dot",
   "autograd.numpy.exp",
   "autograd.numpy.log1p"
  ],
  "type": "function"
 },
 "lifelines.fitters.log_logistic_aft_fitter.LogLogisticAFTFitter._log_hazard": {
  "lineno": 73,
  "symbols_in_volume": [
   "autograd.numpy.dot",
   "autograd.numpy.exp",
   "autograd.numpy.expm1",
   "autograd.numpy.log",
   "autograd.numpy.log1p"
  ],
  "type": "function"
 },
 "lifelines.fitters.log_logistic_aft_fitter.LogLogisticAFTFitter.predict_cumulative_hazard": {
  "lineno": 147,
  "symbols_in_volume": [
   "autograd.numpy.log1p",
   "autograd.numpy.outer",
   "autograd.numpy.unique",
   "lifelines.utils._get_index",
   "lifelines.utils.coalesce",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.log_logistic_aft_fitter.LogLogisticAFTFitter.predict_expectation": {
  "lineno": 116,
  "symbols_in_volume": [
   "autograd.numpy.nan",
   "autograd.numpy.pi",
   "autograd.numpy.sin",
   "autograd.numpy.where",
   "lifelines.utils._get_index",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.log_logistic_aft_fitter.LogLogisticAFTFitter.predict_percentile": {
  "lineno": 84,
  "symbols_in_volume": [
   "lifelines.utils._get_index",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.log_logistic_fitter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.fitters.log_logistic_fitter.LogLogisticFitter": {
  "lineno": 7,
  "symbols_in_volume": [
   "lifelines.fitters.KnownModelParametericUnivariateFitter"
  ],
  "type": "class"
 },
 "lifelines.fitters.log_logistic_fitter.LogLogisticFitter._cumulative_hazard": {
  "lineno": 83,
  "symbols_in_volume": [
   "autograd.numpy.log1p"
  ],
  "type": "function"
 },
 "lifelines.fitters.log_logistic_fitter.LogLogisticFitter._log_1m_sf": {
  "lineno": 87,
  "symbols_in_volume": [
   "autograd.numpy.log1p"
  ],
  "type": "function"
 },
 "lifelines.fitters.log_logistic_fitter.LogLogisticFitter.median_": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.log_normal_aft_fitter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.fitters.log_normal_aft_fitter.LogNormalAFTFitter": {
  "lineno": 12,
  "symbols_in_volume": [
   "lifelines.fitters.ParametericAFTRegressionFitter"
  ],
  "type": "class"
 },
 "lifelines.fitters.log_normal_aft_fitter.LogNormalAFTFitter.__init__": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.log_normal_aft_fitter.LogNormalAFTFitter._cumulative_hazard": {
  "lineno": 66,
  "symbols_in_volume": [
   "autograd.numpy.dot",
   "autograd.numpy.exp",
   "autograd.numpy.log",
   "lifelines.utils.logsf.logsf"
  ],
  "type": "function"
 },
 "lifelines.fitters.log_normal_aft_fitter.LogNormalAFTFitter._log_hazard": {
  "lineno": 75,
  "symbols_in_volume": [
   "autograd.numpy.dot",
   "autograd.numpy.exp",
   "autograd.numpy.log",
   "autograd.scipy.stats.norm.logpdf",
   "lifelines.utils.logsf.logsf"
  ],
  "type": "function"
 },
 "lifelines.fitters.log_normal_aft_fitter.LogNormalAFTFitter.predict_cumulative_hazard": {
  "lineno": 178,
  "symbols_in_volume": [
   "autograd.numpy.log",
   "autograd.numpy.subtract.outer",
   "autograd.numpy.unique",
   "lifelines.utils._get_index",
   "lifelines.utils.coalesce",
   "lifelines.utils.logsf.logsf",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.log_normal_aft_fitter.LogNormalAFTFitter.predict_expectation": {
  "lineno": 149,
  "symbols_in_volume": [
   "autograd.numpy.exp",
   "lifelines.utils._get_index",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.log_normal_aft_fitter.LogNormalAFTFitter.predict_median": {
  "lineno": 118,
  "symbols_in_volume": [
   "lifelines.utils._get_index",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.log_normal_aft_fitter.LogNormalAFTFitter.predict_percentile": {
  "lineno": 87,
  "symbols_in_volume": [
   "autograd.numpy.exp",
   "autograd.numpy.sqrt",
   "lifelines.utils._get_index",
   "pandas.DataFrame",
   "scipy.special.erfinv"
  ],
  "type": "function"
 },
 "lifelines.fitters.log_normal_fitter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.fitters.log_normal_fitter.LogNormalFitter": {
  "lineno": 10,
  "symbols_in_volume": [
   "lifelines.fitters.KnownModelParametericUnivariateFitter"
  ],
  "type": "class"
 },
 "lifelines.fitters.log_normal_fitter.LogNormalFitter._cumulative_hazard": {
  "lineno": 74,
  "symbols_in_volume": [
   "autograd.numpy.log",
   "lifelines.utils.logsf.logsf"
  ],
  "type": "function"
 },
 "lifelines.fitters.log_normal_fitter.LogNormalFitter._log_1m_sf": {
  "lineno": 84,
  "symbols_in_volume": [
   "autograd.numpy.log",
   "autograd.scipy.stats.norm.logcdf"
  ],
  "type": "function"
 },
 "lifelines.fitters.log_normal_fitter.LogNormalFitter._log_hazard": {
  "lineno": 79,
  "symbols_in_volume": [
   "autograd.numpy.log",
   "autograd.scipy.stats.norm.logpdf",
   "lifelines.utils.logsf.logsf"
  ],
  "type": "function"
 },
 "lifelines.fitters.log_normal_fitter.LogNormalFitter.median_": {
  "lineno": 70,
  "symbols_in_volume": [
   "autograd.numpy.exp"
  ],
  "type": "function"
 },
 "lifelines.fitters.nelson_aalen_fitter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.fitters.nelson_aalen_fitter.NelsonAalenFitter": {
  "lineno": 20,
  "symbols_in_volume": [
   "lifelines.fitters.UnivariateFitter"
  ],
  "type": "class"
 },
 "lifelines.fitters.nelson_aalen_fitter.NelsonAalenFitter.__init__": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.nelson_aalen_fitter.NelsonAalenFitter._additive_f_discrete": {
  "lineno": 198,
  "symbols_in_volume": [
   "numpy.inf"
  ],
  "type": "function"
 },
 "lifelines.fitters.nelson_aalen_fitter.NelsonAalenFitter._additive_f_smooth": {
  "lineno": 191,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.cumsum",
   "numpy.max",
   "numpy.where",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.fitters.nelson_aalen_fitter.NelsonAalenFitter._bounds": {
  "lineno": 163,
  "symbols_in_volume": [
   "lifelines.utils.inv_normal_cdf",
   "numpy.exp",
   "numpy.sqrt",
   "numpy.where",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.nelson_aalen_fitter.NelsonAalenFitter._variance_f_discrete": {
  "lineno": 188,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.nelson_aalen_fitter.NelsonAalenFitter._variance_f_smooth": {
  "lineno": 181,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.cumsum",
   "numpy.max",
   "numpy.where",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.fitters.nelson_aalen_fitter.NelsonAalenFitter.conditional_time_to_event_": {
  "lineno": 256,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.nelson_aalen_fitter.NelsonAalenFitter.fit": {
  "lineno": 72,
  "symbols_in_volume": [
   "lifelines.utils.StatisticalWarning",
   "lifelines.utils._additive_estimate",
   "lifelines.utils._preprocess_inputs",
   "lifelines.utils.check_nans_or_infs",
   "pandas.DataFrame",
   "warnings.warn"
  ],
  "type": "function"
 },
 "lifelines.fitters.nelson_aalen_fitter.NelsonAalenFitter.plot_hazard": {
  "lineno": 153,
  "symbols_in_volume": [
   "lifelines.plotting._plot_estimate"
  ],
  "type": "function"
 },
 "lifelines.fitters.nelson_aalen_fitter.NelsonAalenFitter.smoothed_hazard_": {
  "lineno": 201,
  "symbols_in_volume": [
   "lifelines.utils.epanechnikov_kernel",
   "numpy.dot",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.nelson_aalen_fitter.NelsonAalenFitter.smoothed_hazard_confidence_intervals_": {
  "lineno": 226,
  "symbols_in_volume": [
   "lifelines.utils.epanechnikov_kernel",
   "lifelines.utils.inv_normal_cdf",
   "numpy.dot",
   "numpy.exp",
   "numpy.sqrt",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.piecewise_exponential_fitter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.fitters.piecewise_exponential_fitter.PiecewiseExponentialFitter": {
  "lineno": 7,
  "symbols_in_volume": [
   "lifelines.fitters.KnownModelParametericUnivariateFitter"
  ],
  "type": "class"
 },
 "lifelines.fitters.piecewise_exponential_fitter.PiecewiseExponentialFitter.__init__": {
  "lineno": 74,
  "symbols_in_volume": [
   "autograd.numpy.append",
   "autograd.numpy.inf",
   "autograd.numpy.sort"
  ],
  "type": "function"
 },
 "lifelines.fitters.piecewise_exponential_fitter.PiecewiseExponentialFitter._cumulative_hazard": {
  "lineno": 92,
  "symbols_in_volume": [
   "autograd.numpy.diff",
   "autograd.numpy.dot",
   "autograd.numpy.hstack",
   "autograd.numpy.minimum",
   "autograd.numpy.tile",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "lifelines.fitters.weibull_aft_fitter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.fitters.weibull_aft_fitter.WeibullAFTFitter": {
  "lineno": 10,
  "symbols_in_volume": [
   "lifelines.fitters.ParametericAFTRegressionFitter"
  ],
  "type": "class"
 },
 "lifelines.fitters.weibull_aft_fitter.WeibullAFTFitter.__init__": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.weibull_aft_fitter.WeibullAFTFitter._cumulative_hazard": {
  "lineno": 66,
  "symbols_in_volume": [
   "autograd.numpy.dot",
   "autograd.numpy.exp"
  ],
  "type": "function"
 },
 "lifelines.fitters.weibull_aft_fitter.WeibullAFTFitter._log_hazard": {
  "lineno": 75,
  "symbols_in_volume": [
   "autograd.numpy.dot",
   "autograd.numpy.expm1",
   "autograd.numpy.log"
  ],
  "type": "function"
 },
 "lifelines.fitters.weibull_aft_fitter.WeibullAFTFitter.predict_cumulative_hazard": {
  "lineno": 145,
  "symbols_in_volume": [
   "autograd.numpy.outer",
   "autograd.numpy.unique",
   "lifelines.utils._get_index",
   "lifelines.utils.coalesce",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.weibull_aft_fitter.WeibullAFTFitter.predict_expectation": {
  "lineno": 116,
  "symbols_in_volume": [
   "lifelines.utils._get_index",
   "pandas.DataFrame",
   "scipy.special.gamma"
  ],
  "type": "function"
 },
 "lifelines.fitters.weibull_aft_fitter.WeibullAFTFitter.predict_percentile": {
  "lineno": 84,
  "symbols_in_volume": [
   "autograd.numpy.log",
   "autograd.numpy.power",
   "lifelines.utils._get_index",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.fitters.weibull_fitter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.fitters.weibull_fitter.WeibullFitter": {
  "lineno": 7,
  "symbols_in_volume": [
   "lifelines.fitters.KnownModelParametericUnivariateFitter"
  ],
  "type": "class"
 },
 "lifelines.fitters.weibull_fitter.WeibullFitter._cumulative_hazard": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.fitters.weibull_fitter.WeibullFitter.median_": {
  "lineno": 90,
  "symbols_in_volume": [
   "autograd.numpy.log"
  ],
  "type": "function"
 },
 "lifelines.generate_datasets": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.generate_datasets.coeff_func": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.generate_datasets.coeff_func.__call__": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.generate_datasets.coeff_func.__call__.__repr__": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.generate_datasets.coeff_func.__init__": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.generate_datasets.constant_": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.generate_datasets.constant_coefficients": {
  "lineno": 166,
  "symbols_in_volume": [
   "numpy.random.normal"
  ],
  "type": "function"
 },
 "lifelines.generate_datasets.construct_survival_curves": {
  "lineno": 313,
  "symbols_in_volume": [
   "numpy.exp",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.generate_datasets.cumulative_integral": {
  "lineno": 301,
  "symbols_in_volume": [
   "scipy.integrate.cumtrapz"
  ],
  "type": "function"
 },
 "lifelines.generate_datasets.exp_comp_": {
  "lineno": 96,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.maximum"
  ],
  "type": "function"
 },
 "lifelines.generate_datasets.exponential_survival_data": {
  "lineno": 52,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.log",
   "numpy.minimum",
   "numpy.ones",
   "scipy.optimize.newton",
   "scipy.stats.expon.rvs",
   "scipy.stats.uniform.rvs"
  ],
  "type": "function"
 },
 "lifelines.generate_datasets.exponential_survival_data.pF": {
  "lineno": 58,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "lifelines.generate_datasets.generate_covariates": {
  "lineno": 148,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.random.binomial",
   "numpy.random.exponential",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "lifelines.generate_datasets.generate_hazard_rates": {
  "lineno": 218,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.exp",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.generate_datasets.generate_observational_matrix": {
  "lineno": 291,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.generate_datasets.generate_random_lifetimes": {
  "lineno": 248,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.inf",
   "numpy.less_equal",
   "numpy.log",
   "numpy.minimum",
   "numpy.random.rand",
   "numpy.random.uniform"
  ],
  "type": "function"
 },
 "lifelines.generate_datasets.inverseSq_": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.generate_datasets.log_": {
  "lineno": 102,
  "symbols_in_volume": [
   "numpy.log",
   "numpy.maximum"
  ],
  "type": "function"
 },
 "lifelines.generate_datasets.periodic_": {
  "lineno": 114,
  "symbols_in_volume": [
   "numpy.sin"
  ],
  "type": "function"
 },
 "lifelines.generate_datasets.piecewise_exponential_survival_data": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.diff",
   "numpy.empty",
   "numpy.log",
   "numpy.random.random"
  ],
  "type": "function"
 },
 "lifelines.generate_datasets.right_censor_lifetimes": {
  "lineno": 129,
  "symbols_in_volume": [
   "numpy.minimum",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "lifelines.generate_datasets.time_varying_coefficients": {
  "lineno": 181,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.exponential",
   "numpy.random.randint",
   "numpy.random.shuffle",
   "numpy.zeros",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.plotting": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.plotting.PlotEstimateConfig": {
  "lineno": 575,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.plotting.PlotEstimateConfig.__init__": {
  "lineno": 576,
  "symbols_in_volume": [
   "lifelines.utils.coalesce"
  ],
  "type": "function"
 },
 "lifelines.plotting._plot_estimate": {
  "lineno": 441,
  "symbols_in_volume": [
   "numpy.round",
   "textwrap.dedent",
   "warnings.warn"
  ],
  "type": "function"
 },
 "lifelines.plotting.add_at_risk_counts": {
  "lineno": 198,
  "symbols_in_volume": [
   "matplotlib.pyplot.gca",
   "matplotlib.pyplot.gcf",
   "matplotlib.pyplot.tight_layout",
   "matplotlib.pyplot.twiny"
  ],
  "type": "function"
 },
 "lifelines.plotting.cdf_plot": {
  "lineno": 39,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter"
  ],
  "type": "function"
 },
 "lifelines.plotting.create_dataframe_slicer": {
  "lineno": 393,
  "symbols_in_volume": [
   "lifelines.utils.coalesce"
  ],
  "type": "function"
 },
 "lifelines.plotting.create_scipy_stats_model_from_lifelines_model": {
  "lineno": 16,
  "symbols_in_volume": [
   "lifelines.fitters.KnownModelParametericUnivariateFitter",
   "numpy.exp",
   "scipy.stats"
  ],
  "type": "function"
 },
 "lifelines.plotting.get_distribution_name_of_lifelines_model": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.plotting.is_latex_enabled": {
  "lineno": 134,
  "symbols_in_volume": [
   "matplotlib.rcParams"
  ],
  "type": "function"
 },
 "lifelines.plotting.move_spines": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.plotting.plot_lifetimes": {
  "lineno": 297,
  "symbols_in_volume": [
   "numpy.argsort",
   "numpy.ones",
   "numpy.zeros",
   "warnings.warn"
  ],
  "type": "function"
 },
 "lifelines.plotting.plot_loglogs": {
  "lineno": 401,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.plotting.plot_loglogs.loglog": {
  "lineno": 406,
  "symbols_in_volume": [
   "numpy.log"
  ],
  "type": "function"
 },
 "lifelines.plotting.qq_plot": {
  "lineno": 67,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "lifelines.fitters.KnownModelParametericUnivariateFitter",
   "lifelines.utils.qth_survival_times",
   "numpy.inf",
   "numpy.nan",
   "numpy.unique"
  ],
  "type": "function"
 },
 "lifelines.plotting.remove_spines": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.plotting.remove_ticks": {
  "lineno": 178,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.plotting.set_kwargs_ax": {
  "lineno": 374,
  "symbols_in_volume": [
   "matplotlib.pyplot.figure"
  ],
  "type": "function"
 },
 "lifelines.plotting.set_kwargs_color": {
  "lineno": 381,
  "symbols_in_volume": [
   "lifelines.utils.coalesce"
  ],
  "type": "function"
 },
 "lifelines.plotting.set_kwargs_drawstyle": {
  "lineno": 385,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.plotting.set_kwargs_label": {
  "lineno": 389,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.statistics": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.statistics.StatisticalResult": {
  "lineno": 524,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.statistics.StatisticalResult.__add__": {
  "lineno": 631,
  "symbols_in_volume": [
   "numpy.r_"
  ],
  "type": "function"
 },
 "lifelines.statistics.StatisticalResult.__init__": {
  "lineno": 545,
  "symbols_in_volume": [
   "lifelines.utils._to_array",
   "lifelines.utils._to_list"
  ],
  "type": "function"
 },
 "lifelines.statistics.StatisticalResult.__repr__": {
  "lineno": 601,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.statistics.StatisticalResult._stringify_meta_data": {
  "lineno": 622,
  "symbols_in_volume": [
   "lifelines.utils.string_justify"
  ],
  "type": "function"
 },
 "lifelines.statistics.StatisticalResult._to_string": {
  "lineno": 604,
  "symbols_in_volume": [
   "lifelines.utils.format_floats",
   "lifelines.utils.format_p_value",
   "numpy.errstate",
   "numpy.log2"
  ],
  "type": "function"
 },
 "lifelines.statistics.StatisticalResult.print_summary": {
  "lineno": 566,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.statistics.StatisticalResult.summary": {
  "lineno": 581,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples"
  ],
  "type": "function"
 },
 "lifelines.statistics.TimeTransformers": {
  "lineno": 650,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "numpy.cumsum",
   "numpy.log"
  ],
  "type": "class"
 },
 "lifelines.statistics.TimeTransformers.get": {
  "lineno": 660,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.statistics.TimeTransformers.iter": {
  "lineno": 663,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.statistics.chisq_test": {
  "lineno": 640,
  "symbols_in_volume": [
   "scipy.stats.chi2.sf"
  ],
  "type": "function"
 },
 "lifelines.statistics.logrank_test": {
  "lineno": 246,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ones",
   "numpy.r_",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "lifelines.statistics.multivariate_logrank_test": {
  "lineno": 411,
  "symbols_in_volume": [
   "lifelines.utils.group_survival_table_from_events",
   "numpy.arange",
   "numpy.asarray",
   "numpy.dot",
   "numpy.inf",
   "numpy.linalg.pinv",
   "numpy.max",
   "numpy.nan",
   "numpy.ones",
   "numpy.sqrt",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.statistics.pairwise_logrank_test": {
  "lineno": 336,
  "symbols_in_volume": [
   "itertools.combinations",
   "numpy.arange",
   "numpy.asarray",
   "numpy.max",
   "numpy.ones",
   "numpy.unique",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.statistics.power_under_cph": {
  "lineno": 105,
  "symbols_in_volume": [
   "numpy.sqrt",
   "scipy.stats.norm.cdf"
  ],
  "type": "function"
 },
 "lifelines.statistics.power_under_cph.z": {
  "lineno": 148,
  "symbols_in_volume": [
   "scipy.stats.norm.ppf"
  ],
  "type": "function"
 },
 "lifelines.statistics.proportional_hazard_test": {
  "lineno": 669,
  "symbols_in_volume": [
   "lifelines.utils._to_array"
  ],
  "type": "function"
 },
 "lifelines.statistics.proportional_hazard_test.compute_statistic": {
  "lineno": 709,
  "symbols_in_volume": [
   "numpy.diag"
  ],
  "type": "function"
 },
 "lifelines.statistics.sample_size_necessary_under_cph": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.ceil"
  ],
  "type": "function"
 },
 "lifelines.statistics.sample_size_necessary_under_cph.z": {
  "lineno": 89,
  "symbols_in_volume": [
   "scipy.stats.norm.ppf"
  ],
  "type": "function"
 },
 "lifelines.statistics.survival_difference_at_fixed_point_in_time_test": {
  "lineno": 158,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "lifelines.utils.dataframe_interpolate_at_times",
   "numpy.log"
  ],
  "type": "function"
 },
 "lifelines.statistics.two_sided_z_test": {
  "lineno": 645,
  "symbols_in_volume": [
   "numpy.max",
   "scipy.stats.norm.cdf"
  ],
  "type": "function"
 },
 "lifelines.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.utils.ConvergenceError": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.utils.ConvergenceError.__init__": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.ConvergenceWarning": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.utils.StatError": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.utils.StatisticalWarning": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.utils.StepSizer": {
  "lineno": 1296,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.utils.StepSizer.__init__": {
  "lineno": 1309,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.StepSizer._is_monotonically_decreasing": {
  "lineno": 1346,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.diff"
  ],
  "type": "function"
 },
 "lifelines.utils.StepSizer.next": {
  "lineno": 1350,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.StepSizer.update": {
  "lineno": 1316,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils._additive_estimate": {
  "lineno": 728,
  "symbols_in_volume": [
   "numpy.cumsum"
  ],
  "type": "function"
 },
 "lifelines.utils._get_index": {
  "lineno": 790,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.utils._group_event_table_by_intervals": {
  "lineno": 358,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.percentile",
   "pandas.cut"
  ],
  "type": "function"
 },
 "lifelines.utils._low_var": {
  "lineno": 885,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils._preprocess_inputs": {
  "lineno": 764,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.ones"
  ],
  "type": "function"
 },
 "lifelines.utils._to_array": {
  "lineno": 1354,
  "symbols_in_volume": [
   "collections.Iterable",
   "numpy.array",
   "numpy.asarray"
  ],
  "type": "function"
 },
 "lifelines.utils._to_list": {
  "lineno": 1360,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils._to_tuple": {
  "lineno": 1366,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.add_covariate_to_timeline": {
  "lineno": 1114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.add_covariate_to_timeline.expand": {
  "lineno": 1197,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "lifelines.utils.add_covariate_to_timeline.remove_redundant_rows": {
  "lineno": 1176,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.add_covariate_to_timeline.transform_cv_to_long_format": {
  "lineno": 1194,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.btree": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.utils.btree._BTree": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "class"
 },
 "lifelines.utils.btree._BTree.__init__": {
  "lineno": 19,
  "symbols_in_volume": [
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "lifelines.utils.btree._BTree.__len__": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.btree._BTree._treeify": {
  "lineno": 29,
  "symbols_in_volume": [
   "numpy.delete",
   "numpy.empty_like",
   "numpy.log2",
   "numpy.s_"
  ],
  "type": "function"
 },
 "lifelines.utils.btree._BTree.insert": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.btree._BTree.rank": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.check_complete_separation": {
  "lineno": 949,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.check_complete_separation_close_to_perfect_correlation": {
  "lineno": 926,
  "symbols_in_volume": [
   "numpy.errstate",
   "warnings.warn"
  ],
  "type": "function"
 },
 "lifelines.utils.check_complete_separation_low_variance": {
  "lineno": 902,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "lifelines.utils.check_for_immediate_deaths": {
  "lineno": 839,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.check_for_instantaneous_events": {
  "lineno": 853,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "lifelines.utils.check_for_numeric_dtypes_or_raise": {
  "lineno": 828,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.check_for_overlapping_intervals": {
  "lineno": 866,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.check_low_var": {
  "lineno": 889,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "lifelines.utils.check_nans_or_infs": {
  "lineno": 954,
  "symbols_in_volume": [
   "numpy.isinf",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.isnull",
   "warnings.warn"
  ],
  "type": "function"
 },
 "lifelines.utils.check_positivity": {
  "lineno": 878,
  "symbols_in_volume": [
   "numpy.any"
  ],
  "type": "function"
 },
 "lifelines.utils.coalesce": {
  "lineno": 547,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.concordance": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.utils.concordance._concordance_ratio": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.concordance._concordance_summary_statistics": {
  "lineno": 88,
  "symbols_in_volume": [
   "lifelines.utils.btree._BTree",
   "numpy.argsort",
   "numpy.int64",
   "numpy.logical_not",
   "numpy.unique"
  ],
  "type": "function"
 },
 "lifelines.utils.concordance._concordance_value": {
  "lineno": 251,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.concordance._handle_pairs": {
  "lineno": 178,
  "symbols_in_volume": [
   "numpy.int64"
  ],
  "type": "function"
 },
 "lifelines.utils.concordance._naive_concordance_summary_statistics": {
  "lineno": 203,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.concordance._valid_comparison": {
  "lineno": 237,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.concordance.concordance_index": {
  "lineno": 7,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.ones"
  ],
  "type": "function"
 },
 "lifelines.utils.concordance.naive_concordance_index": {
  "lineno": 231,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.correlation": {
  "lineno": 922,
  "symbols_in_volume": [
   "numpy.corrcoef"
  ],
  "type": "function"
 },
 "lifelines.utils.covariates_from_event_matrix": {
  "lineno": 1254,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.dataframe_interpolate_at_times": {
  "lineno": 1391,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.datetimes_to_durations": {
  "lineno": 436,
  "symbols_in_volume": [
   "datetime.datetime.today",
   "pandas.Series",
   "pandas.isnull",
   "pandas.to_datetime",
   "warnings.warn"
  ],
  "type": "function"
 },
 "lifelines.utils.epanechnikov_kernel": {
  "lineno": 679,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.format_exp_floats": {
  "lineno": 1377,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.format_floats": {
  "lineno": 1387,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.format_p_value": {
  "lineno": 1372,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.gamma": {
  "lineno": null,
  "symbols_in_volume": [
   "autograd.extend.defvjp",
   "autograd.numpy.numpy_vjps.unbroadcast_f",
   "scipy.special.gammainc"
  ],
  "type": "module"
 },
 "lifelines.utils.gamma.gammainc": {
  "lineno": 31,
  "symbols_in_volume": [
   "autograd.extend.primitive",
   "scipy.special.gammainc"
  ],
  "type": "function"
 },
 "lifelines.utils.gamma.gammainc2": {
  "lineno": 56,
  "symbols_in_volume": [
   "autograd.extend.primitive",
   "scipy.special.gammainc"
  ],
  "type": "function"
 },
 "lifelines.utils.group_survival_table_from_events": {
  "lineno": 146,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.max",
   "numpy.min",
   "numpy.zeros",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.utils.inv_normal_cdf": {
  "lineno": 554,
  "symbols_in_volume": [
   "scipy.stats.norm.ppf"
  ],
  "type": "function"
 },
 "lifelines.utils.k_fold_cross_validation": {
  "lineno": 558,
  "symbols_in_volume": [
   "lifelines.utils.concordance.concordance_index",
   "numpy.array",
   "numpy.random.permutation"
  ],
  "type": "function"
 },
 "lifelines.utils.l1_log_loss": {
  "lineno": 497,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.log",
   "numpy.ones_like"
  ],
  "type": "function"
 },
 "lifelines.utils.l2_log_loss": {
  "lineno": 522,
  "symbols_in_volume": [
   "numpy.log",
   "numpy.ones_like",
   "numpy.power"
  ],
  "type": "function"
 },
 "lifelines.utils.logsf": {
  "lineno": null,
  "symbols_in_volume": [
   "autograd.extend.defvjp",
   "autograd.extend.primitive",
   "autograd.numpy.exp",
   "autograd.numpy.numpy_vjps.unbroadcast_f",
   "autograd.scipy.stats.norm.logpdf",
   "scipy.stats.norm.logsf"
  ],
  "type": "module"
 },
 "lifelines.utils.lowess": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "lifelines.utils.lowess.lowess": {
  "lineno": 26,
  "symbols_in_volume": [
   "math.ceil",
   "numpy.abs",
   "numpy.array",
   "numpy.clip",
   "numpy.median",
   "numpy.ones",
   "numpy.sort",
   "numpy.sum",
   "numpy.zeros",
   "scipy.linalg.solve"
  ],
  "type": "function"
 },
 "lifelines.utils.median_survival_times": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.normalize": {
  "lineno": 660,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.pass_for_numeric_dtypes_or_raise_array": {
  "lineno": 800,
  "symbols_in_volume": [
   "numpy.asarray",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.to_numeric"
  ],
  "type": "function"
 },
 "lifelines.utils.qth_survival_time": {
  "lineno": 104,
  "symbols_in_volume": [
   "numpy.inf",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.utils.qth_survival_times": {
  "lineno": 52,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "lifelines.utils.ridge_regression": {
  "lineno": 685,
  "symbols_in_volume": [
   "numpy.c_",
   "numpy.dot",
   "numpy.eye",
   "scipy.linalg.solve"
  ],
  "type": "function"
 },
 "lifelines.utils.survival_events_from_table": {
  "lineno": 378,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "lifelines.utils.survival_table_from_events": {
  "lineno": 256,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.asarray",
   "numpy.ones",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.utils.to_episodic_format": {
  "lineno": 978,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ceil",
   "numpy.empty",
   "numpy.tile",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "lifelines.utils.to_long_format": {
  "lineno": 1089,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.utils.unnormalize": {
  "lineno": 671,
  "symbols_in_volume": [],
  "type": "function"
 },
 "lifelines.version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.__main__": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.main",
   "sys.argv",
   "sys.exit"
  ],
  "type": "module"
 },
 "tests.conftest": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.conftest.block": {
  "lineno": 16,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.conftest.pytest_addoption": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.conftest.pytest_runtest_setup": {
  "lineno": 6,
  "symbols_in_volume": [
   "numpy.random.randint",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "tests.test_estimation": {
  "lineno": null,
  "symbols_in_volume": [
   "warnings.simplefilter"
  ],
  "type": "module"
 },
 "tests.test_estimation.PiecewiseExponentialFitterTesting": {
  "lineno": 104,
  "symbols_in_volume": [
   "lifelines.PiecewiseExponentialFitter"
  ],
  "type": "class"
 },
 "tests.test_estimation.PiecewiseExponentialFitterTesting.__init__": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_estimation.TestAFTFitters": {
  "lineno": 1414,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_estimation.TestAFTFitters.models": {
  "lineno": 1415,
  "symbols_in_volume": [
   "lifelines.LogLogisticAFTFitter",
   "lifelines.LogNormalAFTFitter",
   "lifelines.WeibullAFTFitter",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestAFTFitters.test_accept_initial_params": {
  "lineno": 1442,
  "symbols_in_volume": [
   "numpy.ones"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestAFTFitters.test_aft_mean_behaviour": {
  "lineno": 1514,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestAFTFitters.test_aft_median_behaviour": {
  "lineno": 1501,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestAFTFitters.test_aft_weibull_with_ancillary_model_and_with_weights": {
  "lineno": 1544,
  "symbols_in_volume": [
   "lifelines.WeibullAFTFitter",
   "numpy.testing.assert_allclose",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestAFTFitters.test_aft_weibull_with_weights": {
  "lineno": 1527,
  "symbols_in_volume": [
   "lifelines.WeibullAFTFitter",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestAFTFitters.test_log_likelihood_is_maximized_for_data_generating_model": {
  "lineno": 1446,
  "symbols_in_volume": [
   "autograd.scipy.stats.norm.rvs",
   "lifelines.LogLogisticAFTFitter",
   "lifelines.LogNormalAFTFitter",
   "lifelines.WeibullAFTFitter",
   "numpy.exp",
   "numpy.log",
   "numpy.random.binomial",
   "pandas.DataFrame",
   "scipy.stats.logistic.rvs",
   "scipy.stats.weibull_min.rvs"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestAFTFitters.test_warning_is_present_if_entry_greater_than_duration": {
  "lineno": 1419,
  "symbols_in_volume": [
   "pytest.warns"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestAFTFitters.test_weights_col_and_start_col_is_not_included_in_the_output": {
  "lineno": 1425,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_estimation.TestAalenAdditiveFitter": {
  "lineno": 3327,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_estimation.TestAalenAdditiveFitter.aaf": {
  "lineno": 3328,
  "symbols_in_volume": [
   "lifelines.AalenAdditiveFitter",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestAalenAdditiveFitter.test_aalen_additive_fitter_versus_R": {
  "lineno": 3440,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestAalenAdditiveFitter.test_aalen_additive_fitter_versus_R_with_weights": {
  "lineno": 3450,
  "symbols_in_volume": [
   "lifelines.utils.StatisticalWarning",
   "numpy.testing.assert_allclose",
   "pytest.warns"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestAalenAdditiveFitter.test_aalen_additive_median_predictions_split_data": {
  "lineno": 3389,
  "symbols_in_volume": [
   "lifelines.AalenAdditiveFitter",
   "lifelines.generate_datasets.generate_hazard_rates",
   "lifelines.generate_datasets.generate_random_lifetimes",
   "numpy.inf",
   "numpy.linspace"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestAalenAdditiveFitter.test_crossval_for_aalen_add": {
  "lineno": 3420,
  "symbols_in_volume": [
   "lifelines.AalenAdditiveFitter",
   "lifelines.utils.k_fold_cross_validation",
   "numpy.mean"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestAalenAdditiveFitter.test_cumulative_hazards_versus_R": {
  "lineno": 3465,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestAalenAdditiveFitter.test_dataframe_input_with_nonstandard_index": {
  "lineno": 3411,
  "symbols_in_volume": [
   "lifelines.AalenAdditiveFitter",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestAalenAdditiveFitter.test_input_column_order_is_equal_to_output_hazards_order": {
  "lineno": 3354,
  "symbols_in_volume": [
   "lifelines.AalenAdditiveFitter"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestAalenAdditiveFitter.test_large_dimensions_for_recursion_error": {
  "lineno": 3380,
  "symbols_in_volume": [
   "lifelines.AalenAdditiveFitter",
   "numpy.random.exponential",
   "numpy.random.randn",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestAalenAdditiveFitter.test_penalizer_reduces_norm_of_hazards": {
  "lineno": 3343,
  "symbols_in_volume": [
   "lifelines.AalenAdditiveFitter",
   "numpy.linalg.norm"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestAalenAdditiveFitter.test_predict_cumulative_hazard_inputs": {
  "lineno": 3432,
  "symbols_in_volume": [
   "lifelines.AalenAdditiveFitter",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestAalenAdditiveFitter.test_slope_tests_against_R": {
  "lineno": 3332,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestAalenAdditiveFitter.test_swapping_order_of_columns_in_a_df_is_okay": {
  "lineno": 3365,
  "symbols_in_volume": [
   "lifelines.AalenAdditiveFitter",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestAalenJohansenFitter": {
  "lineno": 3931,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_estimation.TestAalenJohansenFitter.duration": {
  "lineno": 3932,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestAalenJohansenFitter.event_observed": {
  "lineno": 3936,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestAalenJohansenFitter.fitter": {
  "lineno": 3940,
  "symbols_in_volume": [
   "lifelines.AalenJohansenFitter",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestAalenJohansenFitter.kmfitter": {
  "lineno": 3944,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestAalenJohansenFitter.test_aj_less_than_km": {
  "lineno": 4048,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.array",
   "numpy.where"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestAalenJohansenFitter.test_ci_calculation_against_sas": {
  "lineno": 4071,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestAalenJohansenFitter.test_event_table_is_correct": {
  "lineno": 3973,
  "symbols_in_volume": [
   "pandas.DataFrame.from_records",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestAalenJohansenFitter.test_jitter": {
  "lineno": 3948,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.not_equal",
   "numpy.testing.assert_equal",
   "pandas.Series"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestAalenJohansenFitter.test_no_competing_risk": {
  "lineno": 4058,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestAalenJohansenFitter.test_tied_input_data": {
  "lineno": 3954,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.not_equal",
   "numpy.testing.assert_equal",
   "pytest.warns"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestAalenJohansenFitter.test_updated_censor_ties": {
  "lineno": 3967,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestAalenJohansenFitter.test_updated_input_ties": {
  "lineno": 3961,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestAalenJohansenFitter.test_variance_calculation_against_sas": {
  "lineno": 4065,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestBaseFitter": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_estimation.TestBaseFitter.test_repr_with_fitter": {
  "lineno": 160,
  "symbols_in_volume": [
   "lifelines.fitters.BaseFitter"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestBaseFitter.test_repr_without_fitter": {
  "lineno": 156,
  "symbols_in_volume": [
   "lifelines.fitters.BaseFitter"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestBreslowFlemingHarringtonFitter": {
  "lineno": 1230,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_estimation.TestBreslowFlemingHarringtonFitter.test_BHF_fit_when_KMF_throws_an_error": {
  "lineno": 1231,
  "symbols_in_volume": [
   "lifelines.BreslowFlemingHarringtonFitter",
   "lifelines.KaplanMeierFitter",
   "lifelines.utils.StatError",
   "numpy.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter": {
  "lineno": 1810,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_estimation.TestCoxPHFitter.cph": {
  "lineno": 1811,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_adding_non_integer_weights_is_fine_if_robust_is_on": {
  "lineno": 2881,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "numpy.random.exponential",
   "pytest.warns"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_all_okay_with_non_trivial_index_in_dataframe": {
  "lineno": 3244,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "numpy.random.randint",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_baseline_cumulative_hazard_is_the_same_indp_of_location": {
  "lineno": 3119,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_baseline_hazard_works_with_strata_against_R_output": {
  "lineno": 3057,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_baseline_hazard_works_with_weights_against_R_output": {
  "lineno": 3078,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_baseline_survival_is_the_same_indp_of_location": {
  "lineno": 3106,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_baseline_survival_is_the_same_indp_of_scale": {
  "lineno": 3150,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_batch_efron_computed_by_hand_examples": {
  "lineno": 2185,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array",
   "numpy.ones_like"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_check_assumptions": {
  "lineno": 1843,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_check_assumptions_fails_for_nonunique_index": {
  "lineno": 3318,
  "symbols_in_volume": [
   "numpy.ones",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_cluster_option": {
  "lineno": 2544,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_cluster_option_with_strata": {
  "lineno": 2573,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_coef_output_against_R_super_accurate": {
  "lineno": 2369,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "numpy.array",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_coef_output_against_R_using_non_trivial_but_integer_weights": {
  "lineno": 2404,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "numpy.array",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_coef_output_against_R_with_strata_super_accurate": {
  "lineno": 2388,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "numpy.array",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_coef_output_against_Survival_Analysis_by_John_Klein_and_Melvin_Moeschberger": {
  "lineno": 2963,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.datasets.load_kidney_transplant",
   "numpy.array",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_compute_likelihood_ratio_test_is_different_if_weights_are_provided": {
  "lineno": 2734,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.utils.StatisticalWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_cox_ph_prediction_monotonicity": {
  "lineno": 2281,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.utils.concordance_index"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_cox_ph_prediction_with_series": {
  "lineno": 2268,
  "symbols_in_volume": [
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_cox_ph_prediction_with_series_of_longer_length": {
  "lineno": 2274,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_coxph_throws_a_explainable_error_when_predict_sees_a_strata_it_hasnt_seen": {
  "lineno": 3016,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.utils.StatError",
   "pandas.DataFrame.from_records",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_cph_doesnt_modify_original_dataframe": {
  "lineno": 1848,
  "symbols_in_volume": [
   "numpy.dtype",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_cph_will_handle_times_with_only_censored_individuals": {
  "lineno": 1863,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_crossval_for_cox_ph": {
  "lineno": 2324,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.utils.k_fold_cross_validation",
   "numpy.mean"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_crossval_for_cox_ph_normalized": {
  "lineno": 2338,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.utils.k_fold_cross_validation",
   "numpy.mean",
   "numpy.std"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_crossval_for_cox_ph_with_normalizing_times": {
  "lineno": 2301,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.utils.k_fold_cross_validation",
   "numpy.mean",
   "numpy.std"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_data_normalization": {
  "lineno": 2253,
  "symbols_in_volume": [
   "lifelines.utils.concordance_index"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_delta_betas_are_the_same_as_in_R": {
  "lineno": 2450,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.utils.normalize",
   "numpy.array",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_delta_betas_with_strata_are_the_same_as_in_R": {
  "lineno": 2480,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.utils.normalize",
   "numpy.array",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_delta_betas_with_weights_are_the_same_as_in_R": {
  "lineno": 2513,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.utils.normalize",
   "numpy.array",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_doubling_the_weights_halves_the_variance": {
  "lineno": 2867,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_durations_of_zero_are_okay": {
  "lineno": 3240,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_efron_newtons_method": {
  "lineno": 2227,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.ones_like",
   "pandas.Series"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_error_is_raised_if_using_non_numeric_data_in_prediction": {
  "lineno": 2047,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_error_thrown_weights_are_nonpositive": {
  "lineno": 3163,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_fit_method": {
  "lineno": 2233,
  "symbols_in_volume": [
   "numpy.abs"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_input_column_order_is_equal_to_output_hazards_order": {
  "lineno": 2996,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_less_trival_float_weights_with_no_ties_is_the_same_as_R": {
  "lineno": 2807,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.utils.StatisticalWarning",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pytest.warns"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_log_likelihood": {
  "lineno": 2139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_log_likelihood_test_against_R": {
  "lineno": 2922,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_log_likelihood_test_against_R_with_weights": {
  "lineno": 2750,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.utils.StatisticalWarning",
   "pandas.DataFrame",
   "pytest.warns"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_martingale_residuals": {
  "lineno": 2038,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_non_trival_float_weights_with_no_ties_is_the_same_as_R": {
  "lineno": 2835,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.utils.StatisticalWarning",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pytest.warns"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_original_index_is_respected_in_all_residual_tests": {
  "lineno": 2004,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_original_index_is_respected_in_all_residual_tests_with_strata": {
  "lineno": 2021,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_output_with_strata_against_R": {
  "lineno": 2938,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "numpy.array",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_p_value_against_Survival_Analysis_by_John_Klein_and_Melvin_Moeschberger": {
  "lineno": 2985,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.datasets.load_larynx",
   "numpy.array",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_penalized_output_against_R": {
  "lineno": 2951,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "numpy.array",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_prediction_methods_will_accept_a_times_arg_to_reindex_the_predictions": {
  "lineno": 2243,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_print_summary": {
  "lineno": 2091,
  "symbols_in_volume": [
   "io.StringIO",
   "sys.stdout"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_print_summary_with_decimals": {
  "lineno": 2068,
  "symbols_in_volume": [
   "io.StringIO",
   "lifelines.CoxPHFitter",
   "sys.stdout"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_robust_errors_against_R_no_ties": {
  "lineno": 3256,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_robust_errors_is_the_same_as_R": {
  "lineno": 2705,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_robust_errors_with_less_trival_weights_is_the_same_as_R": {
  "lineno": 2602,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "numpy.array",
   "numpy.testing.assert_array_almost_equal",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_robust_errors_with_non_trivial_weights_is_the_same_as_R": {
  "lineno": 2641,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_robust_errors_with_non_trivial_weights_with_censorship_is_the_same_as_R": {
  "lineno": 2673,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_robust_errors_with_strata_against_R": {
  "lineno": 3262,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_robust_errors_with_strata_against_R_super_accurate": {
  "lineno": 3288,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "pandas.DataFrame",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_robust_errors_with_trivial_weights_is_the_same_than_R": {
  "lineno": 2414,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "numpy.array",
   "numpy.testing.assert_array_almost_equal",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_scaled_schoenfeld_residuals_against_R": {
  "lineno": 1990,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_schoenfeld_residuals_no_strata_but_with_censorship": {
  "lineno": 1874,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_schoenfeld_residuals_with_censorship_and_ties": {
  "lineno": 1900,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_schoenfeld_residuals_with_first_subjects_censored": {
  "lineno": 1984,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_schoenfeld_residuals_with_strata": {
  "lineno": 1953,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_schoenfeld_residuals_with_weights": {
  "lineno": 1926,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_se_against_Survival_Analysis_by_John_Klein_and_Melvin_Moeschberger": {
  "lineno": 2974,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.datasets.load_larynx",
   "numpy.array",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_single_efron_computed_by_hand_examples": {
  "lineno": 2143,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array",
   "numpy.ones_like"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_standard_error_coef_output_against_R": {
  "lineno": 2890,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "numpy.array",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_strata_against_R_output": {
  "lineno": 3042,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_strata_from_init_is_used_in_fit_later": {
  "lineno": 3094,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_strata_removes_variable_from_summary_output": {
  "lineno": 3002,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_strata_will_work_with_matched_pairs": {
  "lineno": 2057,
  "symbols_in_volume": [
   "numpy.floor"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_strata_works_if_only_a_single_element_is_in_the_strata": {
  "lineno": 3007,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.datasets.load_holly_molly_polly"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_summary": {
  "lineno": 2062,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_summary_output_using_non_trivial_but_integer_weights": {
  "lineno": 2852,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_survival_prediction_is_the_same_indp_of_location": {
  "lineno": 3132,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_survival_prediction_is_the_same_indp_of_scale": {
  "lineno": 3169,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_that_a_convergence_warning_is_not_thrown_if_using_compute_residuals": {
  "lineno": 1815,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.utils.ConvergenceWarning",
   "numpy.random.exponential",
   "pytest.warns"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_that_adding_strata_will_change_c_index": {
  "lineno": 1827,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_trival_float_weights_with_no_ties_is_the_same_as_R": {
  "lineno": 2776,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.utils.StatisticalWarning",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pytest.warns"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_using_dataframes_vs_numpy_arrays": {
  "lineno": 2237,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_warning_is_raised_if_complete_separation_is_present": {
  "lineno": 3206,
  "symbols_in_volume": [
   "lifelines.utils.ConvergenceWarning",
   "numpy.arange",
   "numpy.random.randn",
   "pandas.DataFrame.from_records",
   "pytest.warns"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_warning_is_raised_if_df_has_a_near_constant_column": {
  "lineno": 3186,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.utils.ConvergenceError",
   "lifelines.utils.ConvergenceWarning",
   "pytest.raises",
   "pytest.warns"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_warning_is_raised_if_df_has_a_near_constant_column_in_one_separation": {
  "lineno": 3194,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.utils.ConvergenceWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_what_happens_to_nans": {
  "lineno": 3313,
  "symbols_in_volume": [
   "numpy.nan",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_what_happens_when_column_is_constant_for_all_non_deaths": {
  "lineno": 3222,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.utils.ConvergenceWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_what_happens_with_colinear_inputs": {
  "lineno": 3235,
  "symbols_in_volume": [
   "lifelines.utils.ConvergenceError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxPHFitter.test_z_value_output_against_R_to_3_decimal_places": {
  "lineno": 2906,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "numpy.array",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxTimeVaryingFitter": {
  "lineno": 3482,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_estimation.TestCoxTimeVaryingFitter.ctv": {
  "lineno": 3483,
  "symbols_in_volume": [
   "lifelines.CoxTimeVaryingFitter",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxTimeVaryingFitter.dfcv": {
  "lineno": 3487,
  "symbols_in_volume": [
   "lifelines.datasets.load_dfcv",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxTimeVaryingFitter.heart": {
  "lineno": 3493,
  "symbols_in_volume": [
   "lifelines.datasets.load_stanford_heart_transplants",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxTimeVaryingFitter.test_all_okay_with_non_trivial_index_in_dataframe": {
  "lineno": 3812,
  "symbols_in_volume": [
   "lifelines.CoxTimeVaryingFitter",
   "numpy.random.randint",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxTimeVaryingFitter.test_ctv_against_cph_for_static_datasets_but_one_is_long": {
  "lineno": 3890,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.CoxTimeVaryingFitter",
   "lifelines.datasets.load_rossi",
   "lifelines.utils.to_episodic_format",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxTimeVaryingFitter.test_ctv_baseline_cumulative_hazard_against_R": {
  "lineno": 3724,
  "symbols_in_volume": [
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxTimeVaryingFitter.test_ctv_fitter_will_give_the_same_results_as_static_cox_model": {
  "lineno": 3615,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.utils.to_long_format",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxTimeVaryingFitter.test_ctv_fitter_will_handle_integer_weight_as_static_model": {
  "lineno": 3627,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.utils.to_long_format",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxTimeVaryingFitter.test_ctv_fitter_will_handle_trivial_weight_col": {
  "lineno": 3592,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxTimeVaryingFitter.test_ctv_prediction_methods": {
  "lineno": 3719,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_estimation.TestCoxTimeVaryingFitter.test_ctv_ratio_test_with_strata": {
  "lineno": 3922,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxTimeVaryingFitter.test_ctv_ratio_test_with_strata_and_initial_point": {
  "lineno": 3926,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxTimeVaryingFitter.test_ctv_with_multiple_strata": {
  "lineno": 3918,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxTimeVaryingFitter.test_ctv_with_strata_against_R": {
  "lineno": 3903,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxTimeVaryingFitter.test_doubling_the_weights_halves_the_variance": {
  "lineno": 3602,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxTimeVaryingFitter.test_error_is_raised_if_using_non_numeric_data": {
  "lineno": 3688,
  "symbols_in_volume": [
   "lifelines.CoxTimeVaryingFitter",
   "pandas.DataFrame.from_dict",
   "pandas.Series",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxTimeVaryingFitter.test_error_thrown_if_column_doesnt_exist": {
  "lineno": 3841,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxTimeVaryingFitter.test_error_thrown_weights_are_nonpositive": {
  "lineno": 3836,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxTimeVaryingFitter.test_fitter_accept_boolean_columns": {
  "lineno": 3649,
  "symbols_in_volume": [
   "pandas.DataFrame.from_records"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxTimeVaryingFitter.test_fitter_will_error_if_degenerate_time": {
  "lineno": 3576,
  "symbols_in_volume": [
   "pandas.DataFrame.from_records",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxTimeVaryingFitter.test_fitter_will_raise_a_warning_if_instaneous_observation_present": {
  "lineno": 3558,
  "symbols_in_volume": [
   "pandas.DataFrame.from_records",
   "pytest.warns"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxTimeVaryingFitter.test_fitter_will_raise_an_error_if_immediate_death_present": {
  "lineno": 3546,
  "symbols_in_volume": [
   "pandas.DataFrame.from_records",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxTimeVaryingFitter.test_inference_against_known_R_output": {
  "lineno": 3497,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxTimeVaryingFitter.test_inference_against_known_R_output_with_weights": {
  "lineno": 3520,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxTimeVaryingFitter.test_likelihood_ratio_test_against_R": {
  "lineno": 3829,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_estimation.TestCoxTimeVaryingFitter.test_penalizer": {
  "lineno": 3824,
  "symbols_in_volume": [
   "lifelines.CoxTimeVaryingFitter"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxTimeVaryingFitter.test_print_summary": {
  "lineno": 3845,
  "symbols_in_volume": [
   "io.StringIO",
   "sys.stdout"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxTimeVaryingFitter.test_repr_with_fitter": {
  "lineno": 3803,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_estimation.TestCoxTimeVaryingFitter.test_summary_output_versus_Rs_against_standford_heart_transplant": {
  "lineno": 3677,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxTimeVaryingFitter.test_warning_is_raised_if_df_has_a_near_constant_column": {
  "lineno": 3661,
  "symbols_in_volume": [
   "lifelines.utils.ConvergenceError",
   "lifelines.utils.ConvergenceWarning",
   "pytest.raises",
   "pytest.warns"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxTimeVaryingFitter.test_warning_is_raised_if_df_has_a_near_constant_column_in_one_separation": {
  "lineno": 3668,
  "symbols_in_volume": [
   "lifelines.utils.ConvergenceWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestCoxTimeVaryingFitter.test_what_happens_to_nans": {
  "lineno": 3509,
  "symbols_in_volume": [
   "numpy.nan",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestExponentialFitter": {
  "lineno": 849,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_estimation.TestExponentialFitter.test_fit_computes_correct_asymptotic_variance": {
  "lineno": 857,
  "symbols_in_volume": [
   "lifelines.ExponentialFitter",
   "numpy.minimum",
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestExponentialFitter.test_fit_computes_correct_lambda_": {
  "lineno": 850,
  "symbols_in_volume": [
   "lifelines.ExponentialFitter",
   "numpy.array"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestKaplanMeierFitter": {
  "lineno": 868,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_estimation.TestKaplanMeierFitter.kaplan_meier": {
  "lineno": 869,
  "symbols_in_volume": [
   "collections.Counter",
   "numpy.insert",
   "numpy.sort",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestKaplanMeierFitter.test_adding_weights_to_KaplanMeierFitter": {
  "lineno": 1012,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "numpy.random.binomial",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestKaplanMeierFitter.test_kaplan_meier_no_censorship": {
  "lineno": 907,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestKaplanMeierFitter.test_kaplan_meier_with_censorship": {
  "lineno": 913,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestKaplanMeierFitter.test_kmf_confidence_intervals_output_against_R": {
  "lineno": 991,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "lifelines.datasets.load_g3",
   "numpy.array",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestKaplanMeierFitter.test_kmf_does_not_drop_to_zero_if_last_point_is_censored": {
  "lineno": 1004,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "numpy.arange",
   "numpy.argmax",
   "numpy.random.binomial"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestKaplanMeierFitter.test_kmf_has_both_survival_function_and_cumulative_density": {
  "lineno": 1061,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "numpy.arange",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestKaplanMeierFitter.test_kmf_left_censorship_stats": {
  "lineno": 940,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "numpy.array",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestKaplanMeierFitter.test_kmf_survival_curve_output_against_R": {
  "lineno": 964,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "lifelines.datasets.load_g3",
   "numpy.array",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestKaplanMeierFitter.test_kmf_survival_curve_output_against_R_super_accurate": {
  "lineno": 977,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "lifelines.datasets.load_g3",
   "numpy.array",
   "numpy.testing.assert_allclose",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestKaplanMeierFitter.test_late_entry_with_against_R": {
  "lineno": 1052,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestKaplanMeierFitter.test_late_entry_with_almost_tied_entry_and_death_against_R": {
  "lineno": 1043,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestKaplanMeierFitter.test_late_entry_with_tied_entry_and_death": {
  "lineno": 1084,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "numpy.ceil",
   "numpy.cumprod",
   "numpy.floor",
   "numpy.min",
   "numpy.random.seed",
   "numpy.random.weibull",
   "numpy.testing.assert_allclose",
   "numpy.where",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestKaplanMeierFitter.test_left_truncation_against_Cole_and_Hudgens": {
  "lineno": 891,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "lifelines.datasets.load_multicenter_aids_cohort_study"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestKaplanMeierFitter.test_passing_in_left_censorship_creates_a_cumulative_density": {
  "lineno": 933,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestKaplanMeierFitter.test_shifting_durations_doesnt_affect_survival_function_values": {
  "lineno": 950,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "numpy.random.exponential",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestKaplanMeierFitter.test_sort_doesnt_affect_kmf": {
  "lineno": 928,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestKaplanMeierFitter.test_stat_error_is_raised_if_too_few_early_deaths": {
  "lineno": 919,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "lifelines.utils.StatError",
   "numpy.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestKaplanMeierFitter.test_weights_can_be_floats": {
  "lineno": 1025,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "lifelines.utils.StatisticalWarning",
   "numpy.random.binomial",
   "numpy.random.random",
   "pytest.warns"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestKaplanMeierFitter.test_weights_with_unaligned_index": {
  "lineno": 1033,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "lifelines.utils.StatisticalWarning",
   "pandas.DataFrame",
   "pytest.warns"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestLogLogisticAFTFitter": {
  "lineno": 1580,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_estimation.TestLogLogisticAFTFitter.aft": {
  "lineno": 1581,
  "symbols_in_volume": [
   "lifelines.LogLogisticAFTFitter",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestLogLogisticAFTFitter.test_coefs_with_fitted_ancillary_params": {
  "lineno": 1585,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestLogLogisticAFTFitter.test_proportional_odds": {
  "lineno": 1600,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestLogLogisticFitter": {
  "lineno": 674,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_estimation.TestLogLogisticFitter.llf": {
  "lineno": 675,
  "symbols_in_volume": [
   "lifelines.LogLogisticFitter",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestLogLogisticFitter.test_llf_large_values": {
  "lineno": 722,
  "symbols_in_volume": [
   "numpy.minimum",
   "scipy.stats.fisk.rvs"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestLogLogisticFitter.test_llf_less_simple_inference": {
  "lineno": 697,
  "symbols_in_volume": [
   "scipy.stats.fisk.rvs"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestLogLogisticFitter.test_llf_less_simple_inference_with_censorship": {
  "lineno": 707,
  "symbols_in_volume": [
   "numpy.minimum",
   "scipy.stats.fisk.rvs"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestLogLogisticFitter.test_llf_simple_inference": {
  "lineno": 689,
  "symbols_in_volume": [
   "scipy.stats.fisk.rvs"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestLogLogisticFitter.test_llf_small_values": {
  "lineno": 738,
  "symbols_in_volume": [
   "numpy.minimum",
   "pytest.mark.xfail",
   "scipy.stats.fisk.rvs"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestLogLogisticFitter.test_loglogistic_model_does_not_except_negative_or_zero_values": {
  "lineno": 679,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestLogNormalAFTFitter": {
  "lineno": 1559,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_estimation.TestLogNormalAFTFitter.aft": {
  "lineno": 1560,
  "symbols_in_volume": [
   "lifelines.LogNormalAFTFitter",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestLogNormalAFTFitter.test_coefs_with_fitted_ancillary_params": {
  "lineno": 1564,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestLogNormalFitter": {
  "lineno": 571,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_estimation.TestLogNormalFitter.lnf": {
  "lineno": 572,
  "symbols_in_volume": [
   "lifelines.LogNormalFitter",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestLogNormalFitter.test_cumulative_hazard_doesnt_fail": {
  "lineno": 592,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.random.randn",
   "pandas.Series"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestLogNormalFitter.test_fit": {
  "lineno": 576,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.ones_like",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestLogNormalFitter.test_lnf_inference": {
  "lineno": 604,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.minimum",
   "numpy.percentile",
   "numpy.random.randn",
   "numpy.random.uniform"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestLogNormalFitter.test_lnf_inference_no_censorship": {
  "lineno": 661,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.random.exponential",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestLogNormalFitter.test_lnf_inference_with_large_sigma": {
  "lineno": 619,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.minimum",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestLogNormalFitter.test_lnf_inference_with_really_small_sigma": {
  "lineno": 647,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.minimum",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestLogNormalFitter.test_lnf_inference_with_small_sigma": {
  "lineno": 633,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.minimum",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestLogNormalFitter.test_lognormal_model_does_not_except_negative_or_zero_values": {
  "lineno": 583,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestNelsonAalenFitter": {
  "lineno": 1130,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_estimation.TestNelsonAalenFitter.nelson_aalen": {
  "lineno": 1131,
  "symbols_in_volume": [
   "collections.Counter",
   "numpy.insert",
   "numpy.sort",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestNelsonAalenFitter.test_adding_weights_to_NelsonAalenFitter": {
  "lineno": 1216,
  "symbols_in_volume": [
   "lifelines.NelsonAalenFitter",
   "numpy.random.binomial",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestNelsonAalenFitter.test_censor_nelson_aalen": {
  "lineno": 1159,
  "symbols_in_volume": [
   "lifelines.NelsonAalenFitter",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestNelsonAalenFitter.test_iloc_slicing": {
  "lineno": 1169,
  "symbols_in_volume": [
   "lifelines.NelsonAalenFitter"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestNelsonAalenFitter.test_loc_slicing": {
  "lineno": 1165,
  "symbols_in_volume": [
   "lifelines.NelsonAalenFitter"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestNelsonAalenFitter.test_nelson_aalen_no_censorship": {
  "lineno": 1153,
  "symbols_in_volume": [
   "lifelines.NelsonAalenFitter",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestNelsonAalenFitter.test_nelson_aalen_smoothing": {
  "lineno": 1204,
  "symbols_in_volume": [
   "lifelines.NelsonAalenFitter",
   "numpy.random.binomial",
   "numpy.random.exponential",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestNelsonAalenFitter.test_smoothing_hazard_nontied": {
  "lineno": 1181,
  "symbols_in_volume": [
   "lifelines.NelsonAalenFitter",
   "numpy.random.binomial",
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestNelsonAalenFitter.test_smoothing_hazard_ties": {
  "lineno": 1174,
  "symbols_in_volume": [
   "lifelines.NelsonAalenFitter",
   "numpy.random.binomial"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestNelsonAalenFitter.test_smoothing_hazard_ties_all_events_observed": {
  "lineno": 1190,
  "symbols_in_volume": [
   "lifelines.NelsonAalenFitter",
   "numpy.random.binomial"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestNelsonAalenFitter.test_smoothing_hazard_with_spike_at_time_0": {
  "lineno": 1196,
  "symbols_in_volume": [
   "lifelines.NelsonAalenFitter",
   "numpy.random.binomial"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestParametricUnivariateFitters": {
  "lineno": 170,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_estimation.TestParametricUnivariateFitters.test_confidence_interval_is_expected": {
  "lineno": 171,
  "symbols_in_volume": [
   "autograd.scipy.special.logit",
   "flaky.flaky",
   "numpy.isnan",
   "numpy.log",
   "numpy.random.exponential",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestParametricUnivariateFitters.test_confidence_interval_is_expected.UpperAsymptoteFitter": {
  "lineno": 184,
  "symbols_in_volume": [
   "lifelines.fitters.ParametericUnivariateFitter"
  ],
  "type": "class"
 },
 "tests.test_estimation.TestParametricUnivariateFitters.test_confidence_interval_is_expected.UpperAsymptoteFitter._cumulative_hazard": {
  "lineno": 190,
  "symbols_in_volume": [
   "autograd.scipy.stats.norm.cdf"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestParametricUnivariateFitters.test_models_can_handle_really_large_duration_values": {
  "lineno": 204,
  "symbols_in_volume": [
   "numpy.minimum",
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestParametricUnivariateFitters.test_models_can_handle_really_small_duration_values": {
  "lineno": 212,
  "symbols_in_volume": [
   "numpy.minimum",
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestParametricUnivariateFitters.test_models_can_handle_really_small_duration_values_for_left_censorship": {
  "lineno": 221,
  "symbols_in_volume": [
   "numpy.maximum",
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestParametricUnivariateFitters.test_parametric_univarite_fitters_can_print_summary": {
  "lineno": 232,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_estimation.TestParametricUnivariateFitters.test_parametric_univarite_fitters_has_confidence_intervals": {
  "lineno": 240,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_estimation.TestParametricUnivariateFitters.test_warnings_for_problematic_cumulative_hazards": {
  "lineno": 249,
  "symbols_in_volume": [
   "lifelines.utils.StatisticalWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestParametricUnivariateFitters.test_warnings_for_problematic_cumulative_hazards.DecreasingFitter": {
  "lineno": 257,
  "symbols_in_volume": [
   "lifelines.fitters.ParametericUnivariateFitter"
  ],
  "type": "class"
 },
 "tests.test_estimation.TestParametricUnivariateFitters.test_warnings_for_problematic_cumulative_hazards.DecreasingFitter._cumulative_hazard": {
  "lineno": 261,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_estimation.TestParametricUnivariateFitters.test_warnings_for_problematic_cumulative_hazards.NegativeFitter": {
  "lineno": 250,
  "symbols_in_volume": [
   "lifelines.fitters.ParametericUnivariateFitter"
  ],
  "type": "class"
 },
 "tests.test_estimation.TestParametricUnivariateFitters.test_warnings_for_problematic_cumulative_hazards.NegativeFitter._cumulative_hazard": {
  "lineno": 254,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_estimation.TestPiecewiseExponentialFitter": {
  "lineno": 541,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_estimation.TestPiecewiseExponentialFitter.test_fit_on_simulated_data": {
  "lineno": 555,
  "symbols_in_volume": [
   "flaky.flaky",
   "lifelines.PiecewiseExponentialFitter",
   "lifelines.generate_datasets.piecewise_exponential_survival_data",
   "numpy.minimum",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestPiecewiseExponentialFitter.test_fit_with_bad_breakpoints_raises_error": {
  "lineno": 542,
  "symbols_in_volume": [
   "lifelines.PiecewiseExponentialFitter",
   "numpy.inf",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestRegressionFitters": {
  "lineno": 1246,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_estimation.TestRegressionFitters.regression_models": {
  "lineno": 1247,
  "symbols_in_volume": [
   "lifelines.AalenAdditiveFitter",
   "lifelines.CoxPHFitter",
   "lifelines.LogLogisticAFTFitter",
   "lifelines.LogNormalAFTFitter",
   "lifelines.WeibullAFTFitter",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestRegressionFitters.test_dill_serialization": {
  "lineno": 1259,
  "symbols_in_volume": [
   "dill.dumps",
   "dill.loads"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestRegressionFitters.test_duration_vector_can_be_normalized_up_to_an_intercept": {
  "lineno": 1320,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestRegressionFitters.test_error_is_raised_if_using_non_numeric_data_in_fit": {
  "lineno": 1359,
  "symbols_in_volume": [
   "pandas.DataFrame.from_dict",
   "pandas.Series",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestRegressionFitters.test_error_is_thrown_if_there_is_nans_in_the_duration_col": {
  "lineno": 1401,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestRegressionFitters.test_error_is_thrown_if_there_is_nans_in_the_event_col": {
  "lineno": 1407,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestRegressionFitters.test_fit_methods_can_accept_optional_event_col_param": {
  "lineno": 1296,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.testing.assert_array_equal",
   "pandas.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestRegressionFitters.test_fit_methods_require_duration_col": {
  "lineno": 1291,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestRegressionFitters.test_fit_will_accept_object_dtype_as_event_col": {
  "lineno": 1278,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestRegressionFitters.test_pickle": {
  "lineno": 1269,
  "symbols_in_volume": [
   "io.BytesIO",
   "pickle.dump",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestRegressionFitters.test_predict_methods_in_regression_return_same_types": {
  "lineno": 1304,
  "symbols_in_volume": [
   "itertools.combinations"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestRegressionFitters.test_prediction_methods_respect_index": {
  "lineno": 1346,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_equal",
   "pandas.Index"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestRegressionFitters.test_regression_model_has_score_": {
  "lineno": 1383,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_estimation.TestRegressionFitters.test_regression_model_updates_score_": {
  "lineno": 1390,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_estimation.TestUnivariateFitters": {
  "lineno": 271,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_estimation.TestUnivariateFitters.test_allow_dataframes": {
  "lineno": 285,
  "symbols_in_volume": [
   "numpy.random.exponential",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestUnivariateFitters.test_ci_is_not_all_nan": {
  "lineno": 427,
  "symbols_in_volume": [
   "pandas.isnull"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestUnivariateFitters.test_ci_labels": {
  "lineno": 420,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestUnivariateFitters.test_conditional_time_to_allows_custom_timelines": {
  "lineno": 310,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.random.binomial"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestUnivariateFitters.test_custom_timeline": {
  "lineno": 400,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_estimation.TestUnivariateFitters.test_custom_timeline_can_be_list_or_array": {
  "lineno": 385,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestUnivariateFitters.test_default_alpha_is_005": {
  "lineno": 292,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_estimation.TestUnivariateFitters.test_dill_serialization": {
  "lineno": 528,
  "symbols_in_volume": [
   "dill.dumps",
   "dill.loads"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestUnivariateFitters.test_divide_function": {
  "lineno": 473,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.concatenate",
   "numpy.log",
   "numpy.testing.assert_array_almost_equal",
   "numpy.unique"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestUnivariateFitters.test_divide_function_with_labelled_data": {
  "lineno": 486,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestUnivariateFitters.test_label_is_a_property": {
  "lineno": 411,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_estimation.TestUnivariateFitters.test_lists_as_input": {
  "lineno": 433,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestUnivariateFitters.test_pickle_serialization": {
  "lineno": 517,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestUnivariateFitters.test_predict_method_returns_an_approximation_if_not_in_the_index": {
  "lineno": 378,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestUnivariateFitters.test_predict_method_returns_exact_value_if_given_an_observed_time": {
  "lineno": 371,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestUnivariateFitters.test_predict_methods_returns_a_scalar_or_a_array_depending_on_input": {
  "lineno": 361,
  "symbols_in_volume": [
   "collections.Iterable"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestUnivariateFitters.test_subtract_function_with_labelled_data": {
  "lineno": 460,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestUnivariateFitters.test_subtraction_function": {
  "lineno": 446,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.concatenate",
   "numpy.testing.assert_array_almost_equal",
   "numpy.unique"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestUnivariateFitters.test_typeerror_is_thrown_if_there_is_nans_in_the_duration_col": {
  "lineno": 504,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestUnivariateFitters.test_typeerror_is_thrown_if_there_is_nans_in_the_event_col": {
  "lineno": 510,
  "symbols_in_volume": [
   "numpy.arange",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestUnivariateFitters.test_univariate_fitters_allows_one_to_change_alpha_at_fit_time": {
  "lineno": 318,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_estimation.TestUnivariateFitters.test_univariate_fitters_have_a_plot_method": {
  "lineno": 331,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_estimation.TestUnivariateFitters.test_univariate_fitters_ok_if_given_timedelta": {
  "lineno": 338,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_allclose",
   "pandas.Series",
   "pandas.to_datetime",
   "pytest.warns"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestUnivariateFitters.test_univariate_fitters_okay_if_given_boolean_col_with_object_dtype": {
  "lineno": 351,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.warns"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestUnivariateFitters.test_univarite_fitters_accept_late_entries": {
  "lineno": 296,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_estimation.TestUnivariateFitters.test_univarite_fitters_with_survival_function_have_conditional_time_to_": {
  "lineno": 302,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_estimation.TestUnivariateFitters.test_valueerror_is_thrown_if_alpha_out_of_bounds": {
  "lineno": 499,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestUnivariateFitters.univariate_fitters": {
  "lineno": 272,
  "symbols_in_volume": [
   "lifelines.BreslowFlemingHarringtonFitter",
   "lifelines.ExponentialFitter",
   "lifelines.KaplanMeierFitter",
   "lifelines.LogLogisticFitter",
   "lifelines.LogNormalFitter",
   "lifelines.NelsonAalenFitter",
   "lifelines.WeibullFitter",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestWeibullAFTFitter": {
  "lineno": 1619,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_estimation.TestWeibullAFTFitter.aft": {
  "lineno": 1620,
  "symbols_in_volume": [
   "lifelines.WeibullAFTFitter",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestWeibullAFTFitter.test_ancillary_None_is_same_as_False": {
  "lineno": 1743,
  "symbols_in_volume": [
   "lifelines.WeibullAFTFitter",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestWeibullAFTFitter.test_ancillary_True_is_same_as_full_df": {
  "lineno": 1736,
  "symbols_in_volume": [
   "lifelines.WeibullAFTFitter",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestWeibullAFTFitter.test_coefs_with_fitted_ancillary_params": {
  "lineno": 1721,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestWeibullAFTFitter.test_fit_intercept": {
  "lineno": 1750,
  "symbols_in_volume": [
   "lifelines.WeibullAFTFitter",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestWeibullAFTFitter.test_fitted_coefs_match_with_flexsurv_has": {
  "lineno": 1675,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestWeibullAFTFitter.test_fitted_coefs_with_eha_when_left_truncated": {
  "lineno": 1624,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestWeibullAFTFitter.test_fitted_log_likelihood_match_with_flexsurv_has": {
  "lineno": 1711,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestWeibullAFTFitter.test_fitted_log_likelihood_ratio_test_match_with_flexsurv_has": {
  "lineno": 1716,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestWeibullAFTFitter.test_fitted_se_match_with_flexsurv_has": {
  "lineno": 1693,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestWeibullAFTFitter.test_fitted_se_with_eha_when_left_truncated": {
  "lineno": 1650,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestWeibullAFTFitter.test_passing_in_additional_ancillary_df_in_predict_methods_if_fitted_with_one": {
  "lineno": 1760,
  "symbols_in_volume": [
   "lifelines.WeibullAFTFitter",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestWeibullAFTFitter.test_passing_in_additional_ancillary_df_in_predict_methods_okay_if_not_fitted_with_one": {
  "lineno": 1771,
  "symbols_in_volume": [
   "lifelines.WeibullAFTFitter"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestWeibullAFTFitter.test_robust_errors_against_R": {
  "lineno": 1779,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestWeibullAFTFitter.test_robust_errors_against_R_with_weights": {
  "lineno": 1794,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestWeibullFitter": {
  "lineno": 756,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_estimation.TestWeibullFitter.test_convergence_completes_for_ever_increasing_data_sizes": {
  "lineno": 838,
  "symbols_in_volume": [
   "lifelines.WeibullFitter",
   "numpy.random.weibull",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestWeibullFitter.test_exponential_data_produces_correct_inference_no_censorship": {
  "lineno": 817,
  "symbols_in_volume": [
   "lifelines.WeibullFitter",
   "numpy.log",
   "numpy.median",
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestWeibullFitter.test_exponential_data_produces_correct_inference_with_censorship": {
  "lineno": 827,
  "symbols_in_volume": [
   "lifelines.WeibullFitter",
   "numpy.log",
   "numpy.minimum",
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestWeibullFitter.test_left_censorship_inference": {
  "lineno": 757,
  "symbols_in_volume": [
   "flaky.flaky",
   "lifelines.WeibullFitter",
   "numpy.maximum",
   "numpy.percentile",
   "numpy.random.randint",
   "numpy.random.weibull",
   "numpy.where",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestWeibullFitter.test_weibull_fit_returns_float_timelines": {
  "lineno": 799,
  "symbols_in_volume": [
   "lifelines.WeibullFitter",
   "numpy.linspace",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestWeibullFitter.test_weibull_model_does_not_except_negative_or_zero_values": {
  "lineno": 806,
  "symbols_in_volume": [
   "lifelines.WeibullFitter",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_estimation.TestWeibullFitter.test_weibull_with_delayed_entries": {
  "lineno": 781,
  "symbols_in_volume": [
   "lifelines.WeibullFitter",
   "numpy.abs",
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "tests.test_estimation.data_nus": {
  "lineno": 120,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_estimation.data_pred1": {
  "lineno": 94,
  "symbols_in_volume": [
   "numpy.random.normal",
   "numpy.random.uniform",
   "pandas.DataFrame",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_estimation.data_pred2": {
  "lineno": 109,
  "symbols_in_volume": [
   "numpy.random.normal",
   "numpy.random.uniform",
   "pandas.DataFrame",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_estimation.known_parametric_univariate_fitters": {
  "lineno": 150,
  "symbols_in_volume": [
   "lifelines.ExponentialFitter",
   "lifelines.LogLogisticFitter",
   "lifelines.LogNormalFitter",
   "lifelines.WeibullFitter",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_estimation.positive_sample_lifetimes": {
  "lineno": 83,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_estimation.regression_dataset": {
  "lineno": 145,
  "symbols_in_volume": [
   "lifelines.datasets.load_regression_dataset",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_estimation.rossi": {
  "lineno": 140,
  "symbols_in_volume": [
   "lifelines.datasets.load_rossi",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_estimation.sample_lifetimes": {
  "lineno": 77,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_estimation.waltons_dataset": {
  "lineno": 89,
  "symbols_in_volume": [
   "lifelines.datasets.load_waltons",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_generate_datasets": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_generate_datasets.test_exponential_data_sets_correct_censor": {
  "lineno": 11,
  "symbols_in_volume": [
   "lifelines.generate_datasets.exponential_survival_data"
  ],
  "type": "function"
 },
 "tests.test_generate_datasets.test_exponential_data_sets_fit": {
  "lineno": 18,
  "symbols_in_volume": [
   "lifelines.NelsonAalenFitter",
   "lifelines.generate_datasets.exponential_survival_data",
   "matplotlib.pyplot.title",
   "os.environ",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "tests.test_generate_datasets.test_kmf_minimum_observation_bias": {
  "lineno": 27,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "lifelines.generate_datasets.exponential_survival_data",
   "matplotlib.pyplot.title",
   "os.environ",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "tests.test_plotting": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_plotting.TestPlotting": {
  "lineno": 44,
  "symbols_in_volume": [
   "os.environ",
   "pytest.mark.skipif"
  ],
  "type": "class"
 },
 "tests.test_plotting.TestPlotting.kmf": {
  "lineno": 46,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.setup_method": {
  "lineno": 50,
  "symbols_in_volume": [
   "matplotlib.pyplot",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_MACS_data_with_plot_lifetimes": {
  "lineno": 225,
  "symbols_in_volume": [
   "lifelines.datasets.load_multicenter_aids_cohort_study",
   "lifelines.plotting.plot_lifetimes"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_aalen_additive_fit_no_censor": {
  "lineno": 448,
  "symbols_in_volume": [
   "lifelines.AalenAdditiveFitter",
   "lifelines.generate_datasets.cumulative_integral",
   "lifelines.generate_datasets.generate_hazard_rates",
   "lifelines.generate_datasets.generate_random_lifetimes",
   "numpy.isinf",
   "numpy.linspace",
   "numpy.random.binomial",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_aalen_additive_fit_with_censor": {
  "lineno": 473,
  "symbols_in_volume": [
   "lifelines.AalenAdditiveFitter",
   "lifelines.generate_datasets.cumulative_integral",
   "lifelines.generate_datasets.generate_hazard_rates",
   "lifelines.generate_datasets.generate_random_lifetimes",
   "numpy.isinf",
   "numpy.linspace",
   "numpy.random.binomial",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_aalen_additive_plot": {
  "lineno": 149,
  "symbols_in_volume": [
   "lifelines.AalenAdditiveFitter",
   "lifelines.generate_datasets.generate_hazard_rates",
   "lifelines.generate_datasets.generate_random_lifetimes",
   "numpy.isinf",
   "numpy.linspace",
   "numpy.random.binomial"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_aalen_additive_smoothed_plot": {
  "lineno": 172,
  "symbols_in_volume": [
   "lifelines.AalenAdditiveFitter",
   "lifelines.generate_datasets.generate_hazard_rates",
   "lifelines.generate_datasets.generate_random_lifetimes",
   "numpy.linspace",
   "numpy.random.binomial",
   "numpy.random.uniform"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_ajf_plotting": {
  "lineno": 122,
  "symbols_in_volume": [
   "lifelines.AalenJohansenFitter"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_ajf_plotting_no_confidence_intervals": {
  "lineno": 131,
  "symbols_in_volume": [
   "lifelines.AalenJohansenFitter"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_ajf_plotting_with_add_count_at_risk": {
  "lineno": 140,
  "symbols_in_volume": [
   "lifelines.AalenJohansenFitter"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_coxph_plot_covariate_groups": {
  "lineno": 368,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.datasets.load_rossi"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_coxph_plot_covariate_groups_with_multiple_variables": {
  "lineno": 401,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.datasets.load_rossi"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_coxph_plot_covariate_groups_with_multiple_variables_and_strata": {
  "lineno": 409,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.datasets.load_rossi",
   "numpy.random.choice"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_coxph_plot_covariate_groups_with_nonnumeric_strata": {
  "lineno": 392,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.datasets.load_rossi",
   "numpy.random.choice"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_coxph_plot_covariate_groups_with_single_strata": {
  "lineno": 384,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.datasets.load_rossi"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_coxph_plot_covariate_groups_with_strata": {
  "lineno": 376,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.datasets.load_rossi"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_coxph_plotting": {
  "lineno": 352,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.datasets.load_regression_dataset"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_coxph_plotting_with_subset_of_columns": {
  "lineno": 360,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.datasets.load_regression_dataset"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_coxtv_plotting": {
  "lineno": 426,
  "symbols_in_volume": [
   "lifelines.CoxTimeVaryingFitter",
   "lifelines.datasets.load_stanford_heart_transplants"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_coxtv_plotting_with_subset_of_columns": {
  "lineno": 418,
  "symbols_in_volume": [
   "lifelines.CoxTimeVaryingFitter",
   "lifelines.datasets.load_stanford_heart_transplants"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_flat_style_with_customer_censor_styles": {
  "lineno": 314,
  "symbols_in_volume": [
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_kmf_left_censorship_plots": {
  "lineno": 434,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "lifelines.datasets.load_lcd"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_kmf_plotting": {
  "lineno": 74,
  "symbols_in_volume": [
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_kmf_with_inverted_axis": {
  "lineno": 95,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_kmf_with_risk_counts": {
  "lineno": 88,
  "symbols_in_volume": [
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_label_can_be_changed_on_univariate_fitters": {
  "lineno": 288,
  "symbols_in_volume": [
   "lifelines.WeibullFitter",
   "numpy.linspace",
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_left_censorship_cdf_plots": {
  "lineno": 535,
  "symbols_in_volume": [
   "lifelines.ExponentialFitter",
   "lifelines.LogLogisticFitter",
   "lifelines.LogNormalFitter",
   "lifelines.WeibullFitter",
   "lifelines.datasets.load_nh4",
   "lifelines.plotting.cdf_plot"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_loglogs_plot": {
  "lineno": 322,
  "symbols_in_volume": [
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_naf_plot_cumulative_hazard": {
  "lineno": 248,
  "symbols_in_volume": [
   "lifelines.NelsonAalenFitter",
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_naf_plot_cumulative_hazard_bandwidth_2": {
  "lineno": 258,
  "symbols_in_volume": [
   "lifelines.NelsonAalenFitter",
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_naf_plot_cumulative_hazard_bandwith_1": {
  "lineno": 267,
  "symbols_in_volume": [
   "lifelines.NelsonAalenFitter",
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_naf_plotting_slice": {
  "lineno": 193,
  "symbols_in_volume": [
   "lifelines.NelsonAalenFitter",
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_naf_plotting_with_custom_colours": {
  "lineno": 110,
  "symbols_in_volume": [
   "lifelines.NelsonAalenFitter",
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_negative_times_still_plots": {
  "lineno": 64,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_parametric_univarite_fitters_has_plotting_methods": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.arange",
   "tests.test_estimation.known_parametric_univariate_fitters"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_plot_lifetimes_calendar": {
  "lineno": 205,
  "symbols_in_volume": [
   "lifelines.plotting.plot_lifetimes",
   "numpy.random.uniform"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_plot_lifetimes_left_truncation": {
  "lineno": 214,
  "symbols_in_volume": [
   "lifelines.plotting.plot_lifetimes",
   "numpy.random.uniform"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_plot_lifetimes_relative": {
  "lineno": 241,
  "symbols_in_volume": [
   "lifelines.plotting.plot_lifetimes"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_qq_plot_left_censoring": {
  "lineno": 557,
  "symbols_in_volume": [
   "lifelines.ExponentialFitter",
   "lifelines.LogLogisticFitter",
   "lifelines.LogNormalFitter",
   "lifelines.WeibullFitter",
   "lifelines.datasets.load_nh4",
   "lifelines.plotting.qq_plot"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_qq_plot_left_censoring2": {
  "lineno": 568,
  "symbols_in_volume": [
   "lifelines.ExponentialFitter",
   "lifelines.LogLogisticFitter",
   "lifelines.LogNormalFitter",
   "lifelines.WeibullFitter",
   "lifelines.datasets.load_lcd",
   "lifelines.plotting.qq_plot"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_qq_plot_left_censoring_with_known_distribution": {
  "lineno": 579,
  "symbols_in_volume": [
   "lifelines.ExponentialFitter",
   "lifelines.LogLogisticFitter",
   "lifelines.LogNormalFitter",
   "lifelines.WeibullFitter",
   "lifelines.plotting.qq_plot",
   "numpy.maximum",
   "numpy.percentile",
   "numpy.random.randint",
   "numpy.where",
   "scipy.stats.fisk"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_qq_plot_right_censoring_with_known_distribution": {
  "lineno": 602,
  "symbols_in_volume": [
   "lifelines.ExponentialFitter",
   "lifelines.LogLogisticFitter",
   "lifelines.LogNormalFitter",
   "lifelines.WeibullFitter",
   "lifelines.plotting.qq_plot",
   "numpy.minimum",
   "scipy.stats.fisk"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_right_censorship_cdf_plots": {
  "lineno": 546,
  "symbols_in_volume": [
   "lifelines.ExponentialFitter",
   "lifelines.LogLogisticFitter",
   "lifelines.LogNormalFitter",
   "lifelines.WeibullFitter",
   "lifelines.datasets.load_rossi",
   "lifelines.plotting.cdf_plot"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_seaborn_doesnt_cause_kmf_plot_error": {
  "lineno": 335,
  "symbols_in_volume": [
   "lifelines.KaplanMeierFitter",
   "lifelines.datasets.load_waltons"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_show_censor_with_discrete_date": {
  "lineno": 298,
  "symbols_in_volume": [
   "numpy.random.binomial"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_show_censor_with_index_0": {
  "lineno": 306,
  "symbols_in_volume": [
   "numpy.random.binomial"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_weibull_aft_plot_covariate_groups": {
  "lineno": 517,
  "symbols_in_volume": [
   "lifelines.WeibullAFTFitter",
   "lifelines.datasets.load_rossi"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_weibull_aft_plot_covariate_groups_with_multiple_columns": {
  "lineno": 526,
  "symbols_in_volume": [
   "lifelines.WeibullAFTFitter",
   "lifelines.datasets.load_rossi"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_weibull_aft_plotting": {
  "lineno": 499,
  "symbols_in_volume": [
   "lifelines.WeibullAFTFitter",
   "lifelines.datasets.load_regression_dataset"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_weibull_aft_plotting_with_subset_of_columns": {
  "lineno": 508,
  "symbols_in_volume": [
   "lifelines.WeibullAFTFitter",
   "lifelines.datasets.load_regression_dataset"
  ],
  "type": "function"
 },
 "tests.test_plotting.TestPlotting.test_weibull_plotting": {
  "lineno": 276,
  "symbols_in_volume": [
   "lifelines.WeibullFitter",
   "numpy.linspace",
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "tests.test_plotting.waltons": {
  "lineno": 39,
  "symbols_in_volume": [
   "lifelines.datasets.load_waltons",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_statistics": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_statistics.test_StatisticalResult_can_be_added": {
  "lineno": 215,
  "symbols_in_volume": [
   "lifelines.statistics.StatisticalResult"
  ],
  "type": "function"
 },
 "tests.test_statistics.test_StatisticalResult_kwargs": {
  "lineno": 207,
  "symbols_in_volume": [
   "lifelines.statistics.StatisticalResult"
  ],
  "type": "function"
 },
 "tests.test_statistics.test_equal_intensity_with_negative_data": {
  "lineno": 122,
  "symbols_in_volume": [
   "lifelines.statistics.logrank_test",
   "numpy.random.normal"
  ],
  "type": "function"
 },
 "tests.test_statistics.test_integer_times_logrank_test": {
  "lineno": 115,
  "symbols_in_volume": [
   "lifelines.statistics.logrank_test",
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "tests.test_statistics.test_load_lymphoma_logrank": {
  "lineno": 72,
  "symbols_in_volume": [
   "lifelines.datasets.load_lymphoma",
   "lifelines.statistics.multivariate_logrank_test"
  ],
  "type": "function"
 },
 "tests.test_statistics.test_log_rank_returns_None_if_equal_arrays": {
  "lineno": 182,
  "symbols_in_volume": [
   "lifelines.statistics.logrank_test",
   "numpy.random.binomial",
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "tests.test_statistics.test_log_rank_test_on_waltons_dataset": {
  "lineno": 140,
  "symbols_in_volume": [
   "lifelines.datasets.load_waltons",
   "lifelines.statistics.logrank_test"
  ],
  "type": "function"
 },
 "tests.test_statistics.test_logrank_test_is_symmetric": {
  "lineno": 149,
  "symbols_in_volume": [
   "lifelines.statistics.logrank_test",
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "tests.test_statistics.test_logrank_test_output_against_R_1": {
  "lineno": 32,
  "symbols_in_volume": [
   "lifelines.datasets.load_g3",
   "lifelines.statistics.logrank_test"
  ],
  "type": "function"
 },
 "tests.test_statistics.test_logrank_test_output_against_R_2": {
  "lineno": 43,
  "symbols_in_volume": [
   "lifelines.statistics.logrank_test",
   "numpy.ones_like"
  ],
  "type": "function"
 },
 "tests.test_statistics.test_multivariate_log_rank_is_identital_to_log_rank_for_n_equals_2": {
  "lineno": 192,
  "symbols_in_volume": [
   "lifelines.statistics.logrank_test",
   "lifelines.statistics.multivariate_logrank_test",
   "numpy.array",
   "numpy.r_",
   "numpy.random.binomial",
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "tests.test_statistics.test_multivariate_logrank_on_dd_dataset": {
  "lineno": 80,
  "symbols_in_volume": [
   "lifelines.datasets.load_dd",
   "lifelines.statistics.multivariate_logrank_test"
  ],
  "type": "function"
 },
 "tests.test_statistics.test_multivariate_unequal_intensities": {
  "lineno": 157,
  "symbols_in_volume": [
   "lifelines.statistics.multivariate_logrank_test",
   "numpy.random.binomial",
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "tests.test_statistics.test_pairwise_allows_dataframes_and_gives_correct_counts": {
  "lineno": 171,
  "symbols_in_volume": [
   "lifelines.statistics.pairwise_logrank_test",
   "numpy.arange",
   "numpy.empty",
   "numpy.random.binomial",
   "numpy.random.exponential",
   "numpy.tile",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "tests.test_statistics.test_pairwise_waltons_dataset_is_significantly_different": {
  "lineno": 165,
  "symbols_in_volume": [
   "lifelines.datasets.load_waltons",
   "lifelines.statistics.pairwise_logrank_test"
  ],
  "type": "function"
 },
 "tests.test_statistics.test_power_under_cph": {
  "lineno": 20,
  "symbols_in_volume": [
   "lifelines.statistics.power_under_cph"
  ],
  "type": "function"
 },
 "tests.test_statistics.test_proportional_hazard_test": {
  "lineno": 227,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.datasets.load_regression_dataset",
   "lifelines.statistics.proportional_hazard_test",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_statistics.test_proportional_hazard_test_with_all": {
  "lineno": 412,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.statistics.proportional_hazard_test",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "tests.test_statistics.test_proportional_hazard_test_with_kmf": {
  "lineno": 323,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.statistics.proportional_hazard_test",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "tests.test_statistics.test_proportional_hazard_test_with_kmf_with_some_censorship": {
  "lineno": 352,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.statistics.proportional_hazard_test",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "tests.test_statistics.test_proportional_hazard_test_with_kmf_with_some_censorship_and_weights": {
  "lineno": 381,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.statistics.proportional_hazard_test",
   "lifelines.utils.StatisticalWarning",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame",
   "pytest.warns"
  ],
  "type": "function"
 },
 "tests.test_statistics.test_proportional_hazard_test_with_list": {
  "lineno": 428,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.statistics.proportional_hazard_test",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "tests.test_statistics.test_proportional_hazard_test_with_log_transform": {
  "lineno": 243,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.datasets.load_regression_dataset",
   "lifelines.statistics.proportional_hazard_test",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_statistics.test_proportional_hazard_test_with_weights": {
  "lineno": 255,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.statistics.proportional_hazard_test",
   "lifelines.utils.StatisticalWarning",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame",
   "pytest.warns"
  ],
  "type": "function"
 },
 "tests.test_statistics.test_proportional_hazard_test_with_weights_and_strata": {
  "lineno": 288,
  "symbols_in_volume": [
   "lifelines.CoxPHFitter",
   "lifelines.statistics.proportional_hazard_test",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "tests.test_statistics.test_rank_test_output_against_R_no_censorship": {
  "lineno": 58,
  "symbols_in_volume": [
   "lifelines.statistics.multivariate_logrank_test"
  ],
  "type": "function"
 },
 "tests.test_statistics.test_rank_test_output_against_R_with_censorship": {
  "lineno": 92,
  "symbols_in_volume": [
   "lifelines.statistics.multivariate_logrank_test"
  ],
  "type": "function"
 },
 "tests.test_statistics.test_sample_size_necessary_under_cph": {
  "lineno": 13,
  "symbols_in_volume": [
   "lifelines.statistics.sample_size_necessary_under_cph"
  ],
  "type": "function"
 },
 "tests.test_statistics.test_unequal_intensity_event_observed": {
  "lineno": 106,
  "symbols_in_volume": [
   "lifelines.statistics.logrank_test",
   "numpy.random.binomial",
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "tests.test_statistics.test_unequal_intensity_with_negative_data": {
  "lineno": 133,
  "symbols_in_volume": [
   "lifelines.statistics.logrank_test",
   "numpy.random.normal"
  ],
  "type": "function"
 },
 "tests.test_statistics.test_unequal_intensity_with_random_data": {
  "lineno": 25,
  "symbols_in_volume": [
   "lifelines.statistics.logrank_test",
   "numpy.random.exponential"
  ],
  "type": "function"
 }
}