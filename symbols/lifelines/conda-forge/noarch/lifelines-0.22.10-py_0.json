{
 "lifelines": {
  "data": {},
  "type": "module"
 },
 "lifelines.AalenAdditiveFitter": {
  "data": {
   "shadows": "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter"
  },
  "type": "import"
 },
 "lifelines.AalenJohansenFitter": {
  "data": {
   "shadows": "lifelines.fitters.aalen_johansen_fitter.AalenJohansenFitter"
  },
  "type": "import"
 },
 "lifelines.BreslowFlemingHarringtonFitter": {
  "data": {
   "shadows": "lifelines.fitters.breslow_fleming_harrington_fitter.BreslowFlemingHarringtonFitter"
  },
  "type": "import"
 },
 "lifelines.CoxPHFitter": {
  "data": {
   "shadows": "lifelines.fitters.coxph_fitter.CoxPHFitter"
  },
  "type": "import"
 },
 "lifelines.CoxTimeVaryingFitter": {
  "data": {
   "shadows": "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter"
  },
  "type": "import"
 },
 "lifelines.ExponentialFitter": {
  "data": {
   "shadows": "lifelines.fitters.exponential_fitter.ExponentialFitter"
  },
  "type": "import"
 },
 "lifelines.GeneralizedGammaFitter": {
  "data": {
   "shadows": "lifelines.fitters.generalized_gamma_fitter.GeneralizedGammaFitter"
  },
  "type": "import"
 },
 "lifelines.GeneralizedGammaRegressionFitter": {
  "data": {
   "shadows": "lifelines.fitters.generalized_gamma_regression_fitter.GeneralizedGammaRegressionFitter"
  },
  "type": "import"
 },
 "lifelines.KaplanMeierFitter": {
  "data": {
   "shadows": "lifelines.fitters.kaplan_meier_fitter.KaplanMeierFitter"
  },
  "type": "import"
 },
 "lifelines.LogLogisticAFTFitter": {
  "data": {
   "shadows": "lifelines.fitters.log_logistic_aft_fitter.LogLogisticAFTFitter"
  },
  "type": "import"
 },
 "lifelines.LogLogisticFitter": {
  "data": {
   "shadows": "lifelines.fitters.log_logistic_fitter.LogLogisticFitter"
  },
  "type": "import"
 },
 "lifelines.LogNormalAFTFitter": {
  "data": {
   "shadows": "lifelines.fitters.log_normal_aft_fitter.LogNormalAFTFitter"
  },
  "type": "import"
 },
 "lifelines.LogNormalFitter": {
  "data": {
   "shadows": "lifelines.fitters.log_normal_fitter.LogNormalFitter"
  },
  "type": "import"
 },
 "lifelines.NelsonAalenFitter": {
  "data": {
   "shadows": "lifelines.fitters.nelson_aalen_fitter.NelsonAalenFitter"
  },
  "type": "import"
 },
 "lifelines.PiecewiseExponentialFitter": {
  "data": {
   "shadows": "lifelines.fitters.piecewise_exponential_fitter.PiecewiseExponentialFitter"
  },
  "type": "import"
 },
 "lifelines.PiecewiseExponentialRegressionFitter": {
  "data": {
   "shadows": "lifelines.fitters.piecewise_exponential_regression_fitter.PiecewiseExponentialRegressionFitter"
  },
  "type": "import"
 },
 "lifelines.WeibullAFTFitter": {
  "data": {
   "shadows": "lifelines.fitters.weibull_aft_fitter.WeibullAFTFitter"
  },
  "type": "import"
 },
 "lifelines.WeibullFitter": {
  "data": {
   "shadows": "lifelines.fitters.weibull_fitter.WeibullFitter"
  },
  "type": "import"
 },
 "lifelines.__all__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "lifelines.__version__": {
  "data": {
   "shadows": "lifelines.version.__version__"
  },
  "type": "import"
 },
 "lifelines.datasets": {
  "data": {},
  "type": "module"
 },
 "lifelines.datasets._load_dataset": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "pandas.read_csv",
    "pkg_resources.resource_filename"
   ]
  },
  "type": "function"
 },
 "lifelines.datasets.dfcv": {
  "data": {
   "shadows": "lifelines.datasets.dfcv_dataset.dfcv"
  },
  "type": "import"
 },
 "lifelines.datasets.dfcv_dataset": {
  "data": {
   "symbols_in_volume": [
    "lifelines.datasets.dfcv_dataset.cv",
    "lifelines.datasets.dfcv_dataset.df",
    "lifelines.utils.add_covariate_to_timeline",
    "lifelines.utils.to_long_format",
    "pandas.DataFrame",
    "pandas.DataFrame.from_records"
   ]
  },
  "type": "module"
 },
 "lifelines.datasets.dfcv_dataset.add_covariate_to_timeline": {
  "data": {
   "shadows": "lifelines.utils.add_covariate_to_timeline"
  },
  "type": "import"
 },
 "lifelines.datasets.dfcv_dataset.cv": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "lifelines.datasets.dfcv_dataset.df": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "lifelines.datasets.dfcv_dataset.dfcv": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "lifelines.datasets.dfcv_dataset.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "lifelines.datasets.dfcv_dataset.to_long_format": {
  "data": {
   "shadows": "lifelines.utils.to_long_format"
  },
  "type": "import"
 },
 "lifelines.datasets.load_canadian_senators": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "lifelines.datasets._load_dataset"
   ]
  },
  "type": "function"
 },
 "lifelines.datasets.load_dd": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "lifelines.datasets._load_dataset"
   ]
  },
  "type": "function"
 },
 "lifelines.datasets.load_dfcv": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "lifelines.datasets.dfcv_dataset.dfcv.copy"
   ]
  },
  "type": "function"
 },
 "lifelines.datasets.load_diabetes": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "lifelines.datasets._load_dataset"
   ]
  },
  "type": "function"
 },
 "lifelines.datasets.load_g3": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "lifelines.datasets._load_dataset"
   ]
  },
  "type": "function"
 },
 "lifelines.datasets.load_gbsg2": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "lifelines.datasets._load_dataset"
   ]
  },
  "type": "function"
 },
 "lifelines.datasets.load_holly_molly_polly": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "lifelines.datasets._load_dataset"
   ]
  },
  "type": "function"
 },
 "lifelines.datasets.load_kidney_transplant": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "lifelines.datasets._load_dataset"
   ]
  },
  "type": "function"
 },
 "lifelines.datasets.load_larynx": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "lifelines.datasets._load_dataset"
   ]
  },
  "type": "function"
 },
 "lifelines.datasets.load_lcd": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "lifelines.datasets._load_dataset"
   ]
  },
  "type": "function"
 },
 "lifelines.datasets.load_leukemia": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "lifelines.datasets._load_dataset"
   ]
  },
  "type": "function"
 },
 "lifelines.datasets.load_lung": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "lifelines.datasets._load_dataset"
   ]
  },
  "type": "function"
 },
 "lifelines.datasets.load_lupus": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "lifelines.datasets._load_dataset"
   ]
  },
  "type": "function"
 },
 "lifelines.datasets.load_lymphoma": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "lifelines.datasets._load_dataset"
   ]
  },
  "type": "function"
 },
 "lifelines.datasets.load_multicenter_aids_cohort_study": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "lifelines.datasets._load_dataset"
   ]
  },
  "type": "function"
 },
 "lifelines.datasets.load_nh4": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "lifelines.datasets._load_dataset"
   ]
  },
  "type": "function"
 },
 "lifelines.datasets.load_panel_test": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "lifelines.datasets._load_dataset"
   ]
  },
  "type": "function"
 },
 "lifelines.datasets.load_psychiatric_patients": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "lifelines.datasets._load_dataset"
   ]
  },
  "type": "function"
 },
 "lifelines.datasets.load_recur": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "lifelines.datasets._load_dataset"
   ]
  },
  "type": "function"
 },
 "lifelines.datasets.load_regression_dataset": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "lifelines.datasets._load_dataset"
   ]
  },
  "type": "function"
 },
 "lifelines.datasets.load_rossi": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "lifelines.datasets._load_dataset"
   ]
  },
  "type": "function"
 },
 "lifelines.datasets.load_stanford_heart_transplants": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "lifelines.datasets._load_dataset"
   ]
  },
  "type": "function"
 },
 "lifelines.datasets.load_static_test": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "lifelines.datasets._load_dataset"
   ]
  },
  "type": "function"
 },
 "lifelines.datasets.load_waltons": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "lifelines.datasets._load_dataset"
   ]
  },
  "type": "function"
 },
 "lifelines.datasets.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "lifelines.datasets.resource_filename": {
  "data": {
   "shadows": "pkg_resources.resource_filename"
  },
  "type": "import"
 },
 "lifelines.fitters": {
  "data": {},
  "type": "module"
 },
 "lifelines.fitters.BaseFitter": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "lifelines.fitters.BaseFitter.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.BaseFitter.__repr__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "AttributeError",
    "lifelines.utils.CensoringType.get_human_readable_censoring_type"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.BaseFitter.fit": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "NotImplementedError",
    "lifelines.utils.CensoringType.right_censoring"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.BaseFitter.fit_right_censoring": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "lifelines.utils.CensoringType.right_censoring"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.KnownModelParametericUnivariateFitter": {
  "data": {
   "lineno": 1166,
   "symbols_in_volume": [
    "lifelines.fitters.ParametericUnivariateFitter"
   ]
  },
  "type": "class"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter": {
  "data": {
   "lineno": 2141,
   "symbols_in_volume": [
    "lifelines.fitters.ParametricRegressionFitter"
   ]
  },
  "type": "class"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter.__init__": {
  "data": {
   "lineno": 2145,
   "symbols_in_volume": [
    "lifelines.fitters.ParametericAFTRegressionFitter",
    "super"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter._add_penalty": {
  "data": {
   "lineno": 2667,
   "symbols_in_volume": [
    "autograd.misc.flatten",
    "autograd.numpy.abs",
    "penalty"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter._create_initial_point": {
  "data": {
   "lineno": 2625,
   "symbols_in_volume": [
    "AttributeError",
    "_transform_ith_param",
    "getattr",
    "len",
    "lifelines.fitters.ParametericAFTRegressionFitter",
    "lifelines.fitters.lifelines",
    "lifelines.fitters.warnings",
    "lifelines.utils.CensoringType.is_interval_censoring",
    "lifelines.utils.CensoringType.is_left_censoring",
    "lifelines.utils.CensoringType.is_right_censoring",
    "numpy.array",
    "super"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter._create_initial_point._transform_ith_param": {
  "data": {
   "lineno": 2631,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter._hazard": {
  "data": {
   "lineno": 2154,
   "symbols_in_volume": [
    "autograd.elementwise_grad"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter._prep_inputs_for_prediction_and_return_scores": {
  "data": {
   "lineno": 2836,
   "symbols_in_volume": [
    "isinstance",
    "numpy.exp",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter.fit": {
  "data": {
   "lineno": 2157,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "lifelines.fitters.ParametericAFTRegressionFitter",
    "lifelines.utils.CensoringType.right_censoring",
    "lifelines.utils.coalesce",
    "lifelines.utils.pass_for_numeric_dtypes_or_raise_array",
    "pandas.DataFrame",
    "pandas.concat",
    "super"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter.fit_interval_censoring": {
  "data": {
   "lineno": 2311,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "isinstance",
    "lifelines.fitters.ParametericAFTRegressionFitter",
    "lifelines.utils.CensoringType.interval_censoring",
    "lifelines.utils.coalesce",
    "lifelines.utils.pass_for_numeric_dtypes_or_raise_array",
    "numpy.clip",
    "pandas.DataFrame",
    "pandas.concat",
    "super"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter.fit_left_censoring": {
  "data": {
   "lineno": 2479,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "lifelines.fitters.ParametericAFTRegressionFitter",
    "lifelines.utils.CensoringType.left_censoring",
    "lifelines.utils.coalesce",
    "lifelines.utils.pass_for_numeric_dtypes_or_raise_array",
    "pandas.DataFrame",
    "pandas.concat",
    "super"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter.plot": {
  "data": {
   "lineno": 2679,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "lifelines.utils.inv_normal_cdf",
    "list",
    "matplotlib.pyplot.gca",
    "matplotlib.pyplot.xlabel",
    "matplotlib.pyplot.yticks",
    "pandas.MultiIndex",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter.plot_covariate_groups": {
  "data": {
   "lineno": 2752,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "len",
    "lifelines.utils._to_list",
    "matplotlib.pyplot.gca",
    "numpy.array_equal",
    "numpy.atleast_1d",
    "numpy.eye",
    "pandas.concat",
    "zip"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter.predict_cumulative_hazard": {
  "data": {
   "lineno": 2940,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "lifelines.utils.coalesce",
    "numpy.asarray",
    "numpy.atleast_1d",
    "numpy.clip",
    "numpy.inf",
    "numpy.tile",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter.predict_median": {
  "data": {
   "lineno": 2904
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter.predict_percentile": {
  "data": {
   "lineno": 2937,
   "symbols_in_volume": [
    "lifelines.utils.qth_survival_times"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericAFTRegressionFitter.predict_survival_function": {
  "data": {
   "lineno": 2867,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "dict",
    "lifelines.fitters.UnivariateFitter"
   ]
  },
  "type": "class"
 },
 "lifelines.fitters.ParametericUnivariateFitter.__init__": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "NameError",
    "hasattr",
    "len",
    "lifelines.fitters.ParametericUnivariateFitter",
    "list",
    "super"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter._buffer_bounds": {
  "data": {
   "lineno": 362
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter._check_bounds_initial_point_names_shape": {
  "data": {
   "lineno": 986,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter._check_cumulative_hazard_is_monotone_and_positive": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "lifelines.fitters.warnings",
    "lifelines.utils.StatisticalWarning",
    "numpy.all",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter._compute_confidence_bounds_of_cumulative_hazard": {
  "data": {
   "lineno": 441
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter._compute_confidence_bounds_of_parameters": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "lifelines.utils.inv_normal_cdf",
    "numpy.c_",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter._compute_confidence_bounds_of_transform": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "autograd.differential_operators.make_jvp_reversemode",
    "float",
    "gradient_of_transform_at_mle",
    "len",
    "lifelines.utils.inv_normal_cdf",
    "numpy.einsum",
    "numpy.eye",
    "numpy.sqrt",
    "numpy.vstack",
    "pandas.DataFrame",
    "transform"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter._compute_p_values": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "scipy.stats.chi2.sf"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter._compute_standard_errors": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "numpy.sqrt",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter._compute_z_values": {
  "data": {
   "lineno": 582
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter._conditional_time_to_event_": {
  "data": {
   "lineno": 1145,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter._create_initial_point": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "list",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter._cumulative_density": {
  "data": {
   "lineno": 383
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter._cumulative_hazard": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "autograd.numpy.log"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter._estimation_method": {
  "data": {
   "lineno": 565
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter._fit": {
  "data": {
   "lineno": 875,
   "symbols_in_volume": [
    "bool",
    "float",
    "hasattr",
    "int",
    "len",
    "lifelines.fitters.warnings",
    "lifelines.utils.ApproximationWarning",
    "lifelines.utils.StatisticalWarning",
    "lifelines.utils.check_nans_or_infs",
    "lifelines.utils.coalesce",
    "numpy.asarray",
    "numpy.linalg.LinAlgError",
    "numpy.linalg.inv",
    "numpy.linalg.pinv",
    "numpy.linspace",
    "numpy.ones",
    "numpy.sort",
    "numpy.zeros",
    "setattr",
    "textwrap.dedent",
    "zip"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter._fit_model": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "autograd.hessian",
    "autograd.value_and_grad",
    "lifelines.fitters.warnings",
    "lifelines.utils.CensoringType.is_interval_censoring",
    "lifelines.utils.CensoringType.is_left_censoring",
    "lifelines.utils.CensoringType.is_right_censoring",
    "lifelines.utils.ConvergenceError",
    "print",
    "scipy.optimize.minimize",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter._hazard": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "autograd.elementwise_grad"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter._initial_values_from_bounds": {
  "data": {
   "lineno": 351
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter._log_1m_sf": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "autograd.numpy.log1p"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter._log_hazard": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "autograd.numpy.clip",
    "autograd.numpy.log",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter._log_likelihood": {
  "data": {
   "lineno": 978,
   "symbols_in_volume": [
    "DeprecationWarning",
    "lifelines.fitters.warnings",
    "property"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter._negative_log_likelihood_interval_censoring": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "autograd.numpy.log"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter._negative_log_likelihood_left_censoring": {
  "data": {
   "lineno": 395
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter._negative_log_likelihood_right_censoring": {
  "data": {
   "lineno": 408
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter._survival_function": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "autograd.numpy.exp"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter.confidence_interval_": {
  "data": {
   "lineno": 1087,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter.confidence_interval_cumulative_density_": {
  "data": {
   "lineno": 1115,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter.confidence_interval_cumulative_hazard_": {
  "data": {
   "lineno": 1094,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter.confidence_interval_hazard_": {
  "data": {
   "lineno": 1101,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter.confidence_interval_survival_function_": {
  "data": {
   "lineno": 1108,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter.cumulative_density_at_times": {
  "data": {
   "lineno": 1026,
   "symbols_in_volume": [
    "lifelines.utils._to_1d_array",
    "lifelines.utils.coalesce",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter.cumulative_hazard_at_times": {
  "data": {
   "lineno": 1047,
   "symbols_in_volume": [
    "lifelines.utils._to_1d_array",
    "lifelines.utils.coalesce",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter.event_table": {
  "data": {
   "lineno": 992,
   "symbols_in_volume": [
    "hasattr",
    "lifelines.utils.CensoringType.is_right_censoring",
    "lifelines.utils.survival_table_from_events",
    "property"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter.fit": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "DeprecationWarning",
    "lifelines.fitters.warnings",
    "lifelines.utils.CensoringType.right_censoring",
    "lifelines.utils.check_nans_or_infs",
    "lifelines.utils.check_positivity",
    "lifelines.utils.pass_for_numeric_dtypes_or_raise_array",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter.fit_interval_censoring": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "ValueError",
    "lifelines.utils.CensoringType.interval_censoring",
    "lifelines.utils.check_nans_or_infs",
    "lifelines.utils.check_positivity",
    "lifelines.utils.pass_for_numeric_dtypes_or_raise_array",
    "numpy.atleast_1d",
    "numpy.clip"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter.fit_left_censoring": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "lifelines.utils.CensoringType.left_censoring",
    "lifelines.utils.check_nans_or_infs",
    "lifelines.utils.check_positivity",
    "lifelines.utils.pass_for_numeric_dtypes_or_raise_array",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter.hazard_at_times": {
  "data": {
   "lineno": 1068,
   "symbols_in_volume": [
    "lifelines.utils._to_1d_array",
    "lifelines.utils.coalesce",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter.plot": {
  "data": {
   "lineno": 1122,
   "symbols_in_volume": [
    "lifelines.plotting._plot_estimate",
    "lifelines.plotting.set_kwargs_drawstyle"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter.plot_cumulative_density": {
  "data": {
   "lineno": 1137,
   "symbols_in_volume": [
    "lifelines.plotting._plot_estimate",
    "lifelines.plotting.set_kwargs_drawstyle"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter.plot_cumulative_hazard": {
  "data": {
   "lineno": 1129,
   "symbols_in_volume": [
    "lifelines.plotting.set_kwargs_drawstyle"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter.plot_hazard": {
  "data": {
   "lineno": 1141,
   "symbols_in_volume": [
    "lifelines.plotting._plot_estimate",
    "lifelines.plotting.set_kwargs_drawstyle"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter.plot_survival_function": {
  "data": {
   "lineno": 1133,
   "symbols_in_volume": [
    "lifelines.plotting._plot_estimate",
    "lifelines.plotting.set_kwargs_drawstyle"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter.print_summary": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "justify",
    "lifelines.utils.format_exp_floats",
    "lifelines.utils.format_floats",
    "lifelines.utils.format_p_value",
    "lifelines.utils.string_justify",
    "print",
    "zip"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter.summary": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "numpy.errstate",
    "numpy.log2",
    "pandas.DataFrame",
    "property"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametericUnivariateFitter.survival_function_at_times": {
  "data": {
   "lineno": 1005,
   "symbols_in_volume": [
    "lifelines.utils._to_1d_array",
    "lifelines.utils.coalesce",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter": {
  "data": {
   "lineno": 1171,
   "symbols_in_volume": [
    "dict",
    "lifelines.fitters.BaseFitter"
   ]
  },
  "type": "class"
 },
 "lifelines.fitters.ParametricRegressionFitter.__init__": {
  "data": {
   "lineno": 1177,
   "symbols_in_volume": [
    "lifelines.fitters.ParametricRegressionFitter",
    "super"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter._add_penalty": {
  "data": {
   "lineno": 1492,
   "symbols_in_volume": [
    "autograd.misc.flatten"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter._check_values": {
  "data": {
   "lineno": 1181,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "lifelines.fitters.warnings",
    "lifelines.utils.StatisticalWarning",
    "lifelines.utils.check_complete_separation",
    "lifelines.utils.check_entry_times",
    "lifelines.utils.check_for_numeric_dtypes_or_raise",
    "lifelines.utils.check_nans_or_infs",
    "lifelines.utils.check_positivity",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter._compute_confidence_intervals": {
  "data": {
   "lineno": 1632,
   "symbols_in_volume": [
    "lifelines.utils.inv_normal_cdf",
    "numpy.c_",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter._compute_p_values": {
  "data": {
   "lineno": 1604,
   "symbols_in_volume": [
    "scipy.stats.chi2.sf"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter._compute_sandwich_errors": {
  "data": {
   "lineno": 1617,
   "symbols_in_volume": [
    "autograd.grad",
    "lifelines.utils.safe_zip",
    "ll_gradient",
    "numpy.errstate",
    "numpy.outer",
    "numpy.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter._compute_standard_errors": {
  "data": {
   "lineno": 1608,
   "symbols_in_volume": [
    "lifelines.fitters.warnings",
    "numpy.sqrt",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter._compute_variance_matrix": {
  "data": {
   "lineno": 1563,
   "symbols_in_volume": [
    "lifelines.fitters.warnings",
    "lifelines.utils.ApproximationWarning",
    "lifelines.utils.StatisticalWarning",
    "numpy.linalg.LinAlgError",
    "numpy.linalg.inv",
    "numpy.linalg.pinv",
    "numpy.outer",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter._compute_z_values": {
  "data": {
   "lineno": 1601
  },
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter._create_Xs_dict": {
  "data": {
   "lineno": 1373,
   "symbols_in_volume": [
    "lifelines.utils.DataframeSliceDict"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter._create_initial_point": {
  "data": {
   "lineno": 1478,
   "symbols_in_volume": [
    "len",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter._create_neg_likelihood_with_penalty_function": {
  "data": {
   "lineno": 1502,
   "symbols_in_volume": [
    "autograd.misc.flatten",
    "likelihood",
    "param_transform",
    "penalty"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter._fit": {
  "data": {
   "lineno": 1376,
   "symbols_in_volume": [
    "all",
    "bool",
    "datetime.datetime.utcnow",
    "float",
    "hasattr",
    "len",
    "lifelines.utils.check_nans_or_infs",
    "lifelines.utils.coalesce",
    "lifelines.utils.normalize",
    "lifelines.utils.pass_for_numeric_dtypes_or_raise_array",
    "list",
    "numpy.asarray",
    "numpy.ones",
    "numpy.sort",
    "numpy.unique",
    "numpy.zeros",
    "pandas.MultiIndex.from_tuples",
    "pandas.Series",
    "sum"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter._fit_model": {
  "data": {
   "lineno": 1510,
   "symbols_in_volume": [
    "ValueError",
    "autograd.hessian",
    "autograd.misc.flatten",
    "autograd.value_and_grad",
    "dict",
    "functools.partial",
    "isinstance",
    "lifelines.utils.ConvergenceError",
    "likelihood",
    "numpy.ndarray",
    "print",
    "scipy.optimize.minimize",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter._hazard": {
  "data": {
   "lineno": 1205,
   "symbols_in_volume": [
    "autograd.elementwise_grad"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter._ll_null": {
  "data": {
   "lineno": 1643,
   "symbols_in_volume": [
    "hasattr",
    "lifelines.fitters.warnings",
    "lifelines.utils.CensoringType.is_interval_censoring",
    "lifelines.utils.CensoringType.is_left_censoring",
    "lifelines.utils.CensoringType.is_right_censoring",
    "pandas.DataFrame",
    "property"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter._log_1m_sf": {
  "data": {
   "lineno": 1214,
   "symbols_in_volume": [
    "autograd.numpy.exp",
    "autograd.numpy.log1p"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter._log_hazard": {
  "data": {
   "lineno": 1208,
   "symbols_in_volume": [
    "autograd.numpy.clip",
    "autograd.numpy.log",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter._log_likelihood": {
  "data": {
   "lineno": 1484,
   "symbols_in_volume": [
    "DeprecationWarning",
    "lifelines.fitters.warnings",
    "property"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter._log_likelihood_interval_censoring": {
  "data": {
   "lineno": 1254,
   "symbols_in_volume": [
    "autograd.numpy.log",
    "autograd.numpy.sum"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter._log_likelihood_left_censoring": {
  "data": {
   "lineno": 1238,
   "symbols_in_volume": [
    "autograd.numpy.sum"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter._log_likelihood_right_censoring": {
  "data": {
   "lineno": 1222,
   "symbols_in_volume": [
    "autograd.numpy.sum"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter._survival_function": {
  "data": {
   "lineno": 1219,
   "symbols_in_volume": [
    "autograd.numpy.clip",
    "autograd.numpy.exp"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter.fit": {
  "data": {
   "lineno": 1284,
   "symbols_in_volume": [
    "float",
    "lifelines.utils.CensoringType.right_censoring",
    "lifelines.utils.pass_for_numeric_dtypes_or_raise_array"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter.fit_interval_censoring": {
  "data": {
   "lineno": 1279,
   "symbols_in_volume": [
    "lifelines.utils.CensoringType.interval_censoring"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter.fit_left_censoring": {
  "data": {
   "lineno": 1274,
   "symbols_in_volume": [
    "lifelines.utils.CensoringType.right_censoring"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter.log_likelihood_ratio_test": {
  "data": {
   "lineno": 1670,
   "symbols_in_volume": [
    "lifelines.statistics.StatisticalResult",
    "lifelines.statistics.chisq_test"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter.mean_survival_time_": {
  "data": {
   "lineno": 1985,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter.median_survival_time_": {
  "data": {
   "lineno": 1978,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter.plot": {
  "data": {
   "lineno": 1992,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "lifelines.utils.inv_normal_cdf",
    "list",
    "matplotlib.pyplot.gca",
    "matplotlib.pyplot.xlabel",
    "matplotlib.pyplot.yticks",
    "pandas.MultiIndex",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter.plot_covariate_groups": {
  "data": {
   "lineno": 2064,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "len",
    "lifelines.utils._to_list",
    "matplotlib.pyplot.gca",
    "numpy.array_equal",
    "numpy.atleast_1d",
    "numpy.eye",
    "pandas.concat",
    "zip"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter.predict_cumulative_hazard": {
  "data": {
   "lineno": 1869,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "lifelines.utils.coalesce",
    "numpy.asarray",
    "numpy.atleast_1d",
    "numpy.clip",
    "numpy.inf",
    "numpy.tile",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter.predict_expectation": {
  "data": {
   "lineno": 1927,
   "symbols_in_volume": [
    "lifelines.fitters.warnings",
    "lifelines.utils.ApproximationWarning",
    "lifelines.utils._get_index",
    "pandas.DataFrame",
    "scipy.integrate.trapz"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter.predict_median": {
  "data": {
   "lineno": 1832
  },
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter.predict_percentile": {
  "data": {
   "lineno": 1863,
   "symbols_in_volume": [
    "lifelines.utils._get_index",
    "lifelines.utils.qth_survival_times"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter.predict_survival_function": {
  "data": {
   "lineno": 1803,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter.print_summary": {
  "data": {
   "lineno": 1718,
   "symbols_in_volume": [
    "justify",
    "lifelines.utils.CensoringType.is_right_censoring",
    "lifelines.utils.format_exp_floats",
    "lifelines.utils.format_floats",
    "lifelines.utils.format_p_value",
    "lifelines.utils.leading_space",
    "lifelines.utils.map_leading_space",
    "lifelines.utils.string_justify",
    "numpy.errstate",
    "numpy.log2",
    "print"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter.score_": {
  "data": {
   "lineno": 1959,
   "symbols_in_volume": [
    "hasattr",
    "lifelines.utils.concordance_index",
    "property"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.ParametricRegressionFitter.summary": {
  "data": {
   "lineno": 1692,
   "symbols_in_volume": [
    "lifelines.utils.inv_normal_cdf",
    "numpy.errstate",
    "numpy.exp",
    "numpy.log2",
    "pandas.DataFrame",
    "property"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.StatisticalResult": {
  "data": {
   "shadows": "lifelines.statistics.StatisticalResult"
  },
  "type": "import"
 },
 "lifelines.fitters.UnivariateFitter": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "lifelines.fitters.BaseFitter"
   ]
  },
  "type": "class"
 },
 "lifelines.fitters.UnivariateFitter._conditional_time_to_event_": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "lifelines.utils.qth_survival_times",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.UnivariateFitter._update_docstrings": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "lifelines.plotting._plot_estimate.__doc__.format"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.UnivariateFitter.conditional_time_to_event_": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.UnivariateFitter.cumulative_density_at_times": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.UnivariateFitter.cumulative_hazard_at_times": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.UnivariateFitter.divide": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "getattr",
    "numpy.concatenate",
    "numpy.unique",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.UnivariateFitter.hazard_at_times": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.UnivariateFitter.median_": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "FutureWarning",
    "lifelines.fitters.warnings",
    "property"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.UnivariateFitter.median_survival_time_": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.UnivariateFitter.percentile": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "lifelines.fitters.warnings",
    "lifelines.utils.ApproximationWarning",
    "lifelines.utils.qth_survival_times"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.UnivariateFitter.plot": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "lifelines.plotting._plot_estimate"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.UnivariateFitter.plot_cumulative_density": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.UnivariateFitter.plot_cumulative_hazard": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.UnivariateFitter.plot_hazard": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.UnivariateFitter.plot_survival_function": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.UnivariateFitter.predict": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "callable",
    "getattr",
    "lifelines.utils._to_1d_array",
    "lifelines.utils.interpolate_at_times_and_return_pandas",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.UnivariateFitter.subtract": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "getattr",
    "numpy.concatenate",
    "numpy.unique",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.UnivariateFitter.survival_function_at_times": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.__all__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "lifelines.fitters._plot_estimate": {
  "data": {
   "shadows": "lifelines.plotting._plot_estimate"
  },
  "type": "import"
 },
 "lifelines.fitters.aalen_additive_fitter": {
  "data": {},
  "type": "module"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "lifelines.fitters.BaseFitter"
   ]
  },
  "type": "class"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter.__init__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "ValueError",
    "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter",
    "super"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter._check_values": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "lifelines.utils.check_for_numeric_dtypes_or_raise",
    "lifelines.utils.check_nans_or_infs"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter._compute_confidence_intervals": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "lifelines.utils.inv_normal_cdf",
    "numpy.sqrt",
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter._compute_slopes": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "_univariate_linear_regression_without_intercept",
    "lifelines.utils.survival_table_from_events",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter._compute_slopes._univariate_linear_regression_without_intercept": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "numpy.outer",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter._fit_model": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "numpy.sort",
    "numpy.unique",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter._fit_model_to_data_batch": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "lifelines.fitters.aalen_additive_fitter.time",
    "lifelines.fitters.aalen_additive_fitter.warnings",
    "lifelines.utils.ConvergenceWarning",
    "lifelines.utils.ridge_regression",
    "numpy.linalg.LinAlgError",
    "numpy.sort",
    "numpy.sqrt",
    "numpy.unique",
    "numpy.zeros",
    "numpy.zeros_like",
    "print"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter._preprocess_dataframe": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "float",
    "int",
    "lifelines.fitters.aalen_additive_fitter.warnings",
    "lifelines.utils.StatisticalWarning",
    "lifelines.utils.check_nans_or_infs",
    "numpy.ones",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter.fit": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "datetime.datetime.utcnow",
    "lifelines.utils.CensoringType.right_censoring",
    "lifelines.utils.normalize"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter.plot": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "create_df_slicer",
    "float",
    "lifelines.utils._to_list",
    "matplotlib.pyplot.gca",
    "matplotlib.pyplot.hlines",
    "shaded_plot",
    "subset_df"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter.plot.create_df_slicer": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "getattr",
    "slice"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter.plot.shaded_plot": {
  "data": {
   "lineno": 439
  },
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter.predict_cumulative_hazard": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "lifelines.utils._get_index",
    "numpy.c_",
    "numpy.dot",
    "numpy.ones",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter.predict_expectation": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "lifelines.utils._get_index",
    "pandas.DataFrame",
    "scipy.integrate.trapz"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter.predict_median": {
  "data": {
   "lineno": 379
  },
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter.predict_percentile": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "lifelines.utils._get_index",
    "lifelines.utils.qth_survival_times"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter.predict_survival_function": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter.print_summary": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "justify",
    "lifelines.utils.format_exp_floats",
    "lifelines.utils.format_floats",
    "lifelines.utils.format_p_value",
    "lifelines.utils.string_justify",
    "print"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter.score_": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "hasattr",
    "lifelines.utils.concordance_index",
    "property"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter.smoothed_hazards_": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "lifelines.utils.epanechnikov_kernel",
    "numpy.dot",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.AalenAdditiveFitter.summary": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "property"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.aalen_additive_fitter.BaseFitter": {
  "data": {
   "shadows": "lifelines.fitters.BaseFitter"
  },
  "type": "import"
 },
 "lifelines.fitters.aalen_additive_fitter.CensoringType": {
  "data": {
   "shadows": "lifelines.utils.CensoringType"
  },
  "type": "import"
 },
 "lifelines.fitters.aalen_additive_fitter.ConvergenceWarning": {
  "data": {
   "shadows": "lifelines.utils.ConvergenceWarning"
  },
  "type": "import"
 },
 "lifelines.fitters.aalen_additive_fitter.LinAlgError": {
  "data": {
   "shadows": "numpy.linalg.LinAlgError"
  },
  "type": "import"
 },
 "lifelines.fitters.aalen_additive_fitter.StatisticalWarning": {
  "data": {
   "shadows": "lifelines.utils.StatisticalWarning"
  },
  "type": "import"
 },
 "lifelines.fitters.aalen_additive_fitter._get_index": {
  "data": {
   "shadows": "lifelines.utils._get_index"
  },
  "type": "import"
 },
 "lifelines.fitters.aalen_additive_fitter._to_list": {
  "data": {
   "shadows": "lifelines.utils._to_list"
  },
  "type": "import"
 },
 "lifelines.fitters.aalen_additive_fitter.check_for_numeric_dtypes_or_raise": {
  "data": {
   "shadows": "lifelines.utils.check_for_numeric_dtypes_or_raise"
  },
  "type": "import"
 },
 "lifelines.fitters.aalen_additive_fitter.check_nans_or_infs": {
  "data": {
   "shadows": "lifelines.utils.check_nans_or_infs"
  },
  "type": "import"
 },
 "lifelines.fitters.aalen_additive_fitter.concordance_index": {
  "data": {
   "shadows": "lifelines.utils.concordance_index"
  },
  "type": "import"
 },
 "lifelines.fitters.aalen_additive_fitter.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "lifelines.fitters.aalen_additive_fitter.epanechnikov_kernel": {
  "data": {
   "shadows": "lifelines.utils.epanechnikov_kernel"
  },
  "type": "import"
 },
 "lifelines.fitters.aalen_additive_fitter.format_exp_floats": {
  "data": {
   "shadows": "lifelines.utils.format_exp_floats"
  },
  "type": "import"
 },
 "lifelines.fitters.aalen_additive_fitter.format_floats": {
  "data": {
   "shadows": "lifelines.utils.format_floats"
  },
  "type": "import"
 },
 "lifelines.fitters.aalen_additive_fitter.format_p_value": {
  "data": {
   "shadows": "lifelines.utils.format_p_value"
  },
  "type": "import"
 },
 "lifelines.fitters.aalen_additive_fitter.inv_normal_cdf": {
  "data": {
   "shadows": "lifelines.utils.inv_normal_cdf"
  },
  "type": "import"
 },
 "lifelines.fitters.aalen_additive_fitter.lr": {
  "data": {
   "shadows": "lifelines.utils.ridge_regression"
  },
  "type": "import"
 },
 "lifelines.fitters.aalen_additive_fitter.normalize": {
  "data": {
   "shadows": "lifelines.utils.normalize"
  },
  "type": "import"
 },
 "lifelines.fitters.aalen_additive_fitter.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "lifelines.fitters.aalen_additive_fitter.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "lifelines.fitters.aalen_additive_fitter.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "lifelines.fitters.aalen_additive_fitter.qth_survival_times": {
  "data": {
   "shadows": "lifelines.utils.qth_survival_times"
  },
  "type": "import"
 },
 "lifelines.fitters.aalen_additive_fitter.string_justify": {
  "data": {
   "shadows": "lifelines.utils.string_justify"
  },
  "type": "import"
 },
 "lifelines.fitters.aalen_additive_fitter.survival_table_from_events": {
  "data": {
   "shadows": "lifelines.utils.survival_table_from_events"
  },
  "type": "import"
 },
 "lifelines.fitters.aalen_additive_fitter.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "lifelines.fitters.aalen_additive_fitter.trapz": {
  "data": {
   "shadows": "scipy.integrate.trapz"
  },
  "type": "import"
 },
 "lifelines.fitters.aalen_additive_fitter.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "lifelines.fitters.aalen_johansen_fitter": {
  "data": {},
  "type": "module"
 },
 "lifelines.fitters.aalen_johansen_fitter.AalenJohansenFitter": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "lifelines.fitters.UnivariateFitter"
   ]
  },
  "type": "class"
 },
 "lifelines.fitters.aalen_johansen_fitter.AalenJohansenFitter.__init__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "lifelines.fitters.UnivariateFitter.__init__"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.aalen_johansen_fitter.AalenJohansenFitter._bounds": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "float",
    "len",
    "lifelines.utils.inv_normal_cdf",
    "numpy.absolute",
    "numpy.exp",
    "numpy.log",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.aalen_johansen_fitter.AalenJohansenFitter._check_for_duplicates": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "events",
    "pandas.DataFrame",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.aalen_johansen_fitter.AalenJohansenFitter._jitter": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.seed",
    "numpy.random.uniform"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.aalen_johansen_fitter.AalenJohansenFitter.fit": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "Warning",
    "int",
    "lifelines.KaplanMeierFitter",
    "lifelines.fitters.aalen_johansen_fitter.warnings",
    "lifelines.utils.CensoringType.right_censoring",
    "lifelines.utils._preprocess_inputs",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.concat",
    "str",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.aalen_johansen_fitter.CensoringType": {
  "data": {
   "shadows": "lifelines.utils.CensoringType"
  },
  "type": "import"
 },
 "lifelines.fitters.aalen_johansen_fitter.KaplanMeierFitter": {
  "data": {
   "shadows": "lifelines.KaplanMeierFitter"
  },
  "type": "import"
 },
 "lifelines.fitters.aalen_johansen_fitter.UnivariateFitter": {
  "data": {
   "shadows": "lifelines.fitters.UnivariateFitter"
  },
  "type": "import"
 },
 "lifelines.fitters.aalen_johansen_fitter._preprocess_inputs": {
  "data": {
   "shadows": "lifelines.utils._preprocess_inputs"
  },
  "type": "import"
 },
 "lifelines.fitters.aalen_johansen_fitter.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "lifelines.fitters.aalen_johansen_fitter.inv_normal_cdf": {
  "data": {
   "shadows": "lifelines.utils.inv_normal_cdf"
  },
  "type": "import"
 },
 "lifelines.fitters.aalen_johansen_fitter.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "lifelines.fitters.aalen_johansen_fitter.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "lifelines.fitters.aalen_johansen_fitter.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "lifelines.fitters.anp": {
  "data": {
   "shadows": "autograd.numpy"
  },
  "type": "import"
 },
 "lifelines.fitters.breslow_fleming_harrington_fitter": {
  "data": {},
  "type": "module"
 },
 "lifelines.fitters.breslow_fleming_harrington_fitter.BreslowFlemingHarringtonFitter": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "lifelines.fitters.UnivariateFitter"
   ]
  },
  "type": "class"
 },
 "lifelines.fitters.breslow_fleming_harrington_fitter.BreslowFlemingHarringtonFitter.fit": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "lifelines.NelsonAalenFitter",
    "lifelines.utils.CensoringType.right_censoring",
    "lifelines.utils.coalesce",
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.breslow_fleming_harrington_fitter.BreslowFlemingHarringtonFitter.survival_function_at_times": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "lifelines.utils._to_1d_array",
    "lifelines.utils.coalesce",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.breslow_fleming_harrington_fitter.CensoringType": {
  "data": {
   "shadows": "lifelines.utils.CensoringType"
  },
  "type": "import"
 },
 "lifelines.fitters.breslow_fleming_harrington_fitter.NelsonAalenFitter": {
  "data": {
   "shadows": "lifelines.NelsonAalenFitter"
  },
  "type": "import"
 },
 "lifelines.fitters.breslow_fleming_harrington_fitter.UnivariateFitter": {
  "data": {
   "shadows": "lifelines.fitters.UnivariateFitter"
  },
  "type": "import"
 },
 "lifelines.fitters.breslow_fleming_harrington_fitter._to_1d_array": {
  "data": {
   "shadows": "lifelines.utils._to_1d_array"
  },
  "type": "import"
 },
 "lifelines.fitters.breslow_fleming_harrington_fitter.coalesce": {
  "data": {
   "shadows": "lifelines.utils.coalesce"
  },
  "type": "import"
 },
 "lifelines.fitters.breslow_fleming_harrington_fitter.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "lifelines.fitters.breslow_fleming_harrington_fitter.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "lifelines.fitters.chisq_test": {
  "data": {
   "shadows": "lifelines.statistics.chisq_test"
  },
  "type": "import"
 },
 "lifelines.fitters.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "lifelines.fitters.cox_time_varying_fitter": {
  "data": {
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "module"
 },
 "lifelines.fitters.cox_time_varying_fitter.BaseFitter": {
  "data": {
   "shadows": "lifelines.fitters.BaseFitter"
  },
  "type": "import"
 },
 "lifelines.fitters.cox_time_varying_fitter.ConvergenceError": {
  "data": {
   "shadows": "lifelines.utils.ConvergenceError"
  },
  "type": "import"
 },
 "lifelines.fitters.cox_time_varying_fitter.ConvergenceWarning": {
  "data": {
   "shadows": "lifelines.utils.ConvergenceWarning"
  },
  "type": "import"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "lifelines.fitters.BaseFitter"
   ]
  },
  "type": "class"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter.__init__": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "ValueError",
    "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter",
    "super"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter.__repr__": {
  "data": {
   "lineno": 844,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter._check_values": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "events",
    "lifelines.utils.check_complete_separation_low_variance",
    "lifelines.utils.check_for_immediate_deaths",
    "lifelines.utils.check_for_instantaneous_events_at_death_time",
    "lifelines.utils.check_for_instantaneous_events_at_time_zero",
    "lifelines.utils.check_for_numeric_dtypes_or_raise",
    "lifelines.utils.check_low_var",
    "lifelines.utils.check_nans_or_infs"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter._compute_baseline_survival": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter._compute_confidence_intervals": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "lifelines.utils.inv_normal_cdf",
    "numpy.c_",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter._compute_cumulative_baseline_hazard": {
  "data": {
   "lineno": 814,
   "symbols_in_volume": [
    "events.values",
    "numpy.unique",
    "numpy.zeros_like",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter._compute_delta_beta": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": [
    "events",
    "numpy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter._compute_p_values": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "scipy.stats.chi2.sf"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter._compute_residuals": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter._compute_sandwich_estimator": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "events",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter._compute_standard_errors": {
  "data": {
   "lineno": 880,
   "symbols_in_volume": [
    "events",
    "numpy.sqrt",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter._compute_z_values": {
  "data": {
   "lineno": 264
  },
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter._get_gradients": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "events",
    "int",
    "lifelines.fitters.cox_time_varying_fitter.matrix_axis_0_sum_to_1d_array",
    "numpy.arange",
    "numpy.array",
    "numpy.dot",
    "numpy.einsum",
    "numpy.exp",
    "numpy.log",
    "numpy.outer",
    "numpy.sum",
    "numpy.unique",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter._log_likelihood": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "DeprecationWarning",
    "lifelines.fitters.cox_time_varying_fitter.warnings",
    "property"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter._newton_rhaphson": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "events",
    "events.values",
    "lifelines.fitters.cox_time_varying_fitter.time",
    "lifelines.fitters.cox_time_varying_fitter.warnings",
    "lifelines.utils.ConvergenceError",
    "lifelines.utils.ConvergenceWarning",
    "lifelines.utils.StepSizer",
    "numpy.all",
    "numpy.any",
    "numpy.isnan",
    "numpy.linalg.norm",
    "numpy.zeros",
    "numpy.zeros_like",
    "print",
    "scipy.linalg.LinAlgError",
    "scipy.linalg.solve",
    "str"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter._partition_by_strata": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "events.loc"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter._partition_by_strata_and_apply": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "events",
    "function"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter.fit": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "KeyError",
    "NotImplementedError",
    "ValueError",
    "bool",
    "datetime.datetime.utcnow",
    "events",
    "float",
    "lifelines.utils._to_list",
    "lifelines.utils.coalesce",
    "lifelines.utils.normalize",
    "lifelines.utils.pass_for_numeric_dtypes_or_raise_array",
    "numpy.exp",
    "numpy.linalg.inv",
    "numpy.outer",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter.log_likelihood_ratio_test": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "hasattr",
    "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter",
    "lifelines.statistics.StatisticalResult",
    "lifelines.statistics.chisq_test"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter.plot": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "len",
    "lifelines.utils.inv_normal_cdf",
    "list",
    "matplotlib.pyplot.gca",
    "numpy.argsort",
    "range"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter.predict_log_partial_hazard": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "lifelines.utils._get_index",
    "lifelines.utils.check_for_numeric_dtypes_or_raise",
    "lifelines.utils.normalize",
    "numpy.dot",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter.predict_partial_hazard": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter.print_summary": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "justify",
    "lifelines.utils.format_exp_floats",
    "lifelines.utils.format_floats",
    "lifelines.utils.format_p_value",
    "lifelines.utils.leading_space",
    "lifelines.utils.map_leading_space",
    "lifelines.utils.string_justify",
    "numpy.errstate",
    "numpy.log2",
    "print"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.CoxTimeVaryingFitter.summary": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "lifelines.utils.inv_normal_cdf",
    "numpy.errstate",
    "numpy.exp",
    "numpy.log2",
    "pandas.DataFrame",
    "property"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.cox_time_varying_fitter.LinAlgError": {
  "data": {
   "shadows": "scipy.linalg.LinAlgError"
  },
  "type": "import"
 },
 "lifelines.fitters.cox_time_varying_fitter.StatisticalResult": {
  "data": {
   "shadows": "lifelines.statistics.StatisticalResult"
  },
  "type": "import"
 },
 "lifelines.fitters.cox_time_varying_fitter.StepSizer": {
  "data": {
   "shadows": "lifelines.utils.StepSizer"
  },
  "type": "import"
 },
 "lifelines.fitters.cox_time_varying_fitter.__all__": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "lifelines.fitters.cox_time_varying_fitter._get_index": {
  "data": {
   "shadows": "lifelines.utils._get_index"
  },
  "type": "import"
 },
 "lifelines.fitters.cox_time_varying_fitter._to_list": {
  "data": {
   "shadows": "lifelines.utils._to_list"
  },
  "type": "import"
 },
 "lifelines.fitters.cox_time_varying_fitter.array_sum_to_scalar": {
  "data": {
   "shadows": "numpy.sum"
  },
  "type": "import"
 },
 "lifelines.fitters.cox_time_varying_fitter.check_complete_separation_low_variance": {
  "data": {
   "shadows": "lifelines.utils.check_complete_separation_low_variance"
  },
  "type": "import"
 },
 "lifelines.fitters.cox_time_varying_fitter.check_for_immediate_deaths": {
  "data": {
   "shadows": "lifelines.utils.check_for_immediate_deaths"
  },
  "type": "import"
 },
 "lifelines.fitters.cox_time_varying_fitter.check_for_instantaneous_events_at_death_time": {
  "data": {
   "shadows": "lifelines.utils.check_for_instantaneous_events_at_death_time"
  },
  "type": "import"
 },
 "lifelines.fitters.cox_time_varying_fitter.check_for_instantaneous_events_at_time_zero": {
  "data": {
   "shadows": "lifelines.utils.check_for_instantaneous_events_at_time_zero"
  },
  "type": "import"
 },
 "lifelines.fitters.cox_time_varying_fitter.check_for_numeric_dtypes_or_raise": {
  "data": {
   "shadows": "lifelines.utils.check_for_numeric_dtypes_or_raise"
  },
  "type": "import"
 },
 "lifelines.fitters.cox_time_varying_fitter.check_low_var": {
  "data": {
   "shadows": "lifelines.utils.check_low_var"
  },
  "type": "import"
 },
 "lifelines.fitters.cox_time_varying_fitter.check_nans_or_infs": {
  "data": {
   "shadows": "lifelines.utils.check_nans_or_infs"
  },
  "type": "import"
 },
 "lifelines.fitters.cox_time_varying_fitter.chisq_test": {
  "data": {
   "shadows": "lifelines.statistics.chisq_test"
  },
  "type": "import"
 },
 "lifelines.fitters.cox_time_varying_fitter.coalesce": {
  "data": {
   "shadows": "lifelines.utils.coalesce"
  },
  "type": "import"
 },
 "lifelines.fitters.cox_time_varying_fitter.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "lifelines.fitters.cox_time_varying_fitter.format_exp_floats": {
  "data": {
   "shadows": "lifelines.utils.format_exp_floats"
  },
  "type": "import"
 },
 "lifelines.fitters.cox_time_varying_fitter.format_floats": {
  "data": {
   "shadows": "lifelines.utils.format_floats"
  },
  "type": "import"
 },
 "lifelines.fitters.cox_time_varying_fitter.format_p_value": {
  "data": {
   "shadows": "lifelines.utils.format_p_value"
  },
  "type": "import"
 },
 "lifelines.fitters.cox_time_varying_fitter.inv": {
  "data": {
   "shadows": "numpy.linalg.inv"
  },
  "type": "import"
 },
 "lifelines.fitters.cox_time_varying_fitter.inv_normal_cdf": {
  "data": {
   "shadows": "lifelines.utils.inv_normal_cdf"
  },
  "type": "import"
 },
 "lifelines.fitters.cox_time_varying_fitter.leading_space": {
  "data": {
   "shadows": "lifelines.utils.leading_space"
  },
  "type": "import"
 },
 "lifelines.fitters.cox_time_varying_fitter.map_leading_space": {
  "data": {
   "shadows": "lifelines.utils.map_leading_space"
  },
  "type": "import"
 },
 "lifelines.fitters.cox_time_varying_fitter.matrix_axis_0_sum_to_1d_array": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "lifelines.fitters.cox_time_varying_fitter.norm": {
  "data": {
   "shadows": "numpy.linalg.norm"
  },
  "type": "import"
 },
 "lifelines.fitters.cox_time_varying_fitter.normalize": {
  "data": {
   "shadows": "lifelines.utils.normalize"
  },
  "type": "import"
 },
 "lifelines.fitters.cox_time_varying_fitter.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "lifelines.fitters.cox_time_varying_fitter.pass_for_numeric_dtypes_or_raise_array": {
  "data": {
   "shadows": "lifelines.utils.pass_for_numeric_dtypes_or_raise_array"
  },
  "type": "import"
 },
 "lifelines.fitters.cox_time_varying_fitter.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "lifelines.fitters.cox_time_varying_fitter.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "lifelines.fitters.cox_time_varying_fitter.spsolve": {
  "data": {
   "shadows": "scipy.linalg.solve"
  },
  "type": "import"
 },
 "lifelines.fitters.cox_time_varying_fitter.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "lifelines.fitters.cox_time_varying_fitter.string_justify": {
  "data": {
   "shadows": "lifelines.utils.string_justify"
  },
  "type": "import"
 },
 "lifelines.fitters.cox_time_varying_fitter.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "lifelines.fitters.cox_time_varying_fitter.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "lifelines.fitters.coxph_fitter": {
  "data": {},
  "type": "module"
 },
 "lifelines.fitters.coxph_fitter.BaseFitter": {
  "data": {
   "shadows": "lifelines.fitters.BaseFitter"
  },
  "type": "import"
 },
 "lifelines.fitters.coxph_fitter.BatchVsSingle": {
  "data": {
   "lineno": 50
  },
  "type": "class"
 },
 "lifelines.fitters.coxph_fitter.BatchVsSingle.decide": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CensoringType": {
  "data": {
   "shadows": "lifelines.utils.CensoringType"
  },
  "type": "import"
 },
 "lifelines.fitters.coxph_fitter.ConvergenceError": {
  "data": {
   "shadows": "lifelines.utils.ConvergenceError"
  },
  "type": "import"
 },
 "lifelines.fitters.coxph_fitter.ConvergenceWarning": {
  "data": {
   "shadows": "lifelines.utils.ConvergenceWarning"
  },
  "type": "import"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "lifelines.fitters.BaseFitter"
   ]
  },
  "type": "class"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.__init__": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "lifelines.fitters.coxph_fitter.CoxPHFitter",
    "super"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._check_values": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "lifelines.fitters.coxph_fitter.warnings",
    "lifelines.utils.StatisticalWarning",
    "lifelines.utils.check_complete_separation",
    "lifelines.utils.check_for_numeric_dtypes_or_raise",
    "lifelines.utils.check_low_var",
    "lifelines.utils.check_nans_or_infs"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_baseline_cumulative_hazard": {
  "data": {
   "lineno": 1691
  },
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_baseline_hazard": {
  "data": {
   "lineno": 1661,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_baseline_hazards": {
  "data": {
   "lineno": 1674,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_baseline_survival": {
  "data": {
   "lineno": 1697,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_confidence_intervals": {
  "data": {
   "lineno": 1196,
   "symbols_in_volume": [
    "lifelines.utils.inv_normal_cdf",
    "numpy.c_",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_delta_beta": {
  "data": {
   "lineno": 1100,
   "symbols_in_volume": [
    "numpy.tile"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_deviance": {
  "data": {
   "lineno": 950,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.sign",
    "numpy.sqrt",
    "numpy.warnings.catch_warnings",
    "numpy.warnings.filterwarnings",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_martingale": {
  "data": {
   "lineno": 934,
   "symbols_in_volume": [
    "numpy.append",
    "numpy.empty",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_p_values": {
  "data": {
   "lineno": 1227,
   "symbols_in_volume": [
    "scipy.stats.chi2.sf"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_sandwich_estimator": {
  "data": {
   "lineno": 1214
  },
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_scaled_schoenfeld": {
  "data": {
   "lineno": 962
  },
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_schoenfeld": {
  "data": {
   "lineno": 990,
   "symbols_in_volume": [
    "numpy.append",
    "numpy.empty",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_schoenfeld_within_strata": {
  "data": {
   "lineno": 1013,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.append",
    "numpy.dot",
    "numpy.empty",
    "numpy.exp",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_score": {
  "data": {
   "lineno": 1115,
   "symbols_in_volume": [
    "numpy.append",
    "numpy.empty",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_score_within_strata": {
  "data": {
   "lineno": 1132,
   "symbols_in_volume": [
    "int",
    "numpy.dot",
    "numpy.exp",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_standard_errors": {
  "data": {
   "lineno": 1207,
   "symbols_in_volume": [
    "numpy.sqrt",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._compute_z_values": {
  "data": {
   "lineno": 1224
  },
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._fit_model": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "abs",
    "get_gradients",
    "getattr",
    "lifelines.fitters.coxph_fitter.BatchVsSingle",
    "lifelines.fitters.coxph_fitter.time",
    "lifelines.fitters.coxph_fitter.warnings",
    "lifelines.utils.ConvergenceError",
    "lifelines.utils.ConvergenceWarning",
    "lifelines.utils.StepSizer",
    "numpy.all",
    "numpy.any",
    "numpy.isnan",
    "numpy.linalg.norm",
    "numpy.zeros",
    "numpy.zeros_like",
    "print",
    "scipy.linalg.LinAlgError",
    "scipy.linalg.solve",
    "str"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._get_efron_values_batch": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.dot",
    "numpy.einsum",
    "numpy.exp",
    "numpy.log",
    "numpy.outer",
    "numpy.unique",
    "numpy.zeros",
    "slice"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._get_efron_values_single": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.dot",
    "numpy.einsum",
    "numpy.empty",
    "numpy.exp",
    "numpy.log",
    "numpy.multiply.outer",
    "numpy.outer",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._log_likelihood": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "DeprecationWarning",
    "lifelines.fitters.coxph_fitter.warnings",
    "property"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._partition_by_strata": {
  "data": {
   "lineno": 922
  },
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._partition_by_strata_and_apply": {
  "data": {
   "lineno": 930,
   "symbols_in_volume": [
    "function"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._preprocess_dataframe": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "bool",
    "float",
    "lifelines.utils._to_list",
    "lifelines.utils.check_nans_or_infs",
    "numpy.ones",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._trivial_log_likelihood_batch": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "int",
    "numpy.arange",
    "numpy.log",
    "numpy.unique",
    "slice",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter._trivial_log_likelihood_single": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.log",
    "range",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.check_assumptions": {
  "data": {
   "lineno": 1912,
   "symbols_in_volume": [
    "IndexError",
    "enumerate",
    "lifelines.statistics.TimeTransformers",
    "lifelines.statistics.proportional_hazard_test",
    "lifelines.utils.format_p_value",
    "lifelines.utils.lowess.lowess",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.subplots_adjust",
    "matplotlib.pyplot.tight_layout",
    "numpy.random.choice",
    "numpy.round",
    "print",
    "range",
    "sorted",
    "textwrap.dedent",
    "textwrap.fill",
    "transformer"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.compute_residuals": {
  "data": {
   "lineno": 1176,
   "symbols_in_volume": [
    "getattr",
    "lifelines.fitters.coxph_fitter.warnings",
    "lifelines.utils.ConvergenceWarning"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.fit": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "TypeError",
    "datetime.datetime.utcnow",
    "hasattr",
    "lifelines.utils.CensoringType.right_censoring",
    "lifelines.utils.coalesce",
    "lifelines.utils.normalize",
    "numpy.exp",
    "numpy.linalg.inv",
    "numpy.outer",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.log_likelihood_ratio_test": {
  "data": {
   "lineno": 1346,
   "symbols_in_volume": [
    "hasattr",
    "lifelines.statistics.StatisticalResult",
    "lifelines.statistics.chisq_test"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.plot": {
  "data": {
   "lineno": 1720,
   "symbols_in_volume": [
    "len",
    "lifelines.utils.inv_normal_cdf",
    "list",
    "matplotlib.pyplot.gca",
    "numpy.argsort",
    "numpy.exp",
    "numpy.vstack",
    "range"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.plot_covariate_groups": {
  "data": {
   "lineno": 1798,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "len",
    "lifelines.plotting.set_kwargs_drawstyle",
    "lifelines.utils._to_list",
    "lifelines.utils._to_tuple",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.legend",
    "numpy.array_equal",
    "numpy.asarray",
    "numpy.eye",
    "pandas.concat",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.predict_cumulative_hazard": {
  "data": {
   "lineno": 1446,
   "symbols_in_volume": [
    "KeyError",
    "float",
    "isinstance",
    "lifelines.utils.StatError",
    "lifelines.utils._get_index",
    "lifelines.utils._to_1d_array",
    "lifelines.utils.coalesce",
    "lifelines.utils.interpolate_at_times",
    "numpy.atleast_1d",
    "numpy.clip",
    "numpy.inf",
    "numpy.tile",
    "pandas.DataFrame",
    "pandas.Series",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.predict_expectation": {
  "data": {
   "lineno": 1623,
   "symbols_in_volume": [
    "lifelines.utils._get_index",
    "pandas.DataFrame",
    "scipy.integrate.trapz"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.predict_log_partial_hazard": {
  "data": {
   "lineno": 1398,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "len",
    "lifelines.utils._get_index",
    "lifelines.utils.normalize",
    "numpy.dot",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.predict_median": {
  "data": {
   "lineno": 1597
  },
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.predict_partial_hazard": {
  "data": {
   "lineno": 1375,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.predict_percentile": {
  "data": {
   "lineno": 1565,
   "symbols_in_volume": [
    "lifelines.utils._get_index",
    "lifelines.utils.qth_survival_times"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.predict_survival_function": {
  "data": {
   "lineno": 1535,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.print_summary": {
  "data": {
   "lineno": 1256,
   "symbols_in_volume": [
    "justify",
    "lifelines.utils.format_exp_floats",
    "lifelines.utils.format_floats",
    "lifelines.utils.format_p_value",
    "lifelines.utils.leading_space",
    "lifelines.utils.string_justify",
    "numpy.errstate",
    "numpy.log2",
    "print"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.score_": {
  "data": {
   "lineno": 2118,
   "symbols_in_volume": [
    "hasattr",
    "lifelines.utils.concordance._concordance_ratio",
    "lifelines.utils.concordance._concordance_summary_statistics",
    "property"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.CoxPHFitter.summary": {
  "data": {
   "lineno": 1231,
   "symbols_in_volume": [
    "lifelines.utils.inv_normal_cdf",
    "numpy.errstate",
    "numpy.exp",
    "numpy.log2",
    "pandas.DataFrame",
    "property"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.coxph_fitter.LinAlgError": {
  "data": {
   "shadows": "scipy.linalg.LinAlgError"
  },
  "type": "import"
 },
 "lifelines.fitters.coxph_fitter.StatError": {
  "data": {
   "shadows": "lifelines.utils.StatError"
  },
  "type": "import"
 },
 "lifelines.fitters.coxph_fitter.StatisticalResult": {
  "data": {
   "shadows": "lifelines.statistics.StatisticalResult"
  },
  "type": "import"
 },
 "lifelines.fitters.coxph_fitter.StatisticalWarning": {
  "data": {
   "shadows": "lifelines.utils.StatisticalWarning"
  },
  "type": "import"
 },
 "lifelines.fitters.coxph_fitter.StepSizer": {
  "data": {
   "shadows": "lifelines.utils.StepSizer"
  },
  "type": "import"
 },
 "lifelines.fitters.coxph_fitter.TimeTransformers": {
  "data": {
   "shadows": "lifelines.statistics.TimeTransformers"
  },
  "type": "import"
 },
 "lifelines.fitters.coxph_fitter.__all__": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "lifelines.fitters.coxph_fitter._concordance_ratio": {
  "data": {
   "shadows": "lifelines.utils.concordance._concordance_ratio"
  },
  "type": "import"
 },
 "lifelines.fitters.coxph_fitter._concordance_summary_statistics": {
  "data": {
   "shadows": "lifelines.utils.concordance._concordance_summary_statistics"
  },
  "type": "import"
 },
 "lifelines.fitters.coxph_fitter._get_index": {
  "data": {
   "shadows": "lifelines.utils._get_index"
  },
  "type": "import"
 },
 "lifelines.fitters.coxph_fitter._to_1d_array": {
  "data": {
   "shadows": "lifelines.utils._to_1d_array"
  },
  "type": "import"
 },
 "lifelines.fitters.coxph_fitter._to_list": {
  "data": {
   "shadows": "lifelines.utils._to_list"
  },
  "type": "import"
 },
 "lifelines.fitters.coxph_fitter._to_tuple": {
  "data": {
   "shadows": "lifelines.utils._to_tuple"
  },
  "type": "import"
 },
 "lifelines.fitters.coxph_fitter.check_complete_separation": {
  "data": {
   "shadows": "lifelines.utils.check_complete_separation"
  },
  "type": "import"
 },
 "lifelines.fitters.coxph_fitter.check_for_numeric_dtypes_or_raise": {
  "data": {
   "shadows": "lifelines.utils.check_for_numeric_dtypes_or_raise"
  },
  "type": "import"
 },
 "lifelines.fitters.coxph_fitter.check_low_var": {
  "data": {
   "shadows": "lifelines.utils.check_low_var"
  },
  "type": "import"
 },
 "lifelines.fitters.coxph_fitter.check_nans_or_infs": {
  "data": {
   "shadows": "lifelines.utils.check_nans_or_infs"
  },
  "type": "import"
 },
 "lifelines.fitters.coxph_fitter.chisq_test": {
  "data": {
   "shadows": "lifelines.statistics.chisq_test"
  },
  "type": "import"
 },
 "lifelines.fitters.coxph_fitter.coalesce": {
  "data": {
   "shadows": "lifelines.utils.coalesce"
  },
  "type": "import"
 },
 "lifelines.fitters.coxph_fitter.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "lifelines.fitters.coxph_fitter.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "lifelines.fitters.coxph_fitter.fill": {
  "data": {
   "shadows": "textwrap.fill"
  },
  "type": "import"
 },
 "lifelines.fitters.coxph_fitter.format_exp_floats": {
  "data": {
   "shadows": "lifelines.utils.format_exp_floats"
  },
  "type": "import"
 },
 "lifelines.fitters.coxph_fitter.format_floats": {
  "data": {
   "shadows": "lifelines.utils.format_floats"
  },
  "type": "import"
 },
 "lifelines.fitters.coxph_fitter.format_p_value": {
  "data": {
   "shadows": "lifelines.utils.format_p_value"
  },
  "type": "import"
 },
 "lifelines.fitters.coxph_fitter.interpolate_at_times": {
  "data": {
   "shadows": "lifelines.utils.interpolate_at_times"
  },
  "type": "import"
 },
 "lifelines.fitters.coxph_fitter.interpolate_at_times_and_return_pandas": {
  "data": {
   "shadows": "lifelines.utils.interpolate_at_times_and_return_pandas"
  },
  "type": "import"
 },
 "lifelines.fitters.coxph_fitter.inv": {
  "data": {
   "shadows": "numpy.linalg.inv"
  },
  "type": "import"
 },
 "lifelines.fitters.coxph_fitter.inv_normal_cdf": {
  "data": {
   "shadows": "lifelines.utils.inv_normal_cdf"
  },
  "type": "import"
 },
 "lifelines.fitters.coxph_fitter.leading_space": {
  "data": {
   "shadows": "lifelines.utils.leading_space"
  },
  "type": "import"
 },
 "lifelines.fitters.coxph_fitter.lowess": {
  "data": {
   "shadows": "lifelines.utils.lowess.lowess"
  },
  "type": "import"
 },
 "lifelines.fitters.coxph_fitter.norm": {
  "data": {
   "shadows": "numpy.linalg.norm"
  },
  "type": "import"
 },
 "lifelines.fitters.coxph_fitter.normalize": {
  "data": {
   "shadows": "lifelines.utils.normalize"
  },
  "type": "import"
 },
 "lifelines.fitters.coxph_fitter.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "lifelines.fitters.coxph_fitter.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "lifelines.fitters.coxph_fitter.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "lifelines.fitters.coxph_fitter.proportional_hazard_test": {
  "data": {
   "shadows": "lifelines.statistics.proportional_hazard_test"
  },
  "type": "import"
 },
 "lifelines.fitters.coxph_fitter.qth_survival_times": {
  "data": {
   "shadows": "lifelines.utils.qth_survival_times"
  },
  "type": "import"
 },
 "lifelines.fitters.coxph_fitter.set_kwargs_drawstyle": {
  "data": {
   "shadows": "lifelines.plotting.set_kwargs_drawstyle"
  },
  "type": "import"
 },
 "lifelines.fitters.coxph_fitter.spsolve": {
  "data": {
   "shadows": "scipy.linalg.solve"
  },
  "type": "import"
 },
 "lifelines.fitters.coxph_fitter.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "lifelines.fitters.coxph_fitter.string_justify": {
  "data": {
   "shadows": "lifelines.utils.string_justify"
  },
  "type": "import"
 },
 "lifelines.fitters.coxph_fitter.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "lifelines.fitters.coxph_fitter.trapz": {
  "data": {
   "shadows": "scipy.integrate.trapz"
  },
  "type": "import"
 },
 "lifelines.fitters.coxph_fitter.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "lifelines.fitters.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "lifelines.fitters.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "lifelines.fitters.egrad": {
  "data": {
   "shadows": "autograd.elementwise_grad"
  },
  "type": "import"
 },
 "lifelines.fitters.exponential_fitter": {
  "data": {},
  "type": "module"
 },
 "lifelines.fitters.exponential_fitter.ExponentialFitter": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "lifelines.fitters.KnownModelParametericUnivariateFitter"
   ]
  },
  "type": "class"
 },
 "lifelines.fitters.exponential_fitter.ExponentialFitter._cumulative_hazard": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "lifelines.fitters.exponential_fitter.ExponentialFitter.percentile": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.exponential_fitter.KnownModelParametericUnivariateFitter": {
  "data": {
   "shadows": "lifelines.fitters.KnownModelParametericUnivariateFitter"
  },
  "type": "import"
 },
 "lifelines.fitters.exponential_fitter.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "lifelines.fitters.flatten": {
  "data": {
   "shadows": "autograd.misc.flatten"
  },
  "type": "import"
 },
 "lifelines.fitters.generalized_gamma_fitter": {
  "data": {},
  "type": "module"
 },
 "lifelines.fitters.generalized_gamma_fitter.CensoringType": {
  "data": {
   "shadows": "lifelines.utils.CensoringType"
  },
  "type": "import"
 },
 "lifelines.fitters.generalized_gamma_fitter.GeneralizedGammaFitter": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "autograd.numpy.array",
    "lifelines.fitters.KnownModelParametericUnivariateFitter"
   ]
  },
  "type": "class"
 },
 "lifelines.fitters.generalized_gamma_fitter.GeneralizedGammaFitter._create_initial_point": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "autograd.numpy.array",
    "autograd.numpy.log",
    "lifelines.utils.CensoringType.is_interval_censoring",
    "lifelines.utils.CensoringType.is_left_censoring",
    "lifelines.utils.CensoringType.is_right_censoring"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.generalized_gamma_fitter.GeneralizedGammaFitter._cumulative_hazard": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "autograd.numpy.log",
    "autograd_gamma.gammainccln",
    "autograd_gamma.gammaincln",
    "lifelines.utils.safe_exp.safe_exp"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.generalized_gamma_fitter.GeneralizedGammaFitter._log_1m_sf": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "autograd.numpy.log",
    "autograd_gamma.gammainccln",
    "autograd_gamma.gammaincln",
    "lifelines.utils.safe_exp.safe_exp"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.generalized_gamma_fitter.GeneralizedGammaFitter._log_hazard": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "autograd.numpy.log",
    "autograd_gamma.gammainccln",
    "autograd_gamma.gammaincln",
    "autograd_gamma.gammaln",
    "lifelines.utils.safe_exp.safe_exp"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.generalized_gamma_fitter.GeneralizedGammaFitter._survival_function": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "autograd.numpy.log",
    "autograd_gamma.gammainc",
    "autograd_gamma.gammaincc",
    "lifelines.utils.safe_exp.safe_exp"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.generalized_gamma_fitter.GeneralizedGammaFitter.percentile": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "autograd.numpy.exp",
    "autograd.numpy.log",
    "scipy.special.gammainccinv",
    "scipy.special.gammaincinv"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.generalized_gamma_fitter.KnownModelParametericUnivariateFitter": {
  "data": {
   "shadows": "lifelines.fitters.KnownModelParametericUnivariateFitter"
  },
  "type": "import"
 },
 "lifelines.fitters.generalized_gamma_fitter.exp": {
  "data": {
   "shadows": "autograd.numpy.exp"
  },
  "type": "import"
 },
 "lifelines.fitters.generalized_gamma_fitter.gammainc": {
  "data": {
   "shadows": "autograd_gamma.gammainc"
  },
  "type": "import"
 },
 "lifelines.fitters.generalized_gamma_fitter.gammaincc": {
  "data": {
   "shadows": "autograd_gamma.gammaincc"
  },
  "type": "import"
 },
 "lifelines.fitters.generalized_gamma_fitter.gammainccinv": {
  "data": {
   "shadows": "scipy.special.gammainccinv"
  },
  "type": "import"
 },
 "lifelines.fitters.generalized_gamma_fitter.gammainccln": {
  "data": {
   "shadows": "autograd_gamma.gammainccln"
  },
  "type": "import"
 },
 "lifelines.fitters.generalized_gamma_fitter.gammaincinv": {
  "data": {
   "shadows": "scipy.special.gammaincinv"
  },
  "type": "import"
 },
 "lifelines.fitters.generalized_gamma_fitter.gammaincln": {
  "data": {
   "shadows": "autograd_gamma.gammaincln"
  },
  "type": "import"
 },
 "lifelines.fitters.generalized_gamma_fitter.gammaln": {
  "data": {
   "shadows": "autograd_gamma.gammaln"
  },
  "type": "import"
 },
 "lifelines.fitters.generalized_gamma_fitter.log": {
  "data": {
   "shadows": "autograd.numpy.log"
  },
  "type": "import"
 },
 "lifelines.fitters.generalized_gamma_fitter.np": {
  "data": {
   "shadows": "autograd.numpy"
  },
  "type": "import"
 },
 "lifelines.fitters.generalized_gamma_fitter.safe_exp": {
  "data": {
   "shadows": "lifelines.utils.safe_exp.safe_exp"
  },
  "type": "import"
 },
 "lifelines.fitters.generalized_gamma_regression_fitter": {
  "data": {},
  "type": "module"
 },
 "lifelines.fitters.generalized_gamma_regression_fitter.CensoringType": {
  "data": {
   "shadows": "lifelines.utils.CensoringType"
  },
  "type": "import"
 },
 "lifelines.fitters.generalized_gamma_regression_fitter.GeneralizedGammaRegressionFitter": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "lifelines.fitters.ParametricRegressionFitter"
   ]
  },
  "type": "class"
 },
 "lifelines.fitters.generalized_gamma_regression_fitter.GeneralizedGammaRegressionFitter._create_initial_point": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "autograd.numpy.array",
    "len",
    "lifelines.fitters.generalized_gamma_regression_fitter.lifelines",
    "lifelines.fitters.generalized_gamma_regression_fitter.warnings",
    "lifelines.utils.CensoringType.is_interval_censoring",
    "lifelines.utils.CensoringType.is_left_censoring",
    "lifelines.utils.CensoringType.is_right_censoring"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.generalized_gamma_regression_fitter.GeneralizedGammaRegressionFitter._cumulative_hazard": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "autograd.numpy.abs",
    "autograd.numpy.clip",
    "autograd.numpy.inf",
    "autograd.numpy.log",
    "autograd.numpy.where",
    "autograd_gamma.gammainccln",
    "autograd_gamma.gammaincln",
    "lifelines.utils.safe_exp.safe_exp"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.generalized_gamma_regression_fitter.GeneralizedGammaRegressionFitter._log_hazard": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "autograd.numpy.abs",
    "autograd.numpy.clip",
    "autograd.numpy.inf",
    "autograd.numpy.log",
    "autograd.numpy.where",
    "autograd_gamma.gammainccln",
    "autograd_gamma.gammaincln",
    "autograd_gamma.gammaln",
    "lifelines.utils.safe_exp.safe_exp"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.generalized_gamma_regression_fitter.GeneralizedGammaRegressionFitter._survival_function": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "autograd.numpy.abs",
    "autograd.numpy.clip",
    "autograd.numpy.log",
    "autograd.numpy.where",
    "autograd_gamma.gammainc",
    "autograd_gamma.gammaincc",
    "lifelines.utils.safe_exp.safe_exp"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.generalized_gamma_regression_fitter.ParametricRegressionFitter": {
  "data": {
   "shadows": "lifelines.fitters.ParametricRegressionFitter"
  },
  "type": "import"
 },
 "lifelines.fitters.generalized_gamma_regression_fitter.abs": {
  "data": {
   "shadows": "autograd.numpy.abs"
  },
  "type": "import"
 },
 "lifelines.fitters.generalized_gamma_regression_fitter.gammainc": {
  "data": {
   "shadows": "autograd_gamma.gammainc"
  },
  "type": "import"
 },
 "lifelines.fitters.generalized_gamma_regression_fitter.gammaincc": {
  "data": {
   "shadows": "autograd_gamma.gammaincc"
  },
  "type": "import"
 },
 "lifelines.fitters.generalized_gamma_regression_fitter.gammainccln": {
  "data": {
   "shadows": "autograd_gamma.gammainccln"
  },
  "type": "import"
 },
 "lifelines.fitters.generalized_gamma_regression_fitter.gammaincinv": {
  "data": {
   "shadows": "scipy.special.gammaincinv"
  },
  "type": "import"
 },
 "lifelines.fitters.generalized_gamma_regression_fitter.gammaincln": {
  "data": {
   "shadows": "autograd_gamma.gammaincln"
  },
  "type": "import"
 },
 "lifelines.fitters.generalized_gamma_regression_fitter.gammaln": {
  "data": {
   "shadows": "autograd_gamma.gammaln"
  },
  "type": "import"
 },
 "lifelines.fitters.generalized_gamma_regression_fitter.lifelines": {
  "data": {
   "shadows": "lifelines"
  },
  "type": "import"
 },
 "lifelines.fitters.generalized_gamma_regression_fitter.log": {
  "data": {
   "shadows": "autograd.numpy.log"
  },
  "type": "import"
 },
 "lifelines.fitters.generalized_gamma_regression_fitter.np": {
  "data": {
   "shadows": "autograd.numpy"
  },
  "type": "import"
 },
 "lifelines.fitters.generalized_gamma_regression_fitter.safe_exp": {
  "data": {
   "shadows": "lifelines.utils.safe_exp.safe_exp"
  },
  "type": "import"
 },
 "lifelines.fitters.generalized_gamma_regression_fitter.utils": {
  "data": {
   "shadows": "lifelines.utils"
  },
  "type": "import"
 },
 "lifelines.fitters.generalized_gamma_regression_fitter.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "lifelines.fitters.grad": {
  "data": {
   "shadows": "autograd.grad"
  },
  "type": "import"
 },
 "lifelines.fitters.hessian": {
  "data": {
   "shadows": "autograd.hessian"
  },
  "type": "import"
 },
 "lifelines.fitters.inv": {
  "data": {
   "shadows": "numpy.linalg.inv"
  },
  "type": "import"
 },
 "lifelines.fitters.kaplan_meier_fitter": {
  "data": {},
  "type": "module"
 },
 "lifelines.fitters.kaplan_meier_fitter.CensoringType": {
  "data": {
   "shadows": "lifelines.utils.CensoringType"
  },
  "type": "import"
 },
 "lifelines.fitters.kaplan_meier_fitter.KaplanMeierFitter": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "lifelines.fitters.UnivariateFitter"
   ]
  },
  "type": "class"
 },
 "lifelines.fitters.kaplan_meier_fitter.KaplanMeierFitter._additive_f": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.seterr"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.kaplan_meier_fitter.KaplanMeierFitter._additive_var": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.seterr"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.kaplan_meier_fitter.KaplanMeierFitter._bounds": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "len",
    "lifelines.utils.inv_normal_cdf",
    "numpy.exp",
    "numpy.log",
    "numpy.sqrt",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.kaplan_meier_fitter.KaplanMeierFitter._check_values": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "lifelines.utils.check_nans_or_infs"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.kaplan_meier_fitter.KaplanMeierFitter._fit": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "float",
    "getattr",
    "int",
    "lifelines.fitters.kaplan_meier_fitter.functools",
    "lifelines.fitters.kaplan_meier_fitter.warnings",
    "lifelines.utils.CensoringType.is_left_censoring",
    "lifelines.utils.StatError",
    "lifelines.utils.StatisticalWarning",
    "lifelines.utils._additive_estimate",
    "lifelines.utils._preprocess_inputs",
    "lifelines.utils.median_survival_times",
    "lifelines.utils.qth_survival_time",
    "numpy.asarray",
    "numpy.exp",
    "numpy.ones_like",
    "pandas.DataFrame",
    "setattr"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.kaplan_meier_fitter.KaplanMeierFitter.cumulative_density_at_times": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "lifelines.utils._to_1d_array",
    "lifelines.utils.coalesce",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.kaplan_meier_fitter.KaplanMeierFitter.fit": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "DeprecationWarning",
    "lifelines.fitters.kaplan_meier_fitter.warnings",
    "lifelines.utils.CensoringType.right_censoring"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.kaplan_meier_fitter.KaplanMeierFitter.fit_left_censoring": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "lifelines.utils.CensoringType.left_censoring"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.kaplan_meier_fitter.KaplanMeierFitter.median_": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "FutureWarning",
    "lifelines.fitters.kaplan_meier_fitter.warnings",
    "property"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.kaplan_meier_fitter.KaplanMeierFitter.median_survival_time_": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.kaplan_meier_fitter.KaplanMeierFitter.plot_cumulative_density": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "lifelines.plotting._plot_estimate"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.kaplan_meier_fitter.KaplanMeierFitter.plot_cumulative_hazard": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.kaplan_meier_fitter.KaplanMeierFitter.plot_hazard": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.kaplan_meier_fitter.KaplanMeierFitter.plot_loglogs": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "lifelines.plotting.plot_loglogs"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.kaplan_meier_fitter.KaplanMeierFitter.plot_survival_function": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "lifelines.plotting._plot_estimate"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.kaplan_meier_fitter.KaplanMeierFitter.survival_function_at_times": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "lifelines.utils._to_1d_array",
    "lifelines.utils.coalesce",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.kaplan_meier_fitter.StatError": {
  "data": {
   "shadows": "lifelines.utils.StatError"
  },
  "type": "import"
 },
 "lifelines.fitters.kaplan_meier_fitter.StatisticalWarning": {
  "data": {
   "shadows": "lifelines.utils.StatisticalWarning"
  },
  "type": "import"
 },
 "lifelines.fitters.kaplan_meier_fitter.UnivariateFitter": {
  "data": {
   "shadows": "lifelines.fitters.UnivariateFitter"
  },
  "type": "import"
 },
 "lifelines.fitters.kaplan_meier_fitter._additive_estimate": {
  "data": {
   "shadows": "lifelines.utils._additive_estimate"
  },
  "type": "import"
 },
 "lifelines.fitters.kaplan_meier_fitter._plot_estimate": {
  "data": {
   "shadows": "lifelines.plotting._plot_estimate"
  },
  "type": "import"
 },
 "lifelines.fitters.kaplan_meier_fitter._preprocess_inputs": {
  "data": {
   "shadows": "lifelines.utils._preprocess_inputs"
  },
  "type": "import"
 },
 "lifelines.fitters.kaplan_meier_fitter._to_1d_array": {
  "data": {
   "shadows": "lifelines.utils._to_1d_array"
  },
  "type": "import"
 },
 "lifelines.fitters.kaplan_meier_fitter.check_nans_or_infs": {
  "data": {
   "shadows": "lifelines.utils.check_nans_or_infs"
  },
  "type": "import"
 },
 "lifelines.fitters.kaplan_meier_fitter.coalesce": {
  "data": {
   "shadows": "lifelines.utils.coalesce"
  },
  "type": "import"
 },
 "lifelines.fitters.kaplan_meier_fitter.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "lifelines.fitters.kaplan_meier_fitter.inv_normal_cdf": {
  "data": {
   "shadows": "lifelines.utils.inv_normal_cdf"
  },
  "type": "import"
 },
 "lifelines.fitters.kaplan_meier_fitter.median_survival_times": {
  "data": {
   "shadows": "lifelines.utils.median_survival_times"
  },
  "type": "import"
 },
 "lifelines.fitters.kaplan_meier_fitter.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "lifelines.fitters.kaplan_meier_fitter.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "lifelines.fitters.kaplan_meier_fitter.plot_loglogs": {
  "data": {
   "shadows": "lifelines.plotting.plot_loglogs"
  },
  "type": "import"
 },
 "lifelines.fitters.kaplan_meier_fitter.qth_survival_time": {
  "data": {
   "shadows": "lifelines.utils.qth_survival_time"
  },
  "type": "import"
 },
 "lifelines.fitters.kaplan_meier_fitter.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "lifelines.fitters.lifelines": {
  "data": {
   "shadows": "lifelines"
  },
  "type": "import"
 },
 "lifelines.fitters.log_logistic_aft_fitter": {
  "data": {},
  "type": "module"
 },
 "lifelines.fitters.log_logistic_aft_fitter.LogLogisticAFTFitter": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "lifelines.fitters.ParametericAFTRegressionFitter"
   ]
  },
  "type": "class"
 },
 "lifelines.fitters.log_logistic_aft_fitter.LogLogisticAFTFitter.__init__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "lifelines.fitters.log_logistic_aft_fitter.LogLogisticAFTFitter",
    "super"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.log_logistic_aft_fitter.LogLogisticAFTFitter._cumulative_hazard": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "autograd.numpy.clip",
    "autograd.numpy.dot",
    "autograd.numpy.exp",
    "autograd.numpy.inf",
    "autograd.numpy.log",
    "autograd.numpy.logaddexp",
    "lifelines.utils.safe_exp.safe_exp"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.log_logistic_aft_fitter.LogLogisticAFTFitter._log_1m_sf": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "autograd.numpy.dot",
    "autograd.numpy.log",
    "autograd.numpy.logaddexp",
    "lifelines.utils.safe_exp.safe_exp"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.log_logistic_aft_fitter.LogLogisticAFTFitter._log_hazard": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "autograd.numpy.dot",
    "autograd.numpy.expm1",
    "autograd.numpy.log",
    "autograd.numpy.logaddexp",
    "lifelines.utils.safe_exp.safe_exp"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.log_logistic_aft_fitter.LogLogisticAFTFitter.predict_expectation": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "autograd.numpy.nan",
    "autograd.numpy.pi",
    "autograd.numpy.sin",
    "autograd.numpy.where",
    "lifelines.utils._get_index",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.log_logistic_aft_fitter.LogLogisticAFTFitter.predict_percentile": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "autograd.numpy.asarray",
    "lifelines.utils._get_index",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.log_logistic_aft_fitter.ParametericAFTRegressionFitter": {
  "data": {
   "shadows": "lifelines.fitters.ParametericAFTRegressionFitter"
  },
  "type": "import"
 },
 "lifelines.fitters.log_logistic_aft_fitter._get_index": {
  "data": {
   "shadows": "lifelines.utils._get_index"
  },
  "type": "import"
 },
 "lifelines.fitters.log_logistic_aft_fitter.coalesce": {
  "data": {
   "shadows": "lifelines.utils.coalesce"
  },
  "type": "import"
 },
 "lifelines.fitters.log_logistic_aft_fitter.np": {
  "data": {
   "shadows": "autograd.numpy"
  },
  "type": "import"
 },
 "lifelines.fitters.log_logistic_aft_fitter.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "lifelines.fitters.log_logistic_aft_fitter.safe_exp": {
  "data": {
   "shadows": "lifelines.utils.safe_exp.safe_exp"
  },
  "type": "import"
 },
 "lifelines.fitters.log_logistic_fitter": {
  "data": {},
  "type": "module"
 },
 "lifelines.fitters.log_logistic_fitter.CensoringType": {
  "data": {
   "shadows": "lifelines.utils.CensoringType"
  },
  "type": "import"
 },
 "lifelines.fitters.log_logistic_fitter.KnownModelParametericUnivariateFitter": {
  "data": {
   "shadows": "lifelines.fitters.KnownModelParametericUnivariateFitter"
  },
  "type": "import"
 },
 "lifelines.fitters.log_logistic_fitter.LogLogisticFitter": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "lifelines.fitters.KnownModelParametericUnivariateFitter"
   ]
  },
  "type": "class"
 },
 "lifelines.fitters.log_logistic_fitter.LogLogisticFitter._create_initial_point": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "autograd.numpy.array",
    "autograd.numpy.median",
    "lifelines.utils.CensoringType.is_interval_censoring",
    "lifelines.utils.CensoringType.is_left_censoring",
    "lifelines.utils.CensoringType.is_right_censoring"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.log_logistic_fitter.LogLogisticFitter._cumulative_hazard": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "autograd.numpy.clip",
    "autograd.numpy.inf",
    "autograd.numpy.log",
    "autograd.numpy.logaddexp"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.log_logistic_fitter.LogLogisticFitter._log_1m_sf": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "autograd.numpy.log",
    "autograd.numpy.logaddexp"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.log_logistic_fitter.LogLogisticFitter.median_": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.log_logistic_fitter.LogLogisticFitter.percentile": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "lifelines.fitters.log_logistic_fitter.np": {
  "data": {
   "shadows": "autograd.numpy"
  },
  "type": "import"
 },
 "lifelines.fitters.log_normal_aft_fitter": {
  "data": {},
  "type": "module"
 },
 "lifelines.fitters.log_normal_aft_fitter.LogNormalAFTFitter": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "lifelines.fitters.ParametericAFTRegressionFitter"
   ]
  },
  "type": "class"
 },
 "lifelines.fitters.log_normal_aft_fitter.LogNormalAFTFitter.__init__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "lifelines.fitters.log_normal_aft_fitter.LogNormalAFTFitter",
    "super"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.log_normal_aft_fitter.LogNormalAFTFitter._cumulative_hazard": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "autograd.numpy.dot",
    "autograd.numpy.log",
    "autograd.scipy.stats.norm.logsf",
    "lifelines.utils.safe_exp.safe_exp"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.log_normal_aft_fitter.LogNormalAFTFitter._log_1m_sf": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "autograd.numpy.dot",
    "autograd.numpy.log",
    "autograd.scipy.stats.norm.logcdf",
    "lifelines.utils.safe_exp.safe_exp"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.log_normal_aft_fitter.LogNormalAFTFitter._log_hazard": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "autograd.numpy.dot",
    "autograd.numpy.log",
    "autograd.scipy.stats.norm.logpdf",
    "autograd.scipy.stats.norm.logsf",
    "lifelines.utils.safe_exp.safe_exp"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.log_normal_aft_fitter.LogNormalAFTFitter.predict_expectation": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "autograd.numpy.exp",
    "lifelines.utils._get_index",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.log_normal_aft_fitter.LogNormalAFTFitter.predict_percentile": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "autograd.numpy.asarray",
    "autograd.numpy.exp",
    "autograd.numpy.log",
    "autograd.numpy.sqrt",
    "autograd.scipy.stats.norm.sf",
    "lifelines.utils._get_index",
    "pandas.DataFrame",
    "scipy.special.erfinv"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.log_normal_aft_fitter.ParametericAFTRegressionFitter": {
  "data": {
   "shadows": "lifelines.fitters.ParametericAFTRegressionFitter"
  },
  "type": "import"
 },
 "lifelines.fitters.log_normal_aft_fitter._get_index": {
  "data": {
   "shadows": "lifelines.utils._get_index"
  },
  "type": "import"
 },
 "lifelines.fitters.log_normal_aft_fitter.erfinv": {
  "data": {
   "shadows": "scipy.special.erfinv"
  },
  "type": "import"
 },
 "lifelines.fitters.log_normal_aft_fitter.norm": {
  "data": {
   "shadows": "autograd.scipy.stats.norm"
  },
  "type": "import"
 },
 "lifelines.fitters.log_normal_aft_fitter.np": {
  "data": {
   "shadows": "autograd.numpy"
  },
  "type": "import"
 },
 "lifelines.fitters.log_normal_aft_fitter.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "lifelines.fitters.log_normal_aft_fitter.safe_exp": {
  "data": {
   "shadows": "lifelines.utils.safe_exp.safe_exp"
  },
  "type": "import"
 },
 "lifelines.fitters.log_normal_fitter": {
  "data": {},
  "type": "module"
 },
 "lifelines.fitters.log_normal_fitter.CensoringType": {
  "data": {
   "shadows": "lifelines.utils.CensoringType"
  },
  "type": "import"
 },
 "lifelines.fitters.log_normal_fitter.KnownModelParametericUnivariateFitter": {
  "data": {
   "shadows": "lifelines.fitters.KnownModelParametericUnivariateFitter"
  },
  "type": "import"
 },
 "lifelines.fitters.log_normal_fitter.LogNormalFitter": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "lifelines.fitters.KnownModelParametericUnivariateFitter"
   ]
  },
  "type": "class"
 },
 "lifelines.fitters.log_normal_fitter.LogNormalFitter._create_initial_point": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "autograd.numpy.array",
    "autograd.numpy.log",
    "autograd.numpy.median",
    "lifelines.utils.CensoringType.is_interval_censoring",
    "lifelines.utils.CensoringType.is_left_censoring",
    "lifelines.utils.CensoringType.is_right_censoring"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.log_normal_fitter.LogNormalFitter._cumulative_hazard": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "autograd.numpy.log",
    "autograd.scipy.stats.norm.logsf"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.log_normal_fitter.LogNormalFitter._log_1m_sf": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "autograd.numpy.log",
    "autograd.scipy.stats.norm.logcdf"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.log_normal_fitter.LogNormalFitter._log_hazard": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "autograd.numpy.log",
    "autograd.scipy.stats.norm.logpdf",
    "autograd.scipy.stats.norm.logsf"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.log_normal_fitter.LogNormalFitter.median_": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "autograd.numpy.exp",
    "property"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.log_normal_fitter.LogNormalFitter.percentile": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "autograd.numpy.exp",
    "autograd.numpy.sqrt",
    "scipy.special.erfinv"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.log_normal_fitter.erfinv": {
  "data": {
   "shadows": "scipy.special.erfinv"
  },
  "type": "import"
 },
 "lifelines.fitters.log_normal_fitter.norm": {
  "data": {
   "shadows": "autograd.scipy.stats.norm"
  },
  "type": "import"
 },
 "lifelines.fitters.log_normal_fitter.np": {
  "data": {
   "shadows": "autograd.numpy"
  },
  "type": "import"
 },
 "lifelines.fitters.make_jvp_reversemode": {
  "data": {
   "shadows": "autograd.differential_operators.make_jvp_reversemode"
  },
  "type": "import"
 },
 "lifelines.fitters.minimize": {
  "data": {
   "shadows": "scipy.optimize.minimize"
  },
  "type": "import"
 },
 "lifelines.fitters.nelson_aalen_fitter": {
  "data": {},
  "type": "module"
 },
 "lifelines.fitters.nelson_aalen_fitter.CensoringType": {
  "data": {
   "shadows": "lifelines.utils.CensoringType"
  },
  "type": "import"
 },
 "lifelines.fitters.nelson_aalen_fitter.NelsonAalenFitter": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "lifelines.fitters.UnivariateFitter"
   ]
  },
  "type": "class"
 },
 "lifelines.fitters.nelson_aalen_fitter.NelsonAalenFitter.__init__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "ValueError",
    "lifelines.fitters.nelson_aalen_fitter.NelsonAalenFitter",
    "super"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.nelson_aalen_fitter.NelsonAalenFitter._additive_f_discrete": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.nelson_aalen_fitter.NelsonAalenFitter._additive_f_smooth": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.cumsum",
    "numpy.max",
    "numpy.where",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.nelson_aalen_fitter.NelsonAalenFitter._bounds": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "len",
    "lifelines.utils.inv_normal_cdf",
    "numpy.exp",
    "numpy.sqrt",
    "numpy.where",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.nelson_aalen_fitter.NelsonAalenFitter._variance_f_discrete": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "lifelines.fitters.nelson_aalen_fitter.NelsonAalenFitter._variance_f_smooth": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.cumsum",
    "numpy.max",
    "numpy.where",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.nelson_aalen_fitter.NelsonAalenFitter.conditional_time_to_event_": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "NotImplementedError",
    "property"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.nelson_aalen_fitter.NelsonAalenFitter.fit": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "int",
    "lifelines.fitters.nelson_aalen_fitter.warnings",
    "lifelines.utils.CensoringType.right_censoring",
    "lifelines.utils.StatisticalWarning",
    "lifelines.utils._additive_estimate",
    "lifelines.utils._preprocess_inputs",
    "lifelines.utils.check_nans_or_infs",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.nelson_aalen_fitter.NelsonAalenFitter.percentile": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.nelson_aalen_fitter.NelsonAalenFitter.plot_hazard": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "ValueError",
    "lifelines.plotting._plot_estimate"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.nelson_aalen_fitter.NelsonAalenFitter.smoothed_hazard_": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "lifelines.utils.epanechnikov_kernel",
    "numpy.dot",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.nelson_aalen_fitter.NelsonAalenFitter.smoothed_hazard_confidence_intervals_": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "lifelines.utils.epanechnikov_kernel",
    "lifelines.utils.inv_normal_cdf",
    "numpy.dot",
    "numpy.exp",
    "numpy.sqrt",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.nelson_aalen_fitter.StatisticalWarning": {
  "data": {
   "shadows": "lifelines.utils.StatisticalWarning"
  },
  "type": "import"
 },
 "lifelines.fitters.nelson_aalen_fitter.UnivariateFitter": {
  "data": {
   "shadows": "lifelines.fitters.UnivariateFitter"
  },
  "type": "import"
 },
 "lifelines.fitters.nelson_aalen_fitter._additive_estimate": {
  "data": {
   "shadows": "lifelines.utils._additive_estimate"
  },
  "type": "import"
 },
 "lifelines.fitters.nelson_aalen_fitter._plot_estimate": {
  "data": {
   "shadows": "lifelines.plotting._plot_estimate"
  },
  "type": "import"
 },
 "lifelines.fitters.nelson_aalen_fitter._preprocess_inputs": {
  "data": {
   "shadows": "lifelines.utils._preprocess_inputs"
  },
  "type": "import"
 },
 "lifelines.fitters.nelson_aalen_fitter.check_nans_or_infs": {
  "data": {
   "shadows": "lifelines.utils.check_nans_or_infs"
  },
  "type": "import"
 },
 "lifelines.fitters.nelson_aalen_fitter.epanechnikov_kernel": {
  "data": {
   "shadows": "lifelines.utils.epanechnikov_kernel"
  },
  "type": "import"
 },
 "lifelines.fitters.nelson_aalen_fitter.inv_normal_cdf": {
  "data": {
   "shadows": "lifelines.utils.inv_normal_cdf"
  },
  "type": "import"
 },
 "lifelines.fitters.nelson_aalen_fitter.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "lifelines.fitters.nelson_aalen_fitter.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "lifelines.fitters.nelson_aalen_fitter.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "lifelines.fitters.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "lifelines.fitters.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "lifelines.fitters.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "lifelines.fitters.piecewise_exponential_fitter": {
  "data": {},
  "type": "module"
 },
 "lifelines.fitters.piecewise_exponential_fitter.KnownModelParametericUnivariateFitter": {
  "data": {
   "shadows": "lifelines.fitters.KnownModelParametericUnivariateFitter"
  },
  "type": "import"
 },
 "lifelines.fitters.piecewise_exponential_fitter.PiecewiseExponentialFitter": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "lifelines.fitters.KnownModelParametericUnivariateFitter"
   ]
  },
  "type": "class"
 },
 "lifelines.fitters.piecewise_exponential_fitter.PiecewiseExponentialFitter.__init__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "ValueError",
    "autograd.numpy.append",
    "autograd.numpy.inf",
    "autograd.numpy.sort",
    "len",
    "lifelines.fitters.piecewise_exponential_fitter.PiecewiseExponentialFitter",
    "list",
    "max",
    "min",
    "range",
    "super"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.piecewise_exponential_fitter.PiecewiseExponentialFitter._cumulative_hazard": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "autograd.numpy.diff",
    "autograd.numpy.dot",
    "autograd.numpy.hstack",
    "autograd.numpy.minimum",
    "autograd.numpy.tile",
    "tuple"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.piecewise_exponential_fitter.np": {
  "data": {
   "shadows": "autograd.numpy"
  },
  "type": "import"
 },
 "lifelines.fitters.piecewise_exponential_regression_fitter": {
  "data": {},
  "type": "module"
 },
 "lifelines.fitters.piecewise_exponential_regression_fitter.CensoringType": {
  "data": {
   "shadows": "lifelines.utils.CensoringType"
  },
  "type": "import"
 },
 "lifelines.fitters.piecewise_exponential_regression_fitter.ParametricRegressionFitter": {
  "data": {
   "shadows": "lifelines.fitters.ParametricRegressionFitter"
  },
  "type": "import"
 },
 "lifelines.fitters.piecewise_exponential_regression_fitter.PiecewiseExponentialRegressionFitter": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "lifelines.fitters.ParametricRegressionFitter"
   ]
  },
  "type": "class"
 },
 "lifelines.fitters.piecewise_exponential_regression_fitter.PiecewiseExponentialRegressionFitter.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "autograd.numpy.append",
    "autograd.numpy.inf",
    "autograd.numpy.sort",
    "len",
    "lifelines.fitters.piecewise_exponential_regression_fitter.PiecewiseExponentialRegressionFitter",
    "range",
    "super"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.piecewise_exponential_regression_fitter.PiecewiseExponentialRegressionFitter._add_penalty": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "autograd.numpy.stack",
    "range"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.piecewise_exponential_regression_fitter.PiecewiseExponentialRegressionFitter._cumulative_hazard": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "autograd.numpy.array",
    "autograd.numpy.diff",
    "autograd.numpy.dot",
    "autograd.numpy.hstack",
    "autograd.numpy.minimum",
    "autograd.numpy.tile",
    "lifelines.utils.safe_exp.safe_exp",
    "tuple"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.piecewise_exponential_regression_fitter.PiecewiseExponentialRegressionFitter._ll_null": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "NotImplementedError",
    "autograd.numpy.zeros",
    "hasattr",
    "len",
    "lifelines.utils.CensoringType.is_interval_censoring",
    "lifelines.utils.CensoringType.is_left_censoring",
    "lifelines.utils.CensoringType.is_right_censoring",
    "pandas.DataFrame",
    "property"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.piecewise_exponential_regression_fitter.PiecewiseExponentialRegressionFitter._log_hazard": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "autograd.numpy.clip",
    "autograd.numpy.inf",
    "autograd.numpy.log"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.piecewise_exponential_regression_fitter.PiecewiseExponentialRegressionFitter._prep_inputs_for_prediction_and_return_parameters": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "autograd.numpy.array",
    "autograd.numpy.dot",
    "autograd.numpy.exp",
    "isinstance",
    "pandas.DataFrame",
    "range"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.piecewise_exponential_regression_fitter.PiecewiseExponentialRegressionFitter.predict_cumulative_hazard": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "NotImplementedError",
    "autograd.numpy.atleast_1d",
    "autograd.numpy.diff",
    "autograd.numpy.dot",
    "autograd.numpy.hstack",
    "autograd.numpy.minimum",
    "autograd.numpy.tile",
    "autograd.numpy.unique",
    "float",
    "isinstance",
    "lifelines.utils._get_index",
    "lifelines.utils.coalesce",
    "pandas.DataFrame",
    "pandas.Series",
    "tuple"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.piecewise_exponential_regression_fitter._get_index": {
  "data": {
   "shadows": "lifelines.utils._get_index"
  },
  "type": "import"
 },
 "lifelines.fitters.piecewise_exponential_regression_fitter.coalesce": {
  "data": {
   "shadows": "lifelines.utils.coalesce"
  },
  "type": "import"
 },
 "lifelines.fitters.piecewise_exponential_regression_fitter.np": {
  "data": {
   "shadows": "autograd.numpy"
  },
  "type": "import"
 },
 "lifelines.fitters.piecewise_exponential_regression_fitter.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "lifelines.fitters.piecewise_exponential_regression_fitter.safe_exp": {
  "data": {
   "shadows": "lifelines.utils.safe_exp.safe_exp"
  },
  "type": "import"
 },
 "lifelines.fitters.pinv": {
  "data": {
   "shadows": "numpy.linalg.pinv"
  },
  "type": "import"
 },
 "lifelines.fitters.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "lifelines.fitters.set_kwargs_drawstyle": {
  "data": {
   "shadows": "lifelines.plotting.set_kwargs_drawstyle"
  },
  "type": "import"
 },
 "lifelines.fitters.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "lifelines.fitters.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "lifelines.fitters.trapz": {
  "data": {
   "shadows": "scipy.integrate.trapz"
  },
  "type": "import"
 },
 "lifelines.fitters.utils": {
  "data": {
   "shadows": "lifelines.utils"
  },
  "type": "import"
 },
 "lifelines.fitters.value_and_grad": {
  "data": {
   "shadows": "autograd.value_and_grad"
  },
  "type": "import"
 },
 "lifelines.fitters.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "lifelines.fitters.weibull_aft_fitter": {
  "data": {},
  "type": "module"
 },
 "lifelines.fitters.weibull_aft_fitter.ParametericAFTRegressionFitter": {
  "data": {
   "shadows": "lifelines.fitters.ParametericAFTRegressionFitter"
  },
  "type": "import"
 },
 "lifelines.fitters.weibull_aft_fitter.WeibullAFTFitter": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "lifelines.fitters.ParametericAFTRegressionFitter"
   ]
  },
  "type": "class"
 },
 "lifelines.fitters.weibull_aft_fitter.WeibullAFTFitter.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "lifelines.fitters.weibull_aft_fitter.WeibullAFTFitter",
    "super"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.weibull_aft_fitter.WeibullAFTFitter._cumulative_hazard": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "autograd.numpy.clip",
    "autograd.numpy.inf",
    "autograd.numpy.log",
    "lifelines.utils.safe_exp.safe_exp"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.weibull_aft_fitter.WeibullAFTFitter._log_hazard": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "autograd.numpy.expm1",
    "autograd.numpy.log"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.weibull_aft_fitter.WeibullAFTFitter.predict_expectation": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "lifelines.utils._get_index",
    "pandas.DataFrame",
    "scipy.special.gamma"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.weibull_aft_fitter.WeibullAFTFitter.predict_percentile": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "autograd.numpy.log",
    "autograd.numpy.power",
    "autograd.numpy.zeros",
    "lifelines.utils._get_index",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.weibull_aft_fitter._get_index": {
  "data": {
   "shadows": "lifelines.utils._get_index"
  },
  "type": "import"
 },
 "lifelines.fitters.weibull_aft_fitter.gamma": {
  "data": {
   "shadows": "scipy.special.gamma"
  },
  "type": "import"
 },
 "lifelines.fitters.weibull_aft_fitter.np": {
  "data": {
   "shadows": "autograd.numpy"
  },
  "type": "import"
 },
 "lifelines.fitters.weibull_aft_fitter.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "lifelines.fitters.weibull_aft_fitter.safe_exp": {
  "data": {
   "shadows": "lifelines.utils.safe_exp.safe_exp"
  },
  "type": "import"
 },
 "lifelines.fitters.weibull_fitter": {
  "data": {},
  "type": "module"
 },
 "lifelines.fitters.weibull_fitter.KnownModelParametericUnivariateFitter": {
  "data": {
   "shadows": "lifelines.fitters.KnownModelParametericUnivariateFitter"
  },
  "type": "import"
 },
 "lifelines.fitters.weibull_fitter.WeibullFitter": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "lifelines.fitters.KnownModelParametericUnivariateFitter"
   ]
  },
  "type": "class"
 },
 "lifelines.fitters.weibull_fitter.WeibullFitter._create_initial_point": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "autograd.numpy.array",
    "lifelines.utils.coalesce"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.weibull_fitter.WeibullFitter._cumulative_hazard": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "autograd.numpy.clip",
    "autograd.numpy.inf",
    "autograd.numpy.log",
    "lifelines.utils.safe_exp.safe_exp"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.weibull_fitter.WeibullFitter.percentile": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "autograd.numpy.log"
   ]
  },
  "type": "function"
 },
 "lifelines.fitters.weibull_fitter.np": {
  "data": {
   "shadows": "autograd.numpy"
  },
  "type": "import"
 },
 "lifelines.fitters.weibull_fitter.safe_exp": {
  "data": {
   "shadows": "lifelines.utils.safe_exp.safe_exp"
  },
  "type": "import"
 },
 "lifelines.fitters.weibull_fitter.utils": {
  "data": {
   "shadows": "lifelines.utils"
  },
  "type": "import"
 },
 "lifelines.fitters.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "lifelines.generate_datasets": {
  "data": {
   "symbols_in_volume": [
    "lifelines.generate_datasets.constant_",
    "lifelines.generate_datasets.exp_comp_",
    "lifelines.generate_datasets.inverseSq_",
    "lifelines.generate_datasets.log_",
    "lifelines.generate_datasets.periodic_",
    "numpy.random"
   ]
  },
  "type": "module"
 },
 "lifelines.generate_datasets.FUNCS": {
  "data": {
   "lineno": 127
  },
  "type": "constant"
 },
 "lifelines.generate_datasets.coeff_func": {
  "data": {
   "lineno": 79
  },
  "type": "class"
 },
 "lifelines.generate_datasets.coeff_func.__call__": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "__repr__"
   ]
  },
  "type": "function"
 },
 "lifelines.generate_datasets.coeff_func.__call__.__repr__": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "lifelines.generate_datasets.coeff_func.__init__": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "lifelines.generate_datasets.constant_": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "lifelines.generate_datasets.coeff_func"
   ]
  },
  "type": "function"
 },
 "lifelines.generate_datasets.constant_coefficients": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "lifelines.generate_datasets.random",
    "time_varying_coefficients"
   ]
  },
  "type": "function"
 },
 "lifelines.generate_datasets.construct_survival_curves": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "lifelines.generate_datasets.cumulative_integral",
    "numpy.exp",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.generate_datasets.cumtrapz": {
  "data": {
   "shadows": "scipy.integrate.cumtrapz"
  },
  "type": "import"
 },
 "lifelines.generate_datasets.cumulative_integral": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "scipy.integrate.cumtrapz"
   ]
  },
  "type": "function"
 },
 "lifelines.generate_datasets.exp_comp_": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "lifelines.generate_datasets.coeff_func",
    "numpy.exp",
    "numpy.maximum"
   ]
  },
  "type": "function"
 },
 "lifelines.generate_datasets.exponential_survival_data": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "bool",
    "numpy.exp",
    "numpy.log",
    "numpy.minimum",
    "numpy.ones",
    "scipy.optimize.newton",
    "scipy.stats.expon.rvs",
    "scipy.stats.uniform.rvs"
   ]
  },
  "type": "function"
 },
 "lifelines.generate_datasets.exponential_survival_data.pF": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "lifelines.generate_datasets.generate_covariates": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "lifelines.generate_datasets.random",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "lifelines.generate_datasets.generate_hazard_rates": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "Exception",
    "lifelines.generate_datasets.constant_coefficients",
    "lifelines.generate_datasets.generate_covariates",
    "lifelines.generate_datasets.time_varying_coefficients",
    "numpy.dot",
    "numpy.exp",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.generate_datasets.generate_observational_matrix": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "cumulative_integral",
    "lifelines.generate_datasets.generate_hazard_rates",
    "lifelines.generate_datasets.generate_random_lifetimes",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.generate_datasets.generate_random_lifetimes": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "bool",
    "cumulative_integral",
    "isinstance",
    "lifelines.generate_datasets.random",
    "numpy.empty",
    "numpy.inf",
    "numpy.less_equal",
    "numpy.log",
    "numpy.minimum",
    "range"
   ]
  },
  "type": "function"
 },
 "lifelines.generate_datasets.inverseSq_": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "lifelines.generate_datasets.coeff_func"
   ]
  },
  "type": "function"
 },
 "lifelines.generate_datasets.log_": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "lifelines.generate_datasets.coeff_func",
    "numpy.log",
    "numpy.maximum"
   ]
  },
  "type": "function"
 },
 "lifelines.generate_datasets.newton": {
  "data": {
   "shadows": "scipy.optimize.newton"
  },
  "type": "import"
 },
 "lifelines.generate_datasets.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "lifelines.generate_datasets.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "lifelines.generate_datasets.periodic_": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "lifelines.generate_datasets.coeff_func",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "lifelines.generate_datasets.piecewise_exponential_survival_data": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "len",
    "lifelines.generate_datasets.random",
    "numpy.append",
    "numpy.diff",
    "numpy.empty",
    "numpy.log",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "lifelines.generate_datasets.random": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "lifelines.generate_datasets.right_censor_lifetimes": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "lifelines.generate_datasets.random",
    "numpy.minimum"
   ]
  },
  "type": "function"
 },
 "lifelines.generate_datasets.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "lifelines.generate_datasets.time_varying_coefficients": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "IndexError",
    "f",
    "f.__doc__",
    "len",
    "lifelines.generate_datasets.FUNCS",
    "lifelines.generate_datasets.constant_",
    "lifelines.generate_datasets.random",
    "numpy.arange",
    "numpy.zeros",
    "pandas.DataFrame",
    "randgen",
    "range"
   ]
  },
  "type": "function"
 },
 "lifelines.metrics": {
  "data": {},
  "type": "module"
 },
 "lifelines.metrics.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "lifelines.metrics.concordance_index": {
  "data": {
   "shadows": "lifelines.utils.concordance_index"
  },
  "type": "import"
 },
 "lifelines.metrics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "lifelines.metrics.uncensored_l1_log_loss": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "bool",
    "numpy.abs",
    "numpy.log",
    "numpy.ones_like"
   ]
  },
  "type": "function"
 },
 "lifelines.metrics.uncensored_l2_log_loss": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "bool",
    "numpy.log",
    "numpy.ones_like",
    "numpy.power"
   ]
  },
  "type": "function"
 },
 "lifelines.plotting": {
  "data": {},
  "type": "module"
 },
 "lifelines.plotting.CensoringType": {
  "data": {
   "shadows": "lifelines.utils.CensoringType"
  },
  "type": "import"
 },
 "lifelines.plotting.KaplanMeierFitter": {
  "data": {
   "shadows": "lifelines.KaplanMeierFitter"
  },
  "type": "import"
 },
 "lifelines.plotting.KnownModelParametericUnivariateFitter": {
  "data": {
   "shadows": "lifelines.fitters.KnownModelParametericUnivariateFitter"
  },
  "type": "import"
 },
 "lifelines.plotting.PlotEstimateConfig": {
  "data": {
   "lineno": 567
  },
  "type": "class"
 },
 "lifelines.plotting.PlotEstimateConfig.__init__": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "lifelines.plotting.set_kwargs_color",
    "lifelines.plotting.set_kwargs_drawstyle",
    "lifelines.plotting.set_kwargs_label",
    "lifelines.utils.coalesce",
    "matplotlib.pyplot.gca",
    "str"
   ]
  },
  "type": "function"
 },
 "lifelines.plotting.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "lifelines.plotting._plot_estimate": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "PlotEstimateConfig",
    "dataframe_slicer",
    "float",
    "lifelines.plotting.add_at_risk_counts",
    "lifelines.plotting.create_dataframe_slicer"
   ]
  },
  "type": "function"
 },
 "lifelines.plotting.add_at_risk_counts": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "len",
    "lifelines.plotting.is_latex_enabled",
    "lifelines.plotting.move_spines",
    "lifelines.plotting.remove_spines",
    "lifelines.plotting.remove_ticks",
    "matplotlib.pyplot.gca",
    "matplotlib.pyplot.gcf",
    "matplotlib.pyplot.tight_layout",
    "matplotlib.pyplot.twiny",
    "max",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "lifelines.plotting.cdf_plot": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "NotImplementedError",
    "lifelines.KaplanMeierFitter",
    "lifelines.plotting.create_scipy_stats_model_from_lifelines_model",
    "lifelines.plotting.get_distribution_name_of_lifelines_model",
    "lifelines.utils.CensoringType.is_interval_censoring",
    "lifelines.utils.CensoringType.is_left_censoring",
    "lifelines.utils.CensoringType.is_right_censoring",
    "matplotlib.pyplot.gca"
   ]
  },
  "type": "function"
 },
 "lifelines.plotting.coalesce": {
  "data": {
   "shadows": "lifelines.utils.coalesce"
  },
  "type": "import"
 },
 "lifelines.plotting.create_dataframe_slicer": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "lifelines.utils.coalesce",
    "slice"
   ]
  },
  "type": "function"
 },
 "lifelines.plotting.create_scipy_stats_model_from_lifelines_model": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "getattr",
    "isinstance",
    "lifelines.fitters.KnownModelParametericUnivariateFitter",
    "lifelines.plotting.get_distribution_name_of_lifelines_model",
    "numpy.exp",
    "scipy.stats"
   ]
  },
  "type": "function"
 },
 "lifelines.plotting.get_distribution_name_of_lifelines_model": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "lifelines.plotting.is_latex_enabled": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "matplotlib.rcParams"
   ]
  },
  "type": "function"
 },
 "lifelines.plotting.move_spines": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "lifelines.plotting.mpl": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "lifelines.plotting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "lifelines.plotting.plot_lifetimes": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "bool",
    "lifelines.plotting.warnings",
    "matplotlib.pyplot.gca",
    "numpy.argsort",
    "numpy.ones",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "lifelines.plotting.plot_loglogs": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "ValueError",
    "dataframe_slicer",
    "float",
    "lifelines.plotting.create_dataframe_slicer",
    "lifelines.plotting.set_kwargs_color",
    "lifelines.plotting.set_kwargs_drawstyle",
    "loglog",
    "matplotlib.pyplot.gca"
   ]
  },
  "type": "function"
 },
 "lifelines.plotting.plot_loglogs.loglog": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "lifelines.plotting.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "lifelines.plotting.qq_plot": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "NotImplementedError",
    "lifelines.KaplanMeierFitter",
    "lifelines.plotting.create_scipy_stats_model_from_lifelines_model",
    "lifelines.plotting.get_distribution_name_of_lifelines_model",
    "lifelines.utils.CensoringType.is_interval_censoring",
    "lifelines.utils.CensoringType.is_left_censoring",
    "lifelines.utils.CensoringType.is_right_censoring",
    "lifelines.utils.qth_survival_times",
    "matplotlib.pyplot.gca",
    "numpy.inf",
    "numpy.nan",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "lifelines.plotting.qth_survival_times": {
  "data": {
   "shadows": "lifelines.utils.qth_survival_times"
  },
  "type": "import"
 },
 "lifelines.plotting.remove_spines": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "lifelines.plotting.remove_ticks": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "lifelines.plotting.set_kwargs_color": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "lifelines.utils.coalesce"
   ]
  },
  "type": "function"
 },
 "lifelines.plotting.set_kwargs_drawstyle": {
  "data": {
   "lineno": 400
  },
  "type": "function"
 },
 "lifelines.plotting.set_kwargs_label": {
  "data": {
   "lineno": 404
  },
  "type": "function"
 },
 "lifelines.plotting.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "lifelines.plotting.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "lifelines.statistics": {
  "data": {},
  "type": "module"
 },
 "lifelines.statistics.KaplanMeierFitter": {
  "data": {
   "shadows": "lifelines.KaplanMeierFitter"
  },
  "type": "import"
 },
 "lifelines.statistics.StatisticalResult": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "lifelines.statistics.StatisticalResult.__add__": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "dict",
    "lifelines.statistics.StatisticalResult",
    "list",
    "numpy.r_"
   ]
  },
  "type": "function"
 },
 "lifelines.statistics.StatisticalResult.__init__": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "len",
    "lifelines.utils._to_1d_array",
    "lifelines.utils._to_list",
    "setattr"
   ]
  },
  "type": "function"
 },
 "lifelines.statistics.StatisticalResult.__repr__": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "lifelines.statistics.StatisticalResult._stringify_meta_data": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "justify",
    "len",
    "lifelines.utils.string_justify",
    "max"
   ]
  },
  "type": "function"
 },
 "lifelines.statistics.StatisticalResult._to_string": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "dict",
    "lifelines.utils.format_floats",
    "lifelines.utils.format_p_value",
    "list",
    "numpy.errstate",
    "numpy.log2"
   ]
  },
  "type": "function"
 },
 "lifelines.statistics.StatisticalResult.print_summary": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "lifelines.statistics.StatisticalResult.summary": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "property",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "lifelines.statistics.TimeTransformers": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "lifelines.KaplanMeierFitter",
    "numpy.cumsum",
    "numpy.log"
   ]
  },
  "type": "class"
 },
 "lifelines.statistics.TimeTransformers.get": {
  "data": {
   "lineno": 662
  },
  "type": "function"
 },
 "lifelines.statistics.TimeTransformers.iter": {
  "data": {
   "lineno": 665
  },
  "type": "function"
 },
 "lifelines.statistics.__all__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "lifelines.statistics._to_1d_array": {
  "data": {
   "shadows": "lifelines.utils._to_1d_array"
  },
  "type": "import"
 },
 "lifelines.statistics._to_list": {
  "data": {
   "shadows": "lifelines.utils._to_list"
  },
  "type": "import"
 },
 "lifelines.statistics.chisq_test": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "scipy.stats.chi2.sf"
   ]
  },
  "type": "function"
 },
 "lifelines.statistics.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "lifelines.statistics.format_floats": {
  "data": {
   "shadows": "lifelines.utils.format_floats"
  },
  "type": "import"
 },
 "lifelines.statistics.format_p_value": {
  "data": {
   "shadows": "lifelines.utils.format_p_value"
  },
  "type": "import"
 },
 "lifelines.statistics.group_survival_table_from_events": {
  "data": {
   "shadows": "lifelines.utils.group_survival_table_from_events"
  },
  "type": "import"
 },
 "lifelines.statistics.interpolate_at_times_and_return_pandas": {
  "data": {
   "shadows": "lifelines.utils.interpolate_at_times_and_return_pandas"
  },
  "type": "import"
 },
 "lifelines.statistics.logrank_test": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "int",
    "multivariate_logrank_test",
    "numpy.array",
    "numpy.ones",
    "numpy.r_",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "lifelines.statistics.multivariate_logrank_test": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "StatisticalResult",
    "abs",
    "chisq_test",
    "lifelines.utils.group_survival_table_from_events",
    "map",
    "numpy.arange",
    "numpy.asarray",
    "numpy.dot",
    "numpy.inf",
    "numpy.linalg.pinv",
    "numpy.max",
    "numpy.nan",
    "numpy.ones",
    "numpy.sqrt",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "lifelines.statistics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "lifelines.statistics.pairwise_logrank_test": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "StatisticalResult",
    "ValueError",
    "itertools.combinations",
    "lifelines.statistics.logrank_test",
    "map",
    "numpy.arange",
    "numpy.asarray",
    "numpy.max",
    "numpy.ones",
    "numpy.unique",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "lifelines.statistics.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "lifelines.statistics.power_under_cph": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "abs",
    "float",
    "numpy.sqrt",
    "scipy.stats.norm.cdf",
    "z"
   ]
  },
  "type": "function"
 },
 "lifelines.statistics.power_under_cph.z": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "scipy.stats.norm.ppf"
   ]
  },
  "type": "function"
 },
 "lifelines.statistics.proportional_hazard_test": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "callable",
    "compute_statistic",
    "events",
    "events.sum",
    "events.values",
    "isinstance",
    "lifelines.statistics.StatisticalResult",
    "lifelines.statistics.TimeTransformers",
    "lifelines.statistics.chisq_test",
    "lifelines.utils._to_1d_array",
    "list",
    "time_transformer",
    "transform"
   ]
  },
  "type": "function"
 },
 "lifelines.statistics.proportional_hazard_test.compute_statistic": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "numpy.diag"
   ]
  },
  "type": "function"
 },
 "lifelines.statistics.sample_size_necessary_under_cph": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "int",
    "numpy.ceil",
    "z"
   ]
  },
  "type": "function"
 },
 "lifelines.statistics.sample_size_necessary_under_cph.z": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "scipy.stats.norm.ppf"
   ]
  },
  "type": "function"
 },
 "lifelines.statistics.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "lifelines.statistics.string_justify": {
  "data": {
   "shadows": "lifelines.utils.string_justify"
  },
  "type": "import"
 },
 "lifelines.statistics.survival_difference_at_fixed_point_in_time_test": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "StatisticalResult",
    "chisq_test",
    "clog",
    "lifelines.KaplanMeierFitter",
    "lifelines.utils.interpolate_at_times_and_return_pandas",
    "log",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "lifelines.statistics.two_sided_z_test": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "numpy.max",
    "scipy.stats.norm.cdf"
   ]
  },
  "type": "function"
 },
 "lifelines.tests": {
  "data": {},
  "type": "module"
 },
 "lifelines.tests.test_estimation": {
  "data": {
   "symbols_in_volume": [
    "DeprecationWarning",
    "ImportError",
    "lifelines.tests.test_estimation.warnings"
   ]
  },
  "type": "module"
 },
 "lifelines.tests.test_estimation.AalenAdditiveFitter": {
  "data": {
   "shadows": "lifelines.AalenAdditiveFitter"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.AalenJohansenFitter": {
  "data": {
   "shadows": "lifelines.AalenJohansenFitter"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.BaseFitter": {
  "data": {
   "shadows": "lifelines.fitters.BaseFitter"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.BreslowFlemingHarringtonFitter": {
  "data": {
   "shadows": "lifelines.BreslowFlemingHarringtonFitter"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.ConvergenceError": {
  "data": {
   "shadows": "lifelines.utils.ConvergenceError"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.ConvergenceWarning": {
  "data": {
   "shadows": "lifelines.utils.ConvergenceWarning"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.CoxPHFitter": {
  "data": {
   "shadows": "lifelines.CoxPHFitter"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.CoxTimeVaryingFitter": {
  "data": {
   "shadows": "lifelines.CoxTimeVaryingFitter"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.CustomRegressionModelTesting": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "lifelines.fitters.ParametricRegressionFitter"
   ]
  },
  "type": "class"
 },
 "lifelines.tests.test_estimation.CustomRegressionModelTesting.__init__": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "lifelines.datasets.load_rossi",
    "lifelines.tests.test_estimation.CustomRegressionModelTesting",
    "super"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.CustomRegressionModelTesting._cumulative_hazard": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "autograd.numpy.dot",
    "autograd.numpy.exp",
    "autograd.numpy.log",
    "autograd.scipy.special.expit"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.ExponentialFitter": {
  "data": {
   "shadows": "lifelines.ExponentialFitter"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.GeneralizedGammaFitter": {
  "data": {
   "shadows": "lifelines.GeneralizedGammaFitter"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.GeneralizedGammaRegressionFitter": {
  "data": {
   "shadows": "lifelines.GeneralizedGammaRegressionFitter"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.Iterable": {
  "data": {
   "shadows": "collections.Iterable"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.KaplanMeierFitter": {
  "data": {
   "shadows": "lifelines.KaplanMeierFitter"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.LogLogisticAFTFitter": {
  "data": {
   "shadows": "lifelines.LogLogisticAFTFitter"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.LogLogisticFitter": {
  "data": {
   "shadows": "lifelines.LogLogisticFitter"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.LogNormalAFTFitter": {
  "data": {
   "shadows": "lifelines.LogNormalAFTFitter"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.LogNormalFitter": {
  "data": {
   "shadows": "lifelines.LogNormalFitter"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.NelsonAalenFitter": {
  "data": {
   "shadows": "lifelines.NelsonAalenFitter"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.ParametericUnivariateFitter": {
  "data": {
   "shadows": "lifelines.fitters.ParametericUnivariateFitter"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.ParametricRegressionFitter": {
  "data": {
   "shadows": "lifelines.fitters.ParametricRegressionFitter"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.PiecewiseExponentialFitter": {
  "data": {
   "shadows": "lifelines.PiecewiseExponentialFitter"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.PiecewiseExponentialFitterTesting": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "lifelines.PiecewiseExponentialFitter"
   ]
  },
  "type": "class"
 },
 "lifelines.tests.test_estimation.PiecewiseExponentialFitterTesting.__init__": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.PiecewiseExponentialFitterTesting",
    "super"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.PiecewiseExponentialRegressionFitter": {
  "data": {
   "shadows": "lifelines.PiecewiseExponentialRegressionFitter"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.StatError": {
  "data": {
   "shadows": "lifelines.utils.StatError"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.StatisticalWarning": {
  "data": {
   "shadows": "lifelines.utils.StatisticalWarning"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.TestAFTFitters": {
  "data": {
   "lineno": 1777
  },
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestAFTFitters.models": {
  "data": {
   "lineno": 1778,
   "symbols_in_volume": [
    "lifelines.LogLogisticAFTFitter",
    "lifelines.LogNormalAFTFitter",
    "lifelines.WeibullAFTFitter",
    "lifelines.tests.test_estimation.pytest"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAFTFitters.test_accept_initial_params": {
  "data": {
   "lineno": 1864,
   "symbols_in_volume": [
    "fitter",
    "fitter.fit",
    "lifelines.tests.test_estimation.rossi",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAFTFitters.test_aft_mean_behaviour": {
  "data": {
   "lineno": 1936,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.rossi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAFTFitters.test_aft_median_behaviour": {
  "data": {
   "lineno": 1923,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.rossi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAFTFitters.test_aft_models_can_do_left_censoring": {
  "data": {
   "lineno": 1949,
   "symbols_in_volume": [
    "numpy.maximum",
    "numpy.percentile",
    "numpy.random.randint",
    "numpy.random.weibull",
    "numpy.where",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAFTFitters.test_fit_intercept_can_be_false_and_not_provided": {
  "data": {
   "lineno": 1815,
   "symbols_in_volume": [
    "fitter",
    "fitter.fit_interval_censoring",
    "fitter.fit_left_censoring",
    "fitter.fit_right_censoring",
    "lifelines.WeibullAFTFitter",
    "lifelines.tests.test_estimation.rossi"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAFTFitters.test_fit_intercept_can_be_false_but_provided": {
  "data": {
   "lineno": 1832,
   "symbols_in_volume": [
    "fitter",
    "fitter.fit",
    "lifelines.LogLogisticAFTFitter",
    "lifelines.LogNormalAFTFitter",
    "lifelines.WeibullAFTFitter",
    "lifelines.tests.test_estimation.rossi"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAFTFitters.test_heterogenous_initial_point": {
  "data": {
   "lineno": 1782,
   "symbols_in_volume": [
    "ValueError",
    "lifelines.WeibullAFTFitter",
    "lifelines.tests.test_estimation.pytest",
    "lifelines.tests.test_estimation.rossi",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAFTFitters.test_log_likelihood_is_maximized_for_data_generating_model": {
  "data": {
   "lineno": 1868,
   "symbols_in_volume": [
    "autograd.scipy.stats.norm.rvs",
    "lifelines.LogLogisticAFTFitter",
    "lifelines.LogNormalAFTFitter",
    "lifelines.WeibullAFTFitter",
    "numpy.exp",
    "numpy.log",
    "numpy.random.binomial",
    "pandas.DataFrame",
    "scipy.stats.logistic.rvs",
    "scipy.stats.weibull_min.rvs"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAFTFitters.test_model_ancillary_parameter_works_as_expected": {
  "data": {
   "lineno": 1971,
   "symbols_in_volume": [
    "lifelines.WeibullAFTFitter",
    "lifelines.tests.test_estimation.rossi"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAFTFitters.test_percentile_gives_proper_result_compared_to_survival_function": {
  "data": {
   "lineno": 1792,
   "symbols_in_volume": [
    "abs",
    "lifelines.tests.test_estimation.rossi",
    "lifelines.utils.qth_survival_time",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAFTFitters.test_warning_is_present_if_entry_greater_than_duration": {
  "data": {
   "lineno": 1841,
   "symbols_in_volume": [
    "ValueError",
    "fitter",
    "fitter.fit",
    "lifelines.tests.test_estimation.pytest",
    "lifelines.tests.test_estimation.rossi"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAFTFitters.test_weights_col_and_start_col_is_not_included_in_the_output": {
  "data": {
   "lineno": 1847,
   "symbols_in_volume": [
    "fitter",
    "fitter.fit",
    "fitter.params_.index.get_level_values",
    "lifelines.tests.test_estimation.rossi"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenAdditiveFitter": {
  "data": {
   "lineno": 3888
  },
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestAalenAdditiveFitter.aaf": {
  "data": {
   "lineno": 3889,
   "symbols_in_volume": [
    "lifelines.AalenAdditiveFitter",
    "lifelines.tests.test_estimation.pytest"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenAdditiveFitter.test_aalen_additive_fitter_versus_R": {
  "data": {
   "lineno": 4001,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.rossi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenAdditiveFitter.test_aalen_additive_fitter_versus_R_with_weights": {
  "data": {
   "lineno": 4011,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.pytest",
    "lifelines.tests.test_estimation.regression_dataset",
    "lifelines.utils.StatisticalWarning",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenAdditiveFitter.test_aalen_additive_median_predictions_split_data": {
  "data": {
   "lineno": 3950,
   "symbols_in_volume": [
    "abs",
    "lifelines.AalenAdditiveFitter",
    "lifelines.generate_datasets.generate_hazard_rates",
    "lifelines.generate_datasets.generate_random_lifetimes",
    "list",
    "numpy.inf",
    "numpy.linspace",
    "range"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenAdditiveFitter.test_crossval_for_aalen_add": {
  "data": {
   "lineno": 3981,
   "symbols_in_volume": [
    "lifelines.AalenAdditiveFitter",
    "lifelines.tests.test_estimation.data_pred1",
    "lifelines.tests.test_estimation.data_pred2",
    "lifelines.utils.k_fold_cross_validation",
    "numpy.mean",
    "range"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenAdditiveFitter.test_cumulative_hazards_versus_R": {
  "data": {
   "lineno": 4026,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.regression_dataset",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenAdditiveFitter.test_dataframe_input_with_nonstandard_index": {
  "data": {
   "lineno": 3972,
   "symbols_in_volume": [
    "lifelines.AalenAdditiveFitter",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenAdditiveFitter.test_input_column_order_is_equal_to_output_hazards_order": {
  "data": {
   "lineno": 3915,
   "symbols_in_volume": [
    "lifelines.AalenAdditiveFitter",
    "lifelines.tests.test_estimation.rossi",
    "list"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenAdditiveFitter.test_large_dimensions_for_recursion_error": {
  "data": {
   "lineno": 3941,
   "symbols_in_volume": [
    "lifelines.AalenAdditiveFitter",
    "numpy.random.exponential",
    "numpy.random.randn",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenAdditiveFitter.test_penalizer_reduces_norm_of_hazards": {
  "data": {
   "lineno": 3904,
   "symbols_in_volume": [
    "lifelines.AalenAdditiveFitter",
    "lifelines.tests.test_estimation.rossi",
    "numpy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenAdditiveFitter.test_predict_cumulative_hazard_inputs": {
  "data": {
   "lineno": 3993,
   "symbols_in_volume": [
    "lifelines.AalenAdditiveFitter",
    "lifelines.tests.test_estimation.data_pred1",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenAdditiveFitter.test_slope_tests_against_R": {
  "data": {
   "lineno": 3893,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.regression_dataset",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenAdditiveFitter.test_swapping_order_of_columns_in_a_df_is_okay": {
  "data": {
   "lineno": 3926,
   "symbols_in_volume": [
    "lifelines.AalenAdditiveFitter",
    "lifelines.tests.test_estimation.rossi",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenJohansenFitter": {
  "data": {
   "lineno": 4508
  },
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestAalenJohansenFitter.duration": {
  "data": {
   "lineno": 4509,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.pytest"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenJohansenFitter.event_observed": {
  "data": {
   "lineno": 4513,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.pytest"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenJohansenFitter.fitter": {
  "data": {
   "lineno": 4517,
   "symbols_in_volume": [
    "lifelines.AalenJohansenFitter",
    "lifelines.tests.test_estimation.pytest"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenJohansenFitter.kmfitter": {
  "data": {
   "lineno": 4521,
   "symbols_in_volume": [
    "lifelines.KaplanMeierFitter",
    "lifelines.tests.test_estimation.pytest"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenJohansenFitter.test_aj_less_than_km": {
  "data": {
   "lineno": 4625,
   "symbols_in_volume": [
    "fitter.cumulative_density_",
    "fitter.fit",
    "numpy.all",
    "numpy.array",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenJohansenFitter.test_ci_calculation_against_sas": {
  "data": {
   "lineno": 4648,
   "symbols_in_volume": [
    "fitter.confidence_interval_",
    "fitter.fit",
    "numpy.array",
    "numpy.nan",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenJohansenFitter.test_event_table_is_correct": {
  "data": {
   "lineno": 4550,
   "symbols_in_volume": [
    "fitter.event_table",
    "fitter.fit",
    "pandas.DataFrame.from_records",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenJohansenFitter.test_jitter": {
  "data": {
   "lineno": 4525,
   "symbols_in_volume": [
    "fitter._jitter",
    "numpy.any",
    "numpy.not_equal",
    "numpy.testing.assert_equal",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenJohansenFitter.test_no_competing_risk": {
  "data": {
   "lineno": 4635,
   "symbols_in_volume": [
    "fitter.cumulative_density_",
    "fitter.fit",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenJohansenFitter.test_tied_input_data": {
  "data": {
   "lineno": 4531,
   "symbols_in_volume": [
    "Warning",
    "fitter.event_table.index",
    "fitter.fit",
    "lifelines.tests.test_estimation.pytest",
    "numpy.any",
    "numpy.not_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenJohansenFitter.test_updated_censor_ties": {
  "data": {
   "lineno": 4544,
   "symbols_in_volume": [
    "fitter.event_table.index",
    "fitter.fit",
    "numpy.asarray",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenJohansenFitter.test_updated_input_ties": {
  "data": {
   "lineno": 4538,
   "symbols_in_volume": [
    "fitter.event_table.index",
    "fitter.fit",
    "numpy.asarray",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestAalenJohansenFitter.test_variance_calculation_against_sas": {
  "data": {
   "lineno": 4642,
   "symbols_in_volume": [
    "fitter.fit",
    "fitter.variance_",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestBaseFitter": {
  "data": {
   "lineno": 190
  },
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestBaseFitter.test_repr_without_fitter": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "lifelines.fitters.BaseFitter"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestBreslowFlemingHarringtonFitter": {
  "data": {
   "lineno": 1428
  },
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestBreslowFlemingHarringtonFitter.test_BHF_fit_when_KMF_throws_an_error": {
  "data": {
   "lineno": 1429,
   "symbols_in_volume": [
    "lifelines.BreslowFlemingHarringtonFitter",
    "lifelines.KaplanMeierFitter",
    "lifelines.tests.test_estimation.pytest",
    "lifelines.utils.StatError",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter": {
  "data": {
   "lineno": 2315
  },
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.cph": {
  "data": {
   "lineno": 2316,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.tests.test_estimation.pytest"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_adding_non_integer_weights_is_fine_if_robust_is_on": {
  "data": {
   "lineno": 3434,
   "symbols_in_volume": [
    "len",
    "lifelines.CoxPHFitter",
    "lifelines.tests.test_estimation.pytest",
    "lifelines.tests.test_estimation.rossi",
    "numpy.random.exponential"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_all_okay_with_non_trivial_index_in_dataframe": {
  "data": {
   "lineno": 3805,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.tests.test_estimation.rossi",
    "numpy.random.randint",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_baseline_cumulative_hazard_is_the_same_indp_of_location": {
  "data": {
   "lineno": 3680,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.tests.test_estimation.regression_dataset",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_baseline_hazard_works_with_strata_against_R_output": {
  "data": {
   "lineno": 3610,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.tests.test_estimation.rossi",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_baseline_hazard_works_with_weights_against_R_output": {
  "data": {
   "lineno": 3631,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.tests.test_estimation.rossi",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_baseline_survival_is_the_same_indp_of_location": {
  "data": {
   "lineno": 3667,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.tests.test_estimation.regression_dataset",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_baseline_survival_is_the_same_indp_of_scale": {
  "data": {
   "lineno": 3711,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.tests.test_estimation.regression_dataset",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_batch_efron_computed_by_hand_examples": {
  "data": {
   "lineno": 2738,
   "symbols_in_volume": [
    "bool",
    "lifelines.tests.test_estimation.data_nus",
    "numpy.abs",
    "numpy.array",
    "numpy.ones_like"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_check_assumptions": {
  "data": {
   "lineno": 2406,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.rossi"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_check_assumptions_fails_for_nonunique_index": {
  "data": {
   "lineno": 3879,
   "symbols_in_volume": [
    "IndexError",
    "lifelines.tests.test_estimation.pytest",
    "lifelines.tests.test_estimation.rossi",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_check_assumptions_for_subset_of_columns": {
  "data": {
   "lineno": 2411,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.rossi"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_cluster_option": {
  "data": {
   "lineno": 3097,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_cluster_option_with_strata": {
  "data": {
   "lineno": 3126,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_coef_output_against_R_super_accurate": {
  "data": {
   "lineno": 2922,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.tests.test_estimation.rossi",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_coef_output_against_R_using_non_trivial_but_integer_weights": {
  "data": {
   "lineno": 2957,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.tests.test_estimation.rossi",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_coef_output_against_R_with_strata_super_accurate": {
  "data": {
   "lineno": 2941,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.tests.test_estimation.rossi",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_coef_output_against_Survival_Analysis_by_John_Klein_and_Melvin_Moeschberger": {
  "data": {
   "lineno": 3516,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.datasets.load_kidney_transplant",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_compute_likelihood_ratio_test_is_different_if_weights_are_provided": {
  "data": {
   "lineno": 3287,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.tests.test_estimation.pytest",
    "lifelines.tests.test_estimation.regression_dataset",
    "lifelines.utils.StatisticalWarning"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_conditional_after_in_prediction": {
  "data": {
   "lineno": 2320,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.rossi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_conditional_after_in_prediction_multiple_subjects": {
  "data": {
   "lineno": 2346,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.rossi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_conditional_after_in_prediction_multiple_subjects_with_custom_times": {
  "data": {
   "lineno": 2371,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.rossi"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_conditional_after_with_strata_in_prediction": {
  "data": {
   "lineno": 2333,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.rossi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_cox_ph_prediction_monotonicity": {
  "data": {
   "lineno": 2834,
   "symbols_in_volume": [
    "abs",
    "lifelines.CoxPHFitter",
    "lifelines.tests.test_estimation.data_pred2",
    "lifelines.utils.concordance_index"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_cox_ph_prediction_with_series": {
  "data": {
   "lineno": 2821,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.rossi",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_cox_ph_prediction_with_series_of_longer_length": {
  "data": {
   "lineno": 2827,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.rossi",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_coxph_throws_a_explainable_error_when_predict_sees_a_strata_it_hasnt_seen": {
  "data": {
   "lineno": 3569,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.tests.test_estimation.pytest",
    "lifelines.utils.StatError",
    "pandas.DataFrame.from_records"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_cph_doesnt_modify_original_dataframe": {
  "data": {
   "lineno": 2417,
   "symbols_in_volume": [
    "int",
    "numpy.dtype",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_cph_will_handle_times_with_only_censored_individuals": {
  "data": {
   "lineno": 2432,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.tests.test_estimation.rossi"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_crossval_for_cox_ph": {
  "data": {
   "lineno": 2877,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.tests.test_estimation.data_pred1",
    "lifelines.tests.test_estimation.data_pred2",
    "lifelines.utils.k_fold_cross_validation",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_crossval_for_cox_ph_normalized": {
  "data": {
   "lineno": 2891,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.tests.test_estimation.data_pred1",
    "lifelines.tests.test_estimation.data_pred2",
    "lifelines.utils.k_fold_cross_validation",
    "numpy.mean",
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_crossval_for_cox_ph_with_normalizing_times": {
  "data": {
   "lineno": 2854,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.tests.test_estimation.data_pred1",
    "lifelines.tests.test_estimation.data_pred2",
    "lifelines.utils.k_fold_cross_validation",
    "numpy.mean",
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_data_normalization": {
  "data": {
   "lineno": 2806,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.data_pred2",
    "lifelines.utils.concordance_index"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_delta_betas_are_the_same_as_in_R": {
  "data": {
   "lineno": 3003,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.utils.normalize",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_delta_betas_with_strata_are_the_same_as_in_R": {
  "data": {
   "lineno": 3033,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.utils.normalize",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_delta_betas_with_weights_are_the_same_as_in_R": {
  "data": {
   "lineno": 3066,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.utils.normalize",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_doubling_the_weights_halves_the_variance": {
  "data": {
   "lineno": 3420,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.tests.test_estimation.rossi",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_durations_of_zero_are_okay": {
  "data": {
   "lineno": 3801,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.rossi",
    "range"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_efron_newtons_method": {
  "data": {
   "lineno": 2780,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.data_nus",
    "newton",
    "numpy.abs",
    "numpy.ones_like",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_error_thrown_weights_are_nonpositive": {
  "data": {
   "lineno": 3724,
   "symbols_in_volume": [
    "ValueError",
    "lifelines.CoxPHFitter",
    "lifelines.tests.test_estimation.pytest",
    "lifelines.tests.test_estimation.regression_dataset"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_fit_method": {
  "data": {
   "lineno": 2786,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.data_nus",
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_input_column_order_is_equal_to_output_hazards_order": {
  "data": {
   "lineno": 3549,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.tests.test_estimation.rossi",
    "list"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_less_trival_float_weights_with_no_ties_is_the_same_as_R": {
  "data": {
   "lineno": 3360,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.tests.test_estimation.pytest",
    "lifelines.tests.test_estimation.regression_dataset",
    "lifelines.utils.StatisticalWarning",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_log_likelihood": {
  "data": {
   "lineno": 2692,
   "symbols_in_volume": [
    "abs",
    "lifelines.tests.test_estimation.data_nus"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_log_likelihood_test_against_R": {
  "data": {
   "lineno": 3475,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.tests.test_estimation.rossi"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_log_likelihood_test_against_R_with_weights": {
  "data": {
   "lineno": 3303,
   "symbols_in_volume": [
    "abs",
    "lifelines.CoxPHFitter",
    "lifelines.tests.test_estimation.pytest",
    "lifelines.utils.StatisticalWarning",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_martingale_residuals": {
  "data": {
   "lineno": 2607,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.regression_dataset",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_non_trival_float_weights_with_no_ties_is_the_same_as_R": {
  "data": {
   "lineno": 3388,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.tests.test_estimation.pytest",
    "lifelines.tests.test_estimation.regression_dataset",
    "lifelines.utils.StatisticalWarning",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_original_index_is_respected_in_all_residual_tests": {
  "data": {
   "lineno": 2573,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_original_index_is_respected_in_all_residual_tests_with_strata": {
  "data": {
   "lineno": 2590,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_output_with_strata_against_R": {
  "data": {
   "lineno": 3491,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.tests.test_estimation.rossi",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_p_value_against_Survival_Analysis_by_John_Klein_and_Melvin_Moeschberger": {
  "data": {
   "lineno": 3538,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.datasets.load_larynx",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_penalized_output_against_R": {
  "data": {
   "lineno": 3504,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.tests.test_estimation.rossi",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_prediction_methods_will_accept_a_times_arg_to_reindex_the_predictions": {
  "data": {
   "lineno": 2796,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.data_pred2",
    "numpy.arange",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_print_summary": {
  "data": {
   "lineno": 2644,
   "symbols_in_volume": [
    "io.StringIO",
    "lifelines.tests.test_estimation.rossi",
    "lifelines.tests.test_estimation.sys",
    "repr"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_print_summary_with_decimals": {
  "data": {
   "lineno": 2621,
   "symbols_in_volume": [
    "io.StringIO",
    "lifelines.CoxPHFitter",
    "lifelines.tests.test_estimation.rossi",
    "lifelines.tests.test_estimation.sys"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_robust_errors_against_R_no_ties": {
  "data": {
   "lineno": 3817,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.regression_dataset",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_robust_errors_is_the_same_as_R": {
  "data": {
   "lineno": 3258,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_robust_errors_with_less_trival_weights_is_the_same_as_R": {
  "data": {
   "lineno": 3155,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_robust_errors_with_non_trivial_weights_is_the_same_as_R": {
  "data": {
   "lineno": 3194,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_robust_errors_with_non_trivial_weights_with_censorship_is_the_same_as_R": {
  "data": {
   "lineno": 3226,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_robust_errors_with_strata_against_R": {
  "data": {
   "lineno": 3823,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_allclose",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_robust_errors_with_strata_against_R_super_accurate": {
  "data": {
   "lineno": 3849,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.pytest",
    "numpy.testing.assert_allclose",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_robust_errors_with_trivial_weights_is_the_same_than_R": {
  "data": {
   "lineno": 2967,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_scaled_schoenfeld_residuals_against_R": {
  "data": {
   "lineno": 2559,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.regression_dataset",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_schoenfeld_residuals_no_strata_but_with_censorship": {
  "data": {
   "lineno": 2443,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_schoenfeld_residuals_with_censorship_and_ties": {
  "data": {
   "lineno": 2469,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_schoenfeld_residuals_with_first_subjects_censored": {
  "data": {
   "lineno": 2553,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.rossi"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_schoenfeld_residuals_with_strata": {
  "data": {
   "lineno": 2522,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_schoenfeld_residuals_with_weights": {
  "data": {
   "lineno": 2495,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_se_against_Survival_Analysis_by_John_Klein_and_Melvin_Moeschberger": {
  "data": {
   "lineno": 3527,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.datasets.load_larynx",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_single_efron_computed_by_hand_examples": {
  "data": {
   "lineno": 2696,
   "symbols_in_volume": [
    "bool",
    "lifelines.tests.test_estimation.data_nus",
    "numpy.abs",
    "numpy.array",
    "numpy.ones_like"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_standard_error_coef_output_against_R": {
  "data": {
   "lineno": 3443,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.tests.test_estimation.rossi",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_strata_against_R_output": {
  "data": {
   "lineno": 3595,
   "symbols_in_volume": [
    "abs",
    "lifelines.CoxPHFitter",
    "lifelines.tests.test_estimation.rossi",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_strata_from_init_is_used_in_fit_later": {
  "data": {
   "lineno": 3655,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.tests.test_estimation.rossi"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_strata_removes_variable_from_summary_output": {
  "data": {
   "lineno": 3555,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.tests.test_estimation.rossi"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_strata_will_work_with_matched_pairs": {
  "data": {
   "lineno": 2616,
   "symbols_in_volume": [
    "int",
    "lifelines.tests.test_estimation.rossi",
    "numpy.floor"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_strata_works_if_only_a_single_element_is_in_the_strata": {
  "data": {
   "lineno": 3560,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.datasets.load_holly_molly_polly"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_summary_output_using_non_trivial_but_integer_weights": {
  "data": {
   "lineno": 3405,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.tests.test_estimation.rossi",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_survival_prediction_is_the_same_indp_of_location": {
  "data": {
   "lineno": 3693,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.tests.test_estimation.regression_dataset",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_survival_prediction_is_the_same_indp_of_scale": {
  "data": {
   "lineno": 3730,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.tests.test_estimation.regression_dataset",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_that_a_convergence_warning_is_not_thrown_if_using_compute_residuals": {
  "data": {
   "lineno": 2378,
   "symbols_in_volume": [
    "len",
    "lifelines.CoxPHFitter",
    "lifelines.tests.test_estimation.pytest",
    "lifelines.tests.test_estimation.rossi",
    "lifelines.utils.ConvergenceWarning",
    "numpy.random.exponential"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_that_adding_strata_will_change_c_index": {
  "data": {
   "lineno": 2390,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.rossi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_trival_float_weights_with_no_ties_is_the_same_as_R": {
  "data": {
   "lineno": 3329,
   "symbols_in_volume": [
    "abs",
    "lifelines.CoxPHFitter",
    "lifelines.tests.test_estimation.pytest",
    "lifelines.tests.test_estimation.regression_dataset",
    "lifelines.utils.StatisticalWarning",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_using_dataframes_vs_numpy_arrays": {
  "data": {
   "lineno": 2790,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.data_pred2",
    "numpy.array",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_warning_is_raised_if_complete_separation_is_present": {
  "data": {
   "lineno": 3767,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.pytest",
    "lifelines.utils.ConvergenceWarning",
    "numpy.arange",
    "numpy.random.randn",
    "pandas.DataFrame.from_records",
    "zip"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_warning_is_raised_if_df_has_a_near_constant_column": {
  "data": {
   "lineno": 3747,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.tests.test_estimation.pytest",
    "lifelines.tests.test_estimation.rossi",
    "lifelines.utils.ConvergenceError",
    "lifelines.utils.ConvergenceWarning"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_warning_is_raised_if_df_has_a_near_constant_column_in_one_separation": {
  "data": {
   "lineno": 3755,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.tests.test_estimation.pytest",
    "lifelines.tests.test_estimation.rossi",
    "lifelines.utils.ConvergenceWarning",
    "str"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_what_happens_to_nans": {
  "data": {
   "lineno": 3874,
   "symbols_in_volume": [
    "TypeError",
    "lifelines.tests.test_estimation.pytest",
    "lifelines.tests.test_estimation.rossi",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_what_happens_when_column_is_constant_for_all_non_deaths": {
  "data": {
   "lineno": 3783,
   "symbols_in_volume": [
    "bool",
    "events",
    "events.var",
    "lifelines.CoxPHFitter",
    "lifelines.tests.test_estimation.pytest",
    "lifelines.tests.test_estimation.rossi",
    "lifelines.utils.ConvergenceWarning"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_what_happens_with_colinear_inputs": {
  "data": {
   "lineno": 3796,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.pytest",
    "lifelines.tests.test_estimation.rossi",
    "lifelines.utils.ConvergenceError"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxPHFitter.test_z_value_output_against_R_to_3_decimal_places": {
  "data": {
   "lineno": 3459,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.tests.test_estimation.rossi",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter": {
  "data": {
   "lineno": 4043
  },
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.ctv": {
  "data": {
   "lineno": 4044,
   "symbols_in_volume": [
    "lifelines.CoxTimeVaryingFitter",
    "lifelines.tests.test_estimation.pytest"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.dfcv": {
  "data": {
   "lineno": 4048,
   "symbols_in_volume": [
    "lifelines.datasets.load_dfcv",
    "lifelines.tests.test_estimation.pytest"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.heart": {
  "data": {
   "lineno": 4054,
   "symbols_in_volume": [
    "lifelines.datasets.load_stanford_heart_transplants",
    "lifelines.tests.test_estimation.pytest"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_all_okay_with_non_trivial_index_in_dataframe": {
  "data": {
   "lineno": 4388,
   "symbols_in_volume": [
    "lifelines.CoxTimeVaryingFitter",
    "numpy.random.randint",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_ctv_against_cph_for_static_datasets_but_one_is_long": {
  "data": {
   "lineno": 4467,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.CoxTimeVaryingFitter",
    "lifelines.datasets.load_rossi",
    "lifelines.tests.test_estimation.rossi",
    "lifelines.utils.to_episodic_format",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_ctv_baseline_cumulative_hazard_against_R": {
  "data": {
   "lineno": 4300,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_ctv_fitter_will_give_the_same_results_as_static_cox_model": {
  "data": {
   "lineno": 4176,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.tests.test_estimation.rossi",
    "lifelines.utils.to_long_format",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_ctv_fitter_will_handle_integer_weight_as_static_model": {
  "data": {
   "lineno": 4188,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.tests.test_estimation.rossi",
    "lifelines.utils.to_long_format",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_ctv_fitter_will_handle_trivial_weight_col": {
  "data": {
   "lineno": 4153,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_ctv_prediction_methods": {
  "data": {
   "lineno": 4295
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_ctv_ratio_test_with_strata": {
  "data": {
   "lineno": 4499,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_ctv_ratio_test_with_strata_and_initial_point": {
  "data": {
   "lineno": 4503,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_ctv_with_multiple_strata": {
  "data": {
   "lineno": 4495,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_ctv_with_strata_against_R": {
  "data": {
   "lineno": 4480,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_doubling_the_weights_halves_the_variance": {
  "data": {
   "lineno": 4163,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_error_is_raised_if_using_non_numeric_data": {
  "data": {
   "lineno": 4264,
   "symbols_in_volume": [
    "ValueError",
    "lifelines.CoxTimeVaryingFitter",
    "lifelines.tests.test_estimation.pytest",
    "pandas.DataFrame.from_dict",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_error_thrown_if_column_doesnt_exist": {
  "data": {
   "lineno": 4418,
   "symbols_in_volume": [
    "KeyError",
    "lifelines.tests.test_estimation.pytest"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_error_thrown_weights_are_nonpositive": {
  "data": {
   "lineno": 4413,
   "symbols_in_volume": [
    "ValueError",
    "lifelines.tests.test_estimation.pytest"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_fitter_accept_boolean_columns": {
  "data": {
   "lineno": 4210,
   "symbols_in_volume": [
    "pandas.DataFrame.from_records"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_fitter_will_error_if_degenerate_time": {
  "data": {
   "lineno": 4137,
   "symbols_in_volume": [
    "ValueError",
    "lifelines.tests.test_estimation.pytest",
    "pandas.DataFrame.from_records"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_fitter_will_raise_a_warning_if_instaneous_observation_present": {
  "data": {
   "lineno": 4119,
   "symbols_in_volume": [
    "RuntimeWarning",
    "len",
    "lifelines.tests.test_estimation.pytest",
    "pandas.DataFrame.from_records"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_fitter_will_raise_an_error_if_immediate_death_present": {
  "data": {
   "lineno": 4107,
   "symbols_in_volume": [
    "ValueError",
    "lifelines.tests.test_estimation.pytest",
    "pandas.DataFrame.from_records"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_inference_against_known_R_output": {
  "data": {
   "lineno": 4058,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_inference_against_known_R_output_with_weights": {
  "data": {
   "lineno": 4081,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_likelihood_ratio_test_against_R": {
  "data": {
   "lineno": 4405,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_penalizer": {
  "data": {
   "lineno": 4400,
   "symbols_in_volume": [
    "lifelines.CoxTimeVaryingFitter"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_print_summary": {
  "data": {
   "lineno": 4422,
   "symbols_in_volume": [
    "io.StringIO",
    "lifelines.tests.test_estimation.sys",
    "repr"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_repr_with_fitter": {
  "data": {
   "lineno": 4379
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_summary_output_versus_Rs_against_standford_heart_transplant": {
  "data": {
   "lineno": 4253,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_warning_is_raised_if_df_has_a_near_constant_column": {
  "data": {
   "lineno": 4222,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.pytest",
    "lifelines.utils.ConvergenceError",
    "lifelines.utils.ConvergenceWarning"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_warning_is_raised_if_df_has_a_near_constant_column_in_one_separation": {
  "data": {
   "lineno": 4229,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.pytest",
    "lifelines.utils.ConvergenceWarning"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_warning_is_raised_if_df_has_start_eq_stop_at_event_time": {
  "data": {
   "lineno": 4238,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.pytest",
    "lifelines.utils.ConvergenceWarning",
    "pandas.DataFrame.from_records"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestCoxTimeVaryingFitter.test_what_happens_to_nans": {
  "data": {
   "lineno": 4070,
   "symbols_in_volume": [
    "TypeError",
    "lifelines.tests.test_estimation.pytest",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestExponentialFitter": {
  "data": {
   "lineno": 1039
  },
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestExponentialFitter.test_fit_computes_correct_asymptotic_variance": {
  "data": {
   "lineno": 1047,
   "symbols_in_volume": [
    "abs",
    "lifelines.ExponentialFitter",
    "numpy.minimum",
    "numpy.random.exponential"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestExponentialFitter.test_fit_computes_correct_lambda_": {
  "data": {
   "lineno": 1040,
   "symbols_in_volume": [
    "abs",
    "float",
    "lifelines.ExponentialFitter",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestGeneralizedGammaFitter": {
  "data": {
   "lineno": 967
  },
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestGeneralizedGammaFitter.test_against_reliability_software": {
  "data": {
   "lineno": 1005,
   "symbols_in_volume": [
    "lifelines.GeneralizedGammaFitter",
    "numpy.exp",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestGeneralizedGammaFitter.test_exponential_data_inference": {
  "data": {
   "lineno": 968,
   "symbols_in_volume": [
    "lifelines.GeneralizedGammaFitter",
    "numpy.random.exponential"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestGeneralizedGammaFitter.test_gamma_data_inference": {
  "data": {
   "lineno": 981,
   "symbols_in_volume": [
    "abs",
    "lifelines.GeneralizedGammaFitter",
    "numpy.exp",
    "numpy.random.gamma"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestGeneralizedGammaFitter.test_inverse_gamma_inference": {
  "data": {
   "lineno": 999,
   "symbols_in_volume": [
    "abs",
    "lifelines.GeneralizedGammaFitter",
    "numpy.exp",
    "scipy.stats.invgamma"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestGeneralizedGammaFitter.test_inverse_weibull_inference": {
  "data": {
   "lineno": 993,
   "symbols_in_volume": [
    "abs",
    "lifelines.GeneralizedGammaFitter",
    "scipy.stats.invweibull"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestGeneralizedGammaFitter.test_lognormal_data_inference": {
  "data": {
   "lineno": 987,
   "symbols_in_volume": [
    "abs",
    "lifelines.GeneralizedGammaFitter",
    "numpy.exp",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestGeneralizedGammaFitter.test_weibull_data_inference": {
  "data": {
   "lineno": 975,
   "symbols_in_volume": [
    "lifelines.GeneralizedGammaFitter",
    "numpy.random.exponential"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestKaplanMeierFitter": {
  "data": {
   "lineno": 1058
  },
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestKaplanMeierFitter.kaplan_meier": {
  "data": {
   "lineno": 1059,
   "symbols_in_volume": [
    "collections.Counter",
    "enumerate",
    "len",
    "list",
    "numpy.insert",
    "numpy.sort",
    "numpy.zeros",
    "sum"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestKaplanMeierFitter.test_adding_weights_to_KaplanMeierFitter": {
  "data": {
   "lineno": 1210,
   "symbols_in_volume": [
    "lifelines.KaplanMeierFitter",
    "numpy.random.binomial",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestKaplanMeierFitter.test_kaplan_meier_no_censorship": {
  "data": {
   "lineno": 1105,
   "symbols_in_volume": [
    "lifelines.KaplanMeierFitter",
    "lifelines.tests.test_estimation.sample_lifetimes",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestKaplanMeierFitter.test_kaplan_meier_with_censorship": {
  "data": {
   "lineno": 1111,
   "symbols_in_volume": [
    "lifelines.KaplanMeierFitter",
    "lifelines.tests.test_estimation.sample_lifetimes",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestKaplanMeierFitter.test_kmf_confidence_intervals_output_against_R": {
  "data": {
   "lineno": 1189,
   "symbols_in_volume": [
    "lifelines.KaplanMeierFitter",
    "lifelines.datasets.load_g3",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestKaplanMeierFitter.test_kmf_does_not_drop_to_zero_if_last_point_is_censored": {
  "data": {
   "lineno": 1202,
   "symbols_in_volume": [
    "lifelines.KaplanMeierFitter",
    "numpy.arange",
    "numpy.argmax",
    "numpy.random.binomial"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestKaplanMeierFitter.test_kmf_has_both_survival_function_and_cumulative_density": {
  "data": {
   "lineno": 1259,
   "symbols_in_volume": [
    "hasattr",
    "lifelines.KaplanMeierFitter",
    "numpy.arange",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestKaplanMeierFitter.test_kmf_left_censored_data_stats": {
  "data": {
   "lineno": 1138,
   "symbols_in_volume": [
    "lifelines.KaplanMeierFitter",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestKaplanMeierFitter.test_kmf_overflow_error": {
  "data": {
   "lineno": 1081,
   "symbols_in_volume": [
    "int",
    "lifelines.KaplanMeierFitter",
    "numpy.random.exponential"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestKaplanMeierFitter.test_kmf_survival_curve_output_against_R": {
  "data": {
   "lineno": 1162,
   "symbols_in_volume": [
    "lifelines.KaplanMeierFitter",
    "lifelines.datasets.load_g3",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestKaplanMeierFitter.test_kmf_survival_curve_output_against_R_super_accurate": {
  "data": {
   "lineno": 1175,
   "symbols_in_volume": [
    "lifelines.KaplanMeierFitter",
    "lifelines.datasets.load_g3",
    "lifelines.tests.test_estimation.pytest",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestKaplanMeierFitter.test_late_entry_with_against_R": {
  "data": {
   "lineno": 1250,
   "symbols_in_volume": [
    "lifelines.KaplanMeierFitter",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestKaplanMeierFitter.test_late_entry_with_almost_tied_entry_and_death_against_R": {
  "data": {
   "lineno": 1241,
   "symbols_in_volume": [
    "lifelines.KaplanMeierFitter",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestKaplanMeierFitter.test_late_entry_with_tied_entry_and_death": {
  "data": {
   "lineno": 1282,
   "symbols_in_volume": [
    "int",
    "lifelines.KaplanMeierFitter",
    "numpy.ceil",
    "numpy.cumprod",
    "numpy.floor",
    "numpy.min",
    "numpy.random.seed",
    "numpy.random.weibull",
    "numpy.testing.assert_allclose",
    "numpy.where",
    "pandas.DataFrame",
    "range"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestKaplanMeierFitter.test_left_truncation_against_Cole_and_Hudgens": {
  "data": {
   "lineno": 1089,
   "symbols_in_volume": [
    "abs",
    "lifelines.KaplanMeierFitter",
    "lifelines.datasets.load_multicenter_aids_cohort_study"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestKaplanMeierFitter.test_passing_in_left_censorship_creates_a_cumulative_density": {
  "data": {
   "lineno": 1131,
   "symbols_in_volume": [
    "hasattr",
    "lifelines.KaplanMeierFitter",
    "lifelines.tests.test_estimation.sample_lifetimes"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestKaplanMeierFitter.test_shifting_durations_doesnt_affect_survival_function_values": {
  "data": {
   "lineno": 1148,
   "symbols_in_volume": [
    "lifelines.KaplanMeierFitter",
    "numpy.random.exponential",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestKaplanMeierFitter.test_sort_doesnt_affect_kmf": {
  "data": {
   "lineno": 1126,
   "symbols_in_volume": [
    "lifelines.KaplanMeierFitter",
    "lifelines.tests.test_estimation.sample_lifetimes",
    "pandas.util.testing.assert_frame_equal",
    "sorted"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestKaplanMeierFitter.test_stat_error_is_raised_if_too_few_early_deaths": {
  "data": {
   "lineno": 1117,
   "symbols_in_volume": [
    "lifelines.KaplanMeierFitter",
    "lifelines.tests.test_estimation.pytest",
    "lifelines.utils.StatError",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestKaplanMeierFitter.test_weights_can_be_floats": {
  "data": {
   "lineno": 1223,
   "symbols_in_volume": [
    "lifelines.KaplanMeierFitter",
    "lifelines.tests.test_estimation.pytest",
    "lifelines.utils.StatisticalWarning",
    "numpy.random.binomial",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestKaplanMeierFitter.test_weights_with_unaligned_index": {
  "data": {
   "lineno": 1231,
   "symbols_in_volume": [
    "lifelines.KaplanMeierFitter",
    "lifelines.tests.test_estimation.pytest",
    "lifelines.utils.StatisticalWarning",
    "list",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestLogLogisticAFTFitter": {
  "data": {
   "lineno": 2000
  },
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestLogLogisticAFTFitter.aft": {
  "data": {
   "lineno": 2001,
   "symbols_in_volume": [
    "lifelines.LogLogisticAFTFitter",
    "lifelines.tests.test_estimation.pytest"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestLogLogisticAFTFitter.test_coefs_with_fitted_ancillary_params": {
  "data": {
   "lineno": 2005,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.rossi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestLogLogisticAFTFitter.test_proportional_odds": {
  "data": {
   "lineno": 2020,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.rossi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestLogLogisticFitter": {
  "data": {
   "lineno": 792
  },
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestLogLogisticFitter.llf": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "lifelines.LogLogisticFitter",
    "lifelines.tests.test_estimation.pytest"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestLogLogisticFitter.test_llf_large_values": {
  "data": {
   "lineno": 840,
   "symbols_in_volume": [
    "abs",
    "numpy.minimum",
    "scipy.stats.fisk.rvs"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestLogLogisticFitter.test_llf_less_simple_inference": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "abs",
    "scipy.stats.fisk.rvs"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestLogLogisticFitter.test_llf_less_simple_inference_with_censorship": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "abs",
    "numpy.minimum",
    "scipy.stats.fisk.rvs"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestLogLogisticFitter.test_llf_simple_inference": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "abs",
    "scipy.stats.fisk.rvs"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestLogLogisticFitter.test_llf_small_values": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": [
    "abs",
    "lifelines.tests.test_estimation.pytest",
    "numpy.minimum",
    "scipy.stats.fisk.rvs"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestLogLogisticFitter.test_loglogistic_model_does_not_except_negative_or_zero_values": {
  "data": {
   "lineno": 797,
   "symbols_in_volume": [
    "ValueError",
    "lifelines.tests.test_estimation.pytest"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestLogNormalAFTFitter": {
  "data": {
   "lineno": 1979
  },
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestLogNormalAFTFitter.aft": {
  "data": {
   "lineno": 1980,
   "symbols_in_volume": [
    "lifelines.LogNormalAFTFitter",
    "lifelines.tests.test_estimation.pytest"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestLogNormalAFTFitter.test_coefs_with_fitted_ancillary_params": {
  "data": {
   "lineno": 1984,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.rossi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestLogNormalFitter": {
  "data": {
   "lineno": 689
  },
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestLogNormalFitter.lnf": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "lifelines.LogNormalFitter",
    "lifelines.tests.test_estimation.pytest"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestLogNormalFitter.test_cumulative_hazard_doesnt_fail": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.random.randn",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestLogNormalFitter.test_fit": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "abs",
    "numpy.exp",
    "numpy.ones_like",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestLogNormalFitter.test_lnf_inference": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "abs",
    "numpy.exp",
    "numpy.minimum",
    "numpy.percentile",
    "numpy.random.randn",
    "numpy.random.uniform"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestLogNormalFitter.test_lnf_inference_no_censorship": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "abs",
    "numpy.exp",
    "numpy.random.exponential",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestLogNormalFitter.test_lnf_inference_with_large_sigma": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "abs",
    "numpy.exp",
    "numpy.minimum",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestLogNormalFitter.test_lnf_inference_with_really_small_sigma": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "abs",
    "numpy.exp",
    "numpy.minimum",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestLogNormalFitter.test_lnf_inference_with_small_sigma": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "abs",
    "numpy.exp",
    "numpy.minimum",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestLogNormalFitter.test_lognormal_model_does_not_except_negative_or_zero_values": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "ValueError",
    "lifelines.tests.test_estimation.pytest"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestNelsonAalenFitter": {
  "data": {
   "lineno": 1328
  },
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestNelsonAalenFitter.nelson_aalen": {
  "data": {
   "lineno": 1329,
   "symbols_in_volume": [
    "collections.Counter",
    "enumerate",
    "len",
    "list",
    "numpy.insert",
    "numpy.sort",
    "numpy.zeros",
    "sum"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestNelsonAalenFitter.test_adding_weights_to_NelsonAalenFitter": {
  "data": {
   "lineno": 1414,
   "symbols_in_volume": [
    "lifelines.NelsonAalenFitter",
    "numpy.random.binomial",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestNelsonAalenFitter.test_censor_nelson_aalen": {
  "data": {
   "lineno": 1357,
   "symbols_in_volume": [
    "lifelines.NelsonAalenFitter",
    "lifelines.tests.test_estimation.sample_lifetimes",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestNelsonAalenFitter.test_iloc_slicing": {
  "data": {
   "lineno": 1367,
   "symbols_in_volume": [
    "lifelines.NelsonAalenFitter",
    "lifelines.tests.test_estimation.waltons_dataset"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestNelsonAalenFitter.test_loc_slicing": {
  "data": {
   "lineno": 1363,
   "symbols_in_volume": [
    "lifelines.NelsonAalenFitter",
    "lifelines.tests.test_estimation.waltons_dataset"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestNelsonAalenFitter.test_nelson_aalen_no_censorship": {
  "data": {
   "lineno": 1351,
   "symbols_in_volume": [
    "lifelines.NelsonAalenFitter",
    "lifelines.tests.test_estimation.sample_lifetimes",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestNelsonAalenFitter.test_nelson_aalen_smoothing": {
  "data": {
   "lineno": 1402,
   "symbols_in_volume": [
    "abs",
    "lifelines.NelsonAalenFitter",
    "numpy.random.binomial",
    "numpy.random.exponential",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestNelsonAalenFitter.test_smoothing_hazard_nontied": {
  "data": {
   "lineno": 1379,
   "symbols_in_volume": [
    "lifelines.NelsonAalenFitter",
    "numpy.random.binomial",
    "numpy.random.exponential"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestNelsonAalenFitter.test_smoothing_hazard_ties": {
  "data": {
   "lineno": 1372,
   "symbols_in_volume": [
    "lifelines.NelsonAalenFitter",
    "numpy.random.binomial"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestNelsonAalenFitter.test_smoothing_hazard_ties_all_events_observed": {
  "data": {
   "lineno": 1388,
   "symbols_in_volume": [
    "lifelines.NelsonAalenFitter",
    "numpy.random.binomial"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestNelsonAalenFitter.test_smoothing_hazard_with_spike_at_time_0": {
  "data": {
   "lineno": 1394,
   "symbols_in_volume": [
    "bool",
    "lifelines.NelsonAalenFitter",
    "numpy.random.binomial"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestParametricRegressionFitter": {
  "data": {
   "lineno": 1444
  },
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestParametricRegressionFitter.rossi": {
  "data": {
   "lineno": 1445,
   "symbols_in_volume": [
    "lifelines.datasets.load_rossi",
    "lifelines.tests.test_estimation.pytest",
    "lifelines.tests.test_estimation.rossi"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestParametricRegressionFitter.test_custom_weibull_model_gives_the_same_data_as_implemented_weibull_model": {
  "data": {
   "lineno": 1451,
   "symbols_in_volume": [
    "CustomWeibull",
    "lifelines.WeibullAFTFitter",
    "lifelines.tests.test_estimation.rossi",
    "numpy.testing.assert_allclose",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestParametricRegressionFitter.test_custom_weibull_model_gives_the_same_data_as_implemented_weibull_model.CustomWeibull": {
  "data": {
   "lineno": 1452,
   "symbols_in_volume": [
    "lifelines.fitters.ParametricRegressionFitter"
   ]
  },
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestParametricRegressionFitter.test_custom_weibull_model_gives_the_same_data_as_implemented_weibull_model.CustomWeibull._cumulative_hazard": {
  "data": {
   "lineno": 1456,
   "symbols_in_volume": [
    "autograd.numpy.dot",
    "autograd.numpy.exp"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestParametricUnivariateFitters": {
  "data": {
   "lineno": 196
  },
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestParametricUnivariateFitters.test_confidence_interval_is_expected": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "UpperAsymptoteFitter",
    "abs",
    "autograd.scipy.special.logit",
    "flaky.flaky",
    "numpy.isnan",
    "numpy.log",
    "numpy.random.exponential",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestParametricUnivariateFitters.test_confidence_interval_is_expected.UpperAsymptoteFitter": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "lifelines.fitters.ParametericUnivariateFitter"
   ]
  },
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestParametricUnivariateFitters.test_confidence_interval_is_expected.UpperAsymptoteFitter._cumulative_hazard": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "autograd.scipy.stats.norm.cdf"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestParametricUnivariateFitters.test_models_can_handle_really_large_duration_values": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "fitter",
    "lifelines.tests.test_estimation.known_parametric_univariate_fitters",
    "numpy.minimum",
    "numpy.random.exponential"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestParametricUnivariateFitters.test_models_can_handle_really_small_duration_values": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "fitter",
    "lifelines.tests.test_estimation.known_parametric_univariate_fitters",
    "numpy.minimum",
    "numpy.random.exponential"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestParametricUnivariateFitters.test_models_can_handle_really_small_duration_values_for_left_censorship": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "fitter",
    "lifelines.tests.test_estimation.known_parametric_univariate_fitters",
    "numpy.maximum",
    "numpy.random.exponential"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestParametricUnivariateFitters.test_parameteric_models_all_can_do_interval_censoring": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "fitter",
    "lifelines.datasets.load_diabetes",
    "lifelines.tests.test_estimation.known_parametric_univariate_fitters"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestParametricUnivariateFitters.test_parameteric_models_all_can_do_interval_censoring_with_prediction": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "fitter",
    "lifelines.datasets.load_diabetes",
    "lifelines.tests.test_estimation.known_parametric_univariate_fitters"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestParametricUnivariateFitters.test_parameteric_models_fail_if_passing_in_bad_event_data": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "ValueError",
    "fitter",
    "lifelines.datasets.load_diabetes",
    "lifelines.tests.test_estimation.known_parametric_univariate_fitters",
    "lifelines.tests.test_estimation.pytest",
    "numpy.ones_like"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestParametricUnivariateFitters.test_parametric_univarite_fitters_can_print_summary": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "fitter",
    "lifelines.tests.test_estimation.known_parametric_univariate_fitters",
    "lifelines.tests.test_estimation.positive_sample_lifetimes"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestParametricUnivariateFitters.test_parametric_univarite_fitters_has_confidence_intervals": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "fitter",
    "lifelines.tests.test_estimation.known_parametric_univariate_fitters",
    "lifelines.tests.test_estimation.positive_sample_lifetimes"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestParametricUnivariateFitters.test_warnings_for_problematic_cumulative_hazards": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "DecreasingFitter",
    "NegativeFitter",
    "lifelines.tests.test_estimation.pytest",
    "lifelines.utils.StatisticalWarning"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestParametricUnivariateFitters.test_warnings_for_problematic_cumulative_hazards.DecreasingFitter": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "lifelines.fitters.ParametericUnivariateFitter"
   ]
  },
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestParametricUnivariateFitters.test_warnings_for_problematic_cumulative_hazards.DecreasingFitter._cumulative_hazard": {
  "data": {
   "lineno": 287
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestParametricUnivariateFitters.test_warnings_for_problematic_cumulative_hazards.NegativeFitter": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "lifelines.fitters.ParametericUnivariateFitter"
   ]
  },
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestParametricUnivariateFitters.test_warnings_for_problematic_cumulative_hazards.NegativeFitter._cumulative_hazard": {
  "data": {
   "lineno": 280
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestPiecewiseExponentialFitter": {
  "data": {
   "lineno": 659
  },
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestPiecewiseExponentialFitter.test_fit_on_simulated_data": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "flaky.flaky",
    "int",
    "lifelines.PiecewiseExponentialFitter",
    "lifelines.generate_datasets.piecewise_exponential_survival_data",
    "numpy.minimum",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestPiecewiseExponentialFitter.test_fit_with_bad_breakpoints_raises_error": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "ValueError",
    "lifelines.PiecewiseExponentialFitter",
    "lifelines.tests.test_estimation.pytest",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestPiecewiseExponentialRegressionFitter": {
  "data": {
   "lineno": 1717
  },
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestPiecewiseExponentialRegressionFitter.test_inference": {
  "data": {
   "lineno": 1718,
   "symbols_in_volume": [
    "assert_allclose",
    "lifelines.PiecewiseExponentialRegressionFitter",
    "lifelines.generate_datasets.piecewise_exponential_survival_data",
    "numpy.array",
    "numpy.c_",
    "numpy.empty",
    "numpy.exp",
    "numpy.log",
    "numpy.maximum",
    "numpy.minimum",
    "numpy.ones",
    "numpy.random.exponential",
    "numpy.round",
    "pandas.DataFrame",
    "range"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestPiecewiseExponentialRegressionFitter.test_inference.assert_allclose": {
  "data": {
   "lineno": 1756,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestRegressionFitters": {
  "data": {
   "lineno": 1472
  },
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestRegressionFitters.regression_models": {
  "data": {
   "lineno": 1491,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.tests.test_estimation.pytest"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestRegressionFitters.regression_models_sans_strata_model": {
  "data": {
   "lineno": 1478,
   "symbols_in_volume": [
    "lifelines.AalenAdditiveFitter",
    "lifelines.CoxPHFitter",
    "lifelines.GeneralizedGammaRegressionFitter",
    "lifelines.LogLogisticAFTFitter",
    "lifelines.LogNormalAFTFitter",
    "lifelines.PiecewiseExponentialRegressionFitter",
    "lifelines.WeibullAFTFitter",
    "lifelines.tests.test_estimation.CustomRegressionModelTesting",
    "lifelines.tests.test_estimation.pytest"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestRegressionFitters.rossi": {
  "data": {
   "lineno": 1473,
   "symbols_in_volume": [
    "lifelines.datasets.load_rossi",
    "lifelines.tests.test_estimation.pytest",
    "lifelines.tests.test_estimation.rossi"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestRegressionFitters.test_all_models_have_censoring_type": {
  "data": {
   "lineno": 1694,
   "symbols_in_volume": [
    "fitter",
    "fitter.fit",
    "hasattr",
    "lifelines.tests.test_estimation.rossi"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestRegressionFitters.test_dill_serialization": {
  "data": {
   "lineno": 1504,
   "symbols_in_volume": [
    "dill.dumps",
    "dill.loads",
    "fitter",
    "fitter.durations.sum",
    "fitter.fit",
    "lifelines.tests.test_estimation.rossi"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestRegressionFitters.test_duration_vector_can_be_normalized_up_to_an_intercept": {
  "data": {
   "lineno": 1594,
   "symbols_in_volume": [
    "AttributeError",
    "fitter",
    "fitter.fit",
    "isinstance",
    "lifelines.GeneralizedGammaRegressionFitter",
    "lifelines.PiecewiseExponentialRegressionFitter",
    "lifelines.tests.test_estimation.CustomRegressionModelTesting",
    "lifelines.tests.test_estimation.rossi",
    "pandas.DataFrame",
    "pandas.MultiIndex",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestRegressionFitters.test_error_is_raised_if_using_non_numeric_data_in_fit": {
  "data": {
   "lineno": 1640,
   "symbols_in_volume": [
    "ValueError",
    "fitter",
    "fitter.fit",
    "lifelines.tests.test_estimation.pytest",
    "pandas.DataFrame.from_dict",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestRegressionFitters.test_error_is_thrown_if_there_is_nans_in_the_duration_col": {
  "data": {
   "lineno": 1682,
   "symbols_in_volume": [
    "TypeError",
    "fitter",
    "fitter.fit",
    "lifelines.tests.test_estimation.pytest",
    "lifelines.tests.test_estimation.rossi"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestRegressionFitters.test_error_is_thrown_if_there_is_nans_in_the_event_col": {
  "data": {
   "lineno": 1688,
   "symbols_in_volume": [
    "TypeError",
    "fitter",
    "fitter.fit",
    "lifelines.tests.test_estimation.pytest",
    "lifelines.tests.test_estimation.rossi"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestRegressionFitters.test_fit_methods_can_accept_optional_event_col_param": {
  "data": {
   "lineno": 1549,
   "symbols_in_volume": [
    "bool",
    "lifelines.tests.test_estimation.rossi",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "pandas.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestRegressionFitters.test_fit_methods_require_duration_col": {
  "data": {
   "lineno": 1544,
   "symbols_in_volume": [
    "TypeError",
    "fitter",
    "fitter.fit",
    "lifelines.tests.test_estimation.pytest",
    "lifelines.tests.test_estimation.rossi"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestRegressionFitters.test_fit_raise_an_error_if_nan_in_event_col": {
  "data": {
   "lineno": 1537,
   "symbols_in_volume": [
    "TypeError",
    "fitter",
    "fitter.fit",
    "lifelines.tests.test_estimation.pytest",
    "numpy.arange",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestRegressionFitters.test_fit_will_accept_object_dtype_as_event_col": {
  "data": {
   "lineno": 1525,
   "symbols_in_volume": [
    "fitter",
    "fitter.fit",
    "lifelines.tests.test_estimation.rossi",
    "object"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestRegressionFitters.test_joblib_serialization": {
  "data": {
   "lineno": 1514,
   "symbols_in_volume": [
    "fitter",
    "fitter.durations.sum",
    "fitter.fit",
    "joblib.dump",
    "joblib.load",
    "lifelines.tests.test_estimation.rossi"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestRegressionFitters.test_pickle_serialization": {
  "data": {
   "lineno": 1496,
   "symbols_in_volume": [
    "fitter",
    "fitter.durations.sum",
    "fitter.fit",
    "lifelines.tests.test_estimation.pickle",
    "lifelines.tests.test_estimation.rossi"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestRegressionFitters.test_predict_methods_in_regression_return_same_index": {
  "data": {
   "lineno": 1576,
   "symbols_in_volume": [
    "getattr",
    "itertools.combinations",
    "lifelines.tests.test_estimation.rossi",
    "list",
    "map",
    "pandas.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestRegressionFitters.test_predict_methods_in_regression_return_same_types": {
  "data": {
   "lineno": 1558,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "itertools.combinations",
    "lifelines.tests.test_estimation.rossi",
    "list",
    "map",
    "type"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestRegressionFitters.test_prediction_methods_respect_index": {
  "data": {
   "lineno": 1627,
   "symbols_in_volume": [
    "AttributeError",
    "fitter",
    "fitter.fit",
    "fitter.predict_expectation",
    "fitter.predict_partial_hazard",
    "fitter.predict_percentile",
    "lifelines.tests.test_estimation.rossi",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestRegressionFitters.test_regression_model_has_score_": {
  "data": {
   "lineno": 1662,
   "symbols_in_volume": [
    "fitter",
    "fitter.fit",
    "hasattr",
    "lifelines.tests.test_estimation.pytest",
    "lifelines.tests.test_estimation.rossi"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestRegressionFitters.test_regression_model_updates_score_": {
  "data": {
   "lineno": 1670,
   "symbols_in_volume": [
    "fitter",
    "fitter.fit",
    "fitter.score_",
    "hasattr",
    "lifelines.tests.test_estimation.pytest",
    "lifelines.tests.test_estimation.rossi"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestRegressionFitters.test_regression_models_will_not_fail_when_provided_int_times_on_prediction": {
  "data": {
   "lineno": 1699,
   "symbols_in_volume": [
    "fitter",
    "fitter.fit",
    "fitter.predict_survival_function",
    "lifelines.tests.test_estimation.rossi"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters": {
  "data": {
   "lineno": 316
  },
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_all_models_have_censoring_type": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "f",
    "fitter",
    "fitter.fit",
    "hasattr",
    "lifelines.tests.test_estimation.positive_sample_lifetimes"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_allow_dataframes": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "f",
    "numpy.random.exponential",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_ci_is_not_all_nan": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "f",
    "fitter",
    "fitter.confidence_interval_",
    "fitter.fit",
    "fitter.print_summary",
    "lifelines.tests.test_estimation.positive_sample_lifetimes",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_ci_labels": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "f",
    "fitter",
    "fitter.confidence_interval_.columns",
    "fitter.fit",
    "lifelines.tests.test_estimation.positive_sample_lifetimes",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_conditional_time_to_allows_custom_timelines": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "all",
    "f",
    "f.conditional_time_to_event_.index",
    "f.survival_function_.index",
    "fitter",
    "hasattr",
    "numpy.linspace",
    "numpy.random.binomial"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_confidence_interval_has_the_correct_order_so_plotting_doesnt_break": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "f",
    "f.confidence_interval_.columns",
    "f.fit",
    "lifelines.tests.test_estimation.sample_lifetimes"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_custom_timeline": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "f",
    "fitter",
    "fitter.cumulative_hazard_.index.values",
    "fitter.fit",
    "fitter.survival_function_.index.values",
    "hasattr",
    "lifelines.tests.test_estimation.positive_sample_lifetimes",
    "list",
    "sorted"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_custom_timeline_can_be_list_or_array": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "f",
    "fitter",
    "fitter.cumulative_hazard_.values",
    "fitter.fit",
    "fitter.survival_function_.values",
    "hasattr",
    "lifelines.tests.test_estimation.positive_sample_lifetimes",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_default_alpha_is_005": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "f"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_dill_serialization": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "dill.dumps",
    "dill.loads",
    "f",
    "fitter",
    "fitter.durations.sum",
    "fitter.fit",
    "lifelines.tests.test_estimation.positive_sample_lifetimes"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_divide_function": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "fitter",
    "lifelines.tests.test_estimation.positive_sample_lifetimes",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.log",
    "numpy.testing.assert_array_almost_equal",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_divide_function_with_labelled_data": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "fitter",
    "lifelines.tests.test_estimation.positive_sample_lifetimes",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_has_percentile_function": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "f",
    "f.median_survival_time_",
    "f.percentile",
    "fitter",
    "hasattr",
    "lifelines.tests.test_estimation.positive_sample_lifetimes",
    "print"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_joblib_serialization": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "f",
    "fitter",
    "fitter.durations.sum",
    "fitter.fit",
    "joblib.dump",
    "joblib.load",
    "lifelines.tests.test_estimation.positive_sample_lifetimes"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_label_is_a_property": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "f",
    "fitter",
    "fitter._label",
    "fitter.confidence_interval_.columns",
    "fitter.fit",
    "lifelines.tests.test_estimation.positive_sample_lifetimes"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_lists_as_input": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "f",
    "fitter",
    "fitter.fit",
    "fitter.fit_interval_censoring",
    "fitter.fit_left_censoring",
    "isinstance",
    "lifelines.NelsonAalenFitter",
    "lifelines.fitters.ParametericUnivariateFitter",
    "lifelines.tests.test_estimation.positive_sample_lifetimes",
    "list",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_pickle_serialization": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "f",
    "fitter",
    "fitter.durations.sum",
    "fitter.fit",
    "lifelines.tests.test_estimation.pickle",
    "lifelines.tests.test_estimation.positive_sample_lifetimes"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_predict_method_returns_an_approximation_if_not_in_the_index_and_interpolate_set_to_true": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "abs",
    "lifelines.KaplanMeierFitter"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_predict_method_returns_exact_value_if_given_an_observed_time": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "abs",
    "lifelines.KaplanMeierFitter"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_predict_method_returns_the_previous_value_if_not_in_the_index": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "abs",
    "lifelines.KaplanMeierFitter"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_predict_methods_returns_a_scalar_or_a_array_depending_on_input": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "collections.Iterable",
    "f",
    "fitter",
    "fitter.fit",
    "fitter.predict",
    "isinstance",
    "lifelines.tests.test_estimation.positive_sample_lifetimes"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_repr_with_fitter": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "f",
    "f.__repr__",
    "f._class_name",
    "f.fit",
    "lifelines.tests.test_estimation.sample_lifetimes"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_subtract_function_with_labelled_data": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "fitter",
    "lifelines.tests.test_estimation.positive_sample_lifetimes",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_subtraction_function": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "fitter",
    "lifelines.tests.test_estimation.positive_sample_lifetimes",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.testing.assert_array_almost_equal",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_typeerror_is_thrown_if_there_is_nans_in_the_duration_col": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "TypeError",
    "fitter",
    "lifelines.tests.test_estimation.pytest",
    "numpy.array",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_typeerror_is_thrown_if_there_is_nans_in_the_event_col": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "TypeError",
    "fitter",
    "lifelines.tests.test_estimation.pytest",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_univariate_fitters_allows_one_to_change_alpha_at_fit_time": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "f",
    "fitter",
    "fitter.confidence_interval_.columns",
    "fitter.fit",
    "lifelines.tests.test_estimation.positive_sample_lifetimes",
    "str"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_univariate_fitters_have_a_plot_method": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "f",
    "fitter",
    "fitter.fit",
    "hasattr",
    "lifelines.tests.test_estimation.positive_sample_lifetimes"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_univariate_fitters_ok_if_given_timedelta": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "UserWarning",
    "f",
    "f.timeline",
    "fitter",
    "lifelines.tests.test_estimation.pytest",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "pandas.Series",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_univariate_fitters_okay_if_given_boolean_col_with_object_dtype": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "UserWarning",
    "fitter",
    "lifelines.tests.test_estimation.pytest",
    "object",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_univarite_fitters_accept_late_entries": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "f",
    "f.entry",
    "fitter",
    "lifelines.tests.test_estimation.positive_sample_lifetimes"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_univarite_fitters_with_survival_function_have_conditional_time_to_": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "all",
    "f",
    "f.conditional_time_to_event_.index",
    "f.survival_function_.index",
    "fitter",
    "hasattr",
    "lifelines.tests.test_estimation.positive_sample_lifetimes"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.test_valueerror_is_thrown_if_alpha_out_of_bounds": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "ValueError",
    "fitter",
    "lifelines.tests.test_estimation.pytest"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestUnivariateFitters.univariate_fitters": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "lifelines.BreslowFlemingHarringtonFitter",
    "lifelines.ExponentialFitter",
    "lifelines.GeneralizedGammaFitter",
    "lifelines.KaplanMeierFitter",
    "lifelines.LogLogisticFitter",
    "lifelines.LogNormalFitter",
    "lifelines.NelsonAalenFitter",
    "lifelines.WeibullFitter",
    "lifelines.tests.test_estimation.PiecewiseExponentialFitterTesting",
    "lifelines.tests.test_estimation.pytest"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullAFTFitter": {
  "data": {
   "lineno": 2039
  },
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestWeibullAFTFitter.aft": {
  "data": {
   "lineno": 2040,
   "symbols_in_volume": [
    "lifelines.WeibullAFTFitter",
    "lifelines.tests.test_estimation.pytest"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullAFTFitter.test_aft_weibull_can_do_interval_prediction": {
  "data": {
   "lineno": 2305,
   "symbols_in_volume": [
    "lifelines.datasets.load_diabetes"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullAFTFitter.test_aft_weibull_with_ancillary_model_and_with_weights": {
  "data": {
   "lineno": 2292,
   "symbols_in_volume": [
    "lifelines.WeibullAFTFitter",
    "lifelines.tests.test_estimation.rossi",
    "numpy.log",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullAFTFitter.test_aft_weibull_with_weights": {
  "data": {
   "lineno": 2275,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.rossi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullAFTFitter.test_ancillary_None_is_same_as_False": {
  "data": {
   "lineno": 2163,
   "symbols_in_volume": [
    "lifelines.WeibullAFTFitter",
    "lifelines.tests.test_estimation.rossi",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullAFTFitter.test_ancillary_True_is_same_as_full_df": {
  "data": {
   "lineno": 2156,
   "symbols_in_volume": [
    "lifelines.WeibullAFTFitter",
    "lifelines.tests.test_estimation.rossi",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullAFTFitter.test_coefs_with_fitted_ancillary_params": {
  "data": {
   "lineno": 2141,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.rossi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullAFTFitter.test_fit_intercept": {
  "data": {
   "lineno": 2170,
   "symbols_in_volume": [
    "lifelines.WeibullAFTFitter",
    "lifelines.tests.test_estimation.rossi",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullAFTFitter.test_fitted_coefs_match_with_flexsurv_has": {
  "data": {
   "lineno": 2095,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.rossi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullAFTFitter.test_fitted_coefs_with_eha_when_left_truncated": {
  "data": {
   "lineno": 2044,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.rossi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullAFTFitter.test_fitted_log_likelihood_match_with_flexsurv_has": {
  "data": {
   "lineno": 2131,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.rossi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullAFTFitter.test_fitted_log_likelihood_ratio_test_match_with_flexsurv_has": {
  "data": {
   "lineno": 2136,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.rossi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullAFTFitter.test_fitted_se_match_with_flexsurv_has": {
  "data": {
   "lineno": 2113,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.rossi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullAFTFitter.test_fitted_se_with_eha_when_left_truncated": {
  "data": {
   "lineno": 2070,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.rossi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullAFTFitter.test_inference_is_the_same_if_using_right_censorship_or_interval_censorship_with_inf_endpoints": {
  "data": {
   "lineno": 2231,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.rossi",
    "numpy.inf",
    "numpy.where",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullAFTFitter.test_passing_in_additional_ancillary_df_in_predict_methods_if_fitted_with_one": {
  "data": {
   "lineno": 2180,
   "symbols_in_volume": [
    "lifelines.WeibullAFTFitter",
    "lifelines.tests.test_estimation.rossi"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullAFTFitter.test_passing_in_additional_ancillary_df_in_predict_methods_okay_if_not_fitted_with_one": {
  "data": {
   "lineno": 2193,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.rossi"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullAFTFitter.test_robust_errors_against_R": {
  "data": {
   "lineno": 2201,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.rossi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullAFTFitter.test_robust_errors_against_R_with_weights": {
  "data": {
   "lineno": 2216,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.rossi",
    "numpy.testing.assert_allclose",
    "print"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullAFTFitter.test_weibull_interval_censoring_inference_on_known_R_output": {
  "data": {
   "lineno": 2247,
   "symbols_in_volume": [
    "lifelines.datasets.load_diabetes",
    "numpy.log",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullFitter": {
  "data": {
   "lineno": 874
  },
  "type": "class"
 },
 "lifelines.tests.test_estimation.TestWeibullFitter.test_convergence_completes_for_ever_increasing_data_sizes": {
  "data": {
   "lineno": 956,
   "symbols_in_volume": [
    "abs",
    "lifelines.WeibullFitter",
    "numpy.random.weibull",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullFitter.test_exponential_data_produces_correct_inference_no_censorship": {
  "data": {
   "lineno": 935,
   "symbols_in_volume": [
    "abs",
    "lifelines.WeibullFitter",
    "numpy.log",
    "numpy.median",
    "numpy.random.exponential"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullFitter.test_exponential_data_produces_correct_inference_with_censorship": {
  "data": {
   "lineno": 945,
   "symbols_in_volume": [
    "abs",
    "lifelines.WeibullFitter",
    "numpy.log",
    "numpy.minimum",
    "numpy.random.exponential"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullFitter.test_left_censorship_inference": {
  "data": {
   "lineno": 875,
   "symbols_in_volume": [
    "flaky.flaky",
    "lifelines.WeibullFitter",
    "lifelines.tests.test_estimation.pytest",
    "numpy.maximum",
    "numpy.percentile",
    "numpy.random.randint",
    "numpy.random.weibull",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullFitter.test_weibull_fit_returns_float_timelines": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": [
    "lifelines.WeibullFitter",
    "numpy.linspace",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullFitter.test_weibull_model_does_not_except_negative_or_zero_values": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "ValueError",
    "lifelines.WeibullFitter",
    "lifelines.tests.test_estimation.pytest"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.TestWeibullFitter.test_weibull_with_delayed_entries": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "lifelines.WeibullFitter",
    "numpy.abs",
    "numpy.random.exponential"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.WeibullAFTFitter": {
  "data": {
   "shadows": "lifelines.WeibullAFTFitter"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.WeibullFitter": {
  "data": {
   "shadows": "lifelines.WeibullFitter"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.anp": {
  "data": {
   "shadows": "autograd.numpy"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.assert_index_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_index_equal"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.concordance_index": {
  "data": {
   "shadows": "lifelines.utils.concordance_index"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.data_nus": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.pytest",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.data_pred1": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.pytest",
    "numpy.random.normal",
    "numpy.random.uniform",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.data_pred2": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.pytest",
    "numpy.random.normal",
    "numpy.random.uniform",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.dump": {
  "data": {
   "shadows": "joblib.dump"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.dumps": {
  "data": {
   "shadows": "dill.dumps"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.expit": {
  "data": {
   "shadows": "autograd.scipy.special.expit"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.fisk": {
  "data": {
   "shadows": "scipy.stats.fisk"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.flaky": {
  "data": {
   "shadows": "flaky.flaky"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.generate_hazard_rates": {
  "data": {
   "shadows": "lifelines.generate_datasets.generate_hazard_rates"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.generate_random_lifetimes": {
  "data": {
   "shadows": "lifelines.generate_datasets.generate_random_lifetimes"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.invgamma": {
  "data": {
   "shadows": "scipy.stats.invgamma"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.invweibull": {
  "data": {
   "shadows": "scipy.stats.invweibull"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.k_fold_cross_validation": {
  "data": {
   "shadows": "lifelines.utils.k_fold_cross_validation"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.known_parametric_univariate_fitters": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "lifelines.ExponentialFitter",
    "lifelines.GeneralizedGammaFitter",
    "lifelines.LogLogisticFitter",
    "lifelines.LogNormalFitter",
    "lifelines.WeibullFitter",
    "lifelines.tests.test_estimation.PiecewiseExponentialFitterTesting",
    "lifelines.tests.test_estimation.pytest"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.load": {
  "data": {
   "shadows": "joblib.load"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.load_dfcv": {
  "data": {
   "shadows": "lifelines.datasets.load_dfcv"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.load_diabetes": {
  "data": {
   "shadows": "lifelines.datasets.load_diabetes"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.load_g3": {
  "data": {
   "shadows": "lifelines.datasets.load_g3"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.load_holly_molly_polly": {
  "data": {
   "shadows": "lifelines.datasets.load_holly_molly_polly"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.load_kidney_transplant": {
  "data": {
   "shadows": "lifelines.datasets.load_kidney_transplant"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.load_larynx": {
  "data": {
   "shadows": "lifelines.datasets.load_larynx"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.load_multicenter_aids_cohort_study": {
  "data": {
   "shadows": "lifelines.datasets.load_multicenter_aids_cohort_study"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.load_panel_test": {
  "data": {
   "shadows": "lifelines.datasets.load_panel_test"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.load_regression_dataset": {
  "data": {
   "shadows": "lifelines.datasets.load_regression_dataset"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.load_rossi": {
  "data": {
   "shadows": "lifelines.datasets.load_rossi"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.load_stanford_heart_transplants": {
  "data": {
   "shadows": "lifelines.datasets.load_stanford_heart_transplants"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.load_waltons": {
  "data": {
   "shadows": "lifelines.datasets.load_waltons"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.loads": {
  "data": {
   "shadows": "dill.loads"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.logistic": {
  "data": {
   "shadows": "scipy.stats.logistic"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.logit": {
  "data": {
   "shadows": "autograd.scipy.special.logit"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.median_survival_times": {
  "data": {
   "shadows": "lifelines.utils.median_survival_times"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.norm": {
  "data": {
   "shadows": "numpy.linalg.norm"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.normalize": {
  "data": {
   "shadows": "lifelines.utils.normalize"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.piecewise_exponential_survival_data": {
  "data": {
   "shadows": "lifelines.generate_datasets.piecewise_exponential_survival_data"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.positive_sample_lifetimes": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.pytest",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.qth_survival_time": {
  "data": {
   "shadows": "lifelines.utils.qth_survival_time"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.regression_dataset": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "lifelines.datasets.load_regression_dataset",
    "lifelines.tests.test_estimation.pytest"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.rossi": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "lifelines.datasets.load_rossi",
    "lifelines.tests.test_estimation.pytest"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.sample_lifetimes": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "lifelines.tests.test_estimation.pytest",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.stringio": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.to_episodic_format": {
  "data": {
   "shadows": "lifelines.utils.to_episodic_format"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.to_long_format": {
  "data": {
   "shadows": "lifelines.utils.to_long_format"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.waltons_dataset": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "lifelines.datasets.load_waltons",
    "lifelines.tests.test_estimation.pytest"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_estimation.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "lifelines.tests.test_estimation.weibull_min": {
  "data": {
   "shadows": "scipy.stats.weibull_min"
  },
  "type": "import"
 },
 "lifelines.tests.test_generate_datasets": {
  "data": {},
  "type": "module"
 },
 "lifelines.tests.test_generate_datasets.KaplanMeierFitter": {
  "data": {
   "shadows": "lifelines.KaplanMeierFitter"
  },
  "type": "import"
 },
 "lifelines.tests.test_generate_datasets.NelsonAalenFitter": {
  "data": {
   "shadows": "lifelines.NelsonAalenFitter"
  },
  "type": "import"
 },
 "lifelines.tests.test_generate_datasets.exponential_survival_data": {
  "data": {
   "shadows": "lifelines.generate_datasets.exponential_survival_data"
  },
  "type": "import"
 },
 "lifelines.tests.test_generate_datasets.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "lifelines.tests.test_generate_datasets.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "lifelines.tests.test_generate_datasets.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "lifelines.tests.test_generate_datasets.test_exponential_data_sets_correct_censor": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "abs",
    "lifelines.generate_datasets.exponential_survival_data"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_generate_datasets.test_exponential_data_sets_fit": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "lifelines.NelsonAalenFitter",
    "lifelines.generate_datasets.exponential_survival_data",
    "lifelines.tests.test_generate_datasets.os",
    "lifelines.tests.test_generate_datasets.pytest",
    "matplotlib.pyplot.title"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_generate_datasets.test_kmf_minimum_observation_bias": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "lifelines.KaplanMeierFitter",
    "lifelines.generate_datasets.exponential_survival_data",
    "lifelines.tests.test_generate_datasets.os",
    "lifelines.tests.test_generate_datasets.pytest",
    "matplotlib.pyplot.title"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting": {
  "data": {},
  "type": "module"
 },
 "lifelines.tests.test_plotting.AalenAdditiveFitter": {
  "data": {
   "shadows": "lifelines.AalenAdditiveFitter"
  },
  "type": "import"
 },
 "lifelines.tests.test_plotting.AalenJohansenFitter": {
  "data": {
   "shadows": "lifelines.AalenJohansenFitter"
  },
  "type": "import"
 },
 "lifelines.tests.test_plotting.CoxPHFitter": {
  "data": {
   "shadows": "lifelines.CoxPHFitter"
  },
  "type": "import"
 },
 "lifelines.tests.test_plotting.CoxTimeVaryingFitter": {
  "data": {
   "shadows": "lifelines.CoxTimeVaryingFitter"
  },
  "type": "import"
 },
 "lifelines.tests.test_plotting.ExponentialFitter": {
  "data": {
   "shadows": "lifelines.ExponentialFitter"
  },
  "type": "import"
 },
 "lifelines.tests.test_plotting.KaplanMeierFitter": {
  "data": {
   "shadows": "lifelines.KaplanMeierFitter"
  },
  "type": "import"
 },
 "lifelines.tests.test_plotting.LogLogisticFitter": {
  "data": {
   "shadows": "lifelines.LogLogisticFitter"
  },
  "type": "import"
 },
 "lifelines.tests.test_plotting.LogNormalFitter": {
  "data": {
   "shadows": "lifelines.LogNormalFitter"
  },
  "type": "import"
 },
 "lifelines.tests.test_plotting.NelsonAalenFitter": {
  "data": {
   "shadows": "lifelines.NelsonAalenFitter"
  },
  "type": "import"
 },
 "lifelines.tests.test_plotting.TestPlotting": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "lifelines.tests.test_plotting.os",
    "lifelines.tests.test_plotting.pytest"
   ]
  },
  "type": "class"
 },
 "lifelines.tests.test_plotting.TestPlotting.kmf": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "lifelines.KaplanMeierFitter",
    "lifelines.tests.test_plotting.pytest"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.setup_method": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "lifelines.tests.test_plotting.pytest",
    "matplotlib.pyplot"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_MACS_data_with_plot_lifetimes": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "lifelines.datasets.load_multicenter_aids_cohort_study",
    "lifelines.plotting.plot_lifetimes"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_aalen_additive_fit_no_censor": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "lifelines.AalenAdditiveFitter",
    "lifelines.generate_datasets.cumulative_integral",
    "lifelines.generate_datasets.generate_hazard_rates",
    "lifelines.generate_datasets.generate_random_lifetimes",
    "numpy.isinf",
    "numpy.linspace",
    "numpy.random.binomial",
    "pandas.DataFrame",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_aalen_additive_fit_with_censor": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "lifelines.AalenAdditiveFitter",
    "lifelines.generate_datasets.cumulative_integral",
    "lifelines.generate_datasets.generate_hazard_rates",
    "lifelines.generate_datasets.generate_random_lifetimes",
    "numpy.isinf",
    "numpy.linspace",
    "numpy.random.binomial",
    "pandas.DataFrame",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_aalen_additive_plot": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "lifelines.AalenAdditiveFitter",
    "lifelines.generate_datasets.generate_hazard_rates",
    "lifelines.generate_datasets.generate_random_lifetimes",
    "numpy.isinf",
    "numpy.linspace",
    "numpy.random.binomial",
    "slice"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_aalen_additive_smoothed_plot": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "lifelines.AalenAdditiveFitter",
    "lifelines.generate_datasets.generate_hazard_rates",
    "lifelines.generate_datasets.generate_random_lifetimes",
    "numpy.linspace",
    "numpy.random.binomial",
    "numpy.random.uniform"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_ajf_plotting": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "lifelines.AalenJohansenFitter"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_ajf_plotting_no_confidence_intervals": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "lifelines.AalenJohansenFitter"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_ajf_plotting_with_add_count_at_risk": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "lifelines.AalenJohansenFitter"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_coxph_plot_covariate_groups": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.datasets.load_rossi"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_coxph_plot_covariate_groups_with_multiple_variables": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.datasets.load_rossi"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_coxph_plot_covariate_groups_with_multiple_variables_and_strata": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.datasets.load_rossi",
    "numpy.random.choice"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_coxph_plot_covariate_groups_with_nonnumeric_strata": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.datasets.load_rossi",
    "numpy.random.choice"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_coxph_plot_covariate_groups_with_single_strata": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.datasets.load_rossi"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_coxph_plot_covariate_groups_with_strata": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.datasets.load_rossi"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_coxph_plotting": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.datasets.load_regression_dataset"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_coxph_plotting_with_hazards_ratios": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.datasets.load_regression_dataset"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_coxph_plotting_with_subset_of_columns": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.datasets.load_regression_dataset"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_coxtv_plotting": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "lifelines.CoxTimeVaryingFitter",
    "lifelines.datasets.load_stanford_heart_transplants"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_coxtv_plotting_with_subset_of_columns": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "lifelines.CoxTimeVaryingFitter",
    "lifelines.datasets.load_stanford_heart_transplants"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_flat_style_with_custom_censor_styles": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "numpy.random.exponential",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_kmf_left_censorship_plots": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "lifelines.KaplanMeierFitter",
    "lifelines.datasets.load_lcd"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_kmf_plotting": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.random.exponential"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_kmf_with_risk_counts": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "numpy.random.exponential"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_label_can_be_changed_on_univariate_fitters": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "lifelines.WeibullFitter",
    "numpy.linspace",
    "numpy.random.exponential"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_left_censorship_cdf_plots": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "enumerate",
    "lifelines.ExponentialFitter",
    "lifelines.LogLogisticFitter",
    "lifelines.LogNormalFitter",
    "lifelines.WeibullFitter",
    "lifelines.datasets.load_nh4",
    "lifelines.plotting.cdf_plot"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_loglogs_plot": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "numpy.random.exponential"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_naf_plot_cumulative_hazard": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "lifelines.NelsonAalenFitter",
    "numpy.random.exponential"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_naf_plot_cumulative_hazard_bandwidth_2": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "lifelines.NelsonAalenFitter",
    "numpy.random.exponential",
    "slice"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_naf_plot_cumulative_hazard_bandwith_1": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "lifelines.NelsonAalenFitter",
    "numpy.random.exponential",
    "slice"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_naf_plotting_slice": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "lifelines.NelsonAalenFitter",
    "numpy.random.exponential",
    "slice"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_naf_plotting_with_custom_colours": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "lifelines.NelsonAalenFitter",
    "numpy.random.exponential"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_negative_times_still_plots": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_parametric_plotting_with_show_censors": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "lifelines.WeibullFitter",
    "numpy.linspace",
    "numpy.random.exponential",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_parametric_univarite_fitters_has_cumhazard_plotting_methods": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "fitter",
    "lifelines.tests.test_estimation.known_parametric_univariate_fitters",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_parametric_univarite_fitters_has_hazard_plotting_methods": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "fitter",
    "lifelines.tests.test_estimation.known_parametric_univariate_fitters",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_parametric_univarite_fitters_has_survival_plotting_methods": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "fitter",
    "lifelines.tests.test_estimation.known_parametric_univariate_fitters",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_plot_lifetimes_calendar": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "lifelines.plotting.plot_lifetimes",
    "lifelines.tests.test_plotting.waltons",
    "numpy.random.uniform"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_plot_lifetimes_left_truncation": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "lifelines.plotting.plot_lifetimes",
    "lifelines.tests.test_plotting.waltons",
    "numpy.random.uniform"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_plot_lifetimes_relative": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "lifelines.plotting.plot_lifetimes",
    "lifelines.tests.test_plotting.waltons"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_qq_plot_left_censoring": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "enumerate",
    "lifelines.ExponentialFitter",
    "lifelines.LogLogisticFitter",
    "lifelines.LogNormalFitter",
    "lifelines.WeibullFitter",
    "lifelines.datasets.load_nh4",
    "lifelines.plotting.qq_plot"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_qq_plot_left_censoring2": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "enumerate",
    "lifelines.ExponentialFitter",
    "lifelines.LogLogisticFitter",
    "lifelines.LogNormalFitter",
    "lifelines.WeibullFitter",
    "lifelines.datasets.load_lcd",
    "lifelines.plotting.qq_plot"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_qq_plot_left_censoring_with_known_distribution": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "enumerate",
    "lifelines.ExponentialFitter",
    "lifelines.LogLogisticFitter",
    "lifelines.LogNormalFitter",
    "lifelines.WeibullFitter",
    "lifelines.plotting.qq_plot",
    "lifelines.tests.test_plotting.scipy",
    "numpy.maximum",
    "numpy.percentile",
    "numpy.random.randint",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_qq_plot_right_censoring_with_known_distribution": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "enumerate",
    "lifelines.ExponentialFitter",
    "lifelines.LogLogisticFitter",
    "lifelines.LogNormalFitter",
    "lifelines.WeibullFitter",
    "lifelines.plotting.qq_plot",
    "lifelines.tests.test_plotting.scipy",
    "numpy.minimum"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_right_censorship_cdf_plots": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "enumerate",
    "lifelines.ExponentialFitter",
    "lifelines.LogLogisticFitter",
    "lifelines.LogNormalFitter",
    "lifelines.WeibullFitter",
    "lifelines.datasets.load_rossi",
    "lifelines.plotting.cdf_plot"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_seaborn_doesnt_cause_kmf_plot_error": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "lifelines.KaplanMeierFitter",
    "lifelines.datasets.load_waltons"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_show_censor_with_discrete_date": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "numpy.random.binomial"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_show_censor_with_index_0": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "numpy.random.binomial"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_weibull_aft_plot_covariate_groups": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "lifelines.WeibullAFTFitter",
    "lifelines.datasets.load_rossi"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_weibull_aft_plot_covariate_groups_with_multiple_columns": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "lifelines.WeibullAFTFitter",
    "lifelines.datasets.load_rossi"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_weibull_aft_plotting": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "lifelines.WeibullAFTFitter",
    "lifelines.datasets.load_regression_dataset"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_weibull_aft_plotting_with_subset_of_columns": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "lifelines.WeibullAFTFitter",
    "lifelines.datasets.load_regression_dataset"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.TestPlotting.test_weibull_plotting": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "lifelines.WeibullFitter",
    "numpy.linspace",
    "numpy.random.exponential"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_plotting.WeibullAFTFitter": {
  "data": {
   "shadows": "lifelines.WeibullAFTFitter"
  },
  "type": "import"
 },
 "lifelines.tests.test_plotting.WeibullFitter": {
  "data": {
   "shadows": "lifelines.WeibullFitter"
  },
  "type": "import"
 },
 "lifelines.tests.test_plotting.cdf_plot": {
  "data": {
   "shadows": "lifelines.plotting.cdf_plot"
  },
  "type": "import"
 },
 "lifelines.tests.test_plotting.cumulative_integral": {
  "data": {
   "shadows": "lifelines.generate_datasets.cumulative_integral"
  },
  "type": "import"
 },
 "lifelines.tests.test_plotting.generate_hazard_rates": {
  "data": {
   "shadows": "lifelines.generate_datasets.generate_hazard_rates"
  },
  "type": "import"
 },
 "lifelines.tests.test_plotting.generate_random_lifetimes": {
  "data": {
   "shadows": "lifelines.generate_datasets.generate_random_lifetimes"
  },
  "type": "import"
 },
 "lifelines.tests.test_plotting.known_parametric_univariate_fitters": {
  "data": {
   "shadows": "lifelines.tests.test_estimation.known_parametric_univariate_fitters"
  },
  "type": "import"
 },
 "lifelines.tests.test_plotting.load_lcd": {
  "data": {
   "shadows": "lifelines.datasets.load_lcd"
  },
  "type": "import"
 },
 "lifelines.tests.test_plotting.load_multicenter_aids_cohort_study": {
  "data": {
   "shadows": "lifelines.datasets.load_multicenter_aids_cohort_study"
  },
  "type": "import"
 },
 "lifelines.tests.test_plotting.load_nh4": {
  "data": {
   "shadows": "lifelines.datasets.load_nh4"
  },
  "type": "import"
 },
 "lifelines.tests.test_plotting.load_panel_test": {
  "data": {
   "shadows": "lifelines.datasets.load_panel_test"
  },
  "type": "import"
 },
 "lifelines.tests.test_plotting.load_regression_dataset": {
  "data": {
   "shadows": "lifelines.datasets.load_regression_dataset"
  },
  "type": "import"
 },
 "lifelines.tests.test_plotting.load_rossi": {
  "data": {
   "shadows": "lifelines.datasets.load_rossi"
  },
  "type": "import"
 },
 "lifelines.tests.test_plotting.load_stanford_heart_transplants": {
  "data": {
   "shadows": "lifelines.datasets.load_stanford_heart_transplants"
  },
  "type": "import"
 },
 "lifelines.tests.test_plotting.load_waltons": {
  "data": {
   "shadows": "lifelines.datasets.load_waltons"
  },
  "type": "import"
 },
 "lifelines.tests.test_plotting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "lifelines.tests.test_plotting.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "lifelines.tests.test_plotting.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "lifelines.tests.test_plotting.plot_lifetimes": {
  "data": {
   "shadows": "lifelines.plotting.plot_lifetimes"
  },
  "type": "import"
 },
 "lifelines.tests.test_plotting.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "lifelines.tests.test_plotting.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "lifelines.tests.test_plotting.qq_plot": {
  "data": {
   "shadows": "lifelines.plotting.qq_plot"
  },
  "type": "import"
 },
 "lifelines.tests.test_plotting.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "lifelines.tests.test_plotting.sns": {
  "data": {
   "shadows": "seaborn"
  },
  "type": "import"
 },
 "lifelines.tests.test_plotting.waltons": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "lifelines.datasets.load_waltons",
    "lifelines.tests.test_plotting.pytest"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_requirements": {
  "data": {
   "symbols_in_volume": [
    "lifelines.tests.test_requirements.BASE_PATH",
    "pathlib.Path",
    "str"
   ]
  },
  "type": "module"
 },
 "lifelines.tests.test_requirements.BASE_PATH": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "lifelines.tests.test_requirements.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "lifelines.tests.test_requirements.REQUIREMENTS_PATH": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "lifelines.tests.test_requirements.TestRequirements": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "lifelines.tests.test_requirements.TestRequirements.test_requirements": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "lifelines.tests.test_requirements.REQUIREMENTS_PATH",
    "lifelines.tests.test_requirements.pkg_resources"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_requirements.distutils.text_file": {
  "data": {
   "shadows": "distutils.text_file"
  },
  "type": "import"
 },
 "lifelines.tests.test_requirements.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "lifelines.tests.test_statistics": {
  "data": {},
  "type": "module"
 },
 "lifelines.tests.test_statistics.CoxPHFitter": {
  "data": {
   "shadows": "lifelines.CoxPHFitter"
  },
  "type": "import"
 },
 "lifelines.tests.test_statistics.StatisticalWarning": {
  "data": {
   "shadows": "lifelines.utils.StatisticalWarning"
  },
  "type": "import"
 },
 "lifelines.tests.test_statistics.load_dd": {
  "data": {
   "shadows": "lifelines.datasets.load_dd"
  },
  "type": "import"
 },
 "lifelines.tests.test_statistics.load_g3": {
  "data": {
   "shadows": "lifelines.datasets.load_g3"
  },
  "type": "import"
 },
 "lifelines.tests.test_statistics.load_lymphoma": {
  "data": {
   "shadows": "lifelines.datasets.load_lymphoma"
  },
  "type": "import"
 },
 "lifelines.tests.test_statistics.load_regression_dataset": {
  "data": {
   "shadows": "lifelines.datasets.load_regression_dataset"
  },
  "type": "import"
 },
 "lifelines.tests.test_statistics.load_waltons": {
  "data": {
   "shadows": "lifelines.datasets.load_waltons"
  },
  "type": "import"
 },
 "lifelines.tests.test_statistics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "lifelines.tests.test_statistics.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "lifelines.tests.test_statistics.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "lifelines.tests.test_statistics.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "lifelines.tests.test_statistics.stats": {
  "data": {
   "shadows": "lifelines.statistics"
  },
  "type": "import"
 },
 "lifelines.tests.test_statistics.test_StatisticalResult_can_be_added": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "lifelines.statistics.StatisticalResult"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_StatisticalResult_kwargs": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "lifelines.statistics.StatisticalResult"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_equal_intensity_with_negative_data": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "lifelines.statistics.logrank_test",
    "numpy.random.normal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_integer_times_logrank_test": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "int",
    "lifelines.statistics.logrank_test",
    "numpy.random.exponential"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_load_lymphoma_logrank": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "abs",
    "lifelines.datasets.load_lymphoma",
    "lifelines.statistics.multivariate_logrank_test"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_log_rank_returns_None_if_equal_arrays": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "lifelines.statistics.logrank_test",
    "numpy.random.binomial",
    "numpy.random.exponential"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_log_rank_test_on_waltons_dataset": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "lifelines.datasets.load_waltons",
    "lifelines.statistics.logrank_test"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_logrank_test_is_symmetric": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "abs",
    "int",
    "lifelines.statistics.logrank_test",
    "numpy.random.exponential"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_logrank_test_output_against_R_1": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "abs",
    "lifelines.datasets.load_g3",
    "lifelines.statistics.logrank_test"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_logrank_test_output_against_R_2": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "abs",
    "lifelines.statistics.logrank_test",
    "numpy.ones_like"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_multivariate_log_rank_is_identital_to_log_rank_for_n_equals_2": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "lifelines.statistics.logrank_test",
    "lifelines.statistics.multivariate_logrank_test",
    "numpy.array",
    "numpy.r_",
    "numpy.random.binomial",
    "numpy.random.exponential"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_multivariate_logrank_on_dd_dataset": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "abs",
    "lifelines.datasets.load_dd",
    "lifelines.statistics.multivariate_logrank_test"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_multivariate_unequal_intensities": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "lifelines.statistics.multivariate_logrank_test",
    "numpy.random.binomial",
    "numpy.random.exponential"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_pairwise_allows_dataframes_and_gives_correct_counts": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "lifelines.statistics.pairwise_logrank_test",
    "numpy.arange",
    "numpy.empty",
    "numpy.random.binomial",
    "numpy.random.exponential",
    "numpy.tile",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_pairwise_waltons_dataset_is_significantly_different": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "lifelines.datasets.load_waltons",
    "lifelines.statistics.pairwise_logrank_test"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_power_under_cph": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "abs",
    "lifelines.statistics.power_under_cph"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_proportional_hazard_test": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.datasets.load_regression_dataset",
    "lifelines.statistics.proportional_hazard_test",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_proportional_hazard_test_with_all": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.statistics.proportional_hazard_test",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_proportional_hazard_test_with_kmf": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.statistics.proportional_hazard_test",
    "numpy.testing.assert_allclose",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_proportional_hazard_test_with_kmf_with_some_censorship": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.statistics.proportional_hazard_test",
    "numpy.testing.assert_allclose",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_proportional_hazard_test_with_kmf_with_some_censorship_and_weights": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.statistics.proportional_hazard_test",
    "lifelines.tests.test_statistics.pytest",
    "lifelines.utils.StatisticalWarning",
    "numpy.testing.assert_allclose",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_proportional_hazard_test_with_list": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.statistics.proportional_hazard_test",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_proportional_hazard_test_with_log_transform": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.datasets.load_regression_dataset",
    "lifelines.statistics.proportional_hazard_test",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_proportional_hazard_test_with_weights": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.statistics.proportional_hazard_test",
    "lifelines.tests.test_statistics.pytest",
    "lifelines.utils.StatisticalWarning",
    "numpy.testing.assert_allclose",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_proportional_hazard_test_with_weights_and_strata": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "lifelines.CoxPHFitter",
    "lifelines.statistics.proportional_hazard_test",
    "numpy.testing.assert_allclose",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_rank_test_output_against_R_no_censorship": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "abs",
    "lifelines.statistics.multivariate_logrank_test"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_rank_test_output_against_R_with_censorship": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "abs",
    "lifelines.statistics.multivariate_logrank_test"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_sample_size_necessary_under_cph": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "lifelines.statistics.sample_size_necessary_under_cph"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_survival_difference_at_fixed_point_in_time_test": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "lifelines.datasets.load_waltons",
    "lifelines.statistics.survival_difference_at_fixed_point_in_time_test"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_unequal_intensity_event_observed": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "lifelines.statistics.logrank_test",
    "numpy.random.binomial",
    "numpy.random.exponential"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_unequal_intensity_with_negative_data": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "lifelines.statistics.logrank_test",
    "numpy.random.normal"
   ]
  },
  "type": "function"
 },
 "lifelines.tests.test_statistics.test_unequal_intensity_with_random_data": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "lifelines.statistics.logrank_test",
    "numpy.random.exponential"
   ]
  },
  "type": "function"
 },
 "lifelines.utils": {
  "data": {},
  "type": "module"
 },
 "lifelines.utils.ApproximationWarning": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "RuntimeWarning"
   ]
  },
  "type": "class"
 },
 "lifelines.utils.CensoringType": {
  "data": {
   "lineno": 37
  },
  "type": "class"
 },
 "lifelines.utils.CensoringType.get_human_readable_censoring_type": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.CensoringType.interval_censoring": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.CensoringType.interval_censoring.f": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "function",
    "functools.wraps"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.CensoringType.is_interval_censoring": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.CensoringType.is_left_censoring": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.CensoringType.is_right_censoring": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.CensoringType.left_censoring": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.CensoringType.left_censoring.f": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "function",
    "functools.wraps"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.CensoringType.right_censoring": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.CensoringType.right_censoring.f": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "function",
    "functools.wraps"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.ConvergenceError": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "lifelines.utils.ConvergenceError.__init__": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "lifelines.utils.ConvergenceError",
    "super"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.ConvergenceWarning": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "RuntimeWarning"
   ]
  },
  "type": "class"
 },
 "lifelines.utils.DataframeSliceDict": {
  "data": {
   "lineno": 1596
  },
  "type": "class"
 },
 "lifelines.utils.DataframeSliceDict.__getitem__": {
  "data": {
   "lineno": 1602
  },
  "type": "function"
 },
 "lifelines.utils.DataframeSliceDict.__init__": {
  "data": {
   "lineno": 1597,
   "symbols_in_volume": [
    "len",
    "sum"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.DataframeSliceDict.__iter__": {
  "data": {
   "lineno": 1609
  },
  "type": "function"
 },
 "lifelines.utils.DataframeSliceDict.filter": {
  "data": {
   "lineno": 1613,
   "symbols_in_volume": [
    "lifelines.utils.DataframeSliceDict",
    "lifelines.utils._to_1d_array"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.DataframeSliceDict.iterdicts": {
  "data": {
   "lineno": 1617,
   "symbols_in_volume": [
    "lifelines.utils.DataframeSliceDict"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.StatError": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "lifelines.utils.StatisticalWarning": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "RuntimeWarning"
   ]
  },
  "type": "class"
 },
 "lifelines.utils.StepSizer": {
  "data": {
   "lineno": 1446
  },
  "type": "class"
 },
 "lifelines.utils.StepSizer.__init__": {
  "data": {
   "lineno": 1459,
   "symbols_in_volume": [
    "lifelines.utils.coalesce"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.StepSizer._is_monotonically_decreasing": {
  "data": {
   "lineno": 1496,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.diff",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.StepSizer.next": {
  "data": {
   "lineno": 1500
  },
  "type": "function"
 },
 "lifelines.utils.StepSizer.update": {
  "data": {
   "lineno": 1466,
   "symbols_in_volume": [
    "len",
    "min"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "lifelines.utils._additive_estimate": {
  "data": {
   "lineno": 829,
   "symbols_in_volume": [
    "_additive_f",
    "_additive_var",
    "events",
    "events.copy",
    "events.cumsum",
    "events.sort_index",
    "events.sum",
    "numpy.cumsum",
    "sorted"
   ]
  },
  "type": "function"
 },
 "lifelines.utils._get_index": {
  "data": {
   "lineno": 895,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "pandas.DataFrame",
    "range"
   ]
  },
  "type": "function"
 },
 "lifelines.utils._group_event_table_by_intervals": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.percentile",
    "pandas.cut"
   ]
  },
  "type": "function"
 },
 "lifelines.utils._low_var": {
  "data": {
   "lineno": 1023
  },
  "type": "function"
 },
 "lifelines.utils._preprocess_inputs": {
  "data": {
   "lineno": 865,
   "symbols_in_volume": [
    "float",
    "int",
    "len",
    "lifelines.utils.survival_table_from_events",
    "numpy.asarray",
    "numpy.ones",
    "numpy.ones_like",
    "pass_for_numeric_dtypes_or_raise_array"
   ]
  },
  "type": "function"
 },
 "lifelines.utils._to_1d_array": {
  "data": {
   "lineno": 1504,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "numpy.atleast_1d"
   ]
  },
  "type": "function"
 },
 "lifelines.utils._to_list": {
  "data": {
   "lineno": 1514,
   "symbols_in_volume": [
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "lifelines.utils._to_tuple": {
  "data": {
   "lineno": 1520,
   "symbols_in_volume": [
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.add_covariate_to_timeline": {
  "data": {
   "lineno": 1258,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "any"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.add_covariate_to_timeline.expand": {
  "data": {
   "lineno": 1340,
   "symbols_in_volume": [
    "KeyError",
    "bool",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.add_covariate_to_timeline.remove_redundant_rows": {
  "data": {
   "lineno": 1319
  },
  "type": "function"
 },
 "lifelines.utils.add_covariate_to_timeline.transform_cv_to_long_format": {
  "data": {
   "lineno": 1337
  },
  "type": "function"
 },
 "lifelines.utils.btree": {
  "data": {},
  "type": "module"
 },
 "lifelines.utils.btree._BTree": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "lifelines.utils.btree._BTree.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "int",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.btree._BTree.__len__": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "lifelines.utils.btree._BTree._treeify": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.delete",
    "numpy.empty_like",
    "numpy.log2",
    "numpy.s_",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.btree._BTree.insert": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.btree._BTree.rank": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.btree.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "lifelines.utils.check_complete_separation": {
  "data": {
   "lineno": 1093,
   "symbols_in_volume": [
    "events",
    "lifelines.utils.check_complete_separation_close_to_perfect_correlation",
    "lifelines.utils.check_complete_separation_low_variance"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.check_complete_separation_close_to_perfect_correlation": {
  "data": {
   "lineno": 1070,
   "symbols_in_volume": [
    "abs",
    "lifelines.utils.ConvergenceWarning",
    "lifelines.utils.correlation",
    "lifelines.utils.warnings",
    "numpy.errstate",
    "pandas.Series",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.check_complete_separation_low_variance": {
  "data": {
   "lineno": 1040,
   "symbols_in_volume": [
    "bool",
    "events",
    "events.astype",
    "lifelines.utils.ConvergenceWarning",
    "lifelines.utils._low_var",
    "lifelines.utils.warnings",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.check_entry_times": {
  "data": {
   "lineno": 1064,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.check_for_immediate_deaths": {
  "data": {
   "lineno": 944,
   "symbols_in_volume": [
    "ValueError",
    "events.any",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.check_for_instantaneous_events_at_death_time": {
  "data": {
   "lineno": 973,
   "symbols_in_volume": [
    "events.any",
    "events.index.tolist",
    "events.tolist",
    "lifelines.utils.ConvergenceWarning",
    "lifelines.utils.warnings",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.check_for_instantaneous_events_at_time_zero": {
  "data": {
   "lineno": 959,
   "symbols_in_volume": [
    "RuntimeWarning",
    "lifelines.utils.warnings",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.check_for_numeric_dtypes_or_raise": {
  "data": {
   "lineno": 933,
   "symbols_in_volume": [
    "TypeError",
    "len"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.check_for_overlapping_intervals": {
  "data": {
   "lineno": 1004,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.check_low_var": {
  "data": {
   "lineno": 1027,
   "symbols_in_volume": [
    "lifelines.utils.ConvergenceWarning",
    "lifelines.utils._low_var",
    "lifelines.utils.warnings",
    "list",
    "str",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.check_nans_or_infs": {
  "data": {
   "lineno": 1098,
   "symbols_in_volume": [
    "TypeError",
    "UserWarning",
    "float",
    "isinstance",
    "lifelines.utils.warnings",
    "numpy.isinf",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.check_positivity": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": [
    "ValueError",
    "numpy.any"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.coalesce": {
  "data": {
   "lineno": 647
  },
  "type": "function"
 },
 "lifelines.utils.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "lifelines.utils.concordance": {
  "data": {},
  "type": "module"
 },
 "lifelines.utils.concordance._BTree": {
  "data": {
   "shadows": "lifelines.utils.btree._BTree"
  },
  "type": "import"
 },
 "lifelines.utils.concordance._concordance_ratio": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ZeroDivisionError"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.concordance._concordance_summary_statistics": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "_handle_pairs",
    "bool",
    "len",
    "lifelines.utils.btree._BTree",
    "numpy.argsort",
    "numpy.int64",
    "numpy.logical_not",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.concordance._handle_pairs": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "len",
    "numpy.int64",
    "range"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.concordance._naive_concordance_summary_statistics": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "_concordance_value",
    "_valid_comparison",
    "enumerate",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.concordance._naive_concordance_summary_statistics._concordance_value": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "lifelines.utils.concordance._naive_concordance_summary_statistics._valid_comparison": {
  "data": {
   "lineno": 188
  },
  "type": "function"
 },
 "lifelines.utils.concordance._preprocess_scoring_data": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "numpy.asarray",
    "numpy.isnan",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.concordance.concordance_index": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "_concordance_ratio",
    "_concordance_summary_statistics",
    "_preprocess_scoring_data"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.concordance.naive_concordance_index": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "_preprocess_scoring_data",
    "lifelines.utils.concordance._concordance_ratio",
    "lifelines.utils.concordance._naive_concordance_summary_statistics"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.concordance.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "lifelines.utils.concordance_index": {
  "data": {
   "shadows": "lifelines.utils.concordance.concordance_index"
  },
  "type": "import"
 },
 "lifelines.utils.correlation": {
  "data": {
   "lineno": 1060,
   "symbols_in_volume": [
    "numpy.corrcoef"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.covariates_from_event_matrix": {
  "data": {
   "lineno": 1399,
   "symbols_in_volume": [
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "lifelines.utils.datetimes_to_durations": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "UserWarning",
    "datetime.datetime.today",
    "float",
    "lifelines.utils.warnings",
    "pandas.Series",
    "pandas.isnull",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "lifelines.utils.epanechnikov_kernel": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.format_exp_floats": {
  "data": {
   "lineno": 1531
  },
  "type": "function"
 },
 "lifelines.utils.format_floats": {
  "data": {
   "lineno": 1541
  },
  "type": "function"
 },
 "lifelines.utils.format_p_value": {
  "data": {
   "lineno": 1526
  },
  "type": "function"
 },
 "lifelines.utils.group_survival_table_from_events": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "numpy.asarray",
    "numpy.max",
    "numpy.min",
    "numpy.zeros",
    "pandas.Series",
    "str",
    "survival_table_from_events"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.interpolate_at_times": {
  "data": {
   "lineno": 1553,
   "symbols_in_volume": [
    "numpy.interp"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.interpolate_at_times_and_return_pandas": {
  "data": {
   "lineno": 1571,
   "symbols_in_volume": [
    "AttributeError",
    "lifelines.utils._to_1d_array",
    "lifelines.utils.interpolate_at_times",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.inv_normal_cdf": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "scipy.stats.norm.ppf"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.k_fold_cross_validation": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "TypeError",
    "_to_list",
    "evaluation_measure",
    "getattr",
    "len",
    "lifelines.utils.concordance.concordance_index",
    "list",
    "numpy.array",
    "numpy.random.permutation",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.leading_space": {
  "data": {
   "lineno": 1545
  },
  "type": "function"
 },
 "lifelines.utils.lifelines": {
  "data": {
   "shadows": "lifelines"
  },
  "type": "import"
 },
 "lifelines.utils.lowess": {
  "data": {},
  "type": "module"
 },
 "lifelines.utils.lowess.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "lifelines.utils.lowess.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "lifelines.utils.lowess.lowess": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "int",
    "len",
    "math.ceil",
    "numpy.abs",
    "numpy.array",
    "numpy.clip",
    "numpy.median",
    "numpy.ones",
    "numpy.sort",
    "numpy.sum",
    "numpy.zeros",
    "range",
    "scipy.linalg.solve"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.lowess.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "lifelines.utils.map_leading_space": {
  "data": {
   "lineno": 1549,
   "symbols_in_volume": [
    "lifelines.utils.leading_space",
    "list"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.median_survival_times": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "lifelines.utils.lifelines",
    "lifelines.utils.qth_survival_times",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.normalize": {
  "data": {
   "lineno": 761
  },
  "type": "function"
 },
 "lifelines.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "lifelines.utils.pass_for_numeric_dtypes_or_raise_array": {
  "data": {
   "lineno": 905,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.asarray",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.to_numeric"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "lifelines.utils.qth_survival_time": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "lifelines.utils.lifelines",
    "numpy.inf",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.qth_survival_times": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "ValueError",
    "_to_1d_array",
    "float",
    "pandas.DataFrame",
    "pandas.Series",
    "qth_survival_time"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.quad": {
  "data": {
   "shadows": "scipy.integrate.quad"
  },
  "type": "import"
 },
 "lifelines.utils.restricted_mean_survival_time": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "lifelines.utils.ApproximationWarning",
    "lifelines.utils.lifelines",
    "lifelines.utils.warnings",
    "numpy.inf",
    "pandas.DataFrame",
    "scipy.integrate.quad",
    "scipy.integrate.trapz"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.ridge_regression": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": [
    "numpy.c_",
    "numpy.dot",
    "numpy.eye",
    "scipy.linalg.solve"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.safe_exp": {
  "data": {
   "symbols_in_volume": [
    "autograd.extend.defvjp",
    "autograd.numpy.finfo",
    "autograd.numpy.log",
    "float",
    "lifelines.utils.safe_exp.safe_exp",
    "lifelines.utils.safe_exp.safe_exp_vjp"
   ]
  },
  "type": "module"
 },
 "lifelines.utils.safe_exp.MAX": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "lifelines.utils.safe_exp.defvjp": {
  "data": {
   "shadows": "autograd.extend.defvjp"
  },
  "type": "import"
 },
 "lifelines.utils.safe_exp.np": {
  "data": {
   "shadows": "autograd.numpy"
  },
  "type": "import"
 },
 "lifelines.utils.safe_exp.primitive": {
  "data": {
   "shadows": "autograd.extend.primitive"
  },
  "type": "import"
 },
 "lifelines.utils.safe_exp.safe_exp": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "autograd.extend.primitive",
    "autograd.numpy.clip",
    "autograd.numpy.exp",
    "autograd.numpy.inf",
    "lifelines.utils.safe_exp.MAX"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.safe_exp.safe_exp_vjp": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "lifelines.utils.safe_zip": {
  "data": {
   "lineno": 1587,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.sklearn_adapter": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "lifelines.utils.sklearn_adapter.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "lifelines.utils.sklearn_adapter.MetaEstimatorMixin": {
  "data": {
   "shadows": "sklearn.base.MetaEstimatorMixin"
  },
  "type": "import"
 },
 "lifelines.utils.sklearn_adapter.RegressorMixin": {
  "data": {
   "shadows": "sklearn.base.RegressorMixin"
  },
  "type": "import"
 },
 "lifelines.utils.sklearn_adapter._SklearnModel": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.MetaEstimatorMixin",
    "sklearn.base.RegressorMixin"
   ]
  },
  "type": "class"
 },
 "lifelines.utils.sklearn_adapter._SklearnModel.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "lifelines.utils.sklearn_adapter.filter_kwargs"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.sklearn_adapter._SklearnModel._eventColumn": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.sklearn_adapter._SklearnModel._yColumn": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.sklearn_adapter._SklearnModel.fit": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ValueError",
    "fit",
    "getattr",
    "isinstance",
    "len",
    "lifelines.utils.sklearn_adapter.filter_kwargs",
    "pandas.DataFrame",
    "type"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.sklearn_adapter._SklearnModel.get_params": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "getattr",
    "lifelines.utils.sklearn_adapter.inspect"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.sklearn_adapter._SklearnModel.predict": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.sklearn_adapter._SklearnModel.score": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.sklearn_adapter._SklearnModel.set_params": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.sklearn_adapter.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "lifelines.utils.sklearn_adapter.filter_kwargs": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "lifelines.utils.sklearn_adapter.inspect"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.sklearn_adapter.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "lifelines.utils.sklearn_adapter.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "lifelines.utils.sklearn_adapter.sklearn_adapter": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "globals",
    "lifelines.utils.sklearn_adapter._SklearnModel",
    "staticmethod",
    "type"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.solve": {
  "data": {
   "shadows": "scipy.linalg.solve"
  },
  "type": "import"
 },
 "lifelines.utils.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "lifelines.utils.string_justify": {
  "data": {
   "lineno": 1584
  },
  "type": "constant"
 },
 "lifelines.utils.survival_events_from_table": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.survival_table_from_events": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "ValueError",
    "_group_event_table_by_intervals",
    "bool",
    "float",
    "int",
    "min",
    "numpy.any",
    "numpy.asarray",
    "numpy.ones",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.to_episodic_format": {
  "data": {
   "lineno": 1122,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.arange",
    "numpy.ceil",
    "numpy.empty",
    "numpy.tile",
    "object",
    "object.any",
    "pandas.DataFrame",
    "to_long_format"
   ]
  },
  "type": "function"
 },
 "lifelines.utils.to_long_format": {
  "data": {
   "lineno": 1233
  },
  "type": "function"
 },
 "lifelines.utils.trapz": {
  "data": {
   "shadows": "scipy.integrate.trapz"
  },
  "type": "import"
 },
 "lifelines.utils.unnormalize": {
  "data": {
   "lineno": 772
  },
  "type": "function"
 },
 "lifelines.utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "lifelines.utils.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "lifelines.version": {
  "data": {},
  "type": "module"
 },
 "lifelines.version.__version__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "lifelines.version.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 }
}