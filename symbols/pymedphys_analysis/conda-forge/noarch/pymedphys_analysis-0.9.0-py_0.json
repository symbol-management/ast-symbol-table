{
 "pymedphys_analysis": {
  "data": {},
  "type": "module"
 },
 "pymedphys_analysis._install_requires": {
  "data": {},
  "type": "module"
 },
 "pymedphys_analysis._install_requires.install_requires": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "pymedphys_analysis._version": {
  "data": {},
  "type": "module"
 },
 "pymedphys_analysis._version.__version__": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "pymedphys_analysis._version.version_info": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "pymedphys_analysis.geometry": {
  "data": {},
  "type": "module"
 },
 "pymedphys_analysis.geometry.cube": {
  "data": {},
  "type": "module"
 },
 "pymedphys_analysis.geometry.cube.Poly3DCollection": {
  "data": {
   "shadows": "mpl_toolkits.mplot3d.art3d.Poly3DCollection"
  },
  "type": "import"
 },
 "pymedphys_analysis.geometry.cube.basinhopping": {
  "data": {
   "shadows": "scipy.optimize.basinhopping"
  },
  "type": "import"
 },
 "pymedphys_analysis.geometry.cube.calc_min_distance": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.linalg.norm",
    "numpy.min",
    "numpy.sum",
    "pymedphys_analysis.geometry.cube.cube_vectors",
    "pymedphys_analysis.geometry.cube.cube_vertices"
   ]
  },
  "type": "function"
 },
 "pymedphys_analysis.geometry.cube.contour_to_points": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "numpy.concatenate",
    "pymedphys_analysis.geometry.cube.resample_contour_set"
   ]
  },
  "type": "function"
 },
 "pymedphys_analysis.geometry.cube.cube_vectors": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "pymedphys_analysis.geometry.cube.get_cube_definition_array"
   ]
  },
  "type": "function"
 },
 "pymedphys_analysis.geometry.cube.cube_vertices": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "numpy.array",
    "pymedphys_analysis.geometry.cube.cube_vectors",
    "pymedphys_analysis.geometry.cube.get_cube_definition_array"
   ]
  },
  "type": "function"
 },
 "pymedphys_analysis.geometry.cube.cubify_cube_definition": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.cross",
    "numpy.linalg.norm",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pymedphys_analysis.geometry.cube.dose_inside_cube": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.invert",
    "numpy.meshgrid",
    "numpy.ravel",
    "numpy.where",
    "print",
    "pymedphys_analysis.geometry.cube.cube_vertices",
    "pymedphys_analysis.geometry.cube.cubify_cube_definition",
    "pymedphys_analysis.geometry.cube.get_bounding_box",
    "pymedphys_analysis.geometry.cube.plot_cube",
    "pymedphys_analysis.geometry.cube.test_if_in_cube",
    "zip"
   ]
  },
  "type": "function"
 },
 "pymedphys_analysis.geometry.cube.get_bounding_box": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "pymedphys_analysis.geometry.cube.get_cube_definition_array": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "list",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pymedphys_analysis.geometry.cube.get_interpolated_dose": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "dose_interpolation",
    "numpy.array",
    "numpy.ravel",
    "numpy.reshape",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "pymedphys_analysis.geometry.cube.get_structure_aligned_cube": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.concatenate",
    "numpy.max",
    "numpy.min",
    "pymedphys_analysis.geometry.cube.contour_to_points",
    "pymedphys_analysis.geometry.cube.cubify_cube_definition",
    "pymedphys_analysis.geometry.cube.pydicom",
    "pymedphys_dicom.dicom.pull_structure",
    "scipy.optimize.basinhopping",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pymedphys_analysis.geometry.cube.get_structure_aligned_cube.print_fun": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "int",
    "print"
   ]
  },
  "type": "function"
 },
 "pymedphys_analysis.geometry.cube.get_structure_aligned_cube.to_minimise": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "calc_min_distance",
    "numpy.sum",
    "pymedphys_analysis.geometry.cube.cubify_cube_definition",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pymedphys_analysis.geometry.cube.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pymedphys_analysis.geometry.cube.plot_cube": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "matplotlib.pyplot.figure",
    "mpl_toolkits.mplot3d.art3d.Poly3DCollection",
    "pymedphys_analysis.geometry.cube.cube_vertices",
    "pymedphys_analysis.geometry.cube.get_bounding_box"
   ]
  },
  "type": "function"
 },
 "pymedphys_analysis.geometry.cube.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pymedphys_analysis.geometry.cube.pull_structure": {
  "data": {
   "shadows": "pymedphys_dicom.dicom.pull_structure"
  },
  "type": "import"
 },
 "pymedphys_analysis.geometry.cube.pydicom": {
  "data": {
   "shadows": "pydicom"
  },
  "type": "import"
 },
 "pymedphys_analysis.geometry.cube.resample_contour": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "numpy.linspace",
    "scipy.interpolate.splev",
    "scipy.interpolate.splprep"
   ]
  },
  "type": "function"
 },
 "pymedphys_analysis.geometry.cube.resample_contour_set": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "pymedphys_analysis.geometry.cube.resample_contour",
    "zip"
   ]
  },
  "type": "function"
 },
 "pymedphys_analysis.geometry.cube.splev": {
  "data": {
   "shadows": "scipy.interpolate.splev"
  },
  "type": "import"
 },
 "pymedphys_analysis.geometry.cube.splprep": {
  "data": {
   "shadows": "scipy.interpolate.splprep"
  },
  "type": "import"
 },
 "pymedphys_analysis.geometry.cube.test_if_in_cube": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "pymedphys_analysis.geometry.cube.test_if_in_range"
   ]
  },
  "type": "function"
 },
 "pymedphys_analysis.geometry.cube.test_if_in_range": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot"
   ]
  },
  "type": "function"
 }
}