{
 "spopt": {
  "data": {},
  "type": "module"
 },
 "spopt.BaseClass": {
  "data": {},
  "type": "module"
 },
 "spopt.BaseClass.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "spopt.BaseClass.BaseSpOptExactSolver": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "spopt.BaseClass.BaseSpOptSolver"
   ]
  },
  "type": "class"
 },
 "spopt.BaseClass.BaseSpOptExactSolver.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ImportError",
    "ortools.linear_solver.pywraplp.Solver",
    "ortools.linear_solver.pywraplp.Solver.CBC_MIXED_INTEGER_PROGRAMMING"
   ]
  },
  "type": "function"
 },
 "spopt.BaseClass.BaseSpOptExactSolver.solve": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "spopt.BaseClass.BaseSpOptHeuristicSolver": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "spopt.BaseClass.BaseSpOptSolver"
   ]
  },
  "type": "class"
 },
 "spopt.BaseClass.BaseSpOptHeuristicSolver.solve": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "spopt.BaseClass.BaseSpOptSolver": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "abc.ABC"
   ]
  },
  "type": "class"
 },
 "spopt.BaseClass.BaseSpOptSolver.solve": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "spopt.BaseClass.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "spopt.BaseClass.pywraplp": {
  "data": {
   "shadows": "ortools.linear_solver.pywraplp"
  },
  "type": "import"
 },
 "spopt.__version__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "spopt.region": {
  "data": {},
  "type": "module"
 },
 "spopt.region.azp": {
  "data": {},
  "type": "module"
 },
 "spopt.region.azp.AZP": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "spopt.region.azp.AZP.__init__": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "spopt.region.objective_function.ObjectiveFunctionPairwise"
   ]
  },
  "type": "function"
 },
 "spopt.region.azp.AZP.solve": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "AZP_orig"
   ]
  },
  "type": "function"
 },
 "spopt.region.azp.AZPBasicTabu": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": [
    "spopt.region.azp.AZPTabu"
   ]
  },
  "type": "class"
 },
 "spopt.region.azp.AZPBasicTabu.__init__": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "collections.deque",
    "super"
   ]
  },
  "type": "function"
 },
 "spopt.region.azp.AZPBasicTabu._azp_connected_component": {
  "data": {
   "lineno": 879,
   "symbols_in_volume": [
    "float",
    "len",
    "list",
    "numpy.unique",
    "numpy.where",
    "range",
    "spopt.region.csgraph_utils.is_connected",
    "spopt.region.csgraph_utils.neighbors",
    "spopt.region.csgraph_utils.sub_adj_matrix",
    "spopt.region.util.Move",
    "spopt.region.util.count",
    "spopt.region.util.random_element_from",
    "tuple"
   ]
  },
  "type": "function"
 },
 "spopt.region.azp.AZPReactiveTabu": {
  "data": {
   "lineno": 978,
   "symbols_in_volume": [
    "spopt.region.azp.AZPTabu"
   ]
  },
  "type": "class"
 },
 "spopt.region.azp.AZPReactiveTabu.__init__": {
  "data": {
   "lineno": 989,
   "symbols_in_volume": [
    "ValueError",
    "collections.deque",
    "super"
   ]
  },
  "type": "function"
 },
 "spopt.region.azp.AZPReactiveTabu._azp_connected_component": {
  "data": {
   "lineno": 1021,
   "symbols_in_volume": [
    "IndexError",
    "collections.deque",
    "enumerate",
    "float",
    "len",
    "list",
    "max",
    "numpy.array",
    "numpy.unique",
    "numpy.where",
    "range",
    "reversed",
    "spopt.region.azp.math",
    "spopt.region.azp.random",
    "spopt.region.csgraph_utils.is_connected",
    "spopt.region.csgraph_utils.neighbors",
    "spopt.region.csgraph_utils.sub_adj_matrix",
    "spopt.region.util.Move",
    "spopt.region.util.count",
    "tuple"
   ]
  },
  "type": "function"
 },
 "spopt.region.azp.AZPSimulatedAnnealing": {
  "data": {
   "lineno": 511
  },
  "type": "class"
 },
 "spopt.region.azp.AZPSimulatedAnnealing.__init__": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "NotImplementedError",
    "float"
   ]
  },
  "type": "function"
 },
 "spopt.region.azp.AZPSimulatedAnnealing.fit_from_dict": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "numpy.int32",
    "sorted",
    "spopt.region.objective_function.ObjectiveFunctionPairwise",
    "spopt.region.util.array_from_dict_values",
    "spopt.region.util.scipy_sparse_matrix_from_dict"
   ]
  },
  "type": "function"
 },
 "spopt.region.azp.AZPSimulatedAnnealing.fit_from_geodataframe": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "spopt.region.objective_function.ObjectiveFunctionPairwise",
    "spopt.region.util.array_from_df_col",
    "spopt.region.util.w_from_gdf"
   ]
  },
  "type": "function"
 },
 "spopt.region.azp.AZPSimulatedAnnealing.fit_from_networkx": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "networkx.to_scipy_sparse_matrix",
    "spopt.region.objective_function.ObjectiveFunctionPairwise",
    "spopt.region.util.array_from_graph_or_dict"
   ]
  },
  "type": "function"
 },
 "spopt.region.azp.AZPSimulatedAnnealing.fit_from_scipy_sparse_matrix": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": [
    "ValueError",
    "spopt.region.azp.AZP",
    "spopt.region.azp_util.AllowMoveAZPSimulatedAnnealing",
    "spopt.region.objective_function.ObjectiveFunctionPairwise",
    "tuple"
   ]
  },
  "type": "function"
 },
 "spopt.region.azp.AZPSimulatedAnnealing.fit_from_w": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": [
    "spopt.region.objective_function.ObjectiveFunctionPairwise",
    "spopt.region.util.scipy_sparse_matrix_from_w"
   ]
  },
  "type": "function"
 },
 "spopt.region.azp.AZPSimulatedAnnealing.move_made_alert": {
  "data": {
   "lineno": 818
  },
  "type": "function"
 },
 "spopt.region.azp.AZPSimulatedAnnealing.sa_moves_alert": {
  "data": {
   "lineno": 815
  },
  "type": "function"
 },
 "spopt.region.azp.AZPTabu": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "spopt.region.azp.AZP",
    "spopt.region.azp.abc"
   ]
  },
  "type": "class"
 },
 "spopt.region.azp.AZPTabu._make_move": {
  "data": {
   "lineno": 827,
   "symbols_in_volume": [
    "spopt.region.util.Move",
    "spopt.region.util.boolean_assert_feasible",
    "spopt.region.util.make_move"
   ]
  },
  "type": "function"
 },
 "spopt.region.azp.AZPTabu.reset_tabu": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": [
    "collections.deque"
   ]
  },
  "type": "function"
 },
 "spopt.region.azp.AZP_orig": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "spopt.region.util.copy_func"
   ]
  },
  "type": "class"
 },
 "spopt.region.azp.AZP_orig.__init__": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "spopt.region.azp.random",
    "spopt.region.azp_util.AllowMoveAZP",
    "spopt.region.azp_util.AllowMoveStrategy"
   ]
  },
  "type": "function"
 },
 "spopt.region.azp.AZP_orig._azp_connected_component": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "any",
    "float",
    "len",
    "list",
    "numpy.unique",
    "numpy.where",
    "set",
    "spopt.region.csgraph_utils.is_connected",
    "spopt.region.csgraph_utils.neighbors",
    "spopt.region.csgraph_utils.sub_adj_matrix",
    "spopt.region.util.count",
    "spopt.region.util.make_move",
    "spopt.region.util.pop_randomly_from"
   ]
  },
  "type": "function"
 },
 "spopt.region.azp.AZP_orig.fit_from_dict": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "numpy.int32",
    "sorted",
    "spopt.region.objective_function.ObjectiveFunctionPairwise",
    "spopt.region.util.array_from_dict_values",
    "spopt.region.util.scipy_sparse_matrix_from_dict"
   ]
  },
  "type": "function"
 },
 "spopt.region.azp.AZP_orig.fit_from_geodataframe": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "spopt.region.objective_function.ObjectiveFunctionPairwise",
    "spopt.region.util.array_from_df_col",
    "spopt.region.util.w_from_gdf"
   ]
  },
  "type": "function"
 },
 "spopt.region.azp.AZP_orig.fit_from_networkx": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "networkx.to_scipy_sparse_matrix",
    "spopt.region.objective_function.ObjectiveFunctionPairwise",
    "spopt.region.util.array_from_graph_or_dict"
   ]
  },
  "type": "function"
 },
 "spopt.region.azp.AZP_orig.fit_from_scipy_sparse_matrix": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.where",
    "spopt.region.csgraph_utils.sub_adj_matrix",
    "spopt.region.objective_function.ObjectiveFunctionPairwise",
    "spopt.region.util.assert_feasible",
    "spopt.region.util.generate_initial_sol",
    "spopt.region.util.separate_components"
   ]
  },
  "type": "function"
 },
 "spopt.region.azp.AZP_orig.fit_from_w": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "spopt.region.objective_function.ObjectiveFunctionPairwise",
    "spopt.region.util.scipy_sparse_matrix_from_w"
   ]
  },
  "type": "function"
 },
 "spopt.region.azp.AllowMoveAZP": {
  "data": {
   "shadows": "spopt.region.azp_util.AllowMoveAZP"
  },
  "type": "import"
 },
 "spopt.region.azp.AllowMoveAZPSimulatedAnnealing": {
  "data": {
   "shadows": "spopt.region.azp_util.AllowMoveAZPSimulatedAnnealing"
  },
  "type": "import"
 },
 "spopt.region.azp.AllowMoveStrategy": {
  "data": {
   "shadows": "spopt.region.azp_util.AllowMoveStrategy"
  },
  "type": "import"
 },
 "spopt.region.azp.Move": {
  "data": {
   "shadows": "spopt.region.util.Move"
  },
  "type": "import"
 },
 "spopt.region.azp.ObjectiveFunctionPairwise": {
  "data": {
   "shadows": "spopt.region.objective_function.ObjectiveFunctionPairwise"
  },
  "type": "import"
 },
 "spopt.region.azp.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "spopt.region.azp.array_from_df_col": {
  "data": {
   "shadows": "spopt.region.util.array_from_df_col"
  },
  "type": "import"
 },
 "spopt.region.azp.array_from_dict_values": {
  "data": {
   "shadows": "spopt.region.util.array_from_dict_values"
  },
  "type": "import"
 },
 "spopt.region.azp.array_from_graph_or_dict": {
  "data": {
   "shadows": "spopt.region.util.array_from_graph_or_dict"
  },
  "type": "import"
 },
 "spopt.region.azp.assert_feasible": {
  "data": {
   "shadows": "spopt.region.util.assert_feasible"
  },
  "type": "import"
 },
 "spopt.region.azp.boolean_assert_feasible": {
  "data": {
   "shadows": "spopt.region.util.boolean_assert_feasible"
  },
  "type": "import"
 },
 "spopt.region.azp.copy_func": {
  "data": {
   "shadows": "spopt.region.util.copy_func"
  },
  "type": "import"
 },
 "spopt.region.azp.count": {
  "data": {
   "shadows": "spopt.region.util.count"
  },
  "type": "import"
 },
 "spopt.region.azp.deque": {
  "data": {
   "shadows": "collections.deque"
  },
  "type": "import"
 },
 "spopt.region.azp.generate_initial_sol": {
  "data": {
   "shadows": "spopt.region.util.generate_initial_sol"
  },
  "type": "import"
 },
 "spopt.region.azp.is_connected": {
  "data": {
   "shadows": "spopt.region.csgraph_utils.is_connected"
  },
  "type": "import"
 },
 "spopt.region.azp.make_move": {
  "data": {
   "shadows": "spopt.region.util.make_move"
  },
  "type": "import"
 },
 "spopt.region.azp.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "spopt.region.azp.neighbors": {
  "data": {
   "shadows": "spopt.region.csgraph_utils.neighbors"
  },
  "type": "import"
 },
 "spopt.region.azp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "spopt.region.azp.nx": {
  "data": {
   "shadows": "networkx"
  },
  "type": "import"
 },
 "spopt.region.azp.pop_randomly_from": {
  "data": {
   "shadows": "spopt.region.util.pop_randomly_from"
  },
  "type": "import"
 },
 "spopt.region.azp.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "spopt.region.azp.random_element_from": {
  "data": {
   "shadows": "spopt.region.util.random_element_from"
  },
  "type": "import"
 },
 "spopt.region.azp.scipy_sparse_matrix_from_dict": {
  "data": {
   "shadows": "spopt.region.util.scipy_sparse_matrix_from_dict"
  },
  "type": "import"
 },
 "spopt.region.azp.scipy_sparse_matrix_from_w": {
  "data": {
   "shadows": "spopt.region.util.scipy_sparse_matrix_from_w"
  },
  "type": "import"
 },
 "spopt.region.azp.separate_components": {
  "data": {
   "shadows": "spopt.region.util.separate_components"
  },
  "type": "import"
 },
 "spopt.region.azp.sub_adj_matrix": {
  "data": {
   "shadows": "spopt.region.csgraph_utils.sub_adj_matrix"
  },
  "type": "import"
 },
 "spopt.region.azp.w_from_gdf": {
  "data": {
   "shadows": "spopt.region.util.w_from_gdf"
  },
  "type": "import"
 },
 "spopt.region.azp_util": {
  "data": {},
  "type": "module"
 },
 "spopt.region.azp_util.AllowMoveAZP": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "spopt.region.azp_util.AllowMoveStrategy"
   ]
  },
  "type": "class"
 },
 "spopt.region.azp_util.AllowMoveAZP.__call__": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "spopt.region.azp_util.AllowMoveAZPMaxPRegions": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "spopt.region.azp_util.AllowMoveStrategy"
   ]
  },
  "type": "class"
 },
 "spopt.region.azp_util.AllowMoveAZPMaxPRegions.__call__": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "numpy.where",
    "sum"
   ]
  },
  "type": "function"
 },
 "spopt.region.azp_util.AllowMoveAZPMaxPRegions.__getattr__": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "spopt.region.azp_util.AllowMoveAZPMaxPRegions.__init__": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "spopt.region.azp_util.AllowMoveAZPMaxPRegions.start_new_component": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "spopt.region.azp_util.AllowMoveAZPSimulatedAnnealing": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "spopt.region.azp_util.AllowMoveStrategy"
   ]
  },
  "type": "class"
 },
 "spopt.region.azp_util.AllowMoveAZPSimulatedAnnealing.__call__": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "spopt.region.azp_util.math",
    "spopt.region.azp_util.random"
   ]
  },
  "type": "function"
 },
 "spopt.region.azp_util.AllowMoveAZPSimulatedAnnealing.__init__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "isinstance",
    "spopt.region.azp_util.numbers",
    "super"
   ]
  },
  "type": "function"
 },
 "spopt.region.azp_util.AllowMoveAZPSimulatedAnnealing.notify_min_sa_moves": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "observer_func"
   ]
  },
  "type": "function"
 },
 "spopt.region.azp_util.AllowMoveAZPSimulatedAnnealing.notify_move_made": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "observer_func"
   ]
  },
  "type": "function"
 },
 "spopt.region.azp_util.AllowMoveAZPSimulatedAnnealing.register_move_made": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "ValueError",
    "callable"
   ]
  },
  "type": "function"
 },
 "spopt.region.azp_util.AllowMoveAZPSimulatedAnnealing.register_sa_moves_term": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "ValueError",
    "callable"
   ]
  },
  "type": "function"
 },
 "spopt.region.azp_util.AllowMoveAZPSimulatedAnnealing.reset": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "spopt.region.azp_util.AllowMoveAZPSimulatedAnnealing.update_temperature": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "spopt.region.azp_util.AllowMoveStrategy": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "spopt.region.azp_util.abc"
   ]
  },
  "type": "class"
 },
 "spopt.region.azp_util.AllowMoveStrategy.__call__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "spopt.region.azp_util.abc"
   ]
  },
  "type": "function"
 },
 "spopt.region.azp_util.AllowMoveStrategy.start_new_component": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "spopt.region.azp_util.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "spopt.region.azp_util.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "spopt.region.azp_util.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "spopt.region.azp_util.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "spopt.region.azp_util.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "spopt.region.base": {
  "data": {},
  "type": "module"
 },
 "spopt.region.base.RegionMixin": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "spopt.region.base.RegionMixin.solve_assign": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "spopt.region.base._centroid": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "spopt.region.base.numpy"
   ]
  },
  "type": "function"
 },
 "spopt.region.base._closest": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "spopt.region.base.numpy"
   ]
  },
  "type": "function"
 },
 "spopt.region.base._seeds": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "spopt.region.base.numpy"
   ]
  },
  "type": "function"
 },
 "spopt.region.base.is_neighbor": {
  "data": {
   "lineno": 245
  },
  "type": "function"
 },
 "spopt.region.base.move_ok": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "is_neighbor",
    "spopt.region.base.networkx"
   ]
  },
  "type": "function"
 },
 "spopt.region.base.networkx": {
  "data": {
   "shadows": "networkx"
  },
  "type": "import"
 },
 "spopt.region.base.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "spopt.region.base.ok_moves": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "spopt.region.base.move_ok"
   ]
  },
  "type": "function"
 },
 "spopt.region.base.psopen": {
  "data": {
   "shadows": "libpysal.io.fileio.FileIO"
  },
  "type": "import"
 },
 "spopt.region.base.region_neighbors": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "spopt.region.base.w_to_g": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "spopt.region.base.networkx"
   ]
  },
  "type": "function"
 },
 "spopt.region.csgraph_utils": {
  "data": {},
  "type": "module"
 },
 "spopt.region.csgraph_utils.csg": {
  "data": {
   "shadows": "scipy.sparse.csgraph"
  },
  "type": "import"
 },
 "spopt.region.csgraph_utils.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "spopt.region.csgraph_utils.is_connected": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "scipy.sparse.csgraph.connected_components"
   ]
  },
  "type": "function"
 },
 "spopt.region.csgraph_utils.neighbors": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "spopt.region.csgraph_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "spopt.region.csgraph_utils.sub_adj_matrix": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "numpy.in1d",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "spopt.region.maxp": {
  "data": {},
  "type": "module"
 },
 "spopt.region.maxp.ITERCONSTRUCT": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "spopt.region.maxp.ITERSA": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "spopt.region.maxp.MaxPHeuristic": {
  "data": {
   "lineno": 694
  },
  "type": "class"
 },
 "spopt.region.maxp.MaxPHeuristic.__init__": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "spopt.region.maxp.ITERSA"
   ]
  },
  "type": "function"
 },
 "spopt.region.maxp.MaxPHeuristic.solve": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "spopt.region.maxp.maxp"
   ]
  },
  "type": "function"
 },
 "spopt.region.maxp.assignEnclave": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "copy.deepcopy",
    "len",
    "min",
    "numpy.Inf",
    "numpy.array",
    "numpy.random.randint",
    "sorted"
   ]
  },
  "type": "function"
 },
 "spopt.region.maxp.calculateWithinRegionDistance": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "spopt.region.maxp.checkMove": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "numpy.Inf",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "spopt.region.maxp.connected_components": {
  "data": {
   "shadows": "scipy.sparse.csgraph.connected_components"
  },
  "type": "import"
 },
 "spopt.region.maxp.construction_phase": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "assignEnclave",
    "copy.deepcopy",
    "enumerate",
    "growClusterForPoly",
    "len",
    "max",
    "numpy.random.shuffle",
    "range"
   ]
  },
  "type": "function"
 },
 "spopt.region.maxp.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "spopt.region.maxp.gp": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "spopt.region.maxp.growClusterForPoly": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "spopt.region.maxp.maxp": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "calculateWithinRegionDistance",
    "construction_phase",
    "enumerate",
    "len",
    "numpy.arange",
    "numpy.atleast_2d",
    "numpy.inf",
    "performSA",
    "print",
    "range",
    "scipy.spatial.distance.pdist",
    "scipy.spatial.distance.squareform",
    "spopt.region.maxp.ITERCONSTRUCT",
    "spopt.region.maxp.ITERSA"
   ]
  },
  "type": "function"
 },
 "spopt.region.maxp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "spopt.region.maxp.pdist": {
  "data": {
   "shadows": "scipy.spatial.distance.pdist"
  },
  "type": "import"
 },
 "spopt.region.maxp.performSA": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "copy.deepcopy",
    "len",
    "numpy.exp",
    "numpy.random.randint",
    "numpy.random.random",
    "spopt.region.maxp.checkMove",
    "spopt.region.maxp.pickMoveArea"
   ]
  },
  "type": "function"
 },
 "spopt.region.maxp.pickMoveArea": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.delete",
    "numpy.where",
    "scipy.sparse.csgraph.connected_components"
   ]
  },
  "type": "function"
 },
 "spopt.region.maxp.squareform": {
  "data": {
   "shadows": "scipy.spatial.distance.squareform"
  },
  "type": "import"
 },
 "spopt.region.objective_function": {
  "data": {},
  "type": "module"
 },
 "spopt.region.objective_function.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "spopt.region.objective_function.ObjectiveFunction": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "abc.ABC"
   ]
  },
  "type": "class"
 },
 "spopt.region.objective_function.ObjectiveFunction.__call__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "spopt.region.objective_function.ObjectiveFunction.__init__": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "spopt.region.util.get_metric_function"
   ]
  },
  "type": "function"
 },
 "spopt.region.objective_function.ObjectiveFunction.update": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "spopt.region.objective_function.ObjectiveFunctionCenter": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "spopt.region.objective_function.ObjectiveFunction"
   ]
  },
  "type": "class"
 },
 "spopt.region.objective_function.ObjectiveFunctionCenter.__call__": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "spopt.region.objective_function.ObjectiveFunctionCenter.__init__": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.sum",
    "super"
   ]
  },
  "type": "function"
 },
 "spopt.region.objective_function.ObjectiveFunctionCenter._intraregional_heterogeneity": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "spopt.region.objective_function.ObjectiveFunctionCenter.update": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "spopt.region.objective_function.ObjectiveFunctionPairwise": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "spopt.region.objective_function.ObjectiveFunction"
   ]
  },
  "type": "class"
 },
 "spopt.region.objective_function.ObjectiveFunctionPairwise.__call__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.where",
    "set",
    "spopt.region.objective_function.itertools",
    "sum"
   ]
  },
  "type": "function"
 },
 "spopt.region.objective_function.ObjectiveFunctionPairwise.update": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "spopt.region.objective_function.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "spopt.region.objective_function.get_metric_function": {
  "data": {
   "shadows": "spopt.region.util.get_metric_function"
  },
  "type": "import"
 },
 "spopt.region.objective_function.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "spopt.region.objective_function.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "spopt.region.region_k_means": {
  "data": {},
  "type": "module"
 },
 "spopt.region.region_k_means.RegionKMeansHeuristic": {
  "data": {
   "lineno": 117
  },
  "type": "class"
 },
 "spopt.region.region_k_means.RegionKMeansHeuristic.__init__": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "spopt.region.region_k_means.RegionKMeansHeuristic.solve": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "spopt.region.region_k_means.region_k_means"
   ]
  },
  "type": "function"
 },
 "spopt.region.region_k_means.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "spopt.region.region_k_means.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "spopt.region.region_k_means.region_k_means": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "_centroid",
    "_closest",
    "_seeds",
    "collections.defaultdict",
    "enumerate",
    "int",
    "len",
    "list",
    "ok_moves",
    "range",
    "region_neighbors",
    "spopt.region.region_k_means.numpy",
    "w_to_g"
   ]
  },
  "type": "function"
 },
 "spopt.region.skater": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "module"
 },
 "spopt.region.skater.OptimizeWarning": {
  "data": {
   "shadows": "scipy.optimize.OptimizeWarning"
  },
  "type": "import"
 },
 "spopt.region.skater.Skater": {
  "data": {
   "lineno": 339
  },
  "type": "class"
 },
 "spopt.region.skater.Skater.__init__": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "dict",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "spopt.region.skater.Skater.solve": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "spopt.region.skater.SpanningForest"
   ]
  },
  "type": "function"
 },
 "spopt.region.skater.SpanningForest": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "spopt.region.skater.SpanningForest.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "affinity",
    "numpy.log",
    "numpy.mean",
    "numpy.sum",
    "sklearn.metrics.pairwise.manhattan_distances"
   ]
  },
  "type": "function"
 },
 "spopt.region.skater.SpanningForest.__repr__": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "spopt.region.skater.SpanningForest.find_cut": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "Exception",
    "ImportError",
    "ValueError",
    "int",
    "numpy.inf",
    "numpy.nan",
    "numpy.ones",
    "numpy.vstack",
    "scipy.sparse.csgraph.connected_components",
    "spopt.region.skater.copy",
    "spopt.region.skater.deletion",
    "tqdm.tqdm"
   ]
  },
  "type": "function"
 },
 "spopt.region.skater.SpanningForest.find_cut.tqdm": {
  "data": {
   "lineno": 280
  },
  "type": "function"
 },
 "spopt.region.skater.SpanningForest.fit": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.inf",
    "numpy.isfinite",
    "numpy.nan",
    "numpy.ones",
    "numpy.unique",
    "print",
    "scipy.optimize.OptimizeWarning",
    "scipy.sparse.csgraph.connected_components",
    "scipy.sparse.csgraph.minimum_spanning_tree",
    "spopt.region.skater.deletion",
    "spopt.region.skater.time",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "spopt.region.skater.SpanningForest.make_cut": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "numpy.isfinite",
    "scipy.optimize.OptimizeWarning",
    "scipy.sparse.csgraph.connected_components"
   ]
  },
  "type": "function"
 },
 "spopt.region.skater.SpanningForest.score": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "len",
    "numpy.inf",
    "numpy.unique",
    "range"
   ]
  },
  "type": "function"
 },
 "spopt.region.skater.cg": {
  "data": {
   "shadows": "scipy.sparse.csgraph"
  },
  "type": "import"
 },
 "spopt.region.skater.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "spopt.region.skater.deletion": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "spopt.region.skater.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "spopt.region.skater.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "spopt.region.skater.skm": {
  "data": {
   "shadows": "sklearn.metrics.pairwise"
  },
  "type": "import"
 },
 "spopt.region.skater.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "spopt.region.skater.tqdm": {
  "data": {
   "shadows": "tqdm.tqdm"
  },
  "type": "import"
 },
 "spopt.region.skater.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "spopt.region.spenc": {
  "data": {},
  "type": "module"
 },
 "spopt.region.spenc.Spenc": {
  "data": {
   "lineno": 5
  },
  "type": "class"
 },
 "spopt.region.spenc.Spenc.__init__": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "spopt.region.spenc.Spenc.solve": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "SPENC"
   ]
  },
  "type": "function"
 },
 "spopt.region.spenclib": {
  "data": {},
  "type": "module"
 },
 "spopt.region.spenclib.abstracts": {
  "data": {},
  "type": "module"
 },
 "spopt.region.spenclib.abstracts.AgglomerativeClustering": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "sklearn.cluster.AgglomerativeClustering"
   ]
  },
  "type": "class"
 },
 "spopt.region.spenclib.abstracts.AgglomerativeClustering._sample_gen": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "callable",
    "distribution",
    "numpy.random.normal",
    "range"
   ]
  },
  "type": "function"
 },
 "spopt.region.spenclib.abstracts.AgglomerativeClustering.sample": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "distribution",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "spopt.region.spenclib.abstracts.LabelEncoder": {
  "data": {
   "shadows": "sklearn.preprocessing.LabelEncoder"
  },
  "type": "import"
 },
 "spopt.region.spenclib.abstracts.SPENC": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "sklearn.cluster.SpectralClustering"
   ]
  },
  "type": "class"
 },
 "spopt.region.spenclib.abstracts.SPENC.__init__": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "spopt.region.spenclib.abstracts.SPENC._embed": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "scipy.sparse.csgraph.laplacian",
    "scipy.sparse.linalg.eigsh",
    "sklearn.utils.check_random_state",
    "sklearn.utils.extmath._deterministic_vector_sign_flip"
   ]
  },
  "type": "function"
 },
 "spopt.region.spenclib.abstracts.SPENC._make_hierarchical_cut": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "mkobjective",
    "numpy.argmin",
    "numpy.linspace",
    "numpy.median",
    "numpy.min",
    "numpy.percentile",
    "objective"
   ]
  },
  "type": "function"
 },
 "spopt.region.spenclib.abstracts.SPENC._make_hierarchical_cut.mkobjective": {
  "data": {
   "lineno": 423
  },
  "type": "function"
 },
 "spopt.region.spenclib.abstracts.SPENC._make_hierarchical_cut.mkobjective.objective": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "spopt.region.spenclib.abstracts.SPENC._sample_gen": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "callable",
    "distribution",
    "numpy.random.normal",
    "range"
   ]
  },
  "type": "function"
 },
 "spopt.region.spenclib.abstracts.SPENC._spectral_bipartition": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "IndexError",
    "bool",
    "enumerate",
    "len",
    "numpy.flipud",
    "numpy.ones",
    "numpy.vstack",
    "scipy.sparse.issparse",
    "sklearn.preprocessing.LabelEncoder",
    "tuple"
   ]
  },
  "type": "function"
 },
 "spopt.region.spenclib.abstracts.SPENC.fit": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "callable",
    "check_weights",
    "numpy.float64",
    "numpy.isinf",
    "sklearn.cluster.KMeans",
    "sklearn.cluster._spectral.discretize",
    "sklearn.metrics.pairwise.pairwise_kernels",
    "sklearn.neighbors.kneighbors_graph",
    "sklearn.utils.check_random_state",
    "sklearn.utils.validation.check_array",
    "super"
   ]
  },
  "type": "function"
 },
 "spopt.region.spenclib.abstracts.SPENC.sample": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "distribution",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "spopt.region.spenclib.abstracts.SPENC.score": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "Exception",
    "attribute_score",
    "dict",
    "hasattr",
    "numpy.asarray",
    "sklearn.metrics.calinski_harabasz_score",
    "spatial_score"
   ]
  },
  "type": "function"
 },
 "spopt.region.spenclib.abstracts.Warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "spopt.region.spenclib.abstracts._deterministic_vector_sign_flip": {
  "data": {
   "shadows": "sklearn.utils.extmath._deterministic_vector_sign_flip"
  },
  "type": "import"
 },
 "spopt.region.spenclib.abstracts._discretize": {
  "data": {
   "shadows": "sklearn.cluster._spectral.discretize"
  },
  "type": "import"
 },
 "spopt.region.spenclib.abstracts.cg": {
  "data": {
   "shadows": "scipy.sparse.csgraph"
  },
  "type": "import"
 },
 "spopt.region.spenclib.abstracts.check_array": {
  "data": {
   "shadows": "sklearn.utils.validation.check_array"
  },
  "type": "import"
 },
 "spopt.region.spenclib.abstracts.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "spopt.region.spenclib.abstracts.clust": {
  "data": {
   "shadows": "sklearn.cluster"
  },
  "type": "import"
 },
 "spopt.region.spenclib.abstracts.kneighbors_graph": {
  "data": {
   "shadows": "sklearn.neighbors.kneighbors_graph"
  },
  "type": "import"
 },
 "spopt.region.spenclib.abstracts.la": {
  "data": {
   "shadows": "scipy.sparse.linalg"
  },
  "type": "import"
 },
 "spopt.region.spenclib.abstracts.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "spopt.region.spenclib.abstracts.pw": {
  "data": {
   "shadows": "sklearn.metrics.pairwise"
  },
  "type": "import"
 },
 "spopt.region.spenclib.abstracts.skm": {
  "data": {
   "shadows": "sklearn.metrics"
  },
  "type": "import"
 },
 "spopt.region.spenclib.abstracts.spar": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "spopt.region.spenclib.scores": {
  "data": {},
  "type": "module"
 },
 "spopt.region.spenclib.scores.boundary_fraction": {
  "data": {
   "lineno": 3,
   "symbols_in_volume": [
    "int",
    "zip"
   ]
  },
  "type": "function"
 },
 "spopt.region.spenclib.scores.boundary_score": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "numpy.log",
    "spopt.region.spenclib.scores.boundary_fraction"
   ]
  },
  "type": "function"
 },
 "spopt.region.spenclib.scores.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "spopt.region.spenclib.utils": {
  "data": {},
  "type": "module"
 },
 "spopt.region.spenclib.utils.Polygon": {
  "data": {
   "shadows": "shapely.geometry.Polygon"
  },
  "type": "import"
 },
 "spopt.region.spenclib.utils.Warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "spopt.region.spenclib.utils.check_weights": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csgraph.connected_components",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "spopt.region.spenclib.utils.csg": {
  "data": {
   "shadows": "scipy.sparse.csgraph"
  },
  "type": "import"
 },
 "spopt.region.spenclib.utils.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "spopt.region.spenclib.utils.lattice": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "geopandas.GeoDataFrame",
    "numpy.arange",
    "shapely.geometry.Polygon"
   ]
  },
  "type": "function"
 },
 "spopt.region.spenclib.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "spopt.region.spenclib.utils.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "spopt.region.util": {
  "data": {
   "symbols_in_volume": [
    "spopt.region.util.collections"
   ]
  },
  "type": "module"
 },
 "spopt.region.util.MissingMetric": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "class"
 },
 "spopt.region.util.Move": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "spopt.region.util._randomly_divide_connected_graph": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "len",
    "max",
    "numpy.unique",
    "range",
    "scipy.sparse.csgraph.connected_components",
    "scipy.sparse.csgraph.minimum_spanning_tree",
    "spopt.region.util.random"
   ]
  },
  "type": "function"
 },
 "spopt.region.util.all_elements_equal": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "spopt.region.util.array_from_df_col": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "isinstance",
    "numpy.array",
    "spopt.region.util.collections",
    "str"
   ]
  },
  "type": "function"
 },
 "spopt.region.util.array_from_dict_values": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.float",
    "numpy.fromiter",
    "sorted",
    "spopt.region.util.collections",
    "spopt.region.util.itertools"
   ]
  },
  "type": "function"
 },
 "spopt.region.util.array_from_graph": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "spopt.region.util.array_from_dict_values",
    "spopt.region.util.dict_from_graph_attr"
   ]
  },
  "type": "function"
 },
 "spopt.region.util.array_from_graph_or_dict": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "spopt.region.util.array_from_dict_values",
    "spopt.region.util.array_from_graph",
    "spopt.region.util.collections",
    "str"
   ]
  },
  "type": "function"
 },
 "spopt.region.util.array_from_region_list": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.zeros",
    "sum"
   ]
  },
  "type": "function"
 },
 "spopt.region.util.assert_feasible": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.where",
    "set",
    "spopt.region.csgraph_utils.is_connected",
    "spopt.region.csgraph_utils.sub_adj_matrix"
   ]
  },
  "type": "function"
 },
 "spopt.region.util.boolean_assert_feasible": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "len",
    "numpy.where",
    "set",
    "spopt.region.csgraph_utils.is_connected",
    "spopt.region.csgraph_utils.sub_adj_matrix"
   ]
  },
  "type": "function"
 },
 "spopt.region.util.check_solver": {
  "data": {
   "lineno": 891,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "spopt.region.util.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "spopt.region.util.copy_func": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "spopt.region.util.functools",
    "spopt.region.util.types"
   ]
  },
  "type": "function"
 },
 "spopt.region.util.count": {
  "data": {
   "lineno": 861,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.unique",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "spopt.region.util.csg": {
  "data": {
   "shadows": "scipy.sparse.csgraph"
  },
  "type": "import"
 },
 "spopt.region.util.dataframe_to_dict": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "dict",
    "numpy.array",
    "zip"
   ]
  },
  "type": "function"
 },
 "spopt.region.util.dict_from_graph_attr": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "networkx.get_node_attributes",
    "numpy.array",
    "str"
   ]
  },
  "type": "function"
 },
 "spopt.region.util.distance_metrics": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.distance_metrics"
  },
  "type": "import"
 },
 "spopt.region.util.distribute_regions_among_components": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "len",
    "list",
    "set",
    "spopt.region.util.random"
   ]
  },
  "type": "function"
 },
 "spopt.region.util.dok_matrix": {
  "data": {
   "shadows": "scipy.sparse.dok.dok_matrix"
  },
  "type": "import"
 },
 "spopt.region.util.find_sublist_containing": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "LookupError",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "spopt.region.util.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "spopt.region.util.generate_initial_sol": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "ValueError",
    "_randomly_divide_connected_graph",
    "len",
    "numpy.int32",
    "numpy.ones",
    "print",
    "range",
    "scipy.sparse.csgraph.connected_components",
    "set",
    "spopt.region.util.distribute_regions_among_components"
   ]
  },
  "type": "function"
 },
 "spopt.region.util.get_metric_function": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "callable",
    "isinstance",
    "sklearn.metrics.pairwise.distance_metrics",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "spopt.region.util.get_solver_instance": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "solver",
    "spopt.region.util.pulp"
   ]
  },
  "type": "function"
 },
 "spopt.region.util.is_connected": {
  "data": {
   "shadows": "spopt.region.csgraph_utils.is_connected"
  },
  "type": "import"
 },
 "spopt.region.util.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "spopt.region.util.make_move": {
  "data": {
   "lineno": 515
  },
  "type": "function"
 },
 "spopt.region.util.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "spopt.region.util.nx": {
  "data": {
   "shadows": "networkx"
  },
  "type": "import"
 },
 "spopt.region.util.pop_randomly_from": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": [
    "len",
    "spopt.region.util.random"
   ]
  },
  "type": "function"
 },
 "spopt.region.util.pulp": {
  "data": {
   "shadows": "pulp"
  },
  "type": "import"
 },
 "spopt.region.util.raise_distance_metric_not_set": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "spopt.region.util.MissingMetric"
   ]
  },
  "type": "function"
 },
 "spopt.region.util.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "spopt.region.util.random_element_from": {
  "data": {
   "lineno": 851,
   "symbols_in_volume": [
    "len",
    "spopt.region.util.random"
   ]
  },
  "type": "function"
 },
 "spopt.region.util.scipy_sparse_matrix_from_dict": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "scipy.sparse.dok.dok_matrix",
    "sorted"
   ]
  },
  "type": "function"
 },
 "spopt.region.util.scipy_sparse_matrix_from_w": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "spopt.region.util.separate_components": {
  "data": {
   "lineno": 797,
   "symbols_in_volume": [
    "len",
    "numpy.int32",
    "numpy.ones",
    "scipy.sparse.csgraph.connected_components",
    "set"
   ]
  },
  "type": "function"
 },
 "spopt.region.util.sub_adj_matrix": {
  "data": {
   "shadows": "spopt.region.csgraph_utils.sub_adj_matrix"
  },
  "type": "import"
 },
 "spopt.region.util.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "spopt.region.util.w_from_gdf": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "libpysal.weights.Queen.from_dataframe",
    "libpysal.weights.Rook.from_dataframe",
    "str"
   ]
  },
  "type": "function"
 },
 "spopt.region.util.weights": {
  "data": {
   "shadows": "libpysal.weights"
  },
  "type": "import"
 },
 "spopt.region.ward": {
  "data": {},
  "type": "module"
 },
 "spopt.region.ward.AffinityPropagation": {
  "data": {
   "shadows": "sklearn.cluster.AffinityPropagation"
  },
  "type": "import"
 },
 "spopt.region.ward.AgglomerativeClustering": {
  "data": {
   "shadows": "sklearn.cluster.AgglomerativeClustering"
  },
  "type": "import"
 },
 "spopt.region.ward.KMeans": {
  "data": {
   "shadows": "sklearn.cluster.KMeans"
  },
  "type": "import"
 },
 "spopt.region.ward.MiniBatchKMeans": {
  "data": {
   "shadows": "sklearn.cluster.MiniBatchKMeans"
  },
  "type": "import"
 },
 "spopt.region.ward.SpectralClustering": {
  "data": {
   "shadows": "sklearn.cluster.SpectralClustering"
  },
  "type": "import"
 },
 "spopt.region.ward.WardSpatial": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "spopt.region.ward.WardSpatial.__init__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "spopt.region.ward.WardSpatial.solve": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "sklearn.cluster.AgglomerativeClustering"
   ]
  },
  "type": "function"
 },
 "spopt.region.ward.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "spopt.tests": {
  "data": {},
  "type": "module"
 },
 "spopt.tests.test_azp": {
  "data": {},
  "type": "module"
 },
 "spopt.tests.test_azp.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "spopt.tests.test_azp.libpysal": {
  "data": {
   "shadows": "libpysal"
  },
  "type": "import"
 },
 "spopt.tests.test_azp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "spopt.tests.test_azp.test_azp": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "AZP",
    "geopandas.read_file",
    "numpy.array",
    "numpy.array_equal",
    "numpy.random.seed",
    "range",
    "spopt.tests.test_azp.libpysal"
   ]
  },
  "type": "function"
 },
 "spopt.tests.test_maxp": {
  "data": {},
  "type": "module"
 },
 "spopt.tests.test_maxp.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "spopt.tests.test_maxp.libpysal": {
  "data": {
   "shadows": "libpysal"
  },
  "type": "import"
 },
 "spopt.tests.test_maxp.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "spopt.tests.test_maxp.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "spopt.tests.test_maxp.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "spopt.tests.test_maxp.test_MaxPHeuristic": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "MaxPHeuristic",
    "geopandas.read_file",
    "range",
    "spopt.tests.test_maxp.libpysal",
    "spopt.tests.test_maxp.numpy"
   ]
  },
  "type": "function"
 },
 "spopt.tests.test_region_k_means": {
  "data": {},
  "type": "module"
 },
 "spopt.tests.test_region_k_means.libpysal": {
  "data": {
   "shadows": "libpysal"
  },
  "type": "import"
 },
 "spopt.tests.test_region_k_means.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "spopt.tests.test_region_k_means.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "spopt.tests.test_region_k_means.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "spopt.tests.test_region_k_means.test_RegionKMeansHeuristic": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "RKM",
    "spopt.tests.test_region_k_means.libpysal",
    "spopt.tests.test_region_k_means.numpy"
   ]
  },
  "type": "function"
 },
 "spopt.tests.test_skater": {
  "data": {},
  "type": "module"
 },
 "spopt.tests.test_skater.TestSkater": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "spopt.tests.test_skater.unittest"
   ]
  },
  "type": "class"
 },
 "spopt.tests.test_skater.TestSkater.setUp": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "Skater",
    "geopandas.read_file",
    "numpy.random.seed",
    "range",
    "spopt.tests.test_skater.libpysal"
   ]
  },
  "type": "function"
 },
 "spopt.tests.test_skater.TestSkater.test_labels_": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "spopt.tests.test_skater.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "spopt.tests.test_skater.libpysal": {
  "data": {
   "shadows": "libpysal"
  },
  "type": "import"
 },
 "spopt.tests.test_skater.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "spopt.tests.test_skater.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "spopt.tests.test_spenc": {
  "data": {},
  "type": "module"
 },
 "spopt.tests.test_spenc.TestSpenc": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "spopt.tests.test_spenc.unittest"
   ]
  },
  "type": "class"
 },
 "spopt.tests.test_spenc.TestSpenc.setUp": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "Spenc",
    "geopandas.read_file",
    "range",
    "spopt.tests.test_spenc.libpysal"
   ]
  },
  "type": "function"
 },
 "spopt.tests.test_spenc.TestSpenc.test_labels_": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "len",
    "numpy.testing.assert_equal",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "spopt.tests.test_spenc.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "spopt.tests.test_spenc.libpysal": {
  "data": {
   "shadows": "libpysal"
  },
  "type": "import"
 },
 "spopt.tests.test_spenc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "spopt.tests.test_spenc.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "spopt.tests.test_ward": {
  "data": {},
  "type": "module"
 },
 "spopt.tests.test_ward.TestWard": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "spopt.tests.test_ward.unittest"
   ]
  },
  "type": "class"
 },
 "spopt.tests.test_ward.TestWard.setUp": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "WardSpatial",
    "geopandas.read_file",
    "numpy.random.seed",
    "range",
    "spopt.tests.test_ward.libpysal"
   ]
  },
  "type": "function"
 },
 "spopt.tests.test_ward.TestWard.test_labels_": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "spopt.tests.test_ward.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "spopt.tests.test_ward.libpysal": {
  "data": {
   "shadows": "libpysal"
  },
  "type": "import"
 },
 "spopt.tests.test_ward.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "spopt.tests.test_ward.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "spopt.tests.test_ward.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "spopt.tests.test_ward.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 }
}