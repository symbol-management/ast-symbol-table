{
 "winrm": {
  "data": {},
  "type": "module"
 },
 "winrm.ET": {
  "data": {
   "shadows": "xml.etree.ElementTree"
  },
  "type": "import"
 },
 "winrm.FEATURE_OPERATION_TIMEOUT": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "winrm.FEATURE_PROXY_SUPPORT": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "winrm.FEATURE_READ_TIMEOUT": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "winrm.FEATURE_SUPPORTED_AUTHTYPES": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "winrm.Protocol": {
  "data": {
   "shadows": "winrm.protocol.Protocol"
  },
  "type": "import"
 },
 "winrm.Response": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "winrm.Response.__init__": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "winrm.Response.__repr__": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "winrm.Session": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "winrm.Session.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "winrm.protocol.Protocol"
   ]
  },
  "type": "function"
 },
 "winrm.Session._build_url": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "staticmethod",
    "winrm.re"
   ]
  },
  "type": "function"
 },
 "winrm.Session._clean_error_msg": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "Exception",
    "len",
    "print",
    "xml.etree.ElementTree.fromstring"
   ]
  },
  "type": "function"
 },
 "winrm.Session._strip_namespace": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "winrm.re"
   ]
  },
  "type": "function"
 },
 "winrm.Session.run_cmd": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "winrm.Response"
   ]
  },
  "type": "function"
 },
 "winrm.Session.run_ps": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "base64.b64encode",
    "len"
   ]
  },
  "type": "function"
 },
 "winrm.b64encode": {
  "data": {
   "shadows": "base64.b64encode"
  },
  "type": "import"
 },
 "winrm.encryption": {
  "data": {
   "symbols_in_volume": [
    "winrm.encryption.is_py2",
    "winrm.encryption.sys"
   ]
  },
  "type": "module"
 },
 "winrm.encryption.Encryption": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "winrm.encryption.Encryption.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "winrm.exceptions.WinRMError"
   ]
  },
  "type": "function"
 },
 "winrm.encryption.Encryption._build_credssp_message": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "len",
    "winrm.encryption.struct"
   ]
  },
  "type": "function"
 },
 "winrm.encryption.Encryption._build_kerberos_message": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "len",
    "winrm.encryption.struct"
   ]
  },
  "type": "function"
 },
 "winrm.encryption.Encryption._build_ntlm_message": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "len",
    "winrm.encryption.struct"
   ]
  },
  "type": "function"
 },
 "winrm.encryption.Encryption._decrypt_credssp_message": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "winrm.encryption.Encryption._decrypt_kerberos_message": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "winrm.encryption.struct"
   ]
  },
  "type": "function"
 },
 "winrm.encryption.Encryption._decrypt_ntlm_message": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "winrm.encryption.struct"
   ]
  },
  "type": "function"
 },
 "winrm.encryption.Encryption._decrypt_response": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "filter",
    "int",
    "len",
    "list",
    "range",
    "winrm.exceptions.WinRMError"
   ]
  },
  "type": "function"
 },
 "winrm.encryption.Encryption._encrypt_message": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "winrm.encryption.Encryption._get_credssp_trailer_length": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "winrm.encryption.re"
   ]
  },
  "type": "function"
 },
 "winrm.encryption.Encryption.parse_encrypted_response": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "urllib.parse.urlsplit"
   ]
  },
  "type": "function"
 },
 "winrm.encryption.Encryption.prepare_encrypted_request": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "len",
    "range",
    "str",
    "urllib.parse.urlsplit",
    "winrm.encryption.requests"
   ]
  },
  "type": "function"
 },
 "winrm.encryption.WinRMError": {
  "data": {
   "shadows": "winrm.exceptions.WinRMError"
  },
  "type": "import"
 },
 "winrm.encryption.is_py2": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "winrm.encryption.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "winrm.encryption.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "winrm.encryption.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "winrm.encryption.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "winrm.encryption.urlsplit": {
  "data": {
   "shadows": "urllib.parse.urlsplit"
  },
  "type": "import"
 },
 "winrm.exceptions": {
  "data": {},
  "type": "module"
 },
 "winrm.exceptions.AuthenticationError": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "winrm.exceptions.WinRMError"
   ]
  },
  "type": "class"
 },
 "winrm.exceptions.BasicAuthDisabledError": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "winrm.exceptions.AuthenticationError"
   ]
  },
  "type": "class"
 },
 "winrm.exceptions.InvalidCredentialsError": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "winrm.exceptions.AuthenticationError"
   ]
  },
  "type": "class"
 },
 "winrm.exceptions.WinRMError": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "winrm.exceptions.WinRMOperationTimeoutError": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "winrm.exceptions.WinRMTransportError": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "winrm.exceptions.WinRMTransportError.__str__": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "winrm.exceptions.WinRMTransportError.code": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "winrm.exceptions.WinRMTransportError.message": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "winrm.exceptions.WinRMTransportError.protocol": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "winrm.exceptions.WinRMTransportError.response_text": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "winrm.exceptions.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "winrm.protocol": {
  "data": {},
  "type": "module"
 },
 "winrm.protocol.ET": {
  "data": {
   "shadows": "xml.etree.ElementTree"
  },
  "type": "import"
 },
 "winrm.protocol.Protocol": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "winrm.protocol.Protocol.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "str",
    "winrm.exceptions.WinRMError",
    "winrm.protocol.Protocol",
    "winrm.transport.Transport"
   ]
  },
  "type": "function"
 },
 "winrm.protocol.Protocol._get_soap_header": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "int",
    "winrm.protocol.uuid",
    "winrm.protocol.xmlns"
   ]
  },
  "type": "function"
 },
 "winrm.protocol.Protocol._raw_get_command_output": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "int",
    "len",
    "next",
    "winrm.protocol.base64",
    "winrm.protocol.xmltodict",
    "xml.etree.ElementTree.fromstring"
   ]
  },
  "type": "function"
 },
 "winrm.protocol.Protocol.cleanup_command": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "next",
    "winrm.protocol.uuid",
    "winrm.protocol.xmltodict",
    "xml.etree.ElementTree.fromstring"
   ]
  },
  "type": "function"
 },
 "winrm.protocol.Protocol.close_shell": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "next",
    "winrm.protocol.uuid",
    "winrm.protocol.xmltodict",
    "xml.etree.ElementTree.fromstring"
   ]
  },
  "type": "function"
 },
 "winrm.protocol.Protocol.get_command_output": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "winrm.exceptions.WinRMOperationTimeoutError"
   ]
  },
  "type": "function"
 },
 "winrm.protocol.Protocol.open_shell": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "next",
    "str",
    "winrm.protocol.xmltodict",
    "xml.etree.ElementTree.fromstring"
   ]
  },
  "type": "function"
 },
 "winrm.protocol.Protocol.run_command": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "isinstance",
    "next",
    "six.text_type",
    "str",
    "winrm.protocol.xmltodict",
    "xml.etree.ElementTree.fromstring"
   ]
  },
  "type": "function"
 },
 "winrm.protocol.Protocol.send_command_input": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "isinstance",
    "six.text_type",
    "winrm.protocol.base64",
    "winrm.protocol.xmltodict"
   ]
  },
  "type": "function"
 },
 "winrm.protocol.Protocol.send_message": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "winrm.exceptions.WinRMError",
    "winrm.exceptions.WinRMOperationTimeoutError",
    "winrm.exceptions.WinRMTransportError",
    "winrm.protocol.xmlns",
    "xml.etree.ElementTree.fromstring"
   ]
  },
  "type": "function"
 },
 "winrm.protocol.Transport": {
  "data": {
   "shadows": "winrm.transport.Transport"
  },
  "type": "import"
 },
 "winrm.protocol.WinRMError": {
  "data": {
   "shadows": "winrm.exceptions.WinRMError"
  },
  "type": "import"
 },
 "winrm.protocol.WinRMOperationTimeoutError": {
  "data": {
   "shadows": "winrm.exceptions.WinRMOperationTimeoutError"
  },
  "type": "import"
 },
 "winrm.protocol.WinRMTransportError": {
  "data": {
   "shadows": "winrm.exceptions.WinRMTransportError"
  },
  "type": "import"
 },
 "winrm.protocol.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "winrm.protocol.text_type": {
  "data": {
   "shadows": "six.text_type"
  },
  "type": "import"
 },
 "winrm.protocol.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "winrm.protocol.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "winrm.protocol.xmlns": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "winrm.protocol.xmltodict": {
  "data": {
   "shadows": "xmltodict"
  },
  "type": "import"
 },
 "winrm.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "winrm.tests": {
  "data": {},
  "type": "module"
 },
 "winrm.tests.conftest": {
  "data": {},
  "type": "module"
 },
 "winrm.tests.conftest.Protocol": {
  "data": {
   "shadows": "winrm.protocol.Protocol"
  },
  "type": "import"
 },
 "winrm.tests.conftest.TransportStub": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "winrm.tests.conftest.TransportStub.close_session": {
  "data": {
   "lineno": 544
  },
  "type": "function"
 },
 "winrm.tests.conftest.TransportStub.send_message": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "Exception",
    "winrm.tests.conftest.cleanup_cmd_request",
    "winrm.tests.conftest.cleanup_cmd_response",
    "winrm.tests.conftest.close_shell_request",
    "winrm.tests.conftest.close_shell_response",
    "winrm.tests.conftest.get_cmd_output_response",
    "winrm.tests.conftest.get_cmd_ps_output_request",
    "winrm.tests.conftest.get_ps_output_response",
    "winrm.tests.conftest.open_shell_request",
    "winrm.tests.conftest.open_shell_response",
    "winrm.tests.conftest.run_cmd_ps_response",
    "winrm.tests.conftest.run_cmd_req_input",
    "winrm.tests.conftest.run_cmd_req_input_response",
    "winrm.tests.conftest.run_cmd_send_input",
    "winrm.tests.conftest.run_cmd_send_input_get_output",
    "winrm.tests.conftest.run_cmd_send_input_get_output_response",
    "winrm.tests.conftest.run_cmd_send_input_response",
    "winrm.tests.conftest.run_cmd_with_args_request",
    "winrm.tests.conftest.run_cmd_wo_args_request",
    "winrm.tests.conftest.run_ps_request",
    "winrm.tests.conftest.stdin_cmd_cleanup",
    "winrm.tests.conftest.stdin_cmd_cleanup_response",
    "winrm.tests.conftest.xml_str_compare"
   ]
  },
  "type": "function"
 },
 "winrm.tests.conftest.cleanup_cmd_request": {
  "data": {
   "lineno": 203
  },
  "type": "constant"
 },
 "winrm.tests.conftest.cleanup_cmd_response": {
  "data": {
   "lineno": 229
  },
  "type": "constant"
 },
 "winrm.tests.conftest.close_shell_request": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "winrm.tests.conftest.close_shell_response": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "winrm.tests.conftest.fixture": {
  "data": {
   "shadows": "pytest.fixture"
  },
  "type": "import"
 },
 "winrm.tests.conftest.get_cmd_output_response": {
  "data": {
   "lineno": 269
  },
  "type": "constant"
 },
 "winrm.tests.conftest.get_cmd_ps_output_request": {
  "data": {
   "lineno": 243
  },
  "type": "constant"
 },
 "winrm.tests.conftest.get_ps_output_response": {
  "data": {
   "lineno": 291
  },
  "type": "constant"
 },
 "winrm.tests.conftest.open_shell_request": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "winrm.tests.conftest.open_shell_response": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "winrm.tests.conftest.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "winrm.tests.conftest.patch": {
  "data": {
   "shadows": "mock.patch"
  },
  "type": "import"
 },
 "winrm.tests.conftest.protocol_fake": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "mock.patch",
    "pytest.fixture",
    "winrm.protocol.Protocol",
    "winrm.tests.conftest.TransportStub",
    "winrm.tests.conftest.uuid"
   ]
  },
  "type": "function"
 },
 "winrm.tests.conftest.protocol_fake.uuid4_patch_stop": {
  "data": {
   "lineno": 565
  },
  "type": "function"
 },
 "winrm.tests.conftest.protocol_real": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "dict",
    "pytest.fixture",
    "pytest.skip",
    "winrm.protocol.Protocol",
    "winrm.tests.conftest.os"
   ]
  },
  "type": "function"
 },
 "winrm.tests.conftest.run_cmd_ps_response": {
  "data": {
   "lineno": 156
  },
  "type": "constant"
 },
 "winrm.tests.conftest.run_cmd_req_input": {
  "data": {
   "lineno": 314
  },
  "type": "constant"
 },
 "winrm.tests.conftest.run_cmd_req_input_response": {
  "data": {
   "lineno": 345
  },
  "type": "constant"
 },
 "winrm.tests.conftest.run_cmd_send_input": {
  "data": {
   "lineno": 362
  },
  "type": "constant"
 },
 "winrm.tests.conftest.run_cmd_send_input_get_output": {
  "data": {
   "lineno": 404
  },
  "type": "constant"
 },
 "winrm.tests.conftest.run_cmd_send_input_get_output_response": {
  "data": {
   "lineno": 431
  },
  "type": "constant"
 },
 "winrm.tests.conftest.run_cmd_send_input_response": {
  "data": {
   "lineno": 389
  },
  "type": "constant"
 },
 "winrm.tests.conftest.run_cmd_with_args_request": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "winrm.tests.conftest.run_cmd_wo_args_request": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "winrm.tests.conftest.run_ps_request": {
  "data": {
   "lineno": 173
  },
  "type": "constant"
 },
 "winrm.tests.conftest.skip": {
  "data": {
   "shadows": "pytest.skip"
  },
  "type": "import"
 },
 "winrm.tests.conftest.sort_dict": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "sorted"
   ]
  },
  "type": "function"
 },
 "winrm.tests.conftest.stdin_cmd_cleanup": {
  "data": {
   "lineno": 454
  },
  "type": "constant"
 },
 "winrm.tests.conftest.stdin_cmd_cleanup_response": {
  "data": {
   "lineno": 481
  },
  "type": "constant"
 },
 "winrm.tests.conftest.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "winrm.tests.conftest.xml_str_compare": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "winrm.tests.conftest.sort_dict",
    "winrm.tests.conftest.xmltodict"
   ]
  },
  "type": "function"
 },
 "winrm.tests.conftest.xmltodict": {
  "data": {
   "shadows": "xmltodict"
  },
  "type": "import"
 },
 "winrm.tests.test_cmd": {
  "data": {},
  "type": "module"
 },
 "winrm.tests.test_integration_protocol": {
  "data": {
   "symbols_in_volume": [
    "winrm.tests.test_integration_protocol.pytest"
   ]
  },
  "type": "module"
 },
 "winrm.tests.test_integration_protocol.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "winrm.tests.test_integration_protocol.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "winrm.tests.test_integration_protocol.test_get_command_output": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_integration_protocol.test_open_shell_and_close_shell": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "winrm.tests.test_integration_protocol.re"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_integration_protocol.test_run_command_taking_more_than_operation_timeout_sec": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "len",
    "winrm.tests.test_integration_protocol.re"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_integration_protocol.test_run_command_with_arguments_and_cleanup_command": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "winrm.tests.test_integration_protocol.re"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_integration_protocol.test_run_command_with_env": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "dict",
    "winrm.tests.test_integration_protocol.re"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_integration_protocol.test_run_command_without_arguments_and_cleanup_command": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "winrm.tests.test_integration_protocol.re"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_integration_protocol.test_set_locale": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "NotImplementedError",
    "winrm.tests.test_integration_protocol.xfail"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_integration_protocol.test_set_max_env_size": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "NotImplementedError",
    "winrm.tests.test_integration_protocol.xfail"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_integration_protocol.test_set_timeout": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "NotImplementedError",
    "winrm.tests.test_integration_protocol.xfail"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_integration_protocol.test_unicode_roundtrip": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_integration_protocol.xfail": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "winrm.tests.test_integration_session": {
  "data": {
   "symbols_in_volume": [
    "winrm.tests.test_integration_session.pytest"
   ]
  },
  "type": "module"
 },
 "winrm.tests.test_integration_session.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "winrm.tests.test_integration_session.test_run_cmd": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "NotImplementedError",
    "winrm.tests.test_integration_session.xfail"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_integration_session.xfail": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "winrm.tests.test_nori_type_casting": {
  "data": {},
  "type": "module"
 },
 "winrm.tests.test_powershell": {
  "data": {},
  "type": "module"
 },
 "winrm.tests.test_protocol": {
  "data": {},
  "type": "module"
 },
 "winrm.tests.test_protocol.Protocol": {
  "data": {
   "shadows": "winrm.protocol.Protocol"
  },
  "type": "import"
 },
 "winrm.tests.test_protocol.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "winrm.tests.test_protocol.test_fail_set_operation_timeout_as_sec": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "ValueError",
    "str",
    "winrm.protocol.Protocol",
    "winrm.tests.test_protocol.pytest"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_protocol.test_fail_set_read_timeout_as_sec": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ValueError",
    "str",
    "winrm.protocol.Protocol",
    "winrm.tests.test_protocol.pytest"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_protocol.test_get_command_output": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_protocol.test_open_shell_and_close_shell": {
  "data": {
   "lineno": 6
  },
  "type": "function"
 },
 "winrm.tests.test_protocol.test_run_command_with_arguments_and_cleanup_command": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "winrm.tests.test_protocol.test_run_command_without_arguments_and_cleanup_command": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "winrm.tests.test_protocol.test_send_command_input": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_protocol.test_set_timeout_as_sec": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "winrm.protocol.Protocol"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_session": {
  "data": {},
  "type": "module"
 },
 "winrm.tests.test_session.Session": {
  "data": {
   "shadows": "winrm.Session"
  },
  "type": "import"
 },
 "winrm.tests.test_session.test_decode_clixml_error": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "winrm.Session"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_session.test_decode_clixml_no_clixml": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "winrm.Session"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_session.test_decode_clixml_no_errors": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "winrm.Session"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_session.test_run_cmd": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "len",
    "winrm.Session"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_session.test_run_ps_with_error": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "len",
    "winrm.Session"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_session.test_target_as_full_url": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "winrm.Session"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_session.test_target_as_hostname": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "winrm.Session"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_session.test_target_as_hostname_then_port": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "winrm.Session"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_session.test_target_as_schema_then_hostname": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "winrm.Session"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_session.test_target_as_schema_then_hostname_then_port": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "winrm.Session"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_session.test_target_with_dots": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "winrm.Session"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_transport": {
  "data": {},
  "type": "module"
 },
 "winrm.tests.test_transport.InvalidCredentialsError": {
  "data": {
   "shadows": "winrm.exceptions.InvalidCredentialsError"
  },
  "type": "import"
 },
 "winrm.tests.test_transport.TestTransport": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "winrm.tests.test_transport.unittest"
   ]
  },
  "type": "class"
 },
 "winrm.tests.test_transport.TestTransport.setUp": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "super",
    "winrm.tests.test_transport.TestTransport",
    "winrm.tests.test_transport.os",
    "winrm.transport.DISPLAYED_CA_TRUST_WARNING",
    "winrm.transport.DISPLAYED_PROXY_WARNING"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_transport.TestTransport.tearDown": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "super",
    "winrm.tests.test_transport.TestTransport",
    "winrm.tests.test_transport.os"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_transport.TestTransport.test_build_session_cert_ignore_1": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "winrm.tests.test_transport.os",
    "winrm.transport.Transport"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_transport.TestTransport.test_build_session_cert_ignore_2": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "winrm.tests.test_transport.os",
    "winrm.transport.Transport"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_transport.TestTransport.test_build_session_cert_override_1": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "winrm.tests.test_transport.os",
    "winrm.transport.Transport"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_transport.TestTransport.test_build_session_cert_override_2": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "winrm.tests.test_transport.os",
    "winrm.transport.Transport"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_transport.TestTransport.test_build_session_cert_override_3": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "winrm.tests.test_transport.os",
    "winrm.transport.Transport"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_transport.TestTransport.test_build_session_cert_validate_1": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "winrm.tests.test_transport.os",
    "winrm.transport.Transport"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_transport.TestTransport.test_build_session_cert_validate_2": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "winrm.tests.test_transport.os",
    "winrm.transport.Transport"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_transport.TestTransport.test_build_session_cert_validate_default": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "winrm.transport.Transport"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_transport.TestTransport.test_build_session_cert_validate_default_env": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "winrm.tests.test_transport.os",
    "winrm.transport.Transport"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_transport.TestTransport.test_build_session_invalid_auth": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "str",
    "winrm.exceptions.WinRMError",
    "winrm.transport.Transport"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_transport.TestTransport.test_build_session_invalid_encryption": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "str",
    "winrm.exceptions.WinRMError",
    "winrm.transport.Transport"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_transport.TestTransport.test_build_session_krb_delegation_as_invalid_str": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "ValueError",
    "str",
    "winrm.transport.Transport"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_transport.TestTransport.test_build_session_krb_delegation_as_str": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "winrm.transport.Transport"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_transport.TestTransport.test_build_session_no_password": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "str",
    "winrm.exceptions.InvalidCredentialsError",
    "winrm.transport.Transport"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_transport.TestTransport.test_build_session_no_username": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "str",
    "winrm.exceptions.InvalidCredentialsError",
    "winrm.transport.Transport"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_transport.TestTransport.test_build_session_proxy_defined": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "winrm.transport.Transport"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_transport.TestTransport.test_build_session_proxy_defined_and_env": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "winrm.tests.test_transport.os",
    "winrm.transport.Transport"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_transport.TestTransport.test_build_session_proxy_none": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "winrm.tests.test_transport.os",
    "winrm.transport.Transport"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_transport.TestTransport.test_build_session_proxy_with_env_http": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "winrm.tests.test_transport.os",
    "winrm.transport.Transport"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_transport.TestTransport.test_build_session_proxy_with_env_https": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "winrm.tests.test_transport.os",
    "winrm.transport.Transport"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_transport.TestTransport.test_build_session_server_cert_validation_invalid": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "str",
    "winrm.exceptions.WinRMError",
    "winrm.transport.Transport"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_transport.TestTransport.test_close_session": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "winrm.tests.test_transport.mock",
    "winrm.transport.Transport"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_transport.TestTransport.test_close_session_not_built": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "winrm.tests.test_transport.mock",
    "winrm.transport.Transport"
   ]
  },
  "type": "function"
 },
 "winrm.tests.test_transport.WinRMError": {
  "data": {
   "shadows": "winrm.exceptions.WinRMError"
  },
  "type": "import"
 },
 "winrm.tests.test_transport.mock": {
  "data": {
   "shadows": "mock"
  },
  "type": "import"
 },
 "winrm.tests.test_transport.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "winrm.tests.test_transport.transport": {
  "data": {
   "shadows": "winrm.transport"
  },
  "type": "import"
 },
 "winrm.tests.test_transport.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "winrm.tests.test_wql": {
  "data": {},
  "type": "module"
 },
 "winrm.transport": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "type",
    "winrm.transport.is_py2",
    "winrm.transport.sys"
   ]
  },
  "type": "module"
 },
 "winrm.transport.DISPLAYED_CA_TRUST_WARNING": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "winrm.transport.DISPLAYED_PROXY_WARNING": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "winrm.transport.Encryption": {
  "data": {
   "shadows": "winrm.encryption.Encryption"
  },
  "type": "import"
 },
 "winrm.transport.HAVE_CREDSSP": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "winrm.transport.HAVE_KERBEROS": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "winrm.transport.HAVE_NTLM": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "winrm.transport.HTTPKerberosAuth": {
  "data": {
   "shadows": "winrm.vendor.requests_kerberos.HTTPKerberosAuth"
  },
  "type": "import"
 },
 "winrm.transport.HttpCredSSPAuth": {
  "data": {
   "shadows": "requests_credssp.HttpCredSSPAuth"
  },
  "type": "import"
 },
 "winrm.transport.HttpNtlmAuth": {
  "data": {
   "shadows": "requests_ntlm.HttpNtlmAuth"
  },
  "type": "import"
 },
 "winrm.transport.InsecurePlatformWarning": {
  "data": {
   "shadows": "requests.packages.urllib3.exceptions.InsecurePlatformWarning"
  },
  "type": "import"
 },
 "winrm.transport.InsecureRequestWarning": {
  "data": {
   "shadows": "urllib3.exceptions.InsecureRequestWarning"
  },
  "type": "import"
 },
 "winrm.transport.InvalidCredentialsError": {
  "data": {
   "shadows": "winrm.exceptions.InvalidCredentialsError"
  },
  "type": "import"
 },
 "winrm.transport.REQUIRED": {
  "data": {
   "shadows": "winrm.vendor.requests_kerberos.REQUIRED"
  },
  "type": "import"
 },
 "winrm.transport.SNIMissingWarning": {
  "data": {
   "shadows": "requests.packages.urllib3.exceptions.SNIMissingWarning"
  },
  "type": "import"
 },
 "winrm.transport.Transport": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "winrm.transport.Transport.__init__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "Exception",
    "bool",
    "distutils.util.strtobool",
    "isinstance",
    "requests.packages.urllib3.exceptions.InsecurePlatformWarning",
    "requests.packages.urllib3.exceptions.InsecureRequestWarning",
    "requests.packages.urllib3.exceptions.SNIMissingWarning",
    "str",
    "urllib3.exceptions.InsecureRequestWarning",
    "winrm.exceptions.InvalidCredentialsError",
    "winrm.exceptions.WinRMError",
    "winrm.transport.os",
    "winrm.transport.warnings"
   ]
  },
  "type": "function"
 },
 "winrm.transport.Transport._get_args": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "set",
    "str",
    "winrm.transport.inspect",
    "winrm.transport.warnings"
   ]
  },
  "type": "function"
 },
 "winrm.transport.Transport._get_message_response_text": {
  "data": {
   "lineno": 341
  },
  "type": "function"
 },
 "winrm.transport.Transport._send_message_request": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "winrm.exceptions.InvalidCredentialsError",
    "winrm.exceptions.WinRMTransportError",
    "winrm.transport.requests"
   ]
  },
  "type": "function"
 },
 "winrm.transport.Transport.build_session": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "DeprecationWarning",
    "dict",
    "hasattr",
    "requests_credssp.HttpCredSSPAuth",
    "requests_credssp.HttpCredSSPAuth.__init__",
    "requests_ntlm.HttpNtlmAuth",
    "requests_ntlm.HttpNtlmAuth.__init__",
    "winrm.exceptions.WinRMError",
    "winrm.transport.DISPLAYED_CA_TRUST_WARNING",
    "winrm.transport.DISPLAYED_PROXY_WARNING",
    "winrm.transport.HAVE_CREDSSP",
    "winrm.transport.HAVE_KERBEROS",
    "winrm.transport.HAVE_NTLM",
    "winrm.transport.os",
    "winrm.transport.requests",
    "winrm.transport.warnings",
    "winrm.vendor.requests_kerberos.HTTPKerberosAuth",
    "winrm.vendor.requests_kerberos.HTTPKerberosAuth.__init__",
    "winrm.vendor.requests_kerberos.REQUIRED"
   ]
  },
  "type": "function"
 },
 "winrm.transport.Transport.close_session": {
  "data": {
   "lineno": 302
  },
  "type": "function"
 },
 "winrm.transport.Transport.send_message": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "isinstance",
    "winrm.transport.requests",
    "winrm.transport.unicode_type"
   ]
  },
  "type": "function"
 },
 "winrm.transport.Transport.setup_encryption": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "winrm.encryption.Encryption",
    "winrm.transport.requests"
   ]
  },
  "type": "function"
 },
 "winrm.transport.UnsupportedAuthArgument": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "Warning"
   ]
  },
  "type": "class"
 },
 "winrm.transport.WinRMError": {
  "data": {
   "shadows": "winrm.exceptions.WinRMError"
  },
  "type": "import"
 },
 "winrm.transport.WinRMTransportError": {
  "data": {
   "shadows": "winrm.exceptions.WinRMTransportError"
  },
  "type": "import"
 },
 "winrm.transport.__all__": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "winrm.transport.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "winrm.transport.is_py2": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "winrm.transport.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "winrm.transport.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "winrm.transport.requests.auth": {
  "data": {
   "shadows": "requests.auth"
  },
  "type": "import"
 },
 "winrm.transport.strtobool": {
  "data": {
   "shadows": "distutils.util.strtobool"
  },
  "type": "import"
 },
 "winrm.transport.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "winrm.transport.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "winrm.transport.unicode_type": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "winrm.transport.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "winrm.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "winrm.vendor": {
  "data": {},
  "type": "module"
 },
 "winrm.vendor.requests_kerberos": {
  "data": {
   "symbols_in_volume": [
    "NullHandler",
    "__name__",
    "winrm.vendor.requests_kerberos.logging"
   ]
  },
  "type": "module"
 },
 "winrm.vendor.requests_kerberos.__all__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "winrm.vendor.requests_kerberos.__version__": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "winrm.vendor.requests_kerberos.compat": {
  "data": {
   "symbols_in_volume": [
    "winrm.vendor.requests_kerberos.compat.sys"
   ]
  },
  "type": "module"
 },
 "winrm.vendor.requests_kerberos.compat.Handler": {
  "data": {
   "shadows": "logging.Handler"
  },
  "type": "import"
 },
 "winrm.vendor.requests_kerberos.compat.NullHandler": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "logging.Handler"
   ]
  },
  "type": "class"
 },
 "winrm.vendor.requests_kerberos.compat.NullHandler.emit": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "winrm.vendor.requests_kerberos.compat.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "winrm.vendor.requests_kerberos.exceptions": {
  "data": {},
  "type": "module"
 },
 "winrm.vendor.requests_kerberos.exceptions.KerberosExchangeError": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "requests.exceptions.RequestException"
   ]
  },
  "type": "class"
 },
 "winrm.vendor.requests_kerberos.exceptions.MutualAuthenticationError": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "requests.exceptions.RequestException"
   ]
  },
  "type": "class"
 },
 "winrm.vendor.requests_kerberos.exceptions.RequestException": {
  "data": {
   "shadows": "requests.exceptions.RequestException"
  },
  "type": "import"
 },
 "winrm.vendor.requests_kerberos.kerberos_": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "winrm.vendor.requests_kerberos.kerberos_.logging"
   ]
  },
  "type": "module"
 },
 "winrm.vendor.requests_kerberos.kerberos_.AuthBase": {
  "data": {
   "shadows": "requests.auth.AuthBase"
  },
  "type": "import"
 },
 "winrm.vendor.requests_kerberos.kerberos_.CaseInsensitiveDict": {
  "data": {
   "shadows": "requests.structures.CaseInsensitiveDict"
  },
  "type": "import"
 },
 "winrm.vendor.requests_kerberos.kerberos_.DISABLED": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "winrm.vendor.requests_kerberos.kerberos_.HTTPKerberosAuth": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "requests.auth.AuthBase"
   ]
  },
  "type": "class"
 },
 "winrm.vendor.requests_kerberos.kerberos_.HTTPKerberosAuth.__call__": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "AttributeError",
    "requests.compat.urlparse",
    "winrm.vendor.requests_kerberos.kerberos_.log"
   ]
  },
  "type": "function"
 },
 "winrm.vendor.requests_kerberos.kerberos_.HTTPKerberosAuth.__init__": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "hasattr",
    "winkerberos",
    "winrm.vendor.requests_kerberos.kerberos_.REQUIRED"
   ]
  },
  "type": "function"
 },
 "winrm.vendor.requests_kerberos.kerberos_.HTTPKerberosAuth.authenticate_server": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "requests.compat.urlparse",
    "winkerberos.GSSError",
    "winkerberos.authGSSClientStep",
    "winrm.vendor.requests_kerberos.kerberos_._negotiate_value",
    "winrm.vendor.requests_kerberos.kerberos_.log"
   ]
  },
  "type": "function"
 },
 "winrm.vendor.requests_kerberos.kerberos_.HTTPKerberosAuth.authenticate_user": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "KerberosExchangeError",
    "requests.compat.urlparse",
    "winrm.vendor.requests_kerberos.kerberos_.log"
   ]
  },
  "type": "function"
 },
 "winrm.vendor.requests_kerberos.kerberos_.HTTPKerberosAuth.deregister": {
  "data": {
   "lineno": 431
  },
  "type": "function"
 },
 "winrm.vendor.requests_kerberos.kerberos_.HTTPKerberosAuth.generate_request_header": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "EnvironmentError",
    "KerberosExchangeError",
    "str",
    "winkerberos.GSSError",
    "winkerberos.GSS_C_DELEG_FLAG",
    "winkerberos.GSS_C_MUTUAL_FLAG",
    "winkerberos.GSS_C_SEQUENCE_FLAG",
    "winkerberos.authGSSClientInit",
    "winkerberos.authGSSClientResponse",
    "winkerberos.authGSSClientStep",
    "winrm.vendor.requests_kerberos.kerberos_._negotiate_value",
    "winrm.vendor.requests_kerberos.kerberos_.log"
   ]
  },
  "type": "function"
 },
 "winrm.vendor.requests_kerberos.kerberos_.HTTPKerberosAuth.handle_401": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "winrm.vendor.requests_kerberos.kerberos_._negotiate_value",
    "winrm.vendor.requests_kerberos.kerberos_.log"
   ]
  },
  "type": "function"
 },
 "winrm.vendor.requests_kerberos.kerberos_.HTTPKerberosAuth.handle_other": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "MutualAuthenticationError",
    "winrm.vendor.requests_kerberos.kerberos_.OPTIONAL",
    "winrm.vendor.requests_kerberos.kerberos_.REQUIRED",
    "winrm.vendor.requests_kerberos.kerberos_.SanitizedResponse",
    "winrm.vendor.requests_kerberos.kerberos_._negotiate_value",
    "winrm.vendor.requests_kerberos.kerberos_.log"
   ]
  },
  "type": "function"
 },
 "winrm.vendor.requests_kerberos.kerberos_.HTTPKerberosAuth.handle_response": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "AttributeError",
    "winkerberos.channelBindings",
    "winrm.vendor.requests_kerberos.kerberos_._get_channel_bindings_application_data",
    "winrm.vendor.requests_kerberos.kerberos_.log"
   ]
  },
  "type": "function"
 },
 "winrm.vendor.requests_kerberos.kerberos_.HTTPKerberosAuth.unwrap_winrm": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "NotImplementedError",
    "winkerberos.authGSSWinRMDecryptMessage"
   ]
  },
  "type": "function"
 },
 "winrm.vendor.requests_kerberos.kerberos_.HTTPKerberosAuth.wrap_winrm": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "NotImplementedError",
    "winkerberos.authGSSWinRMEncryptMessage"
   ]
  },
  "type": "function"
 },
 "winrm.vendor.requests_kerberos.kerberos_.HTTPResponse": {
  "data": {
   "shadows": "requests.packages.urllib3.HTTPResponse"
  },
  "type": "import"
 },
 "winrm.vendor.requests_kerberos.kerberos_.NoCertificateRetrievedWarning": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "Warning"
   ]
  },
  "type": "class"
 },
 "winrm.vendor.requests_kerberos.kerberos_.OPTIONAL": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "winrm.vendor.requests_kerberos.kerberos_.REQUIRED": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "winrm.vendor.requests_kerberos.kerberos_.Response": {
  "data": {
   "shadows": "requests.models.Response"
  },
  "type": "import"
 },
 "winrm.vendor.requests_kerberos.kerberos_.SanitizedResponse": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "requests.models.Response"
   ]
  },
  "type": "class"
 },
 "winrm.vendor.requests_kerberos.kerberos_.SanitizedResponse.__init__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "requests.cookies.cookiejar_from_dict",
    "requests.structures.CaseInsensitiveDict",
    "super",
    "winrm.vendor.requests_kerberos.kerberos_.SanitizedResponse"
   ]
  },
  "type": "function"
 },
 "winrm.vendor.requests_kerberos.kerberos_.StringIO": {
  "data": {
   "shadows": "requests.compat.StringIO"
  },
  "type": "import"
 },
 "winrm.vendor.requests_kerberos.kerberos_.UnknownSignatureAlgorithmOID": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "Warning"
   ]
  },
  "type": "class"
 },
 "winrm.vendor.requests_kerberos.kerberos_.UnsupportedAlgorithm": {
  "data": {
   "shadows": "cryptography.exceptions.UnsupportedAlgorithm"
  },
  "type": "import"
 },
 "winrm.vendor.requests_kerberos.kerberos_._get_certificate_hash": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "cryptography.exceptions.UnsupportedAlgorithm",
    "cryptography.hazmat.backends.default_backend",
    "cryptography.hazmat.primitives.hashes.Hash",
    "cryptography.hazmat.primitives.hashes.SHA256",
    "cryptography.x509.load_der_x509_certificate",
    "str",
    "winrm.vendor.requests_kerberos.kerberos_.UnknownSignatureAlgorithmOID",
    "winrm.vendor.requests_kerberos.kerberos_.warnings"
   ]
  },
  "type": "function"
 },
 "winrm.vendor.requests_kerberos.kerberos_._get_channel_bindings_application_data": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "AttributeError",
    "isinstance",
    "requests.packages.urllib3.HTTPResponse",
    "winrm.vendor.requests_kerberos.kerberos_.NoCertificateRetrievedWarning",
    "winrm.vendor.requests_kerberos.kerberos_._get_certificate_hash",
    "winrm.vendor.requests_kerberos.kerberos_.sys",
    "winrm.vendor.requests_kerberos.kerberos_.warnings"
   ]
  },
  "type": "function"
 },
 "winrm.vendor.requests_kerberos.kerberos_._negotiate_value": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "hasattr",
    "winrm.vendor.requests_kerberos.kerberos_.re"
   ]
  },
  "type": "function"
 },
 "winrm.vendor.requests_kerberos.kerberos_.cookiejar_from_dict": {
  "data": {
   "shadows": "requests.cookies.cookiejar_from_dict"
  },
  "type": "import"
 },
 "winrm.vendor.requests_kerberos.kerberos_.default_backend": {
  "data": {
   "shadows": "cryptography.hazmat.backends.default_backend"
  },
  "type": "import"
 },
 "winrm.vendor.requests_kerberos.kerberos_.hashes": {
  "data": {
   "shadows": "cryptography.hazmat.primitives.hashes"
  },
  "type": "import"
 },
 "winrm.vendor.requests_kerberos.kerberos_.kerberos": {
  "data": {
   "shadows": "winkerberos"
  },
  "type": "import"
 },
 "winrm.vendor.requests_kerberos.kerberos_.log": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "winrm.vendor.requests_kerberos.kerberos_.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "winrm.vendor.requests_kerberos.kerberos_.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "winrm.vendor.requests_kerberos.kerberos_.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "winrm.vendor.requests_kerberos.kerberos_.urlparse": {
  "data": {
   "shadows": "requests.compat.urlparse"
  },
  "type": "import"
 },
 "winrm.vendor.requests_kerberos.kerberos_.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "winrm.vendor.requests_kerberos.kerberos_.x509": {
  "data": {
   "shadows": "cryptography.x509"
  },
  "type": "import"
 },
 "winrm.vendor.requests_kerberos.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 }
}