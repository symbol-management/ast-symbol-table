{
 "winrm": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "winrm.Response": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "class"
 },
 "winrm.Response.__init__": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "winrm.Response.__repr__": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "winrm.Session": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "class"
 },
 "winrm.Session.__init__": {
  "lineno": 29,
  "symbols_in_volume": [
   "winrm.protocol.Protocol"
  ],
  "type": "function"
 },
 "winrm.Session._build_url": {
  "lineno": 102,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "winrm.Session._clean_error_msg": {
  "lineno": 57,
  "symbols_in_volume": [
   "xml.etree.ElementTree.fromstring"
  ],
  "type": "function"
 },
 "winrm.Session._strip_namespace": {
  "lineno": 91,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "function"
 },
 "winrm.Session.run_cmd": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "winrm.Session.run_ps": {
  "lineno": 44,
  "symbols_in_volume": [
   "base64.b64encode"
  ],
  "type": "function"
 },
 "winrm.encryption": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version"
  ],
  "type": "module"
 },
 "winrm.encryption.Encryption": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "winrm.encryption.Encryption.__init__": {
  "lineno": 19,
  "symbols_in_volume": [
   "winrm.exceptions.WinRMError"
  ],
  "type": "function"
 },
 "winrm.encryption.Encryption._build_credssp_message": {
  "lineno": 181,
  "symbols_in_volume": [
   "struct.pack"
  ],
  "type": "function"
 },
 "winrm.encryption.Encryption._build_kerberos_message": {
  "lineno": 188,
  "symbols_in_volume": [
   "struct.pack"
  ],
  "type": "function"
 },
 "winrm.encryption.Encryption._build_ntlm_message": {
  "lineno": 175,
  "symbols_in_volume": [
   "struct.pack"
  ],
  "type": "function"
 },
 "winrm.encryption.Encryption._decrypt_credssp_message": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "winrm.encryption.Encryption._decrypt_kerberos_message": {
  "lineno": 165,
  "symbols_in_volume": [
   "struct.unpack"
  ],
  "type": "function"
 },
 "winrm.encryption.Encryption._decrypt_ntlm_message": {
  "lineno": 148,
  "symbols_in_volume": [
   "struct.unpack"
  ],
  "type": "function"
 },
 "winrm.encryption.Encryption._decrypt_response": {
  "lineno": 119,
  "symbols_in_volume": [
   "winrm.exceptions.WinRMError"
  ],
  "type": "function"
 },
 "winrm.encryption.Encryption._encrypt_message": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "winrm.encryption.Encryption._get_credssp_trailer_length": {
  "lineno": 194,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "winrm.encryption.Encryption.parse_encrypted_response": {
  "lineno": 90,
  "symbols_in_volume": [
   "urllib.parse.urlsplit"
  ],
  "type": "function"
 },
 "winrm.encryption.Encryption.prepare_encrypted_request": {
  "lineno": 58,
  "symbols_in_volume": [
   "requests.Request",
   "urllib.parse.urlsplit"
  ],
  "type": "function"
 },
 "winrm.exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "winrm.exceptions.AuthenticationError": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "class"
 },
 "winrm.exceptions.BasicAuthDisabledError": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "class"
 },
 "winrm.exceptions.InvalidCredentialsError": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "class"
 },
 "winrm.exceptions.WinRMError": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "class"
 },
 "winrm.exceptions.WinRMOperationTimeoutError": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "class"
 },
 "winrm.exceptions.WinRMTransportError": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "winrm.exceptions.WinRMTransportError.__str__": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "winrm.exceptions.WinRMTransportError.code": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "winrm.exceptions.WinRMTransportError.message": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "winrm.exceptions.WinRMTransportError.protocol": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "winrm.exceptions.WinRMTransportError.response_text": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "winrm.protocol": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "winrm.protocol.Protocol": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "class"
 },
 "winrm.protocol.Protocol.__init__": {
  "lineno": 30,
  "symbols_in_volume": [
   "winrm.exceptions.WinRMError",
   "winrm.transport.Transport"
  ],
  "type": "function"
 },
 "winrm.protocol.Protocol._get_soap_header": {
  "lineno": 167,
  "symbols_in_volume": [
   "uuid.uuid4"
  ],
  "type": "function"
 },
 "winrm.protocol.Protocol._raw_get_command_output": {
  "lineno": 406,
  "symbols_in_volume": [
   "base64.b64decode",
   "xml.etree.ElementTree.fromstring",
   "xmltodict.unparse"
  ],
  "type": "function"
 },
 "winrm.protocol.Protocol.cleanup_command": {
  "lineno": 348,
  "symbols_in_volume": [
   "uuid.UUID",
   "uuid.uuid4",
   "xml.etree.ElementTree.fromstring",
   "xmltodict.unparse"
  ],
  "type": "function"
 },
 "winrm.protocol.Protocol.close_shell": {
  "lineno": 274,
  "symbols_in_volume": [
   "uuid.UUID",
   "uuid.uuid4",
   "xml.etree.ElementTree.fromstring",
   "xmltodict.unparse"
  ],
  "type": "function"
 },
 "winrm.protocol.Protocol.get_command_output": {
  "lineno": 380,
  "symbols_in_volume": [
   "winrm.exceptions.WinRMOperationTimeoutError"
  ],
  "type": "function"
 },
 "winrm.protocol.Protocol.open_shell": {
  "lineno": 104,
  "symbols_in_volume": [
   "xml.etree.ElementTree.fromstring",
   "xmltodict.unparse"
  ],
  "type": "function"
 },
 "winrm.protocol.Protocol.run_command": {
  "lineno": 301,
  "symbols_in_volume": [
   "six.text_type",
   "xml.etree.ElementTree.fromstring",
   "xmltodict.unparse"
  ],
  "type": "function"
 },
 "winrm.protocol.Protocol.send_message": {
  "lineno": 230,
  "symbols_in_volume": [
   "winrm.exceptions.WinRMError",
   "winrm.exceptions.WinRMOperationTimeoutError",
   "winrm.exceptions.WinRMTransportError",
   "xml.etree.ElementTree.fromstring"
  ],
  "type": "function"
 },
 "winrm.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "winrm.tests.conftest": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "winrm.tests.conftest.TransportStub": {
  "lineno": 278,
  "symbols_in_volume": [],
  "type": "class"
 },
 "winrm.tests.conftest.TransportStub.send_message": {
  "lineno": 279,
  "symbols_in_volume": [],
  "type": "function"
 },
 "winrm.tests.conftest.protocol_fake": {
  "lineno": 296,
  "symbols_in_volume": [
   "mock.patch",
   "pytest.fixture",
   "uuid.UUID",
   "winrm.protocol.Protocol"
  ],
  "type": "function"
 },
 "winrm.tests.conftest.protocol_fake.uuid4_patch_stop": {
  "lineno": 313,
  "symbols_in_volume": [],
  "type": "function"
 },
 "winrm.tests.conftest.protocol_real": {
  "lineno": 320,
  "symbols_in_volume": [
   "os.environ.get",
   "pytest.fixture",
   "pytest.skip",
   "winrm.protocol.Protocol"
  ],
  "type": "function"
 },
 "winrm.tests.conftest.sort_dict": {
  "lineno": 261,
  "symbols_in_volume": [],
  "type": "function"
 },
 "winrm.tests.conftest.xml_str_compare": {
  "lineno": 270,
  "symbols_in_volume": [
   "xmltodict.parse"
  ],
  "type": "function"
 },
 "winrm.tests.test_cmd": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "winrm.tests.test_encryption": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "winrm.tests.test_encryption.AuthTest": {
  "lineno": 248,
  "symbols_in_volume": [],
  "type": "class"
 },
 "winrm.tests.test_encryption.AuthTest.__init__": {
  "lineno": 249,
  "symbols_in_volume": [],
  "type": "function"
 },
 "winrm.tests.test_encryption.AuthTest.unwrap": {
  "lineno": 261,
  "symbols_in_volume": [],
  "type": "function"
 },
 "winrm.tests.test_encryption.AuthTest.wrap": {
  "lineno": 256,
  "symbols_in_volume": [],
  "type": "function"
 },
 "winrm.tests.test_encryption.RequestTest": {
  "lineno": 278,
  "symbols_in_volume": [],
  "type": "class"
 },
 "winrm.tests.test_encryption.RequestTest.__init__": {
  "lineno": 279,
  "symbols_in_volume": [],
  "type": "function"
 },
 "winrm.tests.test_encryption.ResponseTest": {
  "lineno": 283,
  "symbols_in_volume": [],
  "type": "class"
 },
 "winrm.tests.test_encryption.ResponseTest.__init__": {
  "lineno": 284,
  "symbols_in_volume": [],
  "type": "function"
 },
 "winrm.tests.test_encryption.SessionSecurityTest": {
  "lineno": 266,
  "symbols_in_volume": [],
  "type": "class"
 },
 "winrm.tests.test_encryption.SessionSecurityTest.unwrap": {
  "lineno": 272,
  "symbols_in_volume": [
   "base64.b64decode"
  ],
  "type": "function"
 },
 "winrm.tests.test_encryption.SessionSecurityTest.wrap": {
  "lineno": 267,
  "symbols_in_volume": [
   "base64.b64encode"
  ],
  "type": "function"
 },
 "winrm.tests.test_encryption.SessionTest": {
  "lineno": 239,
  "symbols_in_volume": [],
  "type": "class"
 },
 "winrm.tests.test_encryption.SessionTest.__init__": {
  "lineno": 240,
  "symbols_in_volume": [],
  "type": "function"
 },
 "winrm.tests.test_encryption.SessionTest.prepare_request": {
  "lineno": 243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "winrm.tests.test_encryption.test_decrypt_large_credssp_message": {
  "lineno": 144,
  "symbols_in_volume": [
   "base64.b64encode",
   "struct.pack",
   "winrm.encryption.Encryption"
  ],
  "type": "function"
 },
 "winrm.tests.test_encryption.test_decrypt_message": {
  "lineno": 80,
  "symbols_in_volume": [
   "struct.pack",
   "winrm.encryption.Encryption"
  ],
  "type": "function"
 },
 "winrm.tests.test_encryption.test_decrypt_message_boundary_with_end_hyphens": {
  "lineno": 101,
  "symbols_in_volume": [
   "struct.pack",
   "winrm.encryption.Encryption"
  ],
  "type": "function"
 },
 "winrm.tests.test_encryption.test_decrypt_message_decryption_not_needed": {
  "lineno": 183,
  "symbols_in_volume": [
   "winrm.encryption.Encryption"
  ],
  "type": "function"
 },
 "winrm.tests.test_encryption.test_decrypt_message_length_mismatch": {
  "lineno": 122,
  "symbols_in_volume": [
   "pytest.raises",
   "struct.pack",
   "winrm.encryption.Encryption",
   "winrm.exceptions.WinRMError"
  ],
  "type": "function"
 },
 "winrm.tests.test_encryption.test_encrypt_large_credssp_message": {
  "lineno": 41,
  "symbols_in_volume": [
   "base64.b64encode",
   "struct.pack",
   "winrm.encryption.Encryption"
  ],
  "type": "function"
 },
 "winrm.tests.test_encryption.test_encrypt_message": {
  "lineno": 16,
  "symbols_in_volume": [
   "struct.pack",
   "winrm.encryption.Encryption"
  ],
  "type": "function"
 },
 "winrm.tests.test_encryption.test_get_credssp_trailer_length_gcm": {
  "lineno": 194,
  "symbols_in_volume": [
   "winrm.encryption.Encryption"
  ],
  "type": "function"
 },
 "winrm.tests.test_encryption.test_get_credssp_trailer_length_md5_rc4": {
  "lineno": 203,
  "symbols_in_volume": [
   "winrm.encryption.Encryption"
  ],
  "type": "function"
 },
 "winrm.tests.test_encryption.test_get_credssp_trailer_length_no_hash": {
  "lineno": 230,
  "symbols_in_volume": [
   "winrm.encryption.Encryption"
  ],
  "type": "function"
 },
 "winrm.tests.test_encryption.test_get_credssp_trailer_length_sha256_3des": {
  "lineno": 212,
  "symbols_in_volume": [
   "winrm.encryption.Encryption"
  ],
  "type": "function"
 },
 "winrm.tests.test_encryption.test_get_credssp_trailer_length_sha384_aes": {
  "lineno": 221,
  "symbols_in_volume": [
   "winrm.encryption.Encryption"
  ],
  "type": "function"
 },
 "winrm.tests.test_encryption.test_init_with_invalid_protocol": {
  "lineno": 9,
  "symbols_in_volume": [
   "pytest.raises",
   "winrm.encryption.Encryption",
   "winrm.exceptions.WinRMError"
  ],
  "type": "function"
 },
 "winrm.tests.test_integration_protocol": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.mark.xfail"
  ],
  "type": "module"
 },
 "winrm.tests.test_integration_protocol.test_get_command_output": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "winrm.tests.test_integration_protocol.test_open_shell_and_close_shell": {
  "lineno": 26,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "winrm.tests.test_integration_protocol.test_run_command_taking_more_than_operation_timeout_sec": {
  "lineno": 65,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "winrm.tests.test_integration_protocol.test_run_command_with_arguments_and_cleanup_command": {
  "lineno": 33,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "winrm.tests.test_integration_protocol.test_run_command_without_arguments_and_cleanup_command": {
  "lineno": 42,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "winrm.tests.test_integration_protocol.test_set_locale": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "winrm.tests.test_integration_protocol.test_set_max_env_size": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "winrm.tests.test_integration_protocol.test_set_timeout": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "winrm.tests.test_integration_protocol.test_unicode_roundtrip": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "winrm.tests.test_integration_session": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.mark.xfail"
  ],
  "type": "module"
 },
 "winrm.tests.test_integration_session.test_run_cmd": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "function"
 },
 "winrm.tests.test_nori_type_casting": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "winrm.tests.test_powershell": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "winrm.tests.test_protocol": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "winrm.tests.test_protocol.test_fail_set_operation_timeout_as_sec": {
  "lineno": 65,
  "symbols_in_volume": [
   "pytest.raises",
   "winrm.protocol.Protocol"
  ],
  "type": "function"
 },
 "winrm.tests.test_protocol.test_fail_set_read_timeout_as_sec": {
  "lineno": 54,
  "symbols_in_volume": [
   "pytest.raises",
   "winrm.protocol.Protocol"
  ],
  "type": "function"
 },
 "winrm.tests.test_protocol.test_get_command_output": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "winrm.tests.test_protocol.test_open_shell_and_close_shell": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "function"
 },
 "winrm.tests.test_protocol.test_run_command_with_arguments_and_cleanup_command": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "winrm.tests.test_protocol.test_run_command_without_arguments_and_cleanup_command": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "winrm.tests.test_protocol.test_set_timeout_as_sec": {
  "lineno": 44,
  "symbols_in_volume": [
   "winrm.protocol.Protocol"
  ],
  "type": "function"
 },
 "winrm.tests.test_session": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "winrm.tests.test_session.test_run_cmd": {
  "lineno": 4,
  "symbols_in_volume": [
   "winrm.Session"
  ],
  "type": "function"
 },
 "winrm.tests.test_session.test_target_as_full_url": {
  "lineno": 36,
  "symbols_in_volume": [
   "winrm.Session"
  ],
  "type": "function"
 },
 "winrm.tests.test_session.test_target_as_hostname": {
  "lineno": 16,
  "symbols_in_volume": [
   "winrm.Session"
  ],
  "type": "function"
 },
 "winrm.tests.test_session.test_target_as_hostname_then_port": {
  "lineno": 21,
  "symbols_in_volume": [
   "winrm.Session"
  ],
  "type": "function"
 },
 "winrm.tests.test_session.test_target_as_schema_then_hostname": {
  "lineno": 26,
  "symbols_in_volume": [
   "winrm.Session"
  ],
  "type": "function"
 },
 "winrm.tests.test_session.test_target_as_schema_then_hostname_then_port": {
  "lineno": 31,
  "symbols_in_volume": [
   "winrm.Session"
  ],
  "type": "function"
 },
 "winrm.tests.test_session.test_target_with_dots": {
  "lineno": 42,
  "symbols_in_volume": [
   "winrm.Session"
  ],
  "type": "function"
 },
 "winrm.tests.test_transport": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "winrm.tests.test_transport.test_build_session": {
  "lineno": 6,
  "symbols_in_volume": [
   "os.environ",
   "winrm.transport.Transport"
  ],
  "type": "function"
 },
 "winrm.tests.test_wql": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "winrm.transport": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version"
  ],
  "type": "module"
 },
 "winrm.transport.Transport": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "class"
 },
 "winrm.transport.Transport.__init__": {
  "lineno": 56,
  "symbols_in_volume": [
   "distutils.util.strtobool",
   "os.path.exists",
   "requests.packages.urllib3.exceptions.InsecurePlatformWarning",
   "requests.packages.urllib3.exceptions.InsecureRequestWarning",
   "requests.packages.urllib3.exceptions.SNIMissingWarning",
   "urllib3.exceptions.InsecureRequestWarning",
   "warnings.simplefilter",
   "winrm.exceptions.InvalidCredentialsError",
   "winrm.exceptions.WinRMError"
  ],
  "type": "function"
 },
 "winrm.transport.Transport._get_args": {
  "lineno": 282,
  "symbols_in_volume": [
   "inspect.getargspec",
   "warnings.warn"
  ],
  "type": "function"
 },
 "winrm.transport.Transport._get_message_response_text": {
  "lineno": 275,
  "symbols_in_volume": [],
  "type": "function"
 },
 "winrm.transport.Transport._send_message_request": {
  "lineno": 259,
  "symbols_in_volume": [
   "requests.HTTPError",
   "winrm.exceptions.InvalidCredentialsError",
   "winrm.exceptions.WinRMTransportError"
  ],
  "type": "function"
 },
 "winrm.transport.Transport.build_session": {
  "lineno": 147,
  "symbols_in_volume": [
   "requests.Session",
   "requests.auth.HTTPBasicAuth",
   "requests_credssp.HttpCredSSPAuth",
   "requests_kerberos.HTTPKerberosAuth",
   "requests_kerberos.HTTPKerberosAuth.__init__",
   "requests_kerberos.REQUIRED",
   "requests_ntlm.HttpNtlmAuth",
   "requests_ntlm.HttpNtlmAuth.__init__",
   "winrm.exceptions.WinRMError"
  ],
  "type": "function"
 },
 "winrm.transport.Transport.send_message": {
  "lineno": 241,
  "symbols_in_volume": [
   "requests.Request"
  ],
  "type": "function"
 },
 "winrm.transport.Transport.setup_encryption": {
  "lineno": 234,
  "symbols_in_volume": [
   "requests.Request",
   "winrm.encryption.Encryption"
  ],
  "type": "function"
 },
 "winrm.transport.UnsupportedAuthArgument": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "class"
 }
}