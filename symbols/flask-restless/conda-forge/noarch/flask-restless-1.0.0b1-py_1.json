{
 "flask_restless": {
  "data": {},
  "type": "module"
 },
 "flask_restless.__version__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "flask_restless.manager": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple",
    "flask_restless.manager.READONLY_METHODS",
    "flask_restless.manager.WRITEONLY_METHODS",
    "flask_restless.manager.sys",
    "frozenset",
    "str"
   ]
  },
  "type": "module"
 },
 "flask_restless.manager.ALL_METHODS": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "flask_restless.manager.APIInfo": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "flask_restless.manager.APIManager": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "flask_restless.manager.APIManager.__init__": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "ValueError",
    "flask.url_for.register"
   ]
  },
  "type": "function"
 },
 "flask_restless.manager.APIManager.api_name": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "flask_restless.manager.APIManager",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "flask_restless.manager.APIManager.collection_name": {
  "data": {
   "lineno": 282
  },
  "type": "function"
 },
 "flask_restless.manager.APIManager.create_api": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "str",
    "uuid.uuid1"
   ]
  },
  "type": "function"
 },
 "flask_restless.manager.APIManager.create_api_blueprint": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "AttributeError",
    "DefaultDeserializer",
    "DefaultSerializer",
    "__name__",
    "add_rule",
    "collections.defaultdict",
    "dict",
    "flask.Blueprint",
    "flask_restless.manager.APIInfo",
    "flask_restless.manager.APIManager",
    "flask_restless.manager.DEFAULT_URL_PREFIX",
    "flask_restless.manager.IllegalArgumentError",
    "flask_restless.manager.READONLY_METHODS",
    "flask_restless.manager.STRING_TYPES",
    "flask_restless.manager.WRITEONLY_METHODS",
    "frozenset",
    "hasattr",
    "isinstance",
    "list",
    "rapi_view"
   ]
  },
  "type": "function"
 },
 "flask_restless.manager.APIManager.init_app": {
  "data": {
   "lineno": 324
  },
  "type": "function"
 },
 "flask_restless.manager.APIManager.model_for": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "dict"
   ]
  },
  "type": "function"
 },
 "flask_restless.manager.APIManager.primary_key_for": {
  "data": {
   "lineno": 312
  },
  "type": "function"
 },
 "flask_restless.manager.APIManager.serializer_for": {
  "data": {
   "lineno": 297
  },
  "type": "function"
 },
 "flask_restless.manager.APIManager.url_for": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "flask.url_for",
    "flask_restless.manager.APIManager"
   ]
  },
  "type": "function"
 },
 "flask_restless.manager.Blueprint": {
  "data": {
   "shadows": "flask.Blueprint"
  },
  "type": "import"
 },
 "flask_restless.manager.DEFAULT_URL_PREFIX": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "flask_restless.manager.IllegalArgumentError": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "flask_restless.manager.READONLY_METHODS": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "flask_restless.manager.STRING_TYPES": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "flask_restless.manager.WRITEONLY_METHODS": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "flask_restless.manager.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "flask_restless.manager.flask_url_for": {
  "data": {
   "shadows": "flask.url_for"
  },
  "type": "import"
 },
 "flask_restless.manager.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "flask_restless.manager.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "flask_restless.manager.uuid1": {
  "data": {
   "shadows": "uuid.uuid1"
  },
  "type": "import"
 },
 "flask_restless.search": {
  "data": {
   "symbols_in_volume": [
    "flask_restless.search._sub_operator"
   ]
  },
  "type": "module"
 },
 "flask_restless.search.AssociationProxy": {
  "data": {
   "shadows": "sqlalchemy.ext.associationproxy.AssociationProxy"
  },
  "type": "import"
 },
 "flask_restless.search.ComparisonToNull": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "flask_restless.search.ConjunctionFilter": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "flask_restless.search.JunctionFilter"
   ]
  },
  "type": "class"
 },
 "flask_restless.search.DisjunctionFilter": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "flask_restless.search.JunctionFilter"
   ]
  },
  "type": "class"
 },
 "flask_restless.search.FALSE": {
  "data": {
   "shadows": "sqlalchemy.sql.false"
  },
  "type": "import"
 },
 "flask_restless.search.Filter": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "flask_restless.search.Filter.__init__": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "flask_restless.search.Filter.from_dictionary": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "flask_restless.search.ConjunctionFilter",
    "flask_restless.search.DisjunctionFilter",
    "flask_restless.search.Filter",
    "flask_restless.search.UnknownField",
    "from_dict",
    "hasattr",
    "staticmethod",
    "string_to_datetime"
   ]
  },
  "type": "function"
 },
 "flask_restless.search.InstrumentedAttribute": {
  "data": {
   "shadows": "sqlalchemy.orm.attributes.InstrumentedAttribute"
  },
  "type": "import"
 },
 "flask_restless.search.JunctionFilter": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "flask_restless.search.Filter"
   ]
  },
  "type": "class"
 },
 "flask_restless.search.JunctionFilter.__init__": {
  "data": {
   "lineno": 249
  },
  "type": "function"
 },
 "flask_restless.search.JunctionFilter.__iter__": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "flask_restless.search.OPERATORS": {
  "data": {
   "lineno": 96
  },
  "type": "constant"
 },
 "flask_restless.search.UnknownField": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "flask_restless.search.UnknownField.__init__": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "flask_restless.search._sub_operator": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "flask_restless.search.create_operation",
    "get_related_association_proxy_model",
    "isinstance",
    "sqlalchemy.ext.associationproxy.AssociationProxy",
    "sqlalchemy.orm.attributes.InstrumentedAttribute"
   ]
  },
  "type": "function"
 },
 "flask_restless.search.aliased": {
  "data": {
   "shadows": "sqlalchemy.orm.aliased"
  },
  "type": "import"
 },
 "flask_restless.search.and_": {
  "data": {
   "shadows": "sqlalchemy.and_"
  },
  "type": "import"
 },
 "flask_restless.search.create_filter": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "flask_restless.search.ConjunctionFilter",
    "flask_restless.search.JunctionFilter",
    "flask_restless.search.create_operation",
    "getattr",
    "isinstance",
    "sqlalchemy.and_",
    "sqlalchemy.or_"
   ]
  },
  "type": "function"
 },
 "flask_restless.search.create_operation": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "flask_restless.search.ComparisonToNull",
    "flask_restless.search.OPERATORS",
    "flask_restless.search.inspect",
    "getattr",
    "len",
    "opfunc"
   ]
  },
  "type": "function"
 },
 "flask_restless.search.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "flask_restless.search.or_": {
  "data": {
   "shadows": "sqlalchemy.or_"
  },
  "type": "import"
 },
 "flask_restless.search.search": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "direction",
    "flask_restless.search.Filter",
    "flask_restless.search.create_filter",
    "get_related_model",
    "getattr",
    "primary_key_names",
    "session_query",
    "sqlalchemy.orm.aliased"
   ]
  },
  "type": "function"
 },
 "flask_restless.search.search_relationship": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "flask_restless.search.search",
    "get_model",
    "get_related_model",
    "getattr",
    "primary_key_value",
    "session_query",
    "set",
    "sqlalchemy.sql.false"
   ]
  },
  "type": "function"
 },
 "flask_restless.serialization": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "datetime.timedelta",
    "flask_restless.serialization.DefaultRelationshipSerializer",
    "flask_restless.serialization.DefaultSerializer",
    "hasattr"
   ]
  },
  "type": "module"
 },
 "flask_restless.serialization.BuildError": {
  "data": {
   "shadows": "werkzeug.routing.BuildError"
  },
  "type": "import"
 },
 "flask_restless.serialization.COLUMN_BLACKLIST": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "flask_restless.serialization.ClientGeneratedIDNotAllowed": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "flask_restless.serialization.DeserializationException"
   ]
  },
  "type": "class"
 },
 "flask_restless.serialization.ClientGeneratedIDNotAllowed.__init__": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "flask_restless.serialization.ClientGeneratedIDNotAllowed",
    "super"
   ]
  },
  "type": "function"
 },
 "flask_restless.serialization.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "flask_restless.serialization.ConflictingType": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "flask_restless.serialization.DeserializationException"
   ]
  },
  "type": "class"
 },
 "flask_restless.serialization.ConflictingType.__init__": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "flask_restless.serialization.ConflictingType",
    "super"
   ]
  },
  "type": "function"
 },
 "flask_restless.serialization.DefaultDeserializer": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "flask_restless.serialization.Deserializer"
   ]
  },
  "type": "class"
 },
 "flask_restless.serialization.DefaultDeserializer.__call__": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "DRD",
    "collection_name",
    "deserialize",
    "flask_restless.serialization.ClientGeneratedIDNotAllowed",
    "flask_restless.serialization.ConflictingType",
    "flask_restless.serialization.MissingData",
    "flask_restless.serialization.MissingType",
    "flask_restless.serialization.UnknownAttribute",
    "flask_restless.serialization.UnknownRelationship",
    "get_related_model",
    "has_field",
    "setattr",
    "strings_to_datetimes"
   ]
  },
  "type": "function"
 },
 "flask_restless.serialization.DefaultDeserializer.__init__": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "flask_restless.serialization.DefaultDeserializer",
    "super"
   ]
  },
  "type": "function"
 },
 "flask_restless.serialization.DefaultRelationshipDeserializer": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "flask_restless.serialization.Deserializer"
   ]
  },
  "type": "class"
 },
 "flask_restless.serialization.DefaultRelationshipDeserializer.__call__": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "flask_restless.serialization.ConflictingType",
    "flask_restless.serialization.MissingID",
    "flask_restless.serialization.MissingType",
    "get_by",
    "isinstance",
    "list",
    "map"
   ]
  },
  "type": "function"
 },
 "flask_restless.serialization.DefaultRelationshipDeserializer.__init__": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "collection_name",
    "flask_restless.serialization.DefaultRelationshipDeserializer",
    "super"
   ]
  },
  "type": "function"
 },
 "flask_restless.serialization.DefaultRelationshipSerializer": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "flask_restless.serialization.Serializer"
   ]
  },
  "type": "class"
 },
 "flask_restless.serialization.DefaultRelationshipSerializer.__call__": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "collection_name",
    "get_model",
    "primary_key_value",
    "str"
   ]
  },
  "type": "function"
 },
 "flask_restless.serialization.DefaultSerializer": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "flask_restless.serialization.Serializer"
   ]
  },
  "type": "class"
 },
 "flask_restless.serialization.DefaultSerializer.__call__": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "UnicodeEncodeError",
    "ValueError",
    "callable",
    "collection_name",
    "cr",
    "datetime.date",
    "datetime.datetime",
    "datetime.time",
    "datetime.timedelta",
    "dict",
    "flask.request.url_root",
    "flask_restless.serialization.COLUMN_BLACKLIST",
    "flask_restless.serialization.create_relationship",
    "flask_restless.serialization.total_seconds",
    "foreign_keys",
    "get_model",
    "get_relations",
    "getattr",
    "is_mapped_class",
    "isinstance",
    "primary_key_for",
    "primary_key_value",
    "serialize",
    "serializer_for",
    "set",
    "sqlalchemy.exc.NoInspectionAvailable",
    "sqlalchemy.ext.hybrid.HYBRID_PROPERTY",
    "sqlalchemy.inspection.inspect",
    "str",
    "type",
    "url_for",
    "urlparse.urljoin",
    "v",
    "werkzeug.routing.BuildError",
    "werkzeug.urls.url_quote_plus"
   ]
  },
  "type": "function"
 },
 "flask_restless.serialization.DefaultSerializer.__init__": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "flask_restless.serialization.DefaultSerializer",
    "flask_restless.serialization.get_column_name",
    "set",
    "super"
   ]
  },
  "type": "function"
 },
 "flask_restless.serialization.DeserializationException": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "flask_restless.serialization.DeserializationException.__init__": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "flask_restless.serialization.DeserializationException",
    "super"
   ]
  },
  "type": "function"
 },
 "flask_restless.serialization.DeserializationException.message": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "flask_restless.serialization.Deserializer": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "flask_restless.serialization.Deserializer.__call__": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "flask_restless.serialization.Deserializer.__init__": {
  "data": {
   "lineno": 385
  },
  "type": "function"
 },
 "flask_restless.serialization.HYBRID_PROPERTY": {
  "data": {
   "shadows": "sqlalchemy.ext.hybrid.HYBRID_PROPERTY"
  },
  "type": "import"
 },
 "flask_restless.serialization.MissingData": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "flask_restless.serialization.MissingInformation"
   ]
  },
  "type": "class"
 },
 "flask_restless.serialization.MissingID": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "flask_restless.serialization.MissingInformation"
   ]
  },
  "type": "class"
 },
 "flask_restless.serialization.MissingInformation": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "flask_restless.serialization.DeserializationException"
   ]
  },
  "type": "class"
 },
 "flask_restless.serialization.MissingInformation.__init__": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "flask_restless.serialization.MissingInformation",
    "super"
   ]
  },
  "type": "function"
 },
 "flask_restless.serialization.MissingType": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "flask_restless.serialization.MissingInformation"
   ]
  },
  "type": "class"
 },
 "flask_restless.serialization.NoInspectionAvailable": {
  "data": {
   "shadows": "sqlalchemy.exc.NoInspectionAvailable"
  },
  "type": "import"
 },
 "flask_restless.serialization.SerializationException": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "flask_restless.serialization.SerializationException.__init__": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "flask_restless.serialization.SerializationException",
    "super"
   ]
  },
  "type": "function"
 },
 "flask_restless.serialization.Serializer": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "flask_restless.serialization.Serializer.__call__": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "flask_restless.serialization.UnknownAttribute": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "flask_restless.serialization.UnknownField"
   ]
  },
  "type": "class"
 },
 "flask_restless.serialization.UnknownField": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "flask_restless.serialization.DeserializationException"
   ]
  },
  "type": "class"
 },
 "flask_restless.serialization.UnknownField.__init__": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "flask_restless.serialization.UnknownField",
    "super"
   ]
  },
  "type": "function"
 },
 "flask_restless.serialization.UnknownRelationship": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "flask_restless.serialization.UnknownField"
   ]
  },
  "type": "class"
 },
 "flask_restless.serialization.create_relationship": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "ValueError",
    "flask_restless.serialization.simple_relationship_serialize",
    "get_related_model",
    "getattr",
    "is_like_list",
    "primary_key_value",
    "url_for"
   ]
  },
  "type": "function"
 },
 "flask_restless.serialization.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "flask_restless.serialization.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "flask_restless.serialization.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "flask_restless.serialization.get_column_name": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "isinstance",
    "sqlalchemy.Column"
   ]
  },
  "type": "function"
 },
 "flask_restless.serialization.inspect": {
  "data": {
   "shadows": "sqlalchemy.inspection.inspect"
  },
  "type": "import"
 },
 "flask_restless.serialization.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "flask_restless.serialization.simple_relationship_serialize": {
  "data": {
   "lineno": 829
  },
  "type": "constant"
 },
 "flask_restless.serialization.simple_serialize": {
  "data": {
   "lineno": 822
  },
  "type": "constant"
 },
 "flask_restless.serialization.time": {
  "data": {
   "shadows": "datetime.time"
  },
  "type": "import"
 },
 "flask_restless.serialization.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "flask_restless.serialization.total_seconds": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "flask_restless.serialization.url_quote_plus": {
  "data": {
   "shadows": "werkzeug.urls.url_quote_plus"
  },
  "type": "import"
 },
 "flask_restless.serialization.urljoin": {
  "data": {
   "shadows": "urlparse.urljoin"
  },
  "type": "import"
 },
 "flask_restless.views": {
  "data": {},
  "type": "module"
 },
 "flask_restless.views.function": {
  "data": {},
  "type": "module"
 },
 "flask_restless.views.function.FunctionAPI": {
  "data": {
   "lineno": 28
  },
  "type": "class"
 },
 "flask_restless.views.function.FunctionAPI.get": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "OverflowError",
    "TypeError",
    "ValueError",
    "dict",
    "error_response",
    "evaluate_functions",
    "flask.json.loads",
    "flask.request.args",
    "flask.request.args.get",
    "sqlalchemy.exc.OperationalError",
    "str"
   ]
  },
  "type": "function"
 },
 "flask_restless.views.function.OperationalError": {
  "data": {
   "shadows": "sqlalchemy.exc.OperationalError"
  },
  "type": "import"
 },
 "flask_restless.views.function.json": {
  "data": {
   "shadows": "flask.json"
  },
  "type": "import"
 },
 "flask_restless.views.function.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "flask_restless.views.helpers": {
  "data": {},
  "type": "module"
 },
 "flask_restless.views.helpers.OperationalError": {
  "data": {
   "shadows": "sqlalchemy.exc.OperationalError"
  },
  "type": "import"
 },
 "flask_restless.views.helpers.changes_on_update": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "any",
    "sqlalchemy.inspection.inspect"
   ]
  },
  "type": "function"
 },
 "flask_restless.views.helpers.count": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "sqlalchemy.sql.func.count"
   ]
  },
  "type": "function"
 },
 "flask_restless.views.helpers.evaluate_functions": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "funcobj",
    "getattr",
    "list",
    "sqlalchemy.exc.OperationalError",
    "sqlalchemy.sql.func"
   ]
  },
  "type": "function"
 },
 "flask_restless.views.helpers.func": {
  "data": {
   "shadows": "sqlalchemy.sql.func"
  },
  "type": "import"
 },
 "flask_restless.views.helpers.sqlalchemy_inspect": {
  "data": {
   "shadows": "sqlalchemy.inspection.inspect"
  },
  "type": "import"
 },
 "flask_restless.views.helpers.upper_keys": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "flask_restless.views.relationships": {
  "data": {},
  "type": "module"
 },
 "flask_restless.views.relationships.BadRequest": {
  "data": {
   "shadows": "werkzeug.exceptions.BadRequest"
  },
  "type": "import"
 },
 "flask_restless.views.relationships.RelationshipAPI": {
  "data": {
   "lineno": 34
  },
  "type": "class"
 },
 "flask_restless.views.relationships.RelationshipAPI.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "flask_restless.views.relationships.RelationshipAPI",
    "super"
   ]
  },
  "type": "function"
 },
 "flask_restless.views.relationships.RelationshipAPI.collection_processor_type": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "flask_restless.views.relationships.RelationshipAPI.delete": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "OverflowError",
    "TypeError",
    "ValueError",
    "collection_name",
    "error",
    "error_response",
    "errors_response",
    "flask.json.loads",
    "flask.request.get_data",
    "get_by",
    "get_related_model",
    "getattr",
    "hasattr",
    "len",
    "postprocessor",
    "preprocessor",
    "werkzeug.exceptions.BadRequest"
   ]
  },
  "type": "function"
 },
 "flask_restless.views.relationships.RelationshipAPI.get": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "OverflowError",
    "TypeError",
    "ValueError",
    "error_response",
    "get_by",
    "getattr",
    "is_like_list",
    "preprocessor"
   ]
  },
  "type": "function"
 },
 "flask_restless.views.relationships.RelationshipAPI.patch": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "OverflowError",
    "TypeError",
    "ValueError",
    "any",
    "collection_name",
    "error",
    "error_response",
    "errors_response",
    "flask.json.loads",
    "flask.request.get_data",
    "get_by",
    "get_related_model",
    "hasattr",
    "is_like_list",
    "isinstance",
    "list",
    "postprocessor",
    "preprocessor",
    "setattr",
    "werkzeug.exceptions.BadRequest",
    "zip"
   ]
  },
  "type": "function"
 },
 "flask_restless.views.relationships.RelationshipAPI.post": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "OverflowError",
    "TypeError",
    "ValueError",
    "collection_name",
    "error_response",
    "flask.json.loads",
    "flask.request.get_data",
    "get_by",
    "get_related_model",
    "getattr",
    "hasattr",
    "postprocessor",
    "preprocessor",
    "werkzeug.exceptions.BadRequest"
   ]
  },
  "type": "function"
 },
 "flask_restless.views.relationships.RelationshipAPI.resource_processor_type": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "flask_restless.views.relationships.RelationshipAPI.use_resource_identifiers": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "flask_restless.views.relationships.json": {
  "data": {
   "shadows": "flask.json"
  },
  "type": "import"
 },
 "flask_restless.views.relationships.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "flask_restless.views.resources": {
  "data": {},
  "type": "module"
 },
 "flask_restless.views.resources.API": {
  "data": {
   "lineno": 45
  },
  "type": "class"
 },
 "flask_restless.views.resources.API.__init__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "changes_on_update",
    "flask_restless.views.resources.API",
    "super"
   ]
  },
  "type": "function"
 },
 "flask_restless.views.resources.API._get_collection": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "OverflowError",
    "TypeError",
    "ValueError",
    "error_response",
    "preprocessor"
   ]
  },
  "type": "function"
 },
 "flask_restless.views.resources.API._get_related_resource": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "any",
    "error_response",
    "get_by",
    "get_related_model",
    "getattr",
    "is_like_list",
    "isinstance",
    "len",
    "preprocessor",
    "primary_key_value",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "flask_restless.views.resources.API._get_relation": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "OverflowError",
    "TypeError",
    "ValueError",
    "error_response",
    "get_by",
    "get_related_model",
    "getattr",
    "is_like_list",
    "isinstance",
    "len",
    "preprocessor",
    "tuple"
   ]
  },
  "type": "function"
 },
 "flask_restless.views.resources.API._get_resource": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "error_response",
    "get_by",
    "preprocessor"
   ]
  },
  "type": "function"
 },
 "flask_restless.views.resources.API._update_instance": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "collection_name",
    "dict",
    "error",
    "error_response",
    "errors_response",
    "get_by",
    "get_related_model",
    "has_field",
    "is_like_list",
    "isinstance",
    "list",
    "setattr",
    "strings_to_datetimes"
   ]
  },
  "type": "function"
 },
 "flask_restless.views.resources.API.collection_processor_type": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "flask_restless.views.resources.API.delete": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "error_response",
    "get_by",
    "len",
    "postprocessor",
    "preprocessor"
   ]
  },
  "type": "function"
 },
 "flask_restless.views.resources.API.get": {
  "data": {
   "lineno": 303
  },
  "type": "function"
 },
 "flask_restless.views.resources.API.patch": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "OverflowError",
    "TypeError",
    "ValueError",
    "dict",
    "error_response",
    "flask.json.loads",
    "flask.request.get_data",
    "get_by",
    "postprocessor",
    "preprocessor",
    "werkzeug.exceptions.BadRequest"
   ]
  },
  "type": "function"
 },
 "flask_restless.views.resources.API.post": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "OverflowError",
    "TypeError",
    "ValueError",
    "dict",
    "error_response",
    "errors_from_serialization_exceptions",
    "flask.json.loads",
    "flask.request.base_url",
    "flask.request.get_data",
    "postprocessor",
    "preprocessor",
    "primary_key_value",
    "werkzeug.exceptions.BadRequest"
   ]
  },
  "type": "function"
 },
 "flask_restless.views.resources.API.resource_processor_type": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "flask_restless.views.resources.BadRequest": {
  "data": {
   "shadows": "werkzeug.exceptions.BadRequest"
  },
  "type": "import"
 },
 "flask_restless.views.resources.json": {
  "data": {
   "shadows": "flask.json"
  },
  "type": "import"
 },
 "flask_restless.views.resources.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "tests": {
  "data": {},
  "type": "module"
 },
 "tests.helpers": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "flask.json.dumps",
    "flask.json.loads",
    "tests.helpers.IS_PYTHON2",
    "tests.helpers.sys",
    "tests.helpers.types",
    "type"
   ]
  },
  "type": "module"
 },
 "tests.helpers.APIManager": {
  "data": {
   "shadows": "flask.ext.restless.APIManager"
  },
  "type": "import"
 },
 "tests.helpers.BetterJSONEncoder": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "json.JSONEncoder"
   ]
  },
  "type": "class"
 },
 "tests.helpers.BetterJSONEncoder.default": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "datetime.date",
    "datetime.datetime",
    "datetime.time",
    "datetime.timedelta",
    "int",
    "isinstance",
    "super",
    "tests.helpers.BetterJSONEncoder"
   ]
  },
  "type": "function"
 },
 "tests.helpers.CHAR": {
  "data": {
   "shadows": "sqlalchemy.types.CHAR"
  },
  "type": "import"
 },
 "tests.helpers.CLASS_TYPES": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "tests.helpers.CONTENT_TYPE": {
  "data": {
   "shadows": "flask.ext.restless.CONTENT_TYPE"
  },
  "type": "import"
 },
 "tests.helpers.DatabaseMixin": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tests.helpers.DatabaseMixin.database_uri": {
  "data": {
   "lineno": 307
  },
  "type": "function"
 },
 "tests.helpers.Flask": {
  "data": {
   "shadows": "flask.Flask"
  },
  "type": "import"
 },
 "tests.helpers.FlaskSQLAlchemyTestBase": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "tests.helpers.DatabaseMixin",
    "tests.helpers.FlaskTestBase"
   ]
  },
  "type": "class"
 },
 "tests.helpers.FlaskSQLAlchemyTestBase.setup": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "flask.ext.sqlalchemy.SQLAlchemy",
    "nose.SkipTest",
    "super",
    "tests.helpers.FlaskSQLAlchemyTestBase",
    "tests.helpers.has_flask_sqlalchemy"
   ]
  },
  "type": "function"
 },
 "tests.helpers.FlaskSQLAlchemyTestBase.teardown": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "tests.helpers.unregister_fsa_session_signals"
   ]
  },
  "type": "function"
 },
 "tests.helpers.FlaskTestBase": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tests.helpers.FlaskTestBase.setup": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "__name__",
    "flask.Flask",
    "tests.helpers.force_content_type_jsonapi"
   ]
  },
  "type": "function"
 },
 "tests.helpers.GUID": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "sqlalchemy.types.CHAR",
    "sqlalchemy.types.TypeDecorator"
   ]
  },
  "type": "class"
 },
 "tests.helpers.GUID.load_dialect_impl": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "sqlalchemy.dialects.postgresql.UUID",
    "sqlalchemy.types.CHAR"
   ]
  },
  "type": "function"
 },
 "tests.helpers.GUID.process_bind_param": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "tests.helpers.uuid"
   ]
  },
  "type": "function"
 },
 "tests.helpers.GUID.process_result_value": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "tests.helpers.uuid"
   ]
  },
  "type": "function"
 },
 "tests.helpers.IS_PYTHON2": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "tests.helpers.JSONEncoder": {
  "data": {
   "shadows": "json.JSONEncoder"
  },
  "type": "import"
 },
 "tests.helpers.MSIE8_UA": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "tests.helpers.MSIE9_UA": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "tests.helpers.ManagerTestBase": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "tests.helpers.SQLAlchemyTestBase"
   ]
  },
  "type": "class"
 },
 "tests.helpers.ManagerTestBase.setup": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "flask.ext.restless.APIManager",
    "super",
    "tests.helpers.ManagerTestBase"
   ]
  },
  "type": "function"
 },
 "tests.helpers.SQLAlchemy": {
  "data": {
   "shadows": "flask.ext.sqlalchemy.SQLAlchemy"
  },
  "type": "import"
 },
 "tests.helpers.SQLAlchemyTestBase": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "tests.helpers.DatabaseMixin",
    "tests.helpers.FlaskTestBase"
   ]
  },
  "type": "class"
 },
 "tests.helpers.SQLAlchemyTestBase.setup": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "sqlalchemy.create_engine",
    "sqlalchemy.ext.declarative.declarative_base",
    "sqlalchemy.orm.scoped_session",
    "sqlalchemy.orm.sessionmaker",
    "super",
    "tests.helpers.SQLAlchemyTestBase"
   ]
  },
  "type": "function"
 },
 "tests.helpers.SQLAlchemyTestBase.teardown": {
  "data": {
   "lineno": 378
  },
  "type": "function"
 },
 "tests.helpers.SessionBase": {
  "data": {
   "shadows": "sqlalchemy.orm.session.Session"
  },
  "type": "import"
 },
 "tests.helpers.SkipTest": {
  "data": {
   "shadows": "nose.SkipTest"
  },
  "type": "import"
 },
 "tests.helpers.TypeDecorator": {
  "data": {
   "shadows": "sqlalchemy.types.TypeDecorator"
  },
  "type": "import"
 },
 "tests.helpers.UUID": {
  "data": {
   "shadows": "sqlalchemy.dialects.postgresql.UUID"
  },
  "type": "import"
 },
 "tests.helpers.check_sole_error": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "all",
    "isinstance",
    "len",
    "str",
    "tests.helpers.loads"
   ]
  },
  "type": "function"
 },
 "tests.helpers.create_engine": {
  "data": {
   "shadows": "sqlalchemy.create_engine"
  },
  "type": "import"
 },
 "tests.helpers.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "tests.helpers.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "tests.helpers.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "tests.helpers.dumps": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "tests.helpers.event": {
  "data": {
   "shadows": "sqlalchemy.event"
  },
  "type": "import"
 },
 "tests.helpers.flask_sqlalchemy": {
  "data": {
   "shadows": "flask.ext.sqlalchemy"
  },
  "type": "import"
 },
 "tests.helpers.force_content_type_jsonapi": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "set_content_type"
   ]
  },
  "type": "function"
 },
 "tests.helpers.force_content_type_jsonapi.set_content_type": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "tests.helpers.force_content_type_jsonapi.set_content_type.new_func": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "dict",
    "flask.ext.restless.CONTENT_TYPE",
    "func",
    "functools.wraps"
   ]
  },
  "type": "function"
 },
 "tests.helpers.has_flask_sqlalchemy": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "tests.helpers.isclass": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "isinstance",
    "tests.helpers.CLASS_TYPES"
   ]
  },
  "type": "function"
 },
 "tests.helpers.json": {
  "data": {
   "shadows": "flask.json"
  },
  "type": "import"
 },
 "tests.helpers.loads": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "tests.helpers.parse_version": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "int",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tests.helpers.scoped_session": {
  "data": {
   "shadows": "sqlalchemy.orm.scoped_session"
  },
  "type": "import"
 },
 "tests.helpers.sessionmaker": {
  "data": {
   "shadows": "sqlalchemy.orm.sessionmaker"
  },
  "type": "import"
 },
 "tests.helpers.skip": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "tests.helpers.skip_unless"
   ]
  },
  "type": "function"
 },
 "tests.helpers.skip_unless": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "tests.helpers.skip_unless.decorated": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "tests.helpers.isclass"
   ]
  },
  "type": "function"
 },
 "tests.helpers.skip_unless.decorated.inner": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "functools.wraps",
    "nose.SkipTest",
    "test"
   ]
  },
  "type": "function"
 },
 "tests.helpers.skip_unless.decorated.new_setup": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "nose.SkipTest"
   ]
  },
  "type": "function"
 },
 "tests.helpers.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tests.helpers.time": {
  "data": {
   "shadows": "datetime.time"
  },
  "type": "import"
 },
 "tests.helpers.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "tests.helpers.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "tests.helpers.unregister_fsa_session_signals": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "events",
    "flask.ext.sqlalchemy._SessionSignalEvents",
    "flask.ext.sqlalchemy.__version__",
    "getattr",
    "sqlalchemy.event.remove",
    "sqlalchemy.orm.session.Session",
    "tests.helpers.has_flask_sqlalchemy",
    "tests.helpers.parse_version"
   ]
  },
  "type": "function"
 },
 "tests.helpers.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "tests.helpers.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "tests.test_bulk": {
  "data": {},
  "type": "module"
 },
 "tests.test_bulk.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "tests.test_bulk.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "tests.test_bulk.TestCreating": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "skip"
   ]
  },
  "type": "class"
 },
 "tests.test_bulk.TestCreating.setup": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "super",
    "tests.test_bulk.TestCreating"
   ]
  },
  "type": "function"
 },
 "tests.test_bulk.TestCreating.setup.Person": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer"
   ]
  },
  "type": "class"
 },
 "tests.test_bulk.TestCreating.test_create": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "tests.test_bulk.TestDeleting": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "skip"
   ]
  },
  "type": "class"
 },
 "tests.test_bulk.TestDeleting.setup": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "super",
    "tests.test_bulk.TestDeleting"
   ]
  },
  "type": "function"
 },
 "tests.test_bulk.TestDeleting.setup.Person": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer"
   ]
  },
  "type": "class"
 },
 "tests.test_bulk.TestDeleting.test_collection": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "loads",
    "range"
   ]
  },
  "type": "function"
 },
 "tests.test_bulk.TestDeleting.test_collection_preprocessor": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "dict",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_bulk.TestDeleting.test_collection_preprocessor.restrict_ids": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "ProcessingException",
    "dict"
   ]
  },
  "type": "function"
 },
 "tests.test_bulk.TestDeleting.test_delete": {
  "data": {
   "lineno": 243
  },
  "type": "function"
 },
 "tests.test_bulk.TestDeleting.test_empty_collection": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_bulk.TestDeleting.test_filtered_collection": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "dict",
    "dumps",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_bulk.TestUpdating": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "skip"
   ]
  },
  "type": "class"
 },
 "tests.test_bulk.TestUpdating.setup": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "super",
    "tests.test_bulk.TestUpdating"
   ]
  },
  "type": "function"
 },
 "tests.test_bulk.TestUpdating.setup.Person": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer"
   ]
  },
  "type": "class"
 },
 "tests.test_bulk.TestUpdating.test_update": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "tests.test_creating": {
  "data": {},
  "type": "module"
 },
 "tests.test_creating.APIManager": {
  "data": {
   "shadows": "flask.ext.restless.APIManager"
  },
  "type": "import"
 },
 "tests.test_creating.CONTENT_TYPE": {
  "data": {
   "shadows": "flask.ext.restless.CONTENT_TYPE"
  },
  "type": "import"
 },
 "tests.test_creating.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "tests.test_creating.Date": {
  "data": {
   "shadows": "sqlalchemy.Date"
  },
  "type": "import"
 },
 "tests.test_creating.DateTime": {
  "data": {
   "shadows": "sqlalchemy.DateTime"
  },
  "type": "import"
 },
 "tests.test_creating.DeserializationException": {
  "data": {
   "shadows": "flask.ext.restless.DeserializationException"
  },
  "type": "import"
 },
 "tests.test_creating.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "tests.test_creating.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "tests.test_creating.Interval": {
  "data": {
   "shadows": "sqlalchemy.Interval"
  },
  "type": "import"
 },
 "tests.test_creating.JSONEncoder": {
  "data": {
   "shadows": "BetterJSONEncoder"
  },
  "type": "import"
 },
 "tests.test_creating.SerializationException": {
  "data": {
   "shadows": "flask.ext.restless.SerializationException"
  },
  "type": "import"
 },
 "tests.test_creating.TestAssociationProxy": {
  "data": {
   "lineno": 886
  },
  "type": "class"
 },
 "tests.test_creating.TestAssociationProxy.setup": {
  "data": {
   "lineno": 892,
   "symbols_in_volume": [
    "ArticleTag",
    "super",
    "tests.test_creating.TestAssociationProxy"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestAssociationProxy.setup.Article": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": [
    "ArticleTag",
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.ext.associationproxy.association_proxy"
   ]
  },
  "type": "class"
 },
 "tests.test_creating.TestAssociationProxy.setup.ArticleTag": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_creating.TestAssociationProxy.setup.Tag": {
  "data": {
   "lineno": 918,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.Unicode"
   ]
  },
  "type": "class"
 },
 "tests.test_creating.TestAssociationProxy.test_create": {
  "data": {
   "lineno": 934,
   "symbols_in_volume": [
    "dumps",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestAssociationProxy.test_dictionary_collection": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": [
    "skip"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestAssociationProxy.test_scalar": {
  "data": {
   "lineno": 964,
   "symbols_in_volume": [
    "skip"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestCreating": {
  "data": {
   "lineno": 77
  },
  "type": "class"
 },
 "tests.test_creating.TestCreating.setup": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "super",
    "tests.test_creating.TestCreating"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestCreating.setup.Article": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Date",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_creating.TestCreating.setup.Person": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.DateTime",
    "sqlalchemy.Integer",
    "sqlalchemy.Interval",
    "sqlalchemy.Time",
    "sqlalchemy.Unicode",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_creating.TestCreating.setup.Person.is_minor": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "hasattr",
    "sqlalchemy.ext.hybrid.hybrid_property"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestCreating.setup.Tag": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.Unicode"
   ]
  },
  "type": "class"
 },
 "tests.test_creating.TestCreating.test_collection_name": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "dict",
    "dumps",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestCreating.test_conflicting_attributes": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestCreating.test_correct_content_type": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "dict",
    "dumps",
    "flask.ext.restless.CONTENT_TYPE"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestCreating.test_current_timestamp": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "datetime.datetime.utcnow",
    "dict",
    "dumps",
    "loads",
    "tests.test_creating.dateutil"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestCreating.test_custom_serialization": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "dict",
    "dumps",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestCreating.test_custom_serialization.deserializer": {
  "data": {
   "lineno": 557
  },
  "type": "function"
 },
 "tests.test_creating.TestCreating.test_custom_serialization.serializer": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "flask.ext.restless.simple_serialize"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestCreating.test_deserialization_exception": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "dict",
    "dumps",
    "tests.test_creating.raise_d_exception"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestCreating.test_deserializing_date": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "dict",
    "dumps",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestCreating.test_deserializing_datetime": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "dict",
    "dumps",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestCreating.test_deserializing_time": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "dict",
    "dumps",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestCreating.test_empty_date": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "dict",
    "dumps",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestCreating.test_hybrid_property": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestCreating.test_invalid_json": {
  "data": {
   "lineno": 275
  },
  "type": "function"
 },
 "tests.test_creating.TestCreating.test_invalid_relationship": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "check_sole_error",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestCreating.test_missing_data": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "check_sole_error",
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestCreating.test_msie8": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestCreating.test_msie9": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestCreating.test_no_content_type": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "dict",
    "dumps",
    "flask.ext.restless.CONTENT_TYPE"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestCreating.test_no_data": {
  "data": {
   "lineno": 269
  },
  "type": "function"
 },
 "tests.test_creating.TestCreating.test_nonexistent_attribute": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestCreating.test_nonexistent_relationship": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestCreating.test_nullable_datetime": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "dict",
    "dumps",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestCreating.test_primary_key_as_id": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "dict",
    "dumps",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestCreating.test_related_resource_url_forbidden": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestCreating.test_rollback_on_integrity_error": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestCreating.test_serialization_exception": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "dict",
    "dumps",
    "tests.test_creating.raise_s_exception"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestCreating.test_serialization_exception_included": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "check_sole_error",
    "dumps",
    "tests.test_creating.raise_s_exception"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestCreating.test_timedelta": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "dict",
    "dumps",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestCreating.test_to_many": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "all",
    "dumps",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestCreating.test_to_many_related_resource_url": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestCreating.test_to_many_relationship_conflicting_type": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "check_sole_error",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestCreating.test_to_many_relationship_missing_id": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "check_sole_error",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestCreating.test_to_many_relationship_missing_type": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": [
    "check_sole_error",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestCreating.test_to_one": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "dumps",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestCreating.test_to_one_related_resource_url": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestCreating.test_to_one_relationship_conflicting_type": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "check_sole_error",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestCreating.test_to_one_relationship_missing_id": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "check_sole_error",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestCreating.test_to_one_relationship_missing_type": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "check_sole_error",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestCreating.test_unicode_primary_key": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "dict",
    "dumps",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestCreating.test_wrong_accept_header": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestCreating.test_wrong_content_type": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestFlaskSQLAlchemy": {
  "data": {
   "lineno": 992
  },
  "type": "class"
 },
 "tests.test_creating.TestFlaskSQLAlchemy.setup": {
  "data": {
   "lineno": 998,
   "symbols_in_volume": [
    "flask.ext.restless.APIManager",
    "super",
    "tests.test_creating.TestFlaskSQLAlchemy"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestFlaskSQLAlchemy.setup.Person": {
  "data": {
   "lineno": 1002,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "class"
 },
 "tests.test_creating.TestFlaskSQLAlchemy.test_create": {
  "data": {
   "lineno": 1010,
   "symbols_in_volume": [
    "dict",
    "dumps",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestProcessors": {
  "data": {
   "lineno": 835
  },
  "type": "class"
 },
 "tests.test_creating.TestProcessors.setup": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "super",
    "tests.test_creating.TestProcessors"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestProcessors.setup.Person": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.Unicode"
   ]
  },
  "type": "class"
 },
 "tests.test_creating.TestProcessors.test_postprocessor": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "dict",
    "dumps",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestProcessors.test_postprocessor.modify_result": {
  "data": {
   "lineno": 873
  },
  "type": "function"
 },
 "tests.test_creating.TestProcessors.test_preprocessor": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": [
    "dict",
    "dumps",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.TestProcessors.test_preprocessor.set_name": {
  "data": {
   "lineno": 852
  },
  "type": "function"
 },
 "tests.test_creating.Time": {
  "data": {
   "shadows": "sqlalchemy.Time"
  },
  "type": "import"
 },
 "tests.test_creating.Unicode": {
  "data": {
   "shadows": "sqlalchemy.Unicode"
  },
  "type": "import"
 },
 "tests.test_creating.association_proxy": {
  "data": {
   "shadows": "sqlalchemy.ext.associationproxy.association_proxy"
  },
  "type": "import"
 },
 "tests.test_creating.backref": {
  "data": {
   "shadows": "sqlalchemy.orm.backref"
  },
  "type": "import"
 },
 "tests.test_creating.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "tests.test_creating.dateutil": {
  "data": {
   "shadows": "dateutil"
  },
  "type": "import"
 },
 "tests.test_creating.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tests.test_creating.hybrid_property": {
  "data": {
   "shadows": "sqlalchemy.ext.hybrid.hybrid_property"
  },
  "type": "import"
 },
 "tests.test_creating.raise_d_exception": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "flask.ext.restless.DeserializationException"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.raise_s_exception": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "flask.ext.restless.SerializationException"
   ]
  },
  "type": "function"
 },
 "tests.test_creating.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "tests.test_creating.simple_serialize": {
  "data": {
   "shadows": "flask.ext.restless.simple_serialize"
  },
  "type": "import"
 },
 "tests.test_deleting": {
  "data": {},
  "type": "module"
 },
 "tests.test_deleting.APIManager": {
  "data": {
   "shadows": "flask.ext.restless.APIManager"
  },
  "type": "import"
 },
 "tests.test_deleting.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "tests.test_deleting.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "tests.test_deleting.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "tests.test_deleting.ProcessingException": {
  "data": {
   "shadows": "flask.ext.restless.ProcessingException"
  },
  "type": "import"
 },
 "tests.test_deleting.TestDeleting": {
  "data": {
   "lineno": 39
  },
  "type": "class"
 },
 "tests.test_deleting.TestDeleting.setup": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "super",
    "tests.test_deleting.TestDeleting"
   ]
  },
  "type": "function"
 },
 "tests.test_deleting.TestDeleting.setup.Article": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_deleting.TestDeleting.setup.Person": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer"
   ]
  },
  "type": "class"
 },
 "tests.test_deleting.TestDeleting.test_disallow_delete_many": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "tests.test_deleting.TestDeleting.test_integrity_error": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "skip"
   ]
  },
  "type": "function"
 },
 "tests.test_deleting.TestDeleting.test_msie8": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "tests.test_deleting.TestDeleting.test_msie9": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "tests.test_deleting.TestDeleting.test_nonexistent_instance": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "tests.test_deleting.TestDeleting.test_related_resource_url": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "tests.test_deleting.TestDeleting.test_related_resource_url_forbidden": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_deleting.TestDeleting.test_wrong_accept_header": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "tests.test_deleting.TestFlaskSQLAlchemy": {
  "data": {
   "lineno": 269
  },
  "type": "class"
 },
 "tests.test_deleting.TestFlaskSQLAlchemy.setup": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "flask.ext.restless.APIManager",
    "super",
    "tests.test_deleting.TestFlaskSQLAlchemy"
   ]
  },
  "type": "function"
 },
 "tests.test_deleting.TestFlaskSQLAlchemy.setup.Person": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "class"
 },
 "tests.test_deleting.TestFlaskSQLAlchemy.test_delete": {
  "data": {
   "lineno": 287
  },
  "type": "function"
 },
 "tests.test_deleting.TestProcessors": {
  "data": {
   "lineno": 173
  },
  "type": "class"
 },
 "tests.test_deleting.TestProcessors.setup": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "super",
    "tests.test_deleting.TestProcessors"
   ]
  },
  "type": "function"
 },
 "tests.test_deleting.TestProcessors.setup.Person": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.Unicode"
   ]
  },
  "type": "class"
 },
 "tests.test_deleting.TestProcessors.test_change_id": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "tests.test_deleting.TestProcessors.test_change_id.increment_id": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "flask.ext.restless.ProcessingException",
    "int"
   ]
  },
  "type": "function"
 },
 "tests.test_deleting.TestProcessors.test_postprocessor": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "tests.test_deleting.TestProcessors.test_postprocessor.assert_deletion": {
  "data": {
   "lineno": 259
  },
  "type": "function"
 },
 "tests.test_deleting.TestProcessors.test_processing_exception": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "dict",
    "len",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_deleting.TestProcessors.test_processing_exception.forbidden": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "flask.ext.restless.ProcessingException"
   ]
  },
  "type": "function"
 },
 "tests.test_deleting.TestProcessors.test_resource": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "tests.test_deleting.TestProcessors.test_resource.update_data": {
  "data": {
   "lineno": 198
  },
  "type": "function"
 },
 "tests.test_deleting.Unicode": {
  "data": {
   "shadows": "sqlalchemy.Unicode"
  },
  "type": "import"
 },
 "tests.test_deleting.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "tests.test_fetching": {
  "data": {},
  "type": "module"
 },
 "tests.test_fetching.APIManager": {
  "data": {
   "shadows": "flask.ext.restless.APIManager"
  },
  "type": "import"
 },
 "tests.test_fetching.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "tests.test_fetching.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "tests.test_fetching.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "tests.test_fetching.ProcessingException": {
  "data": {
   "shadows": "flask.ext.restless.ProcessingException"
  },
  "type": "import"
 },
 "tests.test_fetching.TestAssociationProxy": {
  "data": {
   "lineno": 1522
  },
  "type": "class"
 },
 "tests.test_fetching.TestAssociationProxy.setup": {
  "data": {
   "lineno": 1528,
   "symbols_in_volume": [
    "ArticleTag",
    "super",
    "tests.test_fetching.TestAssociationProxy"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestAssociationProxy.setup.Article": {
  "data": {
   "lineno": 1537,
   "symbols_in_volume": [
    "ArticleTag",
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.ext.associationproxy.association_proxy"
   ]
  },
  "type": "class"
 },
 "tests.test_fetching.TestAssociationProxy.setup.ArticleTag": {
  "data": {
   "lineno": 1545,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_fetching.TestAssociationProxy.setup.Tag": {
  "data": {
   "lineno": 1556,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.Unicode"
   ]
  },
  "type": "class"
 },
 "tests.test_fetching.TestAssociationProxy.test_fetch": {
  "data": {
   "lineno": 1573,
   "symbols_in_volume": [
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestAssociationProxy.test_scalar": {
  "data": {
   "lineno": 1589,
   "symbols_in_volume": [
    "loads",
    "skip",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestDynamicRelationships": {
  "data": {
   "lineno": 1438
  },
  "type": "class"
 },
 "tests.test_fetching.TestDynamicRelationships.setup": {
  "data": {
   "lineno": 1441,
   "symbols_in_volume": [
    "super",
    "tests.test_fetching.TestDynamicRelationships"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestDynamicRelationships.setup.Article": {
  "data": {
   "lineno": 1450,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_fetching.TestDynamicRelationships.setup.Person": {
  "data": {
   "lineno": 1456,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_fetching.TestDynamicRelationships.test_related_resource_url": {
  "data": {
   "lineno": 1485,
   "symbols_in_volume": [
    "all",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestDynamicRelationships.test_relationship_url": {
  "data": {
   "lineno": 1503,
   "symbols_in_volume": [
    "all",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestDynamicRelationships.test_to_many": {
  "data": {
   "lineno": 1467,
   "symbols_in_volume": [
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestFetchCollection": {
  "data": {
   "lineno": 45
  },
  "type": "class"
 },
 "tests.test_fetching.TestFetchCollection.setup": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "super",
    "tests.test_fetching.TestFetchCollection"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestFetchCollection.setup.Article": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_fetching.TestFetchCollection.setup.Comment": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer"
   ]
  },
  "type": "class"
 },
 "tests.test_fetching.TestFetchCollection.setup.Comment.query": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestFetchCollection.setup.Person": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.Unicode"
   ]
  },
  "type": "class"
 },
 "tests.test_fetching.TestFetchCollection.test_callable_query": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestFetchCollection.test_collection_name_multiple": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "len",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestFetchCollection.test_group_by": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestFetchCollection.test_group_by_related": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestFetchCollection.test_jsonp": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestFetchCollection.test_link_headers_empty_collection": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestFetchCollection.test_msie8": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "tests.test_fetching.TestFetchCollection.test_msie9": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "tests.test_fetching.TestFetchCollection.test_pagination_links_empty_collection": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestFetchCollection.test_pagination_with_query_parameter": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestFetchCollection.test_sorting_null_field": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "len",
    "list",
    "loads",
    "map",
    "operator.itemgetter",
    "set"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestFetchCollection.test_wrong_accept_header": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "tests.test_fetching.TestFetchRelatedResource": {
  "data": {
   "lineno": 514
  },
  "type": "class"
 },
 "tests.test_fetching.TestFetchRelatedResource.setup": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "super",
    "tests.test_fetching.TestFetchRelatedResource"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestFetchRelatedResource.setup.Article": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_fetching.TestFetchRelatedResource.setup.Person": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer"
   ]
  },
  "type": "class"
 },
 "tests.test_fetching.TestFetchRelatedResource.test_nonexistent_related_model": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "check_sole_error"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestFetchRelatedResource.test_nonexistent_related_resource": {
  "data": {
   "lineno": 535
  },
  "type": "function"
 },
 "tests.test_fetching.TestFetchRelatedResource.test_nonexistent_relation": {
  "data": {
   "lineno": 605
  },
  "type": "function"
 },
 "tests.test_fetching.TestFetchRelatedResource.test_nonexistent_resource": {
  "data": {
   "lineno": 593
  },
  "type": "function"
 },
 "tests.test_fetching.TestFetchRelatedResource.test_related_resource": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestFetchRelatedResource.test_to_one_with_id": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "check_sole_error"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestFetchRelation": {
  "data": {
   "lineno": 403
  },
  "type": "class"
 },
 "tests.test_fetching.TestFetchRelation.setup": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "super",
    "tests.test_fetching.TestFetchRelation"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestFetchRelation.setup.Article": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.Unicode",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_fetching.TestFetchRelation.setup.Person": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer"
   ]
  },
  "type": "class"
 },
 "tests.test_fetching.TestFetchRelation.test_nonexistent_relation": {
  "data": {
   "lineno": 434
  },
  "type": "function"
 },
 "tests.test_fetching.TestFetchRelation.test_nonexistent_resource": {
  "data": {
   "lineno": 425
  },
  "type": "function"
 },
 "tests.test_fetching.TestFetchRelation.test_to_many_grouping": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestFetchRelation.test_to_many_pagination": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "all",
    "loads",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestFetchRelation.test_to_many_sorting": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestFetchRelationship": {
  "data": {
   "lineno": 618
  },
  "type": "class"
 },
 "tests.test_fetching.TestFetchRelationship.setup": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "super",
    "tests.test_fetching.TestFetchRelationship"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestFetchRelationship.setup.Article": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_fetching.TestFetchRelationship.setup.Person": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer"
   ]
  },
  "type": "class"
 },
 "tests.test_fetching.TestFetchRelationship.test_relationship_url_nonexistent_instance": {
  "data": {
   "lineno": 640
  },
  "type": "function"
 },
 "tests.test_fetching.TestFetchRelationship.test_relationship_url_nonexistent_relation": {
  "data": {
   "lineno": 649
  },
  "type": "function"
 },
 "tests.test_fetching.TestFetchResource": {
  "data": {
   "lineno": 283
  },
  "type": "class"
 },
 "tests.test_fetching.TestFetchResource.setup": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "super",
    "tests.test_fetching.TestFetchResource"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestFetchResource.setup.Person": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer"
   ]
  },
  "type": "class"
 },
 "tests.test_fetching.TestFetchResource.test_alternate_primary_key": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "loads",
    "skip"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestFetchResource.test_attributes_in_url": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "check_sole_error"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestFetchResource.test_collection_name": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestFetchResource.test_jsonp": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestFetchResource.test_primary_key_int_string": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "loads",
    "skip"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestFetchResource.test_specified_primary_key": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "loads",
    "skip",
    "str"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestFlaskSQLAlchemy": {
  "data": {
   "lineno": 1607
  },
  "type": "class"
 },
 "tests.test_fetching.TestFlaskSQLAlchemy.setup": {
  "data": {
   "lineno": 1613,
   "symbols_in_volume": [
    "flask.ext.restless.APIManager",
    "super",
    "tests.test_fetching.TestFlaskSQLAlchemy"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestFlaskSQLAlchemy.setup.Person": {
  "data": {
   "lineno": 1617,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "class"
 },
 "tests.test_fetching.TestFlaskSQLAlchemy.test_fetch_collection": {
  "data": {
   "lineno": 1636,
   "symbols_in_volume": [
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestFlaskSQLAlchemy.test_fetch_resource": {
  "data": {
   "lineno": 1625,
   "symbols_in_volume": [
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestProcessors": {
  "data": {
   "lineno": 972
  },
  "type": "class"
 },
 "tests.test_fetching.TestProcessors.setup": {
  "data": {
   "lineno": 975,
   "symbols_in_volume": [
    "super",
    "tests.test_fetching.TestProcessors"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestProcessors.setup.Article": {
  "data": {
   "lineno": 990,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_fetching.TestProcessors.setup.Person": {
  "data": {
   "lineno": 984,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.Unicode",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_fetching.TestProcessors.test_add_filters": {
  "data": {
   "lineno": 1370,
   "symbols_in_volume": [
    "dict",
    "dumps",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestProcessors.test_add_filters.restrict_ids": {
  "data": {
   "lineno": 1381,
   "symbols_in_volume": [
    "dict",
    "flask.ext.restless.ProcessingException"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestProcessors.test_change_id": {
  "data": {
   "lineno": 1060,
   "symbols_in_volume": [
    "dict",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestProcessors.test_change_id.increment_id": {
  "data": {
   "lineno": 1069,
   "symbols_in_volume": [
    "flask.ext.restless.ProcessingException",
    "int"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestProcessors.test_change_id_relationship": {
  "data": {
   "lineno": 1134,
   "symbols_in_volume": [
    "len",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestProcessors.test_change_id_relationship.change_id": {
  "data": {
   "lineno": 1145
  },
  "type": "function"
 },
 "tests.test_fetching.TestProcessors.test_change_related_resource_1": {
  "data": {
   "lineno": 1238,
   "symbols_in_volume": [
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestProcessors.test_change_related_resource_1.change_one": {
  "data": {
   "lineno": 1249
  },
  "type": "function"
 },
 "tests.test_fetching.TestProcessors.test_change_related_resource_2": {
  "data": {
   "lineno": 1264,
   "symbols_in_volume": [
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestProcessors.test_change_related_resource_2.change_two": {
  "data": {
   "lineno": 1275
  },
  "type": "function"
 },
 "tests.test_fetching.TestProcessors.test_change_related_resource_3": {
  "data": {
   "lineno": 1290,
   "symbols_in_volume": [
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestProcessors.test_change_related_resource_3.change_three": {
  "data": {
   "lineno": 1302
  },
  "type": "function"
 },
 "tests.test_fetching.TestProcessors.test_change_relation": {
  "data": {
   "lineno": 1083,
   "symbols_in_volume": [
    "len",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestProcessors.test_change_relation.change_id": {
  "data": {
   "lineno": 1093
  },
  "type": "function"
 },
 "tests.test_fetching.TestProcessors.test_change_relation_2": {
  "data": {
   "lineno": 1186,
   "symbols_in_volume": [
    "len",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestProcessors.test_change_relation_2.change_two": {
  "data": {
   "lineno": 1197
  },
  "type": "function"
 },
 "tests.test_fetching.TestProcessors.test_collection_postprocessor": {
  "data": {
   "lineno": 1401,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestProcessors.test_collection_postprocessor.check_filters": {
  "data": {
   "lineno": 1408
  },
  "type": "function"
 },
 "tests.test_fetching.TestProcessors.test_collection_processing_exception": {
  "data": {
   "lineno": 1022,
   "symbols_in_volume": [
    "dict",
    "len",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestProcessors.test_collection_processing_exception.forbidden": {
  "data": {
   "lineno": 1028,
   "symbols_in_volume": [
    "flask.ext.restless.ProcessingException"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestProcessors.test_last_preprocessor_changes_id": {
  "data": {
   "lineno": 1318,
   "symbols_in_volume": [
    "dict",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestProcessors.test_last_preprocessor_changes_id.increment_id": {
  "data": {
   "lineno": 1327,
   "symbols_in_volume": [
    "flask.ext.restless.ProcessingException",
    "int"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestProcessors.test_no_client_filters": {
  "data": {
   "lineno": 1341,
   "symbols_in_volume": [
    "dict",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestProcessors.test_no_client_filters.restrict_ids": {
  "data": {
   "lineno": 1352,
   "symbols_in_volume": [
    "dict",
    "flask.ext.restless.ProcessingException"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestProcessors.test_related_resource": {
  "data": {
   "lineno": 1214
  },
  "type": "function"
 },
 "tests.test_fetching.TestProcessors.test_related_resource.update_data": {
  "data": {
   "lineno": 1227
  },
  "type": "function"
 },
 "tests.test_fetching.TestProcessors.test_relation": {
  "data": {
   "lineno": 1162
  },
  "type": "function"
 },
 "tests.test_fetching.TestProcessors.test_relation.update_data": {
  "data": {
   "lineno": 1175
  },
  "type": "function"
 },
 "tests.test_fetching.TestProcessors.test_relationship": {
  "data": {
   "lineno": 1110
  },
  "type": "function"
 },
 "tests.test_fetching.TestProcessors.test_relationship.update_data": {
  "data": {
   "lineno": 1123
  },
  "type": "function"
 },
 "tests.test_fetching.TestProcessors.test_resource": {
  "data": {
   "lineno": 1041
  },
  "type": "function"
 },
 "tests.test_fetching.TestProcessors.test_resource.update_data": {
  "data": {
   "lineno": 1052
  },
  "type": "function"
 },
 "tests.test_fetching.TestProcessors.test_resource_postprocessor": {
  "data": {
   "lineno": 1421,
   "symbols_in_volume": [
    "dict",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestProcessors.test_resource_postprocessor.modify_result": {
  "data": {
   "lineno": 1427
  },
  "type": "function"
 },
 "tests.test_fetching.TestProcessors.test_single_resource_processing_exception": {
  "data": {
   "lineno": 1000,
   "symbols_in_volume": [
    "dict",
    "len",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestProcessors.test_single_resource_processing_exception.forbidden": {
  "data": {
   "lineno": 1009,
   "symbols_in_volume": [
    "flask.ext.restless.ProcessingException"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestServerSparseFieldsets": {
  "data": {
   "lineno": 662
  },
  "type": "class"
 },
 "tests.test_fetching.TestServerSparseFieldsets.setup": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "super",
    "tests.test_fetching.TestServerSparseFieldsets"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestServerSparseFieldsets.setup.Article": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.Unicode",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_fetching.TestServerSparseFieldsets.setup.Article.first_comment": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "min"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestServerSparseFieldsets.setup.Comment": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_fetching.TestServerSparseFieldsets.setup.Person": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.Unicode"
   ]
  },
  "type": "class"
 },
 "tests.test_fetching.TestServerSparseFieldsets.setup.Photo": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.Unicode"
   ]
  },
  "type": "class"
 },
 "tests.test_fetching.TestServerSparseFieldsets.setup.Photo.website": {
  "data": {
   "lineno": 696
  },
  "type": "function"
 },
 "tests.test_fetching.TestServerSparseFieldsets.setup.Photo.year": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestServerSparseFieldsets.test_additional_attributes": {
  "data": {
   "lineno": 797,
   "symbols_in_volume": [
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestServerSparseFieldsets.test_additional_attributes_callable": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": [
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestServerSparseFieldsets.test_additional_attributes_not_related": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": [
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestServerSparseFieldsets.test_additional_attributes_object": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": [
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestServerSparseFieldsets.test_additional_attributes_object.add_foo": {
  "data": {
   "lineno": 877,
   "symbols_in_volume": [
    "flask.ext.restless.simple_serialize"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestServerSparseFieldsets.test_additional_attributes_property": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": [
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestServerSparseFieldsets.test_exclude": {
  "data": {
   "lineno": 902,
   "symbols_in_volume": [
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestServerSparseFieldsets.test_exclude_as_objects": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": [
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestServerSparseFieldsets.test_exclude_relations": {
  "data": {
   "lineno": 950,
   "symbols_in_volume": [
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestServerSparseFieldsets.test_only_as_objects": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": [
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestServerSparseFieldsets.test_only_column": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestServerSparseFieldsets.test_only_none": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.TestServerSparseFieldsets.test_only_relationship": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_fetching.Unicode": {
  "data": {
   "shadows": "sqlalchemy.Unicode"
  },
  "type": "import"
 },
 "tests.test_fetching.association_proxy": {
  "data": {
   "shadows": "sqlalchemy.ext.associationproxy.association_proxy"
  },
  "type": "import"
 },
 "tests.test_fetching.backref": {
  "data": {
   "shadows": "sqlalchemy.orm.backref"
  },
  "type": "import"
 },
 "tests.test_fetching.itemgetter": {
  "data": {
   "shadows": "operator.itemgetter"
  },
  "type": "import"
 },
 "tests.test_fetching.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "tests.test_fetching.simple_serialize": {
  "data": {
   "shadows": "flask.ext.restless.simple_serialize"
  },
  "type": "import"
 },
 "tests.test_filtering": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "psycopg2cffi.compat.register",
    "testing.postgresql.PostgresqlFactory"
   ]
  },
  "type": "module"
 },
 "tests.test_filtering.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "tests.test_filtering.Date": {
  "data": {
   "shadows": "sqlalchemy.Date"
  },
  "type": "import"
 },
 "tests.test_filtering.DateTime": {
  "data": {
   "shadows": "sqlalchemy.DateTime"
  },
  "type": "import"
 },
 "tests.test_filtering.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "tests.test_filtering.INET": {
  "data": {
   "shadows": "sqlalchemy.dialects.postgresql.INET"
  },
  "type": "import"
 },
 "tests.test_filtering.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "tests.test_filtering.PGFactory": {
  "data": {
   "shadows": "testing.postgresql.PostgresqlFactory"
  },
  "type": "import"
 },
 "tests.test_filtering.PostgreSQL": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "tests.test_filtering.SearchTestBase": {
  "data": {
   "lineno": 62
  },
  "type": "class"
 },
 "tests.test_filtering.SearchTestBase.search": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestAssociationProxy": {
  "data": {
   "lineno": 1096,
   "symbols_in_volume": [
    "tests.test_filtering.SearchTestBase"
   ]
  },
  "type": "class"
 },
 "tests.test_filtering.TestAssociationProxy.setup": {
  "data": {
   "lineno": 1099,
   "symbols_in_volume": [
    "ArticleTag",
    "super",
    "tests.test_filtering.TestAssociationProxy"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestAssociationProxy.setup.Article": {
  "data": {
   "lineno": 1108,
   "symbols_in_volume": [
    "ArticleTag",
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.ext.associationproxy.association_proxy"
   ]
  },
  "type": "class"
 },
 "tests.test_filtering.TestAssociationProxy.setup.ArticleTag": {
  "data": {
   "lineno": 1114,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_filtering.TestAssociationProxy.setup.Tag": {
  "data": {
   "lineno": 1125,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.Unicode"
   ]
  },
  "type": "class"
 },
 "tests.test_filtering.TestAssociationProxy.test_any": {
  "data": {
   "lineno": 1142,
   "symbols_in_volume": [
    "dict",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestFiltering": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "tests.test_filtering.SearchTestBase"
   ]
  },
  "type": "class"
 },
 "tests.test_filtering.TestFiltering.setup": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "super",
    "tests.test_filtering.TestFiltering"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestFiltering.setup.Article": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_filtering.TestFiltering.setup.Comment": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.Unicode",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_filtering.TestFiltering.setup.Person": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Date",
    "sqlalchemy.DateTime",
    "sqlalchemy.Integer",
    "sqlalchemy.Time",
    "sqlalchemy.Unicode"
   ]
  },
  "type": "class"
 },
 "tests.test_filtering.TestFiltering.test_any_in_to_many": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "dict",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestFiltering.test_any_with_any": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "dict",
    "loads",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestFiltering.test_any_with_has": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "dict",
    "loads",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestFiltering.test_bad_date": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestFiltering.test_bad_datetime": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestFiltering.test_bad_filter": {
  "data": {
   "lineno": 147
  },
  "type": "function"
 },
 "tests.test_filtering.TestFiltering.test_bad_filter_relation": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "check_sole_error"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestFiltering.test_bad_filter_relationship": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "tests.test_filtering.TestFiltering.test_bad_name": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "check_sole_error",
    "dict"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestFiltering.test_bad_time": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestFiltering.test_comparing_fields": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "dict",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestFiltering.test_date_english": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "datetime.date",
    "dict",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestFiltering.test_date_yyyy_mm_dd": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "datetime.date",
    "dict",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestFiltering.test_dates_in_boolean_formulas": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "datetime.date",
    "len",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestFiltering.test_datetime_to_date": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "datetime.date",
    "dict",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestFiltering.test_datetime_to_time": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.time",
    "dict",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestFiltering.test_datetimes": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "datetime.datetime",
    "dict",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestFiltering.test_has_in_to_one": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "dict",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestFiltering.test_has_with_any": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "dict",
    "loads",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestFiltering.test_has_with_has": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "dict",
    "loads",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestFiltering.test_in_list": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "dict",
    "len",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestFiltering.test_invalid_field": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestFiltering.test_invalid_operator": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestFiltering.test_invalid_value": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "dict",
    "skip"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestFiltering.test_like": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "dict",
    "len",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestFiltering.test_missing_argument": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestFiltering.test_missing_fieldname": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestFiltering.test_missing_operator": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestFiltering.test_relation_single_wrong_format": {
  "data": {
   "lineno": 269
  },
  "type": "function"
 },
 "tests.test_filtering.TestFiltering.test_relationship_single_wrong_format": {
  "data": {
   "lineno": 283
  },
  "type": "function"
 },
 "tests.test_filtering.TestFiltering.test_search_boolean_formula": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "dict",
    "len",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestFiltering.test_single": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "dict",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestFiltering.test_single_relationship": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "dict",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestFiltering.test_single_too_few": {
  "data": {
   "lineno": 249
  },
  "type": "function"
 },
 "tests.test_filtering.TestFiltering.test_single_too_many": {
  "data": {
   "lineno": 235
  },
  "type": "function"
 },
 "tests.test_filtering.TestFiltering.test_single_wrong_format": {
  "data": {
   "lineno": 259
  },
  "type": "function"
 },
 "tests.test_filtering.TestFiltering.test_times": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "datetime.time",
    "dict",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestFiltering.test_to_many_relation": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "dict",
    "loads",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestNetworkOperators": {
  "data": {
   "lineno": 922,
   "symbols_in_volume": [
    "tests.test_filtering.SearchTestBase"
   ]
  },
  "type": "class"
 },
 "tests.test_filtering.TestNetworkOperators.database_uri": {
  "data": {
   "lineno": 954,
   "symbols_in_volume": [
    "tests.test_filtering.PostgreSQL"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestNetworkOperators.setup": {
  "data": {
   "lineno": 932,
   "symbols_in_volume": [
    "super",
    "tests.test_filtering.TestNetworkOperators"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestNetworkOperators.setup.Network": {
  "data": {
   "lineno": 935,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.dialects.postgresql.INET"
   ]
  },
  "type": "class"
 },
 "tests.test_filtering.TestNetworkOperators.teardown": {
  "data": {
   "lineno": 944,
   "symbols_in_volume": [
    "super",
    "tests.test_filtering.TestNetworkOperators"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestNetworkOperators.test_contains": {
  "data": {
   "lineno": 1026,
   "symbols_in_volume": [
    "dict",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestNetworkOperators.test_contains_or_equals": {
  "data": {
   "lineno": 1046,
   "symbols_in_volume": [
    "dict",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestNetworkOperators.test_contains_or_is_contained_by": {
  "data": {
   "lineno": 1067,
   "symbols_in_volume": [
    "dict",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestNetworkOperators.test_is_contained_by": {
  "data": {
   "lineno": 985,
   "symbols_in_volume": [
    "dict",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestNetworkOperators.test_is_contained_by_or_equals": {
  "data": {
   "lineno": 1005,
   "symbols_in_volume": [
    "dict",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestNetworkOperators.test_is_not_equal": {
  "data": {
   "lineno": 965,
   "symbols_in_volume": [
    "dict",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestOperators": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "tests.test_filtering.SearchTestBase"
   ]
  },
  "type": "class"
 },
 "tests.test_filtering.TestOperators.setup": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "super",
    "tests.test_filtering.TestOperators"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestOperators.setup.Person": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.Unicode"
   ]
  },
  "type": "class"
 },
 "tests.test_filtering.TestOperators.test_compare_equals_to_null": {
  "data": {
   "lineno": 910,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestOperators.test_equals": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "dict",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestOperators.test_greater_than": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "dict",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestOperators.test_greater_than_or_equal": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "dict",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestOperators.test_ilike": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": [
    "dict",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestOperators.test_in": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": [
    "dict",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestOperators.test_is_not_null": {
  "data": {
   "lineno": 898,
   "symbols_in_volume": [
    "dict",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestOperators.test_is_null": {
  "data": {
   "lineno": 886,
   "symbols_in_volume": [
    "dict",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestOperators.test_less_than": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "dict",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestOperators.test_less_than_or_equal": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "dict",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestOperators.test_like": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": [
    "dict",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestOperators.test_not_equal": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "dict",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestOperators.test_not_in": {
  "data": {
   "lineno": 873,
   "symbols_in_volume": [
    "dict",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.TestOperators.test_not_like": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": [
    "dict",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.Time": {
  "data": {
   "shadows": "sqlalchemy.Time"
  },
  "type": "import"
 },
 "tests.test_filtering.Unicode": {
  "data": {
   "shadows": "sqlalchemy.Unicode"
  },
  "type": "import"
 },
 "tests.test_filtering.association_proxy": {
  "data": {
   "shadows": "sqlalchemy.ext.associationproxy.association_proxy"
  },
  "type": "import"
 },
 "tests.test_filtering.backref": {
  "data": {
   "shadows": "sqlalchemy.orm.backref"
  },
  "type": "import"
 },
 "tests.test_filtering.compat": {
  "data": {
   "shadows": "psycopg2cffi.compat"
  },
  "type": "import"
 },
 "tests.test_filtering.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "tests.test_filtering.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "tests.test_filtering.itemgetter": {
  "data": {
   "shadows": "operator.itemgetter"
  },
  "type": "import"
 },
 "tests.test_filtering.psycopg2": {
  "data": {
   "shadows": "psycopg2"
  },
  "type": "import"
 },
 "tests.test_filtering.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "tests.test_filtering.teardown": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "tests.test_filtering.PostgreSQL"
   ]
  },
  "type": "function"
 },
 "tests.test_filtering.time": {
  "data": {
   "shadows": "datetime.time"
  },
  "type": "import"
 },
 "tests.test_functions": {
  "data": {},
  "type": "module"
 },
 "tests.test_functions.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "tests.test_functions.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "tests.test_functions.TestFunctionEvaluation": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "tests.test_functions.TestFunctionEvaluation.setup": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "super",
    "tests.test_functions.TestFunctionEvaluation"
   ]
  },
  "type": "function"
 },
 "tests.test_functions.TestFunctionEvaluation.setup.Person": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer"
   ]
  },
  "type": "class"
 },
 "tests.test_functions.TestFunctionEvaluation.test_bad_field_name": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_functions.TestFunctionEvaluation.test_bad_function_name": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_functions.TestFunctionEvaluation.test_empty_query": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "tests.test_functions.TestFunctionEvaluation.test_jsonp": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "dict",
    "dumps",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_functions.TestFunctionEvaluation.test_missing_field_name": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_functions.TestFunctionEvaluation.test_missing_function_name": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_functions.TestFunctionEvaluation.test_multiple_functions": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "dict",
    "dumps",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_functions.TestFunctionEvaluation.test_no_functions": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_functions.TestFunctionEvaluation.test_no_query": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "tests.test_jsonapi": {
  "data": {},
  "type": "module"
 },
 "tests.test_jsonapi.test_creating_resources": {
  "data": {},
  "type": "module"
 },
 "tests.test_jsonapi.test_creating_resources.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "tests.test_jsonapi.test_creating_resources.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "tests.test_jsonapi.test_creating_resources.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "tests.test_jsonapi.test_creating_resources.TestCreatingResources": {
  "data": {
   "lineno": 34
  },
  "type": "class"
 },
 "tests.test_jsonapi.test_creating_resources.TestCreatingResources.setup": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "super",
    "tests.test_jsonapi.test_creating_resources.TestCreatingResources"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_creating_resources.TestCreatingResources.setup.Article": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column"
   ]
  },
  "type": "class"
 },
 "tests.test_jsonapi.test_creating_resources.TestCreatingResources.setup.Comment": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_jsonapi.test_creating_resources.TestCreatingResources.setup.Person": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.Unicode",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_jsonapi.test_creating_resources.TestCreatingResources.test_client_generated_id": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "dict",
    "dumps",
    "loads",
    "str",
    "tests.test_jsonapi.test_creating_resources.uuid"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_creating_resources.TestCreatingResources.test_client_generated_id_forbidden": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "dict",
    "dumps",
    "tests.test_jsonapi.test_creating_resources.uuid"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_creating_resources.TestCreatingResources.test_create": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "dict",
    "dumps",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_creating_resources.TestCreatingResources.test_id_conflict": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "dict",
    "dumps",
    "tests.test_jsonapi.test_creating_resources.uuid"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_creating_resources.TestCreatingResources.test_include_post": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "dict",
    "dumps",
    "len",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_creating_resources.TestCreatingResources.test_sparse_fieldsets_post": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "dumps",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_creating_resources.TestCreatingResources.test_type_conflict": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_creating_resources.TestCreatingResources.test_without_type": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_creating_resources.Unicode": {
  "data": {
   "shadows": "sqlalchemy.Unicode"
  },
  "type": "import"
 },
 "tests.test_jsonapi.test_creating_resources.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "tests.test_jsonapi.test_creating_resources.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "tests.test_jsonapi.test_deleting_resources": {
  "data": {},
  "type": "module"
 },
 "tests.test_jsonapi.test_deleting_resources.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "tests.test_jsonapi.test_deleting_resources.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "tests.test_jsonapi.test_deleting_resources.TestDeletingResources": {
  "data": {
   "lineno": 26
  },
  "type": "class"
 },
 "tests.test_jsonapi.test_deleting_resources.TestDeletingResources.setup": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "super",
    "tests.test_jsonapi.test_deleting_resources.TestDeletingResources"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_deleting_resources.TestDeletingResources.setup.Person": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer"
   ]
  },
  "type": "class"
 },
 "tests.test_jsonapi.test_deleting_resources.TestDeletingResources.test_delete": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_deleting_resources.TestDeletingResources.test_delete_nonexistent": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_document_structure": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "tests.test_jsonapi.test_document_structure.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "tests.test_jsonapi.test_document_structure.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "tests.test_jsonapi.test_document_structure.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "tests.test_jsonapi.test_document_structure.TestDocumentStructure": {
  "data": {
   "lineno": 37
  },
  "type": "class"
 },
 "tests.test_jsonapi.test_document_structure.TestDocumentStructure.setup": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "super",
    "tests.test_jsonapi.test_document_structure.TestDocumentStructure"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_document_structure.TestDocumentStructure.setup.Article": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_jsonapi.test_document_structure.TestDocumentStructure.setup.Comment": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_jsonapi.test_document_structure.TestDocumentStructure.setup.Person": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_jsonapi.test_document_structure.TestDocumentStructure.test_allowable_top_level_keys": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "any",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_document_structure.TestDocumentStructure.test_errors_top_level_key": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_document_structure.TestDocumentStructure.test_ignore_additional_members": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "dict",
    "dumps",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_document_structure.TestDocumentStructure.test_jsonapi_object": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_document_structure.TestDocumentStructure.test_no_data_and_errors_bad_request": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "all",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_document_structure.TestDocumentStructure.test_no_data_and_errors_good_request": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "all",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_document_structure.TestDocumentStructure.test_no_foreign_keys": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_document_structure.TestDocumentStructure.test_no_other_top_level_keys": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "all",
    "loads",
    "tests.test_jsonapi.test_document_structure.string"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_document_structure.TestDocumentStructure.test_related_resource_url_to_many": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "loads",
    "urlparse.urlparse"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_document_structure.TestDocumentStructure.test_related_resource_url_to_one": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "loads",
    "urlparse.urlparse"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_document_structure.TestDocumentStructure.test_required_relationship_keys": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "any",
    "loads",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_document_structure.TestDocumentStructure.test_required_relationship_link_keys": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "any",
    "loads",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_document_structure.TestDocumentStructure.test_resource_attributes": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_document_structure.TestDocumentStructure.test_resource_identifier_object_keys": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "all",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_document_structure.TestDocumentStructure.test_resource_linkage_empty_to_many": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_document_structure.TestDocumentStructure.test_resource_linkage_empty_to_one": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_document_structure.TestDocumentStructure.test_resource_linkage_to_many": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "all",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_document_structure.TestDocumentStructure.test_resource_linkage_to_one": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_document_structure.TestDocumentStructure.test_self_link": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "loads",
    "urlparse.urlparse"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_document_structure.TestDocumentStructure.test_self_relationship_url": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "loads",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_document_structure.TestDocumentStructure.test_top_level_self_link": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_document_structure.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "tests.test_jsonapi.test_document_structure.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "tests.test_jsonapi.test_document_structure.urlparse": {
  "data": {
   "shadows": "urlparse.urlparse"
  },
  "type": "import"
 },
 "tests.test_jsonapi.test_fetching_data": {
  "data": {},
  "type": "module"
 },
 "tests.test_jsonapi.test_fetching_data.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "tests.test_jsonapi.test_fetching_data.Float": {
  "data": {
   "shadows": "sqlalchemy.Float"
  },
  "type": "import"
 },
 "tests.test_jsonapi.test_fetching_data.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "tests.test_jsonapi.test_fetching_data.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "tests.test_jsonapi.test_fetching_data.TestFetchingData": {
  "data": {
   "lineno": 32
  },
  "type": "class"
 },
 "tests.test_jsonapi.test_fetching_data.TestFetchingData.setup": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "super",
    "tests.test_jsonapi.test_fetching_data.TestFetchingData"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestFetchingData.setup.Article": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.Unicode",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_jsonapi.test_fetching_data.TestFetchingData.setup.Comment": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_jsonapi.test_fetching_data.TestFetchingData.setup.Person": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Float",
    "sqlalchemy.Integer",
    "sqlalchemy.Unicode",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_jsonapi.test_fetching_data.TestFetchingData.test_collection": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestFetchingData.test_empty_collection": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestFetchingData.test_empty_to_many_related_resource_url": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestFetchingData.test_empty_to_many_relationship_url": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestFetchingData.test_empty_to_one_related_resource": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestFetchingData.test_empty_to_one_relationship_url": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestFetchingData.test_nonexistent_collection": {
  "data": {
   "lineno": 262
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestFetchingData.test_nonexistent_resource": {
  "data": {
   "lineno": 250
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestFetchingData.test_related_resource": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestFetchingData.test_relationship_links": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestFetchingData.test_single_resource": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestFetchingData.test_to_many_related_resource_url": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "all",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestFetchingData.test_to_many_relationship_url": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "all",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestFetchingData.test_to_one_related_resource_url": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "all",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestFetchingData.test_to_one_relationship_url": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestInclusion": {
  "data": {
   "lineno": 382
  },
  "type": "class"
 },
 "tests.test_jsonapi.test_fetching_data.TestInclusion.setup": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "super",
    "tests.test_jsonapi.test_fetching_data.TestInclusion"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestInclusion.setup.Article": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_jsonapi.test_fetching_data.TestInclusion.setup.Comment": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_jsonapi.test_fetching_data.TestInclusion.setup.Person": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.Unicode",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_jsonapi.test_fetching_data.TestInclusion.test_client_overrides_server_includes": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "dict",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestInclusion.test_default_inclusion": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestInclusion.test_include": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "all",
    "dict",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestInclusion.test_include_dot_separated": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "dict",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestInclusion.test_include_intermediate_resources": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "dict",
    "len",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestInclusion.test_include_multiple": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "dict",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestInclusion.test_include_relationship": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "all",
    "dict",
    "len",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestInclusion.test_set_default_inclusion": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestPagination": {
  "data": {
   "lineno": 969
  },
  "type": "class"
 },
 "tests.test_jsonapi.test_fetching_data.TestPagination.setup": {
  "data": {
   "lineno": 979,
   "symbols_in_volume": [
    "super",
    "tests.test_jsonapi.test_fetching_data.TestPagination"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestPagination.setup.Person": {
  "data": {
   "lineno": 982,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer"
   ]
  },
  "type": "class"
 },
 "tests.test_jsonapi.test_fetching_data.TestPagination.test_client_number_only": {
  "data": {
   "lineno": 1059,
   "symbols_in_volume": [
    "len",
    "loads",
    "range"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestPagination.test_client_page_and_size": {
  "data": {
   "lineno": 1032,
   "symbols_in_volume": [
    "len",
    "loads",
    "range"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestPagination.test_client_size_only": {
  "data": {
   "lineno": 1126,
   "symbols_in_volume": [
    "len",
    "loads",
    "range"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestPagination.test_disable_pagination": {
  "data": {
   "lineno": 1205,
   "symbols_in_volume": [
    "len",
    "loads",
    "range"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestPagination.test_disable_pagination_ignore_client": {
  "data": {
   "lineno": 1227,
   "symbols_in_volume": [
    "len",
    "loads",
    "range"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestPagination.test_headers": {
  "data": {
   "lineno": 1299,
   "symbols_in_volume": [
    "all",
    "any",
    "range"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestPagination.test_max_page_size": {
  "data": {
   "lineno": 1252,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestPagination.test_negative_page_number": {
  "data": {
   "lineno": 1285
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestPagination.test_negative_page_size": {
  "data": {
   "lineno": 1271
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestPagination.test_no_client_parameters": {
  "data": {
   "lineno": 1007,
   "symbols_in_volume": [
    "len",
    "loads",
    "range"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestPagination.test_server_page_size": {
  "data": {
   "lineno": 1178,
   "symbols_in_volume": [
    "len",
    "loads",
    "range"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestPagination.test_short_page": {
  "data": {
   "lineno": 1152,
   "symbols_in_volume": [
    "len",
    "loads",
    "range"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestPagination.test_sorted_pagination": {
  "data": {
   "lineno": 1086,
   "symbols_in_volume": [
    "int",
    "list",
    "loads",
    "range"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestPagination.test_top_level_pagination_link": {
  "data": {
   "lineno": 990,
   "symbols_in_volume": [
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestSorting": {
  "data": {
   "lineno": 790
  },
  "type": "class"
 },
 "tests.test_jsonapi.test_fetching_data.TestSorting.setup": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "super",
    "tests.test_jsonapi.test_fetching_data.TestSorting"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestSorting.setup.Article": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.Unicode",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_jsonapi.test_fetching_data.TestSorting.setup.Person": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.Unicode",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_jsonapi.test_fetching_data.TestSorting.test_sort_decreasing": {
  "data": {
   "lineno": 843,
   "symbols_in_volume": [
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestSorting.test_sort_increasing": {
  "data": {
   "lineno": 821,
   "symbols_in_volume": [
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestSorting.test_sort_multiple_fields": {
  "data": {
   "lineno": 865,
   "symbols_in_volume": [
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestSorting.test_sort_multiple_relationship_attributes": {
  "data": {
   "lineno": 915,
   "symbols_in_volume": [
    "enumerate",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestSorting.test_sort_relationship_attributes": {
  "data": {
   "lineno": 890,
   "symbols_in_volume": [
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestSorting.test_sorting_relationship": {
  "data": {
   "lineno": 940,
   "symbols_in_volume": [
    "NameError",
    "dict",
    "loads",
    "range",
    "str",
    "to_string"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestSparseFieldsets": {
  "data": {
   "lineno": 663
  },
  "type": "class"
 },
 "tests.test_jsonapi.test_fetching_data.TestSparseFieldsets.setup": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "super",
    "tests.test_jsonapi.test_fetching_data.TestSparseFieldsets"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestSparseFieldsets.setup.Article": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.Unicode",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_jsonapi.test_fetching_data.TestSparseFieldsets.setup.Person": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.Unicode",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_jsonapi.test_fetching_data.TestSparseFieldsets.test_sparse_fieldsets": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestSparseFieldsets.test_sparse_fieldsets_collection": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "all",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestSparseFieldsets.test_sparse_fieldsets_id_and_type": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.TestSparseFieldsets.test_sparse_fieldsets_multiple_types": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "all",
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_fetching_data.Unicode": {
  "data": {
   "shadows": "sqlalchemy.Unicode"
  },
  "type": "import"
 },
 "tests.test_jsonapi.test_fetching_data.backref": {
  "data": {
   "shadows": "sqlalchemy.orm.backref"
  },
  "type": "import"
 },
 "tests.test_jsonapi.test_fetching_data.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "tests.test_jsonapi.test_server_responsibilities": {
  "data": {},
  "type": "module"
 },
 "tests.test_jsonapi.test_server_responsibilities.CONTENT_TYPE": {
  "data": {
   "shadows": "flask.ext.restless.CONTENT_TYPE"
  },
  "type": "import"
 },
 "tests.test_jsonapi.test_server_responsibilities.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "tests.test_jsonapi.test_server_responsibilities.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "tests.test_jsonapi.test_server_responsibilities.TestServerResponsibilities": {
  "data": {
   "lineno": 34
  },
  "type": "class"
 },
 "tests.test_jsonapi.test_server_responsibilities.TestServerResponsibilities.setup": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "super",
    "tests.test_jsonapi.test_server_responsibilities.TestServerResponsibilities"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_server_responsibilities.TestServerResponsibilities.setup.Person": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.Unicode"
   ]
  },
  "type": "class"
 },
 "tests.test_jsonapi.test_server_responsibilities.TestServerResponsibilities.test_empty_accept_header": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "len",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_server_responsibilities.TestServerResponsibilities.test_get_content_type": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "flask.ext.restless.CONTENT_TYPE"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_server_responsibilities.TestServerResponsibilities.test_no_accept_media_type_params": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "check_sole_error",
    "flask.ext.restless.CONTENT_TYPE"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_server_responsibilities.TestServerResponsibilities.test_no_response_media_type_params": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "check_sole_error",
    "dumps",
    "flask.ext.restless.CONTENT_TYPE"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_server_responsibilities.TestServerResponsibilities.test_patch_content_type": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "dumps",
    "flask.ext.restless.CONTENT_TYPE",
    "skip"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_server_responsibilities.TestServerResponsibilities.test_post_content_type": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "dumps",
    "flask.ext.restless.CONTENT_TYPE"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_server_responsibilities.TestServerResponsibilities.test_valid_accept_header": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "flask.ext.restless.CONTENT_TYPE",
    "len",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_server_responsibilities.Unicode": {
  "data": {
   "shadows": "sqlalchemy.Unicode"
  },
  "type": "import"
 },
 "tests.test_jsonapi.test_updating_relationships": {
  "data": {},
  "type": "module"
 },
 "tests.test_jsonapi.test_updating_relationships.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "tests.test_jsonapi.test_updating_relationships.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "tests.test_jsonapi.test_updating_relationships.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "tests.test_jsonapi.test_updating_relationships.TestUpdatingRelationships": {
  "data": {
   "lineno": 31
  },
  "type": "class"
 },
 "tests.test_jsonapi.test_updating_relationships.TestUpdatingRelationships.setup": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "super",
    "tests.test_jsonapi.test_updating_relationships.TestUpdatingRelationships"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_updating_relationships.TestUpdatingRelationships.setup.Article": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_jsonapi.test_updating_relationships.TestUpdatingRelationships.setup.Person": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_jsonapi.test_updating_relationships.TestUpdatingRelationships.test_remove_to_one": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_updating_relationships.TestUpdatingRelationships.test_to_many": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "dumps",
    "operator.attrgetter",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_updating_relationships.TestUpdatingRelationships.test_to_many_append": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "dumps",
    "operator.attrgetter",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_updating_relationships.TestUpdatingRelationships.test_to_many_delete": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_updating_relationships.TestUpdatingRelationships.test_to_many_delete_forbidden": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_updating_relationships.TestUpdatingRelationships.test_to_many_delete_nonexistent": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_updating_relationships.TestUpdatingRelationships.test_to_many_forbidden": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_updating_relationships.TestUpdatingRelationships.test_to_many_not_found": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_updating_relationships.TestUpdatingRelationships.test_to_many_preexisting": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_updating_relationships.TestUpdatingRelationships.test_to_one": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_updating_relationships.attrgetter": {
  "data": {
   "shadows": "operator.attrgetter"
  },
  "type": "import"
 },
 "tests.test_jsonapi.test_updating_relationships.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "tests.test_jsonapi.test_updating_resources": {
  "data": {},
  "type": "module"
 },
 "tests.test_jsonapi.test_updating_resources.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "tests.test_jsonapi.test_updating_resources.DateTime": {
  "data": {
   "shadows": "sqlalchemy.DateTime"
  },
  "type": "import"
 },
 "tests.test_jsonapi.test_updating_resources.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "tests.test_jsonapi.test_updating_resources.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "tests.test_jsonapi.test_updating_resources.TestUpdatingResources": {
  "data": {
   "lineno": 36
  },
  "type": "class"
 },
 "tests.test_jsonapi.test_updating_resources.TestUpdatingResources.setup": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "super",
    "tests.test_jsonapi.test_updating_resources.TestUpdatingResources"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_updating_resources.TestUpdatingResources.setup.Article": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_jsonapi.test_updating_resources.TestUpdatingResources.setup.Person": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.Unicode",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_jsonapi.test_updating_resources.TestUpdatingResources.setup.Tag": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.DateTime",
    "sqlalchemy.Integer",
    "sqlalchemy.Unicode",
    "sqlalchemy.func.current_timestamp",
    "sqlalchemy.func.now"
   ]
  },
  "type": "class"
 },
 "tests.test_jsonapi.test_updating_resources.TestUpdatingResources.test_conflicting_attributes": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_updating_resources.TestUpdatingResources.test_conflicting_id": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_updating_resources.TestUpdatingResources.test_conflicting_type": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_updating_resources.TestUpdatingResources.test_nonexistent": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_updating_resources.TestUpdatingResources.test_nonexistent_relationship": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_updating_resources.TestUpdatingResources.test_other_modifications": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "dumps",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_updating_resources.TestUpdatingResources.test_remove_to_one": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_updating_resources.TestUpdatingResources.test_to_many": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "dumps",
    "operator.attrgetter",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_updating_resources.TestUpdatingResources.test_to_many_clear": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_updating_resources.TestUpdatingResources.test_to_many_forbidden": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_updating_resources.TestUpdatingResources.test_to_one": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_updating_resources.TestUpdatingResources.test_update": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_jsonapi.test_updating_resources.Unicode": {
  "data": {
   "shadows": "sqlalchemy.Unicode"
  },
  "type": "import"
 },
 "tests.test_jsonapi.test_updating_resources.attrgetter": {
  "data": {
   "shadows": "operator.attrgetter"
  },
  "type": "import"
 },
 "tests.test_jsonapi.test_updating_resources.func": {
  "data": {
   "shadows": "sqlalchemy.func"
  },
  "type": "import"
 },
 "tests.test_jsonapi.test_updating_resources.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "tests.test_jsonpatch": {
  "data": {},
  "type": "module"
 },
 "tests.test_manager": {
  "data": {},
  "type": "module"
 },
 "tests.test_manager.APIManager": {
  "data": {
   "shadows": "flask.ext.restless.APIManager"
  },
  "type": "import"
 },
 "tests.test_manager.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "tests.test_manager.Flask": {
  "data": {
   "shadows": "flask.Flask"
  },
  "type": "import"
 },
 "tests.test_manager.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "tests.test_manager.IllegalArgumentError": {
  "data": {
   "shadows": "flask.ext.restless.IllegalArgumentError"
  },
  "type": "import"
 },
 "tests.test_manager.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "tests.test_manager.TestAPIManager": {
  "data": {
   "lineno": 266
  },
  "type": "class"
 },
 "tests.test_manager.TestAPIManager.setup": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "super",
    "tests.test_manager.TestAPIManager"
   ]
  },
  "type": "function"
 },
 "tests.test_manager.TestAPIManager.setup.Article": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.Unicode",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_manager.TestAPIManager.setup.Person": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.Unicode"
   ]
  },
  "type": "class"
 },
 "tests.test_manager.TestAPIManager.setup.Tag": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "sqlalchemy.Column",
    "sqlalchemy.Unicode"
   ]
  },
  "type": "class"
 },
 "tests.test_manager.TestAPIManager.teardown": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "flask.ext.restless.collection_name.created_managers.clear",
    "flask.ext.restless.model_for.created_managers.clear",
    "flask.ext.restless.serializer_for.created_managers.clear",
    "flask.ext.restless.url_for.created_managers.clear",
    "super",
    "tests.test_manager.TestAPIManager"
   ]
  },
  "type": "function"
 },
 "tests.test_manager.TestAPIManager.test_additional_attributes_nonexistent": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "AttributeError",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "tests.test_manager.TestAPIManager.test_collection_name": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "flask.ext.restless.collection_name"
   ]
  },
  "type": "function"
 },
 "tests.test_manager.TestAPIManager.test_collection_name_nonexistent": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "ValueError",
    "flask.ext.restless.collection_name",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "tests.test_manager.TestAPIManager.test_disallow_functions": {
  "data": {
   "lineno": 430
  },
  "type": "function"
 },
 "tests.test_manager.TestAPIManager.test_disallowed_methods": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "func",
    "getattr"
   ]
  },
  "type": "function"
 },
 "tests.test_manager.TestAPIManager.test_empty_collection_name": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "flask.ext.restless.IllegalArgumentError",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "tests.test_manager.TestAPIManager.test_exclude_primary_key_column": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "flask.ext.restless.IllegalArgumentError",
    "nose.tools.raises",
    "skip"
   ]
  },
  "type": "function"
 },
 "tests.test_manager.TestAPIManager.test_missing_id": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "flask.ext.restless.IllegalArgumentError",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "tests.test_manager.TestAPIManager.test_model_for": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "flask.ext.restless.model_for"
   ]
  },
  "type": "function"
 },
 "tests.test_manager.TestAPIManager.test_model_for_collection_name": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "flask.ext.restless.collection_name",
    "flask.ext.restless.model_for"
   ]
  },
  "type": "function"
 },
 "tests.test_manager.TestAPIManager.test_model_for_nonexistent": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "ValueError",
    "flask.ext.restless.model_for",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "tests.test_manager.TestAPIManager.test_only_and_exclude": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "flask.ext.restless.IllegalArgumentError",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "tests.test_manager.TestAPIManager.test_serializer_for": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "flask.ext.restless.serializer_for"
   ]
  },
  "type": "function"
 },
 "tests.test_manager.TestAPIManager.test_serializer_for.my_function": {
  "data": {
   "lineno": 370
  },
  "type": "function"
 },
 "tests.test_manager.TestAPIManager.test_serializer_for_nonexistent": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "ValueError",
    "flask.ext.restless.serializer_for",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "tests.test_manager.TestAPIManager.test_url_for": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "flask.ext.restless.url_for"
   ]
  },
  "type": "function"
 },
 "tests.test_manager.TestAPIManager.test_url_for_explicitly_sets_primary_key_in_links": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_manager.TestAPIManager.test_url_for_nonexistent": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "ValueError",
    "flask.ext.restless.url_for",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "tests.test_manager.TestFSA": {
  "data": {
   "lineno": 466
  },
  "type": "class"
 },
 "tests.test_manager.TestFSA.setup": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "super",
    "tests.test_manager.TestFSA"
   ]
  },
  "type": "function"
 },
 "tests.test_manager.TestFSA.setup.Person": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "class"
 },
 "tests.test_manager.TestFSA.test_init_app": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "flask.ext.restless.APIManager"
   ]
  },
  "type": "function"
 },
 "tests.test_manager.TestLocalAPIManager": {
  "data": {
   "lineno": 37
  },
  "type": "class"
 },
 "tests.test_manager.TestLocalAPIManager.setup": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "super",
    "tests.test_manager.TestLocalAPIManager"
   ]
  },
  "type": "function"
 },
 "tests.test_manager.TestLocalAPIManager.setup.Article": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer"
   ]
  },
  "type": "class"
 },
 "tests.test_manager.TestLocalAPIManager.setup.Person": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer"
   ]
  },
  "type": "class"
 },
 "tests.test_manager.TestLocalAPIManager.test_constructor_app": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "flask.ext.restless.APIManager"
   ]
  },
  "type": "function"
 },
 "tests.test_manager.TestLocalAPIManager.test_empty_url_prefix": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "flask.ext.restless.APIManager"
   ]
  },
  "type": "function"
 },
 "tests.test_manager.TestLocalAPIManager.test_missing_session": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "ValueError",
    "flask.ext.restless.APIManager",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "tests.test_manager.TestLocalAPIManager.test_multiple_managers_init_multiple_apps": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "__name__",
    "flask.Flask",
    "flask.ext.restless.APIManager",
    "force_content_type_jsonapi"
   ]
  },
  "type": "function"
 },
 "tests.test_manager.TestLocalAPIManager.test_multiple_managers_init_single_app": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "flask.ext.restless.APIManager"
   ]
  },
  "type": "function"
 },
 "tests.test_manager.TestLocalAPIManager.test_override_url_prefix": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "flask.ext.restless.APIManager"
   ]
  },
  "type": "function"
 },
 "tests.test_manager.TestLocalAPIManager.test_single_manager_init_multiple_apps": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "__name__",
    "flask.Flask",
    "flask.ext.restless.APIManager",
    "force_content_type_jsonapi"
   ]
  },
  "type": "function"
 },
 "tests.test_manager.TestLocalAPIManager.test_single_manager_init_single_app": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "flask.ext.restless.APIManager"
   ]
  },
  "type": "function"
 },
 "tests.test_manager.TestLocalAPIManager.test_universal_preprocessor": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "Counter",
    "dict",
    "flask.ext.restless.APIManager"
   ]
  },
  "type": "function"
 },
 "tests.test_manager.TestLocalAPIManager.test_universal_preprocessor.Counter": {
  "data": {
   "lineno": 170
  },
  "type": "class"
 },
 "tests.test_manager.TestLocalAPIManager.test_universal_preprocessor.Counter.__call__": {
  "data": {
   "lineno": 176
  },
  "type": "function"
 },
 "tests.test_manager.TestLocalAPIManager.test_universal_preprocessor.Counter.__eq__": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "tests.test_manager.TestLocalAPIManager.test_universal_preprocessor.Counter.__init__": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "tests.test_manager.TestLocalAPIManager.test_url_prefix": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "flask.ext.restless.APIManager"
   ]
  },
  "type": "function"
 },
 "tests.test_manager.Unicode": {
  "data": {
   "shadows": "sqlalchemy.Unicode"
  },
  "type": "import"
 },
 "tests.test_manager.backref": {
  "data": {
   "shadows": "sqlalchemy.orm.backref"
  },
  "type": "import"
 },
 "tests.test_manager.collection_name": {
  "data": {
   "shadows": "flask.ext.restless.collection_name"
  },
  "type": "import"
 },
 "tests.test_manager.model_for": {
  "data": {
   "shadows": "flask.ext.restless.model_for"
  },
  "type": "import"
 },
 "tests.test_manager.raises": {
  "data": {
   "shadows": "nose.tools.raises"
  },
  "type": "import"
 },
 "tests.test_manager.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "tests.test_manager.serializer_for": {
  "data": {
   "shadows": "flask.ext.restless.serializer_for"
  },
  "type": "import"
 },
 "tests.test_manager.url_for": {
  "data": {
   "shadows": "flask.ext.restless.url_for"
  },
  "type": "import"
 },
 "tests.test_metadata": {
  "data": {},
  "type": "module"
 },
 "tests.test_metadata.CONTENT_TYPE": {
  "data": {
   "shadows": "flask.ext.restless.CONTENT_TYPE"
  },
  "type": "import"
 },
 "tests.test_metadata.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "tests.test_metadata.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "tests.test_metadata.TestMetadata": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "tests.test_metadata.TestMetadata.setup": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "super",
    "tests.test_metadata.TestMetadata"
   ]
  },
  "type": "function"
 },
 "tests.test_metadata.TestMetadata.setup.Person": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer"
   ]
  },
  "type": "class"
 },
 "tests.test_metadata.TestMetadata.test_http_headers": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "flask.ext.restless.CONTENT_TYPE",
    "loads",
    "skip"
   ]
  },
  "type": "function"
 },
 "tests.test_metadata.TestMetadata.test_total": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "loads",
    "range"
   ]
  },
  "type": "function"
 },
 "tests.test_serialization": {
  "data": {},
  "type": "module"
 },
 "tests.test_serialization.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "tests.test_serialization.Date": {
  "data": {
   "shadows": "sqlalchemy.Date"
  },
  "type": "import"
 },
 "tests.test_serialization.DateTime": {
  "data": {
   "shadows": "sqlalchemy.DateTime"
  },
  "type": "import"
 },
 "tests.test_serialization.DecoratedDateTime": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "sqlalchemy.DateTime",
    "sqlalchemy.TypeDecorator"
   ]
  },
  "type": "class"
 },
 "tests.test_serialization.DecoratedInterval": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "sqlalchemy.Interval",
    "sqlalchemy.TypeDecorator"
   ]
  },
  "type": "class"
 },
 "tests.test_serialization.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "tests.test_serialization.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "tests.test_serialization.Interval": {
  "data": {
   "shadows": "sqlalchemy.Interval"
  },
  "type": "import"
 },
 "tests.test_serialization.SerializationException": {
  "data": {
   "shadows": "flask.ext.restless.SerializationException"
  },
  "type": "import"
 },
 "tests.test_serialization.TestFetchCollection": {
  "data": {
   "lineno": 69
  },
  "type": "class"
 },
 "tests.test_serialization.TestFetchCollection.setup": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "super",
    "tests.test_serialization.TestFetchCollection"
   ]
  },
  "type": "function"
 },
 "tests.test_serialization.TestFetchCollection.setup.Person": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer"
   ]
  },
  "type": "class"
 },
 "tests.test_serialization.TestFetchCollection.test_exception_single": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "check_sole_error",
    "tests.test_serialization.raise_exception"
   ]
  },
  "type": "function"
 },
 "tests.test_serialization.TestFetchRelatedResource": {
  "data": {
   "lineno": 511
  },
  "type": "class"
 },
 "tests.test_serialization.TestFetchRelatedResource.setup": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "super",
    "tests.test_serialization.TestFetchRelatedResource"
   ]
  },
  "type": "function"
 },
 "tests.test_serialization.TestFetchRelatedResource.setup.Article": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_serialization.TestFetchRelatedResource.setup.Person": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer"
   ]
  },
  "type": "class"
 },
 "tests.test_serialization.TestFetchRelatedResource.test_exception": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "check_sole_error",
    "tests.test_serialization.raise_exception"
   ]
  },
  "type": "function"
 },
 "tests.test_serialization.TestFetchRelatedResource.test_exception_on_included": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "check_sole_error",
    "tests.test_serialization.raise_exception"
   ]
  },
  "type": "function"
 },
 "tests.test_serialization.TestFetchRelation": {
  "data": {
   "lineno": 432
  },
  "type": "class"
 },
 "tests.test_serialization.TestFetchRelation.setup": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "super",
    "tests.test_serialization.TestFetchRelation"
   ]
  },
  "type": "function"
 },
 "tests.test_serialization.TestFetchRelation.setup.Article": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_serialization.TestFetchRelation.setup.Person": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer"
   ]
  },
  "type": "class"
 },
 "tests.test_serialization.TestFetchRelation.test_exception_on_included": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "check_sole_error",
    "tests.test_serialization.raise_exception"
   ]
  },
  "type": "function"
 },
 "tests.test_serialization.TestFetchRelation.test_exception_to_many": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "check_sole_error",
    "tests.test_serialization.raise_exception"
   ]
  },
  "type": "function"
 },
 "tests.test_serialization.TestFetchRelation.test_exception_to_one": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "check_sole_error",
    "tests.test_serialization.raise_exception"
   ]
  },
  "type": "function"
 },
 "tests.test_serialization.TestFetchResource": {
  "data": {
   "lineno": 99
  },
  "type": "class"
 },
 "tests.test_serialization.TestFetchResource.setup": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "super",
    "tests.test_serialization.TestFetchResource"
   ]
  },
  "type": "function"
 },
 "tests.test_serialization.TestFetchResource.setup.Article": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_serialization.TestFetchResource.setup.Comment": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_serialization.TestFetchResource.setup.Person": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Date",
    "sqlalchemy.DateTime",
    "sqlalchemy.Integer",
    "sqlalchemy.Time",
    "sqlalchemy.Unicode",
    "tests.test_serialization.DecoratedDateTime",
    "tests.test_serialization.DecoratedInterval"
   ]
  },
  "type": "class"
 },
 "tests.test_serialization.TestFetchResource.setup.Person.has_early_bedtime": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "datetime.time",
    "hasattr",
    "sqlalchemy.ext.hybrid.hybrid_property"
   ]
  },
  "type": "function"
 },
 "tests.test_serialization.TestFetchResource.test_circular_includes": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "loads",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_serialization.TestFetchResource.test_custom_function": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_serialization.TestFetchResource.test_custom_function.serializer": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "flask.ext.restless.simple_serialize"
   ]
  },
  "type": "function"
 },
 "tests.test_serialization.TestFetchResource.test_date": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_serialization.TestFetchResource.test_datetime": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_serialization.TestFetchResource.test_exception": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "check_sole_error",
    "tests.test_serialization.raise_exception"
   ]
  },
  "type": "function"
 },
 "tests.test_serialization.TestFetchResource.test_exception_message": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "check_sole_error"
   ]
  },
  "type": "function"
 },
 "tests.test_serialization.TestFetchResource.test_exception_message.raise_with_msg": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "flask.ext.restless.SerializationException"
   ]
  },
  "type": "function"
 },
 "tests.test_serialization.TestFetchResource.test_exception_on_included": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "check_sole_error",
    "tests.test_serialization.raise_exception"
   ]
  },
  "type": "function"
 },
 "tests.test_serialization.TestFetchResource.test_hybrid_property": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "datetime.time",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_serialization.TestFetchResource.test_multiple_exceptions_on_included": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "len",
    "loads",
    "tests.test_serialization.raise_exception"
   ]
  },
  "type": "function"
 },
 "tests.test_serialization.TestFetchResource.test_per_model_serializer_on_included": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "len",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_serialization.TestFetchResource.test_per_model_serializer_on_included.add_bar": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "flask.ext.restless.simple_serialize"
   ]
  },
  "type": "function"
 },
 "tests.test_serialization.TestFetchResource.test_per_model_serializer_on_included.add_foo": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "flask.ext.restless.simple_serialize"
   ]
  },
  "type": "function"
 },
 "tests.test_serialization.TestFetchResource.test_time": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_serialization.TestFetchResource.test_type_decorator_datetime": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_serialization.TestFetchResource.test_type_decorator_interval": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "datetime.timedelta",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_serialization.TestFetchResource.test_uuid": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "loads",
    "str",
    "uuid.uuid1"
   ]
  },
  "type": "function"
 },
 "tests.test_serialization.Time": {
  "data": {
   "shadows": "sqlalchemy.Time"
  },
  "type": "import"
 },
 "tests.test_serialization.TypeDecorator": {
  "data": {
   "shadows": "sqlalchemy.TypeDecorator"
  },
  "type": "import"
 },
 "tests.test_serialization.Unicode": {
  "data": {
   "shadows": "sqlalchemy.Unicode"
  },
  "type": "import"
 },
 "tests.test_serialization.backref": {
  "data": {
   "shadows": "sqlalchemy.orm.backref"
  },
  "type": "import"
 },
 "tests.test_serialization.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "tests.test_serialization.hybrid_property": {
  "data": {
   "shadows": "sqlalchemy.ext.hybrid.hybrid_property"
  },
  "type": "import"
 },
 "tests.test_serialization.raise_exception": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "flask.ext.restless.SerializationException"
   ]
  },
  "type": "function"
 },
 "tests.test_serialization.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "tests.test_serialization.simple_serialize": {
  "data": {
   "shadows": "flask.ext.restless.simple_serialize"
  },
  "type": "import"
 },
 "tests.test_serialization.time": {
  "data": {
   "shadows": "datetime.time"
  },
  "type": "import"
 },
 "tests.test_serialization.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "tests.test_serialization.uuid1": {
  "data": {
   "shadows": "uuid.uuid1"
  },
  "type": "import"
 },
 "tests.test_updating": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "tests.test_updating.APIManager": {
  "data": {
   "shadows": "flask.ext.restless.APIManager"
  },
  "type": "import"
 },
 "tests.test_updating.CONTENT_TYPE": {
  "data": {
   "shadows": "flask.ext.restless.CONTENT_TYPE"
  },
  "type": "import"
 },
 "tests.test_updating.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "tests.test_updating.Date": {
  "data": {
   "shadows": "sqlalchemy.Date"
  },
  "type": "import"
 },
 "tests.test_updating.DateTime": {
  "data": {
   "shadows": "sqlalchemy.DateTime"
  },
  "type": "import"
 },
 "tests.test_updating.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "tests.test_updating.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "tests.test_updating.JSONEncoder": {
  "data": {
   "shadows": "BetterJSONEncoder"
  },
  "type": "import"
 },
 "tests.test_updating.ProcessingException": {
  "data": {
   "shadows": "flask.ext.restless.ProcessingException"
  },
  "type": "import"
 },
 "tests.test_updating.SQLAlchemy": {
  "data": {
   "shadows": "flask.ext.sqlalchemy.SQLAlchemy"
  },
  "type": "import"
 },
 "tests.test_updating.TestAssociationProxy": {
  "data": {
   "lineno": 997
  },
  "type": "class"
 },
 "tests.test_updating.TestAssociationProxy.setup": {
  "data": {
   "lineno": 1003,
   "symbols_in_volume": [
    "ArticleTag",
    "super",
    "tests.test_updating.TestAssociationProxy"
   ]
  },
  "type": "function"
 },
 "tests.test_updating.TestAssociationProxy.setup.Article": {
  "data": {
   "lineno": 1012,
   "symbols_in_volume": [
    "ArticleTag",
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.ext.associationproxy.association_proxy"
   ]
  },
  "type": "class"
 },
 "tests.test_updating.TestAssociationProxy.setup.ArticleTag": {
  "data": {
   "lineno": 1018,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.Unicode",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_updating.TestAssociationProxy.setup.Tag": {
  "data": {
   "lineno": 1032,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.Unicode"
   ]
  },
  "type": "class"
 },
 "tests.test_updating.TestAssociationProxy.test_dictionary_collection": {
  "data": {
   "lineno": 1103,
   "symbols_in_volume": [
    "skip"
   ]
  },
  "type": "function"
 },
 "tests.test_updating.TestAssociationProxy.test_extra_info": {
  "data": {
   "lineno": 1108,
   "symbols_in_volume": [
    "dumps",
    "skip"
   ]
  },
  "type": "function"
 },
 "tests.test_updating.TestAssociationProxy.test_extra_info_patch_relationship_url": {
  "data": {
   "lineno": 1140,
   "symbols_in_volume": [
    "dumps",
    "skip"
   ]
  },
  "type": "function"
 },
 "tests.test_updating.TestAssociationProxy.test_extra_info_post_relationship_url": {
  "data": {
   "lineno": 1169,
   "symbols_in_volume": [
    "dumps",
    "skip"
   ]
  },
  "type": "function"
 },
 "tests.test_updating.TestAssociationProxy.test_scalar": {
  "data": {
   "lineno": 1084,
   "symbols_in_volume": [
    "skip"
   ]
  },
  "type": "function"
 },
 "tests.test_updating.TestAssociationProxy.test_update": {
  "data": {
   "lineno": 1050,
   "symbols_in_volume": [
    "dumps",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_updating.TestFlaskSQLAlchemy": {
  "data": {
   "lineno": 1201
  },
  "type": "class"
 },
 "tests.test_updating.TestFlaskSQLAlchemy.setup": {
  "data": {
   "lineno": 1207,
   "symbols_in_volume": [
    "dict",
    "flask.ext.restless.APIManager",
    "flask.ext.sqlalchemy.SQLAlchemy",
    "super",
    "tests.test_updating.TestFlaskSQLAlchemy"
   ]
  },
  "type": "function"
 },
 "tests.test_updating.TestFlaskSQLAlchemy.setup.Person": {
  "data": {
   "lineno": 1219,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "class"
 },
 "tests.test_updating.TestFlaskSQLAlchemy.test_create": {
  "data": {
   "lineno": 1228,
   "symbols_in_volume": [
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updating.TestProcessors": {
  "data": {
   "lineno": 856
  },
  "type": "class"
 },
 "tests.test_updating.TestProcessors.setup": {
  "data": {
   "lineno": 859,
   "symbols_in_volume": [
    "super",
    "tests.test_updating.TestProcessors"
   ]
  },
  "type": "function"
 },
 "tests.test_updating.TestProcessors.setup.Person": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.Unicode"
   ]
  },
  "type": "class"
 },
 "tests.test_updating.TestProcessors.test_change_id": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updating.TestProcessors.test_change_id.increment_id": {
  "data": {
   "lineno": 879,
   "symbols_in_volume": [
    "flask.ext.restless.ProcessingException",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "tests.test_updating.TestProcessors.test_postprocessor": {
  "data": {
   "lineno": 966,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updating.TestProcessors.test_postprocessor.modify_result": {
  "data": {
   "lineno": 976
  },
  "type": "function"
 },
 "tests.test_updating.TestProcessors.test_single_resource": {
  "data": {
   "lineno": 933,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updating.TestProcessors.test_single_resource.set_name": {
  "data": {
   "lineno": 942
  },
  "type": "function"
 },
 "tests.test_updating.TestProcessors.test_single_resource_processing_exception": {
  "data": {
   "lineno": 900,
   "symbols_in_volume": [
    "dict",
    "dumps",
    "len",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_updating.TestProcessors.test_single_resource_processing_exception.forbidden": {
  "data": {
   "lineno": 909,
   "symbols_in_volume": [
    "flask.ext.restless.ProcessingException"
   ]
  },
  "type": "function"
 },
 "tests.test_updating.TestUpdating": {
  "data": {
   "lineno": 58
  },
  "type": "class"
 },
 "tests.test_updating.TestUpdating.setup": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "super",
    "tests.test_updating.TestUpdating"
   ]
  },
  "type": "function"
 },
 "tests.test_updating.TestUpdating.setup.Article": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_updating.TestUpdating.setup.Interval": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer"
   ]
  },
  "type": "class"
 },
 "tests.test_updating.TestUpdating.setup.Interval.length": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "tests.test_updating.TestUpdating.setup.Interval.radius": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "tests.test_updating.TestUpdating.setup.Person": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Date",
    "sqlalchemy.DateTime",
    "sqlalchemy.Integer",
    "sqlalchemy.Time",
    "sqlalchemy.Unicode"
   ]
  },
  "type": "class"
 },
 "tests.test_updating.TestUpdating.test_collection_name": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updating.TestUpdating.test_conflicting_type_to_many_link": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updating.TestUpdating.test_conflicting_type_to_one_link": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updating.TestUpdating.test_correct_content_type": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "dict",
    "dumps",
    "flask.ext.restless.CONTENT_TYPE"
   ]
  },
  "type": "function"
 },
 "tests.test_updating.TestUpdating.test_deserializing_date": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updating.TestUpdating.test_deserializing_datetime": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updating.TestUpdating.test_deserializing_time": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updating.TestUpdating.test_different_endpoints": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updating.TestUpdating.test_empty_request": {
  "data": {
   "lineno": 347
  },
  "type": "function"
 },
 "tests.test_updating.TestUpdating.test_empty_string": {
  "data": {
   "lineno": 356
  },
  "type": "function"
 },
 "tests.test_updating.TestUpdating.test_invalid_json": {
  "data": {
   "lineno": 368
  },
  "type": "function"
 },
 "tests.test_updating.TestUpdating.test_missing_id": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updating.TestUpdating.test_missing_type": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updating.TestUpdating.test_msie8": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updating.TestUpdating.test_msie9": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updating.TestUpdating.test_no_content_type": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "dict",
    "dumps",
    "flask.ext.restless.CONTENT_TYPE"
   ]
  },
  "type": "function"
 },
 "tests.test_updating.TestUpdating.test_nonexistent_attribute": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updating.TestUpdating.test_nonexistent_to_one_link": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "check_sole_error",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updating.TestUpdating.test_read_only_hybrid_property": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updating.TestUpdating.test_related_resource_url_forbidden": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updating.TestUpdating.test_relationship_empty_object": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updating.TestUpdating.test_relationship_missing_object": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "check_sole_error",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updating.TestUpdating.test_rollback_on_integrity_error": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updating.TestUpdating.test_set_hybrid_property": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updating.TestUpdating.test_to_many_null": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "check_sole_error",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updating.TestUpdating.test_to_many_related_resource_url": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updating.TestUpdating.test_to_one_related_resource_url": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updating.TestUpdating.test_wrong_accept_header": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updating.TestUpdating.test_wrong_content_type": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updating.Time": {
  "data": {
   "shadows": "sqlalchemy.Time"
  },
  "type": "import"
 },
 "tests.test_updating.Unicode": {
  "data": {
   "shadows": "sqlalchemy.Unicode"
  },
  "type": "import"
 },
 "tests.test_updating.association_proxy": {
  "data": {
   "shadows": "sqlalchemy.ext.associationproxy.association_proxy"
  },
  "type": "import"
 },
 "tests.test_updating.backref": {
  "data": {
   "shadows": "sqlalchemy.orm.backref"
  },
  "type": "import"
 },
 "tests.test_updating.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "tests.test_updating.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "tests.test_updating.has_flask_sqlalchemy": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "tests.test_updating.hybrid_property": {
  "data": {
   "shadows": "sqlalchemy.ext.hybrid.hybrid_property"
  },
  "type": "import"
 },
 "tests.test_updating.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "tests.test_updatingrelationship": {
  "data": {},
  "type": "module"
 },
 "tests.test_updatingrelationship.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "tests.test_updatingrelationship.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "tests.test_updatingrelationship.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "tests.test_updatingrelationship.TestAdding": {
  "data": {
   "lineno": 30
  },
  "type": "class"
 },
 "tests.test_updatingrelationship.TestAdding.setup": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "super",
    "tests.test_updatingrelationship.TestAdding"
   ]
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestAdding.setup.Article": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_updatingrelationship.TestAdding.setup.Person": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer"
   ]
  },
  "type": "class"
 },
 "tests.test_updatingrelationship.TestAdding.test_change_two_preprocessor": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestAdding.test_change_two_preprocessor.change_two": {
  "data": {
   "lineno": 237
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestAdding.test_conflicting_type": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestAdding.test_empty_request": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestAdding.test_empty_string": {
  "data": {
   "lineno": 174
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestAdding.test_invalid_json": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestAdding.test_missing_id": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestAdding.test_missing_relation": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestAdding.test_missing_type": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestAdding.test_nonexistent_instance": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestAdding.test_nonexistent_linkage": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestAdding.test_nonexistent_relation": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestAdding.test_postprocessor": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestAdding.test_postprocessor.enable_flag": {
  "data": {
   "lineno": 262
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestAdding.test_preprocessor": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestAdding.test_preprocessor.update_data": {
  "data": {
   "lineno": 213
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestDeleting": {
  "data": {
   "lineno": 275
  },
  "type": "class"
 },
 "tests.test_updatingrelationship.TestDeleting.setup": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "super",
    "tests.test_updatingrelationship.TestDeleting"
   ]
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestDeleting.setup.Article": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_updatingrelationship.TestDeleting.setup.Person": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer"
   ]
  },
  "type": "class"
 },
 "tests.test_updatingrelationship.TestDeleting.test_change_id_preprocessor": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestDeleting.test_change_id_preprocessor.change_id": {
  "data": {
   "lineno": 485
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestDeleting.test_conflicting_type": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestDeleting.test_empty_request": {
  "data": {
   "lineno": 413
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestDeleting.test_empty_string": {
  "data": {
   "lineno": 425
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestDeleting.test_invalid_json": {
  "data": {
   "lineno": 438
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestDeleting.test_missing_id": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestDeleting.test_missing_relation": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestDeleting.test_missing_type": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestDeleting.test_nonexistent_instance": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestDeleting.test_nonexistent_linkage": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestDeleting.test_nonexistent_relation": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestDeleting.test_postprocessor": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestDeleting.test_postprocessor.enable_flag": {
  "data": {
   "lineno": 510
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestDeleting.test_preprocessor": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestDeleting.test_preprocessor.update_data": {
  "data": {
   "lineno": 464
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestUpdatingToMany": {
  "data": {
   "lineno": 524
  },
  "type": "class"
 },
 "tests.test_updatingrelationship.TestUpdatingToMany.setup": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "super",
    "tests.test_updatingrelationship.TestUpdatingToMany"
   ]
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestUpdatingToMany.setup.Article": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_updatingrelationship.TestUpdatingToMany.setup.Person": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer"
   ]
  },
  "type": "class"
 },
 "tests.test_updatingrelationship.TestUpdatingToMany.test_change_two_preprocessor": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestUpdatingToMany.test_change_two_preprocessor.change_two": {
  "data": {
   "lineno": 738
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestUpdatingToMany.test_conflicting_type": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestUpdatingToMany.test_empty_request": {
  "data": {
   "lineno": 662
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestUpdatingToMany.test_empty_string": {
  "data": {
   "lineno": 674
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestUpdatingToMany.test_invalid_json": {
  "data": {
   "lineno": 687
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestUpdatingToMany.test_missing_id": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestUpdatingToMany.test_missing_relation": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestUpdatingToMany.test_missing_type": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestUpdatingToMany.test_nonexistent_instance": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestUpdatingToMany.test_nonexistent_linkage": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestUpdatingToMany.test_nonexistent_relation": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestUpdatingToMany.test_postprocessor": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestUpdatingToMany.test_postprocessor.enable_flag": {
  "data": {
   "lineno": 764
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestUpdatingToMany.test_preprocessor": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestUpdatingToMany.test_preprocessor.update_data": {
  "data": {
   "lineno": 713
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestUpdatingToMany.test_set_null": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestUpdatingToOne": {
  "data": {
   "lineno": 792
  },
  "type": "class"
 },
 "tests.test_updatingrelationship.TestUpdatingToOne.setup": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "super",
    "tests.test_updatingrelationship.TestUpdatingToOne"
   ]
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestUpdatingToOne.setup.Article": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_updatingrelationship.TestUpdatingToOne.setup.Person": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer"
   ]
  },
  "type": "class"
 },
 "tests.test_updatingrelationship.TestUpdatingToOne.test_conflicting_type": {
  "data": {
   "lineno": 895,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestUpdatingToOne.test_empty_request": {
  "data": {
   "lineno": 930
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestUpdatingToOne.test_empty_string": {
  "data": {
   "lineno": 942
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestUpdatingToOne.test_invalid_json": {
  "data": {
   "lineno": 955
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestUpdatingToOne.test_missing_id": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestUpdatingToOne.test_missing_relation": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestUpdatingToOne.test_missing_type": {
  "data": {
   "lineno": 878,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestUpdatingToOne.test_nonexistent_instance": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestUpdatingToOne.test_nonexistent_linkage": {
  "data": {
   "lineno": 912,
   "symbols_in_volume": [
    "dict",
    "dumps",
    "print"
   ]
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.TestUpdatingToOne.test_nonexistent_relation": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": [
    "dict",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_updatingrelationship.backref": {
  "data": {
   "shadows": "sqlalchemy.orm.backref"
  },
  "type": "import"
 },
 "tests.test_updatingrelationship.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "tests.test_validation": {
  "data": {
   "symbols_in_volume": [
    "int",
    "savalidation.VERSION.split",
    "tuple"
   ]
  },
  "type": "module"
 },
 "tests.test_validation.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "tests.test_validation.CoolValidationError": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "tests.test_validation.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "tests.test_validation.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "tests.test_validation.TestSAValidation": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "skip_unless",
    "tests.test_validation.has_savalidation",
    "tests.test_validation.sav_version",
    "tests.test_validation.sys"
   ]
  },
  "type": "class"
 },
 "tests.test_validation.TestSAValidation.setup": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "savalidation.ValidationError",
    "super",
    "tests.test_validation.TestSAValidation"
   ]
  },
  "type": "function"
 },
 "tests.test_validation.TestSAValidation.setup.Person": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "id",
    "savalidation.ValidationMixin",
    "savalidation.validators.validates_email",
    "savalidation.validators.validates_presence_of",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.Unicode"
   ]
  },
  "type": "class"
 },
 "tests.test_validation.TestSAValidation.test_create_absent": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "dict",
    "dumps",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_validation.TestSAValidation.test_create_invalid": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "dumps",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_validation.TestSAValidation.test_create_valid": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "dict",
    "dumps",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_validation.TestSAValidation.test_update_invalid": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "dumps",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_validation.TestSAValidation.test_update_valid": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_validation.TestSimpleValidation": {
  "data": {
   "lineno": 57
  },
  "type": "class"
 },
 "tests.test_validation.TestSimpleValidation.setup": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "super",
    "tests.test_validation.CoolValidationError",
    "tests.test_validation.TestSimpleValidation"
   ]
  },
  "type": "function"
 },
 "tests.test_validation.TestSimpleValidation.setup.Article": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.Unicode",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_validation.TestSimpleValidation.setup.Comment": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_validation.TestSimpleValidation.setup.Person": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer"
   ]
  },
  "type": "class"
 },
 "tests.test_validation.TestSimpleValidation.setup.Person.validate_age": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "dict",
    "sqlalchemy.orm.validates",
    "tests.test_validation.CoolValidationError"
   ]
  },
  "type": "function"
 },
 "tests.test_validation.TestSimpleValidation.setup.Person.validate_articles": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "len",
    "sqlalchemy.orm.validates",
    "tests.test_validation.CoolValidationError"
   ]
  },
  "type": "function"
 },
 "tests.test_validation.TestSimpleValidation.test_adding_to_relationship_invalid": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "dumps",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_validation.TestSimpleValidation.test_create_invalid": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "dict",
    "dumps",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_validation.TestSimpleValidation.test_create_valid": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "dict",
    "dumps",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_validation.TestSimpleValidation.test_update_invalid": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "check_sole_error",
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_validation.TestSimpleValidation.test_update_relationship_invalid": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "dumps",
    "len",
    "loads"
   ]
  },
  "type": "function"
 },
 "tests.test_validation.TestSimpleValidation.test_update_valid": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_validation.TestSimpleValidation.test_updating_relationship_invalid": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "dumps",
    "loads",
    "tests.test_validation.CoolValidationError"
   ]
  },
  "type": "function"
 },
 "tests.test_validation.Unicode": {
  "data": {
   "shadows": "sqlalchemy.Unicode"
  },
  "type": "import"
 },
 "tests.test_validation._sav": {
  "data": {
   "shadows": "savalidation"
  },
  "type": "import"
 },
 "tests.test_validation.backref": {
  "data": {
   "shadows": "sqlalchemy.orm.backref"
  },
  "type": "import"
 },
 "tests.test_validation.has_savalidation": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "tests.test_validation.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "tests.test_validation.sav": {
  "data": {
   "shadows": "savalidation.validators"
  },
  "type": "import"
 },
 "tests.test_validation.sav_version": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "tests.test_validation.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tests.test_validation.validates": {
  "data": {
   "shadows": "sqlalchemy.orm.validates"
  },
  "type": "import"
 }
}