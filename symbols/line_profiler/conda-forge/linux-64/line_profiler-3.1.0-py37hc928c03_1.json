{
 "kernprof": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "NameError",
    "__name__",
    "getattr",
    "kernprof.builtins",
    "kernprof.main",
    "kernprof.sys"
   ]
  },
  "type": "module"
 },
 "kernprof.CO_GENERATOR": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "kernprof.ContextualProfile": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "profile.Profile"
   ]
  },
  "type": "class"
 },
 "kernprof.ContextualProfile.__call__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "kernprof.is_generator"
   ]
  },
  "type": "function"
 },
 "kernprof.ContextualProfile.__enter__": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "kernprof.ContextualProfile.__exit__": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "kernprof.ContextualProfile.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "kernprof.ContextualProfile",
    "super"
   ]
  },
  "type": "function"
 },
 "kernprof.ContextualProfile.disable_by_count": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "kernprof.ContextualProfile.enable_by_count": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "kernprof.builtins"
   ]
  },
  "type": "function"
 },
 "kernprof.ContextualProfile.wrap_function": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "kernprof.ContextualProfile.wrap_function.wrapper": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "func",
    "kernprof.functools"
   ]
  },
  "type": "function"
 },
 "kernprof.ContextualProfile.wrap_generator": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "kernprof.ContextualProfile.wrap_generator.wrapper": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "StopIteration",
    "func",
    "input",
    "kernprof.functools",
    "next"
   ]
  },
  "type": "function"
 },
 "kernprof.PY3": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "kernprof.Profile": {
  "data": {
   "shadows": "profile.Profile"
  },
  "type": "import"
 },
 "kernprof.builtins": {
  "data": {
   "shadows": "__builtin__"
  },
  "type": "import"
 },
 "kernprof.exec_": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "kernprof.execfile": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "compile",
    "globals",
    "kernprof.exec_",
    "locals",
    "open"
   ]
  },
  "type": "function"
 },
 "kernprof.find_script": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "SystemExit",
    "dir",
    "kernprof.os",
    "kernprof.sys"
   ]
  },
  "type": "function"
 },
 "kernprof.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "kernprof.is_generator": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "kernprof.CO_GENERATOR"
   ]
  },
  "type": "function"
 },
 "kernprof.line_profiler": {
  "data": {
   "shadows": "line_profiler"
  },
  "type": "import"
 },
 "kernprof.main": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "SystemExit",
    "__builtin__.__dict__",
    "__name__",
    "kernprof.ContextualProfile",
    "kernprof.PY3",
    "kernprof.execfile",
    "kernprof.find_script",
    "kernprof.line_profiler",
    "kernprof.optparse",
    "kernprof.os",
    "kernprof.sys",
    "locals",
    "print"
   ]
  },
  "type": "function"
 },
 "kernprof.optparse": {
  "data": {
   "shadows": "optparse"
  },
  "type": "import"
 },
 "kernprof.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "kernprof.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "line_profiler": {
  "data": {},
  "type": "module"
 },
 "line_profiler.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "line_profiler.__main__": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "main"
   ]
  },
  "type": "module"
 },
 "line_profiler.__submodules__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "line_profiler.line_profiler": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "getattr",
    "line_profiler.line_profiler.PY3",
    "line_profiler.line_profiler.PY35",
    "line_profiler.line_profiler.builtins",
    "line_profiler.line_profiler.main",
    "line_profiler.line_profiler.sys"
   ]
  },
  "type": "module"
 },
 "line_profiler.line_profiler.CLineProfiler": {
  "data": {
   "shadows": "LineProfiler"
  },
  "type": "import"
 },
 "line_profiler.line_profiler.CO_GENERATOR": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "line_profiler.line_profiler.LineProfiler": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "line_profiler.line_profiler.PY35"
   ]
  },
  "type": "class"
 },
 "line_profiler.line_profiler.LineProfiler.__call__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "line_profiler.line_profiler.is_coroutine",
    "line_profiler.line_profiler.is_generator"
   ]
  },
  "type": "function"
 },
 "line_profiler.line_profiler.LineProfiler.add_module": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "inspect.isclass",
    "inspect.isfunction"
   ]
  },
  "type": "function"
 },
 "line_profiler.line_profiler.LineProfiler.dump_stats": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "cPickle.HIGHEST_PROTOCOL",
    "cPickle.dump",
    "open"
   ]
  },
  "type": "function"
 },
 "line_profiler.line_profiler.LineProfiler.print_stats": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "line_profiler.line_profiler.show_text"
   ]
  },
  "type": "function"
 },
 "line_profiler.line_profiler.LineProfiler.run": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "line_profiler.line_profiler.__main__"
   ]
  },
  "type": "function"
 },
 "line_profiler.line_profiler.LineProfiler.runcall": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "line_profiler.line_profiler.LineProfiler.runctx": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "globals",
    "line_profiler.line_profiler.exec_",
    "locals"
   ]
  },
  "type": "function"
 },
 "line_profiler.line_profiler.LineProfiler.wrap_function": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "line_profiler.line_profiler.LineProfiler.wrap_function.wrapper": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "func",
    "line_profiler.line_profiler.functools"
   ]
  },
  "type": "function"
 },
 "line_profiler.line_profiler.LineProfiler.wrap_generator": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "line_profiler.line_profiler.LineProfiler.wrap_generator.wrapper": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "StopIteration",
    "func",
    "input",
    "line_profiler.line_profiler.functools",
    "next"
   ]
  },
  "type": "function"
 },
 "line_profiler.line_profiler.LineProfilerMagics": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "IPython.core.magic.Magics",
    "IPython.core.magic.magics_class"
   ]
  },
  "type": "class"
 },
 "line_profiler.line_profiler.LineProfilerMagics.lprun": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "Exception",
    "IPython.core.error.UsageError",
    "IPython.core.magic.line_magic",
    "IPython.core.page.page",
    "IPython.utils.ipstruct.Struct",
    "KeyboardInterrupt",
    "SystemExit",
    "TypeError",
    "__builtin__.__dict__",
    "__import__",
    "eval",
    "float",
    "io.StringIO",
    "line_profiler.line_profiler.LineProfiler",
    "line_profiler.line_profiler.PY3",
    "open",
    "print"
   ]
  },
  "type": "function"
 },
 "line_profiler.line_profiler.Magics": {
  "data": {
   "shadows": "IPython.core.magic.Magics"
  },
  "type": "import"
 },
 "line_profiler.line_profiler.PY3": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "line_profiler.line_profiler.PY35": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "line_profiler.line_profiler.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "line_profiler.line_profiler.Struct": {
  "data": {
   "shadows": "IPython.utils.ipstruct.Struct"
  },
  "type": "import"
 },
 "line_profiler.line_profiler.UsageError": {
  "data": {
   "shadows": "IPython.core.error.UsageError"
  },
  "type": "import"
 },
 "line_profiler.line_profiler.__main__": {
  "data": {
   "shadows": "__main__"
  },
  "type": "import"
 },
 "line_profiler.line_profiler.__version__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "line_profiler.line_profiler.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "line_profiler.line_profiler.builtins": {
  "data": {
   "shadows": "__builtin__"
  },
  "type": "import"
 },
 "line_profiler.line_profiler.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "line_profiler.line_profiler.exec_": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "exec",
    "line_profiler.line_profiler.sys"
   ]
  },
  "type": "function"
 },
 "line_profiler.line_profiler.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "line_profiler.line_profiler.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "line_profiler.line_profiler.is_coroutine": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "line_profiler.line_profiler.is_generator": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "line_profiler.line_profiler.CO_GENERATOR"
   ]
  },
  "type": "function"
 },
 "line_profiler.line_profiler.isclass": {
  "data": {
   "shadows": "inspect.isclass"
  },
  "type": "import"
 },
 "line_profiler.line_profiler.isfunction": {
  "data": {
   "shadows": "inspect.isfunction"
  },
  "type": "import"
 },
 "line_profiler.line_profiler.line_magic": {
  "data": {
   "shadows": "IPython.core.magic.line_magic"
  },
  "type": "import"
 },
 "line_profiler.line_profiler.linecache": {
  "data": {
   "shadows": "linecache"
  },
  "type": "import"
 },
 "line_profiler.line_profiler.load_ipython_extension": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "line_profiler.line_profiler.LineProfilerMagics"
   ]
  },
  "type": "function"
 },
 "line_profiler.line_profiler.load_stats": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "cPickle.load",
    "open"
   ]
  },
  "type": "function"
 },
 "line_profiler.line_profiler.magics_class": {
  "data": {
   "shadows": "IPython.core.magic.magics_class"
  },
  "type": "import"
 },
 "line_profiler.line_profiler.main": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "len",
    "line_profiler.line_profiler.__version__",
    "line_profiler.line_profiler.load_stats",
    "line_profiler.line_profiler.optparse",
    "line_profiler.line_profiler.show_text"
   ]
  },
  "type": "function"
 },
 "line_profiler.line_profiler.optparse": {
  "data": {
   "shadows": "optparse"
  },
  "type": "import"
 },
 "line_profiler.line_profiler.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "line_profiler.line_profiler.page": {
  "data": {
   "shadows": "IPython.core.page.page"
  },
  "type": "import"
 },
 "line_profiler.line_profiler.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "line_profiler.line_profiler.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "line_profiler.line_profiler.show_func": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "float",
    "len",
    "line_profiler.line_profiler.inspect",
    "line_profiler.line_profiler.linecache",
    "line_profiler.line_profiler.os",
    "line_profiler.line_profiler.sys",
    "max",
    "min",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "line_profiler.line_profiler.show_text": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "line_profiler.line_profiler.show_func",
    "line_profiler.line_profiler.sys",
    "sorted"
   ]
  },
  "type": "function"
 },
 "line_profiler.line_profiler.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "line_profiler.line_profiler_py35": {
  "data": {},
  "type": "module"
 },
 "line_profiler.line_profiler_py35.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "line_profiler.line_profiler_py35.wrap_coroutine": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "func",
    "line_profiler.line_profiler_py35.functools"
   ]
  },
  "type": "function"
 }
}