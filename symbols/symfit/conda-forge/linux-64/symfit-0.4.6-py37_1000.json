{
 "symfit": {
  "lineno": null,
  "symbols_in_volume": [
   "pkg_resources.get_distribution"
  ],
  "type": "module"
 },
 "symfit.api": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "symfit.contrib": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "symfit.contrib._import_submodules": {
  "lineno": 5,
  "symbols_in_volume": [
   "importlib.import_module",
   "pkgutil.walk_packages",
   "sys.modules"
  ],
  "type": "function"
 },
 "symfit.contrib.interactive_guess": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "symfit.contrib.interactive_guess.examples.ODE_2D_example": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.max",
   "symfit.D",
   "symfit.Fit",
   "symfit.ODEModel",
   "symfit.Parameter",
   "symfit.contrib.interactive_guess.InteractiveGuess2D",
   "symfit.variables"
  ],
  "type": "module"
 },
 "symfit.contrib.interactive_guess.examples.ODE_example": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array",
   "symfit.D",
   "symfit.Fit",
   "symfit.ODEModel",
   "symfit.Parameter",
   "symfit.contrib.interactive_guess.InteractiveGuess2D",
   "symfit.variables"
  ],
  "type": "module"
 },
 "symfit.contrib.interactive_guess.examples.simple_2D_example": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.linspace",
   "symfit.Fit",
   "symfit.Model",
   "symfit.Parameter",
   "symfit.Variable",
   "symfit.contrib.interactive_guess.InteractiveGuess2D"
  ],
  "type": "module"
 },
 "symfit.contrib.interactive_guess.examples.simple_2D_example.distr": {
  "lineno": 12,
  "symbols_in_volume": [
   "symfit.exp"
  ],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.examples.vector_valued_2D": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.linspace",
   "symfit.Fit",
   "symfit.Model",
   "symfit.Parameter",
   "symfit.Variable",
   "symfit.contrib.interactive_guess.InteractiveGuess2D"
  ],
  "type": "module"
 },
 "symfit.contrib.interactive_guess.interactive_guess": {
  "lineno": null,
  "symbols_in_volume": [
   "matplotlib.pyplot.ioff"
  ],
  "type": "module"
 },
 "symfit.contrib.interactive_guess.interactive_guess.InteractiveGuess2D": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.contrib.interactive_guess.interactive_guess.InteractiveGuess2D.__init__": {
  "lineno": 27,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.linspace",
   "numpy.max",
   "numpy.min"
  ],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.interactive_guess.InteractiveGuess2D.__str__": {
  "lineno": 200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.interactive_guess.InteractiveGuess2D._eval_model": {
  "lineno": 188,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.interactive_guess.InteractiveGuess2D._set_up_figure": {
  "lineno": 97,
  "symbols_in_volume": [
   "matplotlib.pyplot.figure",
   "numpy.ceil"
  ],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.interactive_guess.InteractiveGuess2D._set_up_sliders": {
  "lineno": 142,
  "symbols_in_volume": [
   "matplotlib.pyplot.Slider"
  ],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.interactive_guess.InteractiveGuess2D._update_plot": {
  "lineno": 171,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.interactive_guess.InteractiveGuess2D.execute": {
  "lineno": 80,
  "symbols_in_volume": [
   "matplotlib.pyplot.close",
   "matplotlib.pyplot.show"
  ],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit": {
  "lineno": null,
  "symbols_in_volume": [
   "matplotlib.pyplot.ioff",
   "unittest.main"
  ],
  "type": "module"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian2DInteractiveGuessTest": {
  "lineno": 22,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian2DInteractiveGuessTest.setUpClass": {
  "lineno": 23,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.random.seed",
   "symfit.Parameter",
   "symfit.Variable",
   "symfit.contrib.interactive_guess.InteractiveGuess2D"
  ],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian2DInteractiveGuessTest.test_get_data": {
  "lineno": 78,
  "symbols_in_volume": [
   "numpy.allclose"
  ],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian2DInteractiveGuessTest.test_number_of_plots": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian2DInteractiveGuessTest.test_number_of_projections": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian2DInteractiveGuessTest.test_number_of_sliders": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian2DInteractiveGuessTest.test_plot_colors": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian2DInteractiveGuessTest.test_plot_titles": {
  "lineno": 98,
  "symbols_in_volume": [
   "symfit.latex"
  ],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian2DInteractiveGuessTest.test_slider_callback_data": {
  "lineno": 60,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.max",
   "numpy.min",
   "numpy.random.random"
  ],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian2DInteractiveGuessTest.test_slider_callback_parameter_values": {
  "lineno": 50,
  "symbols_in_volume": [
   "numpy.random.random"
  ],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian2DInteractiveGuessTest.test_slider_labels": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian3DInteractiveFitTest": {
  "lineno": 148,
  "symbols_in_volume": [
   "unittest.TestCase",
   "unittest.skip"
  ],
  "type": "class"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian3DInteractiveFitTest.setUpClass": {
  "lineno": 150,
  "symbols_in_volume": [
   "numpy.dstack",
   "numpy.histogram2d",
   "numpy.meshgrid",
   "numpy.random.multivariate_normal",
   "symfit.Parameter",
   "symfit.Variable",
   "symfit.contrib.interactive_guess.InteractiveGuess2D",
   "symfit.distributions.Gaussian"
  ],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian3DInteractiveFitTest.test_number_of_plots": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian3DInteractiveFitTest.test_number_of_projections": {
  "lineno": 180,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian3DInteractiveFitTest.test_plot_titles": {
  "lineno": 186,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.VectorValuedTest": {
  "lineno": 114,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.VectorValuedTest.setUpClass": {
  "lineno": 115,
  "symbols_in_volume": [
   "numpy.linspace",
   "symfit.Parameter",
   "symfit.Variable",
   "symfit.contrib.interactive_guess.InteractiveGuess2D"
  ],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.VectorValuedTest.test_number_of_plots": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.VectorValuedTest.test_number_of_projections": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.VectorValuedTest.test_plot_titles": {
  "lineno": 137,
  "symbols_in_volume": [
   "symfit.latex"
  ],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.distr": {
  "lineno": 11,
  "symbols_in_volume": [
   "symfit.exp"
  ],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.np_distr": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "symfit.core": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "symfit.core._repeatable_partial": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "symfit.core._repeatable_partial.repeatable_partial": {
  "lineno": 3,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "class"
 },
 "symfit.core._repeatable_partial.repeatable_partial.__new__": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.argument": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "symfit.core.argument.Argument": {
  "lineno": 8,
  "symbols_in_volume": [
   "collections.defaultdict",
   "sympy.core.symbol.Symbol"
  ],
  "type": "class"
 },
 "symfit.core.argument.Argument.__getstate__": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.argument.Argument.__init__": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.argument.Argument.__new__": {
  "lineno": 30,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "symfit.core.argument.Parameter": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.argument.Parameter.__init__": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.argument.Parameter.__new__": {
  "lineno": 81,
  "symbols_in_volume": [
   "numbers.Number"
  ],
  "type": "function"
 },
 "symfit.core.argument.Variable": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.fit": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "symfit.core.fit.BaseCallableModel": {
  "lineno": 288,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.fit.BaseCallableModel.__call__": {
  "lineno": 319,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "function"
 },
 "symfit.core.fit.BaseCallableModel._init_from_dict": {
  "lineno": 315,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.BaseCallableModel._make_signature": {
  "lineno": 305,
  "symbols_in_volume": [
   "funcsigs.Parameter",
   "funcsigs.Parameter.POSITIONAL_OR_KEYWORD",
   "funcsigs.Signature"
  ],
  "type": "function"
 },
 "symfit.core.fit.BaseCallableModel.eval_components": {
  "lineno": 292,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.BaseCallableModel.eval_jacobian": {
  "lineno": 401,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.BaseCallableModel.finite_difference": {
  "lineno": 336,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "symfit.core.fit.BaseCallableModel.numerical_components": {
  "lineno": 298,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "symfit.core.fit.BaseFit": {
  "lineno": 921,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.fit.BaseFit.error_func": {
  "lineno": 935,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.BaseFit.eval_jacobian": {
  "lineno": 941,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.BaseFit.execute": {
  "lineno": 925,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.BaseModel": {
  "lineno": 39,
  "symbols_in_volume": [
   "collections.Mapping"
  ],
  "type": "class"
 },
 "symfit.core.fit.BaseModel.__eq__": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.BaseModel.__getitem__": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.BaseModel.__getstate__": {
  "lineno": 214,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.BaseModel.__init__": {
  "lineno": 46,
  "symbols_in_volume": [
   "collections.Mapping",
   "symfit.core.argument.Variable",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "symfit.core.fit.BaseModel.__iter__": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.BaseModel.__len__": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.BaseModel.__neg__": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.BaseModel.__reduce__": {
  "lineno": 223,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.BaseModel.__str__": {
  "lineno": 196,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.BaseModel._init_from_dict": {
  "lineno": 126,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "symfit.core.argument.Variable"
  ],
  "type": "function"
 },
 "symfit.core.fit.BaseModel.bounds": {
  "lineno": 161,
  "symbols_in_volume": [
   "numpy.nextafter"
  ],
  "type": "function"
 },
 "symfit.core.fit.BaseModel.shared_parameters": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.BaseModel.vars": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.BaseNumericalModel": {
  "lineno": 227,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.fit.BaseNumericalModel.__eq__": {
  "lineno": 260,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.BaseNumericalModel.__init__": {
  "lineno": 232,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.BaseNumericalModel.__neg__": {
  "lineno": 265,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.BaseNumericalModel.__reduce__": {
  "lineno": 281,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.BaseNumericalModel._init_from_dict": {
  "lineno": 245,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "symfit.core.argument.Variable"
  ],
  "type": "function"
 },
 "symfit.core.fit.BaseNumericalModel.shared_parameters": {
  "lineno": 275,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.CallableModel": {
  "lineno": 443,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.fit.CallableModel.numerical_components": {
  "lineno": 451,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.CallableNumericalModel": {
  "lineno": 408,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.fit.CallableNumericalModel.numerical_components": {
  "lineno": 436,
  "symbols_in_volume": [
   "sympy.Expr"
  ],
  "type": "function"
 },
 "symfit.core.fit.Constraint": {
  "lineno": 687,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.fit.Constraint.__init__": {
  "lineno": 700,
  "symbols_in_volume": [
   "sympy.core.relational.Relational"
  ],
  "type": "function"
 },
 "symfit.core.fit.Constraint.__neg__": {
  "lineno": 715,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.Constraint.__reduce__": {
  "lineno": 754,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.Constraint._make_signature": {
  "lineno": 746,
  "symbols_in_volume": [
   "funcsigs.Parameter",
   "funcsigs.Parameter.POSITIONAL_OR_KEYWORD",
   "funcsigs.Signature"
  ],
  "type": "function"
 },
 "symfit.core.fit.Constraint.jacobian": {
  "lineno": 723,
  "symbols_in_volume": [
   "sympy.diff"
  ],
  "type": "function"
 },
 "symfit.core.fit.Constraint.numerical_components": {
  "lineno": 732,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.Constraint.numerical_jacobian": {
  "lineno": 739,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.Fit": {
  "lineno": 1346,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.fit.Fit.__init__": {
  "lineno": 1374,
  "symbols_in_volume": [
   "collections.Sequence"
  ],
  "type": "function"
 },
 "symfit.core.fit.Fit._determine_minimizer": {
  "lineno": 1444,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.Fit._init_constraints": {
  "lineno": 1494,
  "symbols_in_volume": [
   "sympy.Eq",
   "sympy.Ge",
   "sympy.Le"
  ],
  "type": "function"
 },
 "symfit.core.fit.Fit._init_minimizer": {
  "lineno": 1458,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.Fit.execute": {
  "lineno": 1529,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.HasCovarianceMatrix": {
  "lineno": 949,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.fit.HasCovarianceMatrix._cov_mat_equal_lenghts": {
  "lineno": 1028,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.concatenate",
   "numpy.linalg.inv",
   "numpy.newaxis",
   "numpy.ones_like",
   "numpy.product",
   "numpy.repeat",
   "numpy.swapaxes",
   "numpy.tensordot"
  ],
  "type": "function"
 },
 "symfit.core.fit.HasCovarianceMatrix._cov_mat_unequal_lenghts": {
  "lineno": 1080,
  "symbols_in_volume": [
   "numpy.linalg.inv",
   "numpy.ones_like",
   "numpy.swapaxes",
   "numpy.tensordot",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "symfit.core.fit.HasCovarianceMatrix._reduced_residual_ss": {
  "lineno": 991,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.product",
   "numpy.sum"
  ],
  "type": "function"
 },
 "symfit.core.fit.HasCovarianceMatrix.covariance_matrix": {
  "lineno": 959,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linalg.LinAlgError",
   "numpy.linalg.inv",
   "numpy.tensordot"
  ],
  "type": "function"
 },
 "symfit.core.fit.LinearLeastSquares": {
  "lineno": 1131,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.fit.LinearLeastSquares.__init__": {
  "lineno": 1149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.LinearLeastSquares.best_fit_params": {
  "lineno": 1179,
  "symbols_in_volume": [
   "numpy.sum",
   "sympy.collect",
   "sympy.expand",
   "sympy.solve"
  ],
  "type": "function"
 },
 "symfit.core.fit.LinearLeastSquares.covariance_matrix": {
  "lineno": 1206,
  "symbols_in_volume": [
   "numpy.atleast_2d",
   "numpy.diag",
   "numpy.linalg.inv",
   "numpy.ones",
   "numpy.sum"
  ],
  "type": "function"
 },
 "symfit.core.fit.LinearLeastSquares.execute": {
  "lineno": 1240,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.LinearLeastSquares.is_linear": {
  "lineno": 1160,
  "symbols_in_volume": [
   "sympy.collect",
   "sympy.expand"
  ],
  "type": "function"
 },
 "symfit.core.fit.Model": {
  "lineno": 460,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.fit.Model.chi": {
  "lineno": 492,
  "symbols_in_volume": [
   "sympy.sqrt"
  ],
  "type": "function"
 },
 "symfit.core.fit.Model.chi_jacobian": {
  "lineno": 499,
  "symbols_in_volume": [
   "sympy.diff"
  ],
  "type": "function"
 },
 "symfit.core.fit.Model.chi_squared": {
  "lineno": 485,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.Model.chi_squared_jacobian": {
  "lineno": 512,
  "symbols_in_volume": [
   "sympy.diff"
  ],
  "type": "function"
 },
 "symfit.core.fit.Model.eval_jacobian": {
  "lineno": 567,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ones"
  ],
  "type": "function"
 },
 "symfit.core.fit.Model.jacobian": {
  "lineno": 476,
  "symbols_in_volume": [
   "sympy.diff"
  ],
  "type": "function"
 },
 "symfit.core.fit.Model.numerical_chi": {
  "lineno": 546,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.Model.numerical_chi_jacobian": {
  "lineno": 553,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.Model.numerical_chi_squared": {
  "lineno": 539,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.Model.numerical_chi_squared_jacobian": {
  "lineno": 560,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.Model.numerical_jacobian": {
  "lineno": 532,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.ModelError": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.fit.NonLinearLeastSquares": {
  "lineno": 1271,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.fit.NonLinearLeastSquares.__init__": {
  "lineno": 1284,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.NonLinearLeastSquares.execute": {
  "lineno": 1294,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.sum"
  ],
  "type": "function"
 },
 "symfit.core.fit.ODEModel": {
  "lineno": 1785,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.fit.ODEModel.__call__": {
  "lineno": 2007,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "function"
 },
 "symfit.core.fit.ODEModel.__getitem__": {
  "lineno": 1874,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.ODEModel.__init__": {
  "lineno": 1790,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "symfit.core.argument.Variable"
  ],
  "type": "function"
 },
 "symfit.core.fit.ODEModel.__iter__": {
  "lineno": 1886,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.ODEModel.__neg__": {
  "lineno": 1892,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.ODEModel.__reduce__": {
  "lineno": 1846,
  "symbols_in_volume": [
   "pickle.PicklingError"
  ],
  "type": "function"
 },
 "symfit.core.fit.ODEModel.__str__": {
  "lineno": 1857,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.ODEModel._ncomponents": {
  "lineno": 1902,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.ODEModel._njacobian": {
  "lineno": 1916,
  "symbols_in_volume": [
   "sympy.diff"
  ],
  "type": "function"
 },
 "symfit.core.fit.ODEModel.eval_components": {
  "lineno": 1935,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.concatenate",
   "scipy.integrate.odeint"
  ],
  "type": "function"
 },
 "symfit.core.fit.TakesData": {
  "lineno": 760,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.fit.TakesData.__init__": {
  "lineno": 766,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "funcsigs.Parameter",
   "funcsigs.Parameter.POSITIONAL_OR_KEYWORD",
   "funcsigs.Signature",
   "numpy.array",
   "numpy.ones",
   "symfit.core.argument.Variable._argument_name"
  ],
  "type": "function"
 },
 "symfit.core.fit.TakesData.data_shapes": {
  "lineno": 889,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.TakesData.dependent_data": {
  "lineno": 855,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "symfit.core.fit.TakesData.independent_data": {
  "lineno": 866,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "symfit.core.fit.TakesData.initial_guesses": {
  "lineno": 913,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "symfit.core.fit.TakesData.sigma_data": {
  "lineno": 877,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "symfit.core.fit.TaylorModel": {
  "lineno": 613,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.fit.TaylorModel.__init__": {
  "lineno": 618,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "copy.copy",
   "symfit.core.argument.Parameter"
  ],
  "type": "function"
 },
 "symfit.core.fit.TaylorModel.__str__": {
  "lineno": 675,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.TaylorModel.p0": {
  "lineno": 669,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.TaylorModel.params": {
  "lineno": 648,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.r_squared": {
  "lineno": 1766,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.sum"
  ],
  "type": "function"
 },
 "symfit.core.fit_results": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "symfit.core.fit_results.FitResults": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.fit_results.FitResults.__eq__": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit_results.FitResults.__getattr__": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit_results.FitResults.__init__": {
  "lineno": 19,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "symfit.core.fit_results.FitResults.__str__": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit_results.FitResults._array_safe_dict_eq": {
  "lineno": 125,
  "symbols_in_volume": [
   "numpy.allclose"
  ],
  "type": "function"
 },
 "symfit.core.fit_results.FitResults.covariance": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit_results.FitResults.stdev": {
  "lineno": 77,
  "symbols_in_volume": [
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "symfit.core.fit_results.FitResults.value": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit_results.FitResults.variance": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.leastsqbound": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "symfit.core.leastsqbound._check_func": {
  "lineno": 94,
  "symbols_in_volume": [
   "numpy.atleast_1d",
   "numpy.dtype",
   "numpy.inexact",
   "numpy.issubdtype",
   "numpy.shape"
  ],
  "type": "function"
 },
 "symfit.core.leastsqbound._external2internal_func": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.leastsqbound._external2internal_func.convert_e2i": {
  "lineno": 69,
  "symbols_in_volume": [
   "numpy.empty_like"
  ],
  "type": "function"
 },
 "symfit.core.leastsqbound._external2internal_lambda": {
  "lineno": 77,
  "symbols_in_volume": [
   "numpy.arcsin",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "symfit.core.leastsqbound._internal2external_func": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.leastsqbound._internal2external_func.convert_i2e": {
  "lineno": 37,
  "symbols_in_volume": [
   "numpy.empty_like"
  ],
  "type": "function"
 },
 "symfit.core.leastsqbound._internal2external_grad": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.cos",
   "numpy.empty_like",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "symfit.core.leastsqbound._internal2external_lambda": {
  "lineno": 45,
  "symbols_in_volume": [
   "numpy.sin",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "symfit.core.leastsqbound.leastsqbound": {
  "lineno": 117,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.dot",
   "numpy.dtype",
   "numpy.dual.inv",
   "numpy.eye",
   "numpy.finfo",
   "numpy.linalg.LinAlgError",
   "numpy.shape",
   "numpy.take",
   "numpy.transpose",
   "numpy.triu",
   "scipy.optimize._minpack._lmder",
   "scipy.optimize._minpack._lmdif",
   "scipy.optimize.leastsq",
   "warnings.warn"
  ],
  "type": "function"
 },
 "symfit.core.leastsqbound.leastsqbound.wDfun": {
  "lineno": 302,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.leastsqbound.leastsqbound.wfunc": {
  "lineno": 286,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple",
   "sys.version_info"
  ],
  "type": "module"
 },
 "symfit.core.minimizers.BFGS": {
  "lineno": 398,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.minimizers.BaseMinimizer": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.minimizers.BaseMinimizer.__getstate__": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.BaseMinimizer.__init__": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.BaseMinimizer.__setstate__": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.BaseMinimizer.execute": {
  "lineno": 39,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "symfit.core.minimizers.BaseMinimizer.initial_guesses": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.BasinHopping": {
  "lineno": 491,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.minimizers.BasinHopping.__init__": {
  "lineno": 524,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.BasinHopping.execute": {
  "lineno": 556,
  "symbols_in_volume": [
   "scipy.optimize.basinhopping"
  ],
  "type": "function"
 },
 "symfit.core.minimizers.BoundedMinimizer": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.minimizers.BoundedMinimizer.bounds": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.COBYLA": {
  "lineno": 457,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.minimizers.ChainedMinimizer": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.minimizers.ChainedMinimizer.__getstate__": {
  "lineno": 242,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.ChainedMinimizer.__init__": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.ChainedMinimizer._make_signature": {
  "lineno": 208,
  "symbols_in_volume": [
   "collections.Counter",
   "funcsigs.Parameter",
   "funcsigs.Parameter.KEYWORD_ONLY",
   "funcsigs.Signature"
  ],
  "type": "function"
 },
 "symfit.core.minimizers.ChainedMinimizer.execute": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.ConstrainedMinimizer": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.minimizers.ConstrainedMinimizer.__init__": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.DifferentialEvolution": {
  "lineno": 403,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.minimizers.DifferentialEvolution.execute": {
  "lineno": 407,
  "symbols_in_volume": [
   "scipy.optimize.differential_evolution"
  ],
  "type": "function"
 },
 "symfit.core.minimizers.GlobalMinimizer": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.minimizers.GlobalMinimizer.__init__": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.GradientMinimizer": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.minimizers.GradientMinimizer.__init__": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.GradientMinimizer.resize_jac": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.GradientMinimizer.resize_jac.resized": {
  "lineno": 122,
  "symbols_in_volume": [
   "functools32.wraps",
   "numpy.atleast_1d",
   "numpy.squeeze"
  ],
  "type": "function"
 },
 "symfit.core.minimizers.LBFGSB": {
  "lineno": 462,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.minimizers.LBFGSB.execute": {
  "lineno": 466,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.LBFGSB.method_name": {
  "lineno": 472,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.MINPACK": {
  "lineno": 588,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.minimizers.MINPACK.__init__": {
  "lineno": 593,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.MINPACK.execute": {
  "lineno": 597,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "symfit.core.minimizers.NelderMead": {
  "lineno": 476,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.minimizers.NelderMead.method_name": {
  "lineno": 480,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.Powell": {
  "lineno": 485,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.minimizers.SLSQP": {
  "lineno": 416,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.minimizers.SLSQP.__init__": {
  "lineno": 420,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.SLSQP.execute": {
  "lineno": 427,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.SLSQP.scipy_constraints": {
  "lineno": 434,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.ScipyConstrainedMinimize": {
  "lineno": 361,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.minimizers.ScipyConstrainedMinimize.__init__": {
  "lineno": 365,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.ScipyConstrainedMinimize.execute": {
  "lineno": 369,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.ScipyConstrainedMinimize.scipy_constraints": {
  "lineno": 372,
  "symbols_in_volume": [
   "sympy.Eq",
   "sympy.Ge"
  ],
  "type": "function"
 },
 "symfit.core.minimizers.ScipyGradientMinimize": {
  "lineno": 350,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.minimizers.ScipyGradientMinimize.__init__": {
  "lineno": 354,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.ScipyGradientMinimize.execute": {
  "lineno": 358,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.ScipyMinimize": {
  "lineno": 247,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.minimizers.ScipyMinimize.__init__": {
  "lineno": 251,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.ScipyMinimize._pack_output": {
  "lineno": 300,
  "symbols_in_volume": [
   "numpy.atleast_1d"
  ],
  "type": "function"
 },
 "symfit.core.minimizers.ScipyMinimize.execute": {
  "lineno": 276,
  "symbols_in_volume": [
   "scipy.optimize.minimize"
  ],
  "type": "function"
 },
 "symfit.core.minimizers.ScipyMinimize.list2kwargs": {
  "lineno": 258,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.ScipyMinimize.list2kwargs.wrapped_func": {
  "lineno": 270,
  "symbols_in_volume": [
   "functools32.wraps",
   "numpy.array"
  ],
  "type": "function"
 },
 "symfit.core.minimizers.ScipyMinimize.method_name": {
  "lineno": 339,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.objectives": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "symfit.core.objectives.BaseObjective": {
  "lineno": 9,
  "symbols_in_volume": [
   "abc.ABCMeta",
   "six.add_metaclass"
  ],
  "type": "class"
 },
 "symfit.core.objectives.BaseObjective.__call__": {
  "lineno": 59,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "symfit.core.objectives.BaseObjective.__init__": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.objectives.BaseObjective.dependent_data": {
  "lineno": 22,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "symfit.core.objectives.BaseObjective.independent_data": {
  "lineno": 33,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "symfit.core.objectives.BaseObjective.sigma_data": {
  "lineno": 45,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "symfit.core.objectives.GradientObjective": {
  "lineno": 69,
  "symbols_in_volume": [
   "abc.ABCMeta",
   "six.add_metaclass"
  ],
  "type": "class"
 },
 "symfit.core.objectives.GradientObjective.eval_jacobian": {
  "lineno": 74,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "symfit.core.objectives.LeastSquares": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.objectives.LeastSquares.__call__": {
  "lineno": 137,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "symfit.core.objectives.LeastSquares.eval_jacobian": {
  "lineno": 164,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.sum"
  ],
  "type": "function"
 },
 "symfit.core.objectives.LogLikelihood": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.objectives.LogLikelihood.__call__": {
  "lineno": 196,
  "symbols_in_volume": [
   "numpy.log",
   "numpy.nansum"
  ],
  "type": "function"
 },
 "symfit.core.objectives.LogLikelihood.eval_jacobian": {
  "lineno": 207,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nansum"
  ],
  "type": "function"
 },
 "symfit.core.objectives.MinimizeModel": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.objectives.MinimizeModel.__call__": {
  "lineno": 243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.objectives.MinimizeModel.__init__": {
  "lineno": 238,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.objectives.MinimizeModel.eval_jacobian": {
  "lineno": 246,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "symfit.core.objectives.VectorLeastSquares": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.objectives.VectorLeastSquares.__call__": {
  "lineno": 89,
  "symbols_in_volume": [
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "symfit.core.objectives.VectorLeastSquares.eval_jacobian": {
  "lineno": 114,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan_to_num"
  ],
  "type": "function"
 },
 "symfit.core.operators": {
  "lineno": null,
  "symbols_in_volume": [
   "symfit.core.argument.Parameter.__call__",
   "sympy.core.expr.Expr.__call__",
   "sys.version_info"
  ],
  "type": "module"
 },
 "symfit.core.operators.call": {
  "lineno": 48,
  "symbols_in_volume": [
   "funcsigs.Parameter",
   "funcsigs.Parameter.POSITIONAL_OR_KEYWORD",
   "funcsigs.Signature",
   "symfit.core.support.seperate_symbols",
   "symfit.core.support.sympy_to_py"
  ],
  "type": "function"
 },
 "symfit.core.support": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "symfit.core.support.D": {
  "lineno": 359,
  "symbols_in_volume": [
   "sympy.Derivative"
  ],
  "type": "class"
 },
 "symfit.core.support.RequiredKeyword": {
  "lineno": 257,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.support.RequiredKeywordError": {
  "lineno": 260,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.support.cached_property": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.support.cached_property.__delete__": {
  "lineno": 220,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.support.cached_property.__get__": {
  "lineno": 203,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.support.cached_property.__init__": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.support.deprecated": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.support.deprecated.__call__": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.support.deprecated.__call__.deprecated_func": {
  "lineno": 44,
  "symbols_in_volume": [
   "functools32.wraps",
   "warnings.warn"
  ],
  "type": "function"
 },
 "symfit.core.support.deprecated.__init__": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.support.jacobian": {
  "lineno": 231,
  "symbols_in_volume": [
   "sympy.diff",
   "sympy.symbols"
  ],
  "type": "function"
 },
 "symfit.core.support.key2str": {
  "lineno": 245,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.support.keywordonly": {
  "lineno": 263,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.support.keywordonly.__call__": {
  "lineno": 305,
  "symbols_in_volume": [
   "funcsigs.signature"
  ],
  "type": "function"
 },
 "symfit.core.support.keywordonly.__call__.wrapped_func": {
  "lineno": 332,
  "symbols_in_volume": [
   "funcsigs.Parameter.VAR_KEYWORD",
   "funcsigs.Parameter.VAR_POSITIONAL",
   "functools32.wraps"
  ],
  "type": "function"
 },
 "symfit.core.support.keywordonly.__init__": {
  "lineno": 290,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "funcsigs.Parameter",
   "funcsigs.Parameter.KEYWORD_ONLY"
  ],
  "type": "function"
 },
 "symfit.core.support.parameters": {
  "lineno": 133,
  "symbols_in_volume": [
   "symfit.core.argument.Parameter",
   "sympy.symbols"
  ],
  "type": "function"
 },
 "symfit.core.support.seperate_symbols": {
  "lineno": 53,
  "symbols_in_volume": [
   "symfit.core.argument.Parameter",
   "sympy.core.expr.Expr",
   "sympy.tensor.Idx"
  ],
  "type": "function"
 },
 "symfit.core.support.sympy_to_py": {
  "lineno": 80,
  "symbols_in_volume": [
   "sympy.utilities.lambdify.lambdify"
  ],
  "type": "function"
 },
 "symfit.core.support.sympy_to_scipy": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.support.sympy_to_scipy.f": {
  "lineno": 103,
  "symbols_in_volume": [
   "numpy.atleast_2d"
  ],
  "type": "function"
 },
 "symfit.core.support.variables": {
  "lineno": 121,
  "symbols_in_volume": [
   "symfit.core.argument.Variable",
   "sympy.symbols"
  ],
  "type": "function"
 },
 "symfit.distributions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "symfit.distributions.Exp": {
  "lineno": 21,
  "symbols_in_volume": [
   "sympy.exp"
  ],
  "type": "function"
 },
 "symfit.distributions.Gaussian": {
  "lineno": 11,
  "symbols_in_volume": [
   "sympy.exp",
   "sympy.pi",
   "sympy.sqrt"
  ],
  "type": "function"
 }
}