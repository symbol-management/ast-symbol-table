{
 "symfit": {
  "lineno": null,
  "symbols_in_volume": [
   "pkg_resources.get_distribution"
  ],
  "type": "module"
 },
 "symfit.api": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "symfit.contrib": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "symfit.contrib._import_submodules": {
  "lineno": 5,
  "symbols_in_volume": [
   "importlib.import_module",
   "pkgutil.walk_packages",
   "sys.modules"
  ],
  "type": "function"
 },
 "symfit.contrib.interactive_guess": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "symfit.contrib.interactive_guess.examples.ODE_2D_example": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.max",
   "symfit.D",
   "symfit.Fit",
   "symfit.ODEModel",
   "symfit.Parameter",
   "symfit.contrib.interactive_guess.InteractiveGuess",
   "symfit.variables"
  ],
  "type": "module"
 },
 "symfit.contrib.interactive_guess.examples.ODE_example": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array",
   "symfit.D",
   "symfit.Fit",
   "symfit.ODEModel",
   "symfit.Parameter",
   "symfit.contrib.interactive_guess.InteractiveGuess",
   "symfit.variables"
  ],
  "type": "module"
 },
 "symfit.contrib.interactive_guess.examples.simple_2D_example": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.linspace",
   "symfit.Fit",
   "symfit.Model",
   "symfit.Parameter",
   "symfit.Variable",
   "symfit.contrib.interactive_guess.InteractiveGuess"
  ],
  "type": "module"
 },
 "symfit.contrib.interactive_guess.examples.simple_2D_example.distr": {
  "lineno": 12,
  "symbols_in_volume": [
   "symfit.exp"
  ],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.examples.simple_3D_example": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.meshgrid",
   "symfit.Fit",
   "symfit.Model",
   "symfit.Parameter",
   "symfit.contrib.interactive_guess.InteractiveGuess",
   "symfit.distributions.Gaussian",
   "symfit.variables"
  ],
  "type": "module"
 },
 "symfit.contrib.interactive_guess.examples.vector_valued_2D": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.linspace",
   "symfit.Fit",
   "symfit.Model",
   "symfit.Parameter",
   "symfit.Variable",
   "symfit.contrib.interactive_guess.InteractiveGuess"
  ],
  "type": "module"
 },
 "symfit.contrib.interactive_guess.interactive_guess": {
  "lineno": null,
  "symbols_in_volume": [
   "matplotlib.pyplot.ioff"
  ],
  "type": "module"
 },
 "symfit.contrib.interactive_guess.interactive_guess.InteractiveGuess": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.contrib.interactive_guess.interactive_guess.InteractiveGuess.__init__": {
  "lineno": 20,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.linspace",
   "numpy.max",
   "numpy.meshgrid",
   "numpy.min"
  ],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.interactive_guess.InteractiveGuess.__str__": {
  "lineno": 221,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.interactive_guess.InteractiveGuess._eval_model": {
  "lineno": 211,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.interactive_guess.InteractiveGuess._plot_data": {
  "lineno": 188,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.interactive_guess.InteractiveGuess._plot_model": {
  "lineno": 192,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.interactive_guess.InteractiveGuess._set_up_figure": {
  "lineno": 117,
  "symbols_in_volume": [
   "matplotlib.pyplot.figure",
   "numpy.ceil"
  ],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.interactive_guess.InteractiveGuess._set_up_sliders": {
  "lineno": 158,
  "symbols_in_volume": [
   "matplotlib.pyplot.Slider"
  ],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.interactive_guess.InteractiveGuess._update_plot": {
  "lineno": 200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.interactive_guess.InteractiveGuess._update_specific_plot": {
  "lineno": 196,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.interactive_guess.InteractiveGuess.execute": {
  "lineno": 98,
  "symbols_in_volume": [
   "matplotlib.pyplot.show"
  ],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.interactive_guess.InteractiveGuess2D": {
  "lineno": 354,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.contrib.interactive_guess.interactive_guess.InteractiveGuess2D.__init__": {
  "lineno": 355,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.interactive_guess.Strategy2D": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.contrib.interactive_guess.interactive_guess.Strategy2D.__init__": {
  "lineno": 238,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.interactive_guess.Strategy2D.plot_data": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.interactive_guess.Strategy2D.plot_model": {
  "lineno": 249,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.interactive_guess.Strategy2D.update_plot": {
  "lineno": 259,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.interactive_guess.StrategynD": {
  "lineno": 270,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.contrib.interactive_guess.interactive_guess.StrategynD.__init__": {
  "lineno": 275,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.interactive_guess.StrategynD.plot_data": {
  "lineno": 278,
  "symbols_in_volume": [
   "numpy.column_stack",
   "numpy.log",
   "numpy.meshgrid",
   "scipy.stats.gaussian_kde"
  ],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.interactive_guess.StrategynD.plot_model": {
  "lineno": 304,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.interactive_guess.StrategynD.update_plot": {
  "lineno": 315,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.column_stack",
   "numpy.dstack",
   "numpy.mean",
   "numpy.newaxis",
   "numpy.percentile"
  ],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit": {
  "lineno": null,
  "symbols_in_volume": [
   "matplotlib.pyplot.ioff",
   "unittest.main"
  ],
  "type": "module"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian2DInteractiveGuessTest": {
  "lineno": 22,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian2DInteractiveGuessTest.setUpClass": {
  "lineno": 23,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.random.seed",
   "symfit.Parameter",
   "symfit.Variable",
   "symfit.contrib.interactive_guess.InteractiveGuess"
  ],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian2DInteractiveGuessTest.test_get_data": {
  "lineno": 76,
  "symbols_in_volume": [
   "numpy.allclose"
  ],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian2DInteractiveGuessTest.test_number_of_plots": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian2DInteractiveGuessTest.test_number_of_projections": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian2DInteractiveGuessTest.test_number_of_sliders": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian2DInteractiveGuessTest.test_plot_colors": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian2DInteractiveGuessTest.test_plot_titles": {
  "lineno": 96,
  "symbols_in_volume": [
   "symfit.latex"
  ],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian2DInteractiveGuessTest.test_slider_callback_data": {
  "lineno": 58,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.max",
   "numpy.min",
   "numpy.random.random"
  ],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian2DInteractiveGuessTest.test_slider_callback_parameter_values": {
  "lineno": 48,
  "symbols_in_volume": [
   "numpy.random.random"
  ],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian2DInteractiveGuessTest.test_slider_labels": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian3DInteractiveFitTest": {
  "lineno": 146,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian3DInteractiveFitTest.setUpClass": {
  "lineno": 147,
  "symbols_in_volume": [
   "numpy.histogram2d",
   "numpy.meshgrid",
   "numpy.random.multivariate_normal",
   "symfit.Parameter",
   "symfit.Variable",
   "symfit.contrib.interactive_guess.InteractiveGuess",
   "symfit.distributions.Gaussian"
  ],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian3DInteractiveFitTest.test_number_of_plots": {
  "lineno": 181,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian3DInteractiveFitTest.test_number_of_projections": {
  "lineno": 178,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian3DInteractiveFitTest.test_plot_titles": {
  "lineno": 184,
  "symbols_in_volume": [
   "symfit.latex"
  ],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.VectorValuedTest": {
  "lineno": 112,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.VectorValuedTest.setUpClass": {
  "lineno": 113,
  "symbols_in_volume": [
   "numpy.linspace",
   "symfit.Parameter",
   "symfit.Variable",
   "symfit.contrib.interactive_guess.InteractiveGuess"
  ],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.VectorValuedTest.test_number_of_plots": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.VectorValuedTest.test_number_of_projections": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.VectorValuedTest.test_plot_titles": {
  "lineno": 135,
  "symbols_in_volume": [
   "symfit.latex"
  ],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.distr": {
  "lineno": 11,
  "symbols_in_volume": [
   "symfit.exp"
  ],
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.np_distr": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "symfit.core": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "symfit.core._repeatable_partial": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "symfit.core._repeatable_partial.repeatable_partial": {
  "lineno": 3,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "class"
 },
 "symfit.core._repeatable_partial.repeatable_partial.__new__": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.argument": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "symfit.core.argument.Argument": {
  "lineno": 8,
  "symbols_in_volume": [
   "collections.defaultdict",
   "sympy.core.symbol.Symbol"
  ],
  "type": "class"
 },
 "symfit.core.argument.Argument.__getstate__": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.argument.Argument.__init__": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.argument.Argument.__new__": {
  "lineno": 30,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "symfit.core.argument.Argument._sympystr": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.argument.Parameter": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.argument.Parameter.__eq__": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.argument.Parameter.__init__": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.argument.Parameter.__new__": {
  "lineno": 87,
  "symbols_in_volume": [
   "numbers.Number"
  ],
  "type": "function"
 },
 "symfit.core.argument.Variable": {
  "lineno": 138,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.fit": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "symfit.core.fit.Fit": {
  "lineno": 308,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.fit.Fit.__init__": {
  "lineno": 336,
  "symbols_in_volume": [
   "collections.Sequence"
  ],
  "type": "function"
 },
 "symfit.core.fit.Fit._determine_minimizer": {
  "lineno": 439,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.Fit._determine_objective": {
  "lineno": 453,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.Fit._init_constraints": {
  "lineno": 539,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.Fit._init_minimizer": {
  "lineno": 495,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.Fit._make_signature": {
  "lineno": 416,
  "symbols_in_volume": [
   "funcsigs.Signature"
  ],
  "type": "function"
 },
 "symfit.core.fit.Fit.execute": {
  "lineno": 571,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.HasCovarianceMatrix": {
  "lineno": 224,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.fit.HasCovarianceMatrix._covariance_matrix": {
  "lineno": 234,
  "symbols_in_volume": [
   "numpy.atleast_2d",
   "numpy.linalg.LinAlgError",
   "numpy.linalg.inv",
   "numpy.product",
   "numpy.squeeze",
   "numpy.sum"
  ],
  "type": "function"
 },
 "symfit.core.fit.HasCovarianceMatrix.covariance_matrix": {
  "lineno": 271,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.HasCovarianceMatrix.covariance_matrix.HessApproximation": {
  "lineno": 292,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.fit.TakesData": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.fit.TakesData.__init__": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ones",
   "symfit.core.argument.Variable._argument_name",
   "sympy.Derivative"
  ],
  "type": "function"
 },
 "symfit.core.fit.TakesData._make_parameters": {
  "lineno": 130,
  "symbols_in_volume": [
   "funcsigs.Parameter",
   "funcsigs.Parameter.POSITIONAL_OR_KEYWORD",
   "funcsigs.Parameter.empty"
  ],
  "type": "function"
 },
 "symfit.core.fit.TakesData._make_signature": {
  "lineno": 118,
  "symbols_in_volume": [
   "funcsigs.Signature"
  ],
  "type": "function"
 },
 "symfit.core.fit.TakesData.data_shapes": {
  "lineno": 192,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit.TakesData.dependent_data": {
  "lineno": 156,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "symfit.core.fit.TakesData.independent_data": {
  "lineno": 168,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "symfit.core.fit.TakesData.initial_guesses": {
  "lineno": 216,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "symfit.core.fit.TakesData.sigma_data": {
  "lineno": 179,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "symfit.core.fit_results": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "symfit.core.fit_results.FitResults": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.fit_results.FitResults.__getattr__": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit_results.FitResults.__getstate__": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit_results.FitResults.__init__": {
  "lineno": 25,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "symfit.core.support.keywordonly"
  ],
  "type": "function"
 },
 "symfit.core.fit_results.FitResults.__setstate__": {
  "lineno": 208,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit_results.FitResults.__str__": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit_results.FitResults._array_safe_dict_eq": {
  "lineno": 154,
  "symbols_in_volume": [
   "numpy.allclose"
  ],
  "type": "function"
 },
 "symfit.core.fit_results.FitResults._gof_qualifiers": {
  "lineno": 220,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.sum",
   "symfit.core.objectives.LeastSquares",
   "symfit.core.objectives.LogLikelihood",
   "symfit.core.objectives.VectorLeastSquares"
  ],
  "type": "function"
 },
 "symfit.core.fit_results.FitResults.covariance": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit_results.FitResults.iterations": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit_results.FitResults.stdev": {
  "lineno": 106,
  "symbols_in_volume": [
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "symfit.core.fit_results.FitResults.value": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit_results.FitResults.variance": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.fit_results.r_squared": {
  "lineno": 258,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.sum"
  ],
  "type": "function"
 },
 "symfit.core.keywordonly": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "symfit.core.keywordonly.RequiredKeyword": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.keywordonly.RequiredKeywordError": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.keywordonly.keywordonly": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.keywordonly.keywordonly.__call__": {
  "lineno": 66,
  "symbols_in_volume": [
   "funcsigs.signature"
  ],
  "type": "function"
 },
 "symfit.core.keywordonly.keywordonly.__call__.wrapped_func": {
  "lineno": 93,
  "symbols_in_volume": [
   "funcsigs.Parameter.VAR_KEYWORD",
   "funcsigs.Parameter.VAR_POSITIONAL",
   "functools32.wraps"
  ],
  "type": "function"
 },
 "symfit.core.keywordonly.keywordonly.__init__": {
  "lineno": 51,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "funcsigs.Parameter",
   "funcsigs.Parameter.KEYWORD_ONLY"
  ],
  "type": "function"
 },
 "symfit.core.leastsqbound": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "symfit.core.leastsqbound._check_func": {
  "lineno": 94,
  "symbols_in_volume": [
   "numpy.atleast_1d",
   "numpy.dtype",
   "numpy.inexact",
   "numpy.issubdtype",
   "numpy.shape"
  ],
  "type": "function"
 },
 "symfit.core.leastsqbound._external2internal_func": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.leastsqbound._external2internal_func.convert_e2i": {
  "lineno": 69,
  "symbols_in_volume": [
   "numpy.empty_like"
  ],
  "type": "function"
 },
 "symfit.core.leastsqbound._external2internal_lambda": {
  "lineno": 77,
  "symbols_in_volume": [
   "numpy.arcsin",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "symfit.core.leastsqbound._internal2external_func": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.leastsqbound._internal2external_func.convert_i2e": {
  "lineno": 37,
  "symbols_in_volume": [
   "numpy.empty_like"
  ],
  "type": "function"
 },
 "symfit.core.leastsqbound._internal2external_grad": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.cos",
   "numpy.empty_like",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "symfit.core.leastsqbound._internal2external_lambda": {
  "lineno": 45,
  "symbols_in_volume": [
   "numpy.sin",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "symfit.core.leastsqbound.leastsqbound": {
  "lineno": 117,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.dot",
   "numpy.dtype",
   "numpy.dual.inv",
   "numpy.eye",
   "numpy.finfo",
   "numpy.linalg.LinAlgError",
   "numpy.shape",
   "numpy.take",
   "numpy.transpose",
   "numpy.triu",
   "scipy.optimize._minpack._lmder",
   "scipy.optimize._minpack._lmdif",
   "scipy.optimize.leastsq",
   "warnings.warn"
  ],
  "type": "function"
 },
 "symfit.core.leastsqbound.leastsqbound.wDfun": {
  "lineno": 302,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.leastsqbound.leastsqbound.wfunc": {
  "lineno": 286,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple",
   "sys.version_info"
  ],
  "type": "module"
 },
 "symfit.core.minimizers.BFGS": {
  "lineno": 518,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.minimizers.BaseMinimizer": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.minimizers.BaseMinimizer.__getstate__": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.BaseMinimizer.__init__": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.BaseMinimizer.__setstate__": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.BaseMinimizer._baseobjective_from_callable": {
  "lineno": 46,
  "symbols_in_volume": [
   "sympy.Dummy"
  ],
  "type": "function"
 },
 "symfit.core.minimizers.BaseMinimizer.execute": {
  "lineno": 77,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "symfit.core.minimizers.BaseMinimizer.initial_guesses": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.BasinHopping": {
  "lineno": 661,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.minimizers.BasinHopping.__init__": {
  "lineno": 694,
  "symbols_in_volume": [
   "scipy.optimize.BFGS"
  ],
  "type": "function"
 },
 "symfit.core.minimizers.BasinHopping.execute": {
  "lineno": 727,
  "symbols_in_volume": [
   "scipy.optimize.basinhopping"
  ],
  "type": "function"
 },
 "symfit.core.minimizers.BoundedMinimizer": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.minimizers.BoundedMinimizer.bounds": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.COBYLA": {
  "lineno": 530,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.minimizers.COBYLA.execute": {
  "lineno": 534,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.ChainedMinimizer": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.minimizers.ChainedMinimizer.__getstate__": {
  "lineno": 316,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.ChainedMinimizer.__init__": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.ChainedMinimizer.__str__": {
  "lineno": 321,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.ChainedMinimizer._make_signature": {
  "lineno": 282,
  "symbols_in_volume": [
   "collections.Counter",
   "funcsigs.Parameter",
   "funcsigs.Parameter.KEYWORD_ONLY",
   "funcsigs.Signature"
  ],
  "type": "function"
 },
 "symfit.core.minimizers.ChainedMinimizer.execute": {
  "lineno": 232,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "symfit.core.minimizers.ConstrainedMinimizer": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.minimizers.ConstrainedMinimizer.__init__": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.DifferentialEvolution": {
  "lineno": 648,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.minimizers.DifferentialEvolution.execute": {
  "lineno": 652,
  "symbols_in_volume": [
   "scipy.optimize.differential_evolution"
  ],
  "type": "function"
 },
 "symfit.core.minimizers.GlobalMinimizer": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.minimizers.GlobalMinimizer.__init__": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.GradientMinimizer": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.minimizers.GradientMinimizer.__init__": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.GradientMinimizer.resize_jac": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.GradientMinimizer.resize_jac.resized": {
  "lineno": 155,
  "symbols_in_volume": [
   "functools32.wraps",
   "numpy.atleast_1d",
   "numpy.squeeze"
  ],
  "type": "function"
 },
 "symfit.core.minimizers.HessianMinimizer": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.minimizers.HessianMinimizer.__init__": {
  "lineno": 169,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.HessianMinimizer.resize_hess": {
  "lineno": 180,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.HessianMinimizer.resize_hess.resized": {
  "lineno": 191,
  "symbols_in_volume": [
   "functools32.wraps",
   "numpy.atleast_2d",
   "numpy.squeeze"
  ],
  "type": "function"
 },
 "symfit.core.minimizers.LBFGSB": {
  "lineno": 540,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.minimizers.LBFGSB.method_name": {
  "lineno": 544,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.MINPACK": {
  "lineno": 767,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.minimizers.MINPACK.__init__": {
  "lineno": 772,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.MINPACK.execute": {
  "lineno": 776,
  "symbols_in_volume": [
   "scipy.optimize.OptimizeResult"
  ],
  "type": "function"
 },
 "symfit.core.minimizers.NelderMead": {
  "lineno": 548,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.minimizers.NelderMead.method_name": {
  "lineno": 552,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.Powell": {
  "lineno": 556,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.minimizers.SLSQP": {
  "lineno": 524,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.minimizers.ScipyBoundedMinimizer": {
  "lineno": 424,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.minimizers.ScipyBoundedMinimizer.execute": {
  "lineno": 428,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.ScipyConstrainedMinimize": {
  "lineno": 459,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.minimizers.ScipyConstrainedMinimize.__init__": {
  "lineno": 463,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.ScipyConstrainedMinimize._pack_output": {
  "lineno": 512,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.ScipyConstrainedMinimize.execute": {
  "lineno": 467,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.ScipyConstrainedMinimize.scipy_constraints": {
  "lineno": 470,
  "symbols_in_volume": [
   "sympy.Eq",
   "sympy.Ge",
   "sympy.Rel"
  ],
  "type": "function"
 },
 "symfit.core.minimizers.ScipyGradientMinimize": {
  "lineno": 398,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.minimizers.ScipyGradientMinimize.execute": {
  "lineno": 402,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.ScipyGradientMinimize.scipy_constraints": {
  "lineno": 412,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.ScipyHessianMinimize": {
  "lineno": 433,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.minimizers.ScipyHessianMinimize.execute": {
  "lineno": 437,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.ScipyHessianMinimize.scipy_constraints": {
  "lineno": 447,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.ScipyMinimize": {
  "lineno": 324,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.minimizers.ScipyMinimize.__init__": {
  "lineno": 328,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.ScipyMinimize._pack_output": {
  "lineno": 359,
  "symbols_in_volume": [
   "numpy.atleast_1d"
  ],
  "type": "function"
 },
 "symfit.core.minimizers.ScipyMinimize.execute": {
  "lineno": 334,
  "symbols_in_volume": [
   "scipy.optimize.minimize"
  ],
  "type": "function"
 },
 "symfit.core.minimizers.ScipyMinimize.method_name": {
  "lineno": 387,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.TrustConstr": {
  "lineno": 561,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.minimizers.TrustConstr._get_jacobian_hessian_strategy": {
  "lineno": 569,
  "symbols_in_volume": [
   "scipy.optimize.BFGS"
  ],
  "type": "function"
 },
 "symfit.core.minimizers.TrustConstr.execute": {
  "lineno": 610,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.TrustConstr.method_name": {
  "lineno": 565,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.minimizers.TrustConstr.scipy_constraints": {
  "lineno": 589,
  "symbols_in_volume": [
   "numpy.inf",
   "scipy.optimize.NonlinearConstraint"
  ],
  "type": "function"
 },
 "symfit.core.models": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "symfit.core.models.BaseCallableModel": {
  "lineno": 561,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.models.BaseCallableModel.__call__": {
  "lineno": 618,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.models.BaseCallableModel._get_params": {
  "lineno": 596,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.models.BaseCallableModel._init_from_dict": {
  "lineno": 614,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.models.BaseCallableModel._make_signature": {
  "lineno": 604,
  "symbols_in_volume": [
   "funcsigs.Parameter",
   "funcsigs.Parameter.POSITIONAL_OR_KEYWORD",
   "funcsigs.Signature"
  ],
  "type": "function"
 },
 "symfit.core.models.BaseCallableModel._set_params": {
  "lineno": 599,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.models.BaseCallableModel.eval_components": {
  "lineno": 566,
  "symbols_in_volume": [
   "numpy.atleast_1d"
  ],
  "type": "function"
 },
 "symfit.core.models.BaseCallableModel.numerical_components": {
  "lineno": 584,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.models.BaseGradientModel": {
  "lineno": 635,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.models.BaseGradientModel.eval_jacobian": {
  "lineno": 708,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.models.BaseGradientModel.finite_difference": {
  "lineno": 643,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "symfit.core.models.BaseModel": {
  "lineno": 63,
  "symbols_in_volume": [
   "collections.Mapping"
  ],
  "type": "class"
 },
 "symfit.core.models.BaseModel.__eq__": {
  "lineno": 227,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.models.BaseModel.__getitem__": {
  "lineno": 211,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.models.BaseModel.__getstate__": {
  "lineno": 444,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.models.BaseModel.__init__": {
  "lineno": 70,
  "symbols_in_volume": [
   "collections.Mapping"
  ],
  "type": "function"
 },
 "symfit.core.models.BaseModel.__iter__": {
  "lineno": 221,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.models.BaseModel.__len__": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.models.BaseModel.__neg__": {
  "lineno": 249,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.models.BaseModel.__setstate__": {
  "lineno": 454,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.models.BaseModel.__str__": {
  "lineno": 418,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.models.BaseModel._init_from_dict": {
  "lineno": 259,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "toposort.toposort"
  ],
  "type": "function"
 },
 "symfit.core.models.BaseModel.as_constraint": {
  "lineno": 92,
  "symbols_in_volume": [
   "sympy.Eq",
   "sympy.Ge",
   "sympy.Le",
   "sympy.core.relational.Relational"
  ],
  "type": "function"
 },
 "symfit.core.models.BaseModel.bounds": {
  "lineno": 376,
  "symbols_in_volume": [
   "numpy.nextafter"
  ],
  "type": "function"
 },
 "symfit.core.models.BaseModel.connectivity_mapping": {
  "lineno": 338,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.models.BaseModel.free_params": {
  "lineno": 411,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.models.BaseModel.function_dict": {
  "lineno": 325,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "symfit.core.models.BaseModel.ordered_symbols": {
  "lineno": 352,
  "symbols_in_volume": [
   "sympy.Derivative",
   "toposort.toposort"
  ],
  "type": "function"
 },
 "symfit.core.models.BaseModel.shared_parameters": {
  "lineno": 392,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.models.BaseModel.vars": {
  "lineno": 369,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.models.BaseModel.vars_as_functions": {
  "lineno": 298,
  "symbols_in_volume": [
   "sympy.Function"
  ],
  "type": "function"
 },
 "symfit.core.models.BaseModel.with_dependencies": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.models.BaseNumericalModel": {
  "lineno": 459,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.models.BaseNumericalModel.__eq__": {
  "lineno": 531,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.models.BaseNumericalModel.__init__": {
  "lineno": 464,
  "symbols_in_volume": [
   "collections.Mapping",
   "sympy.Basic",
   "warnings.warn"
  ],
  "type": "function"
 },
 "symfit.core.models.BaseNumericalModel.__neg__": {
  "lineno": 541,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.models.BaseNumericalModel.connectivity_mapping": {
  "lineno": 527,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.models.BaseNumericalModel.shared_parameters": {
  "lineno": 551,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.models.CallableModel": {
  "lineno": 758,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.models.CallableModel.numerical_components": {
  "lineno": 766,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.models.CallableNumericalModel": {
  "lineno": 716,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.models.CallableNumericalModel.numerical_components": {
  "lineno": 751,
  "symbols_in_volume": [
   "sympy.Expr"
  ],
  "type": "function"
 },
 "symfit.core.models.GradientModel": {
  "lineno": 786,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.models.GradientModel.__init__": {
  "lineno": 790,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.models.GradientModel._set_params": {
  "lineno": 794,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.models.GradientModel.eval_jacobian": {
  "lineno": 819,
  "symbols_in_volume": [
   "numpy.broadcast_arrays",
   "numpy.broadcast_to",
   "numpy.stack"
  ],
  "type": "function"
 },
 "symfit.core.models.GradientModel.jacobian": {
  "lineno": 801,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.models.HessianModel": {
  "lineno": 840,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.models.HessianModel.__init__": {
  "lineno": 844,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.models.HessianModel._set_params": {
  "lineno": 848,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.models.HessianModel.eval_hessian": {
  "lineno": 865,
  "symbols_in_volume": [
   "numpy.broadcast_arrays",
   "numpy.broadcast_to",
   "numpy.stack"
  ],
  "type": "function"
 },
 "symfit.core.models.HessianModel.hessian": {
  "lineno": 855,
  "symbols_in_volume": [
   "sympy.diff"
  ],
  "type": "function"
 },
 "symfit.core.models.Model": {
  "lineno": 888,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.models.ModelError": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.models.ODEModel": {
  "lineno": 918,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.models.ODEModel.__call__": {
  "lineno": 1130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.models.ODEModel.__getitem__": {
  "lineno": 997,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.models.ODEModel.__init__": {
  "lineno": 923,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "symfit.core.models.ODEModel.__iter__": {
  "lineno": 1009,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.models.ODEModel.__neg__": {
  "lineno": 1015,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.models.ODEModel.__str__": {
  "lineno": 980,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.models.ODEModel._ncomponents": {
  "lineno": 1025,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.models.ODEModel._njacobian": {
  "lineno": 1039,
  "symbols_in_volume": [
   "sympy.diff"
  ],
  "type": "function"
 },
 "symfit.core.models.ODEModel.eval_components": {
  "lineno": 1058,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.concatenate",
   "scipy.integrate.odeint"
  ],
  "type": "function"
 },
 "symfit.core.models._partial_diff": {
  "lineno": 1149,
  "symbols_in_volume": [
   "sympy.Derivative"
  ],
  "type": "function"
 },
 "symfit.core.models._partial_subs": {
  "lineno": 1160,
  "symbols_in_volume": [
   "sympy.Derivative"
  ],
  "type": "function"
 },
 "symfit.core.models.hessian_from_model": {
  "lineno": 1215,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.models.jacobian_from_model": {
  "lineno": 1174,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.models.variabletuple": {
  "lineno": 21,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "function"
 },
 "symfit.core.models.variabletuple._asdict": {
  "lineno": 47,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "symfit.core.objectives": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "symfit.core.objectives.BaseIndependentObjective": {
  "lineno": 424,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.objectives.BaseIndependentObjective.dependent_data": {
  "lineno": 430,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "symfit.core.objectives.BaseIndependentObjective.sigma_data": {
  "lineno": 438,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "symfit.core.objectives.BaseObjective": {
  "lineno": 24,
  "symbols_in_volume": [
   "abc.ABCMeta",
   "six.add_metaclass"
  ],
  "type": "class"
 },
 "symfit.core.objectives.BaseObjective.__call__": {
  "lineno": 77,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "symfit.core.objectives.BaseObjective.__eq__": {
  "lineno": 145,
  "symbols_in_volume": [
   "numpy.allclose"
  ],
  "type": "function"
 },
 "symfit.core.objectives.BaseObjective.__init__": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.objectives.BaseObjective._invariant_kwargs": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.objectives.BaseObjective._sanity_checking": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.objectives.BaseObjective._shape_of_dependent_data": {
  "lineno": 97,
  "symbols_in_volume": [
   "numpy.broadcast_to",
   "numpy.expand_dims"
  ],
  "type": "function"
 },
 "symfit.core.objectives.BaseObjective.dependent_data": {
  "lineno": 39,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "symfit.core.objectives.BaseObjective.independent_data": {
  "lineno": 51,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "symfit.core.objectives.BaseObjective.sigma_data": {
  "lineno": 63,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "symfit.core.objectives.GradientObjective": {
  "lineno": 180,
  "symbols_in_volume": [
   "abc.ABCMeta",
   "six.add_metaclass"
  ],
  "type": "class"
 },
 "symfit.core.objectives.GradientObjective.eval_jacobian": {
  "lineno": 185,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "symfit.core.objectives.HessianObjective": {
  "lineno": 206,
  "symbols_in_volume": [
   "abc.ABCMeta",
   "six.add_metaclass"
  ],
  "type": "class"
 },
 "symfit.core.objectives.HessianObjective.eval_hessian": {
  "lineno": 211,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "symfit.core.objectives.HessianObjectiveJacApprox": {
  "lineno": 391,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.objectives.HessianObjectiveJacApprox.eval_hessian": {
  "lineno": 410,
  "symbols_in_volume": [
   "numpy.broadcast_to",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "symfit.core.objectives.LeastSquares": {
  "lineno": 286,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.objectives.LeastSquares.__call__": {
  "lineno": 299,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "symfit.core.objectives.LeastSquares.eval_hessian": {
  "lineno": 354,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.atleast_2d",
   "numpy.einsum",
   "numpy.newaxis",
   "numpy.squeeze",
   "numpy.sum"
  ],
  "type": "function"
 },
 "symfit.core.objectives.LeastSquares.eval_jacobian": {
  "lineno": 326,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.atleast_1d",
   "numpy.newaxis",
   "numpy.squeeze",
   "numpy.sum"
  ],
  "type": "function"
 },
 "symfit.core.objectives.LogLikelihood": {
  "lineno": 447,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.objectives.LogLikelihood.__call__": {
  "lineno": 452,
  "symbols_in_volume": [
   "numpy.log",
   "numpy.nansum"
  ],
  "type": "function"
 },
 "symfit.core.objectives.LogLikelihood.eval_hessian": {
  "lineno": 497,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.atleast_2d",
   "numpy.einsum",
   "numpy.newaxis",
   "numpy.squeeze",
   "numpy.sum"
  ],
  "type": "function"
 },
 "symfit.core.objectives.LogLikelihood.eval_jacobian": {
  "lineno": 466,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.atleast_1d",
   "numpy.nansum",
   "numpy.squeeze",
   "numpy.sum"
  ],
  "type": "function"
 },
 "symfit.core.objectives.MinimizeModel": {
  "lineno": 528,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.objectives.MinimizeModel.__call__": {
  "lineno": 538,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.objectives.MinimizeModel.__init__": {
  "lineno": 533,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.objectives.MinimizeModel.eval_hessian": {
  "lineno": 553,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "symfit.core.objectives.MinimizeModel.eval_jacobian": {
  "lineno": 544,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "symfit.core.objectives.VectorLeastSquares": {
  "lineno": 232,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.objectives.VectorLeastSquares.__call__": {
  "lineno": 237,
  "symbols_in_volume": [
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "symfit.core.objectives.VectorLeastSquares.eval_jacobian": {
  "lineno": 262,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan_to_num"
  ],
  "type": "function"
 },
 "symfit.core.operators": {
  "lineno": null,
  "symbols_in_volume": [
   "symfit.core.argument.Parameter.__call__",
   "sympy.core.expr.Expr.__call__",
   "sys.version_info"
  ],
  "type": "module"
 },
 "symfit.core.operators.call": {
  "lineno": 48,
  "symbols_in_volume": [
   "funcsigs.Parameter",
   "funcsigs.Parameter.POSITIONAL_OR_KEYWORD",
   "funcsigs.Signature",
   "symfit.core.support.seperate_symbols",
   "symfit.core.support.sympy_to_py"
  ],
  "type": "function"
 },
 "symfit.core.printing": {
  "lineno": null,
  "symbols_in_volume": [
   "sympy.HadamardProduct._numpycode",
   "sympy.Idx._numpycode",
   "sympy.Inverse._numpycode",
   "sympy.MatPow._numpycode",
   "sympy.printing.codeprinter.CodePrinter._not_supported",
   "sympy.printing.codeprinter.CodePrinter._number_symbols"
  ],
  "type": "module"
 },
 "symfit.core.printing.DontDeleteMe": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.printing.DontDeleteMe.__delete__": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.printing.DontDeleteMe.__get__": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.printing.DontDeleteMe.__init__": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.printing.DontDeleteMe.__set__": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.printing._print_HadamardProduct": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.printing._print_Idx": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.printing._print_Inverse": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.printing._print_MatPow": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.support": {
  "lineno": null,
  "symbols_in_volume": [
   "sympy.Derivative.name",
   "sys.version_info"
  ],
  "type": "module"
 },
 "symfit.core.support.D": {
  "lineno": 427,
  "symbols_in_volume": [
   "sympy.Derivative"
  ],
  "type": "function"
 },
 "symfit.core.support.RequiredKeyword": {
  "lineno": 325,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.support.RequiredKeywordError": {
  "lineno": 328,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.support.cached_property": {
  "lineno": 255,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.support.cached_property.__delete__": {
  "lineno": 288,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.support.cached_property.__get__": {
  "lineno": 271,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.support.cached_property.__init__": {
  "lineno": 267,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.support.deprecated": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.support.deprecated.__call__": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.support.deprecated.__call__.deprecated_func": {
  "lineno": 60,
  "symbols_in_volume": [
   "functools32.wraps",
   "warnings.warn"
  ],
  "type": "function"
 },
 "symfit.core.support.deprecated.__init__": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.support.isidentifier": {
  "lineno": 37,
  "symbols_in_volume": [
   "keyword.kwlist",
   "re.I",
   "re.match"
  ],
  "type": "function"
 },
 "symfit.core.support.jacobian": {
  "lineno": 299,
  "symbols_in_volume": [
   "sympy.diff",
   "sympy.symbols"
  ],
  "type": "function"
 },
 "symfit.core.support.key2str": {
  "lineno": 313,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.support.keywordonly": {
  "lineno": 331,
  "symbols_in_volume": [],
  "type": "class"
 },
 "symfit.core.support.keywordonly.__call__": {
  "lineno": 373,
  "symbols_in_volume": [
   "funcsigs.signature"
  ],
  "type": "function"
 },
 "symfit.core.support.keywordonly.__call__.wrapped_func": {
  "lineno": 400,
  "symbols_in_volume": [
   "funcsigs.Parameter.VAR_KEYWORD",
   "funcsigs.Parameter.VAR_POSITIONAL",
   "functools32.wraps"
  ],
  "type": "function"
 },
 "symfit.core.support.keywordonly.__init__": {
  "lineno": 358,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "funcsigs.Parameter",
   "funcsigs.Parameter.KEYWORD_ONLY"
  ],
  "type": "function"
 },
 "symfit.core.support.name": {
  "lineno": 432,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.support.parameters": {
  "lineno": 201,
  "symbols_in_volume": [
   "symfit.core.argument.Parameter",
   "sympy.symbols"
  ],
  "type": "function"
 },
 "symfit.core.support.seperate_symbols": {
  "lineno": 69,
  "symbols_in_volume": [
   "symfit.core.argument.Parameter",
   "sympy.Derivative",
   "sympy.MatrixExpr",
   "sympy.core.expr.Expr",
   "sympy.tensor.Idx"
  ],
  "type": "function"
 },
 "symfit.core.support.sympy_to_py": {
  "lineno": 108,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "funcsigs.signature",
   "symfit.core.argument.Variable",
   "sympy.Derivative",
   "sympy.utilities.lambdify.lambdify"
  ],
  "type": "function"
 },
 "symfit.core.support.sympy_to_py.wrapped_lambdafunc": {
  "lineno": 141,
  "symbols_in_volume": [
   "functools32.wraps"
  ],
  "type": "function"
 },
 "symfit.core.support.sympy_to_scipy": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "symfit.core.support.sympy_to_scipy.f": {
  "lineno": 171,
  "symbols_in_volume": [
   "numpy.atleast_2d"
  ],
  "type": "function"
 },
 "symfit.core.support.variables": {
  "lineno": 189,
  "symbols_in_volume": [
   "symfit.core.argument.Variable",
   "sympy.symbols"
  ],
  "type": "function"
 },
 "symfit.distributions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "symfit.distributions.BivariateGaussian": {
  "lineno": 26,
  "symbols_in_volume": [
   "sympy.exp",
   "sympy.pi",
   "sympy.sqrt"
  ],
  "type": "function"
 },
 "symfit.distributions.Exp": {
  "lineno": 48,
  "symbols_in_volume": [
   "sympy.exp"
  ],
  "type": "function"
 },
 "symfit.distributions.Gaussian": {
  "lineno": 11,
  "symbols_in_volume": [
   "sympy.exp",
   "sympy.pi",
   "sympy.sqrt"
  ],
  "type": "function"
 }
}