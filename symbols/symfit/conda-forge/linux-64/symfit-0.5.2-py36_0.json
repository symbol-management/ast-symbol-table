{
 "*": {
  "data": {
   "imports": [
    "symfit.api"
   ]
  },
  "type": "star-import"
 },
 "symfit": {
  "data": {
   "symbols_in_volume": [
    "symfit.pkg_resources"
   ]
  },
  "type": "module"
 },
 "symfit.__version__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "symfit.api": {
  "data": {},
  "type": "module"
 },
 "symfit.api.CallableModel": {
  "data": {
   "shadows": "symfit.core.models.CallableModel"
  },
  "type": "import"
 },
 "symfit.api.CallableNumericalModel": {
  "data": {
   "shadows": "symfit.core.models.CallableNumericalModel"
  },
  "type": "import"
 },
 "symfit.api.D": {
  "data": {
   "shadows": "symfit.core.support.D"
  },
  "type": "import"
 },
 "symfit.api.Fit": {
  "data": {
   "shadows": "symfit.core.fit.Fit"
  },
  "type": "import"
 },
 "symfit.api.FitResults": {
  "data": {
   "shadows": "symfit.core.fit_results.FitResults"
  },
  "type": "import"
 },
 "symfit.api.GradientModel": {
  "data": {
   "shadows": "symfit.core.models.GradientModel"
  },
  "type": "import"
 },
 "symfit.api.Model": {
  "data": {
   "shadows": "symfit.core.models.Model"
  },
  "type": "import"
 },
 "symfit.api.ModelError": {
  "data": {
   "shadows": "symfit.core.models.ModelError"
  },
  "type": "import"
 },
 "symfit.api.ODEModel": {
  "data": {
   "shadows": "symfit.core.models.ODEModel"
  },
  "type": "import"
 },
 "symfit.api.Parameter": {
  "data": {
   "shadows": "symfit.core.argument.Parameter"
  },
  "type": "import"
 },
 "symfit.api.Variable": {
  "data": {
   "shadows": "symfit.core.argument.Variable"
  },
  "type": "import"
 },
 "symfit.api.parameters": {
  "data": {
   "shadows": "symfit.core.support.parameters"
  },
  "type": "import"
 },
 "symfit.api.symfit.core.operators": {
  "data": {
   "shadows": "symfit.core.operators"
  },
  "type": "import"
 },
 "symfit.api.variables": {
  "data": {
   "shadows": "symfit.core.support.variables"
  },
  "type": "import"
 },
 "symfit.contrib": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "list",
    "symfit.contrib._import_submodules",
    "symfit.contrib._submodules"
   ]
  },
  "type": "module"
 },
 "symfit.contrib.__all__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "symfit.contrib._import_submodules": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "symfit.contrib.importlib",
    "symfit.contrib.pkgutil",
    "symfit.contrib.sys"
   ]
  },
  "type": "function"
 },
 "symfit.contrib._submodules": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "symfit.contrib.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess": {
  "data": {},
  "type": "module"
 },
 "symfit.contrib.interactive_guess.examples.ODE_2D_example": {
  "data": {
   "symbols_in_volume": [
    "numpy.array",
    "numpy.max",
    "print",
    "symfit.D",
    "symfit.Fit",
    "symfit.ODEModel",
    "symfit.Parameter",
    "symfit.contrib.interactive_guess.InteractiveGuess",
    "symfit.contrib.interactive_guess.examples.ODE_2D_example.concentration_A",
    "symfit.contrib.interactive_guess.examples.ODE_2D_example.concentration_B",
    "symfit.contrib.interactive_guess.examples.ODE_2D_example.fit",
    "symfit.contrib.interactive_guess.examples.ODE_2D_example.fit_result",
    "symfit.contrib.interactive_guess.examples.ODE_2D_example.guess",
    "symfit.contrib.interactive_guess.examples.ODE_2D_example.k",
    "symfit.contrib.interactive_guess.examples.ODE_2D_example.model",
    "symfit.contrib.interactive_guess.examples.ODE_2D_example.model_dict",
    "symfit.contrib.interactive_guess.examples.ODE_2D_example.tdata",
    "symfit.variables"
   ]
  },
  "type": "module"
 },
 "symfit.contrib.interactive_guess.examples.ODE_2D_example.D": {
  "data": {
   "shadows": "symfit.D"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess.examples.ODE_2D_example.Fit": {
  "data": {
   "shadows": "symfit.Fit"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess.examples.ODE_2D_example.InteractiveGuess": {
  "data": {
   "shadows": "symfit.contrib.interactive_guess.InteractiveGuess"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess.examples.ODE_2D_example.ODEModel": {
  "data": {
   "shadows": "symfit.ODEModel"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess.examples.ODE_2D_example.Parameter": {
  "data": {
   "shadows": "symfit.Parameter"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess.examples.ODE_2D_example.concentration_A": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.ODE_2D_example.concentration_B": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.ODE_2D_example.fit": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.ODE_2D_example.fit_result": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.ODE_2D_example.guess": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.ODE_2D_example.k": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.ODE_2D_example.model": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.ODE_2D_example.model_dict": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.ODE_2D_example.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess.examples.ODE_2D_example.tdata": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.ODE_2D_example.variables": {
  "data": {
   "shadows": "symfit.variables"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess.examples.ODE_example": {
  "data": {
   "symbols_in_volume": [
    "numpy.array",
    "print",
    "symfit.D",
    "symfit.Fit",
    "symfit.ODEModel",
    "symfit.Parameter",
    "symfit.contrib.interactive_guess.InteractiveGuess",
    "symfit.contrib.interactive_guess.examples.ODE_example.concentration",
    "symfit.contrib.interactive_guess.examples.ODE_example.fit",
    "symfit.contrib.interactive_guess.examples.ODE_example.fit_result",
    "symfit.contrib.interactive_guess.examples.ODE_example.guess",
    "symfit.contrib.interactive_guess.examples.ODE_example.k",
    "symfit.contrib.interactive_guess.examples.ODE_example.model",
    "symfit.contrib.interactive_guess.examples.ODE_example.tdata",
    "symfit.variables"
   ]
  },
  "type": "module"
 },
 "symfit.contrib.interactive_guess.examples.ODE_example.D": {
  "data": {
   "shadows": "symfit.D"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess.examples.ODE_example.Fit": {
  "data": {
   "shadows": "symfit.Fit"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess.examples.ODE_example.InteractiveGuess": {
  "data": {
   "shadows": "symfit.contrib.interactive_guess.InteractiveGuess"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess.examples.ODE_example.ODEModel": {
  "data": {
   "shadows": "symfit.ODEModel"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess.examples.ODE_example.Parameter": {
  "data": {
   "shadows": "symfit.Parameter"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess.examples.ODE_example.concentration": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.ODE_example.fit": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.ODE_example.fit_result": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.ODE_example.guess": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.ODE_example.k": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.ODE_example.model": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.ODE_example.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess.examples.ODE_example.tdata": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.ODE_example.variables": {
  "data": {
   "shadows": "symfit.variables"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess.examples.simple_2D_example": {
  "data": {
   "symbols_in_volume": [
    "numpy.linspace",
    "print",
    "symfit.Fit",
    "symfit.Model",
    "symfit.Parameter",
    "symfit.Variable",
    "symfit.contrib.interactive_guess.InteractiveGuess",
    "symfit.contrib.interactive_guess.examples.simple_2D_example.distr",
    "symfit.contrib.interactive_guess.examples.simple_2D_example.fit",
    "symfit.contrib.interactive_guess.examples.simple_2D_example.fit_result",
    "symfit.contrib.interactive_guess.examples.simple_2D_example.guess",
    "symfit.contrib.interactive_guess.examples.simple_2D_example.k",
    "symfit.contrib.interactive_guess.examples.simple_2D_example.model",
    "symfit.contrib.interactive_guess.examples.simple_2D_example.x",
    "symfit.contrib.interactive_guess.examples.simple_2D_example.x0",
    "symfit.contrib.interactive_guess.examples.simple_2D_example.x_data",
    "symfit.contrib.interactive_guess.examples.simple_2D_example.y",
    "symfit.contrib.interactive_guess.examples.simple_2D_example.y_data"
   ]
  },
  "type": "module"
 },
 "symfit.contrib.interactive_guess.examples.simple_2D_example.Fit": {
  "data": {
   "shadows": "symfit.Fit"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess.examples.simple_2D_example.InteractiveGuess": {
  "data": {
   "shadows": "symfit.contrib.interactive_guess.InteractiveGuess"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess.examples.simple_2D_example.Model": {
  "data": {
   "shadows": "symfit.Model"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess.examples.simple_2D_example.Parameter": {
  "data": {
   "shadows": "symfit.Parameter"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess.examples.simple_2D_example.Variable": {
  "data": {
   "shadows": "symfit.Variable"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess.examples.simple_2D_example.distr": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "symfit.exp"
   ]
  },
  "type": "function"
 },
 "symfit.contrib.interactive_guess.examples.simple_2D_example.exp": {
  "data": {
   "shadows": "symfit.exp"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess.examples.simple_2D_example.fit": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.simple_2D_example.fit_result": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.simple_2D_example.guess": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.simple_2D_example.k": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.simple_2D_example.model": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.simple_2D_example.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess.examples.simple_2D_example.x": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.simple_2D_example.x0": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.simple_2D_example.x_data": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.simple_2D_example.y": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.simple_2D_example.y_data": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.simple_3D_example": {
  "data": {
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.meshgrid",
    "print",
    "symfit.Fit",
    "symfit.Model",
    "symfit.Parameter",
    "symfit.contrib.interactive_guess.InteractiveGuess",
    "symfit.contrib.interactive_guess.examples.simple_3D_example.fit",
    "symfit.contrib.interactive_guess.examples.simple_3D_example.fit_result",
    "symfit.contrib.interactive_guess.examples.simple_3D_example.guess",
    "symfit.contrib.interactive_guess.examples.simple_3D_example.model",
    "symfit.contrib.interactive_guess.examples.simple_3D_example.mu_x",
    "symfit.contrib.interactive_guess.examples.simple_3D_example.mu_y",
    "symfit.contrib.interactive_guess.examples.simple_3D_example.sig_x",
    "symfit.contrib.interactive_guess.examples.simple_3D_example.sig_y",
    "symfit.contrib.interactive_guess.examples.simple_3D_example.x_data",
    "symfit.contrib.interactive_guess.examples.simple_3D_example.y_data",
    "symfit.contrib.interactive_guess.examples.simple_3D_example.z_data",
    "symfit.distributions.Gaussian",
    "symfit.variables"
   ]
  },
  "type": "module"
 },
 "symfit.contrib.interactive_guess.examples.simple_3D_example.Fit": {
  "data": {
   "shadows": "symfit.Fit"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess.examples.simple_3D_example.Gaussian": {
  "data": {
   "shadows": "symfit.distributions.Gaussian"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess.examples.simple_3D_example.InteractiveGuess": {
  "data": {
   "shadows": "symfit.contrib.interactive_guess.InteractiveGuess"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess.examples.simple_3D_example.Model": {
  "data": {
   "shadows": "symfit.Model"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess.examples.simple_3D_example.Parameter": {
  "data": {
   "shadows": "symfit.Parameter"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess.examples.simple_3D_example.exp": {
  "data": {
   "shadows": "symfit.exp"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess.examples.simple_3D_example.fit": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.simple_3D_example.fit_result": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.simple_3D_example.guess": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.simple_3D_example.model": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.simple_3D_example.mu_x": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.simple_3D_example.mu_y": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.simple_3D_example.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess.examples.simple_3D_example.sig_x": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.simple_3D_example.sig_y": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.simple_3D_example.variables": {
  "data": {
   "shadows": "symfit.variables"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess.examples.simple_3D_example.x_data": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.simple_3D_example.y_data": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.simple_3D_example.z_data": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.vector_valued_2D": {
  "data": {
   "symbols_in_volume": [
    "numpy.linspace",
    "print",
    "symfit.Fit",
    "symfit.Model",
    "symfit.Parameter",
    "symfit.Variable",
    "symfit.contrib.interactive_guess.InteractiveGuess",
    "symfit.contrib.interactive_guess.examples.vector_valued_2D.data",
    "symfit.contrib.interactive_guess.examples.vector_valued_2D.fit",
    "symfit.contrib.interactive_guess.examples.vector_valued_2D.fit_result",
    "symfit.contrib.interactive_guess.examples.vector_valued_2D.guess",
    "symfit.contrib.interactive_guess.examples.vector_valued_2D.k",
    "symfit.contrib.interactive_guess.examples.vector_valued_2D.model",
    "symfit.contrib.interactive_guess.examples.vector_valued_2D.x",
    "symfit.contrib.interactive_guess.examples.vector_valued_2D.x0",
    "symfit.contrib.interactive_guess.examples.vector_valued_2D.x_data",
    "symfit.contrib.interactive_guess.examples.vector_valued_2D.y1",
    "symfit.contrib.interactive_guess.examples.vector_valued_2D.y1_data",
    "symfit.contrib.interactive_guess.examples.vector_valued_2D.y2",
    "symfit.contrib.interactive_guess.examples.vector_valued_2D.y2_data"
   ]
  },
  "type": "module"
 },
 "symfit.contrib.interactive_guess.examples.vector_valued_2D.Fit": {
  "data": {
   "shadows": "symfit.Fit"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess.examples.vector_valued_2D.InteractiveGuess": {
  "data": {
   "shadows": "symfit.contrib.interactive_guess.InteractiveGuess"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess.examples.vector_valued_2D.Model": {
  "data": {
   "shadows": "symfit.Model"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess.examples.vector_valued_2D.Parameter": {
  "data": {
   "shadows": "symfit.Parameter"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess.examples.vector_valued_2D.Variable": {
  "data": {
   "shadows": "symfit.Variable"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess.examples.vector_valued_2D.data": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.vector_valued_2D.fit": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.vector_valued_2D.fit_result": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.vector_valued_2D.guess": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.vector_valued_2D.k": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.vector_valued_2D.model": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.vector_valued_2D.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess.examples.vector_valued_2D.x": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.vector_valued_2D.x0": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.vector_valued_2D.x_data": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.vector_valued_2D.y1": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.vector_valued_2D.y1_data": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.vector_valued_2D.y2": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.examples.vector_valued_2D.y2_data": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "symfit.contrib.interactive_guess.interactive_guess": {
  "data": {
   "symbols_in_volume": [
    "matplotlib.pyplot.ioff"
   ]
  },
  "type": "module"
 },
 "symfit.contrib.interactive_guess.interactive_guess.InteractiveGuess": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "symfit.contrib.interactive_guess.interactive_guess.InteractiveGuess.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "enumerate",
    "hasattr",
    "keywordonly",
    "len",
    "list",
    "numpy.linspace",
    "numpy.max",
    "numpy.meshgrid",
    "numpy.min",
    "super",
    "symfit.contrib.interactive_guess.interactive_guess.InteractiveGuess",
    "symfit.contrib.interactive_guess.interactive_guess.Strategy2D",
    "symfit.contrib.interactive_guess.interactive_guess.StrategynD",
    "symfit.contrib.interactive_guess.interactive_guess.itertools"
   ]
  },
  "type": "function"
 },
 "symfit.contrib.interactive_guess.interactive_guess.InteractiveGuess.__str__": {
  "data": {
   "lineno": 221
  },
  "type": "function"
 },
 "symfit.contrib.interactive_guess.interactive_guess.InteractiveGuess._eval_model": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "key2str"
   ]
  },
  "type": "function"
 },
 "symfit.contrib.interactive_guess.interactive_guess.InteractiveGuess._plot_data": {
  "data": {
   "lineno": 188
  },
  "type": "function"
 },
 "symfit.contrib.interactive_guess.interactive_guess.InteractiveGuess._plot_model": {
  "data": {
   "lineno": 192
  },
  "type": "function"
 },
 "symfit.contrib.interactive_guess.interactive_guess.InteractiveGuess._set_up_figure": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "Derivative",
    "enumerate",
    "int",
    "latex",
    "len",
    "matplotlib.pyplot.figure",
    "numpy.ceil"
   ]
  },
  "type": "function"
 },
 "symfit.contrib.interactive_guess.interactive_guess.InteractiveGuess._set_up_sliders": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "hasattr",
    "matplotlib.pyplot.Slider"
   ]
  },
  "type": "function"
 },
 "symfit.contrib.interactive_guess.interactive_guess.InteractiveGuess._update_plot": {
  "data": {
   "lineno": 200
  },
  "type": "function"
 },
 "symfit.contrib.interactive_guess.interactive_guess.InteractiveGuess._update_specific_plot": {
  "data": {
   "lineno": 196
  },
  "type": "function"
 },
 "symfit.contrib.interactive_guess.interactive_guess.InteractiveGuess.execute": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "keywordonly",
    "matplotlib.pyplot.show"
   ]
  },
  "type": "function"
 },
 "symfit.contrib.interactive_guess.interactive_guess.InteractiveGuess2D": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "symfit.contrib.interactive_guess.interactive_guess.InteractiveGuess"
   ]
  },
  "type": "class"
 },
 "symfit.contrib.interactive_guess.interactive_guess.InteractiveGuess2D.__init__": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "deprecated",
    "super",
    "symfit.contrib.interactive_guess.interactive_guess.InteractiveGuess",
    "symfit.contrib.interactive_guess.interactive_guess.InteractiveGuess2D"
   ]
  },
  "type": "function"
 },
 "symfit.contrib.interactive_guess.interactive_guess.Strategy2D": {
  "data": {
   "lineno": 233
  },
  "type": "class"
 },
 "symfit.contrib.interactive_guess.interactive_guess.Strategy2D.__init__": {
  "data": {
   "lineno": 238
  },
  "type": "function"
 },
 "symfit.contrib.interactive_guess.interactive_guess.Strategy2D.plot_data": {
  "data": {
   "lineno": 241
  },
  "type": "function"
 },
 "symfit.contrib.interactive_guess.interactive_guess.Strategy2D.plot_model": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "symfit.contrib.interactive_guess.interactive_guess.Strategy2D.update_plot": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "symfit.contrib.interactive_guess.interactive_guess.StrategynD": {
  "data": {
   "lineno": 270
  },
  "type": "class"
 },
 "symfit.contrib.interactive_guess.interactive_guess.StrategynD.__init__": {
  "data": {
   "lineno": 275
  },
  "type": "function"
 },
 "symfit.contrib.interactive_guess.interactive_guess.StrategynD.plot_data": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "numpy.column_stack",
    "numpy.log",
    "numpy.meshgrid",
    "scipy.stats.gaussian_kde"
   ]
  },
  "type": "function"
 },
 "symfit.contrib.interactive_guess.interactive_guess.StrategynD.plot_model": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "symfit.contrib.interactive_guess.interactive_guess.StrategynD.update_plot": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "getattr",
    "numpy.array",
    "numpy.column_stack",
    "numpy.dstack",
    "numpy.mean",
    "numpy.newaxis",
    "numpy.percentile"
   ]
  },
  "type": "function"
 },
 "symfit.contrib.interactive_guess.interactive_guess.gaussian_kde": {
  "data": {
   "shadows": "scipy.stats.gaussian_kde"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess.interactive_guess.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess.interactive_guess.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess.interactive_guess.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "matplotlib.pyplot.ioff",
    "symfit.contrib.interactive_guess.tests.test_interactive_fit.unittest"
   ]
  },
  "type": "module"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian": {
  "data": {
   "shadows": "symfit.distributions.Gaussian"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian2DInteractiveGuessTest": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "symfit.contrib.interactive_guess.tests.test_interactive_fit.unittest"
   ]
  },
  "type": "class"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian2DInteractiveGuessTest.setUpClass": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "classmethod",
    "numpy.linspace",
    "numpy.random.seed",
    "symfit.Parameter",
    "symfit.Variable",
    "symfit.contrib.interactive_guess.InteractiveGuess",
    "symfit.contrib.interactive_guess.tests.test_interactive_fit.distr"
   ]
  },
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian2DInteractiveGuessTest.test_get_data": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "numpy.allclose",
    "symfit.contrib.interactive_guess.tests.test_interactive_fit.np_distr"
   ]
  },
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian2DInteractiveGuessTest.test_number_of_plots": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian2DInteractiveGuessTest.test_number_of_projections": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian2DInteractiveGuessTest.test_number_of_sliders": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian2DInteractiveGuessTest.test_plot_colors": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian2DInteractiveGuessTest.test_plot_titles": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "symfit.latex"
   ]
  },
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian2DInteractiveGuessTest.test_slider_callback_data": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.max",
    "numpy.min",
    "numpy.random.random",
    "symfit.contrib.interactive_guess.tests.test_interactive_fit.np_distr"
   ]
  },
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian2DInteractiveGuessTest.test_slider_callback_parameter_values": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian2DInteractiveGuessTest.test_slider_labels": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian3DInteractiveFitTest": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "symfit.contrib.interactive_guess.tests.test_interactive_fit.unittest"
   ]
  },
  "type": "class"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian3DInteractiveFitTest.setUpClass": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "classmethod",
    "numpy.histogram2d",
    "numpy.meshgrid",
    "numpy.random.multivariate_normal",
    "symfit.Parameter",
    "symfit.Variable",
    "symfit.contrib.interactive_guess.InteractiveGuess",
    "symfit.distributions.Gaussian"
   ]
  },
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian3DInteractiveFitTest.test_number_of_plots": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian3DInteractiveFitTest.test_number_of_projections": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Gaussian3DInteractiveFitTest.test_plot_titles": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "symfit.latex"
   ]
  },
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Parameter": {
  "data": {
   "shadows": "symfit.Parameter"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.Variable": {
  "data": {
   "shadows": "symfit.Variable"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.VectorValuedTest": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "symfit.contrib.interactive_guess.tests.test_interactive_fit.unittest"
   ]
  },
  "type": "class"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.VectorValuedTest.setUpClass": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "classmethod",
    "numpy.linspace",
    "symfit.Parameter",
    "symfit.Variable",
    "symfit.contrib.interactive_guess.InteractiveGuess"
   ]
  },
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.VectorValuedTest.test_number_of_plots": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.VectorValuedTest.test_number_of_projections": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.VectorValuedTest.test_plot_titles": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "symfit.latex"
   ]
  },
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.distr": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "symfit.exp"
   ]
  },
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.exp": {
  "data": {
   "shadows": "symfit.exp"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.interactive_guess": {
  "data": {
   "shadows": "symfit.contrib.interactive_guess"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.latex": {
  "data": {
   "shadows": "symfit.latex"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.matplotlib.colors": {
  "data": {
   "shadows": "matplotlib.colors"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.np_distr": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "symfit.contrib.interactive_guess.tests.test_interactive_fit.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "symfit.contrib.pkgutil": {
  "data": {
   "shadows": "pkgutil"
  },
  "type": "import"
 },
 "symfit.contrib.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "symfit.core": {
  "data": {},
  "type": "module"
 },
 "symfit.core.__author__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "symfit.core._repeatable_partial": {
  "data": {},
  "type": "module"
 },
 "symfit.core._repeatable_partial.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "symfit.core._repeatable_partial.repeatable_partial": {
  "data": {
   "lineno": 3,
   "symbols_in_volume": [
    "functools.partial"
   ]
  },
  "type": "class"
 },
 "symfit.core._repeatable_partial.repeatable_partial.__new__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "TypeError",
    "callable",
    "hasattr",
    "len",
    "super",
    "symfit.core._repeatable_partial.repeatable_partial",
    "tuple"
   ]
  },
  "type": "function"
 },
 "symfit.core.argument": {
  "data": {},
  "type": "module"
 },
 "symfit.core.argument.Argument": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "collections.defaultdict",
    "int",
    "sympy.core.symbol.Symbol"
   ]
  },
  "type": "class"
 },
 "symfit.core.argument.Argument.__getstate__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "super",
    "symfit.core.argument.Argument"
   ]
  },
  "type": "function"
 },
 "symfit.core.argument.Argument.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "super",
    "symfit.core.argument.Argument"
   ]
  },
  "type": "function"
 },
 "symfit.core.argument.Argument.__new__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "DeprecationWarning",
    "super",
    "symfit.core.argument.Argument",
    "symfit.core.argument.warnings"
   ]
  },
  "type": "function"
 },
 "symfit.core.argument.Argument._sympystr": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "symfit.core.argument.Parameter": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "symfit.core.argument.Argument"
   ]
  },
  "type": "class"
 },
 "symfit.core.argument.Parameter.__eq__": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "NotImplemented",
    "super",
    "symfit.core.argument.Parameter"
   ]
  },
  "type": "function"
 },
 "symfit.core.argument.Parameter.__init__": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "ValueError",
    "max",
    "min",
    "super",
    "symfit.core.argument.Parameter"
   ]
  },
  "type": "function"
 },
 "symfit.core.argument.Parameter.__new__": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "super",
    "symfit.core.argument.Parameter",
    "symfit.core.argument.numbers"
   ]
  },
  "type": "function"
 },
 "symfit.core.argument.Symbol": {
  "data": {
   "shadows": "sympy.core.symbol.Symbol"
  },
  "type": "import"
 },
 "symfit.core.argument.Variable": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "symfit.core.argument.Argument"
   ]
  },
  "type": "class"
 },
 "symfit.core.argument.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "symfit.core.argument.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "symfit.core.argument.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "symfit.core.fit": {
  "data": {
   "symbols_in_volume": [
    "symfit.core.fit.sys"
   ]
  },
  "type": "module"
 },
 "symfit.core.fit.Fit": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "symfit.core.fit.HasCovarianceMatrix"
   ]
  },
  "type": "class"
 },
 "symfit.core.fit.Fit.__init__": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "Model",
    "collections.Sequence",
    "isinstance",
    "keywordonly",
    "objective",
    "super",
    "symfit.core.fit.Fit"
   ]
  },
  "type": "function"
 },
 "symfit.core.fit.Fit._determine_minimizer": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "any"
   ]
  },
  "type": "function"
 },
 "symfit.core.fit.Fit._determine_objective": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "len",
    "list",
    "objective",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "symfit.core.fit.Fit._init_constraints": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "symfit.core.fit.Fit._init_minimizer": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "MinimizeModel",
    "hasattr",
    "isinstance",
    "issubclass",
    "minimizer"
   ]
  },
  "type": "function"
 },
 "symfit.core.fit.Fit._make_signature": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "funcsigs.Signature",
    "list",
    "sorted"
   ]
  },
  "type": "function"
 },
 "symfit.core.fit.Fit.execute": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "symfit.core.fit.HasCovarianceMatrix": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "symfit.core.fit.TakesData"
   ]
  },
  "type": "class"
 },
 "symfit.core.fit.HasCovarianceMatrix._covariance_matrix": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "AttributeError",
    "isinstance",
    "key2str",
    "len",
    "numpy.atleast_2d",
    "numpy.linalg.LinAlgError",
    "numpy.linalg.inv",
    "numpy.product",
    "numpy.squeeze",
    "numpy.sum",
    "objective"
   ]
  },
  "type": "function"
 },
 "symfit.core.fit.HasCovarianceMatrix.covariance_matrix": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "HessApproximation",
    "objective"
   ]
  },
  "type": "function"
 },
 "symfit.core.fit.HasCovarianceMatrix.covariance_matrix.HessApproximation": {
  "data": {
   "lineno": 292
  },
  "type": "class"
 },
 "symfit.core.fit.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "symfit.core.fit.Sequence": {
  "data": {
   "shadows": "collections.Sequence"
  },
  "type": "import"
 },
 "symfit.core.fit.TakesData": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "symfit.core.fit.TakesData.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "Model",
    "RuntimeWarning",
    "TypeError",
    "any",
    "isinstance",
    "iter",
    "keywordonly",
    "numpy.array",
    "numpy.ones",
    "str",
    "symfit.core.argument.Variable._argument_name",
    "symfit.core.fit.sympy",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "symfit.core.fit.TakesData._make_parameters": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "funcsigs.Parameter",
    "funcsigs.Parameter.POSITIONAL_OR_KEYWORD",
    "funcsigs.Parameter.empty",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "symfit.core.fit.TakesData._make_signature": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "funcsigs.Signature",
    "sorted"
   ]
  },
  "type": "function"
 },
 "symfit.core.fit.TakesData.data_shapes": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "list",
    "property",
    "set"
   ]
  },
  "type": "function"
 },
 "symfit.core.fit.TakesData.dependent_data": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "property"
   ]
  },
  "type": "function"
 },
 "symfit.core.fit.TakesData.independent_data": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "property"
   ]
  },
  "type": "function"
 },
 "symfit.core.fit.TakesData.initial_guesses": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "numpy.array",
    "property"
   ]
  },
  "type": "function"
 },
 "symfit.core.fit.TakesData.sigma_data": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "property"
   ]
  },
  "type": "function"
 },
 "symfit.core.fit.Variable": {
  "data": {
   "shadows": "symfit.core.argument.Variable"
  },
  "type": "import"
 },
 "symfit.core.fit.inspect_sig": {
  "data": {
   "shadows": "funcsigs"
  },
  "type": "import"
 },
 "symfit.core.fit.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "symfit.core.fit.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "symfit.core.fit.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "symfit.core.fit_results": {
  "data": {},
  "type": "module"
 },
 "symfit.core.fit_results.FitResults": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "symfit.core.fit_results.FitResults.__getattr__": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "AttributeError",
    "vars"
   ]
  },
  "type": "function"
 },
 "symfit.core.fit_results.FitResults.__getstate__": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "hasattr",
    "type"
   ]
  },
  "type": "function"
 },
 "symfit.core.fit_results.FitResults.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "symfit.core.support.keywordonly",
    "zip"
   ]
  },
  "type": "function"
 },
 "symfit.core.fit_results.FitResults.__setstate__": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "TypeError",
    "cls",
    "min_class"
   ]
  },
  "type": "function"
 },
 "symfit.core.fit_results.FitResults.__str__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "constraint",
    "sorted"
   ]
  },
  "type": "function"
 },
 "symfit.core.fit_results.FitResults._array_safe_dict_eq": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "dict",
    "isinstance",
    "numpy.allclose",
    "staticmethod",
    "symfit.core.fit_results.FitResults"
   ]
  },
  "type": "function"
 },
 "symfit.core.fit_results.FitResults._gof_qualifiers": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "isinstance",
    "numpy.exp",
    "numpy.sum",
    "symfit.core.fit_results.r_squared",
    "symfit.core.objectives.LeastSquares",
    "symfit.core.objectives.LogLikelihood",
    "symfit.core.objectives.VectorLeastSquares"
   ]
  },
  "type": "function"
 },
 "symfit.core.fit_results.FitResults.covariance": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "symfit.core.fit_results.FitResults.iterations": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "symfit.core.fit_results.FitResults.stdev": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "symfit.core.fit_results.FitResults.value": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "symfit.core.fit_results.FitResults.variance": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "symfit.core.fit_results.LeastSquares": {
  "data": {
   "shadows": "symfit.core.objectives.LeastSquares"
  },
  "type": "import"
 },
 "symfit.core.fit_results.LogLikelihood": {
  "data": {
   "shadows": "symfit.core.objectives.LogLikelihood"
  },
  "type": "import"
 },
 "symfit.core.fit_results.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "symfit.core.fit_results.VectorLeastSquares": {
  "data": {
   "shadows": "symfit.core.objectives.VectorLeastSquares"
  },
  "type": "import"
 },
 "symfit.core.fit_results.keywordonly": {
  "data": {
   "shadows": "symfit.core.support.keywordonly"
  },
  "type": "import"
 },
 "symfit.core.fit_results.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "symfit.core.fit_results.r_squared": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "model",
    "model.dependent_vars",
    "numpy.mean",
    "numpy.sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "symfit.core.keywordonly": {
  "data": {
   "symbols_in_volume": [
    "symfit.core.keywordonly.sys"
   ]
  },
  "type": "module"
 },
 "symfit.core.keywordonly.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "symfit.core.keywordonly.RequiredKeyword": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "symfit.core.keywordonly.RequiredKeywordError": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "symfit.core.keywordonly.inspect_sig": {
  "data": {
   "shadows": "funcsigs"
  },
  "type": "import"
 },
 "symfit.core.keywordonly.keywordonly": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "symfit.core.keywordonly.keywordonly.__call__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "funcsigs.signature",
    "symfit.core.keywordonly.RequiredKeywordError"
   ]
  },
  "type": "function"
 },
 "symfit.core.keywordonly.keywordonly.__call__.wrapped_func": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "func",
    "funcsigs.Parameter.VAR_KEYWORD",
    "funcsigs.Parameter.VAR_POSITIONAL",
    "functools32.wraps",
    "symfit.core.keywordonly.RequiredKeyword",
    "symfit.core.keywordonly.RequiredKeywordError",
    "tuple"
   ]
  },
  "type": "function"
 },
 "symfit.core.keywordonly.keywordonly.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "funcsigs.Parameter",
    "funcsigs.Parameter.KEYWORD_ONLY",
    "symfit.core.keywordonly.RequiredKeyword"
   ]
  },
  "type": "function"
 },
 "symfit.core.keywordonly.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "symfit.core.keywordonly.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "symfit.core.keywordonly.wraps": {
  "data": {
   "shadows": "functools32.wraps"
  },
  "type": "import"
 },
 "symfit.core.leastsqbound": {
  "data": {},
  "type": "module"
 },
 "symfit.core.leastsqbound.LinAlgError": {
  "data": {
   "shadows": "numpy.linalg.LinAlgError"
  },
  "type": "import"
 },
 "symfit.core.leastsqbound._check_func": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "TypeError",
    "float",
    "getattr",
    "len",
    "numpy.atleast_1d",
    "numpy.dtype",
    "numpy.inexact",
    "numpy.issubdtype",
    "numpy.shape",
    "thefunc"
   ]
  },
  "type": "function"
 },
 "symfit.core.leastsqbound._external2internal_func": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "symfit.core.leastsqbound._external2internal_lambda"
   ]
  },
  "type": "function"
 },
 "symfit.core.leastsqbound._external2internal_func.convert_e2i": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "l",
    "numpy.empty_like",
    "zip"
   ]
  },
  "type": "function"
 },
 "symfit.core.leastsqbound._external2internal_lambda": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "numpy.arcsin",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "symfit.core.leastsqbound._internal2external_func": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "symfit.core.leastsqbound._internal2external_lambda"
   ]
  },
  "type": "function"
 },
 "symfit.core.leastsqbound._internal2external_func.convert_i2e": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "l",
    "numpy.empty_like",
    "zip"
   ]
  },
  "type": "function"
 },
 "symfit.core.leastsqbound._internal2external_grad": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "enumerate",
    "numpy.cos",
    "numpy.empty_like",
    "numpy.sqrt",
    "zip"
   ]
  },
  "type": "function"
 },
 "symfit.core.leastsqbound._internal2external_lambda": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.sin",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "symfit.core.leastsqbound._minpack": {
  "data": {
   "shadows": "scipy.optimize._minpack"
  },
  "type": "import"
 },
 "symfit.core.leastsqbound.arcsin": {
  "data": {
   "shadows": "numpy.arcsin"
  },
  "type": "import"
 },
 "symfit.core.leastsqbound.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "symfit.core.leastsqbound.asarray": {
  "data": {
   "shadows": "numpy.asarray"
  },
  "type": "import"
 },
 "symfit.core.leastsqbound.atleast_1d": {
  "data": {
   "shadows": "numpy.atleast_1d"
  },
  "type": "import"
 },
 "symfit.core.leastsqbound.cos": {
  "data": {
   "shadows": "numpy.cos"
  },
  "type": "import"
 },
 "symfit.core.leastsqbound.dot": {
  "data": {
   "shadows": "numpy.dot"
  },
  "type": "import"
 },
 "symfit.core.leastsqbound.dtype": {
  "data": {
   "shadows": "numpy.dtype"
  },
  "type": "import"
 },
 "symfit.core.leastsqbound.empty_like": {
  "data": {
   "shadows": "numpy.empty_like"
  },
  "type": "import"
 },
 "symfit.core.leastsqbound.eye": {
  "data": {
   "shadows": "numpy.eye"
  },
  "type": "import"
 },
 "symfit.core.leastsqbound.finfo": {
  "data": {
   "shadows": "numpy.finfo"
  },
  "type": "import"
 },
 "symfit.core.leastsqbound.inexact": {
  "data": {
   "shadows": "numpy.inexact"
  },
  "type": "import"
 },
 "symfit.core.leastsqbound.inv": {
  "data": {
   "shadows": "numpy.dual.inv"
  },
  "type": "import"
 },
 "symfit.core.leastsqbound.issubdtype": {
  "data": {
   "shadows": "numpy.issubdtype"
  },
  "type": "import"
 },
 "symfit.core.leastsqbound.leastsq": {
  "data": {
   "shadows": "scipy.optimize.leastsq"
  },
  "type": "import"
 },
 "symfit.core.leastsqbound.leastsqbound": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "KeyError",
    "RuntimeWarning",
    "TypeError",
    "ValueError",
    "e2i",
    "i2e",
    "isinstance",
    "len",
    "numpy.asarray",
    "numpy.dot",
    "numpy.dtype",
    "numpy.dual.inv",
    "numpy.eye",
    "numpy.finfo",
    "numpy.linalg.LinAlgError",
    "numpy.shape",
    "numpy.take",
    "numpy.transpose",
    "numpy.triu",
    "scipy.optimize._minpack._lmder",
    "scipy.optimize._minpack._lmdif",
    "scipy.optimize.leastsq",
    "symfit.core.leastsqbound._check_func",
    "symfit.core.leastsqbound._external2internal_func",
    "symfit.core.leastsqbound._internal2external_func",
    "symfit.core.leastsqbound._internal2external_grad",
    "symfit.core.leastsqbound.warnings",
    "tuple"
   ]
  },
  "type": "function"
 },
 "symfit.core.leastsqbound.leastsqbound.wDfun": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "Dfun",
    "i2e"
   ]
  },
  "type": "function"
 },
 "symfit.core.leastsqbound.leastsqbound.wfunc": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "func",
    "i2e"
   ]
  },
  "type": "function"
 },
 "symfit.core.leastsqbound.shape": {
  "data": {
   "shadows": "numpy.shape"
  },
  "type": "import"
 },
 "symfit.core.leastsqbound.sin": {
  "data": {
   "shadows": "numpy.sin"
  },
  "type": "import"
 },
 "symfit.core.leastsqbound.sqrt": {
  "data": {
   "shadows": "numpy.sqrt"
  },
  "type": "import"
 },
 "symfit.core.leastsqbound.take": {
  "data": {
   "shadows": "numpy.take"
  },
  "type": "import"
 },
 "symfit.core.leastsqbound.transpose": {
  "data": {
   "shadows": "numpy.transpose"
  },
  "type": "import"
 },
 "symfit.core.leastsqbound.triu": {
  "data": {
   "shadows": "numpy.triu"
  },
  "type": "import"
 },
 "symfit.core.leastsqbound.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "symfit.core.minimizers": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple",
    "symfit.core.minimizers.sys"
   ]
  },
  "type": "module"
 },
 "symfit.core.minimizers.BFGS": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "symfit.core.minimizers.ScipyGradientMinimize"
   ]
  },
  "type": "class"
 },
 "symfit.core.minimizers.BaseMinimizer": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "symfit.core.minimizers.BaseMinimizer.__getstate__": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "symfit.core.minimizers.BaseMinimizer.__init__": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "symfit.core.minimizers.BaseMinimizer.__setstate__": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "symfit.core.minimizers.BaseMinimizer._baseobjective_from_callable": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "CallableNumericalModel",
    "hasattr",
    "isinstance",
    "objective_type",
    "set",
    "symfit.core.minimizers.sympy"
   ]
  },
  "type": "function"
 },
 "symfit.core.minimizers.BaseMinimizer.execute": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "symfit.core.minimizers.abc"
   ]
  },
  "type": "function"
 },
 "symfit.core.minimizers.BaseMinimizer.initial_guesses": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "symfit.core.minimizers.BasinHopping": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "symfit.core.minimizers.GlobalMinimizer",
    "symfit.core.minimizers.ScipyMinimize"
   ]
  },
  "type": "class"
 },
 "symfit.core.minimizers.BasinHopping.__init__": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "issubclass",
    "keywordonly",
    "scipy.optimize.BFGS",
    "super",
    "symfit.core.minimizers.BasinHopping",
    "symfit.core.minimizers.ScipyMinimize"
   ]
  },
  "type": "function"
 },
 "symfit.core.minimizers.BasinHopping.execute": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "scipy.optimize.basinhopping",
    "symfit.core.minimizers.BoundedMinimizer",
    "symfit.core.minimizers.ConstrainedMinimizer",
    "symfit.core.minimizers.GradientMinimizer"
   ]
  },
  "type": "function"
 },
 "symfit.core.minimizers.BoundedMinimizer": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "symfit.core.minimizers.BaseMinimizer"
   ]
  },
  "type": "class"
 },
 "symfit.core.minimizers.BoundedMinimizer.bounds": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "symfit.core.minimizers.COBYLA": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "symfit.core.minimizers.BaseMinimizer",
    "symfit.core.minimizers.ScipyConstrainedMinimize"
   ]
  },
  "type": "class"
 },
 "symfit.core.minimizers.COBYLA.execute": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "super",
    "symfit.core.minimizers.COBYLA"
   ]
  },
  "type": "function"
 },
 "symfit.core.minimizers.ChainedMinimizer": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "symfit.core.minimizers.BaseMinimizer"
   ]
  },
  "type": "class"
 },
 "symfit.core.minimizers.ChainedMinimizer.__getstate__": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "super",
    "symfit.core.minimizers.ChainedMinimizer"
   ]
  },
  "type": "function"
 },
 "symfit.core.minimizers.ChainedMinimizer.__init__": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "keywordonly",
    "super",
    "symfit.core.minimizers.ChainedMinimizer"
   ]
  },
  "type": "function"
 },
 "symfit.core.minimizers.ChainedMinimizer.__str__": {
  "data": {
   "lineno": 321
  },
  "type": "function"
 },
 "symfit.core.minimizers.ChainedMinimizer._make_signature": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "collections.Counter",
    "funcsigs.Parameter",
    "funcsigs.Parameter.KEYWORD_ONLY",
    "funcsigs.Signature",
    "name",
    "reversed"
   ]
  },
  "type": "function"
 },
 "symfit.core.minimizers.ChainedMinimizer.execute": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "list",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "symfit.core.minimizers.ConstrainedMinimizer": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "symfit.core.minimizers.BaseMinimizer"
   ]
  },
  "type": "class"
 },
 "symfit.core.minimizers.ConstrainedMinimizer.__init__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "keywordonly",
    "super",
    "symfit.core.minimizers.ConstrainedMinimizer"
   ]
  },
  "type": "function"
 },
 "symfit.core.minimizers.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "symfit.core.minimizers.DifferentialEvolution": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "symfit.core.minimizers.GlobalMinimizer",
    "symfit.core.minimizers.ScipyBoundedMinimizer"
   ]
  },
  "type": "class"
 },
 "symfit.core.minimizers.DifferentialEvolution.execute": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "keywordonly",
    "scipy.optimize.differential_evolution"
   ]
  },
  "type": "function"
 },
 "symfit.core.minimizers.DummyModel": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "symfit.core.minimizers.GlobalMinimizer": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "symfit.core.minimizers.BaseMinimizer"
   ]
  },
  "type": "class"
 },
 "symfit.core.minimizers.GlobalMinimizer.__init__": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "super",
    "symfit.core.minimizers.GlobalMinimizer"
   ]
  },
  "type": "function"
 },
 "symfit.core.minimizers.GradientMinimizer": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "symfit.core.minimizers.BaseMinimizer"
   ]
  },
  "type": "class"
 },
 "symfit.core.minimizers.GradientMinimizer.__init__": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "keywordonly",
    "super",
    "symfit.core.minimizers.GradientMinimizer"
   ]
  },
  "type": "function"
 },
 "symfit.core.minimizers.GradientMinimizer.resize_jac": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "symfit.core.minimizers.GradientMinimizer.resize_jac.resized": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "func",
    "functools32.wraps",
    "numpy.atleast_1d",
    "numpy.squeeze"
   ]
  },
  "type": "function"
 },
 "symfit.core.minimizers.HessianMinimizer": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "symfit.core.minimizers.GradientMinimizer"
   ]
  },
  "type": "class"
 },
 "symfit.core.minimizers.HessianMinimizer.__init__": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "keywordonly",
    "super",
    "symfit.core.minimizers.HessianMinimizer"
   ]
  },
  "type": "function"
 },
 "symfit.core.minimizers.HessianMinimizer.resize_hess": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "symfit.core.minimizers.HessianMinimizer.resize_hess.resized": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "func",
    "functools32.wraps",
    "numpy.atleast_2d",
    "numpy.squeeze"
   ]
  },
  "type": "function"
 },
 "symfit.core.minimizers.LBFGSB": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "symfit.core.minimizers.ScipyBoundedMinimizer",
    "symfit.core.minimizers.ScipyGradientMinimize"
   ]
  },
  "type": "class"
 },
 "symfit.core.minimizers.LBFGSB.method_name": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "symfit.core.minimizers.MINPACK": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": [
    "symfit.core.minimizers.GradientMinimizer",
    "symfit.core.minimizers.ScipyBoundedMinimizer"
   ]
  },
  "type": "class"
 },
 "symfit.core.minimizers.MINPACK.__init__": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "super",
    "symfit.core.minimizers.MINPACK"
   ]
  },
  "type": "function"
 },
 "symfit.core.minimizers.MINPACK.execute": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "leastsqbound",
    "scipy.optimize.OptimizeResult",
    "zip"
   ]
  },
  "type": "function"
 },
 "symfit.core.minimizers.NelderMead": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "symfit.core.minimizers.BaseMinimizer",
    "symfit.core.minimizers.ScipyMinimize"
   ]
  },
  "type": "class"
 },
 "symfit.core.minimizers.NelderMead.method_name": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "symfit.core.minimizers.NonlinearConstraint": {
  "data": {
   "shadows": "scipy.optimize.NonlinearConstraint"
  },
  "type": "import"
 },
 "symfit.core.minimizers.OptimizeResult": {
  "data": {
   "shadows": "scipy.optimize.OptimizeResult"
  },
  "type": "import"
 },
 "symfit.core.minimizers.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "symfit.core.minimizers.Powell": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "symfit.core.minimizers.BaseMinimizer",
    "symfit.core.minimizers.ScipyMinimize"
   ]
  },
  "type": "class"
 },
 "symfit.core.minimizers.SLSQP": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "symfit.core.minimizers.ScipyBoundedMinimizer",
    "symfit.core.minimizers.ScipyConstrainedMinimize",
    "symfit.core.minimizers.ScipyGradientMinimize"
   ]
  },
  "type": "class"
 },
 "symfit.core.minimizers.ScipyBoundedMinimizer": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "symfit.core.minimizers.BoundedMinimizer",
    "symfit.core.minimizers.ScipyMinimize"
   ]
  },
  "type": "class"
 },
 "symfit.core.minimizers.ScipyBoundedMinimizer.execute": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "super",
    "symfit.core.minimizers.ScipyBoundedMinimizer"
   ]
  },
  "type": "function"
 },
 "symfit.core.minimizers.ScipyConstrainedMinimize": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "symfit.core.minimizers.ConstrainedMinimizer",
    "symfit.core.minimizers.ScipyMinimize"
   ]
  },
  "type": "class"
 },
 "symfit.core.minimizers.ScipyConstrainedMinimize.__init__": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "super",
    "symfit.core.minimizers.ScipyConstrainedMinimize"
   ]
  },
  "type": "function"
 },
 "symfit.core.minimizers.ScipyConstrainedMinimize._pack_output": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "super",
    "symfit.core.minimizers.ScipyConstrainedMinimize"
   ]
  },
  "type": "function"
 },
 "symfit.core.minimizers.ScipyConstrainedMinimize.execute": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "super",
    "symfit.core.minimizers.ScipyConstrainedMinimize"
   ]
  },
  "type": "function"
 },
 "symfit.core.minimizers.ScipyConstrainedMinimize.scipy_constraints": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "AssertionError",
    "MinimizeModel",
    "TypeError",
    "hasattr",
    "isinstance",
    "symfit.core.minimizers.sympy",
    "tuple"
   ]
  },
  "type": "function"
 },
 "symfit.core.minimizers.ScipyGradientMinimize": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "symfit.core.minimizers.GradientMinimizer",
    "symfit.core.minimizers.ScipyMinimize"
   ]
  },
  "type": "class"
 },
 "symfit.core.minimizers.ScipyGradientMinimize.execute": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "keywordonly",
    "super",
    "symfit.core.minimizers.ScipyGradientMinimize"
   ]
  },
  "type": "function"
 },
 "symfit.core.minimizers.ScipyGradientMinimize.scipy_constraints": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "hasattr",
    "super",
    "symfit.core.minimizers.ScipyGradientMinimize"
   ]
  },
  "type": "function"
 },
 "symfit.core.minimizers.ScipyHessianMinimize": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "symfit.core.minimizers.HessianMinimizer",
    "symfit.core.minimizers.ScipyGradientMinimize"
   ]
  },
  "type": "class"
 },
 "symfit.core.minimizers.ScipyHessianMinimize.execute": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "keywordonly",
    "super",
    "symfit.core.minimizers.ScipyHessianMinimize"
   ]
  },
  "type": "function"
 },
 "symfit.core.minimizers.ScipyHessianMinimize.scipy_constraints": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "hasattr",
    "super",
    "symfit.core.minimizers.ScipyHessianMinimize"
   ]
  },
  "type": "function"
 },
 "symfit.core.minimizers.ScipyMinimize": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "symfit.core.minimizers.ScipyMinimize.__init__": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "super",
    "symfit.core.minimizers.ScipyMinimize"
   ]
  },
  "type": "function"
 },
 "symfit.core.minimizers.ScipyMinimize._pack_output": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "FitResults",
    "dict",
    "iter",
    "next",
    "numpy.atleast_1d",
    "symfit.core.minimizers.DummyModel"
   ]
  },
  "type": "function"
 },
 "symfit.core.minimizers.ScipyMinimize.execute": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "keywordonly",
    "scipy.optimize.minimize"
   ]
  },
  "type": "function"
 },
 "symfit.core.minimizers.ScipyMinimize.method_name": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "symfit.core.minimizers.TrustConstr": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "symfit.core.minimizers.ScipyBoundedMinimizer",
    "symfit.core.minimizers.ScipyConstrainedMinimize",
    "symfit.core.minimizers.ScipyHessianMinimize"
   ]
  },
  "type": "class"
 },
 "symfit.core.minimizers.TrustConstr._get_jacobian_hessian_strategy": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "scipy.optimize.BFGS"
   ]
  },
  "type": "function"
 },
 "symfit.core.minimizers.TrustConstr.execute": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "keywordonly",
    "super",
    "symfit.core.minimizers.TrustConstr"
   ]
  },
  "type": "function"
 },
 "symfit.core.minimizers.TrustConstr.method_name": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "symfit.core.minimizers.TrustConstr.scipy_constraints": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "numpy.inf",
    "scipy.optimize.NonlinearConstraint",
    "super",
    "symfit.core.minimizers.TrustConstr"
   ]
  },
  "type": "function"
 },
 "symfit.core.minimizers.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "symfit.core.minimizers.basinhopping": {
  "data": {
   "shadows": "scipy.optimize.basinhopping"
  },
  "type": "import"
 },
 "symfit.core.minimizers.differential_evolution": {
  "data": {
   "shadows": "scipy.optimize.differential_evolution"
  },
  "type": "import"
 },
 "symfit.core.minimizers.inspect_sig": {
  "data": {
   "shadows": "funcsigs"
  },
  "type": "import"
 },
 "symfit.core.minimizers.minimize": {
  "data": {
   "shadows": "scipy.optimize.minimize"
  },
  "type": "import"
 },
 "symfit.core.minimizers.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "symfit.core.minimizers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "symfit.core.minimizers.soBFGS": {
  "data": {
   "shadows": "scipy.optimize.BFGS"
  },
  "type": "import"
 },
 "symfit.core.minimizers.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "symfit.core.minimizers.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "symfit.core.minimizers.wraps": {
  "data": {
   "shadows": "functools32.wraps"
  },
  "type": "import"
 },
 "symfit.core.models": {
  "data": {
   "symbols_in_volume": [
    "symfit.core.models.sys"
   ]
  },
  "type": "module"
 },
 "symfit.core.models.BaseCallableModel": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "symfit.core.models.BaseModel"
   ]
  },
  "type": "class"
 },
 "symfit.core.models.BaseCallableModel.__call__": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "symfit.core.models.ModelOutput"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.BaseCallableModel._init_from_dict": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "super",
    "symfit.core.models.BaseCallableModel"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.BaseCallableModel._make_signature": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "funcsigs.Parameter",
    "funcsigs.Parameter.POSITIONAL_OR_KEYWORD",
    "funcsigs.Signature"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.BaseCallableModel.eval_components": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "dict",
    "numpy.atleast_1d",
    "zip"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.BaseCallableModel.numerical_components": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.BaseCallableModel.params": {
  "data": {
   "lineno": 634
  },
  "type": "function"
 },
 "symfit.core.models.BaseGradientModel": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "symfit.core.models.BaseCallableModel"
   ]
  },
  "type": "class"
 },
 "symfit.core.models.BaseGradientModel.eval_jacobian": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "symfit.core.models.ModelOutput"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.BaseGradientModel.finite_difference": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "TypeError",
    "abs",
    "enumerate",
    "f",
    "float",
    "keywordonly",
    "len",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.zeros",
    "partial",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.BaseModel": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "collections.Mapping"
   ]
  },
  "type": "class"
 },
 "symfit.core.models.BaseModel.__eq__": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.BaseModel.__getitem__": {
  "data": {
   "lineno": 245
  },
  "type": "function"
 },
 "symfit.core.models.BaseModel.__getstate__": {
  "data": {
   "lineno": 478
  },
  "type": "function"
 },
 "symfit.core.models.BaseModel.__init__": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "TypeError",
    "Variable",
    "collections.Mapping",
    "isinstance",
    "iter"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.BaseModel.__iter__": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.BaseModel.__len__": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.BaseModel.__neg__": {
  "data": {
   "lineno": 283
  },
  "type": "function"
 },
 "symfit.core.models.BaseModel.__setstate__": {
  "data": {
   "lineno": 488
  },
  "type": "function"
 },
 "symfit.core.models.BaseModel.__str__": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "isinstance",
    "sorted"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.BaseModel._init_from_dict": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "AssertionError",
    "Variable",
    "any",
    "collections.OrderedDict",
    "isinstance",
    "list",
    "sort_func",
    "sorted",
    "symfit.core.models.ModelError",
    "toposort.toposort"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.BaseModel.as_constraint": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "classmethod",
    "isinstance",
    "len",
    "set",
    "symfit.core.models.ModelError",
    "symfit.core.models.sympy",
    "sympy.core.relational.Relational"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.BaseModel.bounds": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "numpy.nextafter",
    "property"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.BaseModel.connectivity_mapping": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "seperate_symbols",
    "set",
    "vars"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.BaseModel.free_params": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.BaseModel.function_dict": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.BaseModel.ordered_symbols": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "isinstance",
    "property",
    "sorted",
    "symfit.core.models.sympy",
    "toposort.toposort"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.BaseModel.shared_parameters": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "len",
    "property",
    "seperate_symbols",
    "set",
    "vars"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.BaseModel.vars": {
  "data": {
   "lineno": 403
  },
  "type": "function"
 },
 "symfit.core.models.BaseModel.vars_as_functions": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "isinstance",
    "sorted",
    "str",
    "symfit.core.models.sympy"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.BaseModel.with_dependencies": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "any",
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.BaseNumericalModel": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "symfit.core.models.BaseModel"
   ]
  },
  "type": "class"
 },
 "symfit.core.models.BaseNumericalModel.__eq__": {
  "data": {
   "lineno": 565
  },
  "type": "function"
 },
 "symfit.core.models.BaseNumericalModel.__init__": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "DeprecationWarning",
    "TypeError",
    "Variable",
    "collections.Mapping",
    "isinstance",
    "iter",
    "keywordonly",
    "set",
    "sorted",
    "str",
    "super",
    "symfit.core.models.BaseModel",
    "symfit.core.models.BaseNumericalModel",
    "symfit.core.models.sympy",
    "symfit.core.models.warnings"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.BaseNumericalModel.__neg__": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "callable_expr"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.BaseNumericalModel.connectivity_mapping": {
  "data": {
   "lineno": 561
  },
  "type": "function"
 },
 "symfit.core.models.BaseNumericalModel.shared_parameters": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "NotImplementedError",
    "property"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.CallableModel": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "symfit.core.models.BaseCallableModel"
   ]
  },
  "type": "class"
 },
 "symfit.core.models.CallableModel.numerical_components": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "isinstance",
    "sorted",
    "str",
    "symfit.core.models.ModelOutput",
    "sympy_to_py"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.CallableNumericalModel": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "symfit.core.models.BaseCallableModel",
    "symfit.core.models.BaseNumericalModel"
   ]
  },
  "type": "class"
 },
 "symfit.core.models.CallableNumericalModel.numerical_components": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "isinstance",
    "symfit.core.models.sympy",
    "sympy_to_py"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.GradientModel": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": [
    "symfit.core.models.BaseGradientModel",
    "symfit.core.models.CallableModel"
   ]
  },
  "type": "class"
 },
 "symfit.core.models.GradientModel.__init__": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "super",
    "symfit.core.models.GradientModel"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.GradientModel.eval_jacobian": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": [
    "D",
    "enumerate",
    "numpy.broadcast_arrays",
    "numpy.broadcast_to",
    "numpy.stack",
    "symfit.core.models.ModelOutput"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.GradientModel.jacobian": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": [
    "D"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.GradientModel.jacobian_model": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "symfit.core.models.jacobian_from_model"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.HessianModel": {
  "data": {
   "lineno": 869,
   "symbols_in_volume": [
    "symfit.core.models.GradientModel"
   ]
  },
  "type": "class"
 },
 "symfit.core.models.HessianModel.__init__": {
  "data": {
   "lineno": 873,
   "symbols_in_volume": [
    "super",
    "symfit.core.models.HessianModel"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.HessianModel.eval_hessian": {
  "data": {
   "lineno": 892,
   "symbols_in_volume": [
    "D",
    "enumerate",
    "numpy.broadcast_arrays",
    "numpy.broadcast_to",
    "numpy.stack",
    "symfit.core.models.ModelOutput"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.HessianModel.hessian": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": [
    "property",
    "symfit.core.models.sympy"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.HessianModel.hessian_model": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": [
    "symfit.core.models.hessian_from_model"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.Mapping": {
  "data": {
   "shadows": "collections.Mapping"
  },
  "type": "import"
 },
 "symfit.core.models.Model": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": [
    "symfit.core.models.HessianModel"
   ]
  },
  "type": "class"
 },
 "symfit.core.models.ModelError": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "symfit.core.models.ModelOutput": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "class"
 },
 "symfit.core.models.ModelOutput.__getattr__": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.ModelOutput.__getitem__": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "symfit.core.models.ModelOutput.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "zip"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.ModelOutput.__len__": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.ModelOutput.__new__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "symfit.core.models.ModelOutput",
    "tuple.__new__"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.ModelOutput.__repr__": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "symfit.core.models.ModelOutput._asdict": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "symfit.core.models.ODEModel": {
  "data": {
   "lineno": 944,
   "symbols_in_volume": [
    "symfit.core.models.BaseGradientModel"
   ]
  },
  "type": "class"
 },
 "symfit.core.models.ODEModel.__call__": {
  "data": {
   "lineno": 1174,
   "symbols_in_volume": [
    "symfit.core.models.ModelOutput"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.ODEModel.__getitem__": {
  "data": {
   "lineno": 1029,
   "symbols_in_volume": [
    "f"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.ODEModel.__init__": {
  "data": {
   "lineno": 949,
   "symbols_in_volume": [
    "Variable",
    "collections.OrderedDict",
    "isinstance",
    "len",
    "list",
    "seperate_symbols",
    "set",
    "sort_func",
    "sorted",
    "symfit.core.models.ModelError",
    "symfit.core.models.operator",
    "vars"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.ODEModel.__iter__": {
  "data": {
   "lineno": 1041,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.ODEModel.__neg__": {
  "data": {
   "lineno": 1047
  },
  "type": "function"
 },
 "symfit.core.models.ODEModel.__str__": {
  "data": {
   "lineno": 1012,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.ODEModel._ncomponents": {
  "data": {
   "lineno": 1057,
   "symbols_in_volume": [
    "sympy_to_py"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.ODEModel._njacobian": {
  "data": {
   "lineno": 1071,
   "symbols_in_volume": [
    "symfit.core.models.sympy",
    "sympy_to_py"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.ODEModel.eval_components": {
  "data": {
   "lineno": 1090,
   "symbols_in_volume": [
    "IndexError",
    "TypeError",
    "c",
    "enumerate",
    "f",
    "len",
    "list",
    "numpy.array",
    "numpy.concatenate",
    "scipy.integrate.odeint",
    "tuple"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "symfit.core.models.Relational": {
  "data": {
   "shadows": "sympy.core.relational.Relational"
  },
  "type": "import"
 },
 "symfit.core.models._partial_diff": {
  "data": {
   "lineno": 1191,
   "symbols_in_volume": [
    "D",
    "isinstance",
    "symfit.core.models.sympy"
   ]
  },
  "type": "function"
 },
 "symfit.core.models._partial_subs": {
  "data": {
   "lineno": 1202,
   "symbols_in_volume": [
    "isinstance",
    "symfit.core.models._partial_diff",
    "symfit.core.models.sympy",
    "tuple"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.hessian_from_model": {
  "data": {
   "lineno": 1257,
   "symbols_in_volume": [
    "symfit.core.models.jacobian_from_model"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.inspect_sig": {
  "data": {
   "shadows": "funcsigs"
  },
  "type": "import"
 },
 "symfit.core.models.jacobian_from_model": {
  "data": {
   "lineno": 1216,
   "symbols_in_volume": [
    "D",
    "dict",
    "symfit.core.models.CallableModel",
    "symfit.core.models._partial_subs"
   ]
  },
  "type": "function"
 },
 "symfit.core.models.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "symfit.core.models.odeint": {
  "data": {
   "shadows": "scipy.integrate.odeint"
  },
  "type": "import"
 },
 "symfit.core.models.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "symfit.core.models.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "symfit.core.models.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "symfit.core.models.toposort": {
  "data": {
   "shadows": "toposort.toposort"
  },
  "type": "import"
 },
 "symfit.core.models.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "symfit.core.objectives": {
  "data": {},
  "type": "module"
 },
 "symfit.core.objectives.BaseIndependentObjective": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "symfit.core.objectives.BaseObjective"
   ]
  },
  "type": "class"
 },
 "symfit.core.objectives.BaseIndependentObjective.dependent_data": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "symfit.core.objectives.BaseIndependentObjective.sigma_data": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "symfit.core.objectives.BaseObjective": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "object",
    "six.add_metaclass",
    "symfit.core.objectives.abc"
   ]
  },
  "type": "class"
 },
 "symfit.core.objectives.BaseObjective.__call__": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "dict",
    "key2str",
    "symfit.core.objectives.abc",
    "zip"
   ]
  },
  "type": "function"
 },
 "symfit.core.objectives.BaseObjective.__eq__": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "TypeError",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "symfit.core.objectives.BaseObjective.__init__": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "symfit.core.objectives.BaseObjective._invariant_kwargs": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "key2str"
   ]
  },
  "type": "function"
 },
 "symfit.core.objectives.BaseObjective._sanity_checking": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "symfit.core.objectives.BaseObjective._shape_of_dependent_data": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.broadcast_to",
    "numpy.expand_dims",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "symfit.core.objectives.BaseObjective.dependent_data": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "symfit.core.objectives.BaseObjective.independent_data": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "symfit.core.objectives.BaseObjective.sigma_data": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "symfit.core.objectives.GradientObjective": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "six.add_metaclass",
    "symfit.core.objectives.BaseObjective",
    "symfit.core.objectives.abc"
   ]
  },
  "type": "class"
 },
 "symfit.core.objectives.GradientObjective.eval_jacobian": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "dict",
    "key2str",
    "symfit.core.objectives.abc",
    "zip"
   ]
  },
  "type": "function"
 },
 "symfit.core.objectives.HessianObjective": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "six.add_metaclass",
    "symfit.core.objectives.GradientObjective",
    "symfit.core.objectives.abc"
   ]
  },
  "type": "class"
 },
 "symfit.core.objectives.HessianObjective.eval_hessian": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "dict",
    "key2str",
    "symfit.core.objectives.abc",
    "zip"
   ]
  },
  "type": "function"
 },
 "symfit.core.objectives.HessianObjectiveJacApprox": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "symfit.core.objectives.HessianObjective"
   ]
  },
  "type": "class"
 },
 "symfit.core.objectives.HessianObjectiveJacApprox.eval_hessian": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "len",
    "numpy.broadcast_to",
    "numpy.zeros_like",
    "self",
    "self.model.params",
    "super",
    "symfit.core.objectives.HessianObjectiveJacApprox"
   ]
  },
  "type": "function"
 },
 "symfit.core.objectives.LeastSquares": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "symfit.core.objectives.HessianObjective"
   ]
  },
  "type": "class"
 },
 "symfit.core.objectives.LeastSquares.__call__": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "enumerate",
    "keywordonly",
    "numpy.sum",
    "self",
    "self.dependent_data.get",
    "self.model.dependent_vars",
    "self.model.sigmas",
    "self.sigma_data",
    "super",
    "symfit.core.objectives.LeastSquares",
    "zip"
   ]
  },
  "type": "function"
 },
 "symfit.core.objectives.LeastSquares.eval_hessian": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.atleast_2d",
    "numpy.einsum",
    "numpy.newaxis",
    "numpy.squeeze",
    "numpy.sum",
    "range",
    "self",
    "self.dependent_data.get",
    "self.model.dependent_vars",
    "self.model.sigmas",
    "self.sigma_data",
    "super",
    "symfit.core.objectives.LeastSquares",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "symfit.core.objectives.LeastSquares.eval_jacobian": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.atleast_1d",
    "numpy.newaxis",
    "numpy.squeeze",
    "numpy.sum",
    "range",
    "self",
    "self.dependent_data.get",
    "self.model.dependent_vars",
    "self.model.sigmas",
    "self.sigma_data",
    "super",
    "symfit.core.objectives.LeastSquares",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "symfit.core.objectives.LogLikelihood": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "symfit.core.objectives.BaseIndependentObjective",
    "symfit.core.objectives.HessianObjective"
   ]
  },
  "type": "class"
 },
 "symfit.core.objectives.LogLikelihood.__call__": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.nansum",
    "self",
    "super",
    "symfit.core.objectives.LogLikelihood"
   ]
  },
  "type": "function"
 },
 "symfit.core.objectives.LogLikelihood.eval_hessian": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.atleast_2d",
    "numpy.einsum",
    "numpy.newaxis",
    "numpy.squeeze",
    "numpy.sum",
    "range",
    "self",
    "super",
    "symfit.core.objectives.LogLikelihood",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "symfit.core.objectives.LogLikelihood.eval_jacobian": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "apply_func",
    "keywordonly",
    "numpy.array",
    "numpy.atleast_1d",
    "numpy.nansum",
    "numpy.squeeze",
    "numpy.sum",
    "self",
    "super",
    "symfit.core.objectives.LogLikelihood",
    "zip"
   ]
  },
  "type": "function"
 },
 "symfit.core.objectives.MinimizeModel": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "symfit.core.objectives.BaseIndependentObjective",
    "symfit.core.objectives.HessianObjective"
   ]
  },
  "type": "class"
 },
 "symfit.core.objectives.MinimizeModel.__call__": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "self",
    "super",
    "symfit.core.objectives.MinimizeModel"
   ]
  },
  "type": "function"
 },
 "symfit.core.objectives.MinimizeModel.__init__": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "self",
    "self.__class__",
    "super",
    "symfit.core.objectives.MinimizeModel"
   ]
  },
  "type": "function"
 },
 "symfit.core.objectives.MinimizeModel.eval_hessian": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "hasattr",
    "numpy.array",
    "self",
    "self.model",
    "super",
    "symfit.core.objectives.MinimizeModel"
   ]
  },
  "type": "function"
 },
 "symfit.core.objectives.MinimizeModel.eval_jacobian": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "hasattr",
    "numpy.array",
    "self",
    "self.model",
    "super",
    "symfit.core.objectives.MinimizeModel"
   ]
  },
  "type": "function"
 },
 "symfit.core.objectives.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "symfit.core.objectives.VectorLeastSquares": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "symfit.core.objectives.GradientObjective"
   ]
  },
  "type": "class"
 },
 "symfit.core.objectives.VectorLeastSquares.__call__": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "keywordonly",
    "numpy.sqrt",
    "sum",
    "super",
    "symfit.core.objectives.VectorLeastSquares",
    "zip"
   ]
  },
  "type": "function"
 },
 "symfit.core.objectives.VectorLeastSquares.eval_jacobian": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.array",
    "numpy.nan_to_num",
    "self",
    "self.dependent_data",
    "self.dependent_data.get",
    "self.model.dependent_vars",
    "self.model.params",
    "self.model.sigmas",
    "self.sigma_data",
    "super",
    "symfit.core.objectives.VectorLeastSquares",
    "zip"
   ]
  },
  "type": "function"
 },
 "symfit.core.objectives.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "symfit.core.objectives.add_metaclass": {
  "data": {
   "shadows": "six.add_metaclass"
  },
  "type": "import"
 },
 "symfit.core.objectives.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "symfit.core.operators": {
  "data": {
   "symbols_in_volume": [
    "symfit.core.argument.Parameter.__call__",
    "symfit.core.operators.call",
    "symfit.core.operators.sys",
    "sympy.core.expr.Expr.__call__"
   ]
  },
  "type": "module"
 },
 "symfit.core.operators.Eq": {
  "data": {
   "shadows": "sympy.Eq"
  },
  "type": "import"
 },
 "symfit.core.operators.Expr": {
  "data": {
   "shadows": "sympy.core.expr.Expr"
  },
  "type": "import"
 },
 "symfit.core.operators.Ne": {
  "data": {
   "shadows": "sympy.Ne"
  },
  "type": "import"
 },
 "symfit.core.operators.Parameter": {
  "data": {
   "shadows": "symfit.core.argument.Parameter"
  },
  "type": "import"
 },
 "symfit.core.operators.call": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "func",
    "funcsigs.Parameter",
    "funcsigs.Parameter.POSITIONAL_OR_KEYWORD",
    "funcsigs.Signature",
    "symfit.core.support.seperate_symbols",
    "symfit.core.support.sympy_to_py"
   ]
  },
  "type": "function"
 },
 "symfit.core.operators.inspect_sig": {
  "data": {
   "shadows": "funcsigs"
  },
  "type": "import"
 },
 "symfit.core.operators.seperate_symbols": {
  "data": {
   "shadows": "symfit.core.support.seperate_symbols"
  },
  "type": "import"
 },
 "symfit.core.operators.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "symfit.core.operators.sympy_to_py": {
  "data": {
   "shadows": "symfit.core.support.sympy_to_py"
  },
  "type": "import"
 },
 "symfit.core.operators.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "symfit.core.operators.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "symfit.core.printing": {
  "data": {
   "symbols_in_volume": [
    "set",
    "symfit.core.printing.DontDeleteMe",
    "symfit.core.printing._print_HadamardProduct",
    "symfit.core.printing._print_Idx",
    "symfit.core.printing._print_Inverse",
    "symfit.core.printing._print_MatPow",
    "sympy.HadamardProduct._numpycode",
    "sympy.Idx._numpycode",
    "sympy.Inverse._numpycode",
    "sympy.MatPow._numpycode",
    "sympy.printing.codeprinter.CodePrinter._not_supported",
    "sympy.printing.codeprinter.CodePrinter._number_symbols"
   ]
  },
  "type": "module"
 },
 "symfit.core.printing.CodePrinter": {
  "data": {
   "shadows": "sympy.printing.codeprinter.CodePrinter"
  },
  "type": "import"
 },
 "symfit.core.printing.DontDeleteMe": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "symfit.core.printing.DontDeleteMe.__delete__": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "symfit.core.printing.DontDeleteMe.__get__": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "symfit.core.printing.DontDeleteMe.__init__": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "symfit.core.printing.DontDeleteMe.__set__": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "symfit.core.printing.HadamardProduct": {
  "data": {
   "shadows": "sympy.HadamardProduct"
  },
  "type": "import"
 },
 "symfit.core.printing.Idx": {
  "data": {
   "shadows": "sympy.Idx"
  },
  "type": "import"
 },
 "symfit.core.printing.Inverse": {
  "data": {
   "shadows": "sympy.Inverse"
  },
  "type": "import"
 },
 "symfit.core.printing.MatPow": {
  "data": {
   "shadows": "sympy.MatPow"
  },
  "type": "import"
 },
 "symfit.core.printing._print_HadamardProduct": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "symfit.core.printing._print_Idx": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "symfit.core.printing._print_Inverse": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "symfit.core.printing._print_MatPow": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "symfit.core.support": {
  "data": {
   "symbols_in_volume": [
    "property",
    "symfit.core.support.name",
    "symfit.core.support.sympy",
    "symfit.core.support.sys"
   ]
  },
  "type": "module"
 },
 "symfit.core.support.D": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "symfit.core.support.sympy"
   ]
  },
  "type": "function"
 },
 "symfit.core.support.Expr": {
  "data": {
   "shadows": "sympy.core.expr.Expr"
  },
  "type": "import"
 },
 "symfit.core.support.Idx": {
  "data": {
   "shadows": "sympy.tensor.Idx"
  },
  "type": "import"
 },
 "symfit.core.support.MatrixExpr": {
  "data": {
   "shadows": "sympy.MatrixExpr"
  },
  "type": "import"
 },
 "symfit.core.support.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "symfit.core.support.Parameter": {
  "data": {
   "shadows": "symfit.core.argument.Parameter"
  },
  "type": "import"
 },
 "symfit.core.support.RequiredKeyword": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "symfit.core.support.RequiredKeywordError": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "symfit.core.support.Variable": {
  "data": {
   "shadows": "symfit.core.argument.Variable"
  },
  "type": "import"
 },
 "symfit.core.support.cached_property": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "class"
 },
 "symfit.core.support.cached_property.__delete__": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "AttributeError",
    "delattr"
   ]
  },
  "type": "function"
 },
 "symfit.core.support.cached_property.__get__": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "symfit.core.support.cached_property.__init__": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "super",
    "symfit.core.support.cached_property"
   ]
  },
  "type": "function"
 },
 "symfit.core.support.deprecated": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "symfit.core.support.deprecated.__call__": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "symfit.core.support.deprecated.__call__.deprecated_func": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "DeprecationWarning",
    "func",
    "functools32.wraps",
    "symfit.core.support.warnings"
   ]
  },
  "type": "function"
 },
 "symfit.core.support.deprecated.__init__": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "symfit.core.support.inspect_sig": {
  "data": {
   "shadows": "funcsigs"
  },
  "type": "import"
 },
 "symfit.core.support.isidentifier": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "hasattr",
    "symfit.core.support.keyword",
    "symfit.core.support.re"
   ]
  },
  "type": "function"
 },
 "symfit.core.support.jacobian": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "symfit.core.support.sympy",
    "sympy.symbols"
   ]
  },
  "type": "function"
 },
 "symfit.core.support.key2str": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "symfit.core.support.keyword": {
  "data": {
   "shadows": "keyword"
  },
  "type": "import"
 },
 "symfit.core.support.keywordonly": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "symfit.core.support.keywordonly.__call__": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "func",
    "func.__signature__",
    "funcsigs.signature",
    "symfit.core.support.RequiredKeywordError"
   ]
  },
  "type": "function"
 },
 "symfit.core.support.keywordonly.__call__.wrapped_func": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "func",
    "func.__signature__.bind",
    "funcsigs.Parameter.VAR_KEYWORD",
    "funcsigs.Parameter.VAR_POSITIONAL",
    "functools32.wraps",
    "symfit.core.support.RequiredKeyword",
    "symfit.core.support.RequiredKeywordError",
    "tuple"
   ]
  },
  "type": "function"
 },
 "symfit.core.support.keywordonly.__init__": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "funcsigs.Parameter",
    "funcsigs.Parameter.KEYWORD_ONLY",
    "symfit.core.support.RequiredKeyword"
   ]
  },
  "type": "function"
 },
 "symfit.core.support.lambdify": {
  "data": {
   "shadows": "sympy.utilities.lambdify.lambdify"
  },
  "type": "import"
 },
 "symfit.core.support.name": {
  "data": {
   "lineno": 432
  },
  "type": "function"
 },
 "symfit.core.support.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "symfit.core.support.parameters": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "AssertionError",
    "KeyError",
    "TypeError",
    "ValueError",
    "iter",
    "len",
    "max",
    "min",
    "setattr",
    "symfit.core.argument.Parameter",
    "sympy.symbols",
    "zip"
   ]
  },
  "type": "function"
 },
 "symfit.core.support.partial": {
  "data": {
   "shadows": "repeatable_partial"
  },
  "type": "import"
 },
 "symfit.core.support.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "symfit.core.support.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "symfit.core.support.seperate_symbols": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "TypeError",
    "all",
    "func.atoms",
    "func.free_symbols",
    "isinstance",
    "str",
    "symfit.core.argument.Parameter",
    "symfit.core.support.isidentifier",
    "symfit.core.support.sympy",
    "sympy.MatrixExpr",
    "sympy.core.expr.Expr",
    "sympy.tensor.Idx",
    "type",
    "vars",
    "vars.append",
    "vars.sort"
   ]
  },
  "type": "function"
 },
 "symfit.core.support.symbols": {
  "data": {
   "shadows": "sympy.symbols"
  },
  "type": "import"
 },
 "symfit.core.support.symfit.core.printing": {
  "data": {
   "shadows": "symfit.core.printing"
  },
  "type": "import"
 },
 "symfit.core.support.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "symfit.core.support.sympy_to_py": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "dict",
    "func",
    "func.xreplace",
    "funcsigs.signature",
    "isinstance",
    "symfit.core.argument.Variable",
    "symfit.core.support.sympy",
    "sympy.utilities.lambdify.lambdify",
    "zip"
   ]
  },
  "type": "function"
 },
 "symfit.core.support.sympy_to_py.wrapped_lambdafunc": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "functools32.wraps",
    "lambdafunc"
   ]
  },
  "type": "function"
 },
 "symfit.core.support.sympy_to_scipy": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "func",
    "symfit.core.support.sympy_to_py",
    "vars"
   ]
  },
  "type": "function"
 },
 "symfit.core.support.sympy_to_scipy.f": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "TypeError",
    "lambda_func",
    "len",
    "list",
    "numpy.atleast_2d",
    "range"
   ]
  },
  "type": "function"
 },
 "symfit.core.support.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "symfit.core.support.variables": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "symfit.core.argument.Variable",
    "sympy.symbols"
   ]
  },
  "type": "function"
 },
 "symfit.core.support.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "symfit.core.support.wraps": {
  "data": {
   "shadows": "functools32.wraps"
  },
  "type": "import"
 },
 "symfit.distributions": {
  "data": {},
  "type": "module"
 },
 "symfit.distributions.BivariateGaussian": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "symfit.distributions.sympy"
   ]
  },
  "type": "function"
 },
 "symfit.distributions.Exp": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "symfit.distributions.sympy"
   ]
  },
  "type": "function"
 },
 "symfit.distributions.Gaussian": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "symfit.distributions.sympy"
   ]
  },
  "type": "function"
 },
 "symfit.distributions.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "symfit.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 }
}