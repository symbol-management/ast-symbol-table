{
 "neurodocker": {
  "data": {
   "symbols_in_volume": [
    "RuntimeError",
    "get_versions",
    "neurodocker.sys",
    "neurodocker.utils.set_log_level"
   ]
  },
  "type": "module"
 },
 "neurodocker.Dockerfile": {
  "data": {
   "shadows": "neurodocker.generators.Dockerfile"
  },
  "type": "import"
 },
 "neurodocker.SingularityRecipe": {
  "data": {
   "shadows": "neurodocker.generators.SingularityRecipe"
  },
  "type": "import"
 },
 "neurodocker.__version__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "neurodocker._version": {
  "data": {},
  "type": "module"
 },
 "neurodocker._version.get_versions": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "neurodocker._version.json",
    "neurodocker._version.version_json"
   ]
  },
  "type": "function"
 },
 "neurodocker._version.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "neurodocker._version.version_json": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "neurodocker.generators": {
  "data": {},
  "type": "module"
 },
 "neurodocker.generators.Dockerfile": {
  "data": {
   "shadows": "neurodocker.generators.docker.Dockerfile"
  },
  "type": "import"
 },
 "neurodocker.generators.SingularityRecipe": {
  "data": {
   "shadows": "neurodocker.generators.singularity.SingularityRecipe"
  },
  "type": "import"
 },
 "neurodocker.generators.common": {
  "data": {
   "symbols_in_volume": [
    "neurodocker.generators.common.ND_DIRECTORY",
    "neurodocker.generators.common.posixpath",
    "neurodocker.interfaces._base._BaseInterface.__subclasses__"
   ]
  },
  "type": "module"
 },
 "neurodocker.generators.common.ContainerSpecGenerator": {
  "data": {
   "lineno": 99
  },
  "type": "class"
 },
 "neurodocker.generators.common.ContainerSpecGenerator.commented_header": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "neurodocker.__version__",
    "neurodocker.generators.common.datetime",
    "property"
   ]
  },
  "type": "function"
 },
 "neurodocker.generators.common.ContainerSpecGenerator.render": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "neurodocker.generators.common.ContainerSpecGenerator.save": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "FileExistsError",
    "neurodocker.generators.common.os",
    "open"
   ]
  },
  "type": "function"
 },
 "neurodocker.generators.common.ND_DIRECTORY": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "neurodocker.generators.common.NEURODOCKER_ENTRYPOINT": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "neurodocker.generators.common.SPEC_FILE": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "neurodocker.generators.common._BaseInterface": {
  "data": {
   "shadows": "neurodocker.interfaces._base._BaseInterface"
  },
  "type": "import"
 },
 "neurodocker.generators.common._Users": {
  "data": {
   "lineno": 60
  },
  "type": "class"
 },
 "neurodocker.generators.common._Users.add": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "neurodocker.generators.common._Users.clear_memory": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "neurodocker.generators.common.__version__": {
  "data": {
   "shadows": "neurodocker.__version__"
  },
  "type": "import"
 },
 "neurodocker.generators.common._add_to_entrypoint": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "neurodocker.generators.common.json"
   ]
  },
  "type": "function"
 },
 "neurodocker.generators.common._apt_install": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "neurodocker.interfaces._base.apt_install.render"
   ]
  },
  "type": "function"
 },
 "neurodocker.generators.common._get_json_spec_str": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "neurodocker.generators.common.SPEC_FILE",
    "neurodocker.generators.common.json"
   ]
  },
  "type": "function"
 },
 "neurodocker.generators.common._install": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError",
    "neurodocker.generators.common._apt_install",
    "neurodocker.generators.common._yum_install"
   ]
  },
  "type": "function"
 },
 "neurodocker.generators.common._installation_implementations": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "neurodocker.generators.common._yum_install": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "neurodocker.interfaces._base.yum_install.render"
   ]
  },
  "type": "function"
 },
 "neurodocker.generators.common.apt_install": {
  "data": {
   "shadows": "neurodocker.interfaces._base.apt_install"
  },
  "type": "import"
 },
 "neurodocker.generators.common.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "neurodocker.generators.common.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "neurodocker.generators.common.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "neurodocker.generators.common.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "neurodocker.generators.common.yum_install": {
  "data": {
   "shadows": "neurodocker.interfaces._base.yum_install"
  },
  "type": "import"
 },
 "neurodocker.generators.docker": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "neurodocker.generators.docker.logging"
   ]
  },
  "type": "module"
 },
 "neurodocker.generators.docker.ContainerSpecGenerator": {
  "data": {
   "shadows": "neurodocker.generators.common.ContainerSpecGenerator"
  },
  "type": "import"
 },
 "neurodocker.generators.docker.Dockerfile": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "dict",
    "neurodocker.generators.common.ContainerSpecGenerator",
    "neurodocker.generators.common._installation_implementations",
    "neurodocker.generators.docker._DockerfileImplementations",
    "neurodocker.generators.docker.inspect"
   ]
  },
  "type": "class"
 },
 "neurodocker.generators.docker.Dockerfile.__init__": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "neurodocker.generators.common._Users.clear_memory",
    "neurodocker.generators.docker.copy"
   ]
  },
  "type": "function"
 },
 "neurodocker.generators.docker.Dockerfile._add_header": {
  "data": {
   "lineno": 304
  },
  "type": "function"
 },
 "neurodocker.generators.docker.Dockerfile._add_json": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "neurodocker.generators.common._get_json_spec_str"
   ]
  },
  "type": "function"
 },
 "neurodocker.generators.docker.Dockerfile._ispecs_to_dockerfile_str": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "impl",
    "neurodocker.generators.common._installation_implementations.values",
    "neurodocker.generators.docker._DockerfileInterfaceFormatter",
    "neurodocker.generators.docker.logger"
   ]
  },
  "type": "function"
 },
 "neurodocker.generators.docker.Dockerfile._prep": {
  "data": {
   "lineno": 300
  },
  "type": "function"
 },
 "neurodocker.generators.docker.Dockerfile.render": {
  "data": {
   "lineno": 293
  },
  "type": "function"
 },
 "neurodocker.generators.docker._DockerfileImplementations": {
  "data": {
   "lineno": 58
  },
  "type": "class"
 },
 "neurodocker.generators.docker._DockerfileImplementations.add": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "neurodocker.generators.docker._dockerfile_base_add_copy",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "neurodocker.generators.docker._DockerfileImplementations.add_to_entrypoint": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "neurodocker.generators.common._add_to_entrypoint",
    "neurodocker.generators.docker._indent",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "neurodocker.generators.docker._DockerfileImplementations.arg": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "neurodocker.generators.docker.json",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "neurodocker.generators.docker._DockerfileImplementations.base": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "neurodocker.generators.docker._DockerfileImplementations.cmd": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "neurodocker.generators.docker.json",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "neurodocker.generators.docker._DockerfileImplementations.copy": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "neurodocker.generators.docker._dockerfile_base_add_copy",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "neurodocker.generators.docker._DockerfileImplementations.entrypoint": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "neurodocker.generators.docker.json",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "neurodocker.generators.docker._DockerfileImplementations.env": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "neurodocker.generators.docker._indent",
    "neurodocker.generators.docker.json",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "neurodocker.generators.docker._DockerfileImplementations.expose": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "staticmethod",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "neurodocker.generators.docker._DockerfileImplementations.install": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "neurodocker.generators.common._install",
    "neurodocker.generators.docker._indent",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "neurodocker.generators.docker._DockerfileImplementations.label": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "neurodocker.generators.docker._indent",
    "neurodocker.generators.docker.json",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "neurodocker.generators.docker._DockerfileImplementations.run": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "neurodocker.generators.docker._indent",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "neurodocker.generators.docker._DockerfileImplementations.run_bash": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "neurodocker.generators.docker._DockerfileImplementations",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "neurodocker.generators.docker._DockerfileImplementations.shell": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "neurodocker.generators.docker._DockerfileImplementations.user": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "neurodocker.generators.common._Users.add",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "neurodocker.generators.docker._DockerfileImplementations.volume": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "neurodocker.generators.docker.json",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "neurodocker.generators.docker._DockerfileImplementations.workdir": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "neurodocker.generators.docker._DockerfileInterfaceFormatter": {
  "data": {
   "lineno": 251
  },
  "type": "class"
 },
 "neurodocker.generators.docker._DockerfileInterfaceFormatter.__init__": {
  "data": {
   "lineno": 252
  },
  "type": "function"
 },
 "neurodocker.generators.docker._DockerfileInterfaceFormatter._render_env": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "neurodocker.generators.docker._indent"
   ]
  },
  "type": "function"
 },
 "neurodocker.generators.docker._DockerfileInterfaceFormatter._render_run": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "neurodocker.generators.docker._indent"
   ]
  },
  "type": "function"
 },
 "neurodocker.generators.docker._DockerfileInterfaceFormatter.render": {
  "data": {
   "lineno": 256
  },
  "type": "function"
 },
 "neurodocker.generators.docker._Users": {
  "data": {
   "shadows": "neurodocker.generators.common._Users"
  },
  "type": "import"
 },
 "neurodocker.generators.docker._add_to_entrypoint": {
  "data": {
   "shadows": "neurodocker.generators.common._add_to_entrypoint"
  },
  "type": "import"
 },
 "neurodocker.generators.docker._dockerfile_base_add_copy": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "neurodocker.generators.docker.os"
   ]
  },
  "type": "function"
 },
 "neurodocker.generators.docker._get_json_spec_str": {
  "data": {
   "shadows": "neurodocker.generators.common._get_json_spec_str"
  },
  "type": "import"
 },
 "neurodocker.generators.docker._indent": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "neurodocker.generators.docker._install": {
  "data": {
   "shadows": "neurodocker.generators.common._install"
  },
  "type": "import"
 },
 "neurodocker.generators.docker._installation_implementations": {
  "data": {
   "shadows": "neurodocker.generators.common._installation_implementations"
  },
  "type": "import"
 },
 "neurodocker.generators.docker.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "neurodocker.generators.docker.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "neurodocker.generators.docker.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "neurodocker.generators.docker.logger": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "neurodocker.generators.docker.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "neurodocker.generators.docker.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "neurodocker.generators.singularity": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "neurodocker.generators.singularity.logging"
   ]
  },
  "type": "module"
 },
 "neurodocker.generators.singularity.ContainerSpecGenerator": {
  "data": {
   "shadows": "neurodocker.generators.common.ContainerSpecGenerator"
  },
  "type": "import"
 },
 "neurodocker.generators.singularity.NEURODOCKER_ENTRYPOINT": {
  "data": {
   "shadows": "neurodocker.generators.common.NEURODOCKER_ENTRYPOINT"
  },
  "type": "import"
 },
 "neurodocker.generators.singularity.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "neurodocker.generators.singularity.SingularityRecipe": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "neurodocker.generators.common.ContainerSpecGenerator"
   ]
  },
  "type": "class"
 },
 "neurodocker.generators.singularity.SingularityRecipe.__init__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "dict",
    "neurodocker.generators.common._Users.clear_memory",
    "neurodocker.generators.common._installation_implementations",
    "neurodocker.generators.singularity._SingularityRecipeImplementations",
    "neurodocker.generators.singularity.copy",
    "neurodocker.generators.singularity.inspect"
   ]
  },
  "type": "function"
 },
 "neurodocker.generators.singularity.SingularityRecipe._add_json": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "neurodocker.generators.common._get_json_spec_str"
   ]
  },
  "type": "function"
 },
 "neurodocker.generators.singularity.SingularityRecipe._add_neurodocker_header": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "neurodocker.generators.singularity.SingularityRecipe._fill_parts": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "impl",
    "neurodocker.generators.common.NEURODOCKER_ENTRYPOINT",
    "neurodocker.generators.common._installation_implementations.values",
    "neurodocker.generators.singularity.logger"
   ]
  },
  "type": "function"
 },
 "neurodocker.generators.singularity.SingularityRecipe._render_environment": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "neurodocker.generators.singularity.SingularityRecipe._render_files": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "neurodocker.generators.singularity.SingularityRecipe._render_header": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "neurodocker.generators.singularity.SingularityRecipe._render_help": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "neurodocker.generators.singularity.SingularityRecipe._render_labels": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "neurodocker.generators.singularity.SingularityRecipe._render_post": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "neurodocker.generators.singularity.SingularityRecipe._render_runscript": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "neurodocker.generators.singularity.SingularityRecipe._render_setup": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "neurodocker.generators.singularity.SingularityRecipe._render_test": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "neurodocker.generators.singularity.SingularityRecipe.render": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "map"
   ]
  },
  "type": "function"
 },
 "neurodocker.generators.singularity.SingularityRecipe.render._render_one": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "getattr",
    "renderer"
   ]
  },
  "type": "function"
 },
 "neurodocker.generators.singularity._SingularityRecipeImplementations": {
  "data": {
   "lineno": 19
  },
  "type": "class"
 },
 "neurodocker.generators.singularity._SingularityRecipeImplementations.__init__": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "neurodocker.generators.singularity._SingularityRecipeImplementations.add_to_entrypoint": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "neurodocker.generators.common._add_to_entrypoint"
   ]
  },
  "type": "function"
 },
 "neurodocker.generators.singularity._SingularityRecipeImplementations.base": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "neurodocker.generators.singularity._SingularityRecipeImplementations.copy": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "neurodocker.generators.singularity._SingularityRecipeImplementations.entrypoint": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "neurodocker.generators.singularity._SingularityRecipeImplementations.env": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "neurodocker.generators.singularity._SingularityRecipeImplementations.install": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "neurodocker.generators.common._install"
   ]
  },
  "type": "function"
 },
 "neurodocker.generators.singularity._SingularityRecipeImplementations.run": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "neurodocker.generators.singularity._SingularityRecipeImplementations.run_bash": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "neurodocker.generators.singularity._SingularityRecipeImplementations.user": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "neurodocker.generators.common._Users.add"
   ]
  },
  "type": "function"
 },
 "neurodocker.generators.singularity._SingularityRecipeImplementations.workdir": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "neurodocker.generators.singularity._Users": {
  "data": {
   "shadows": "neurodocker.generators.common._Users"
  },
  "type": "import"
 },
 "neurodocker.generators.singularity._add_to_entrypoint": {
  "data": {
   "shadows": "neurodocker.generators.common._add_to_entrypoint"
  },
  "type": "import"
 },
 "neurodocker.generators.singularity._get_json_spec_str": {
  "data": {
   "shadows": "neurodocker.generators.common._get_json_spec_str"
  },
  "type": "import"
 },
 "neurodocker.generators.singularity._install": {
  "data": {
   "shadows": "neurodocker.generators.common._install"
  },
  "type": "import"
 },
 "neurodocker.generators.singularity._installation_implementations": {
  "data": {
   "shadows": "neurodocker.generators.common._installation_implementations"
  },
  "type": "import"
 },
 "neurodocker.generators.singularity.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "neurodocker.generators.singularity.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "neurodocker.generators.singularity.logger": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "neurodocker.generators.singularity.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "neurodocker.interfaces": {
  "data": {},
  "type": "module"
 },
 "neurodocker.interfaces.AFNI": {
  "data": {
   "shadows": "neurodocker.interfaces.interfaces.AFNI"
  },
  "type": "import"
 },
 "neurodocker.interfaces.ANTs": {
  "data": {
   "shadows": "neurodocker.interfaces.interfaces.ANTs"
  },
  "type": "import"
 },
 "neurodocker.interfaces.Convert3D": {
  "data": {
   "shadows": "neurodocker.interfaces.interfaces.Convert3D"
  },
  "type": "import"
 },
 "neurodocker.interfaces.Dcm2niix": {
  "data": {
   "shadows": "neurodocker.interfaces.interfaces.Dcm2niix"
  },
  "type": "import"
 },
 "neurodocker.interfaces.FSL": {
  "data": {
   "shadows": "neurodocker.interfaces.interfaces.FSL"
  },
  "type": "import"
 },
 "neurodocker.interfaces.FreeSurfer": {
  "data": {
   "shadows": "neurodocker.interfaces.interfaces.FreeSurfer"
  },
  "type": "import"
 },
 "neurodocker.interfaces.MINC": {
  "data": {
   "shadows": "neurodocker.interfaces.interfaces.MINC"
  },
  "type": "import"
 },
 "neurodocker.interfaces.MRtrix3": {
  "data": {
   "shadows": "neurodocker.interfaces.interfaces.MRtrix3"
  },
  "type": "import"
 },
 "neurodocker.interfaces.MatlabMCR": {
  "data": {
   "shadows": "neurodocker.interfaces.interfaces.MatlabMCR"
  },
  "type": "import"
 },
 "neurodocker.interfaces.Miniconda": {
  "data": {
   "shadows": "neurodocker.interfaces.interfaces.Miniconda"
  },
  "type": "import"
 },
 "neurodocker.interfaces.NeuroDebian": {
  "data": {
   "shadows": "neurodocker.interfaces.interfaces.NeuroDebian"
  },
  "type": "import"
 },
 "neurodocker.interfaces.PETPVC": {
  "data": {
   "shadows": "neurodocker.interfaces.interfaces.PETPVC"
  },
  "type": "import"
 },
 "neurodocker.interfaces.SPM12": {
  "data": {
   "shadows": "neurodocker.interfaces.interfaces.SPM12"
  },
  "type": "import"
 },
 "neurodocker.interfaces._base": {
  "data": {
   "symbols_in_volume": [
    "neurodocker.interfaces._base._load_global_specs",
    "neurodocker.interfaces._base.jinja2"
   ]
  },
  "type": "module"
 },
 "neurodocker.interfaces._base.GENERIC_VERSION": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "neurodocker.interfaces._base._BaseInterface": {
  "data": {
   "lineno": 178
  },
  "type": "class"
 },
 "neurodocker.interfaces._base._BaseInterface.__init__": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "ValueError",
    "copy.deepcopy",
    "neurodocker.interfaces._base._Resolver",
    "neurodocker.interfaces._base._global_specs",
    "neurodocker.interfaces._base._interface_exists_in_yaml"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces._base._BaseInterface._get_debs": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces._base._BaseInterface._get_dependencies": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces._base._BaseInterface._pretty_name": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces._base._BaseInterface.dependencies": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces._base._BaseInterface.env": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces._base._BaseInterface.install_debs": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "ValueError",
    "neurodocker.interfaces._base.deb_install"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces._base._BaseInterface.install_dependencies": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "ValueError",
    "neurodocker.interfaces._base.apt_install",
    "neurodocker.interfaces._base.yum_install",
    "sorted"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces._base._BaseInterface.install_path": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "neurodocker.interfaces._base.posixpath",
    "property"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces._base._BaseInterface.method": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces._base._BaseInterface.name": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces._base._BaseInterface.pkg_manager": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces._base._BaseInterface.render_env": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "neurodocker.interfaces._base.jinja2"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces._base._BaseInterface.render_run": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "neurodocker.interfaces._base.jinja2"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces._base._BaseInterface.run": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces._base._BaseInterface.version": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces._base._BaseInterface.versions": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces._base._Resolver": {
  "data": {
   "lineno": 81
  },
  "type": "class"
 },
 "neurodocker.interfaces._base._Resolver.__init__": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "neurodocker.interfaces._base.GENERIC_VERSION"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces._base._Resolver.binaries_has_url": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "KeyError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces._base._Resolver.binaries_url": {
  "data": {
   "lineno": 169
  },
  "type": "function"
 },
 "neurodocker.interfaces._base._Resolver.check_binaries_has_url": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces._base._Resolver.check_version_exists": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces._base._Resolver.check_version_has_method": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces._base._Resolver.check_version_method_has_instructions": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces._base._Resolver.get_version_key": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "neurodocker.interfaces._base.GENERIC_VERSION"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces._base._Resolver.version_exists": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "neurodocker.interfaces._base._Resolver.version_has_method": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "neurodocker.interfaces._base._Resolver.version_method_has_instructions": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "neurodocker.interfaces._base._Resolver.versions": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "property",
    "set"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces._base._global_specs": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "neurodocker.interfaces._base._interface_exists_in_yaml": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "neurodocker.interfaces._base._global_specs"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces._base._load_global_specs": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "load_global_specs",
    "neurodocker.interfaces._base.os"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces._base._load_global_specs.load_global_specs": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "load_interface_spec",
    "neurodocker.interfaces._base.glob"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces._base._load_global_specs.load_global_specs.load_interface_spec": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "neurodocker.interfaces._base.os",
    "neurodocker.utils.load_yaml"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces._base.apt_install": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "neurodocker.interfaces._base.deb_install": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "neurodocker.interfaces._base.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "neurodocker.interfaces._base.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "neurodocker.interfaces._base.jinja2": {
  "data": {
   "shadows": "jinja2"
  },
  "type": "import"
 },
 "neurodocker.interfaces._base.load_yaml": {
  "data": {
   "shadows": "neurodocker.utils.load_yaml"
  },
  "type": "import"
 },
 "neurodocker.interfaces._base.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "neurodocker.interfaces._base.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "neurodocker.interfaces._base.yum_install": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "neurodocker.interfaces.interfaces": {
  "data": {},
  "type": "module"
 },
 "neurodocker.interfaces.interfaces.AFNI": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "neurodocker.interfaces._base._BaseInterface"
   ]
  },
  "type": "class"
 },
 "neurodocker.interfaces.interfaces.AFNI.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.interfaces.ANTs": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "neurodocker.interfaces._base._BaseInterface"
   ]
  },
  "type": "class"
 },
 "neurodocker.interfaces.interfaces.ANTs.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.interfaces.Convert3D": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "neurodocker.interfaces._base._BaseInterface"
   ]
  },
  "type": "class"
 },
 "neurodocker.interfaces.interfaces.Convert3D.__init__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.interfaces.Dcm2niix": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "neurodocker.interfaces._base._BaseInterface"
   ]
  },
  "type": "class"
 },
 "neurodocker.interfaces.interfaces.Dcm2niix.__init__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.interfaces.FSL": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "neurodocker.interfaces._base._BaseInterface"
   ]
  },
  "type": "class"
 },
 "neurodocker.interfaces.interfaces.FSL.__init__": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "neurodocker.interfaces.interfaces.posixpath",
    "str",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.interfaces.FreeSurfer": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "neurodocker.interfaces._base._BaseInterface"
   ]
  },
  "type": "class"
 },
 "neurodocker.interfaces.interfaces.FreeSurfer.__init__": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "neurodocker.interfaces.interfaces.FreeSurfer",
    "neurodocker.interfaces.interfaces.posixpath",
    "str",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.interfaces.MINC": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "neurodocker.interfaces._base._BaseInterface"
   ]
  },
  "type": "class"
 },
 "neurodocker.interfaces.interfaces.MINC.__init__": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.interfaces.MRtrix3": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "neurodocker.interfaces._base._BaseInterface"
   ]
  },
  "type": "class"
 },
 "neurodocker.interfaces.interfaces.MRtrix3.__init__": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.interfaces.MatlabMCR": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "neurodocker.interfaces._base._BaseInterface"
   ]
  },
  "type": "class"
 },
 "neurodocker.interfaces.interfaces.MatlabMCR.__init__": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.interfaces.MatlabMCR.mcr_version": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "property"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.interfaces.Miniconda": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "neurodocker.interfaces._base._BaseInterface"
   ]
  },
  "type": "class"
 },
 "neurodocker.interfaces.interfaces.Miniconda.__init__": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "neurodocker.interfaces.interfaces.Miniconda",
    "super"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.interfaces.Miniconda.render_env": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "neurodocker.interfaces.interfaces.Miniconda",
    "super"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.interfaces.Miniconda.render_run": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "neurodocker.interfaces.interfaces.Miniconda",
    "super"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.interfaces.NDFreeze": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "neurodocker.interfaces._base._BaseInterface"
   ]
  },
  "type": "class"
 },
 "neurodocker.interfaces.interfaces.NDFreeze.__init__": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "ValueError",
    "super"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.interfaces.NeuroDebian": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "neurodocker.interfaces._base._BaseInterface"
   ]
  },
  "type": "class"
 },
 "neurodocker.interfaces.interfaces.NeuroDebian.__init__": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "ValueError",
    "neurodocker.interfaces.interfaces.NeuroDebian",
    "super"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.interfaces.PETPVC": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "neurodocker.interfaces._base._BaseInterface"
   ]
  },
  "type": "class"
 },
 "neurodocker.interfaces.interfaces.PETPVC.__init__": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.interfaces.SPM12": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "neurodocker.interfaces._base._BaseInterface"
   ]
  },
  "type": "class"
 },
 "neurodocker.interfaces.interfaces.SPM12.__init__": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "neurodocker.interfaces.interfaces.MatlabMCR",
    "neurodocker.interfaces.interfaces.posixpath",
    "super"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.interfaces.SPM12.render_env": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.interfaces.SPM12.render_run": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.interfaces.VNC": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "neurodocker.interfaces._base._BaseInterface"
   ]
  },
  "type": "class"
 },
 "neurodocker.interfaces.interfaces.VNC.__init__": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "super"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.interfaces._BaseInterface": {
  "data": {
   "shadows": "neurodocker.interfaces._base._BaseInterface"
  },
  "type": "import"
 },
 "neurodocker.interfaces.interfaces._Header": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "neurodocker.interfaces._base._BaseInterface"
   ]
  },
  "type": "class"
 },
 "neurodocker.interfaces.interfaces._Header.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.interfaces.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "neurodocker.interfaces.tests": {
  "data": {},
  "type": "module"
 },
 "neurodocker.interfaces.tests.test_afni": {
  "data": {},
  "type": "module"
 },
 "neurodocker.interfaces.tests.test_afni.AFNI": {
  "data": {
   "shadows": "neurodocker.interfaces.AFNI"
  },
  "type": "import"
 },
 "neurodocker.interfaces.tests.test_afni.TestAFNI": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "neurodocker.interfaces.tests.test_afni.TestAFNI.test_docker": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "neurodocker.interfaces.tests.utils.test_docker_container_from_specs"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.tests.test_afni.TestAFNI.test_invalid_binaries": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ValueError",
    "neurodocker.interfaces.AFNI",
    "neurodocker.interfaces.tests.test_afni.pytest"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.tests.test_afni.TestAFNI.test_singularity": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "neurodocker.interfaces.tests.utils.test_singularity_container_from_specs"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.tests.test_afni.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "neurodocker.interfaces.tests.test_afni.utils": {
  "data": {
   "shadows": "neurodocker.interfaces.tests.utils"
  },
  "type": "import"
 },
 "neurodocker.interfaces.tests.test_ants": {
  "data": {},
  "type": "module"
 },
 "neurodocker.interfaces.tests.test_ants.ANTs": {
  "data": {
   "shadows": "neurodocker.interfaces.ANTs"
  },
  "type": "import"
 },
 "neurodocker.interfaces.tests.test_ants.TestANTs": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "neurodocker.interfaces.tests.test_ants.TestANTs.test_docker": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "neurodocker.interfaces.tests.utils.test_docker_container_from_specs"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.tests.test_ants.TestANTs.test_invalid_binaries": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ValueError",
    "neurodocker.interfaces.ANTs",
    "neurodocker.interfaces.tests.test_ants.pytest"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.tests.test_ants.TestANTs.test_singularity": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "neurodocker.interfaces.tests.utils.test_singularity_container_from_specs"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.tests.test_ants.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "neurodocker.interfaces.tests.test_ants.utils": {
  "data": {
   "shadows": "neurodocker.interfaces.tests.utils"
  },
  "type": "import"
 },
 "neurodocker.interfaces.tests.test_convert3d": {
  "data": {},
  "type": "module"
 },
 "neurodocker.interfaces.tests.test_convert3d.TestConvert3D": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "neurodocker.interfaces.tests.test_convert3d.TestConvert3D.test_docker": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "neurodocker.interfaces.tests.utils.test_docker_container_from_specs"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.tests.test_convert3d.TestConvert3D.test_singularity": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "neurodocker.interfaces.tests.utils.test_singularity_container_from_specs"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.tests.test_convert3d.utils": {
  "data": {
   "shadows": "neurodocker.interfaces.tests.utils"
  },
  "type": "import"
 },
 "neurodocker.interfaces.tests.test_dcm2niix": {
  "data": {},
  "type": "module"
 },
 "neurodocker.interfaces.tests.test_dcm2niix.TestDcm2niix": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "neurodocker.interfaces.tests.test_dcm2niix.TestDcm2niix.test_docker": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "neurodocker.interfaces.tests.utils.test_docker_container_from_specs"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.tests.test_dcm2niix.TestDcm2niix.test_singularity": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "neurodocker.interfaces.tests.utils.test_singularity_container_from_specs"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.tests.test_dcm2niix.utils": {
  "data": {
   "shadows": "neurodocker.interfaces.tests.utils"
  },
  "type": "import"
 },
 "neurodocker.interfaces.tests.test_freesurfer": {
  "data": {},
  "type": "module"
 },
 "neurodocker.interfaces.tests.test_freesurfer.TestFreeSurfer": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "neurodocker.interfaces.tests.test_freesurfer.TestFreeSurfer.test_docker": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "neurodocker.interfaces.tests.utils.test_docker_container_from_specs"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.tests.test_freesurfer.TestFreeSurfer.test_singularity": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "neurodocker.interfaces.tests.utils.test_singularity_container_from_specs"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.tests.test_freesurfer.utils": {
  "data": {
   "shadows": "neurodocker.interfaces.tests.utils"
  },
  "type": "import"
 },
 "neurodocker.interfaces.tests.test_fsl": {
  "data": {},
  "type": "module"
 },
 "neurodocker.interfaces.tests.test_fsl.TestFSL": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "neurodocker.interfaces.tests.test_fsl.TestFSL.test_docker": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "neurodocker.interfaces.tests.utils.test_docker_container_from_specs"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.tests.test_fsl.TestFSL.test_singularity": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "neurodocker.interfaces.tests.utils.test_singularity_container_from_specs"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.tests.test_fsl.utils": {
  "data": {
   "shadows": "neurodocker.interfaces.tests.utils"
  },
  "type": "import"
 },
 "neurodocker.interfaces.tests.test_matlabmcr": {
  "data": {},
  "type": "module"
 },
 "neurodocker.interfaces.tests.test_minc": {
  "data": {},
  "type": "module"
 },
 "neurodocker.interfaces.tests.test_minc.TestMINC": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "neurodocker.interfaces.tests.test_minc.TestMINC.test_docker": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "neurodocker.interfaces.tests.utils.test_docker_container_from_specs"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.tests.test_minc.TestMINC.test_singularity": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "neurodocker.interfaces.tests.utils.test_singularity_container_from_specs"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.tests.test_minc.utils": {
  "data": {
   "shadows": "neurodocker.interfaces.tests.utils"
  },
  "type": "import"
 },
 "neurodocker.interfaces.tests.test_miniconda": {
  "data": {},
  "type": "module"
 },
 "neurodocker.interfaces.tests.test_miniconda.TestMiniconda": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "neurodocker.interfaces.tests.test_miniconda.TestMiniconda.test_docker": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "neurodocker.interfaces.tests.utils.test_docker_container_from_specs"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.tests.test_miniconda.TestMiniconda.test_singularity": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "neurodocker.interfaces.tests.utils.test_singularity_container_from_specs"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.tests.test_miniconda.utils": {
  "data": {
   "shadows": "neurodocker.interfaces.tests.utils"
  },
  "type": "import"
 },
 "neurodocker.interfaces.tests.test_mrtrix": {
  "data": {},
  "type": "module"
 },
 "neurodocker.interfaces.tests.test_mrtrix.TestMRtrix3": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "neurodocker.interfaces.tests.test_mrtrix.TestMRtrix3.test_docker": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "neurodocker.interfaces.tests.utils.test_docker_container_from_specs"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.tests.test_mrtrix.TestMRtrix3.test_singularity": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "neurodocker.interfaces.tests.utils.test_singularity_container_from_specs"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.tests.test_mrtrix.utils": {
  "data": {
   "shadows": "neurodocker.interfaces.tests.utils"
  },
  "type": "import"
 },
 "neurodocker.interfaces.tests.test_neurodebian": {
  "data": {},
  "type": "module"
 },
 "neurodocker.interfaces.tests.test_neurodebian.TestNeuroDebian": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "neurodocker.interfaces.tests.test_neurodebian.TestNeuroDebian.test_docker": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "neurodocker.interfaces.tests.utils.test_docker_container_from_specs"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.tests.test_neurodebian.TestNeuroDebian.test_singularity": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "neurodocker.interfaces.tests.utils.test_singularity_container_from_specs"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.tests.test_neurodebian.utils": {
  "data": {
   "shadows": "neurodocker.interfaces.tests.utils"
  },
  "type": "import"
 },
 "neurodocker.interfaces.tests.test_petpvc": {
  "data": {},
  "type": "module"
 },
 "neurodocker.interfaces.tests.test_petpvc.TestPETPVC": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "neurodocker.interfaces.tests.test_petpvc.TestPETPVC.test_docker": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "neurodocker.interfaces.tests.utils.test_docker_container_from_specs"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.tests.test_petpvc.TestPETPVC.test_singularity": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "neurodocker.interfaces.tests.utils.test_singularity_container_from_specs"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.tests.test_petpvc.utils": {
  "data": {
   "shadows": "neurodocker.interfaces.tests.utils"
  },
  "type": "import"
 },
 "neurodocker.interfaces.tests.test_spm12": {
  "data": {},
  "type": "module"
 },
 "neurodocker.interfaces.tests.test_spm12.TestSPM": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "neurodocker.interfaces.tests.test_spm12.TestSPM.test_docker": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "neurodocker.interfaces.tests.utils.test_docker_container_from_specs"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.tests.test_spm12.TestSPM.test_singularity": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "neurodocker.interfaces.tests.utils.test_singularity_container_from_specs"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.tests.test_spm12.utils": {
  "data": {
   "shadows": "neurodocker.interfaces.tests.utils"
  },
  "type": "import"
 },
 "neurodocker.interfaces.tests.utils": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "neurodocker.interfaces.tests.utils._volumes",
    "neurodocker.interfaces.tests.utils.here",
    "neurodocker.interfaces.tests.utils.logging",
    "neurodocker.interfaces.tests.utils.os",
    "pathlib.Path.home"
   ]
  },
  "type": "module"
 },
 "neurodocker.interfaces.tests.utils.DOCKER_CACHEDIR": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "neurodocker.interfaces.tests.utils.Dockerfile": {
  "data": {
   "shadows": "neurodocker.generators.Dockerfile"
  },
  "type": "import"
 },
 "neurodocker.interfaces.tests.utils.PUSH_IMAGES": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "neurodocker.interfaces.tests.utils.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "neurodocker.interfaces.tests.utils.SINGULARITY_CACHEDIR": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "neurodocker.interfaces.tests.utils.SingularityRecipe": {
  "data": {
   "shadows": "neurodocker.generators.SingularityRecipe"
  },
  "type": "import"
 },
 "neurodocker.interfaces.tests.utils._container_run_kwds": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "neurodocker.interfaces.tests.utils._dockerfiles_equivalent": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "neurodocker.interfaces.tests.utils._prune_dockerfile",
    "print"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.tests.utils._prune_dockerfile": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "neurodocker.interfaces.tests.utils._volumes": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "neurodocker.interfaces.tests.utils.docker_is_running": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.tests.utils.get_docker_client": {
  "data": {
   "shadows": "neurodocker.utils.get_docker_client"
  },
  "type": "import"
 },
 "neurodocker.interfaces.tests.utils.get_singularity_client": {
  "data": {
   "shadows": "neurodocker.utils.get_singularity_client"
  },
  "type": "import"
 },
 "neurodocker.interfaces.tests.utils.here": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "neurodocker.interfaces.tests.utils.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "neurodocker.interfaces.tests.utils.logger": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "neurodocker.interfaces.tests.utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "neurodocker.interfaces.tests.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "neurodocker.interfaces.tests.utils.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "neurodocker.interfaces.tests.utils.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "neurodocker.interfaces.tests.utils.test_docker_container_from_specs": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "_dockerfiles_equivalent",
    "neurodocker.generators.Dockerfile",
    "neurodocker.interfaces.tests.utils.DOCKER_CACHEDIR",
    "neurodocker.interfaces.tests.utils._container_run_kwds",
    "neurodocker.interfaces.tests.utils.docker_is_running",
    "neurodocker.interfaces.tests.utils.io",
    "neurodocker.interfaces.tests.utils.logger",
    "neurodocker.interfaces.tests.utils.os",
    "neurodocker.interfaces.tests.utils.posixpath",
    "neurodocker.utils.get_docker_client",
    "open"
   ]
  },
  "type": "function"
 },
 "neurodocker.interfaces.tests.utils.test_singularity_container_from_specs": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "_dockerfiles_equivalent",
    "neurodocker.generators.SingularityRecipe",
    "neurodocker.interfaces.tests.utils.SINGULARITY_CACHEDIR",
    "neurodocker.interfaces.tests.utils._volumes",
    "neurodocker.interfaces.tests.utils.here",
    "neurodocker.interfaces.tests.utils.logger",
    "neurodocker.interfaces.tests.utils.os",
    "neurodocker.interfaces.tests.utils.posixpath",
    "neurodocker.interfaces.tests.utils.subprocess",
    "neurodocker.utils.get_singularity_client",
    "open"
   ]
  },
  "type": "function"
 },
 "neurodocker.neurodocker": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "neurodocker.neurodocker.logging",
    "neurodocker.neurodocker.main"
   ]
  },
  "type": "module"
 },
 "neurodocker.neurodocker.Action": {
  "data": {
   "shadows": "argparse.Action"
  },
  "type": "import"
 },
 "neurodocker.neurodocker.ArgumentParser": {
  "data": {
   "shadows": "argparse.ArgumentParser"
  },
  "type": "import"
 },
 "neurodocker.neurodocker.Dockerfile": {
  "data": {
   "shadows": "neurodocker.generators.Dockerfile"
  },
  "type": "import"
 },
 "neurodocker.neurodocker.OrderedArgs": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "argparse.Action"
   ]
  },
  "type": "class"
 },
 "neurodocker.neurodocker.OrderedArgs.__call__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "neurodocker.neurodocker.RawDescriptionHelpFormatter": {
  "data": {
   "shadows": "argparse.RawDescriptionHelpFormatter"
  },
  "type": "import"
 },
 "neurodocker.neurodocker.ReproZipMinimizer": {
  "data": {
   "shadows": "neurodocker.reprozip.ReproZipMinimizer"
  },
  "type": "import"
 },
 "neurodocker.neurodocker.SingularityRecipe": {
  "data": {
   "shadows": "neurodocker.generators.SingularityRecipe"
  },
  "type": "import"
 },
 "neurodocker.neurodocker.__version__": {
  "data": {
   "shadows": "neurodocker.__version__"
  },
  "type": "import"
 },
 "neurodocker.neurodocker._add_generate_common_arguments": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "neurodocker.generators.common._installation_implementations._servers.keys",
    "neurodocker.generators.common._installation_implementations.keys",
    "neurodocker.neurodocker.OrderedArgs",
    "neurodocker.neurodocker._list_of_kv"
   ]
  },
  "type": "function"
 },
 "neurodocker.neurodocker._add_generate_docker_arguments": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "neurodocker.neurodocker.OrderedArgs",
    "neurodocker.neurodocker._list_of_kv"
   ]
  },
  "type": "function"
 },
 "neurodocker.neurodocker._add_generate_singularity_arguments": {
  "data": {
   "lineno": 252
  },
  "type": "function"
 },
 "neurodocker.neurodocker._add_reprozip_merge_arguments": {
  "data": {
   "lineno": 272
  },
  "type": "function"
 },
 "neurodocker.neurodocker._add_reprozip_trace_arguments": {
  "data": {
   "lineno": 257
  },
  "type": "function"
 },
 "neurodocker.neurodocker._installation_implementations": {
  "data": {
   "shadows": "neurodocker.generators.common._installation_implementations"
  },
  "type": "import"
 },
 "neurodocker.neurodocker._list_of_kv": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "neurodocker.neurodocker._validate_generate_args": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "neurodocker.neurodocker.create_parser": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "__doc__",
    "argparse.ArgumentParser",
    "argparse.RawDescriptionHelpFormatter",
    "neurodocker.__version__",
    "neurodocker.neurodocker._add_generate_common_arguments",
    "neurodocker.neurodocker._add_generate_docker_arguments",
    "neurodocker.neurodocker._add_generate_singularity_arguments",
    "neurodocker.neurodocker._add_reprozip_merge_arguments",
    "neurodocker.neurodocker._add_reprozip_trace_arguments"
   ]
  },
  "type": "function"
 },
 "neurodocker.neurodocker.etelemetry": {
  "data": {
   "shadows": "etelemetry"
  },
  "type": "import"
 },
 "neurodocker.neurodocker.generate": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "neurodocker.generators.Dockerfile",
    "neurodocker.generators.SingularityRecipe",
    "neurodocker.neurodocker.json",
    "neurodocker.utils._namespace_to_specs",
    "neurodocker.utils.load_json",
    "print"
   ]
  },
  "type": "function"
 },
 "neurodocker.neurodocker.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "neurodocker.neurodocker.logger": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "neurodocker.neurodocker.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "neurodocker.neurodocker.main": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "neurodocker.__version__",
    "neurodocker.neurodocker.etelemetry",
    "neurodocker.neurodocker.generate",
    "neurodocker.neurodocker.logger",
    "neurodocker.neurodocker.parse_args",
    "neurodocker.neurodocker.reprozip_merge",
    "neurodocker.neurodocker.reprozip_trace",
    "neurodocker.neurodocker.sys",
    "neurodocker.utils.set_log_level",
    "print",
    "vars"
   ]
  },
  "type": "function"
 },
 "neurodocker.neurodocker.merge_pack_files": {
  "data": {
   "shadows": "neurodocker.reprozip.merge_pack_files"
  },
  "type": "import"
 },
 "neurodocker.neurodocker.parse_args": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "_validate_generate_args",
    "neurodocker.neurodocker.create_parser"
   ]
  },
  "type": "function"
 },
 "neurodocker.neurodocker.reprozip_merge": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "neurodocker.reprozip.merge_pack_files"
   ]
  },
  "type": "function"
 },
 "neurodocker.neurodocker.reprozip_trace": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "neurodocker.neurodocker.logger",
    "neurodocker.reprozip.ReproZipMinimizer",
    "vars"
   ]
  },
  "type": "function"
 },
 "neurodocker.neurodocker.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "neurodocker.neurodocker.utils": {
  "data": {
   "shadows": "neurodocker.utils"
  },
  "type": "import"
 },
 "neurodocker.parser": {
  "data": {},
  "type": "module"
 },
 "neurodocker.parser.Dockerfile": {
  "data": {
   "shadows": "neurodocker.generators.docker.Dockerfile"
  },
  "type": "import"
 },
 "neurodocker.parser.SingularityRecipe": {
  "data": {
   "shadows": "neurodocker.generators.singularity.SingularityRecipe"
  },
  "type": "import"
 },
 "neurodocker.parser._SpecsParser": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "neurodocker.generators.docker.Dockerfile._implementations.keys"
   ]
  },
  "type": "class"
 },
 "neurodocker.parser._SpecsParser.__init__": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "neurodocker.parser._SpecsParser._run": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "neurodocker.parser._SpecsParser._validate_keys": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "neurodocker.parser._check_for_invalid_keys",
    "neurodocker.utils._count_key_occurence_list_of_tuples"
   ]
  },
  "type": "function"
 },
 "neurodocker.parser._SpecsParser._validate_software_options": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "neurodocker.generators.common._installation_implementations",
    "neurodocker.generators.common._installation_implementations.keys",
    "neurodocker.parser.inspect"
   ]
  },
  "type": "function"
 },
 "neurodocker.parser._check_for_invalid_keys": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "KeyError",
    "set"
   ]
  },
  "type": "function"
 },
 "neurodocker.parser._installation_implementations": {
  "data": {
   "shadows": "neurodocker.generators.common._installation_implementations"
  },
  "type": "import"
 },
 "neurodocker.parser.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "neurodocker.parser.utils": {
  "data": {
   "shadows": "neurodocker.utils"
  },
  "type": "import"
 },
 "neurodocker.reprozip": {
  "data": {},
  "type": "module"
 },
 "neurodocker.reprozip.ReproZipMinimizer": {
  "data": {
   "shadows": "neurodocker.reprozip.trace.ReproZipMinimizer"
  },
  "type": "import"
 },
 "neurodocker.reprozip.gentle": {
  "data": {},
  "type": "module"
 },
 "neurodocker.reprozip.gentle._prune": {
  "data": {
   "symbols_in_volume": [
    "__doc__",
    "__name__",
    "argparse.ArgumentParser",
    "neurodocker.reprozip.gentle._prune.args",
    "neurodocker.reprozip.gentle._prune.main",
    "neurodocker.reprozip.gentle._prune.p"
   ]
  },
  "type": "module"
 },
 "neurodocker.reprozip.gentle._prune.ArgumentParser": {
  "data": {
   "shadows": "argparse.ArgumentParser"
  },
  "type": "import"
 },
 "neurodocker.reprozip.gentle._prune.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "neurodocker.reprozip.gentle._prune._in_docker": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "open",
    "pathlib.Path"
   ]
  },
  "type": "function"
 },
 "neurodocker.reprozip.gentle._prune.args": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "neurodocker.reprozip.gentle._prune.main": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "RuntimeError",
    "UnicodeEncodeError",
    "ValueError",
    "isinstance",
    "len",
    "neurodocker.reprozip.gentle._prune._in_docker",
    "neurodocker.reprozip.gentle._prune.yaml",
    "open",
    "pathlib.Path",
    "print",
    "set",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "neurodocker.reprozip.gentle._prune.p": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "neurodocker.reprozip.gentle._prune.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "neurodocker.reprozip.gentle.trace": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "neurodocker.reprozip.gentle.trace.BASE_PATH",
    "neurodocker.reprozip.gentle.trace.logging",
    "neurodocker.reprozip.gentle.trace.os"
   ]
  },
  "type": "module"
 },
 "neurodocker.reprozip.gentle.trace.ArgumentParser": {
  "data": {
   "shadows": "argparse.ArgumentParser"
  },
  "type": "import"
 },
 "neurodocker.reprozip.gentle.trace.BASE_PATH": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "neurodocker.reprozip.gentle.trace.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "neurodocker.reprozip.gentle.trace.PRUNE_SCRIPT": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "neurodocker.reprozip.gentle.trace.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "neurodocker.reprozip.gentle.trace.TRACE_SCRIPT": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "neurodocker.reprozip.gentle.trace._get_mounts": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "neurodocker.utils.get_docker_client"
   ]
  },
  "type": "function"
 },
 "neurodocker.reprozip.gentle.trace.copy_file_to_container": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "AttributeError",
    "io.BytesIO",
    "neurodocker.reprozip.gentle.trace.os",
    "neurodocker.reprozip.gentle.trace.tarfile",
    "neurodocker.utils.get_docker_client"
   ]
  },
  "type": "function"
 },
 "neurodocker.reprozip.gentle.trace.get_docker_client": {
  "data": {
   "shadows": "neurodocker.utils.get_docker_client"
  },
  "type": "import"
 },
 "neurodocker.reprozip.gentle.trace.logger": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "neurodocker.reprozip.gentle.trace.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "neurodocker.reprozip.gentle.trace.main": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "__doc__",
    "argparse.ArgumentParser",
    "neurodocker.reprozip.gentle.trace.trace_and_prune"
   ]
  },
  "type": "function"
 },
 "neurodocker.reprozip.gentle.trace.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "neurodocker.reprozip.gentle.trace.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "neurodocker.reprozip.gentle.trace.trace_and_prune": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "RuntimeError",
    "ValueError",
    "input",
    "isinstance",
    "len",
    "neurodocker.reprozip.gentle.trace.PRUNE_SCRIPT",
    "neurodocker.reprozip.gentle.trace.TRACE_SCRIPT",
    "neurodocker.reprozip.gentle.trace._get_mounts",
    "neurodocker.reprozip.gentle.trace.copy_file_to_container",
    "neurodocker.reprozip.gentle.trace.logger",
    "neurodocker.utils.get_docker_client",
    "pathlib.Path",
    "print",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "neurodocker.reprozip.merge": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "neurodocker.reprozip.merge.logging"
   ]
  },
  "type": "module"
 },
 "neurodocker.reprozip.merge._Namespace": {
  "data": {
   "lineno": 106
  },
  "type": "class"
 },
 "neurodocker.reprozip.merge._Namespace.__init__": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "neurodocker.reprozip.merge._check_deps": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "Exception",
    "RuntimeError",
    "neurodocker.reprozip.merge.shutil"
   ]
  },
  "type": "function"
 },
 "neurodocker.reprozip.merge._combine_traces": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "neurodocker.reprozip.merge._Namespace",
    "neurodocker.reprozip.merge._fix_config_yml",
    "neurodocker.reprozip.merge._get_distribution",
    "neurodocker.reprozip.merge.os",
    "reprozip.main.combine"
   ]
  },
  "type": "function"
 },
 "neurodocker.reprozip.merge._create_rpz": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "neurodocker.reprozip.merge.os",
    "neurodocker.reprozip.merge.tarfile"
   ]
  },
  "type": "function"
 },
 "neurodocker.reprozip.merge._extract_rpz": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "neurodocker.reprozip.merge.os",
    "neurodocker.reprozip.merge.tarfile",
    "neurodocker.reprozip.merge.tempfile"
   ]
  },
  "type": "function"
 },
 "neurodocker.reprozip.merge._fix_config_yml": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "enumerate",
    "open"
   ]
  },
  "type": "function"
 },
 "neurodocker.reprozip.merge._get_distribution": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "neurodocker.reprozip.merge.yaml",
    "open"
   ]
  },
  "type": "function"
 },
 "neurodocker.reprozip.merge._merge_data_dirs": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "neurodocker.reprozip.merge.os",
    "neurodocker.reprozip.merge.subprocess",
    "neurodocker.reprozip.merge.tarfile",
    "neurodocker.reprozip.merge.tempfile"
   ]
  },
  "type": "function"
 },
 "neurodocker.reprozip.merge._write_version2_file": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "neurodocker.reprozip.merge.os",
    "open"
   ]
  },
  "type": "function"
 },
 "neurodocker.reprozip.merge.combine": {
  "data": {
   "shadows": "reprozip.main.combine"
  },
  "type": "import"
 },
 "neurodocker.reprozip.merge.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "neurodocker.reprozip.merge.logger": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "neurodocker.reprozip.merge.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "neurodocker.reprozip.merge.merge_pack_files": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "ValueError",
    "glob.glob",
    "len",
    "neurodocker.reprozip.merge._check_deps",
    "neurodocker.reprozip.merge._combine_traces",
    "neurodocker.reprozip.merge._create_rpz",
    "neurodocker.reprozip.merge._extract_rpz",
    "neurodocker.reprozip.merge._merge_data_dirs",
    "neurodocker.reprozip.merge._write_version2_file",
    "neurodocker.reprozip.merge.logger",
    "neurodocker.reprozip.merge.os",
    "neurodocker.reprozip.merge.tempfile"
   ]
  },
  "type": "function"
 },
 "neurodocker.reprozip.merge.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "neurodocker.reprozip.merge.reprozip": {
  "data": {
   "shadows": "reprozip"
  },
  "type": "import"
 },
 "neurodocker.reprozip.merge.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "neurodocker.reprozip.merge.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "neurodocker.reprozip.merge.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "neurodocker.reprozip.merge.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "neurodocker.reprozip.merge.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "neurodocker.reprozip.merge_pack_files": {
  "data": {
   "shadows": "neurodocker.reprozip.merge.merge_pack_files"
  },
  "type": "import"
 },
 "neurodocker.reprozip.trace": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "neurodocker.reprozip.trace.logging",
    "neurodocker.reprozip.trace.os"
   ]
  },
  "type": "module"
 },
 "neurodocker.reprozip.trace.BASE_PATH": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "neurodocker.reprozip.trace.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "neurodocker.reprozip.trace.ReproZipMinimizer": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "neurodocker.reprozip.trace.ReproZipMinimizer.__init__": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "AttributeError",
    "isinstance",
    "neurodocker.reprozip.trace.BASE_PATH",
    "neurodocker.reprozip.trace.os",
    "neurodocker.utils.get_docker_client",
    "str"
   ]
  },
  "type": "function"
 },
 "neurodocker.reprozip.trace.ReproZipMinimizer.run": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "RuntimeError",
    "neurodocker.reprozip.trace.copy_file_from_container",
    "neurodocker.reprozip.trace.copy_file_to_container",
    "neurodocker.reprozip.trace.docker",
    "neurodocker.reprozip.trace.logger",
    "neurodocker.reprozip.trace.os",
    "print"
   ]
  },
  "type": "function"
 },
 "neurodocker.reprozip.trace.copy_file_from_container": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "AttributeError",
    "Exception",
    "neurodocker.reprozip.trace.os",
    "neurodocker.reprozip.trace.tarfile",
    "neurodocker.reprozip.trace.tempfile",
    "neurodocker.utils.get_docker_client"
   ]
  },
  "type": "function"
 },
 "neurodocker.reprozip.trace.copy_file_to_container": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "AttributeError",
    "io.BytesIO",
    "neurodocker.reprozip.trace.os",
    "neurodocker.reprozip.trace.tarfile",
    "neurodocker.utils.get_docker_client"
   ]
  },
  "type": "function"
 },
 "neurodocker.reprozip.trace.docker": {
  "data": {
   "shadows": "docker"
  },
  "type": "import"
 },
 "neurodocker.reprozip.trace.get_docker_client": {
  "data": {
   "shadows": "neurodocker.utils.get_docker_client"
  },
  "type": "import"
 },
 "neurodocker.reprozip.trace.logger": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "neurodocker.reprozip.trace.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "neurodocker.reprozip.trace.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "neurodocker.reprozip.trace.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "neurodocker.reprozip.trace.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "neurodocker.set_log_level": {
  "data": {
   "shadows": "neurodocker.utils.set_log_level"
  },
  "type": "import"
 },
 "neurodocker.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "neurodocker.utils": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "neurodocker.utils.create_logger"
   ]
  },
  "type": "module"
 },
 "neurodocker.utils.Loader": {
  "data": {
   "shadows": "yaml.Loader"
  },
  "type": "import"
 },
 "neurodocker.utils._count_key_occurence_list_of_tuples": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "neurodocker.utils._get_index_of_tuple_in_instructions": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "neurodocker.utils._installation_implementations": {
  "data": {
   "shadows": "neurodocker.generators.common._installation_implementations"
  },
  "type": "import"
 },
 "neurodocker.utils._namespace_to_specs": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "_get_index_of_tuple_in_instructions",
    "neurodocker.generators.common._installation_implementations.keys",
    "neurodocker.utils._string_vals_to_bool",
    "neurodocker.utils._string_vals_to_list"
   ]
  },
  "type": "function"
 },
 "neurodocker.utils._string_vals_to_bool": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "bool",
    "int",
    "neurodocker.utils.re"
   ]
  },
  "type": "function"
 },
 "neurodocker.utils._string_vals_to_list": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "neurodocker.utils.create_logger": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "neurodocker.utils.logging"
   ]
  },
  "type": "function"
 },
 "neurodocker.utils.docker": {
  "data": {
   "shadows": "docker"
  },
  "type": "import"
 },
 "neurodocker.utils.get_docker_client": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "ImportError",
    "neurodocker.utils.docker"
   ]
  },
  "type": "function"
 },
 "neurodocker.utils.get_singularity_client": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "function"
 },
 "neurodocker.utils.is_url": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "neurodocker.utils.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "neurodocker.utils.load_json": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "neurodocker.utils.json",
    "neurodocker.utils.sys",
    "open"
   ]
  },
  "type": "function"
 },
 "neurodocker.utils.load_yaml": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "neurodocker.utils.yaml",
    "open",
    "yaml.Loader"
   ]
  },
  "type": "function"
 },
 "neurodocker.utils.logger": {
  "data": {
   "lineno": 132
  },
  "type": "constant"
 },
 "neurodocker.utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "neurodocker.utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "neurodocker.utils.save_json": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "neurodocker.utils.json",
    "open"
   ]
  },
  "type": "function"
 },
 "neurodocker.utils.set_log_level": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "neurodocker.utils.logger",
    "neurodocker.utils.logging"
   ]
  },
  "type": "function"
 },
 "neurodocker.utils.spython.main": {
  "data": {
   "shadows": "spython.main"
  },
  "type": "import"
 },
 "neurodocker.utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "neurodocker.utils.urlparse": {
  "data": {
   "shadows": "urllib.parse.urlparse"
  },
  "type": "import"
 },
 "neurodocker.utils.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 }
}