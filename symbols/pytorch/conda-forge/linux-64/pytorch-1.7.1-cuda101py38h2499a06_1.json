{
 "caffe2": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.contrib": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.contrib.aten": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.contrib.aten.aten_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.contrib.aten.aten_test.TestATen": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.contrib.aten.aten_test.TestATen.test_add": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensors",
   "hypothesis.given"
  ],
  "type": "function"
 },
 "caffe2.contrib.aten.aten_test.TestATen.test_add.ref": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.aten.aten_test.TestATen.test_add_half": {
  "lineno": 28,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_gpu_only",
   "caffe2.python.hypothesis_test_util.tensors",
   "hypothesis.given",
   "numpy.float16"
  ],
  "type": "function"
 },
 "caffe2.contrib.aten.aten_test.TestATen.test_add_half.ref": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.aten.aten_test.TestATen.test_index_put": {
  "lineno": 96,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "numpy.array",
   "numpy.float32",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "caffe2.contrib.aten.aten_test.TestATen.test_index_put.ref": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.aten.aten_test.TestATen.test_index_uint8": {
  "lineno": 79,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "numpy.array",
   "numpy.float32",
   "numpy.random.randn",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "caffe2.contrib.aten.aten_test.TestATen.test_index_uint8.ref": {
  "lineno": 88,
  "symbols_in_volume": [
   "numpy.bool"
  ],
  "type": "function"
 },
 "caffe2.contrib.aten.aten_test.TestATen.test_pow": {
  "lineno": 40,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensors",
   "hypothesis.given"
  ],
  "type": "function"
 },
 "caffe2.contrib.aten.aten_test.TestATen.test_pow.ref": {
  "lineno": 48,
  "symbols_in_volume": [
   "numpy.square"
  ],
  "type": "function"
 },
 "caffe2.contrib.aten.aten_test.TestATen.test_sort": {
  "lineno": 53,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.random.permutation"
  ],
  "type": "function"
 },
 "caffe2.contrib.aten.aten_test.TestATen.test_sort.ref": {
  "lineno": 62,
  "symbols_in_volume": [
   "numpy.argsort",
   "numpy.sort"
  ],
  "type": "function"
 },
 "caffe2.contrib.aten.aten_test.TestATen.test_sum": {
  "lineno": 66,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensors",
   "hypothesis.given"
  ],
  "type": "function"
 },
 "caffe2.contrib.aten.aten_test.TestATen.test_sum.ref": {
  "lineno": 74,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.contrib.aten.aten_test.TestATen.test_unique": {
  "lineno": 114,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "numpy.array"
  ],
  "type": "function"
 },
 "caffe2.contrib.aten.aten_test.TestATen.test_unique.ref": {
  "lineno": 125,
  "symbols_in_volume": [
   "numpy.unique"
  ],
  "type": "function"
 },
 "caffe2.contrib.aten.docs": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.contrib.aten.docs.sample": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.maximum",
   "numpy.random.randn",
   "numpy.testing.assert_array_almost_equal",
   "onnx.load",
   "torch.autograd.Variable"
  ],
  "type": "module"
 },
 "caffe2.contrib.aten.docs.sample.MyFunction": {
  "lineno": 10,
  "symbols_in_volume": [
   "torch.autograd.Function"
  ],
  "type": "class"
 },
 "caffe2.contrib.aten.docs.sample.MyFunction.forward": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.aten.docs.sample.MyFunction.symbolic": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.aten.docs.sample.MyModule": {
  "lineno": 23,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "caffe2.contrib.aten.docs.sample.MyModule.forward": {
  "lineno": 24,
  "symbols_in_volume": [
   "torch.nn.ReLU"
  ],
  "type": "function"
 },
 "caffe2.contrib.aten.gen_op": {
  "lineno": null,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "os.path.exists",
   "os.path.join",
   "sys.path.append",
   "tools.codegen.code_template.CodeTemplate",
   "tools.codegen.code_template.CodeTemplate.from_file",
   "yaml.Loader",
   "yaml.load"
  ],
  "type": "module"
 },
 "caffe2.contrib.aten.gen_op.attribute_names": {
  "lineno": 195,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.aten.gen_op.emit_assignments": {
  "lineno": 226,
  "symbols_in_volume": [
   "tools.codegen.code_template.CodeTemplate"
  ],
  "type": "function"
 },
 "caffe2.contrib.aten.gen_op.expand": {
  "lineno": 103,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "caffe2.contrib.aten.gen_op.find_factory_methods": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.aten.gen_op.get_num_inputs": {
  "lineno": 208,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.aten.gen_op.get_output": {
  "lineno": 188,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.aten.gen_op.read": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.aten.gen_op.required_attribute_names": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.aten.gen_op.self_as_first_argument": {
  "lineno": 203,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.aten.gen_op.supports": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.aten.gen_op.value_has_tensors": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.aten.gen_op.value_is_tensor_type": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.aten.gen_op.write": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.gloo": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.contrib.gloo.gloo_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.dyndep.InitOpsLibrary",
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.contrib.gloo.gloo_test.TemporaryDirectory": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.contrib.gloo.gloo_test.TemporaryDirectory.__enter__": {
  "lineno": 32,
  "symbols_in_volume": [
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "caffe2.contrib.gloo.gloo_test.TemporaryDirectory.__exit__": {
  "lineno": 36,
  "symbols_in_volume": [
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "caffe2.contrib.gloo.gloo_test.TestCase": {
  "lineno": 40,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.contrib.gloo.gloo_test.TestCase._test_allgather": {
  "lineno": 447,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNet",
   "numpy.array",
   "numpy.concatenate",
   "numpy.float16",
   "numpy.float32",
   "numpy.full",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.contrib.gloo.gloo_test.TestCase._test_allreduce": {
  "lineno": 242,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNet",
   "numpy.float16",
   "numpy.float32",
   "numpy.full",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.contrib.gloo.gloo_test.TestCase._test_allreduce_multicw": {
  "lineno": 292,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.float32",
   "numpy.full",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.contrib.gloo.gloo_test.TestCase._test_barrier": {
  "lineno": 550,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.RunNet"
  ],
  "type": "function"
 },
 "caffe2.contrib.gloo.gloo_test.TestCase._test_broadcast": {
  "lineno": 162,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNet",
   "numpy.float16",
   "numpy.float32",
   "numpy.full",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.contrib.gloo.gloo_test.TestCase._test_close_connection": {
  "lineno": 591,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.RunNet",
   "time.sleep"
  ],
  "type": "function"
 },
 "caffe2.contrib.gloo.gloo_test.TestCase._test_io_error": {
  "lineno": 651,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.RunNet",
   "numpy.float32",
   "numpy.full"
  ],
  "type": "function"
 },
 "caffe2.contrib.gloo.gloo_test.TestCase._test_reduce_scatter": {
  "lineno": 358,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNet",
   "numpy.float16",
   "numpy.float32",
   "numpy.full",
   "numpy.int32",
   "numpy.resize",
   "numpy.testing.assert_array_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.contrib.gloo.gloo_test.TestCase.create_common_world": {
  "lineno": 97,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.RunOperatorOnce",
   "os.getenv"
  ],
  "type": "function"
 },
 "caffe2.contrib.gloo.gloo_test.TestCase.run_test_distributed": {
  "lineno": 86,
  "symbols_in_volume": [
   "caffe2.python.core.DeviceScope",
   "caffe2.python.workspace.ResetWorkspace",
   "os.getenv"
  ],
  "type": "function"
 },
 "caffe2.contrib.gloo.gloo_test.TestCase.run_test_locally": {
  "lineno": 44,
  "symbols_in_volume": [
   "multiprocessing.Process",
   "multiprocessing.Queue"
  ],
  "type": "function"
 },
 "caffe2.contrib.gloo.gloo_test.TestCase.run_test_locally.run_fn": {
  "lineno": 49,
  "symbols_in_volume": [
   "caffe2.python.core.DeviceScope",
   "caffe2.python.workspace.ResetWorkspace"
  ],
  "type": "function"
 },
 "caffe2.contrib.gloo.gloo_test.TestCase.synchronize": {
  "lineno": 144,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "pickle.dumps",
   "pickle.loads"
  ],
  "type": "function"
 },
 "caffe2.contrib.gloo.gloo_test.TestCase.test_allgather": {
  "lineno": 501,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.cpu_do",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "os.getenv"
  ],
  "type": "function"
 },
 "caffe2.contrib.gloo.gloo_test.TestCase.test_allreduce": {
  "lineno": 331,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.cpu_do",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "os.getenv"
  ],
  "type": "function"
 },
 "caffe2.contrib.gloo.gloo_test.TestCase.test_barrier": {
  "lineno": 574,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.cpu_do",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "os.getenv"
  ],
  "type": "function"
 },
 "caffe2.contrib.gloo.gloo_test.TestCase.test_broadcast": {
  "lineno": 215,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.cpu_do",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "os.getenv"
  ],
  "type": "function"
 },
 "caffe2.contrib.gloo.gloo_test.TestCase.test_close_connection": {
  "lineno": 625,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.cpu_do",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "os.getenv",
   "time.time"
  ],
  "type": "function"
 },
 "caffe2.contrib.gloo.gloo_test.TestCase.test_forked_cw": {
  "lineno": 528,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.cpu_do",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.sampled_from",
   "os.getenv"
  ],
  "type": "function"
 },
 "caffe2.contrib.gloo.gloo_test.TestCase.test_io_error": {
  "lineno": 687,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.cpu_do",
   "gloo.python.IoError",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "os.getenv"
  ],
  "type": "function"
 },
 "caffe2.contrib.gloo.gloo_test.TestCase.test_reduce_scatter": {
  "lineno": 420,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.cpu_do",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "os.getenv"
  ],
  "type": "function"
 },
 "caffe2.contrib.nccl": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.contrib.nccl.nccl_ops_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.dyndep.InitOpsLibrary",
   "numpy.random.seed"
  ],
  "type": "module"
 },
 "caffe2.contrib.nccl.nccl_ops_test.NCCLOpsTest": {
  "lineno": 41,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase",
   "caffe2.python.workspace.has_cuda_support",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.contrib.nccl.nccl_ops_test.NCCLOpsTest._test_nccl_sync": {
  "lineno": 147,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.NumGpuDevices",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.full",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.contrib.nccl.nccl_ops_test.NCCLOpsTest.test_nccl_allgather": {
  "lineno": 107,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gpu_do",
   "caffe2.python.workspace.NumGpuDevices",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.randn",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.contrib.nccl.nccl_ops_test.NCCLOpsTest.test_nccl_allgather.allgather": {
  "lineno": 116,
  "symbols_in_volume": [
   "numpy.stack"
  ],
  "type": "function"
 },
 "caffe2.contrib.nccl.nccl_ops_test.NCCLOpsTest.test_nccl_allreduce": {
  "lineno": 43,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gpu_do",
   "caffe2.python.workspace.NumGpuDevices",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.randn",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.contrib.nccl.nccl_ops_test.NCCLOpsTest.test_nccl_allreduce.allreduce": {
  "lineno": 54,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.contrib.nccl.nccl_ops_test.NCCLOpsTest.test_nccl_broadcast": {
  "lineno": 66,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gpu_do",
   "caffe2.python.workspace.NumGpuDevices",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "caffe2.contrib.nccl.nccl_ops_test.NCCLOpsTest.test_nccl_broadcast.broadcast": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.nccl.nccl_ops_test.NCCLOpsTest.test_nccl_reduce": {
  "lineno": 85,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gpu_do",
   "caffe2.python.workspace.NumGpuDevices",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "caffe2.contrib.nccl.nccl_ops_test.NCCLOpsTest.test_nccl_reduce.reduce": {
  "lineno": 99,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.contrib.nccl.nccl_ops_test.NCCLOpsTest.test_nccl_reduce_scatter": {
  "lineno": 127,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gpu_do",
   "caffe2.python.workspace.NumGpuDevices",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "caffe2.contrib.nccl.nccl_ops_test.NCCLOpsTest.test_nccl_reduce_scatter.reduce_scatter": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.nccl.nccl_ops_test.NCCLOpsTest.test_timings": {
  "lineno": 171,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.muji.Allreduce",
   "caffe2.python.workspace.NumGpuDevices",
   "numpy.float32",
   "numpy.random.randn",
   "os.environ.get",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.contrib.nccl.nccl_ops_test.benchmark": {
  "lineno": 28,
  "symbols_in_volume": [
   "caffe2.python.core.ExecutionStep",
   "caffe2.python.core.Plan",
   "time.time"
  ],
  "type": "function"
 },
 "caffe2.contrib.nccl.nccl_ops_test.gpu_device": {
  "lineno": 21,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.DeviceOption",
   "caffe2.python.workspace.GpuDeviceType"
  ],
  "type": "function"
 },
 "caffe2.contrib.nnpack": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.contrib.nnpack.nnpack_ops_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.dyndep.InitOpsLibrary",
   "numpy.random.seed"
  ],
  "type": "module"
 },
 "caffe2.contrib.nnpack.nnpack_ops_test.NNPackOpsTest": {
  "lineno": 44,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.contrib.nnpack.nnpack_ops_test.NNPackOpsTest.test_convolution_correctness": {
  "lineno": 46,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.contrib.nnpack.nnpack_ops_test.NNPackOpsTest.test_leaky_relu_correctness": {
  "lineno": 153,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "hypothesis.given",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.contrib.nnpack.nnpack_ops_test.NNPackOpsTest.test_max_pool_correctness": {
  "lineno": 97,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.contrib.nnpack.nnpack_ops_test.NNPackOpsTest.test_relu_correctness": {
  "lineno": 130,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.contrib.nnpack.nnpack_ops_test.NNPackOpsTest.test_relu_timings": {
  "lineno": 217,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand",
   "os.environ.get",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.contrib.nnpack.nnpack_ops_test.NNPackOpsTest.test_timings": {
  "lineno": 179,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand",
   "os.environ.get",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.contrib.nnpack.nnpack_ops_test.benchmark": {
  "lineno": 21,
  "symbols_in_volume": [
   "caffe2.python.core.ExecutionStep",
   "caffe2.python.core.Plan",
   "time.time"
  ],
  "type": "function"
 },
 "caffe2.contrib.nnpack.nnpack_ops_test.has_avx2": {
  "lineno": 34,
  "symbols_in_volume": [
   "subprocess.CalledProcessError",
   "subprocess.check_output"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.contrib.playground.AnyExp": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.DEBUG",
   "logging.basicConfig",
   "logging.getLogger"
  ],
  "type": "module"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.__init__": {
  "lineno": 81,
  "symbols_in_volume": [
   "logging.DEBUG",
   "logging.basicConfig",
   "logging.getLogger"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.add_metric": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.add_plot": {
  "lineno": 180,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.assembleAllOutputs": {
  "lineno": 246,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.buildModelAndTrain": {
  "lineno": 383,
  "symbols_in_volume": [
   "inspect.getsource",
   "time.time"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.checkpoint": {
  "lineno": 210,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.createMetricsPlotsModelsOutputs": {
  "lineno": 242,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.extendMetricsOutput": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.fun_conclude_operator": {
  "lineno": 238,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.fun_per_epoch_aftRunNet": {
  "lineno": 206,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.fun_per_epoch_b4RunNet": {
  "lineno": 202,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.fun_per_iter_aftRunNetAftTest": {
  "lineno": 234,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.fun_per_iter_aftRunNetB4Test": {
  "lineno": 230,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.fun_per_iter_b4RunNet": {
  "lineno": 226,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.gen_checkpoint_path": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.gen_forward_pass_builder_fun": {
  "lineno": 254,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.gen_input_builder_fun": {
  "lineno": 250,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.gen_optimizer_fun": {
  "lineno": 262,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.gen_param_update_builder_fun": {
  "lineno": 258,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.gen_rendezvous_ctx": {
  "lineno": 266,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.getMeterClass": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.get_input_dataset": {
  "lineno": 130,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.get_model_input_fun": {
  "lineno": 134,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.init_logs": {
  "lineno": 189,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.init_metrics": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.init_model": {
  "lineno": 138,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.init_plots": {
  "lineno": 176,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.list_of_epoch_iters": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.list_of_epochs": {
  "lineno": 193,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.loadCheckpoint": {
  "lineno": 350,
  "symbols_in_volume": [
   "caffe2.python.data_parallel_model.FinalizeAfterCheckpoint",
   "os.path.exists"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.planning_output": {
  "lineno": 283,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.prep_a_data_parallel_model": {
  "lineno": 294,
  "symbols_in_volume": [
   "caffe2.python.data_parallel_model.Parallelize",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.RunNetOnce"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.prep_data_parallel_models": {
  "lineno": 288,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.run_testing_net": {
  "lineno": 274,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "caffe2.python.timeout_guard.CompleteInTimeOrDie",
   "caffe2.python.workspace.RunNet"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.run_training_net": {
  "lineno": 270,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.aquireDatasets": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.createTrainerClass": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.initDefaultModuleMap": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.initOpts": {
  "lineno": 27,
  "symbols_in_volume": [
   "caffe2.python.workspace.GlobalInit"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.initialize_params_from_file": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.overrideAdditionalMethods": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.registerModuleMap": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExpOnTerm": {
  "lineno": null,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "caffe2.contrib.playground.AnyExp.aquireDatasets",
   "caffe2.contrib.playground.AnyExp.initDefaultModuleMap",
   "caffe2.contrib.playground.AnyExp.initOpts",
   "json.loads",
   "logging.DEBUG",
   "logging.basicConfig",
   "logging.getLogger"
  ],
  "type": "module"
 },
 "caffe2.contrib.playground.AnyExpOnTerm.runShardedTrainLoop": {
  "lineno": 19,
  "symbols_in_volume": [
   "caffe2.contrib.playground.checkpoint.initialize_params_from_file",
   "os.path.exists"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExpOnTerm.trainFun": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExpOnTerm.trainFun.simpleTrainFun": {
  "lineno": 71,
  "symbols_in_volume": [
   "caffe2.contrib.playground.AnyExp.createTrainerClass",
   "caffe2.contrib.playground.AnyExp.overrideAdditionalMethods"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.ModuleRegister": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.DEBUG",
   "logging.basicConfig",
   "logging.getLogger"
  ],
  "type": "module"
 },
 "caffe2.contrib.playground.ModuleRegister.constructTrainerClass": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.ModuleRegister.getClassFromModule": {
  "lineno": 111,
  "symbols_in_volume": [
   "inspect.getmembers",
   "inspect.getsource"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.ModuleRegister.getModule": {
  "lineno": 95,
  "symbols_in_volume": [
   "inspect.getmembers",
   "inspect.getsource"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.ModuleRegister.overrideAdditionalMethods": {
  "lineno": 81,
  "symbols_in_volume": [
   "inspect.getmembers",
   "inspect.getsource",
   "inspect.isfunction"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.ModuleRegister.registerModuleMap": {
  "lineno": 15,
  "symbols_in_volume": [
   "inspect.getsource"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.checkpoint": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.DEBUG",
   "logging.basicConfig",
   "logging.getLogger"
  ],
  "type": "module"
 },
 "caffe2.contrib.playground.checkpoint.broadcast_parameters": {
  "lineno": 99,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.proto.caffe2_pb2.CUDA",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.checkpoint.initialize_master_xpu_model_params": {
  "lineno": 29,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.proto.caffe2_pb2.CUDA",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.core.NameScope",
   "caffe2.python.workspace.Blobs",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "collections.OrderedDict",
   "numpy.float32",
   "pickle.load"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.checkpoint.initialize_params_from_file": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.checkpoint.save_model_params": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.checkpoint.save_model_params_blob": {
  "lineno": 138,
  "symbols_in_volume": [
   "caffe2.python.workspace.FetchBlob",
   "pickle.HIGHEST_PROTOCOL",
   "pickle.dump"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.checkpoint.scoped_name": {
  "lineno": 173,
  "symbols_in_volume": [
   "caffe2.python.scope.CurrentNameScope"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.checkpoint.unscope_name": {
  "lineno": 169,
  "symbols_in_volume": [
   "caffe2.python.scope._NAMESCOPE_SEPARATOR"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.compute_loss": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.contrib.playground.compute_loss.ComputeLoss": {
  "lineno": 10,
  "symbols_in_volume": [
   "caffe2.contrib.playground.meter.Meter"
  ],
  "type": "class"
 },
 "caffe2.contrib.playground.compute_loss.ComputeLoss.Add": {
  "lineno": 21,
  "symbols_in_volume": [
   "caffe2.python.workspace.FetchBlob"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.compute_loss.ComputeLoss.Compute": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.compute_loss.ComputeLoss.Reset": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.compute_loss.ComputeLoss.__init__": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.compute_topk_accuracy": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.contrib.playground.compute_topk_accuracy.ComputeTopKAccuracy": {
  "lineno": 11,
  "symbols_in_volume": [
   "caffe2.contrib.playground.meter.Meter"
  ],
  "type": "class"
 },
 "caffe2.contrib.playground.compute_topk_accuracy.ComputeTopKAccuracy.Add": {
  "lineno": 31,
  "symbols_in_volume": [
   "caffe2.python.workspace.FetchBlob",
   "numpy.argsort",
   "numpy.repeat",
   "numpy.squeeze",
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.compute_topk_accuracy.ComputeTopKAccuracy.Compute": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.compute_topk_accuracy.ComputeTopKAccuracy.Reset": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.compute_topk_accuracy.ComputeTopKAccuracy.__init__": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.meter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.contrib.playground.meter.Meter": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.contrib.playground.meter.Meter.Add": {
  "lineno": 19,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.meter.Meter.Compute": {
  "lineno": 23,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.meter.Meter.Reset": {
  "lineno": 15,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.meter.Meter.__init__": {
  "lineno": 11,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.module_map": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.contrib.playground.output_generator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.contrib.playground.output_generator.assembleAllOutputs": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.output_generator.fun_conclude_operator": {
  "lineno": 8,
  "symbols_in_volume": [
   "caffe2.python.timeout_guard.EuthanizeIfNecessary"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.contrib.playground.resnetdemo.IN1k_resnet": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.contrib.playground.resnetdemo.IN1k_resnet.fun_per_epoch_b4RunNet": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.IN1k_resnet.fun_per_iter_b4RunNet": {
  "lineno": 38,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.proto.caffe2_pb2.CUDA",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.workspace.FeedBlob",
   "numpy.array",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.IN1k_resnet.init_model": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.cnn.CNNModelHelper"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.IN1k_resnet.run_training_net": {
  "lineno": 54,
  "symbols_in_volume": [
   "caffe2.python.timeout_guard.CompleteInTimeOrDie",
   "caffe2.python.workspace.RunNet"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.IN1k_resnet_no_test_model": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.contrib.playground.resnetdemo.IN1k_resnet_no_test_model.fun_per_epoch_b4RunNet": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.IN1k_resnet_no_test_model.fun_per_iter_b4RunNet": {
  "lineno": 44,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.proto.caffe2_pb2.CUDA",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.workspace.FeedBlob",
   "numpy.array",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.IN1k_resnet_no_test_model.init_model": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.cnn.CNNModelHelper"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.IN1k_resnet_no_test_model.run_training_net": {
  "lineno": 59,
  "symbols_in_volume": [
   "caffe2.python.timeout_guard.CompleteInTimeOrDie",
   "caffe2.python.workspace.RunNet"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.caffe2_resnet50_default_forward": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.contrib.playground.resnetdemo.caffe2_resnet50_default_forward.gen_forward_pass_builder_fun": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.caffe2_resnet50_default_forward.gen_forward_pass_builder_fun.create_resnet50_model_ops": {
  "lineno": 10,
  "symbols_in_volume": [
   "caffe2.python.models.resnet.create_resnet50"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.caffe2_resnet50_default_param_update": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.contrib.playground.resnetdemo.caffe2_resnet50_default_param_update.gen_param_update_builder_fun": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.caffe2_resnet50_default_param_update.gen_param_update_builder_fun.add_parameter_update_ops": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.explicit_resnet_forward": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.DEBUG",
   "logging.basicConfig",
   "logging.getLogger"
  ],
  "type": "module"
 },
 "caffe2.contrib.playground.resnetdemo.explicit_resnet_forward.ResNetModelHelper": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.contrib.playground.resnetdemo.explicit_resnet_forward.ResNetModelHelper.__init__": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.explicit_resnet_forward.ResNetModelHelper.add_shortcut": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.explicit_resnet_forward.ResNetModelHelper.basic_block": {
  "lineno": 283,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.explicit_resnet_forward.ResNetModelHelper.bottleneck_block": {
  "lineno": 259,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.explicit_resnet_forward.ResNetModelHelper.conv_bn": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.explicit_resnet_forward.ResNetModelHelper.conv_bn_relu": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.explicit_resnet_forward.ResNetModelHelper.group_bottleneck_block": {
  "lineno": 234,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.explicit_resnet_forward.ResNetModelHelper.multiway_bottleneck_block": {
  "lineno": 197,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.explicit_resnet_forward.ResNetModelHelper.residual_layer": {
  "lineno": 299,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.explicit_resnet_forward.gen_forward_pass_builder_fun": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.explicit_resnet_forward.gen_forward_pass_builder_fun.model_creator": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.explicit_resnet_forward.resnet_imagenet_create_model": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.explicit_resnet_param_update": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.contrib.playground.resnetdemo.explicit_resnet_param_update.gen_param_update_builder_fun": {
  "lineno": 10,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CUDA",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.workspace.CreateBlob"
  ],
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.explicit_resnet_param_update.gen_param_update_builder_fun.add_parameter_update_ops": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.gfs_IN1k": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.contrib.playground.resnetdemo.gfs_IN1k.gen_input_builder_fun": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.gfs_IN1k.gen_input_builder_fun.AddImageInput": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.gfs_IN1k.gen_input_builder_fun.add_image_input": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.gfs_IN1k.get_input_dataset": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.gfs_IN1k.get_model_input_fun": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.override_no_test_model_no_checkpoint": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.contrib.playground.resnetdemo.override_no_test_model_no_checkpoint.checkpoint": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.override_no_test_model_no_checkpoint.prep_data_parallel_models": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.override_no_test_model_no_checkpoint.run_testing_net": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.rendezvous_filestore": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.dyndep.InitOpsLibrary"
  ],
  "type": "module"
 },
 "caffe2.contrib.playground.resnetdemo.rendezvous_filestore.gen_rendezvous_ctx": {
  "lineno": 19,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.RunOperatorOnce"
  ],
  "type": "function"
 },
 "caffe2.contrib.prof": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.contrib.prof.cuda_profile_ops_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.dyndep.InitOpsLibrary"
  ],
  "type": "module"
 },
 "caffe2.contrib.prof.cuda_profile_ops_test.CudaProfileOpsTest": {
  "lineno": 13,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "caffe2.contrib.prof.cuda_profile_ops_test.CudaProfileOpsTest.test_run": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CUDA",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.core.Net",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.NumCudaDevices",
   "caffe2.python.workspace.RunNet",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.contrib.script": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.contrib.script.examples": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.contrib.tensorboard": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.contrib.tensorboard.tensorboard": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.contrib.tensorboard.tensorboard.Config": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.contrib.tensorboard.tensorboard._show_graph": {
  "lineno": 60,
  "symbols_in_volume": [
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard.cli": {
  "lineno": 91,
  "symbols_in_volume": [
   "click.group"
  ],
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard.graph_def_to_event": {
  "lineno": 104,
  "symbols_in_volume": [
   "tensorflow.core.util.event_pb2.Event"
  ],
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard.tensorboard_events": {
  "lineno": 132,
  "symbols_in_volume": [
   "click.Path",
   "click.option",
   "collections.namedtuple",
   "logging.INFO",
   "logging.getLogger",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard.tensorboard_events.get_named_summaries": {
  "lineno": 152,
  "symbols_in_volume": [
   "os.path.join",
   "os.walk"
  ],
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard.tensorboard_events.inferred_histo": {
  "lineno": 160,
  "symbols_in_volume": [
   "numpy.clip",
   "numpy.histogram",
   "numpy.iinfo",
   "numpy.int32",
   "numpy.random.randn",
   "numpy.random.seed",
   "tensorflow.core.framework.summary_pb2.HistogramProto"
  ],
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard.tensorboard_events.named_summaries_to_events": {
  "lineno": 180,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard.tensorboard_events.named_summaries_to_events.event": {
  "lineno": 185,
  "symbols_in_volume": [
   "tensorflow.core.framework.summary_pb2.Summary",
   "tensorflow.core.framework.summary_pb2.Summary.Value",
   "tensorflow.core.util.event_pb2.Event"
  ],
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard.tensorboard_events.parse_summary": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard.tensorboard_graphs": {
  "lineno": 109,
  "symbols_in_volume": [
   "caffe2.contrib.tensorboard.tensorboard_exporter.nets_to_graph_def",
   "click.Path",
   "click.option",
   "logging.INFO",
   "logging.getLogger"
  ],
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard.tensorboard_graphs.parse_net_def": {
  "lineno": 117,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard.visualize_cnn": {
  "lineno": 76,
  "symbols_in_volume": [
   "caffe2.contrib.tensorboard.tensorboard_exporter.cnn_to_graph_def"
  ],
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard.visualize_net": {
  "lineno": 81,
  "symbols_in_volume": [
   "caffe2.contrib.tensorboard.tensorboard_exporter.nets_to_graph_def"
  ],
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard.visualize_ops": {
  "lineno": 86,
  "symbols_in_volume": [
   "caffe2.contrib.tensorboard.tensorboard_exporter.ops_to_graph_def"
  ],
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard.write_events": {
  "lineno": 96,
  "symbols_in_volume": [
   "tensorflow.train.SummaryWriter"
  ],
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter._add_gradient_scope": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter._add_gradient_scope.f": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter._add_tf_shape": {
  "lineno": 195,
  "symbols_in_volume": [
   "tensorflow.core.framework.tensor_shape_pb2.TensorShapeProto",
   "tensorflow.core.framework.tensor_shape_pb2.TensorShapeProto.Dim"
  ],
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter._blob_to_node": {
  "lineno": 254,
  "symbols_in_volume": [
   "tensorflow.core.framework.graph_pb2.NodeDef"
  ],
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter._convert_to_ssa": {
  "lineno": 41,
  "symbols_in_volume": [
   "caffe2.python.core.IR"
  ],
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter._convert_to_ssa.ssa_name": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter._fill_missing_operator_names": {
  "lineno": 160,
  "symbols_in_volume": [
   "os.path.commonprefix",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter._get_blob_names": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter._make_unique_name": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter._operator_to_node": {
  "lineno": 236,
  "symbols_in_volume": [
   "tensorflow.core.framework.graph_pb2.NodeDef"
  ],
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter._operators_to_graph_def": {
  "lineno": 273,
  "symbols_in_volume": [
   "tensorflow.core.framework.graph_pb2.GraphDef"
  ],
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter._propagate_device_option": {
  "lineno": 306,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter._remap_keys": {
  "lineno": 95,
  "symbols_in_volume": [
   "six.iteritems"
  ],
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter._rename_all": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter._rename_all.g": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter._replace_colons": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter._replace_colons.f": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter._set_tf_attr": {
  "lineno": 204,
  "symbols_in_volume": [
   "builtins.bytes"
  ],
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter._tf_device": {
  "lineno": 185,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.proto.caffe2_pb2.CUDA"
  ],
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter._try_get_shapes": {
  "lineno": 314,
  "symbols_in_volume": [
   "caffe2.python.workspace.InferShapesAndTypes",
   "logging.warning"
  ],
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter.cnn_to_graph_def": {
  "lineno": 338,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter.nets_to_graph_def": {
  "lineno": 324,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter.ops_to_graph_def": {
  "lineno": 342,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter_test.TensorboardExporterTest": {
  "lineno": 591,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter_test.TensorboardExporterTest.test_simple_cnnmodel": {
  "lineno": 662,
  "symbols_in_volume": [
   "caffe2.contrib.tensorboard.tensorboard_exporter.cnn_to_graph_def",
   "caffe2.python.cnn.CNNModelHelper",
   "caffe2.python.core.NameScope"
  ],
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter_test.TensorboardExporterTest.test_that_adding_gradient_scope_does_no_fancy_renaming": {
  "lineno": 619,
  "symbols_in_volume": [
   "caffe2.contrib.tensorboard.tensorboard_exporter._add_gradient_scope",
   "caffe2.contrib.tensorboard.tensorboard_exporter._get_blob_names",
   "caffe2.proto.caffe2_pb2.OperatorDef"
  ],
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter_test.TensorboardExporterTest.test_that_auto_ssa_gives_non_colliding_names": {
  "lineno": 638,
  "symbols_in_volume": [
   "caffe2.contrib.tensorboard.tensorboard_exporter._convert_to_ssa",
   "caffe2.contrib.tensorboard.tensorboard_exporter._get_blob_names",
   "caffe2.proto.caffe2_pb2.OperatorDef"
  ],
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter_test.TensorboardExporterTest.test_that_operators_gets_non_colliding_names": {
  "lineno": 592,
  "symbols_in_volume": [
   "caffe2.contrib.tensorboard.tensorboard_exporter._fill_missing_operator_names",
   "caffe2.proto.caffe2_pb2.OperatorDef"
  ],
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter_test.TensorboardExporterTest.test_that_replacing_colons_gives_non_colliding_names": {
  "lineno": 600,
  "symbols_in_volume": [
   "caffe2.contrib.tensorboard.tensorboard_exporter._get_blob_names",
   "caffe2.contrib.tensorboard.tensorboard_exporter._replace_colons",
   "caffe2.proto.caffe2_pb2.OperatorDef"
  ],
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.contrib.tensorboard.tensorboard_test.TensorboardTest": {
  "lineno": 34,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "caffe2.contrib.tensorboard.tensorboard_test.TensorboardTest.test_events": {
  "lineno": 36,
  "symbols_in_volume": [
   "caffe2.contrib.tensorboard.tensorboard.cli",
   "numpy.random.randn",
   "numpy.random.seed",
   "os.path.join",
   "os.walk",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_test.TensorboardTest.test_tensorboard_graphs": {
  "lineno": 68,
  "symbols_in_volume": [
   "caffe2.contrib.tensorboard.tensorboard.cli",
   "caffe2.contrib.tensorboard.tensorboard_exporter.nets_to_graph_def",
   "caffe2.python.brew.conv",
   "caffe2.python.brew.fc",
   "caffe2.python.brew.image_input",
   "caffe2.python.brew.max_pool",
   "caffe2.python.brew.relu",
   "caffe2.python.brew.softmax",
   "caffe2.python.core.NameScope",
   "caffe2.python.model_helper.ModelHelper",
   "os.path.join",
   "os.walk",
   "tempfile.mkdtemp",
   "tensorflow.GraphDef"
  ],
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_test.load_events": {
  "lineno": 23,
  "symbols_in_volume": [
   "tensorboard.backend.event_processing.event_file_loader.EventFileLoader",
   "tensorflow.train.summary_iterator"
  ],
  "type": "function"
 },
 "caffe2.contrib.warpctc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.contrib.warpctc.ctc_ops_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.dyndep.InitOpsLibrary",
   "caffe2.python.workspace.GlobalInit"
  ],
  "type": "module"
 },
 "caffe2.contrib.warpctc.ctc_ops_test.CTCOpsTest": {
  "lineno": 21,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.contrib.warpctc.ctc_ops_test.CTCOpsTest.test_ctc_cost_cpu": {
  "lineno": 71,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.proto.caffe2_pb2.DeviceOption"
  ],
  "type": "function"
 },
 "caffe2.contrib.warpctc.ctc_ops_test.CTCOpsTest.test_ctc_cost_gpu": {
  "lineno": 79,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CUDA",
   "caffe2.proto.caffe2_pb2.DeviceOption"
  ],
  "type": "function"
 },
 "caffe2.contrib.warpctc.ctc_ops_test.CTCOpsTest.test_ctc_forward_only_cpu": {
  "lineno": 90,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.proto.caffe2_pb2.DeviceOption"
  ],
  "type": "function"
 },
 "caffe2.contrib.warpctc.ctc_ops_test.CTCOpsTest.test_ctc_forward_only_gpu": {
  "lineno": 99,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CUDA",
   "caffe2.proto.caffe2_pb2.DeviceOption"
  ],
  "type": "function"
 },
 "caffe2.contrib.warpctc.ctc_ops_test.CTCOpsTest.verify_cost": {
  "lineno": 22,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "numpy.array_equal",
   "numpy.asarray",
   "numpy.exp",
   "numpy.float32",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.contrib.warpctc.ctc_ops_test.softmax": {
  "lineno": 14,
  "symbols_in_volume": [
   "numpy.amax",
   "numpy.exp",
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.core": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.core.nomnigraph": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.core.nomnigraph.op_gen": {
  "lineno": null,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "subprocess.call"
  ],
  "type": "module"
 },
 "caffe2.core.nomnigraph.op_gen.gen_class": {
  "lineno": 92,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "caffe2.core.nomnigraph.op_gen.gen_classes": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.core.nomnigraph.op_gen.gen_enum": {
  "lineno": 197,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.core.nomnigraph.op_gen.gen_names": {
  "lineno": 201,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "caffe2.core.nomnigraph.op_gen.parse_lines": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.distributed": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.distributed.file_store_handler_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.dyndep.InitOpsLibrary"
  ],
  "type": "module"
 },
 "caffe2.distributed.file_store_handler_op_test.TestFileStoreHandlerOp": {
  "lineno": 20,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.distributed.file_store_handler_op_test.TestFileStoreHandlerOp.create_store_handler": {
  "lineno": 34,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.RunOperatorOnce",
   "errno.EEXIST",
   "os.makedirs",
   "os.path.isdir"
  ],
  "type": "function"
 },
 "caffe2.distributed.file_store_handler_op_test.TestFileStoreHandlerOp.setUp": {
  "lineno": 23,
  "symbols_in_volume": [
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "caffe2.distributed.file_store_handler_op_test.TestFileStoreHandlerOp.tearDown": {
  "lineno": 30,
  "symbols_in_volume": [
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "caffe2.distributed.file_store_handler_op_test.TestFileStoreHandlerOp.test_get_timeout": {
  "lineno": 60,
  "symbols_in_volume": [
   "caffe2.distributed.python.StoreHandlerTimeoutError",
   "caffe2.distributed.store_ops_test_util.StoreOpsTests.test_get_timeout"
  ],
  "type": "function"
 },
 "caffe2.distributed.file_store_handler_op_test.TestFileStoreHandlerOp.test_set_get": {
  "lineno": 57,
  "symbols_in_volume": [
   "caffe2.distributed.store_ops_test_util.StoreOpsTests.test_set_get"
  ],
  "type": "function"
 },
 "caffe2.distributed.redis_store_handler_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.dyndep.InitOpsLibrary"
  ],
  "type": "module"
 },
 "caffe2.distributed.redis_store_handler_op_test.TestRedisStoreHandlerOp": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.distributed.redis_store_handler_op_test.TestRedisStoreHandlerOp.create_store_handler": {
  "lineno": 26,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.RunOperatorOnce",
   "os.getenv"
  ],
  "type": "function"
 },
 "caffe2.distributed.redis_store_handler_op_test.TestRedisStoreHandlerOp.setUp": {
  "lineno": 19,
  "symbols_in_volume": [
   "uuid.uuid4"
  ],
  "type": "function"
 },
 "caffe2.distributed.redis_store_handler_op_test.TestRedisStoreHandlerOp.tearDown": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.distributed.redis_store_handler_op_test.TestRedisStoreHandlerOp.test_get_timeout": {
  "lineno": 41,
  "symbols_in_volume": [
   "caffe2.distributed.python.StoreHandlerTimeoutError",
   "caffe2.distributed.store_ops_test_util.StoreOpsTests.test_get_timeout"
  ],
  "type": "function"
 },
 "caffe2.distributed.redis_store_handler_op_test.TestRedisStoreHandlerOp.test_set_get": {
  "lineno": 38,
  "symbols_in_volume": [
   "caffe2.distributed.store_ops_test_util.StoreOpsTests.test_set_get"
  ],
  "type": "function"
 },
 "caffe2.distributed.store_ops_test_util": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.distributed.store_ops_test_util.StoreOpsTests": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.distributed.store_ops_test_util.StoreOpsTests._test_set_get": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.float32",
   "numpy.full",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.distributed.store_ops_test_util.StoreOpsTests.test_get_timeout": {
  "lineno": 71,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.RunNetOnce"
  ],
  "type": "function"
 },
 "caffe2.distributed.store_ops_test_util.StoreOpsTests.test_set_get": {
  "lineno": 48,
  "symbols_in_volume": [
   "multiprocessing.Process",
   "multiprocessing.Queue"
  ],
  "type": "function"
 },
 "caffe2.experiments": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.experiments.python": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.experiments.python.SparseTransformer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.experiments.python.SparseTransformer.NetDefNode": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.experiments.python.SparseTransformer.NetDefNode.__init__": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.experiments.python.SparseTransformer.NetDefNode.deleteInput": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.experiments.python.SparseTransformer.NetDefNode.insertInput": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.experiments.python.SparseTransformer.Prune2Sparse": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.experiments.python.SparseTransformer.maskNallocate": {
  "lineno": 57,
  "symbols_in_volume": [
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob"
  ],
  "type": "function"
 },
 "caffe2.experiments.python.SparseTransformer.net2list": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.experiments.python.SparseTransformer.netbuilder": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.experiments.python.SparseTransformer.transFCRelu": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.experiments.python.convnet_benchmarks": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.workspace.GlobalInit"
  ],
  "type": "module"
 },
 "caffe2.experiments.python.convnet_benchmarks.AddInput": {
  "lineno": 529,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.FLOAT"
  ],
  "type": "function"
 },
 "caffe2.experiments.python.convnet_benchmarks.AddParameterUpdate": {
  "lineno": 542,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.experiments.python.convnet_benchmarks.AlexNet": {
  "lineno": 115,
  "symbols_in_volume": [
   "caffe2.python.cnn.CNNModelHelper"
  ],
  "type": "function"
 },
 "caffe2.experiments.python.convnet_benchmarks.Benchmark": {
  "lineno": 553,
  "symbols_in_volume": [
   "caffe2.python.core.ExecutionStep",
   "caffe2.python.core.Plan",
   "caffe2.python.workspace.BenchmarkNet",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.RunNet",
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.python.workspace.RunPlan",
   "time.time"
  ],
  "type": "function"
 },
 "caffe2.experiments.python.convnet_benchmarks.GetArgumentParser": {
  "lineno": 625,
  "symbols_in_volume": [
   "argparse.ArgumentParser"
  ],
  "type": "function"
 },
 "caffe2.experiments.python.convnet_benchmarks.Inception": {
  "lineno": 454,
  "symbols_in_volume": [
   "caffe2.python.cnn.CNNModelHelper"
  ],
  "type": "function"
 },
 "caffe2.experiments.python.convnet_benchmarks.MLP": {
  "lineno": 90,
  "symbols_in_volume": [
   "caffe2.python.cnn.CNNModelHelper"
  ],
  "type": "function"
 },
 "caffe2.experiments.python.convnet_benchmarks.OverFeat": {
  "lineno": 196,
  "symbols_in_volume": [
   "caffe2.python.cnn.CNNModelHelper"
  ],
  "type": "function"
 },
 "caffe2.experiments.python.convnet_benchmarks.VGGA": {
  "lineno": 268,
  "symbols_in_volume": [
   "caffe2.python.cnn.CNNModelHelper"
  ],
  "type": "function"
 },
 "caffe2.experiments.python.convnet_benchmarks._InceptionModule": {
  "lineno": 391,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.experiments.python.convnet_benchmarks.net_DAG_Builder": {
  "lineno": 383,
  "symbols_in_volume": [
   "caffe2.python.SparseTransformer.netbuilder"
  ],
  "type": "function"
 },
 "caffe2.experiments.python.device_reduce_sum_bench": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.workspace.GlobalInit",
   "logging.INFO",
   "logging.basicConfig",
   "logging.getLogger",
   "os.path.basename"
  ],
  "type": "module"
 },
 "caffe2.experiments.python.device_reduce_sum_bench.Benchmark": {
  "lineno": 49,
  "symbols_in_volume": [
   "six.add_metaclass"
  ],
  "type": "class"
 },
 "caffe2.experiments.python.device_reduce_sum_bench.Benchmark.__init__": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.experiments.python.device_reduce_sum_bench.Benchmark.display": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.experiments.python.device_reduce_sum_bench.BenchmarkMeta": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.experiments.python.device_reduce_sum_bench.BenchmarkMeta.__new__": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.experiments.python.device_reduce_sum_bench.SoftMaxWithLoss": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.experiments.python.device_reduce_sum_bench.SoftMaxWithLoss.run": {
  "lineno": 94,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gpu_do",
   "caffe2.python.hypothesis_test_util.runOpBenchmark",
   "itertools.cycle",
   "itertools.imap",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.experiments.python.device_reduce_sum_bench.SumElements": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.experiments.python.device_reduce_sum_bench.SumElements.run": {
  "lineno": 64,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gpu_do",
   "caffe2.python.hypothesis_test_util.runOpBenchmark",
   "itertools.cycle",
   "itertools.imap",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.experiments.python.device_reduce_sum_bench.SumSqrElements": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.experiments.python.device_reduce_sum_bench.SumSqrElements.run": {
  "lineno": 79,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gpu_do",
   "caffe2.python.hypothesis_test_util.runOpBenchmark",
   "itertools.cycle",
   "itertools.imap",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.experiments.python.device_reduce_sum_bench.main": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.experiments.python.device_reduce_sum_bench.parse_args": {
  "lineno": 110,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "os.path.basename"
  ],
  "type": "function"
 },
 "caffe2.experiments.python.funhash_op_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.experiments.python.funhash_op_test.TestFunHash": {
  "lineno": 31,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.experiments.python.funhash_op_test.TestFunHash.test_funhash": {
  "lineno": 32,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.int32",
   "numpy.int64",
   "numpy.random.rand",
   "scipy.sparse.coo_matrix"
  ],
  "type": "function"
 },
 "caffe2.experiments.python.net_construct_bench": {
  "lineno": null,
  "symbols_in_volume": [
   "cProfile.run",
   "caffe2.python.workspace.GlobalInit",
   "logging.DEBUG",
   "logging.basicConfig",
   "logging.getLogger"
  ],
  "type": "module"
 },
 "caffe2.experiments.python.net_construct_bench.AddMomentumParameterUpdate": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.experiments.python.net_construct_bench.Create": {
  "lineno": 77,
  "symbols_in_volume": [
   "caffe2.python.cnn.CNNModelHelper",
   "caffe2.python.data_parallel_model.Parallelize_GPU",
   "time.time"
  ],
  "type": "function"
 },
 "caffe2.experiments.python.net_construct_bench.Create.add_image_input": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.experiments.python.net_construct_bench.Create.add_parameter_update_ops": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.experiments.python.net_construct_bench.Create.create_resnet50_model_ops": {
  "lineno": 90,
  "symbols_in_volume": [
   "caffe2.python.models.resnet.create_resnet50"
  ],
  "type": "function"
 },
 "caffe2.experiments.python.net_construct_bench.main": {
  "lineno": 136,
  "symbols_in_volume": [
   "argparse.ArgumentParser"
  ],
  "type": "function"
 },
 "caffe2.experiments.python.sparse_funhash_op_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.experiments.python.sparse_funhash_op_test.TestFunHash": {
  "lineno": 31,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.experiments.python.sparse_funhash_op_test.TestFunHash.test_funhash": {
  "lineno": 32,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.int32",
   "numpy.int64",
   "numpy.random.rand",
   "scipy.sparse.coo_matrix"
  ],
  "type": "function"
 },
 "caffe2.experiments.python.sparse_reshape_op_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.experiments.python.sparse_reshape_op_test.TestSparseMatrixReshapeOp": {
  "lineno": 63,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.experiments.python.sparse_reshape_op_test.TestSparseMatrixReshapeOp.test_basic_reshape": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.experiments.python.sparse_reshape_op_test.TestSparseMatrixReshapeOp.test_missing_dim": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.experiments.python.sparse_reshape_op_test.TestSparseMatrixReshapeOp.test_sparse_reshape_mm": {
  "lineno": 73,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.float32",
   "numpy.int32",
   "numpy.int64",
   "numpy.random.rand",
   "numpy.testing.assert_allclose",
   "scipy.sparse.coo_matrix"
  ],
  "type": "function"
 },
 "caffe2.experiments.python.sparse_reshape_op_test.TestSparseMatrixReshapeOp.test_stride_only": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.experiments.python.sparse_reshape_op_test.test_reshape": {
  "lineno": 28,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.int32",
   "numpy.int64",
   "numpy.random.random_sample",
   "numpy.testing.assert_array_equal",
   "scipy.sparse.coo_matrix"
  ],
  "type": "function"
 },
 "caffe2.experiments.python.tt_contraction_op_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.experiments.python.tt_contraction_op_test.TestTTContraction": {
  "lineno": 30,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.experiments.python.tt_contraction_op_test.TestTTContraction.test_tt_contraction": {
  "lineno": 31,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.experiments.python.tt_contraction_op_test.TestTTContraction.test_tt_contraction.tt_contraction_ref": {
  "lineno": 52,
  "symbols_in_volume": [
   "numpy.newaxis.sum"
  ],
  "type": "function"
 },
 "caffe2.experiments.python.tt_pad_op_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.experiments.python.tt_pad_op_test.TestTTPad": {
  "lineno": 30,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.experiments.python.tt_pad_op_test.TestTTPad.test_tt_pad": {
  "lineno": 31,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.experiments.python.tt_pad_op_test.TestTTPad.test_tt_pad.tt_pad_ref": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.vstack",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.perfkernels": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.perfkernels.hp_emblookup_codegen": {
  "lineno": null,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "sys.argv"
  ],
  "type": "module"
 },
 "caffe2.perfkernels.hp_emblookup_codegen.generic": {
  "lineno": 189,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.perfkernels.hp_emblookup_codegen.generic.compute": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.perfkernels.hp_emblookup_codegen.unroll": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.perfkernels.hp_emblookup_codegen.unroll.compute": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.proto": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.proto.caffe2_legacy_pb2": {
  "lineno": null,
  "symbols_in_volume": [
   "google.protobuf.descriptor.Descriptor",
   "google.protobuf.descriptor.EnumDescriptor",
   "google.protobuf.descriptor.EnumValueDescriptor",
   "google.protobuf.descriptor.FieldDescriptor",
   "google.protobuf.descriptor.FileDescriptor",
   "google.protobuf.internal.enum_type_wrapper.EnumTypeWrapper",
   "google.protobuf.message.Message",
   "google.protobuf.reflection.GeneratedProtocolMessageType",
   "google.protobuf.symbol_database.Default"
  ],
  "type": "module"
 },
 "caffe2.proto.caffe2_pb2": {
  "lineno": null,
  "symbols_in_volume": [
   "google.protobuf.descriptor.Descriptor",
   "google.protobuf.descriptor.EnumDescriptor",
   "google.protobuf.descriptor.EnumValueDescriptor",
   "google.protobuf.descriptor.FieldDescriptor",
   "google.protobuf.descriptor.FileDescriptor",
   "google.protobuf.internal.enum_type_wrapper.EnumTypeWrapper",
   "google.protobuf.message.Message",
   "google.protobuf.reflection.GeneratedProtocolMessageType",
   "google.protobuf.symbol_database.Default"
  ],
  "type": "module"
 },
 "caffe2.proto.hsm_pb2": {
  "lineno": null,
  "symbols_in_volume": [
   "google.protobuf.descriptor.Descriptor",
   "google.protobuf.descriptor.FieldDescriptor",
   "google.protobuf.descriptor.FileDescriptor",
   "google.protobuf.message.Message",
   "google.protobuf.reflection.GeneratedProtocolMessageType",
   "google.protobuf.symbol_database.Default"
  ],
  "type": "module"
 },
 "caffe2.proto.metanet_pb2": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.DESCRIPTOR",
   "caffe2.proto.caffe2_pb2._AOTCONFIG",
   "caffe2.proto.caffe2_pb2._NETDEF",
   "caffe2.proto.caffe2_pb2._PLANDEF",
   "caffe2.proto.caffe2_pb2._TENSORBOUNDSHAPES",
   "google.protobuf.descriptor.Descriptor",
   "google.protobuf.descriptor.FieldDescriptor",
   "google.protobuf.descriptor.FileDescriptor",
   "google.protobuf.message.Message",
   "google.protobuf.reflection.GeneratedProtocolMessageType",
   "google.protobuf.symbol_database.Default"
  ],
  "type": "module"
 },
 "caffe2.proto.predictor_consts_pb2": {
  "lineno": null,
  "symbols_in_volume": [
   "google.protobuf.descriptor.Descriptor",
   "google.protobuf.descriptor.FieldDescriptor",
   "google.protobuf.descriptor.FileDescriptor",
   "google.protobuf.message.Message",
   "google.protobuf.reflection.GeneratedProtocolMessageType",
   "google.protobuf.symbol_database.Default"
  ],
  "type": "module"
 },
 "caffe2.proto.prof_dag_pb2": {
  "lineno": null,
  "symbols_in_volume": [
   "google.protobuf.descriptor.Descriptor",
   "google.protobuf.descriptor.FieldDescriptor",
   "google.protobuf.descriptor.FileDescriptor",
   "google.protobuf.message.Message",
   "google.protobuf.reflection.GeneratedProtocolMessageType",
   "google.protobuf.symbol_database.Default"
  ],
  "type": "module"
 },
 "caffe2.proto.torch_pb2": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.DESCRIPTOR",
   "caffe2.proto.caffe2_pb2._NETDEF",
   "caffe2.proto.caffe2_pb2._TENSORPROTO_DATATYPE",
   "google.protobuf.descriptor.Descriptor",
   "google.protobuf.descriptor.EnumDescriptor",
   "google.protobuf.descriptor.EnumValueDescriptor",
   "google.protobuf.descriptor.FieldDescriptor",
   "google.protobuf.descriptor.FileDescriptor",
   "google.protobuf.internal.enum_type_wrapper.EnumTypeWrapper",
   "google.protobuf.message.Message",
   "google.protobuf.reflection.GeneratedProtocolMessageType",
   "google.protobuf.symbol_database.Default"
  ],
  "type": "module"
 },
 "caffe2.python": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.COMPILE_TIME_MAX_DEVICE_TYPES",
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.proto.caffe2_pb2.CUDA",
   "caffe2.proto.caffe2_pb2.HIP",
   "caffe2.proto.caffe2_pb2.IDEEP",
   "caffe2.proto.caffe2_pb2.MKLDNN",
   "caffe2.proto.caffe2_pb2.ONLY_FOR_TEST",
   "caffe2.proto.caffe2_pb2.OPENCL",
   "caffe2.proto.caffe2_pb2.OPENGL",
   "caffe2.proto.caffe2_pb2.PROTO_COMPILE_TIME_MAX_DEVICE_TYPES",
   "caffe2.proto.caffe2_pb2.PROTO_CPU",
   "caffe2.proto.caffe2_pb2.PROTO_CUDA",
   "caffe2.proto.caffe2_pb2.PROTO_HIP",
   "caffe2.proto.caffe2_pb2.PROTO_IDEEP",
   "caffe2.proto.caffe2_pb2.PROTO_MKLDNN",
   "caffe2.proto.caffe2_pb2.PROTO_ONLY_FOR_TEST",
   "caffe2.proto.caffe2_pb2.PROTO_OPENCL",
   "caffe2.proto.caffe2_pb2.PROTO_OPENGL",
   "ctypes.WinDLL",
   "ctypes.WinError",
   "ctypes.c_void_p",
   "ctypes.get_last_error",
   "glob.glob",
   "os.add_dll_directory",
   "os.environ",
   "os.getenv",
   "os.path.dirname",
   "os.path.exists",
   "os.path.join",
   "platform.system",
   "sys.executable",
   "sys.prefix",
   "sys.version_info"
  ],
  "type": "module"
 },
 "caffe2.python._import_c_extension": {
  "lineno": null,
  "symbols_in_volume": [
   "atexit.register",
   "caffe2.python.extension_loader.DlopenGuard",
   "logging.critical",
   "logging.info",
   "logging.warning",
   "sys.exit"
  ],
  "type": "module"
 },
 "caffe2.python._import_c_extension._TensorCPU_reshape": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python._import_c_extension._TensorCPU_shape": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.allcompare_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.allcompare_test.TemporaryDirectory": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.allcompare_test.TemporaryDirectory.__enter__": {
  "lineno": 22,
  "symbols_in_volume": [
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "caffe2.python.allcompare_test.TemporaryDirectory.__exit__": {
  "lineno": 26,
  "symbols_in_volume": [
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "caffe2.python.allcompare_test.TestAllCompare": {
  "lineno": 59,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.allcompare_test.TestAllCompare.test_allcompare": {
  "lineno": 60,
  "symbols_in_volume": [
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "multiprocessing.Process",
   "numpy.float32",
   "numpy.random.randint",
   "numpy.random.ranf"
  ],
  "type": "function"
 },
 "caffe2.python.allcompare_test.allcompare_process": {
  "lineno": 30,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.data_parallel_model._RunComparison",
   "caffe2.python.dyndep.InitOpsLibrary",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.RunOperatorOnce"
  ],
  "type": "function"
 },
 "caffe2.python.attention": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.attention.AttentionType": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.attention._apply_fc_weight_for_sum_match": {
  "lineno": 107,
  "symbols_in_volume": [
   "caffe2.python.brew.fc"
  ],
  "type": "function"
 },
 "caffe2.python.attention._calc_attention_logits_from_sum_match": {
  "lineno": 73,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.brew.transpose"
  ],
  "type": "function"
 },
 "caffe2.python.attention._calc_attention_weights": {
  "lineno": 48,
  "symbols_in_volume": [
   "caffe2.python.brew.softmax"
  ],
  "type": "function"
 },
 "caffe2.python.attention._calc_weighted_context": {
  "lineno": 22,
  "symbols_in_volume": [
   "caffe2.python.brew.batch_mat_mul"
  ],
  "type": "function"
 },
 "caffe2.python.attention.apply_dot_attention": {
  "lineno": 260,
  "symbols_in_volume": [
   "caffe2.python.brew.fc"
  ],
  "type": "function"
 },
 "caffe2.python.attention.apply_recurrent_attention": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.attention.apply_regular_attention": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.attention.apply_soft_coverage_attention": {
  "lineno": 326,
  "symbols_in_volume": [
   "caffe2.python.brew.transpose"
  ],
  "type": "function"
 },
 "caffe2.python.attention.s": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.benchmark_generator": {
  "lineno": null,
  "symbols_in_volume": [
   "argparse.ArgumentParser"
  ],
  "type": "module"
 },
 "caffe2.python.benchmark_generator.main": {
  "lineno": 30,
  "symbols_in_volume": [
   "caffe2.python.brew",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.predictor.mobile_exporter.Export",
   "caffe2.python.workspace",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.benchmark_generator.main.make_blob_on_context": {
  "lineno": 53,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.utils.MakeArgument"
  ],
  "type": "function"
 },
 "caffe2.python.benchmark_generator.parse_kwarg": {
  "lineno": 18,
  "symbols_in_volume": [
   "string.strip"
  ],
  "type": "function"
 },
 "caffe2.python.binarysize": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.argv"
  ],
  "type": "module"
 },
 "caffe2.python.binarysize.GetSymbolTrie": {
  "lineno": 37,
  "symbols_in_volume": [
   "subprocess.PIPE",
   "subprocess.Popen",
   "subprocess.STDOUT",
   "sys.exit"
  ],
  "type": "function"
 },
 "caffe2.python.binarysize.MaybeAddColor": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.binarysize.PrintTrie": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.binarysize.ReadableSize": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.binarysize.Trie": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.binarysize.Trie.__init__": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.binarysize.main": {
  "lineno": 135,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "sys.platform.startswith"
  ],
  "type": "function"
 },
 "caffe2.python.brew": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.modules"
  ],
  "type": "module"
 },
 "caffe2.python.brew.HelperWrapper": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.brew.HelperWrapper.Register": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.brew.HelperWrapper.__getattr__": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.brew.HelperWrapper.__getattr__.scope_wrapper": {
  "lineno": 84,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper",
   "copy.deepcopy",
   "inspect.getargspec"
  ],
  "type": "function"
 },
 "caffe2.python.brew.HelperWrapper.__init__": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.brew.HelperWrapper.has_helper": {
  "lineno": 122,
  "symbols_in_volume": [
   "past.builtins.basestring"
  ],
  "type": "function"
 },
 "caffe2.python.brew_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.brew_test.BrewGPUTest": {
  "lineno": 297,
  "symbols_in_volume": [
   "caffe2.python.workspace.has_gpu_support",
   "unittest.TestCase",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.brew_test.BrewGPUTest.test_relu": {
  "lineno": 299,
  "symbols_in_volume": [
   "caffe2.python.brew.relu",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.float32",
   "numpy.ones"
  ],
  "type": "function"
 },
 "caffe2.python.brew_test.BrewGPUTest.test_tanh": {
  "lineno": 317,
  "symbols_in_volume": [
   "caffe2.python.brew.tanh",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.float32",
   "numpy.ones",
   "numpy.tanh"
  ],
  "type": "function"
 },
 "caffe2.python.brew_test.BrewTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.brew_test.BrewTest.setUp": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.brew.Register",
   "caffe2.python.brew.has_helper",
   "caffe2.python.model_helper.ModelHelper"
  ],
  "type": "function"
 },
 "caffe2.python.brew_test.BrewTest.setUp.myhelper": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.brew_test.BrewTest.setUp.myhelper2": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.brew_test.BrewTest.test_arg_scope": {
  "lineno": 96,
  "symbols_in_volume": [
   "caffe2.python.brew.arg_scope",
   "caffe2.python.brew.myhelper",
   "caffe2.python.brew.myhelper2"
  ],
  "type": "function"
 },
 "caffe2.python.brew_test.BrewTest.test_arg_scope_nested": {
  "lineno": 135,
  "symbols_in_volume": [
   "caffe2.python.brew.arg_scope",
   "caffe2.python.brew.myhelper"
  ],
  "type": "function"
 },
 "caffe2.python.brew_test.BrewTest.test_arg_scope_single": {
  "lineno": 109,
  "symbols_in_volume": [
   "caffe2.python.brew.arg_scope",
   "caffe2.python.brew.conv",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.brew_test.BrewTest.test_cnn_model_helper_deprecated": {
  "lineno": 191,
  "symbols_in_volume": [
   "caffe2.python.cnn.CNNModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.brew_test.BrewTest.test_cond": {
  "lineno": 238,
  "symbols_in_volume": [
   "caffe2.python.brew.cond",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.array"
  ],
  "type": "function"
 },
 "caffe2.python.brew_test.BrewTest.test_double_register": {
  "lineno": 150,
  "symbols_in_volume": [
   "caffe2.python.brew.Register"
  ],
  "type": "function"
 },
 "caffe2.python.brew_test.BrewTest.test_dropout": {
  "lineno": 33,
  "symbols_in_volume": [
   "caffe2.python.brew.dropout",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.float32",
   "numpy.ones"
  ],
  "type": "function"
 },
 "caffe2.python.brew_test.BrewTest.test_fc": {
  "lineno": 44,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.brew_test.BrewTest.test_get_params": {
  "lineno": 200,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.modeling.parameter_info.ParameterTags.COMPUTED_PARAM",
   "caffe2.python.scope.NameScope"
  ],
  "type": "function"
 },
 "caffe2.python.brew_test.BrewTest.test_get_params.param": {
  "lineno": 201,
  "symbols_in_volume": [
   "caffe2.python.core.ScopedBlobReference"
  ],
  "type": "function"
 },
 "caffe2.python.brew_test.BrewTest.test_get_params.to_str_list": {
  "lineno": 204,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.brew_test.BrewTest.test_has_helper": {
  "lineno": 155,
  "symbols_in_volume": [
   "caffe2.python.brew.conv",
   "caffe2.python.brew.has_helper"
  ],
  "type": "function"
 },
 "caffe2.python.brew_test.BrewTest.test_has_helper.myhelper3": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.brew_test.BrewTest.test_loop": {
  "lineno": 267,
  "symbols_in_volume": [
   "caffe2.python.brew.loop",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.array"
  ],
  "type": "function"
 },
 "caffe2.python.brew_test.BrewTest.test_model_helper": {
  "lineno": 164,
  "symbols_in_volume": [
   "caffe2.python.brew.arg_scope",
   "caffe2.python.brew.conv",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.brew_test.BrewTest.test_param_consistence": {
  "lineno": 229,
  "symbols_in_volume": [
   "caffe2.python.brew.conv",
   "caffe2.python.brew.fc",
   "caffe2.python.model_helper.ModelHelper"
  ],
  "type": "function"
 },
 "caffe2.python.brew_test.BrewTest.test_relu": {
  "lineno": 55,
  "symbols_in_volume": [
   "caffe2.python.brew.relu",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.float32",
   "numpy.ones"
  ],
  "type": "function"
 },
 "caffe2.python.brew_test.BrewTest.test_tanh": {
  "lineno": 73,
  "symbols_in_volume": [
   "caffe2.python.brew.tanh",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.float32",
   "numpy.ones",
   "numpy.tanh"
  ],
  "type": "function"
 },
 "caffe2.python.brew_test.BrewTest.test_validate": {
  "lineno": 86,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper"
  ],
  "type": "function"
 },
 "caffe2.python.build": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.define_caffe2_no_operator_schema",
   "caffe2.python._import_c_extension.get_build_options"
  ],
  "type": "module"
 },
 "caffe2.python.cached_reader": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.cached_reader.CachedReader": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.db_file_reader.DBFileReader"
  ],
  "type": "class"
 },
 "caffe2.python.cached_reader.CachedReader.__init__": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.cached_reader.CachedReader._init_reader_schema": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.cached_reader.CachedReader._save_field_blobs_to_db_file": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.cached_reader.CachedReader.build_cache_step": {
  "lineno": 93,
  "symbols_in_volume": [
   "caffe2.python.core.NameScope",
   "caffe2.python.core.Net",
   "caffe2.python.core.execution_step",
   "caffe2.python.pipeline.pipe",
   "caffe2.python.task.Cluster",
   "caffe2.python.task.TaskGroup",
   "os.path.exists"
  ],
  "type": "function"
 },
 "caffe2.python.caffe_translator": {
  "lineno": null,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "caffe.proto.caffe_pb2.NetParameter",
   "google.protobuf.text_format.Merge",
   "logging.INFO",
   "logging.basicConfig",
   "logging.getLogger"
  ],
  "type": "module"
 },
 "caffe2.python.caffe_translator.AddArgument": {
  "lineno": 320,
  "symbols_in_volume": [
   "caffe2.python.utils.MakeArgument"
  ],
  "type": "function"
 },
 "caffe2.python.caffe_translator.BaseTranslate": {
  "lineno": 311,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.OperatorDef"
  ],
  "type": "function"
 },
 "caffe2.python.caffe_translator.ConvertTensorProtosToInitNet": {
  "lineno": 287,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.utils.MakeArgument"
  ],
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateAccuracy": {
  "lineno": 653,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateBatchNorm": {
  "lineno": 688,
  "symbols_in_volume": [
   "caffe2.python.utils.NumpyArrayToCaffe2Tensor",
   "numpy.tile",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateConcat": {
  "lineno": 661,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateConv": {
  "lineno": 423,
  "symbols_in_volume": [
   "caffe2.python.utils.NumpyArrayToCaffe2Tensor"
  ],
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateConvNd": {
  "lineno": 388,
  "symbols_in_volume": [
   "caffe2.python.utils.NumpyArrayToCaffe2Tensor"
  ],
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateCrop": {
  "lineno": 476,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.OperatorDef",
   "numpy.float32",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateData": {
  "lineno": 339,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateDeconv": {
  "lineno": 453,
  "symbols_in_volume": [
   "caffe2.python.utils.NumpyArrayToCaffe2Tensor"
  ],
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateDropout": {
  "lineno": 620,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateElementWise": {
  "lineno": 742,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateFlatten": {
  "lineno": 814,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateInnerProduct": {
  "lineno": 584,
  "symbols_in_volume": [
   "caffe2.python.utils.NumpyArrayToCaffe2Tensor"
  ],
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateInput": {
  "lineno": 329,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateInstanceNorm": {
  "lineno": 675,
  "symbols_in_volume": [
   "caffe2.python.utils.NumpyArrayToCaffe2Tensor"
  ],
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateLRN": {
  "lineno": 568,
  "symbols_in_volume": [
   "caffe.proto.caffe_pb2.LRNParameter.ACROSS_CHANNELS"
  ],
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateModel": {
  "lineno": 283,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslatePRelu": {
  "lineno": 860,
  "symbols_in_volume": [
   "caffe2.python.utils.NumpyArrayToCaffe2Tensor"
  ],
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslatePool": {
  "lineno": 511,
  "symbols_in_volume": [
   "caffe.proto.caffe_pb2.PoolingParameter.AVE",
   "caffe.proto.caffe_pb2.PoolingParameter.MAX",
   "caffe2.proto.caffe2_legacy_pb2.CAFFE_LEGACY_POOLING"
  ],
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslatePool3D": {
  "lineno": 540,
  "symbols_in_volume": [
   "caffe.proto.caffe_pb2.Pooling3DParameter.AVE",
   "caffe.proto.caffe_pb2.Pooling3DParameter.MAX"
  ],
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateROIPooling": {
  "lineno": 838,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateReduction": {
  "lineno": 870,
  "symbols_in_volume": [
   "caffe.proto.caffe_pb2.ReductionParameter.MEAN",
   "caffe.proto.caffe_pb2.ReductionParameter.SUM"
  ],
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateRelu": {
  "lineno": 506,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateReshape": {
  "lineno": 805,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateScale": {
  "lineno": 753,
  "symbols_in_volume": [
   "caffe2.python.utils.NumpyArrayToCaffe2Tensor",
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateSigmoid": {
  "lineno": 832,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateSoftmax": {
  "lineno": 631,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateSoftmaxWithLoss": {
  "lineno": 637,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator"
  ],
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateTanH": {
  "lineno": 669,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateVideoData": {
  "lineno": 334,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslatorRegistry": {
  "lineno": 196,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.caffe_translator.TranslatorRegistry.Register": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslatorRegistry.Register.Wrapper": {
  "lineno": 203,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslatorRegistry.TranslateLayer": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslatorRegistry.TranslateModel": {
  "lineno": 223,
  "symbols_in_volume": [
   "caffe.proto.caffe_pb2.NetState",
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.proto.caffe2_pb2.TensorProtos",
   "caffe2.python.utils.CaffeBlobToNumpyArray"
  ],
  "type": "function"
 },
 "caffe2.python.caffe_translator._AdjustDims": {
  "lineno": 82,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.Argument"
  ],
  "type": "function"
 },
 "caffe2.python.caffe_translator._GetBlobDimMap": {
  "lineno": 166,
  "symbols_in_volume": [
   "caffe2.python.utils.Caffe2TensorToNumpyArray",
   "caffe2.python.workspace.C.Workspace"
  ],
  "type": "function"
 },
 "caffe2.python.caffe_translator._GetInputDims": {
  "lineno": 184,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.caffe_translator._GetLegacyDims": {
  "lineno": 51,
  "symbols_in_volume": [
   "caffe2.python.utils.Caffe2TensorToNumpyArray",
   "caffe2.python.workspace.C.Workspace"
  ],
  "type": "function"
 },
 "caffe2.python.caffe_translator._GetLegacyPadArgs": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.caffe_translator._RemoveLegacyPad": {
  "lineno": 111,
  "symbols_in_volume": [
   "caffe2.python.utils.Caffe2TensorToNumpyArray",
   "caffe2.python.workspace.C.Workspace",
   "numpy.float32",
   "numpy.random.randn",
   "re.match"
  ],
  "type": "function"
 },
 "caffe2.python.caffe_translator._ShouldInclude": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.caffe_translator._StateMeetsRule": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.caffe_translator._TranslateStridePadKernelHelper": {
  "lineno": 346,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.caffe_translator_test": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.argv",
   "sys.exit",
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.caffe_translator_test.TestNumericalEquivalence": {
  "lineno": 58,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase",
   "os.path.exists",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.caffe_translator_test.TestNumericalEquivalence.testBlobs": {
  "lineno": 63,
  "symbols_in_volume": [
   "caffe2.python.workspace.FetchBlob",
   "numpy.load",
   "numpy.max",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "caffe2.python.caffe_translator_test.setUpModule": {
  "lineno": 27,
  "symbols_in_volume": [
   "caffe.proto.caffe_pb2.NetParameter",
   "caffe2.python.caffe_translator.TranslateModel",
   "caffe2.python.utils.Caffe2TensorToNumpyArray",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.RunNetOnce",
   "google.protobuf.text_format.Merge",
   "numpy.float32",
   "numpy.load",
   "os.path.exists"
  ],
  "type": "function"
 },
 "caffe2.python.checkpoint": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "caffe2.python.checkpoint.CheckpointManager": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.checkpoint.CheckpointManager.__init__": {
  "lineno": 165,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.checkpoint.CheckpointManager._timed_task": {
  "lineno": 233,
  "symbols_in_volume": [
   "caffe2.python.net_builder.ops.TimerBegin",
   "caffe2.python.net_builder.ops.TimerGetAndEnd",
   "caffe2.python.net_builder.ops.task_exit",
   "caffe2.python.net_builder.ops.task_init",
   "caffe2.python.task.Task",
   "caffe2.python.task.final_output"
  ],
  "type": "function"
 },
 "caffe2.python.checkpoint.CheckpointManager.blob_list": {
  "lineno": 229,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.checkpoint.CheckpointManager.check_db_exists": {
  "lineno": 323,
  "symbols_in_volume": [
   "caffe2.python.net_builder.ops.Const",
   "caffe2.python.net_builder.ops.DBExists",
   "caffe2.python.task.Task"
  ],
  "type": "function"
 },
 "caffe2.python.checkpoint.CheckpointManager.collect_checkpoint_stats": {
  "lineno": 254,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.checkpoint.CheckpointManager.cp_accessible": {
  "lineno": 415,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.checkpoint.CheckpointManager.get_resume_from_epoch_id": {
  "lineno": 378,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.checkpoint.CheckpointManager.init": {
  "lineno": 191,
  "symbols_in_volume": [
   "caffe2.python.net_builder.ops.GetAllBlobNames",
   "caffe2.python.net_builder.ops.Load",
   "caffe2.python.task.Task"
  ],
  "type": "function"
 },
 "caffe2.python.checkpoint.CheckpointManager.load": {
  "lineno": 270,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.checkpoint.CheckpointManager.load.add_op": {
  "lineno": 282,
  "symbols_in_volume": [
   "caffe2.python.net_builder.ops.Load"
  ],
  "type": "function"
 },
 "caffe2.python.checkpoint.CheckpointManager.load_blobs_from_checkpoint": {
  "lineno": 294,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.checkpoint.CheckpointManager.load_blobs_from_checkpoint.add_op": {
  "lineno": 312,
  "symbols_in_volume": [
   "caffe2.python.net_builder.ops.Load"
  ],
  "type": "function"
 },
 "caffe2.python.checkpoint.CheckpointManager.report_checkpoint_stats": {
  "lineno": 337,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.checkpoint.CheckpointManager.save": {
  "lineno": 349,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.checkpoint.CheckpointManager.save.add_op": {
  "lineno": 358,
  "symbols_in_volume": [
   "caffe2.python.net_builder.ops.Save"
  ],
  "type": "function"
 },
 "caffe2.python.checkpoint.CheckpointManager.set_params": {
  "lineno": 394,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.checkpoint.CheckpointManager.write_checkpoint_metadata": {
  "lineno": 367,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.checkpoint.Job": {
  "lineno": 25,
  "symbols_in_volume": [
   "caffe2.python.context.define_context"
  ],
  "type": "class"
 },
 "caffe2.python.checkpoint.Job.__enter__": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.checkpoint.Job.__exit__": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.checkpoint.Job.__init__": {
  "lineno": 74,
  "symbols_in_volume": [
   "caffe2.python.task.TaskGroup",
   "caffe2.python.task.WorkspaceType.GLOBAL"
  ],
  "type": "function"
 },
 "caffe2.python.checkpoint.Job.add_stop_condition": {
  "lineno": 106,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "caffe2.python.task.Task",
   "caffe2.python.task.TaskOutput"
  ],
  "type": "function"
 },
 "caffe2.python.checkpoint.Job.compile": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.checkpoint.Job.nodes_to_checkpoint": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.checkpoint.JobRunner": {
  "lineno": 654,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.checkpoint.JobRunner.__init__": {
  "lineno": 669,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.checkpoint.JobRunner.load_blobs_from_checkpoints": {
  "lineno": 760,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.checkpoint.JobRunner.save_checkpoints": {
  "lineno": 788,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.checkpoint.JobRunner.train": {
  "lineno": 688,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.checkpoint.MultiNodeCheckpointManager": {
  "lineno": 431,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.checkpoint.MultiNodeCheckpointManager.__init__": {
  "lineno": 444,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.checkpoint.MultiNodeCheckpointManager._task_group": {
  "lineno": 452,
  "symbols_in_volume": [
   "caffe2.python.task.Node",
   "caffe2.python.task.TaskGroup",
   "caffe2.python.task.WorkspaceType.GLOBAL"
  ],
  "type": "function"
 },
 "caffe2.python.checkpoint.MultiNodeCheckpointManager.cp_accessible": {
  "lineno": 620,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.checkpoint.MultiNodeCheckpointManager.get_ckpt_db_name": {
  "lineno": 530,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.checkpoint.MultiNodeCheckpointManager.get_resume_from_epoch_id": {
  "lineno": 582,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.checkpoint.MultiNodeCheckpointManager.init": {
  "lineno": 468,
  "symbols_in_volume": [
   "caffe2.python.task.Node",
   "caffe2.python.task.TaskGroup",
   "caffe2.python.task.WorkspaceType.GLOBAL"
  ],
  "type": "function"
 },
 "caffe2.python.checkpoint.MultiNodeCheckpointManager.load": {
  "lineno": 489,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.checkpoint.MultiNodeCheckpointManager.load_blobs_locally": {
  "lineno": 496,
  "symbols_in_volume": [
   "caffe2.python.task.Node"
  ],
  "type": "function"
 },
 "caffe2.python.checkpoint.MultiNodeCheckpointManager.report_checkpoint_stats": {
  "lineno": 548,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.checkpoint.MultiNodeCheckpointManager.save": {
  "lineno": 564,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.checkpoint.MultiNodeCheckpointManager.set_params": {
  "lineno": 598,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.checkpoint.MultiNodeCheckpointManager.write_checkpoint_metadata": {
  "lineno": 571,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.checkpoint.UploadTaskGroupBuilder": {
  "lineno": 636,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.checkpoint.UploadTaskGroupBuilder.build": {
  "lineno": 638,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.checkpoint.db_name": {
  "lineno": 127,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "caffe2.python.checkpoint.epoch_limiter": {
  "lineno": 818,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.task.Task"
  ],
  "type": "function"
 },
 "caffe2.python.checkpoint.get_ckpt_filename": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.checkpoint_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.checkpoint_test.TestCheckpoint": {
  "lineno": 67,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.checkpoint_test.TestCheckpoint.run_with": {
  "lineno": 68,
  "symbols_in_volume": [
   "caffe2.python.checkpoint.Job",
   "caffe2.python.checkpoint.JobRunner",
   "caffe2.python.core.Net",
   "caffe2.python.session.LocalSession",
   "caffe2.python.task.Cluster",
   "caffe2.python.task.Task"
  ],
  "type": "function"
 },
 "caffe2.python.checkpoint_test.TestCheckpoint.run_with.fetch_total": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.checkpoint_test.TestCheckpoint.test_ckpt_name_and_load_model_from_ckpts": {
  "lineno": 126,
  "symbols_in_volume": [
   "caffe2.python.checkpoint.Job",
   "caffe2.python.checkpoint.JobRunner",
   "caffe2.python.checkpoint.MultiNodeCheckpointManager",
   "caffe2.python.session.LocalSession",
   "caffe2.python.task.Cluster",
   "caffe2.python.workspace.C.Workspace",
   "caffe2.python.workspace.ResetWorkspace",
   "numpy.array",
   "shutil.rmtree",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "caffe2.python.checkpoint_test.TestCheckpoint.test_ckpt_save_failure": {
  "lineno": 241,
  "symbols_in_volume": [
   "caffe2.python.checkpoint.Job",
   "caffe2.python.checkpoint.JobRunner",
   "caffe2.python.checkpoint.MultiNodeCheckpointManager",
   "caffe2.python.session.LocalSession",
   "caffe2.python.task.Cluster",
   "caffe2.python.workspace.C.Workspace",
   "caffe2.python.workspace.ResetWorkspace"
  ],
  "type": "function"
 },
 "caffe2.python.checkpoint_test.TestCheckpoint.test_download_group_simple": {
  "lineno": 265,
  "symbols_in_volume": [
   "caffe2.python.checkpoint.Job",
   "caffe2.python.checkpoint.JobRunner",
   "caffe2.python.checkpoint.epoch_limiter",
   "caffe2.python.core.Net",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.net_builder.ops.loop",
   "caffe2.python.net_builder.ops.net",
   "caffe2.python.session.LocalSession",
   "caffe2.python.task.Node",
   "caffe2.python.task.Task",
   "caffe2.python.workspace.C.Workspace",
   "numpy.array_equal",
   "numpy.float32",
   "numpy.full"
  ],
  "type": "function"
 },
 "caffe2.python.checkpoint_test.TestCheckpoint.test_reuse_checkpoint_manager": {
  "lineno": 308,
  "symbols_in_volume": [
   "caffe2.python.checkpoint.Job",
   "caffe2.python.checkpoint.JobRunner",
   "caffe2.python.checkpoint.MultiNodeCheckpointManager",
   "caffe2.python.core.Net",
   "caffe2.python.session.LocalSession",
   "caffe2.python.task.Task",
   "caffe2.python.workspace.C.Workspace",
   "shutil.rmtree",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "caffe2.python.checkpoint_test.TestCheckpoint.test_reuse_checkpoint_manager.fetch_total": {
  "lineno": 324,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.checkpoint_test.TestCheckpoint.test_single_checkpoint": {
  "lineno": 97,
  "symbols_in_volume": [
   "shutil.rmtree",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "caffe2.python.checkpoint_test.TestCheckpoint.test_single_checkpoint.builder": {
  "lineno": 116,
  "symbols_in_volume": [
   "caffe2.python.checkpoint.MultiNodeCheckpointManager",
   "caffe2.python.session.LocalSession",
   "caffe2.python.workspace.C.Workspace"
  ],
  "type": "function"
 },
 "caffe2.python.checkpoint_test.TestCheckpoint.test_upload_checkpoint": {
  "lineno": 203,
  "symbols_in_volume": [
   "caffe2.python.checkpoint.Job",
   "caffe2.python.checkpoint.JobRunner",
   "caffe2.python.checkpoint.MultiNodeCheckpointManager",
   "caffe2.python.session.LocalSession",
   "caffe2.python.task.Cluster",
   "caffe2.python.workspace.C.Workspace",
   "os.mkdir",
   "os.path.exists",
   "os.path.join",
   "shutil.rmtree",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "caffe2.python.checkpoint_test.UploadToLocalFile": {
  "lineno": 52,
  "symbols_in_volume": [
   "caffe2.python.checkpoint.UploadTaskGroupBuilder"
  ],
  "type": "class"
 },
 "caffe2.python.checkpoint_test.UploadToLocalFile.__init__": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.checkpoint_test.UploadToLocalFile.build": {
  "lineno": 56,
  "symbols_in_volume": [
   "caffe2.python.checkpoint.db_name",
   "caffe2.python.net_builder.ops.Python",
   "caffe2.python.task.Node",
   "caffe2.python.task.Task",
   "caffe2.python.task.TaskGroup",
   "caffe2.python.task.WorkspaceType.GLOBAL",
   "os.path.join"
  ],
  "type": "function"
 },
 "caffe2.python.checkpoint_test.build_pipeline": {
  "lineno": 25,
  "symbols_in_volume": [
   "caffe2.python.checkpoint.Job.current",
   "caffe2.python.dataio.ReaderWithLimit",
   "caffe2.python.dataset.Dataset",
   "caffe2.python.net_builder.ops",
   "caffe2.python.net_builder.ops.Const",
   "caffe2.python.pipeline.pipe",
   "caffe2.python.schema.ConstRecord",
   "caffe2.python.schema.Struct",
   "caffe2.python.task.Node",
   "caffe2.python.task.Task",
   "numpy.array"
  ],
  "type": "function"
 },
 "caffe2.python.checkpoint_test.build_pipeline.inc_total": {
  "lineno": 34,
  "symbols_in_volume": [
   "caffe2.python.net_builder.ops.Add"
  ],
  "type": "function"
 },
 "caffe2.python.checkpoint_test.local_copy_op": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.checkpoint_test.local_copy_op.copy_op": {
  "lineno": 47,
  "symbols_in_volume": [
   "shutil.copyfile"
  ],
  "type": "function"
 },
 "caffe2.python.cnn": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.cnn.CNNModelHelper": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper"
  ],
  "type": "class"
 },
 "caffe2.python.cnn.CNNModelHelper.Accuracy": {
  "lineno": 195,
  "symbols_in_volume": [
   "caffe2.python.brew.accuracy"
  ],
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.AddWeightDecay": {
  "lineno": 226,
  "symbols_in_volume": [
   "caffe2.python.brew.add_weight_decay"
  ],
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.AveragePool": {
  "lineno": 206,
  "symbols_in_volume": [
   "caffe2.python.brew.average_pool"
  ],
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.CPU": {
  "lineno": 229,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.proto.caffe2_pb2.DeviceOption"
  ],
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.Concat": {
  "lineno": 178,
  "symbols_in_volume": [
   "caffe2.python.brew.concat"
  ],
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.ConstantInit": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.Conv": {
  "lineno": 89,
  "symbols_in_volume": [
   "caffe2.python.brew.conv"
  ],
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.ConvNd": {
  "lineno": 78,
  "symbols_in_volume": [
   "caffe2.python.brew.conv_nd"
  ],
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.ConvTranspose": {
  "lineno": 100,
  "symbols_in_volume": [
   "caffe2.python.brew.conv_transpose"
  ],
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.DepthConcat": {
  "lineno": 181,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.Dropout": {
  "lineno": 148,
  "symbols_in_volume": [
   "caffe2.python.brew.dropout"
  ],
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.FC": {
  "lineno": 133,
  "symbols_in_volume": [
   "caffe2.python.brew.fc"
  ],
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.FC_Decomp": {
  "lineno": 142,
  "symbols_in_volume": [
   "caffe2.python.brew.fc_decomp"
  ],
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.FC_Prune": {
  "lineno": 139,
  "symbols_in_volume": [
   "caffe2.python.brew.fc_prune"
  ],
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.FC_Sparse": {
  "lineno": 145,
  "symbols_in_volume": [
   "caffe2.python.brew.fc_sparse"
  ],
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.GPU": {
  "lineno": 235,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.DeviceOption",
   "caffe2.python.workspace.GpuDeviceType"
  ],
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.GroupConv": {
  "lineno": 111,
  "symbols_in_volume": [
   "caffe2.python.brew.group_conv"
  ],
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.GroupConv_Deprecated": {
  "lineno": 122,
  "symbols_in_volume": [
   "caffe2.python.brew.group_conv_deprecated"
  ],
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.ImageInput": {
  "lineno": 56,
  "symbols_in_volume": [
   "caffe2.python.brew.image_input"
  ],
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.InstanceNorm": {
  "lineno": 167,
  "symbols_in_volume": [
   "caffe2.python.brew.instance_norm"
  ],
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.Iter": {
  "lineno": 192,
  "symbols_in_volume": [
   "caffe2.python.brew.iter"
  ],
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.LRN": {
  "lineno": 153,
  "symbols_in_volume": [
   "caffe2.python.brew.lrn"
  ],
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.MSRAInit": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.MaxPool": {
  "lineno": 198,
  "symbols_in_volume": [
   "caffe2.python.brew.max_pool"
  ],
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.MaxPoolWithIndex": {
  "lineno": 203,
  "symbols_in_volume": [
   "caffe2.python.brew.max_pool_with_index"
  ],
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.PRelu": {
  "lineno": 175,
  "symbols_in_volume": [
   "caffe2.python.brew.prelu"
  ],
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.PackedFC": {
  "lineno": 136,
  "symbols_in_volume": [
   "caffe2.python.brew.packed_fc"
  ],
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.PadImage": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.Relu": {
  "lineno": 170,
  "symbols_in_volume": [
   "caffe2.python.brew.relu"
  ],
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.Softmax": {
  "lineno": 158,
  "symbols_in_volume": [
   "caffe2.python.brew.softmax"
  ],
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.SpatialBN": {
  "lineno": 161,
  "symbols_in_volume": [
   "caffe2.python.brew.spatial_bn"
  ],
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.SpatialGN": {
  "lineno": 164,
  "symbols_in_volume": [
   "caffe2.python.brew.spatial_gn"
  ],
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.Sum": {
  "lineno": 186,
  "symbols_in_volume": [
   "caffe2.python.brew.sum"
  ],
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.Transpose": {
  "lineno": 189,
  "symbols_in_volume": [
   "caffe2.python.brew.transpose"
  ],
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.VideoInput": {
  "lineno": 66,
  "symbols_in_volume": [
   "caffe2.python.brew.video_input"
  ],
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.XavierInit": {
  "lineno": 211,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.ZeroInit": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.__init__": {
  "lineno": 19,
  "symbols_in_volume": [
   "logging.warning"
  ],
  "type": "function"
 },
 "caffe2.python.compatibility": {
  "lineno": null,
  "symbols_in_volume": [
   "collections",
   "collections.abc",
   "six.PY2",
   "six.PY3"
  ],
  "type": "module"
 },
 "caffe2.python.context": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.context._ContextInfo": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.context._ContextInfo.__init__": {
  "lineno": 13,
  "symbols_in_volume": [
   "threading.local"
  ],
  "type": "function"
 },
 "caffe2.python.context._ContextInfo._stack": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.context._ContextInfo.enter": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.context._ContextInfo.exit": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.context._ContextInfo.get_active": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.context._ContextRegistry": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.context._ContextRegistry.__init__": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.context._ContextRegistry.get": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.context._ContextRegistry.register": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.context.__call__": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.context.__call__.wrapper": {
  "lineno": 79,
  "symbols_in_volume": [
   "six.wraps"
  ],
  "type": "function"
 },
 "caffe2.python.context.__enter__": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.context.__exit__": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.context._context_registry": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.context._current": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.context._get_active_context": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.context.define_context": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.context.define_context.__call__": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.context.define_context.__init__": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.context_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.context_test.MyContext": {
  "lineno": 10,
  "symbols_in_volume": [
   "caffe2.python.context.define_context"
  ],
  "type": "class"
 },
 "caffe2.python.context_test.TestContext": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.context_test.TestContext.testDecorator": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.context_test.TestContext.testMultiThreaded": {
  "lineno": 25,
  "symbols_in_volume": [
   "threading.Thread"
  ],
  "type": "function"
 },
 "caffe2.python.context_test.TestContext.use_my_context": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.control": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.control.BoolNet": {
  "lineno": 98,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.BOOL",
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.control.CombineConditions": {
  "lineno": 212,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.control.Do": {
  "lineno": 256,
  "symbols_in_volume": [
   "caffe2.python.core.ExecutionStep",
   "caffe2.python.core.scoped_execution_step"
  ],
  "type": "function"
 },
 "caffe2.python.control.DoParallel": {
  "lineno": 275,
  "symbols_in_volume": [
   "caffe2.python.core.ExecutionStep",
   "caffe2.python.core.scoped_execution_step"
  ],
  "type": "function"
 },
 "caffe2.python.control.DoUntil": {
  "lineno": 463,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "caffe2.python.core.Net",
   "caffe2.python.core.scoped_execution_step"
  ],
  "type": "function"
 },
 "caffe2.python.control.DoWhile": {
  "lineno": 430,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.core.scoped_execution_step"
  ],
  "type": "function"
 },
 "caffe2.python.control.For": {
  "lineno": 347,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.core.scoped_execution_step"
  ],
  "type": "function"
 },
 "caffe2.python.control.GetConditionBlobFromNet": {
  "lineno": 84,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference"
  ],
  "type": "function"
 },
 "caffe2.python.control.If": {
  "lineno": 527,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.control.IfNot": {
  "lineno": 555,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.control.MergeConditionNets": {
  "lineno": 171,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "future.utils.viewitems"
  ],
  "type": "function"
 },
 "caffe2.python.control.NotNet": {
  "lineno": 130,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.control.Switch": {
  "lineno": 496,
  "symbols_in_volume": [
   "caffe2.python.core.scoped_execution_step"
  ],
  "type": "function"
 },
 "caffe2.python.control.SwitchNot": {
  "lineno": 516,
  "symbols_in_volume": [
   "caffe2.python.core.scoped_execution_step"
  ],
  "type": "function"
 },
 "caffe2.python.control.Until": {
  "lineno": 413,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "caffe2.python.core.Net",
   "caffe2.python.core.scoped_execution_step"
  ],
  "type": "function"
 },
 "caffe2.python.control.While": {
  "lineno": 373,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.control.While.while_step": {
  "lineno": 393,
  "symbols_in_volume": [
   "caffe2.python.core.scoped_execution_step"
  ],
  "type": "function"
 },
 "caffe2.python.control._AppendNets": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.control._CopyConditionBlobNet": {
  "lineno": 154,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.control._IsNets": {
  "lineno": 59,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.control._MakeList": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.control._PrependNets": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.control._RunOnceIf": {
  "lineno": 296,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.control._RunOnceIf.if_step": {
  "lineno": 311,
  "symbols_in_volume": [
   "caffe2.python.core.scoped_execution_step"
  ],
  "type": "function"
 },
 "caffe2.python.control._RunOnceIfNot": {
  "lineno": 327,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.core.scoped_execution_step"
  ],
  "type": "function"
 },
 "caffe2.python.control._get_next_step_name": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.control_ops_grad": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.control_ops_grad._do_op_sanity_check_and_process": {
  "lineno": 487,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.control_ops_grad._gen_grad_zero_init_ops": {
  "lineno": 628,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.Argument",
   "caffe2.proto.caffe2_pb2.OperatorDef"
  ],
  "type": "function"
 },
 "caffe2.python.control_ops_grad._gen_subgradient_pass": {
  "lineno": 476,
  "symbols_in_volume": [
   "caffe2.python.core.IR"
  ],
  "type": "function"
 },
 "caffe2.python.control_ops_grad._gen_subnet_gradient": {
  "lineno": 438,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef"
  ],
  "type": "function"
 },
 "caffe2.python.control_ops_grad._get_do_arguments": {
  "lineno": 307,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.control_ops_grad._get_net_argument": {
  "lineno": 463,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.control_ops_grad._prepare_blob_copy_op": {
  "lineno": 562,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.OperatorDef"
  ],
  "type": "function"
 },
 "caffe2.python.control_ops_grad._prepare_gradient_do_op": {
  "lineno": 570,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.Argument",
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.proto.caffe2_pb2.OperatorDef"
  ],
  "type": "function"
 },
 "caffe2.python.control_ops_grad._prepare_gradient_if_op": {
  "lineno": 665,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.Argument",
   "caffe2.proto.caffe2_pb2.OperatorDef"
  ],
  "type": "function"
 },
 "caffe2.python.control_ops_grad._prepare_gradient_while_ops": {
  "lineno": 261,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.Argument",
   "caffe2.proto.caffe2_pb2.OperatorDef",
   "caffe2.python.core.BlobReference",
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.control_ops_grad.dedupe_g_output": {
  "lineno": 169,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.OperatorDef"
  ],
  "type": "function"
 },
 "caffe2.python.control_ops_grad.disambiguate_grad_if_op_output": {
  "lineno": 693,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.control_ops_grad.gen_do_gradient": {
  "lineno": 11,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference"
  ],
  "type": "function"
 },
 "caffe2.python.control_ops_grad.gen_if_gradient": {
  "lineno": 328,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.python.core.BlobReference"
  ],
  "type": "function"
 },
 "caffe2.python.control_ops_grad.gen_while_gradient": {
  "lineno": 201,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference"
  ],
  "type": "function"
 },
 "caffe2.python.control_ops_grad.getNetArgument": {
  "lineno": 471,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.control_ops_grad_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.control_ops_grad_test.TestControl": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.control_ops_grad_test.TestControl.test_disambiguate_grad_if_op_output": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.control_ops_grad.disambiguate_grad_if_op_output",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "numpy.array"
  ],
  "type": "function"
 },
 "caffe2.python.control_ops_util": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.control_ops_util.add_if_op": {
  "lineno": 36,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.control_ops_util.add_while_op": {
  "lineno": 141,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "caffe2.python.core.DataType.BOOL",
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.control_ops_util.get_external_blob_names": {
  "lineno": 11,
  "symbols_in_volume": [
   "caffe2.python.core.get_ssa",
   "caffe2.python.core.get_undefined_blobs"
  ],
  "type": "function"
 },
 "caffe2.python.control_test": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "caffe2.python.control_test.TestControl": {
  "lineno": 12,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.control_test.TestControl.BuildAndRunPlan": {
  "lineno": 80,
  "symbols_in_volume": [
   "caffe2.python.control.Do",
   "caffe2.python.core.Plan",
   "caffe2.python.workspace.RunPlan"
  ],
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.CheckNetAllOutput": {
  "lineno": 69,
  "symbols_in_volume": [
   "caffe2.python.workspace.FetchBlob"
  ],
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.CheckNetOutput": {
  "lineno": 59,
  "symbols_in_volume": [
   "caffe2.python.workspace.FetchBlob"
  ],
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.DoUntilLoopTest": {
  "lineno": 142,
  "symbols_in_volume": [
   "caffe2.python.control.DoUntil"
  ],
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.DoWhileLoopTest": {
  "lineno": 128,
  "symbols_in_volume": [
   "caffe2.python.control.DoWhile"
  ],
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.ForLoopTest": {
  "lineno": 86,
  "symbols_in_volume": [
   "caffe2.python.control.For"
  ],
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.IfCondTest": {
  "lineno": 156,
  "symbols_in_volume": [
   "caffe2.python.control.Do",
   "caffe2.python.control.If"
  ],
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.IfElseCondTest": {
  "lineno": 180,
  "symbols_in_volume": [
   "caffe2.python.control.Do",
   "caffe2.python.control.If"
  ],
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.IfNotCondTest": {
  "lineno": 209,
  "symbols_in_volume": [
   "caffe2.python.control.Do",
   "caffe2.python.control.IfNot"
  ],
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.IfNotElseCondTest": {
  "lineno": 233,
  "symbols_in_volume": [
   "caffe2.python.control.Do",
   "caffe2.python.control.IfNot"
  ],
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.UntilLoopTest": {
  "lineno": 114,
  "symbols_in_volume": [
   "caffe2.python.control.Until"
  ],
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.WhileLoopTest": {
  "lineno": 100,
  "symbols_in_volume": [
   "caffe2.python.control.While"
  ],
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.setUp": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.INT64",
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testBoolNet": {
  "lineno": 281,
  "symbols_in_volume": [
   "caffe2.python.control.BoolNet",
   "caffe2.python.control.Do"
  ],
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testCombineConditions": {
  "lineno": 297,
  "symbols_in_volume": [
   "caffe2.python.control.CombineConditions",
   "caffe2.python.control.Do"
  ],
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testDoUntilLoopWithNet": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testDoUntilLoopWithStep": {
  "lineno": 151,
  "symbols_in_volume": [
   "caffe2.python.control.Do"
  ],
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testDoWhileLoopWithNet": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testDoWhileLoopWithStep": {
  "lineno": 137,
  "symbols_in_volume": [
   "caffe2.python.control.Do"
  ],
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testForLoopWithNets": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testForLoopWithStep": {
  "lineno": 95,
  "symbols_in_volume": [
   "caffe2.python.control.Do"
  ],
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testIfCondFalseOnBlob": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testIfCondFalseOnNet": {
  "lineno": 174,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testIfCondTrueOnBlob": {
  "lineno": 171,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testIfCondTrueOnNet": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testIfElseCondFalseOnBlob": {
  "lineno": 206,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testIfElseCondFalseOnNet": {
  "lineno": 203,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testIfElseCondTrueOnBlob": {
  "lineno": 200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testIfElseCondTrueOnNet": {
  "lineno": 197,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testIfNotCondFalseOnBlob": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testIfNotCondFalseOnNet": {
  "lineno": 227,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testIfNotCondTrueOnBlob": {
  "lineno": 224,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testIfNotCondTrueOnNet": {
  "lineno": 221,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testIfNotElseCondFalseOnBlob": {
  "lineno": 260,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testIfNotElseCondFalseOnNet": {
  "lineno": 257,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testIfNotElseCondTrueOnBlob": {
  "lineno": 254,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testIfNotElseCondTrueOnNet": {
  "lineno": 251,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testMergeConditionNets": {
  "lineno": 318,
  "symbols_in_volume": [
   "caffe2.python.control.Do",
   "caffe2.python.control.MergeConditionNets"
  ],
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testSwitch": {
  "lineno": 263,
  "symbols_in_volume": [
   "caffe2.python.control.Switch"
  ],
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testSwitchNot": {
  "lineno": 272,
  "symbols_in_volume": [
   "caffe2.python.control.SwitchNot"
  ],
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testUntilLoopWithNet": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testUntilLoopWithStep": {
  "lineno": 123,
  "symbols_in_volume": [
   "caffe2.python.control.Do"
  ],
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testWhileLoopWithNet": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testWhileLoopWithStep": {
  "lineno": 109,
  "symbols_in_volume": [
   "caffe2.python.control.Do"
  ],
  "type": "function"
 },
 "caffe2.python.convert": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.convert_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.convert_test.TestOperator": {
  "lineno": 11,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.convert_test.TestOperator.setUp": {
  "lineno": 12,
  "symbols_in_volume": [
   "caffe2.python.workspace.ResetWorkspace"
  ],
  "type": "function"
 },
 "caffe2.python.convnet_benchmarks": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.workspace.GlobalInit"
  ],
  "type": "module"
 },
 "caffe2.python.convnet_benchmarks.AddParameterUpdate": {
  "lineno": 566,
  "symbols_in_volume": [
   "caffe2.python.brew.iter"
  ],
  "type": "function"
 },
 "caffe2.python.convnet_benchmarks.AlexNet": {
  "lineno": 101,
  "symbols_in_volume": [
   "caffe2.python.brew.conv",
   "caffe2.python.brew.fc",
   "caffe2.python.brew.max_pool",
   "caffe2.python.brew.relu",
   "caffe2.python.brew.softmax",
   "caffe2.python.model_helper.ModelHelper"
  ],
  "type": "function"
 },
 "caffe2.python.convnet_benchmarks.Benchmark": {
  "lineno": 577,
  "symbols_in_volume": [
   "caffe2.python.workspace.BenchmarkNet",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.RunNetOnce"
  ],
  "type": "function"
 },
 "caffe2.python.convnet_benchmarks.GetArgumentParser": {
  "lineno": 643,
  "symbols_in_volume": [
   "argparse.ArgumentParser"
  ],
  "type": "function"
 },
 "caffe2.python.convnet_benchmarks.Inception": {
  "lineno": 478,
  "symbols_in_volume": [
   "caffe2.python.brew.average_pool",
   "caffe2.python.brew.conv",
   "caffe2.python.brew.fc",
   "caffe2.python.brew.max_pool",
   "caffe2.python.brew.relu",
   "caffe2.python.brew.softmax",
   "caffe2.python.model_helper.ModelHelper"
  ],
  "type": "function"
 },
 "caffe2.python.convnet_benchmarks.MLP": {
  "lineno": 66,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.brew.sum",
   "caffe2.python.model_helper.ModelHelper"
  ],
  "type": "function"
 },
 "caffe2.python.convnet_benchmarks.OverFeat": {
  "lineno": 194,
  "symbols_in_volume": [
   "caffe2.python.brew.conv",
   "caffe2.python.brew.fc",
   "caffe2.python.brew.max_pool",
   "caffe2.python.brew.relu",
   "caffe2.python.brew.softmax",
   "caffe2.python.model_helper.ModelHelper"
  ],
  "type": "function"
 },
 "caffe2.python.convnet_benchmarks.VGGA": {
  "lineno": 280,
  "symbols_in_volume": [
   "caffe2.python.brew.conv",
   "caffe2.python.brew.fc",
   "caffe2.python.brew.max_pool",
   "caffe2.python.brew.relu",
   "caffe2.python.brew.softmax",
   "caffe2.python.model_helper.ModelHelper"
  ],
  "type": "function"
 },
 "caffe2.python.convnet_benchmarks._InceptionModule": {
  "lineno": 414,
  "symbols_in_volume": [
   "caffe2.python.brew.concat",
   "caffe2.python.brew.conv",
   "caffe2.python.brew.max_pool",
   "caffe2.python.brew.relu"
  ],
  "type": "function"
 },
 "caffe2.python.convnet_benchmarks_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.convnet_benchmarks_test.TestConvnetBenchmarks": {
  "lineno": 7,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase",
   "caffe2.python.workspace.has_cuda_support",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.convnet_benchmarks_test.TestConvnetBenchmarks.testConvnetBenchmarks": {
  "lineno": 9,
  "symbols_in_volume": [
   "caffe2.python.convnet_benchmarks.AlexNet",
   "caffe2.python.convnet_benchmarks.Benchmark",
   "caffe2.python.convnet_benchmarks.GetArgumentParser",
   "caffe2.python.convnet_benchmarks.Inception",
   "caffe2.python.convnet_benchmarks.OverFeat",
   "caffe2.python.convnet_benchmarks.VGGA"
  ],
  "type": "function"
 },
 "caffe2.python.core": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.registered_dbs",
   "caffe2.python._import_c_extension.set_engine_pref",
   "caffe2.python._import_c_extension.set_global_engine_pref",
   "caffe2.python._import_c_extension.set_op_engine_pref",
   "caffe2.python._import_c_extension.set_per_op_engine_pref",
   "caffe2.python.control_ops_grad.gen_do_gradient",
   "caffe2.python.control_ops_grad.gen_if_gradient",
   "caffe2.python.control_ops_grad.gen_while_gradient",
   "caffe2.python.scope.DeviceScope",
   "caffe2.python.scope.NameScope",
   "collections.namedtuple",
   "sys.platform"
  ],
  "type": "module"
 },
 "caffe2.python.core.BlobReference": {
  "lineno": 184,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.core.BlobReference.GetNameScope": {
  "lineno": 244,
  "symbols_in_volume": [
   "caffe2.python.scope._NAMESCOPE_SEPARATOR"
  ],
  "type": "function"
 },
 "caffe2.python.core.BlobReference.GetUnscopedName": {
  "lineno": 247,
  "symbols_in_volume": [
   "caffe2.python.scope._NAMESCOPE_SEPARATOR"
  ],
  "type": "function"
 },
 "caffe2.python.core.BlobReference.Net": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.BlobReference._CreateAndAddToNet": {
  "lineno": 250,
  "symbols_in_volume": [
   "six.string_types"
  ],
  "type": "function"
 },
 "caffe2.python.core.BlobReference.__add__": {
  "lineno": 231,
  "symbols_in_volume": [
   "six.string_types"
  ],
  "type": "function"
 },
 "caffe2.python.core.BlobReference.__dir__": {
  "lineno": 285,
  "symbols_in_volume": [
   "caffe2.python.lazy.TriggerLazyImport",
   "future.utils.viewkeys",
   "itertools.chain"
  ],
  "type": "function"
 },
 "caffe2.python.core.BlobReference.__eq__": {
  "lineno": 212,
  "symbols_in_volume": [
   "six.binary_type",
   "six.string_types"
  ],
  "type": "function"
 },
 "caffe2.python.core.BlobReference.__getattr__": {
  "lineno": 261,
  "symbols_in_volume": [
   "caffe2.python.workspace.C.nearby_opnames"
  ],
  "type": "function"
 },
 "caffe2.python.core.BlobReference.__hash__": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.BlobReference.__init__": {
  "lineno": 192,
  "symbols_in_volume": [
   "six.binary_type",
   "six.string_types"
  ],
  "type": "function"
 },
 "caffe2.python.core.BlobReference.__ne__": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.BlobReference.__radd__": {
  "lineno": 236,
  "symbols_in_volume": [
   "six.string_types"
  ],
  "type": "function"
 },
 "caffe2.python.core.BlobReference.__repr__": {
  "lineno": 228,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.BlobReference.__str__": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.CreateOperator": {
  "lineno": 342,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.OperatorDef",
   "caffe2.python.scope.CurrentDeviceScope",
   "caffe2.python.utils.MakeArgument",
   "caffe2.python.workspace.IsImmediate",
   "caffe2.python.workspace.RunOperatorImmediate",
   "future.utils.viewitems",
   "os.environ.get",
   "six.text_type",
   "traceback.format_stack"
  ],
  "type": "function"
 },
 "caffe2.python.core.CreatePythonOperator": {
  "lineno": 424,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.DataType": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.core.DeviceOption": {
  "lineno": 94,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.proto.caffe2_pb2.DeviceOption"
  ],
  "type": "function"
 },
 "caffe2.python.core.ExecutionStep": {
  "lineno": 2631,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.core.ExecutionStep.AddNet": {
  "lineno": 2752,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.ExecutionStep.AddSubstep": {
  "lineno": 2731,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.ExecutionStep.HasNets": {
  "lineno": 2678,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.ExecutionStep.HasSubsteps": {
  "lineno": 2682,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.ExecutionStep.Name": {
  "lineno": 2662,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.ExecutionStep.Nets": {
  "lineno": 2686,
  "symbols_in_volume": [
   "future.utils.viewvalues"
  ],
  "type": "function"
 },
 "caffe2.python.core.ExecutionStep.Proto": {
  "lineno": 2675,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.ExecutionStep.RunEveryMillis": {
  "lineno": 2714,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.ExecutionStep.SetConcurrentSubsteps": {
  "lineno": 2747,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.ExecutionStep.SetCreateWorkspace": {
  "lineno": 2696,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.ExecutionStep.SetIter": {
  "lineno": 2692,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.ExecutionStep.SetNumConcurrentInstances": {
  "lineno": 2700,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.ExecutionStep.SetOnlyOnce": {
  "lineno": 2704,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.ExecutionStep.SetReportNet": {
  "lineno": 2724,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.ExecutionStep.SetShouldStopBlob": {
  "lineno": 2708,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.ExecutionStep.Substeps": {
  "lineno": 2689,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.ExecutionStep.__init__": {
  "lineno": 2644,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.ExecutionStep",
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "caffe2.python.core.ExecutionStep.__str__": {
  "lineno": 2665,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.ExecutionStep._assert_can_mutate": {
  "lineno": 2668,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.ExecutionStep._get_next_step_name": {
  "lineno": 2634,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.ExecutionStep._notify_is_used": {
  "lineno": 2672,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.ExecutionStep.create_from_proto": {
  "lineno": 2771,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.ExecutionStep"
  ],
  "type": "function"
 },
 "caffe2.python.core.ExecutionStep.get_all_attributes": {
  "lineno": 2760,
  "symbols_in_volume": [
   "future.utils.viewvalues"
  ],
  "type": "function"
 },
 "caffe2.python.core.ExecutionStep.get_net": {
  "lineno": 2659,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.GetGlobalInitArgs": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.GetIndexFromGradientList": {
  "lineno": 447,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.GlobalInit": {
  "lineno": 71,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.global_init",
   "caffe2.python.lazy.TriggerLazyImport"
  ],
  "type": "function"
 },
 "caffe2.python.core.GradientRegistry": {
  "lineno": 1088,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.core.GradientRegistry.GetBackwardPass": {
  "lineno": 1165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.GradientRegistry.GetGradientForOp": {
  "lineno": 1143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.GradientRegistry.RegisterGradient": {
  "lineno": 1092,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.GradientRegistry.RegisterGradient.Wrapper": {
  "lineno": 1096,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.GradientRegistry._GetGradientForOpCC": {
  "lineno": 1102,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.OperatorDef",
   "caffe2.python._import_c_extension.get_gradient_defs"
  ],
  "type": "function"
 },
 "caffe2.python.core.GradientRegistry._GetGradientForOpCC.from_untyped": {
  "lineno": 1105,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.GradientWrapper"
  ],
  "type": "function"
 },
 "caffe2.python.core.GradientRegistry._GetGradientForOpCC.to_untyped": {
  "lineno": 1127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.IR": {
  "lineno": 469,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.core.IR.AppendSparseGenerators": {
  "lineno": 607,
  "symbols_in_volume": [
   "future.utils.viewitems"
  ],
  "type": "function"
 },
 "caffe2.python.core.IR.BuildGradientGenerators": {
  "lineno": 634,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "caffe2.python.core.IR.CheckGradientOperatorInput": {
  "lineno": 536,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.IR.CheckGradientOperatorInput.versionMismatchInfoIn": {
  "lineno": 552,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.IR.CheckGradientOperatorInput.versionMismatchInfoOut": {
  "lineno": 543,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.IR.DoGradientAccumulation": {
  "lineno": 914,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.IR.GetBackwardPass": {
  "lineno": 1026,
  "symbols_in_volume": [
   "future.utils.viewitems",
   "future.utils.viewkeys",
   "six.binary_type",
   "six.string_types"
  ],
  "type": "function"
 },
 "caffe2.python.core.IR.Play": {
  "lineno": 515,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.IR.SanityCheck": {
  "lineno": 505,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.IR._AppendAutoGradGenerator": {
  "lineno": 960,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.IR._CheckSumOpsConflict": {
  "lineno": 772,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.IR._DisambiguateGradOpOutput": {
  "lineno": 763,
  "symbols_in_volume": [
   "caffe2.python.control_ops_grad.disambiguate_grad_if_op_output"
  ],
  "type": "function"
 },
 "caffe2.python.core.IR._GenerateGradientsForForwardOp": {
  "lineno": 997,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.IR._GetInitGradients": {
  "lineno": 973,
  "symbols_in_volume": [
   "future.utils.viewitems"
  ],
  "type": "function"
 },
 "caffe2.python.core.IR._GetSumOpOutputName": {
  "lineno": 709,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.IR._GetSumOpOutputName.remove_suffix": {
  "lineno": 710,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.IR._MakeDenseSumOps": {
  "lineno": 780,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.IR._MakeSparseSumOps": {
  "lineno": 814,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.IR._MakeSumOps": {
  "lineno": 866,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.IR._SetSumOpsDeviceOption": {
  "lineno": 733,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.IR._VerifyGradientGenerators": {
  "lineno": 879,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.IR.__init__": {
  "lineno": 474,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "caffe2.python.core.InferBlobDevices": {
  "lineno": 130,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.proto.caffe2_pb2.DeviceOption"
  ],
  "type": "function"
 },
 "caffe2.python.core.InferOpBlobDevices": {
  "lineno": 159,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.DeviceOption",
   "caffe2.python._import_c_extension.infer_op_input_output_device"
  ],
  "type": "function"
 },
 "caffe2.python.core.InferOpBlobDevicesAsDict": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.InferOpDeviceAsBlobDevices": {
  "lineno": 174,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.DeviceOption"
  ],
  "type": "function"
 },
 "caffe2.python.core.InjectCrossDeviceCopies": {
  "lineno": 2416,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.DeviceOption",
   "caffe2.proto.caffe2_pb2.OperatorDef",
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "caffe2.python.core.InjectCrossDeviceCopies._gen_new_name": {
  "lineno": 2494,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU"
  ],
  "type": "function"
 },
 "caffe2.python.core.InjectDeviceCopiesAmongNets": {
  "lineno": 2554,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.InjectDeviceCopiesAmongNetsWithoutB2D": {
  "lineno": 2588,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.IsGPUDeviceType": {
  "lineno": 90,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CUDA",
   "caffe2.proto.caffe2_pb2.HIP"
  ],
  "type": "function"
 },
 "caffe2.python.core.IsOperator": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.IsOperatorWithEngine": {
  "lineno": 85,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.op_registry_key",
   "caffe2.python.lazy.TriggerLazyImport"
  ],
  "type": "function"
 },
 "caffe2.python.core.Net": {
  "lineno": 1428,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.core.Net.AddArgument": {
  "lineno": 2021,
  "symbols_in_volume": [
   "caffe2.python.utils.MakeArgument"
  ],
  "type": "function"
 },
 "caffe2.python.core.Net.AddExternalInput": {
  "lineno": 2024,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.Net.AddExternalInputs": {
  "lineno": 2146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.Net.AddExternalOutput": {
  "lineno": 2039,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.Net.AddExternalOutputs": {
  "lineno": 2149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.Net.AddGradientOperators": {
  "lineno": 1987,
  "symbols_in_volume": [
   "caffe2.python.workspace.IsImmediate",
   "caffe2.python.workspace.RunOperatorImmediate"
  ],
  "type": "function"
 },
 "caffe2.python.core.Net.AddObserver": {
  "lineno": 2060,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.add_observer_to_net"
  ],
  "type": "function"
 },
 "caffe2.python.core.Net.AddScopedExternalInputs": {
  "lineno": 2046,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.Net.AddScopedExternalOutputs": {
  "lineno": 2054,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.Net.AppendNet": {
  "lineno": 1509,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "caffe2.python.core.Net.AppendOutputRecordField": {
  "lineno": 2127,
  "symbols_in_volume": [
   "caffe2.python.schema.Struct"
  ],
  "type": "function"
 },
 "caffe2.python.core.Net.BlobIsDefined": {
  "lineno": 1617,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.Net.Clone": {
  "lineno": 1664,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.python.schema.from_blob_list"
  ],
  "type": "function"
 },
 "caffe2.python.core.Net.Clone.get_remapped_str": {
  "lineno": 1697,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.Net.Clone.remap_list": {
  "lineno": 1701,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.Net.Clone.remap_op": {
  "lineno": 1706,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.OperatorDef"
  ],
  "type": "function"
 },
 "caffe2.python.core.Net.ClonePartial": {
  "lineno": 1765,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "future.utils.viewitems",
   "future.utils.viewkeys"
  ],
  "type": "function"
 },
 "caffe2.python.core.Net.ClonePartial.remap": {
  "lineno": 1810,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.Net.Const": {
  "lineno": 1586,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool",
   "numpy.int32",
   "numpy.int64",
   "numpy.str"
  ],
  "type": "function"
 },
 "caffe2.python.core.Net.Const.do_set": {
  "lineno": 1599,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.Net.DeduplicateGradientSlices": {
  "lineno": 2152,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.Net.GetBlobRef": {
  "lineno": 1653,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.Net.LogInfo": {
  "lineno": 1538,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.Net.Name": {
  "lineno": 1580,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.Net.NextBlob": {
  "lineno": 1915,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.Net.NextName": {
  "lineno": 1931,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.Net.NextScopedBlob": {
  "lineno": 1906,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.Net.NumObservers": {
  "lineno": 2066,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.num_observers_on_net"
  ],
  "type": "function"
 },
 "caffe2.python.core.Net.PopulateProtoWithFileName": {
  "lineno": 1899,
  "symbols_in_volume": [
   "caffe2.python.workspace.operator_tracebacks.get"
  ],
  "type": "function"
 },
 "caffe2.python.core.Net.Proto": {
  "lineno": 1830,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.Net.Python": {
  "lineno": 2254,
  "symbols_in_volume": [
   "future.utils.viewitems",
   "itertools.chain"
  ],
  "type": "function"
 },
 "caffe2.python.core.Net.Python.make_builder": {
  "lineno": 2301,
  "symbols_in_volume": [
   "pickle.dumps"
  ],
  "type": "function"
 },
 "caffe2.python.core.Net.RemoveObserver": {
  "lineno": 2063,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.remove_observer_from_net"
  ],
  "type": "function"
 },
 "caffe2.python.core.Net.RunAllOnGPU": {
  "lineno": 2180,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.Net.RunAllOnIDEEP": {
  "lineno": 2192,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.DeviceOption",
   "caffe2.proto.caffe2_pb2.IDEEP"
  ],
  "type": "function"
 },
 "caffe2.python.core.Net.RunAllOnMKL": {
  "lineno": 2186,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.DeviceOption",
   "caffe2.proto.caffe2_pb2.MKLDNN"
  ],
  "type": "function"
 },
 "caffe2.python.core.Net.UsedBlobNames": {
  "lineno": 1639,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.Net.UsesBlob": {
  "lineno": 1627,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.Net._CheckLookupTables": {
  "lineno": 1955,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.Net._CreateAndAddToSelf": {
  "lineno": 2198,
  "symbols_in_volume": [
   "caffe2.python.workspace.operator_tracebacks"
  ],
  "type": "function"
 },
 "caffe2.python.core.Net._ExtendOps": {
  "lineno": 1950,
  "symbols_in_volume": [
   "six.text_type"
  ],
  "type": "function"
 },
 "caffe2.python.core.Net._InvalidateLookupTables": {
  "lineno": 1972,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.Net._RecreateLookupTables": {
  "lineno": 1975,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.Net._RunAllOnGPU": {
  "lineno": 2163,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.DeviceOption",
   "caffe2.python.workspace.GpuDeviceType"
  ],
  "type": "function"
 },
 "caffe2.python.core.Net.__dir__": {
  "lineno": 2242,
  "symbols_in_volume": [
   "caffe2.python.lazy.TriggerLazyImport",
   "future.utils.viewkeys",
   "itertools.chain"
  ],
  "type": "function"
 },
 "caffe2.python.core.Net.__getattr__": {
  "lineno": 2230,
  "symbols_in_volume": [
   "caffe2.python.workspace.C.nearby_opnames"
  ],
  "type": "function"
 },
 "caffe2.python.core.Net.__init__": {
  "lineno": 1450,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "caffe2.python.core.Net.__str__": {
  "lineno": 1583,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.Net._get_next_net_name": {
  "lineno": 1438,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.Net.add_attribute": {
  "lineno": 1548,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.Net.current_prefix": {
  "lineno": 1432,
  "symbols_in_volume": [
   "caffe2.python.net_builder.NetBuilder.current"
  ],
  "type": "function"
 },
 "caffe2.python.core.Net.extend_ops": {
  "lineno": 2338,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.Net.external_inputs": {
  "lineno": 2069,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.Net.external_outputs": {
  "lineno": 2073,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.Net.get_attributes": {
  "lineno": 1555,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.Net.input_record": {
  "lineno": 2140,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.Net.insert_op_at_idx": {
  "lineno": 1834,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.Net.is_external_input": {
  "lineno": 2334,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.Net.output_record": {
  "lineno": 2143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.Net.recover_input_record_by_prefix": {
  "lineno": 2094,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.Net.recover_output_record_by_prefix": {
  "lineno": 2118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.Net.reroute_tensor": {
  "lineno": 1845,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.Net.reroute_tensor._find_tensor_input_op": {
  "lineno": 1859,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.Net.set_input_record": {
  "lineno": 2077,
  "symbols_in_volume": [
   "caffe2.python.schema.NewRecord"
  ],
  "type": "function"
 },
 "caffe2.python.core.Net.set_output_record": {
  "lineno": 2103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.Net.set_rand_seed": {
  "lineno": 1562,
  "symbols_in_volume": [
   "numpy.iinfo",
   "numpy.uint32"
  ],
  "type": "function"
 },
 "caffe2.python.core.Plan": {
  "lineno": 2837,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.core.Plan.AddNets": {
  "lineno": 2857,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.Plan.AddStep": {
  "lineno": 2866,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.Plan.Nets": {
  "lineno": 2863,
  "symbols_in_volume": [
   "future.utils.viewvalues"
  ],
  "type": "function"
 },
 "caffe2.python.core.Plan.Proto": {
  "lineno": 2854,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.Plan.Steps": {
  "lineno": 2878,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.Plan.__init__": {
  "lineno": 2839,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.PlanDef",
   "collections.OrderedDict",
   "past.builtins.basestring"
  ],
  "type": "function"
 },
 "caffe2.python.core.Plan.__str__": {
  "lineno": 2851,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.Plan.create_from_proto": {
  "lineno": 2892,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.PlanDef"
  ],
  "type": "function"
 },
 "caffe2.python.core.Plan.get_all_attributes": {
  "lineno": 2881,
  "symbols_in_volume": [
   "future.utils.viewvalues"
  ],
  "type": "function"
 },
 "caffe2.python.core.RefreshRegisteredOperators": {
  "lineno": 61,
  "symbols_in_volume": [
   "caffe2.python.lazy.TriggerLazyImport"
  ],
  "type": "function"
 },
 "caffe2.python.core.RemapEntry": {
  "lineno": 2404,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.core.RemapEntry.__eq__": {
  "lineno": 2409,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.RemapEntry.__hash__": {
  "lineno": 2412,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.RemapEntry.__init__": {
  "lineno": 2405,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.ScopedBlobReference": {
  "lineno": 305,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.ScopedName": {
  "lineno": 298,
  "symbols_in_volume": [
   "caffe2.python.scope.CurrentNameScope",
   "six.binary_type"
  ],
  "type": "function"
 },
 "caffe2.python.core._GetRegisteredOperators": {
  "lineno": 54,
  "symbols_in_volume": [
   "caffe2.python.workspace.RegisteredOperators"
  ],
  "type": "function"
 },
 "caffe2.python.core._InitDataType": {
  "lineno": 46,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.TensorProto.DataType.items"
  ],
  "type": "function"
 },
 "caffe2.python.core._RectifyInputOutput": {
  "lineno": 310,
  "symbols_in_volume": [
   "six.binary_type",
   "six.string_types"
  ],
  "type": "function"
 },
 "caffe2.python.core._RegisterPythonImpl": {
  "lineno": 405,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.register_python_gradient_op",
   "caffe2.python._import_c_extension.register_python_op"
  ],
  "type": "function"
 },
 "caffe2.python.core._add_net_to_dict": {
  "lineno": 2620,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core._extract_stacktrace": {
  "lineno": 3001,
  "symbols_in_volume": [
   "sys._getframe"
  ],
  "type": "function"
 },
 "caffe2.python.core._get_blob_ref": {
  "lineno": 1406,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core._recover_record_by_prefix": {
  "lineno": 1413,
  "symbols_in_volume": [
   "caffe2.python.schema.from_column_list"
  ],
  "type": "function"
 },
 "caffe2.python.core.add_nets_in_order": {
  "lineno": 2823,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.clone_and_bind_net": {
  "lineno": 1344,
  "symbols_in_volume": [
   "caffe2.python.schema.Field",
   "future.utils.viewkeys"
  ],
  "type": "function"
 },
 "caffe2.python.core.control_op_remap": {
  "lineno": 1308,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.copy_func_between_devices": {
  "lineno": 2348,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU"
  ],
  "type": "function"
 },
 "caffe2.python.core.copy_func_between_devices.fun": {
  "lineno": 2372,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.device_equal": {
  "lineno": 2380,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.device_option_equal": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.execution_step": {
  "lineno": 2929,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.get_net_name": {
  "lineno": 2593,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef"
  ],
  "type": "function"
 },
 "caffe2.python.core.get_op_ids_in_path": {
  "lineno": 1256,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.get_output_producers": {
  "lineno": 1243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.get_ssa": {
  "lineno": 1191,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef"
  ],
  "type": "function"
 },
 "caffe2.python.core.get_undefined_blobs": {
  "lineno": 1232,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.output_to_list": {
  "lineno": 2602,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.recurrent_network_op_remap": {
  "lineno": 1278,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.recurrent_network_op_remap.get_remapped_str": {
  "lineno": 1292,
  "symbols_in_volume": [
   "six.binary_type"
  ],
  "type": "function"
 },
 "caffe2.python.core.remap_input": {
  "lineno": 2342,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.remap_proto": {
  "lineno": 1333,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.scoped_execution_step": {
  "lineno": 2995,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core.to_execution_step": {
  "lineno": 2914,
  "symbols_in_volume": [
   "caffe2.python.net_builder.NetBuilder"
  ],
  "type": "function"
 },
 "caffe2.python.core.update_placeholder_op_output": {
  "lineno": 2389,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU"
  ],
  "type": "function"
 },
 "caffe2.python.core_gradients_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.core_gradients_test.AddDirectGradient": {
  "lineno": 43,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.GradientRegistry.RegisterGradient"
  ],
  "type": "function"
 },
 "caffe2.python.core_gradients_test.AddNogradient": {
  "lineno": 78,
  "symbols_in_volume": [
   "caffe2.python.core.GradientRegistry.RegisterGradient"
  ],
  "type": "function"
 },
 "caffe2.python.core_gradients_test.AddUseInputGradient": {
  "lineno": 66,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.GradientRegistry.RegisterGradient"
  ],
  "type": "function"
 },
 "caffe2.python.core_gradients_test.AddUseOutputGradient": {
  "lineno": 54,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.GradientRegistry.RegisterGradient"
  ],
  "type": "function"
 },
 "caffe2.python.core_gradients_test.CopyDeviceOption": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core_gradients_test.GIS": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core_gradients_test.NeedAll": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation": {
  "lineno": 86,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.assertOperatorListEqual": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.testDirect": {
  "lineno": 98,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.GradientRegistry.GetBackwardPass",
   "caffe2.python.workspace.GpuDeviceType",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.sampled_from"
  ],
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.testDirectButNoOutputGradientGiven": {
  "lineno": 153,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.GradientRegistry.GetBackwardPass"
  ],
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.testDirectImplicitGradientSource": {
  "lineno": 121,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.GradientRegistry.GetBackwardPass"
  ],
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.testDirectInPlace": {
  "lineno": 162,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.GradientRegistry.GetBackwardPass"
  ],
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.testDoesNotGenerateUnnecessaryGradients": {
  "lineno": 139,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.GradientRegistry.GetBackwardPass"
  ],
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.testGradientCalculationWithPrint": {
  "lineno": 528,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.GradientRegistry.GetBackwardPass"
  ],
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.testGradientMappingUsingSumOp": {
  "lineno": 514,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.GradientRegistry.GetBackwardPass"
  ],
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.testMultiUseInput": {
  "lineno": 284,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.GradientRegistry.GetBackwardPass",
   "caffe2.python.workspace.GpuDeviceType",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.sampled_from"
  ],
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.testMultiUseInputAndMultipleVersions": {
  "lineno": 354,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.GradientRegistry.GetBackwardPass"
  ],
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.testMultiUseInputAndMultipleVersionsBig": {
  "lineno": 444,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.GradientRegistry.GetBackwardPass"
  ],
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.testMultiUseInputAutoGenSumDevice": {
  "lineno": 393,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.GradientRegistry.GetBackwardPass",
   "caffe2.python.core.IR.ONLY_KEEP_IS_AUTO_GEN_SUM_OPS_TAG"
  ],
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.testMultiUseInputButWithNoGradient": {
  "lineno": 328,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.GradientRegistry.GetBackwardPass"
  ],
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.testStopGradient": {
  "lineno": 550,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.GradientRegistry.GetBackwardPass"
  ],
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.testStopGradientInplace": {
  "lineno": 574,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.GradientRegistry.GetBackwardPass"
  ],
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.testStopGradientOrphan": {
  "lineno": 563,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.GradientRegistry.GetBackwardPass"
  ],
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.testStopGradientWithMultiUseOperators": {
  "lineno": 588,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.GradientRegistry.GetBackwardPass"
  ],
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.testUseInput": {
  "lineno": 246,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.GradientRegistry.GetBackwardPass"
  ],
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.testUseInputButInputHasBeenChanged": {
  "lineno": 267,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.GradientRegistry.GetBackwardPass"
  ],
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.testUseOutput": {
  "lineno": 190,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.GradientRegistry.GetBackwardPass"
  ],
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.testUseOutputButOutputHasBeenChanged": {
  "lineno": 232,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.GradientRegistry.GetBackwardPass"
  ],
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.testUseOutputInPlace": {
  "lineno": 211,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.GradientRegistry.GetBackwardPass"
  ],
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.testVersionMismatch": {
  "lineno": 175,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.GradientRegistry.GetBackwardPass"
  ],
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.test_two_grads": {
  "lineno": 622,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.python.workspace.blobs",
   "numpy.array",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.test_zero_gradient": {
  "lineno": 609,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientsAccumulationWithNoGradientOps": {
  "lineno": 718,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.core_gradients_test.TestGradientsAccumulationWithNoGradientOps.testAccumulationWithNoGradientBranch": {
  "lineno": 733,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientsAccumulationWithNoGradientOps.testNormalAccumulation": {
  "lineno": 719,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientsAccumulationWithPassThroughGradients": {
  "lineno": 751,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.core_gradients_test.TestGradientsAccumulationWithPassThroughGradients.testAccumulationRuns": {
  "lineno": 941,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.python.workspace.blobs",
   "numpy.array",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientsAccumulationWithPassThroughGradients.testAddAndDynamicConstant": {
  "lineno": 773,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientsAccumulationWithPassThroughGradients.testAddAndStaticConstant": {
  "lineno": 789,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientsAccumulationWithPassThroughGradients.testAddOpAtLeaf": {
  "lineno": 825,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientsAccumulationWithPassThroughGradients.testAddOpInMiddle": {
  "lineno": 752,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientsAccumulationWithPassThroughGradients.testDeviceOptionsPropagation": {
  "lineno": 971,
  "symbols_in_volume": [
   "caffe2.python.core.DeviceScope",
   "caffe2.python.core.Net",
   "numpy.random.random_integers"
  ],
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientsAccumulationWithPassThroughGradients.testIncorrectOperator": {
  "lineno": 960,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientsAccumulationWithPassThroughGradients.testMultiLayerAddOps": {
  "lineno": 883,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientsAccumulationWithPassThroughGradients.testMultiLayerSubOps": {
  "lineno": 912,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientsAccumulationWithPassThroughGradients.testSubOpAtLeaf": {
  "lineno": 854,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientsAccumulationWithPassThroughGradients.testSubOpInMiddle": {
  "lineno": 803,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestSparseGradientsAccumulation": {
  "lineno": 642,
  "symbols_in_volume": [
   "caffe2.python.core.IsOperator",
   "caffe2.python.test_util.TestCase",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.core_gradients_test.TestSparseGradientsAccumulation.testSparseAccumulationWithIndicesAndValues": {
  "lineno": 687,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestSparseGradientsAccumulation.testSparseAccumulationWithValues": {
  "lineno": 645,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestSparseGradientsAccumulation.testSparseGradientToDense": {
  "lineno": 668,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.core_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.core_test.TestAppendNet": {
  "lineno": 371,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.core_test.TestAppendNet.test_external_inputs_merged_correctly": {
  "lineno": 373,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.core_test.TestAppendNet.test_external_inputs_merged_correctlyB": {
  "lineno": 383,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.core_test.TestAutoNaming": {
  "lineno": 294,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.core_test.TestAutoNaming.assertOperatorListEqual": {
  "lineno": 295,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core_test.TestAutoNaming.test_auto_naming": {
  "lineno": 326,
  "symbols_in_volume": [
   "caffe2.python.core.NameScope",
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.core_test.TestAutoNaming.test_auto_naming.add_ops": {
  "lineno": 335,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core_test.TestAutoNaming.test_next_blob": {
  "lineno": 305,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.core_test.TestAutoNaming.test_next_blob.create_net": {
  "lineno": 306,
  "symbols_in_volume": [
   "caffe2.python.core.NameScope",
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.core_test.TestCloneNet": {
  "lineno": 125,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.core_test.TestCloneNet.testPartialClone": {
  "lineno": 126,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "caffe2.python.core.Net",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.RunNetOnce"
  ],
  "type": "function"
 },
 "caffe2.python.core_test.TestCloneNet.testPartialClone.net_assert": {
  "lineno": 150,
  "symbols_in_volume": [
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "numpy.array"
  ],
  "type": "function"
 },
 "caffe2.python.core_test.TestCloneNet.test_mask_clone_update_external_list": {
  "lineno": 201,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.core_test.TestCreateOperator": {
  "lineno": 254,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.core_test.TestCreateOperator.testCreate": {
  "lineno": 255,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.DeviceOption",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.GpuDeviceType"
  ],
  "type": "function"
 },
 "caffe2.python.core_test.TestCreatePlan": {
  "lineno": 516,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.core_test.TestCreatePlan.test_create_plan_from_proto_correctly": {
  "lineno": 518,
  "symbols_in_volume": [
   "caffe2.python.core.Plan",
   "caffe2.python.core.Plan.create_from_proto",
   "caffe2.python.net_builder.ops.Add",
   "caffe2.python.net_builder.ops.Const",
   "caffe2.python.net_builder.ops.Copy",
   "caffe2.python.net_builder.ops.Mul",
   "caffe2.python.net_builder.ops.loop",
   "caffe2.python.net_builder.ops.task_exit",
   "caffe2.python.net_builder.ops.task_init",
   "caffe2.python.net_builder.ops.task_instance_exit",
   "caffe2.python.net_builder.ops.task_instance_init",
   "caffe2.python.task.Node",
   "caffe2.python.task.Task"
  ],
  "type": "function"
 },
 "caffe2.python.core_test.TestDeviceOption": {
  "lineno": 562,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.core_test.TestDeviceOption.test_check_equal_default_value": {
  "lineno": 573,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.DeviceOption",
   "caffe2.python.core.device_option_equal"
  ],
  "type": "function"
 },
 "caffe2.python.core_test.TestDeviceOption.test_check_equal_node_name": {
  "lineno": 563,
  "symbols_in_volume": [
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.device_option_equal"
  ],
  "type": "function"
 },
 "caffe2.python.core_test.TestExternalInputs": {
  "lineno": 236,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.core_test.TestExternalInputs.testSetInputRecordWithBlobs": {
  "lineno": 237,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.schema.NewRecord",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "numpy.float"
  ],
  "type": "function"
 },
 "caffe2.python.core_test.TestExternalInputs.testSetInputRecordWithoutBlobs": {
  "lineno": 246,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "numpy.float"
  ],
  "type": "function"
 },
 "caffe2.python.core_test.TestExtractPredictorNet": {
  "lineno": 394,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.core_test.TestExtractPredictorNet.test_extract_simple": {
  "lineno": 396,
  "symbols_in_volume": [
   "caffe2.python.brew.conv",
   "caffe2.python.brew.fc",
   "caffe2.python.brew.image_input",
   "caffe2.python.brew.softmax",
   "caffe2.python.model_helper.ExtractPredictorNet",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.RegisteredOperators",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.core_test.TestInferDevice": {
  "lineno": 647,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase",
   "caffe2.python.workspace.has_gpu_support",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.core_test.TestInferDevice._test_op": {
  "lineno": 657,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.core.InferOpBlobDevices"
  ],
  "type": "function"
 },
 "caffe2.python.core_test.TestInferDevice.setUp": {
  "lineno": 650,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.DeviceOption",
   "caffe2.python.workspace.GpuDeviceType"
  ],
  "type": "function"
 },
 "caffe2.python.core_test.TestInferDevice.test_blob_inplace": {
  "lineno": 1142,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.core.InjectCrossDeviceCopies",
   "caffe2.python.core.Net",
   "caffe2.python.workspace.GpuDeviceType"
  ],
  "type": "function"
 },
 "caffe2.python.core_test.TestInferDevice.test_cross_nets": {
  "lineno": 788,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.core.InjectDeviceCopiesAmongNets",
   "caffe2.python.core.Net",
   "caffe2.python.workspace.GpuDeviceType"
  ],
  "type": "function"
 },
 "caffe2.python.core_test.TestInferDevice.test_cross_nets_no_change": {
  "lineno": 883,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.core.InjectDeviceCopiesAmongNetsWithoutB2D",
   "caffe2.python.core.Net",
   "caffe2.python.workspace.GpuDeviceType"
  ],
  "type": "function"
 },
 "caffe2.python.core_test.TestInferDevice.test_device_inference_function": {
  "lineno": 736,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.core.InferOpBlobDevices"
  ],
  "type": "function"
 },
 "caffe2.python.core_test.TestInferDevice.test_infer_device": {
  "lineno": 691,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core_test.TestInferDevice.test_infer_device_adam": {
  "lineno": 711,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core_test.TestInferDevice.test_infer_device_cross_device": {
  "lineno": 725,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core_test.TestInferDevice.test_infer_device_split_by_lengths": {
  "lineno": 701,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.core_test.TestInferDevice.test_inject_copy": {
  "lineno": 761,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.core.InjectCrossDeviceCopies",
   "caffe2.python.core.Net",
   "caffe2.python.workspace.GpuDeviceType"
  ],
  "type": "function"
 },
 "caffe2.python.core_test.TestInferDevice.test_inject_copy_multi_use": {
  "lineno": 926,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.core.InjectCrossDeviceCopies",
   "caffe2.python.core.Net",
   "caffe2.python.workspace.GpuDeviceType"
  ],
  "type": "function"
 },
 "caffe2.python.core_test.TestInferDevice.test_inject_copy_placeholder_ops": {
  "lineno": 1065,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.DeviceOption",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.core.InjectCrossDeviceCopies",
   "caffe2.python.core.Net",
   "caffe2.python.workspace.GpuDeviceType"
  ],
  "type": "function"
 },
 "caffe2.python.core_test.TestInferDeviceCpuOnly": {
  "lineno": 587,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.core_test.TestInferDeviceCpuOnly.test_inject_copy": {
  "lineno": 588,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.core.InjectCrossDeviceCopies",
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.core_test.TestOpRegistryKey": {
  "lineno": 552,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.core_test.TestOpRegistryKey.test_is_operator": {
  "lineno": 553,
  "symbols_in_volume": [
   "caffe2.python.core.IsOperator"
  ],
  "type": "function"
 },
 "caffe2.python.core_test.TestOpRegistryKey.test_is_operator_with_engine": {
  "lineno": 557,
  "symbols_in_volume": [
   "caffe2.python.core.IsOperatorWithEngine"
  ],
  "type": "function"
 },
 "caffe2.python.core_test.TestOperatorTraceback": {
  "lineno": 448,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.core_test.TestOperatorTraceback.op_name_check": {
  "lineno": 449,
  "symbols_in_volume": [
   "inspect.getframeinfo"
  ],
  "type": "function"
 },
 "caffe2.python.core_test.TestOperatorTraceback.test_async_exception_handling": {
  "lineno": 503,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.RunNetOnce",
   "inspect.currentframe",
   "numpy.array",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.core_test.TestOperatorTraceback.test_c_workspace_constructor": {
  "lineno": 479,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.C.Workspace",
   "inspect.currentframe"
  ],
  "type": "function"
 },
 "caffe2.python.core_test.TestOperatorTraceback.test_c_workspace_runtime": {
  "lineno": 491,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.C.Workspace",
   "inspect.currentframe",
   "numpy.array",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.core_test.TestOperatorTraceback.test_operator_constructor_traceback": {
  "lineno": 455,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.RunNetOnce",
   "inspect.currentframe"
  ],
  "type": "function"
 },
 "caffe2.python.core_test.TestOperatorTraceback.test_operator_runtime_traceback": {
  "lineno": 466,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.RunNet",
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.python.workspace.blobs",
   "inspect.currentframe",
   "numpy.array",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.core_test.TestRerouteTensor": {
  "lineno": 1168,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.core_test.TestRerouteTensor.test_reroute_tensor": {
  "lineno": 1169,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.core_test.TestRunAllOnGPU": {
  "lineno": 1182,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.core_test.TestRunAllOnGPU.test_rnn_run_on_gpu": {
  "lineno": 1183,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.GpuDeviceType"
  ],
  "type": "function"
 },
 "caffe2.python.core_test.TestScopes": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.core_test.TestScopes.testBlobReferenceIsIndependentFromNameScope": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "caffe2.python.core.NameScope"
  ],
  "type": "function"
 },
 "caffe2.python.core_test.TestScopes.testDeviceScope": {
  "lineno": 79,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.proto.caffe2_pb2.DeviceOption",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.workspace.GpuDeviceType"
  ],
  "type": "function"
 },
 "caffe2.python.core_test.TestScopes.testNameAndDeviceScopeTogether": {
  "lineno": 109,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.DeviceOption",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.core.NameScope",
   "caffe2.python.workspace.GpuDeviceType"
  ],
  "type": "function"
 },
 "caffe2.python.core_test.TestScopes.testNameScopeWithOp": {
  "lineno": 27,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.NameScope"
  ],
  "type": "function"
 },
 "caffe2.python.core_test.TestScopes.testNameScopeWithReset": {
  "lineno": 44,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.NameScope"
  ],
  "type": "function"
 },
 "caffe2.python.crf": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.crf.CRFWithLoss": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.crf.CRFWithLoss.__init__": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.core.ScopedBlobReference"
  ],
  "type": "function"
 },
 "caffe2.python.crf.CRFWithLoss._crf_forward": {
  "lineno": 117,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.INT32"
  ],
  "type": "function"
 },
 "caffe2.python.crf.CRFWithLoss._gather_entries_sum": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.crf.CRFWithLoss._path_binary_scores": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.crf.CRFWithLoss.build_crf_net": {
  "lineno": 136,
  "symbols_in_volume": [
   "caffe2.python.brew.transpose",
   "caffe2.python.core.DataType.INT32",
   "caffe2.python.core.ScopedBlobReference",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.recurrent.recurrent_net"
  ],
  "type": "function"
 },
 "caffe2.python.crf.CRFWithLoss.build_crf_net.s": {
  "lineno": 152,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.crf.CRFWithLoss.crf_loss": {
  "lineno": 32,
  "symbols_in_volume": [
   "caffe2.python.core.ScopedBlobReference"
  ],
  "type": "function"
 },
 "caffe2.python.crf.CRFWithLoss.pad_labels": {
  "lineno": 269,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.crf.CRFWithLoss.pad_predictions": {
  "lineno": 279,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.crf.CRFWithLoss.update_predictions": {
  "lineno": 216,
  "symbols_in_volume": [
   "caffe2.python.core.ScopedBlobReference"
  ],
  "type": "function"
 },
 "caffe2.python.crf.CRFWithLoss.update_predictions.crf_update_predictions_op": {
  "lineno": 217,
  "symbols_in_volume": [
   "numpy.argmax",
   "numpy.expand_dims",
   "numpy.int32",
   "numpy.max",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.crf_predict": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.crf_predict.apply_crf": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.crf.CRFWithLoss.pad_predictions",
   "numpy.array",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.crf_predict.crf_update_predictions": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.crf_viterbi_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.crf_viterbi_test.TestCrfDecode": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.crf_viterbi_test.TestCrfDecode.test_crf_viterbi": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.cnn.CNNModelHelper",
   "caffe2.python.crf.CRFWithLoss",
   "caffe2.python.crf_predict.crf_update_predictions",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.randn",
   "numpy.random.uniform",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.dyndep.InitOpsLibrary",
   "caffe2.python.workspace.NumGpuDevices",
   "logging.INFO",
   "logging.getLogger"
  ],
  "type": "module"
 },
 "caffe2.python.data_parallel_model.AddBlobSync": {
  "lineno": 1128,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model.AddDistributedBlobSync": {
  "lineno": 1152,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model.CollectivesConcurrencyControl": {
  "lineno": 1308,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.data_parallel_model.CollectivesConcurrencyControl.__init__": {
  "lineno": 1314,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model.CollectivesConcurrencyControl.get_control_and_context": {
  "lineno": 1329,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model.ConvertNetForDevice": {
  "lineno": 814,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.IDEEP",
   "caffe2.python.core.IsGPUDeviceType",
   "caffe2.python.scope.CurrentDeviceScope",
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model.CreateNet": {
  "lineno": 722,
  "symbols_in_volume": [
   "caffe2.python.workspace.CreateNet"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model.ExtractPredictorNet": {
  "lineno": 884,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ExtractPredictorNet"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model.FinalizeAfterCheckpoint": {
  "lineno": 931,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "caffe2.python.core.Net",
   "caffe2.python.scope._NAMESCOPE_SEPARATOR",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.RunNet",
   "caffe2.python.workspace.RunNetOnce"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model.GetCheckpointParams": {
  "lineno": 907,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model.GetLearningRateBlobNames": {
  "lineno": 988,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.proto.caffe2_pb2.IDEEP",
   "caffe2.python.core.IsGPUDeviceType"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model.OptimizeGradientMemory": {
  "lineno": 1772,
  "symbols_in_volume": [
   "caffe2.python.memonger.share_grad_blobs",
   "caffe2.python.workspace.InferShapesAndTypes",
   "future.utils.viewitems",
   "future.utils.viewvalues"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model.Parallelize": {
  "lineno": 50,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.proto.caffe2_pb2.IDEEP",
   "caffe2.python.core.BlobReference",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.core.NameScope",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.scope.CurrentDeviceScope",
   "caffe2.python.workspace.GpuDeviceType",
   "caffe2.python.workspace.NumCudaDevices",
   "caffe2.python.workspace.NumGpuDevices",
   "copy.copy",
   "future.utils.viewkeys",
   "multiprocessing.cpu_count"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model.Parallelize_BMUF": {
  "lineno": 428,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.core.Net",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.scope.CurrentDeviceScope",
   "caffe2.python.workspace.GpuDeviceType",
   "caffe2.python.workspace.NumGpuDevices",
   "copy.copy",
   "future.utils.viewkeys"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model.Parallelize_BMUF._InitializeModels": {
  "lineno": 539,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model.Parallelize_BMUF._InitializeParamUpdate": {
  "lineno": 566,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model.Parallelize_BMUF._g": {
  "lineno": 528,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model.Parallelize_BMUF._v": {
  "lineno": 525,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model.Parallelize_BMUF._v_prev": {
  "lineno": 531,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model.Parallelize_CPU": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model.Parallelize_CPU_BMUF": {
  "lineno": 423,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model.Parallelize_GPU": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model.Parallelize_GPU_BMUF": {
  "lineno": 418,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model.Parallelize_iDeep": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model.RunInitNet": {
  "lineno": 730,
  "symbols_in_volume": [
   "caffe2.python.workspace.RunNetOnce"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model.RunNet": {
  "lineno": 741,
  "symbols_in_volume": [
   "caffe2.python.workspace.RunNet"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model.RunWarmup": {
  "lineno": 736,
  "symbols_in_volume": [
   "caffe2.python.workspace.RunNet",
   "caffe2.python.workspace.RunNetOnce"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model.Synchronize": {
  "lineno": 788,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.RunNet",
   "caffe2.python.workspace.RunNetOnce",
   "warnings.warn"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model._AddBarrierToModelNets": {
  "lineno": 749,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model._AddDynamicMemoryOptimization": {
  "lineno": 1749,
  "symbols_in_volume": [
   "caffe2.python.memonger.release_blobs_when_used",
   "future.utils.viewvalues"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model._AddGradientOperators": {
  "lineno": 868,
  "symbols_in_volume": [
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model._AddGradientOperators.create_grad": {
  "lineno": 869,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model._AllReduce": {
  "lineno": 1041,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CUDA",
   "caffe2.python.workspace.GetGpuPeerAccessPattern",
   "caffe2.python.workspace.GpuDeviceType",
   "future.utils.viewvalues"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model._AllReduce.sumN": {
  "lineno": 1055,
  "symbols_in_volume": [
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model._AllReduceBlobs": {
  "lineno": 1238,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model._AllReduceBlobsDistributed": {
  "lineno": 1348,
  "symbols_in_volume": [
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "future.utils.viewvalues"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model._AllReduceBlobsDistributed.allreduce": {
  "lineno": 1383,
  "symbols_in_volume": [
   "caffe2.python.core.DeviceScope"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model._AllReduceBlobsSingleHost": {
  "lineno": 1428,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.proto.caffe2_pb2.IDEEP",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.core.GradientSlice",
   "future.utils.viewitems",
   "future.utils.viewvalues"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model._AnalyzeOperators": {
  "lineno": 1564,
  "symbols_in_volume": [
   "caffe2.python.core.IsGPUDeviceType"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model._Broadcast": {
  "lineno": 1010,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.proto.caffe2_pb2.IDEEP",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.workspace.GpuDeviceType",
   "future.utils.viewvalues"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model._BroadcastComputedParams": {
  "lineno": 1516,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model._BroadcastComputedParamsDistributed": {
  "lineno": 1523,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model._BroadcastComputedParamsSingleHost": {
  "lineno": 1533,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model._CPUInterDeviceBatchNormalization": {
  "lineno": 1968,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.utils.MakeArgument"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model._CPUInterDeviceBatchNormalization._cpuReduce": {
  "lineno": 1985,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model._ComputeBlobsToSync": {
  "lineno": 1692,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model._ComputeBlobsToSync.extract_sort_key": {
  "lineno": 1722,
  "symbols_in_volume": [
   "caffe2.python.scope._NAMESCOPE_SEPARATOR"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model._CreateBarrierNet": {
  "lineno": 769,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model._CreateOrCloneCommonWorld": {
  "lineno": 1813,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model._ForEachDevice": {
  "lineno": 856,
  "symbols_in_volume": [
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.core.NameScope"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model._GPUInterDeviceBatchNormalization": {
  "lineno": 2073,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.utils.MakeArgument"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model._GPUInterDeviceBatchNormalization._gpuReduce": {
  "lineno": 2092,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.DeviceOption"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model._GetReverseOrderedGrads": {
  "lineno": 1546,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model._GroupByDevice": {
  "lineno": 1644,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "caffe2.python.core.GradientSlice",
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model._InferBlobDevice": {
  "lineno": 1597,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model._InferBlobDevice.map_ops": {
  "lineno": 1603,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.proto.caffe2_pb2.DeviceOption"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model._InterleaveOps": {
  "lineno": 1935,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model._IsGPUBlob": {
  "lineno": 1632,
  "symbols_in_volume": [
   "caffe2.python.core.IsGPUDeviceType"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model._IsIDEEPBlob": {
  "lineno": 1621,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.IDEEP"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model._OptimizeGradientMemorySimple": {
  "lineno": 1735,
  "symbols_in_volume": [
   "caffe2.python.memonger.share_grad_blobs",
   "future.utils.viewvalues"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model._PruneParametersForSharing": {
  "lineno": 1259,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model._RemapParameterBlobsForSharedModel": {
  "lineno": 1276,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model._RemapParameterBlobsForSharedModel.modify_ops": {
  "lineno": 1284,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model._RunComparison": {
  "lineno": 1879,
  "symbols_in_volume": [
   "caffe2.python.core.DeviceScope",
   "caffe2.python.core.Net",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.float32",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model._SyncAllParams": {
  "lineno": 1105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model._SyncAllParamsDistributed": {
  "lineno": 1172,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.proto.caffe2_pb2.IDEEP",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "future.utils.viewvalues"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model._SyncAllParamsDistributed.broadcast": {
  "lineno": 1200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model._SyncAllParamsSingleHost": {
  "lineno": 1233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model._ValidateParams": {
  "lineno": 1679,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model.stripBlobName": {
  "lineno": 1555,
  "symbols_in_volume": [
   "caffe2.python.core.GradientSlice",
   "caffe2.python.scope._NAMESCOPE_SEPARATOR"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.dyndep.InitOpsLibrary",
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest": {
  "lineno": 39,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase",
   "os.environ.get",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest._bn_check_op_level": {
  "lineno": 462,
  "symbols_in_volume": [
   "caffe2.python.cnn.CNNModelHelper",
   "caffe2.python.data_parallel_model.Parallelize",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.array",
   "numpy.float32",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest._bn_check_op_level._test_backward_pass": {
  "lineno": 487,
  "symbols_in_volume": [
   "caffe2.python.workspace.FetchBlob",
   "numpy.array",
   "numpy.float32",
   "numpy.isclose",
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest._bn_check_op_level._test_forward_pass": {
  "lineno": 473,
  "symbols_in_volume": [
   "caffe2.python.workspace.FetchBlob",
   "numpy.concatenate",
   "numpy.linalg.norm",
   "numpy.mean",
   "numpy.sqrt",
   "numpy.var"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest._bn_check_op_level.add_input_ops": {
  "lineno": 534,
  "symbols_in_volume": [
   "caffe2.python.workspace.FeedBlob",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest._bn_check_op_level.add_model_ops": {
  "lineno": 539,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest._bn_check_op_level.add_optimizer": {
  "lineno": 550,
  "symbols_in_volume": [
   "caffe2.python.optimizer.build_sgd"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest._test_multi_device_bn_net_lvl": {
  "lineno": 600,
  "symbols_in_volume": [
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.seed",
   "numpy.reshape"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest._test_multi_device_bn_net_lvl._create_model": {
  "lineno": 643,
  "symbols_in_volume": [
   "caffe2.python.cnn.CNNModelHelper",
   "caffe2.python.data_parallel_model.Parallelize"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest._test_multi_device_bn_net_lvl._create_model.add_input_ops_combine": {
  "lineno": 647,
  "symbols_in_volume": [
   "caffe2.python.workspace.FeedBlob"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest._test_multi_device_bn_net_lvl._create_model.add_input_ops_no_combine": {
  "lineno": 644,
  "symbols_in_volume": [
   "caffe2.python.workspace.FeedBlob"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest._test_multi_device_bn_net_lvl._create_model.add_model_ops": {
  "lineno": 652,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest._test_multi_device_bn_net_lvl._create_model.add_optimizer": {
  "lineno": 663,
  "symbols_in_volume": [
   "caffe2.python.optimizer.build_sgd"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest._test_multi_device_bn_net_lvl._verify_bn_outputs": {
  "lineno": 611,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.isclose",
   "numpy.linalg.norm"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.run_model": {
  "lineno": 42,
  "symbols_in_volume": [
   "caffe2.python.cnn.CNNModelHelper",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.data_parallel_model.AddBlobSync",
   "caffe2.python.data_parallel_model.GetLearningRateBlobNames",
   "caffe2.python.data_parallel_model.Parallelize",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNet",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.strategies",
   "hypothesis.strategies.astype",
   "numpy.array",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.seed",
   "numpy.round"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.run_model.add_optimizer": {
  "lineno": 62,
  "symbols_in_volume": [
   "caffe2.python.optimizer.build_sgd"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.run_model.input_builder_fun": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.run_model.model_build_fun": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.run_test_locally": {
  "lineno": 132,
  "symbols_in_volume": [
   "multiprocessing.Process",
   "multiprocessing.Queue"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.run_test_locally.run_fn": {
  "lineno": 137,
  "symbols_in_volume": [
   "caffe2.python.core.DeviceScope",
   "caffe2.python.workspace.ResetWorkspace"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_checkpoint_params": {
  "lineno": 198,
  "symbols_in_volume": [
   "caffe2.python.cnn.CNNModelHelper",
   "caffe2.python.core.BlobReference",
   "caffe2.python.data_parallel_model.GetCheckpointParams",
   "caffe2.python.data_parallel_model.Parallelize_CPU"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_checkpoint_params.add_input_ops": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_checkpoint_params.add_model_ops": {
  "lineno": 202,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_checkpoint_params.add_optimizer": {
  "lineno": 222,
  "symbols_in_volume": [
   "caffe2.python.optimizer.build_sgd"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_device_scope_check": {
  "lineno": 410,
  "symbols_in_volume": [
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.data_parallel_model.Parallelize_GPU",
   "caffe2.python.workspace.GpuDeviceType"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_equiv": {
  "lineno": 172,
  "symbols_in_volume": [
   "caffe2.python.workspace.NumCudaDevices",
   "caffe2.python.workspace.has_gpu_support",
   "numpy.allclose"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_multi_device_bn_net_lvl_cpu": {
  "lineno": 584,
  "symbols_in_volume": [
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_multi_device_bn_net_lvl_gpu": {
  "lineno": 591,
  "symbols_in_volume": [
   "caffe2.python.workspace.NumCudaDevices",
   "caffe2.python.workspace.has_gpu_support",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_multi_device_bn_op_level_cpu": {
  "lineno": 450,
  "symbols_in_volume": [
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_multi_device_bn_op_level_gpu": {
  "lineno": 455,
  "symbols_in_volume": [
   "caffe2.python.workspace.NumCudaDevices",
   "caffe2.python.workspace.has_gpu_support",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_net_conversion_and_append_net": {
  "lineno": 253,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.cnn.CNNModelHelper",
   "caffe2.python.data_parallel_model.Parallelize_CPU",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.RunNet",
   "caffe2.python.workspace.RunNetOnce"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_net_conversion_and_append_net.add_input_ops": {
  "lineno": 259,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_net_conversion_and_append_net.add_model_ops": {
  "lineno": 263,
  "symbols_in_volume": [
   "caffe2.python.data_parallel_model.ConvertNetForDevice"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_net_conversion_and_append_net.add_optimizer": {
  "lineno": 285,
  "symbols_in_volume": [
   "caffe2.python.optimizer.build_sgd"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_net_transformer_function": {
  "lineno": 415,
  "symbols_in_volume": [
   "caffe2.python.data_parallel_model.Parallelize_CPU",
   "caffe2.python.model_helper.ModelHelper",
   "mock.Mock"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_net_transformer_function.add_input_ops": {
  "lineno": 418,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_net_transformer_function.add_model_ops": {
  "lineno": 424,
  "symbols_in_volume": [
   "caffe2.python.brew.fc"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_net_transformer_function.add_optimizer": {
  "lineno": 421,
  "symbols_in_volume": [
   "caffe2.python.optimizer.build_sgd"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_pre_train_synchronization_barrier": {
  "lineno": 354,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_pre_train_synchronization_barrier.run": {
  "lineno": 355,
  "symbols_in_volume": [
   "caffe2.python.cnn.CNNModelHelper",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.data_parallel_model.Parallelize_CPU",
   "caffe2.python.data_parallel_model.RunInitNet",
   "caffe2.python.data_parallel_model.RunNet",
   "caffe2.python.data_parallel_model._DEFAULT_TIMEOUT_SEC",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunOperatorOnce",
   "time.sleep"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_pre_train_synchronization_barrier.run.add_input_ops": {
  "lineno": 356,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_pre_train_synchronization_barrier.run.add_model_ops": {
  "lineno": 359,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_pre_train_synchronization_barrier.run.add_optimizer": {
  "lineno": 362,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_synchronization_barrier": {
  "lineno": 305,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_synchronization_barrier.run": {
  "lineno": 306,
  "symbols_in_volume": [
   "caffe2.python.cnn.CNNModelHelper",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.data_parallel_model.Parallelize_CPU",
   "caffe2.python.data_parallel_model.RunInitNet",
   "caffe2.python.data_parallel_model.Synchronize",
   "caffe2.python.workspace.RunOperatorOnce"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_synchronization_barrier.run.add_input_ops": {
  "lineno": 307,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_synchronization_barrier.run.add_model_ops": {
  "lineno": 310,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_synchronization_barrier.run.add_optimizer": {
  "lineno": 313,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.ParallelizeBMUFTest": {
  "lineno": 1081,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase",
   "caffe2.python.workspace.NumGpuDevices",
   "caffe2.python.workspace.has_gpu_support",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.data_parallel_model_test.ParallelizeBMUFTest._generate_data": {
  "lineno": 1119,
  "symbols_in_volume": [
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.workspace.FeedBlob",
   "hypothesis.strategies",
   "hypothesis.strategies.astype",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.seed",
   "numpy.round"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.ParallelizeBMUFTest._model_build_fun": {
  "lineno": 1092,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.ParallelizeBMUFTest._param_update_fun": {
  "lineno": 1104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.ParallelizeBMUFTest._run_model": {
  "lineno": 1085,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.ParallelizeBMUFTest._run_model.input_builder_fun": {
  "lineno": 1089,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.ParallelizeBMUFTest.test_parallelize_bmuf": {
  "lineno": 1137,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.cnn.CNNModelHelper",
   "caffe2.python.data_parallel_model.Parallelize_BMUF",
   "caffe2.python.data_parallel_model.RunInitNet",
   "caffe2.python.data_parallel_model.RunNet",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.GpuDeviceType",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.python.workspace.has_gpu_support",
   "caffe2.python.workspace.has_hip_support",
   "future.utils.viewkeys",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "numpy.float32",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.ParallelizeBMUFTest.test_parallelize_bmuf.input_builder_fun": {
  "lineno": 1152,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.RecurrentNetworkParallelTest": {
  "lineno": 741,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.data_parallel_model_test.RecurrentNetworkParallelTest.run_model": {
  "lineno": 743,
  "symbols_in_volume": [
   "caffe2.python.cnn.CNNModelHelper",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.data_parallel_model.Parallelize",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNet",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.strategies",
   "hypothesis.strategies.astype",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.RecurrentNetworkParallelTest.run_model.input_builder_fun": {
  "lineno": 748,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.RecurrentNetworkParallelTest.run_model.model_build_fun": {
  "lineno": 751,
  "symbols_in_volume": [
   "caffe2.python.core.ScopedBlobReference",
   "caffe2.python.rnn_cell.LSTM",
   "caffe2.python.workspace.FeedBlob",
   "numpy.array",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.RecurrentNetworkParallelTest.run_model.param_update_fun": {
  "lineno": 787,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.RecurrentNetworkParallelTest.test_equiv_recurrent": {
  "lineno": 860,
  "symbols_in_volume": [
   "caffe2.python.workspace.NumCudaDevices",
   "caffe2.python.workspace.has_gpu_support",
   "numpy.allclose",
   "unittest.skip"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.SparseDataParallelModelTest": {
  "lineno": 883,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase",
   "caffe2.python.workspace.NumCudaDevices",
   "caffe2.python.workspace.has_gpu_support",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.data_parallel_model_test.SparseDataParallelModelTest._test_equiv_sparse": {
  "lineno": 1054,
  "symbols_in_volume": [
   "caffe2.python.workspace.NumCudaDevices",
   "numpy.allclose"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.SparseDataParallelModelTest.run_model": {
  "lineno": 891,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.cnn.CNNModelHelper",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.core.NameScope",
   "caffe2.python.data_parallel_model.Parallelize_GPU",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.GpuDeviceType",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNet",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.strategies",
   "hypothesis.strategies.astype",
   "numpy.allclose",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.permutation",
   "numpy.random.rand",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.SparseDataParallelModelTest.run_model.input_builder_fun": {
  "lineno": 893,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.SparseDataParallelModelTest.run_model.model_build_fun": {
  "lineno": 896,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.SparseDataParallelModelTest.run_model.param_update_fun": {
  "lineno": 919,
  "symbols_in_volume": [
   "caffe2.python.core.GradientSlice"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.SparseDataParallelModelTest.test_equiv_sparse": {
  "lineno": 1076,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.SparseDataParallelModelTestWithSharedIndices": {
  "lineno": 1229,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase",
   "caffe2.python.workspace.NumGpuDevices",
   "caffe2.python.workspace.has_gpu_support",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.data_parallel_model_test.SparseDataParallelModelTestWithSharedIndices.run_model": {
  "lineno": 1237,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.cnn.CNNModelHelper",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.core.NameScope",
   "caffe2.python.data_parallel_model.Parallelize_GPU",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.GpuDeviceType",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNet",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.strategies",
   "hypothesis.strategies.astype",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.permutation",
   "numpy.random.rand",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.SparseDataParallelModelTestWithSharedIndices.run_model.input_builder_fun": {
  "lineno": 1239,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.SparseDataParallelModelTestWithSharedIndices.run_model.model_build_fun": {
  "lineno": 1242,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.SparseDataParallelModelTestWithSharedIndices.run_model.param_update_fun": {
  "lineno": 1278,
  "symbols_in_volume": [
   "caffe2.python.core.GradientSlice"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.SparseDataParallelModelTestWithSharedIndices.test_sparse_shared_indices_gpu": {
  "lineno": 1408,
  "symbols_in_volume": [
   "caffe2.python.workspace.NumGpuDevices"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.TemporaryDirectory": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.data_parallel_model_test.TemporaryDirectory.__enter__": {
  "lineno": 27,
  "symbols_in_volume": [
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.TemporaryDirectory.__exit__": {
  "lineno": 31,
  "symbols_in_volume": [
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "caffe2.python.data_workers": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.INFO",
   "logging.getLogger"
  ],
  "type": "module"
 },
 "caffe2.python.data_workers.BatchFeeder": {
  "lineno": 154,
  "symbols_in_volume": [
   "caffe2.python.parallel_workers.State"
  ],
  "type": "class"
 },
 "caffe2.python.data_workers.BatchFeeder.__init__": {
  "lineno": 155,
  "symbols_in_volume": [
   "queue",
   "time.time"
  ],
  "type": "function"
 },
 "caffe2.python.data_workers.BatchFeeder._create_caffe2_ops": {
  "lineno": 383,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_workers.BatchFeeder._create_caffe2_queues": {
  "lineno": 363,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_workers.BatchFeeder._create_caffe2_queues.create_queue": {
  "lineno": 367,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.ScopedBlobReference",
   "caffe2.python.workspace.RunOperatorOnce"
  ],
  "type": "function"
 },
 "caffe2.python.data_workers.BatchFeeder._enqueue": {
  "lineno": 345,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "queue"
  ],
  "type": "function"
 },
 "caffe2.python.data_workers.BatchFeeder._enqueue_batch": {
  "lineno": 263,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.array",
   "numpy.split",
   "queue.Full",
   "time.time"
  ],
  "type": "function"
 },
 "caffe2.python.data_workers.BatchFeeder._enqueue_batch_direct": {
  "lineno": 255,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_workers.BatchFeeder._get": {
  "lineno": 198,
  "symbols_in_volume": [
   "queue.Empty",
   "time.time"
  ],
  "type": "function"
 },
 "caffe2.python.data_workers.BatchFeeder._init_scratch": {
  "lineno": 322,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "caffe2.python.workspace.FeedBlob",
   "itertools.chain",
   "numpy.array",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.data_workers.BatchFeeder._log_inputs_per_interval": {
  "lineno": 391,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "caffe2.python.data_workers.BatchFeeder._validate_chunk": {
  "lineno": 212,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "caffe2.python.data_workers.BatchFeeder.cleanup": {
  "lineno": 194,
  "symbols_in_volume": [
   "caffe2.python.utils.ResetBlobs"
  ],
  "type": "function"
 },
 "caffe2.python.data_workers.BatchFeeder.put": {
  "lineno": 236,
  "symbols_in_volume": [
   "queue.Full",
   "time.time"
  ],
  "type": "function"
 },
 "caffe2.python.data_workers.BatchFeeder.start": {
  "lineno": 181,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "caffe2.python.data_workers.BatchFeeder.stop": {
  "lineno": 185,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.RunOperatorOnce"
  ],
  "type": "function"
 },
 "caffe2.python.data_workers.DataWorker": {
  "lineno": 435,
  "symbols_in_volume": [
   "caffe2.python.parallel_workers.Worker"
  ],
  "type": "class"
 },
 "caffe2.python.data_workers.DataWorker.__init__": {
  "lineno": 436,
  "symbols_in_volume": [
   "caffe2.python.parallel_workers.Worker.__init__"
  ],
  "type": "function"
 },
 "caffe2.python.data_workers.DataWorker.finish": {
  "lineno": 455,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "caffe2.python.data_workers.DataWorker.run": {
  "lineno": 450,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_workers.GlobalCoordinator": {
  "lineno": 416,
  "symbols_in_volume": [
   "caffe2.python.parallel_workers.GlobalWorkerCoordinator"
  ],
  "type": "class"
 },
 "caffe2.python.data_workers.GlobalCoordinator.__init__": {
  "lineno": 417,
  "symbols_in_volume": [
   "caffe2.python.parallel_workers.GlobalWorkerCoordinator.__init__"
  ],
  "type": "function"
 },
 "caffe2.python.data_workers.GlobalCoordinator.get_queue": {
  "lineno": 421,
  "symbols_in_volume": [
   "queue.Queue"
  ],
  "type": "function"
 },
 "caffe2.python.data_workers.GlobalCoordinator.reset_data_input": {
  "lineno": 427,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_workers.enqueuer": {
  "lineno": 463,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_workers.get_worker_ids": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.data_workers.init_data_input_workers": {
  "lineno": 90,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.proto.caffe2_pb2.DeviceOption",
   "caffe2.python.parallel_workers.Metrics",
   "caffe2.python.parallel_workers.WorkerCoordinator",
   "caffe2.python.parallel_workers.run_worker",
   "caffe2.python.scope.CurrentDeviceScope",
   "caffe2.python.scope.CurrentNameScope",
   "threading.Thread"
  ],
  "type": "function"
 },
 "caffe2.python.data_workers_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.data_workers_test.DataWorkersTest": {
  "lineno": 38,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.data_workers_test.DataWorkersTest.testInputOrder": {
  "lineno": 115,
  "symbols_in_volume": [
   "caffe2.python.data_workers.init_data_input_workers",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.timeout_guard.CompleteInTimeOrDie",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNet",
   "caffe2.python.workspace.RunNetOnce",
   "time.sleep",
   "unittest.skip"
  ],
  "type": "function"
 },
 "caffe2.python.data_workers_test.DataWorkersTest.testInputOrder.dummy_fetcher_rnn_ordered1": {
  "lineno": 124,
  "symbols_in_volume": [
   "numpy.random.randint",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.data_workers_test.DataWorkersTest.testNonParallelModel": {
  "lineno": 40,
  "symbols_in_volume": [
   "caffe2.python.data_workers.global_coordinator._fetcher_id_seq",
   "caffe2.python.data_workers.init_data_input_workers",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.timeout_guard.CompleteInTimeOrDie",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNet",
   "caffe2.python.workspace.RunNetOnce"
  ],
  "type": "function"
 },
 "caffe2.python.data_workers_test.DataWorkersTest.testRNNInput": {
  "lineno": 79,
  "symbols_in_volume": [
   "caffe2.python.data_workers.global_coordinator._fetcher_id_seq",
   "caffe2.python.data_workers.init_data_input_workers",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNet",
   "caffe2.python.workspace.RunNetOnce",
   "time.sleep"
  ],
  "type": "function"
 },
 "caffe2.python.data_workers_test.dummy_fetcher": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.randint",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.data_workers_test.dummy_fetcher_rnn": {
  "lineno": 27,
  "symbols_in_volume": [
   "numpy.random.rand",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.dataio": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.dataio.CompositeReader": {
  "lineno": 519,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.dataio.CompositeReader.__init__": {
  "lineno": 524,
  "symbols_in_volume": [
   "caffe2.python.schema.Struct"
  ],
  "type": "function"
 },
 "caffe2.python.dataio.CompositeReader.read_ex": {
  "lineno": 541,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.dataio.CompositeReader.reset": {
  "lineno": 571,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataio.CompositeReader.setup_ex": {
  "lineno": 537,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataio.CompositeReaderBuilder": {
  "lineno": 576,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.dataio.CompositeReaderBuilder.__init__": {
  "lineno": 580,
  "symbols_in_volume": [
   "caffe2.python.schema.Struct"
  ],
  "type": "function"
 },
 "caffe2.python.dataio.CompositeReaderBuilder.new_reader": {
  "lineno": 621,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataio.CompositeReaderBuilder.schema": {
  "lineno": 595,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataio.CompositeReaderBuilder.setup": {
  "lineno": 598,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataio.CountUntil": {
  "lineno": 448,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataio.CounterReader": {
  "lineno": 297,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.dataio.CounterReader.__init__": {
  "lineno": 299,
  "symbols_in_volume": [
   "caffe2.python.schema.Struct",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.dataio.CounterReader.read_ex": {
  "lineno": 310,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.dataio.CounterReader.setup_ex": {
  "lineno": 304,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.BOOL"
  ],
  "type": "function"
 },
 "caffe2.python.dataio.Pipe": {
  "lineno": 259,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.dataio.Pipe.__init__": {
  "lineno": 260,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataio.Pipe._new_reader": {
  "lineno": 291,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataio.Pipe._new_writer": {
  "lineno": 284,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataio.Pipe.num_readers": {
  "lineno": 278,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataio.Pipe.num_writers": {
  "lineno": 281,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataio.Pipe.reader": {
  "lineno": 272,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataio.Pipe.schema": {
  "lineno": 266,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataio.Pipe.setup": {
  "lineno": 269,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataio.Pipe.writer": {
  "lineno": 275,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataio.PipedReaderBuilder": {
  "lineno": 226,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.dataio.PipedReaderBuilder.__init__": {
  "lineno": 239,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataio.PipedReaderBuilder.new_reader": {
  "lineno": 249,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataio.PipedReaderBuilder.schema": {
  "lineno": 243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataio.PipedReaderBuilder.setup": {
  "lineno": 246,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataio.Reader": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.dataio.Reader.__init__": {
  "lineno": 39,
  "symbols_in_volume": [
   "caffe2.python.schema.Field"
  ],
  "type": "function"
 },
 "caffe2.python.dataio.Reader._set_schema": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataio.Reader.execution_step": {
  "lineno": 107,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.core.execution_step"
  ],
  "type": "function"
 },
 "caffe2.python.dataio.Reader.read": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataio.Reader.read_ex": {
  "lineno": 60,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.dataio.Reader.read_record": {
  "lineno": 101,
  "symbols_in_volume": [
   "caffe2.python.schema.from_blob_list"
  ],
  "type": "function"
 },
 "caffe2.python.dataio.Reader.read_record_ex": {
  "lineno": 64,
  "symbols_in_volume": [
   "caffe2.python.schema.from_blob_list"
  ],
  "type": "function"
 },
 "caffe2.python.dataio.Reader.reset": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataio.Reader.schema": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataio.Reader.setup_ex": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataio.ReaderBuilder": {
  "lineno": 210,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.dataio.ReaderBuilder.new_reader": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataio.ReaderBuilder.schema": {
  "lineno": 212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataio.ReaderBuilder.setup": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataio.ReaderWithDelay": {
  "lineno": 498,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.dataio.ReaderWithDelay.__init__": {
  "lineno": 501,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataio.ReaderWithDelay.read_ex": {
  "lineno": 509,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.dataio.ReaderWithDelay.read_ex.sleep_op": {
  "lineno": 512,
  "symbols_in_volume": [
   "time.sleep"
  ],
  "type": "function"
 },
 "caffe2.python.dataio.ReaderWithDelay.setup_ex": {
  "lineno": 506,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataio.ReaderWithLimit": {
  "lineno": 410,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.dataio.ReaderWithLimit.__init__": {
  "lineno": 417,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataio.ReaderWithLimit.check_limiter_condition": {
  "lineno": 439,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.BOOL"
  ],
  "type": "function"
 },
 "caffe2.python.dataio.ReaderWithLimit.setup_limiter": {
  "lineno": 434,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataio.ReaderWithLimitBase": {
  "lineno": 316,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.dataio.ReaderWithLimitBase.__init__": {
  "lineno": 326,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.dataio.ReaderWithLimitBase.check_limiter_condition": {
  "lineno": 390,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataio.ReaderWithLimitBase.data_finished": {
  "lineno": 400,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataio.ReaderWithLimitBase.read_ex": {
  "lineno": 341,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.dataio.ReaderWithLimitBase.setup_ex": {
  "lineno": 334,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.BOOL"
  ],
  "type": "function"
 },
 "caffe2.python.dataio.ReaderWithLimitBase.setup_limiter": {
  "lineno": 380,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataio.ReaderWithTimeLimit": {
  "lineno": 452,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.dataio.ReaderWithTimeLimit.__init__": {
  "lineno": 459,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataio.ReaderWithTimeLimit.check_limiter_condition": {
  "lineno": 487,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.BOOL"
  ],
  "type": "function"
 },
 "caffe2.python.dataio.ReaderWithTimeLimit.setup_limiter": {
  "lineno": 475,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataio.Writer": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.dataio.Writer.commit": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataio.Writer.schema": {
  "lineno": 158,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataio.Writer.setup_ex": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataio.Writer.write": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataio.Writer.write_ex": {
  "lineno": 183,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.dataio.Writer.write_record": {
  "lineno": 173,
  "symbols_in_volume": [
   "caffe2.python.schema.Field"
  ],
  "type": "function"
 },
 "caffe2.python.dataio.Writer.write_record_ex": {
  "lineno": 189,
  "symbols_in_volume": [
   "caffe2.python.schema.Field"
  ],
  "type": "function"
 },
 "caffe2.python.dataio_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.dataio_test.TestCompositeReader": {
  "lineno": 79,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.dataio_test.TestCompositeReader.test_composite_reader": {
  "lineno": 80,
  "symbols_in_volume": [
   "caffe2.python.dataio.CompositeReader",
   "caffe2.python.pipeline.pipe",
   "caffe2.python.schema.Struct",
   "caffe2.python.session.LocalSession",
   "caffe2.python.task.TaskGroup",
   "caffe2.python.workspace.C.Workspace",
   "numpy.testing.assert_array_equal",
   "os.environ.get",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.dataio_test.TestCompositeReader.test_composite_reader_builder": {
  "lineno": 116,
  "symbols_in_volume": [
   "caffe2.python.dataio.CompositeReaderBuilder",
   "caffe2.python.pipeline.pipe",
   "caffe2.python.schema.Struct",
   "caffe2.python.session.LocalSession",
   "caffe2.python.task.TaskGroup",
   "caffe2.python.workspace.C.Workspace",
   "numpy.testing.assert_array_equal",
   "os.environ.get",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.dataio_test.TestDBFileReader": {
  "lineno": 346,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.dataio_test.TestDBFileReader._build_source_reader": {
  "lineno": 369,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataio_test.TestDBFileReader._delete_path": {
  "lineno": 355,
  "symbols_in_volume": [
   "os.path.isdir",
   "os.path.isfile",
   "os.remove",
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "caffe2.python.dataio_test.TestDBFileReader._make_temp_path": {
  "lineno": 362,
  "symbols_in_volume": [
   "tempfile.NamedTemporaryFile"
  ],
  "type": "function"
 },
 "caffe2.python.dataio_test.TestDBFileReader._read_all_data": {
  "lineno": 374,
  "symbols_in_volume": [
   "caffe2.python.pipeline.pipe",
   "caffe2.python.task.TaskGroup"
  ],
  "type": "function"
 },
 "caffe2.python.dataio_test.TestDBFileReader.setUp": {
  "lineno": 347,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataio_test.TestDBFileReader.tearDown": {
  "lineno": 350,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataio_test.TestDBFileReader.test_cached_reader": {
  "lineno": 384,
  "symbols_in_volume": [
   "caffe2.python.cached_reader.CachedReader",
   "caffe2.python.core.C.registered_dbs",
   "caffe2.python.session.LocalSession",
   "caffe2.python.workspace.C.Workspace",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.dataio_test.TestDBFileReader.test_db_file_reader": {
  "lineno": 424,
  "symbols_in_volume": [
   "caffe2.python.cached_reader.CachedReader",
   "caffe2.python.core.C.registered_dbs",
   "caffe2.python.db_file_reader.DBFileReader",
   "caffe2.python.session.LocalSession",
   "caffe2.python.workspace.C.Workspace",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.dataio_test.TestReaderBuilder": {
  "lineno": 57,
  "symbols_in_volume": [
   "caffe2.python.dataio.ReaderBuilder"
  ],
  "type": "class"
 },
 "caffe2.python.dataio_test.TestReaderBuilder.__init__": {
  "lineno": 58,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct"
  ],
  "type": "function"
 },
 "caffe2.python.dataio_test.TestReaderBuilder.new_reader": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataio_test.TestReaderBuilder.schema": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataio_test.TestReaderBuilder.setup": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataio_test.TestReaderWithLimit": {
  "lineno": 153,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.dataio_test.TestReaderWithLimit._test_limit_reader_init_shared": {
  "lineno": 204,
  "symbols_in_volume": [
   "caffe2.python.session.LocalSession",
   "caffe2.python.workspace.C.Workspace"
  ],
  "type": "function"
 },
 "caffe2.python.dataio_test.TestReaderWithLimit._test_limit_reader_shared": {
  "lineno": 216,
  "symbols_in_volume": [
   "caffe2.python.dataio.ReaderWithDelay",
   "caffe2.python.pipeline.pipe",
   "caffe2.python.task.TaskGroup",
   "caffe2.python.task.WorkspaceType.GLOBAL"
  ],
  "type": "function"
 },
 "caffe2.python.dataio_test.TestReaderWithLimit.test_count_limit_reader_with_high_limit": {
  "lineno": 285,
  "symbols_in_volume": [
   "caffe2.python.dataio.ReaderWithLimit"
  ],
  "type": "function"
 },
 "caffe2.python.dataio_test.TestReaderWithLimit.test_count_limit_reader_with_low_limit": {
  "lineno": 274,
  "symbols_in_volume": [
   "caffe2.python.dataio.ReaderWithLimit"
  ],
  "type": "function"
 },
 "caffe2.python.dataio_test.TestReaderWithLimit.test_count_limit_reader_with_zero_limit": {
  "lineno": 263,
  "symbols_in_volume": [
   "caffe2.python.dataio.ReaderWithLimit"
  ],
  "type": "function"
 },
 "caffe2.python.dataio_test.TestReaderWithLimit.test_count_limit_reader_without_limit": {
  "lineno": 252,
  "symbols_in_volume": [
   "caffe2.python.dataio.ReaderWithLimit"
  ],
  "type": "function"
 },
 "caffe2.python.dataio_test.TestReaderWithLimit.test_runtime_threads": {
  "lineno": 154,
  "symbols_in_volume": [
   "caffe2.python.dataio.ReaderWithLimit",
   "caffe2.python.pipeline.pipe",
   "caffe2.python.session.LocalSession",
   "caffe2.python.task.TaskGroup",
   "caffe2.python.workspace.C.Workspace"
  ],
  "type": "function"
 },
 "caffe2.python.dataio_test.TestReaderWithLimit.test_runtime_threads.proc": {
  "lineno": 160,
  "symbols_in_volume": [
   "caffe2.python.net_builder.ops.CountUp",
   "caffe2.python.net_builder.ops.CreateCounter",
   "caffe2.python.net_builder.ops.RetrieveCount",
   "caffe2.python.net_builder.ops.loop",
   "caffe2.python.net_builder.ops.task_exit",
   "caffe2.python.net_builder.ops.task_init",
   "caffe2.python.net_builder.ops.task_instance_exit",
   "caffe2.python.net_builder.ops.task_instance_init",
   "caffe2.python.task.final_output"
  ],
  "type": "function"
 },
 "caffe2.python.dataio_test.TestReaderWithLimit.test_time_limit_reader_with_long_limit": {
  "lineno": 332,
  "symbols_in_volume": [
   "caffe2.python.dataio.ReaderWithTimeLimit"
  ],
  "type": "function"
 },
 "caffe2.python.dataio_test.TestReaderWithLimit.test_time_limit_reader_with_short_limit": {
  "lineno": 307,
  "symbols_in_volume": [
   "caffe2.python.dataio.ReaderWithTimeLimit"
  ],
  "type": "function"
 },
 "caffe2.python.dataio_test.TestReaderWithLimit.test_time_limit_reader_without_limit": {
  "lineno": 296,
  "symbols_in_volume": [
   "caffe2.python.dataio.ReaderWithTimeLimit"
  ],
  "type": "function"
 },
 "caffe2.python.dataio_test.make_destination_dataset": {
  "lineno": 47,
  "symbols_in_volume": [
   "caffe2.python.core.NameScope",
   "caffe2.python.core.Net",
   "caffe2.python.dataset.Dataset",
   "caffe2.python.schema"
  ],
  "type": "function"
 },
 "caffe2.python.dataio_test.make_source_dataset": {
  "lineno": 35,
  "symbols_in_volume": [
   "caffe2.python.core.NameScope",
   "caffe2.python.core.Net",
   "caffe2.python.dataset.Dataset",
   "caffe2.python.schema.FeedRecord",
   "caffe2.python.schema.NewRecord",
   "caffe2.python.schema.Struct",
   "numpy.array"
  ],
  "type": "function"
 },
 "caffe2.python.dataset": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.dataset.Const": {
  "lineno": 159,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.FeedBlob",
   "numpy.array"
  ],
  "type": "function"
 },
 "caffe2.python.dataset.Dataset": {
  "lineno": 185,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.dataset.Dataset.__init__": {
  "lineno": 196,
  "symbols_in_volume": [
   "caffe2.python.schema.Struct",
   "caffe2.python.schema.from_column_list"
  ],
  "type": "function"
 },
 "caffe2.python.dataset.Dataset.content": {
  "lineno": 256,
  "symbols_in_volume": [
   "caffe2.python.schema.from_blob_list"
  ],
  "type": "function"
 },
 "caffe2.python.dataset.Dataset.field_names": {
  "lineno": 263,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataset.Dataset.field_types": {
  "lineno": 267,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataset.Dataset.get_blobs": {
  "lineno": 248,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataset.Dataset.init_empty": {
  "lineno": 228,
  "symbols_in_volume": [
   "caffe2.python.schema.InitEmptyRecord"
  ],
  "type": "function"
 },
 "caffe2.python.dataset.Dataset.init_from_dataframe": {
  "lineno": 237,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataset.Dataset.random_reader": {
  "lineno": 302,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataset.Dataset.reader": {
  "lineno": 276,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataset.Dataset.trim": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataset.Dataset.writer": {
  "lineno": 328,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataset._DatasetRandomReader": {
  "lineno": 58,
  "symbols_in_volume": [
   "caffe2.python.dataio.Reader"
  ],
  "type": "class"
 },
 "caffe2.python.dataset._DatasetRandomReader.__init__": {
  "lineno": 59,
  "symbols_in_volume": [
   "caffe2.python.dataio.Reader.__init__"
  ],
  "type": "function"
 },
 "caffe2.python.dataset._DatasetRandomReader.computeoffset": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataset._DatasetRandomReader.read": {
  "lineno": 107,
  "symbols_in_volume": [
   "caffe2.python.core.NameScope",
   "caffe2.python.core.output_to_list"
  ],
  "type": "function"
 },
 "caffe2.python.dataset._DatasetRandomReader.reset": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataset._DatasetRandomReader.setup_ex": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataset._DatasetRandomReader.sort_and_shuffle": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataset._DatasetReader": {
  "lineno": 25,
  "symbols_in_volume": [
   "caffe2.python.dataio.Reader"
  ],
  "type": "class"
 },
 "caffe2.python.dataset._DatasetReader.__init__": {
  "lineno": 26,
  "symbols_in_volume": [
   "caffe2.python.dataio.Reader.__init__"
  ],
  "type": "function"
 },
 "caffe2.python.dataset._DatasetReader.read": {
  "lineno": 42,
  "symbols_in_volume": [
   "caffe2.python.core.NameScope",
   "caffe2.python.core.output_to_list"
  ],
  "type": "function"
 },
 "caffe2.python.dataset._DatasetReader.reset": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataset._DatasetReader.setup_ex": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataset._DatasetWriter": {
  "lineno": 124,
  "symbols_in_volume": [
   "caffe2.python.dataio.Writer"
  ],
  "type": "class"
 },
 "caffe2.python.dataset._DatasetWriter.__init__": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataset._DatasetWriter.commit": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataset._DatasetWriter.setup_ex": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataset._DatasetWriter.write": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dataset.execution_step_with_progress": {
  "lineno": 173,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.core.execution_step"
  ],
  "type": "function"
 },
 "caffe2.python.db_file_reader": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.db_file_reader.DBFileReader": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.dataio.Reader"
  ],
  "type": "class"
 },
 "caffe2.python.db_file_reader.DBFileReader.__init__": {
  "lineno": 41,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.registered_dbs",
   "caffe2.python.dataset.Dataset",
   "os.path.expanduser"
  ],
  "type": "function"
 },
 "caffe2.python.db_file_reader.DBFileReader._extract_db_name_from_db_path": {
  "lineno": 172,
  "symbols_in_volume": [
   "os.path.basename"
  ],
  "type": "function"
 },
 "caffe2.python.db_file_reader.DBFileReader._feed_field_blobs_from_db_file": {
  "lineno": 158,
  "symbols_in_volume": [
   "os.path.exists"
  ],
  "type": "function"
 },
 "caffe2.python.db_file_reader.DBFileReader._init_field_blobs_as_empty": {
  "lineno": 153,
  "symbols_in_volume": [
   "caffe2.python.core.NameScope"
  ],
  "type": "function"
 },
 "caffe2.python.db_file_reader.DBFileReader._init_name": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.db_file_reader.DBFileReader._init_reader_schema": {
  "lineno": 77,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.NameScope",
   "caffe2.python.schema.from_column_list",
   "caffe2.python.scope.CurrentNameScope",
   "caffe2.python.workspace.Blobs",
   "caffe2.python.workspace.RunOperatorOnce",
   "os.path.exists"
  ],
  "type": "function"
 },
 "caffe2.python.db_file_reader.DBFileReader.read": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.db_file_reader.DBFileReader.setup_ex": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.db_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.db_test.TestDB": {
  "lineno": 13,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.db_test.TestDB.setUp": {
  "lineno": 14,
  "symbols_in_volume": [
   "os.close",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "caffe2.python.db_test.TestDB.testSimple": {
  "lineno": 25,
  "symbols_in_volume": [
   "caffe2.python.workspace.C.Mode.read",
   "caffe2.python.workspace.C.Mode.write",
   "caffe2.python.workspace.C.create_db"
  ],
  "type": "function"
 },
 "caffe2.python.device_checker": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.device_checker.DeviceChecker": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.device_checker.DeviceChecker.CheckNet": {
  "lineno": 76,
  "symbols_in_volume": [
   "caffe2.python.workspace.CurrentWorkspace",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.python.workspace.SwitchWorkspace",
   "future.utils.viewitems",
   "numpy.abs",
   "numpy.allclose",
   "numpy.max"
  ],
  "type": "function"
 },
 "caffe2.python.device_checker.DeviceChecker.CheckSimple": {
  "lineno": 21,
  "symbols_in_volume": [
   "caffe2.python.core.InferOpBlobDevicesAsDict",
   "caffe2.python.workspace.CurrentWorkspace",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunOperatorOnce",
   "caffe2.python.workspace.SwitchWorkspace",
   "copy.deepcopy",
   "numpy.abs",
   "numpy.allclose",
   "numpy.array",
   "numpy.max"
  ],
  "type": "function"
 },
 "caffe2.python.device_checker.DeviceChecker.__init__": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.docs.formatter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.docs.formatter.Formatter": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.docs.formatter.Formatter.__init__": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.formatter.Formatter.addBreak": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.formatter.Formatter.addCode": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.formatter.Formatter.addCodeLink": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.formatter.Formatter.addEmphasis": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.formatter.Formatter.addHeader": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.formatter.Formatter.addLine": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.formatter.Formatter.addLinebreak": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.formatter.Formatter.addLink": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.formatter.Formatter.addList": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.formatter.Formatter.addRaw": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.formatter.Formatter.addTable": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.formatter.Formatter.clone": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.formatter.Formatter.dump": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.formatter.Formatter.parseAndAdd": {
  "lineno": 20,
  "symbols_in_volume": [
   "caffe2.python.docs.parser.Parser"
  ],
  "type": "function"
 },
 "caffe2.python.docs.formatter.Markdown": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.docs.formatter.Markdown.addBreak": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.formatter.Markdown.addCode": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.formatter.Markdown.addCodeLink": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.formatter.Markdown.addEmphasis": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.formatter.Markdown.addHeader": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.formatter.Markdown.addLine": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.formatter.Markdown.addLinebreak": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.formatter.Markdown.addLink": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.formatter.Markdown.addList": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.formatter.Markdown.addRaw": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.formatter.Markdown.addTable": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.generator": {
  "lineno": null,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "caffe2.python.docs.formatter.Markdown",
   "caffe2.python.workspace.C.OpSchema"
  ],
  "type": "module"
 },
 "caffe2.python.docs.generator.DocGenerator": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.docs.generator.DocGenerator.__init__": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.generator.DocGenerator.create_body": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.generator.DocGenerator.update": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.generator.DocUploader": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.docs.generator.DocUploader.__init__": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.generator.DocUploader.upload": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.generator.OpDocGenerator": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.docs.generator.OpDocGenerator.createBody": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.generator.OpDocGenerator.getOperatorDoc": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.generator.OpDocGenerator.getOperatorEngine": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.generator.OpDocGenerator.getOperators": {
  "lineno": 44,
  "symbols_in_volume": [
   "caffe2.python.core._GetRegisteredOperators",
   "future.utils.viewitems",
   "future.utils.viewvalues",
   "os.path.dirname"
  ],
  "type": "function"
 },
 "caffe2.python.docs.generator.OpDocGenerator.getOperators.filePriority": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.generator.OperatorDoc": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.docs.generator.OperatorDoc.__init__": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.generator.OperatorDoc.addEngines": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.generator.OperatorDoc.generateCodeLink": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.generator.OperatorDoc.generateDevices": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.generator.OperatorDoc.generateDoc": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.generator.OperatorDoc.generateEngines": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.generator.OperatorDoc.generateInterface": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.generator.OperatorDoc.generateInterface.makeDesc": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.generator.OperatorDoc.generateSchema": {
  "lineno": 208,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.generator.OperatorDoc.generateTable": {
  "lineno": 138,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.generator.OperatorDoc.getInfo": {
  "lineno": 188,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.generator.OperatorEngine": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.docs.generator.OperatorEngine.__init__": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.generator.OperatorEngine.generateDoc": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.generator.OperatorEngine.getDeviceImpl": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.github": {
  "lineno": null,
  "symbols_in_volume": [
   "argparse.ArgumentParser"
  ],
  "type": "module"
 },
 "caffe2.python.docs.github.GHMarkdown": {
  "lineno": 22,
  "symbols_in_volume": [
   "caffe2.python.docs.formatter.Markdown"
  ],
  "type": "class"
 },
 "caffe2.python.docs.github.GHMarkdown.addDocHeader": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.github.GHMarkdown.addHeader": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.github.GHMarkdown.addTable": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.github.GHMarkdown.addTableHTML": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.github.GHOpDocGenerator": {
  "lineno": 98,
  "symbols_in_volume": [
   "caffe2.python.docs.generator.OpDocGenerator"
  ],
  "type": "class"
 },
 "caffe2.python.docs.github.GHOpDocGenerator.createBody": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.github.GHOpDocGenerator.getOperatorDoc": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.github.GHOpDocGenerator.getOperatorEngine": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.github.GHOpDocUploader": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.docs.generator.DocUploader"
  ],
  "type": "class"
 },
 "caffe2.python.docs.github.GHOpDocUploader.__init__": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.github.GHOpDocUploader.upload": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.github.GHOperatorDoc": {
  "lineno": 73,
  "symbols_in_volume": [
   "caffe2.python.docs.generator.OperatorDoc"
  ],
  "type": "class"
 },
 "caffe2.python.docs.github.GHOperatorDoc.generateCodeLink": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.github.GHOperatorDoc.generateSchema": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.github.GHOperatorDoc.getInfo": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.github.GHOperatorEngine": {
  "lineno": 64,
  "symbols_in_volume": [
   "caffe2.python.docs.generator.OperatorEngine"
  ],
  "type": "class"
 },
 "caffe2.python.docs.github.GHOperatorEngine.generateDoc": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.github.getCodeLink": {
  "lineno": 55,
  "symbols_in_volume": [
   "os.path.relpath"
  ],
  "type": "function"
 },
 "caffe2.python.docs.parser": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.docs.parser.Parser": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.docs.parser.Parser.__init__": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.parser.Parser.parse": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.docs.parser.Parser.parseText": {
  "lineno": 49,
  "symbols_in_volume": [
   "re.search"
  ],
  "type": "function"
 },
 "caffe2.python.dyndep": {
  "lineno": null,
  "symbols_in_volume": [
   "threading.Lock"
  ],
  "type": "module"
 },
 "caffe2.python.dyndep.GetImportedOpsLibraries": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.dyndep.InitOpsLibrary": {
  "lineno": 14,
  "symbols_in_volume": [
   "os.path.exists"
  ],
  "type": "function"
 },
 "caffe2.python.dyndep._init_impl": {
  "lineno": 46,
  "symbols_in_volume": [
   "caffe2.python.core.RefreshRegisteredOperators",
   "caffe2.python.extension_loader.DlopenGuard",
   "ctypes.CDLL"
  ],
  "type": "function"
 },
 "caffe2.python.embedding_generation_benchmark": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.workspace.GlobalInit",
   "logging.DEBUG",
   "logging.basicConfig",
   "logging.getLogger"
  ],
  "type": "module"
 },
 "caffe2.python.embedding_generation_benchmark.Benchmark": {
  "lineno": 136,
  "symbols_in_volume": [
   "caffe2.python.utils.debug"
  ],
  "type": "function"
 },
 "caffe2.python.embedding_generation_benchmark.Caffe2EmbeddingGeneration": {
  "lineno": 83,
  "symbols_in_volume": [
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.RunNet",
   "caffe2.python.workspace.RunNetOnce",
   "time.time"
  ],
  "type": "function"
 },
 "caffe2.python.embedding_generation_benchmark.GetArgumentParser": {
  "lineno": 141,
  "symbols_in_volume": [
   "argparse.ArgumentParser"
  ],
  "type": "function"
 },
 "caffe2.python.embedding_generation_benchmark.create_model": {
  "lineno": 64,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper"
  ],
  "type": "function"
 },
 "caffe2.python.embedding_generation_benchmark.generate_data": {
  "lineno": 22,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.arange",
   "numpy.random.seed",
   "numpy.tile"
  ],
  "type": "function"
 },
 "caffe2.python.embedding_generation_benchmark.generate_embedding_table": {
  "lineno": 49,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.RunNetOnce"
  ],
  "type": "function"
 },
 "caffe2.python.examples": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.examples.char_rnn": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.workspace.GlobalInit",
   "logging.DEBUG",
   "logging.basicConfig",
   "logging.getLogger"
  ],
  "type": "module"
 },
 "caffe2.python.examples.char_rnn.CharRNN": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.examples.char_rnn.CharRNN.CreateModel": {
  "lineno": 56,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.core.Net",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.optimizer.build_sgd",
   "caffe2.python.rnn_cell.LSTM"
  ],
  "type": "function"
 },
 "caffe2.python.examples.char_rnn.CharRNN.GenerateText": {
  "lineno": 217,
  "symbols_in_volume": [
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNet",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.choice",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.examples.char_rnn.CharRNN.TrainModel": {
  "lineno": 118,
  "symbols_in_volume": [
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNet",
   "caffe2.python.workspace.RunNetOnce",
   "datetime.datetime.now",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.log",
   "numpy.random.choice",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.examples.char_rnn.CharRNN.__init__": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.examples.char_rnn.CharRNN._idx_at_pos": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.examples.char_rnn.CreateNetOnce": {
  "lineno": 31,
  "symbols_in_volume": [
   "caffe2.python.workspace.CreateNet"
  ],
  "type": "function"
 },
 "caffe2.python.examples.char_rnn.main": {
  "lineno": 245,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.utils.debug",
   "caffe2.python.workspace.GpuDeviceType"
  ],
  "type": "function"
 },
 "caffe2.python.examples.imagenet_trainer": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.dyndep.InitOpsLibrary",
   "caffe2.python.workspace.GlobalInit",
   "logging.DEBUG",
   "logging.basicConfig",
   "logging.getLogger"
  ],
  "type": "module"
 },
 "caffe2.python.examples.imagenet_trainer.AddImageInput": {
  "lineno": 47,
  "symbols_in_volume": [
   "caffe2.python.brew.image_input",
   "caffe2.python.core.IsGPUDeviceType"
  ],
  "type": "function"
 },
 "caffe2.python.examples.imagenet_trainer.AddNullInput": {
  "lineno": 82,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.INT32"
  ],
  "type": "function"
 },
 "caffe2.python.examples.imagenet_trainer.LoadModel": {
  "lineno": 137,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.Net",
   "caffe2.python.predictor.predictor_exporter.load_from_db",
   "caffe2.python.predictor.predictor_py_utils.GetNet",
   "caffe2.python.predictor_constants.predictor_constants.GLOBAL_INIT_NET_TYPE",
   "caffe2.python.predictor_constants.predictor_constants.PREDICT_INIT_NET_TYPE",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce"
  ],
  "type": "function"
 },
 "caffe2.python.examples.imagenet_trainer.RunEpoch": {
  "lineno": 169,
  "symbols_in_volume": [
   "caffe2.python.data_parallel_model.GetLearningRateBlobNames",
   "caffe2.python.timeout_guard.CompleteInTimeOrDie",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNet",
   "numpy.asscalar",
   "time.time"
  ],
  "type": "function"
 },
 "caffe2.python.examples.imagenet_trainer.SaveModel": {
  "lineno": 106,
  "symbols_in_volume": [
   "caffe2.python.data_parallel_model.GetCheckpointParams",
   "caffe2.python.predictor.predictor_exporter.PredictorExportMeta",
   "caffe2.python.predictor.predictor_exporter.save_to_db"
  ],
  "type": "function"
 },
 "caffe2.python.examples.imagenet_trainer.Train": {
  "lineno": 253,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.data_parallel_model.FinalizeAfterCheckpoint",
   "caffe2.python.data_parallel_model.OptimizeGradientMemory",
   "caffe2.python.data_parallel_model.Parallelize",
   "caffe2.python.experiment_util.ModelTrainerLog",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.python.workspace.RunOperatorOnce",
   "os.getenv",
   "os.path.isfile",
   "os.remove"
  ],
  "type": "function"
 },
 "caffe2.python.examples.imagenet_trainer.Train.add_image_input": {
  "lineno": 482,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.examples.imagenet_trainer.Train.add_optimizer": {
  "lineno": 433,
  "symbols_in_volume": [
   "caffe2.python.optimizer.add_weight_decay",
   "caffe2.python.optimizer.build_fp16_sgd",
   "caffe2.python.optimizer.build_multi_precision_sgd"
  ],
  "type": "function"
 },
 "caffe2.python.examples.imagenet_trainer.Train.add_post_sync_ops": {
  "lineno": 494,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.FLOAT"
  ],
  "type": "function"
 },
 "caffe2.python.examples.imagenet_trainer.Train.create_resnext_model_ops": {
  "lineno": 375,
  "symbols_in_volume": [
   "caffe2.python.brew.accuracy",
   "caffe2.python.brew.arg_scope",
   "caffe2.python.brew.conv",
   "caffe2.python.brew.fc",
   "caffe2.python.modeling.initializers.Initializer",
   "caffe2.python.modeling.initializers.PseudoFP16Initializer",
   "caffe2.python.models.resnet.create_resnext"
  ],
  "type": "function"
 },
 "caffe2.python.examples.imagenet_trainer.Train.create_shufflenet_model_ops": {
  "lineno": 406,
  "symbols_in_volume": [
   "caffe2.python.brew.accuracy",
   "caffe2.python.brew.arg_scope",
   "caffe2.python.brew.conv",
   "caffe2.python.brew.fc",
   "caffe2.python.modeling.initializers.Initializer",
   "caffe2.python.modeling.initializers.PseudoFP16Initializer",
   "caffe2.python.models.shufflenet.create_shufflenet"
  ],
  "type": "function"
 },
 "caffe2.python.examples.imagenet_trainer.Train.test_input_fn": {
  "lineno": 552,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.examples.imagenet_trainer.main": {
  "lineno": 630,
  "symbols_in_volume": [
   "argparse.ArgumentParser"
  ],
  "type": "function"
 },
 "caffe2.python.examples.lmdb_create_example": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.examples.lmdb_create_example.create_db": {
  "lineno": 24,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.TensorProtos",
   "lmdb.open",
   "numpy.prod",
   "numpy.random.rand",
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.python.examples.lmdb_create_example.main": {
  "lineno": 91,
  "symbols_in_volume": [
   "argparse.ArgumentParser"
  ],
  "type": "function"
 },
 "caffe2.python.examples.lmdb_create_example.read_db_with_caffe2": {
  "lineno": 65,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNet",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.abs",
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.python.examples.resnet50_trainer": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.dyndep.InitOpsLibrary",
   "caffe2.python.workspace.GlobalInit",
   "logging.DEBUG",
   "logging.basicConfig",
   "logging.getLogger"
  ],
  "type": "module"
 },
 "caffe2.python.examples.resnet50_trainer.AddImageInput": {
  "lineno": 47,
  "symbols_in_volume": [
   "caffe2.python.brew.image_input",
   "caffe2.python.core.IsGPUDeviceType"
  ],
  "type": "function"
 },
 "caffe2.python.examples.resnet50_trainer.AddNullInput": {
  "lineno": 82,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.INT32"
  ],
  "type": "function"
 },
 "caffe2.python.examples.resnet50_trainer.LoadModel": {
  "lineno": 137,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.Net",
   "caffe2.python.predictor.predictor_exporter.load_from_db",
   "caffe2.python.predictor.predictor_py_utils.GetNet",
   "caffe2.python.predictor_constants.predictor_constants.GLOBAL_INIT_NET_TYPE",
   "caffe2.python.predictor_constants.predictor_constants.PREDICT_INIT_NET_TYPE",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce"
  ],
  "type": "function"
 },
 "caffe2.python.examples.resnet50_trainer.RunEpoch": {
  "lineno": 169,
  "symbols_in_volume": [
   "caffe2.python.data_parallel_model.GetLearningRateBlobNames",
   "caffe2.python.timeout_guard.CompleteInTimeOrDie",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNet",
   "numpy.asscalar",
   "time.time"
  ],
  "type": "function"
 },
 "caffe2.python.examples.resnet50_trainer.SaveModel": {
  "lineno": 106,
  "symbols_in_volume": [
   "caffe2.python.data_parallel_model.GetCheckpointParams",
   "caffe2.python.predictor.predictor_exporter.PredictorExportMeta",
   "caffe2.python.predictor.predictor_exporter.save_to_db"
  ],
  "type": "function"
 },
 "caffe2.python.examples.resnet50_trainer.Train": {
  "lineno": 253,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.data_parallel_model.FinalizeAfterCheckpoint",
   "caffe2.python.data_parallel_model.OptimizeGradientMemory",
   "caffe2.python.data_parallel_model.Parallelize",
   "caffe2.python.experiment_util.ModelTrainerLog",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.python.workspace.RunOperatorOnce",
   "os.getenv",
   "os.path.isfile",
   "os.remove"
  ],
  "type": "function"
 },
 "caffe2.python.examples.resnet50_trainer.Train.add_image_input": {
  "lineno": 482,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.examples.resnet50_trainer.Train.add_optimizer": {
  "lineno": 433,
  "symbols_in_volume": [
   "caffe2.python.optimizer.add_weight_decay",
   "caffe2.python.optimizer.build_fp16_sgd",
   "caffe2.python.optimizer.build_multi_precision_sgd"
  ],
  "type": "function"
 },
 "caffe2.python.examples.resnet50_trainer.Train.add_post_sync_ops": {
  "lineno": 494,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.FLOAT"
  ],
  "type": "function"
 },
 "caffe2.python.examples.resnet50_trainer.Train.create_resnext_model_ops": {
  "lineno": 375,
  "symbols_in_volume": [
   "caffe2.python.brew.accuracy",
   "caffe2.python.brew.arg_scope",
   "caffe2.python.brew.conv",
   "caffe2.python.brew.fc",
   "caffe2.python.modeling.initializers.Initializer",
   "caffe2.python.modeling.initializers.PseudoFP16Initializer",
   "caffe2.python.models.resnet.create_resnext"
  ],
  "type": "function"
 },
 "caffe2.python.examples.resnet50_trainer.Train.create_shufflenet_model_ops": {
  "lineno": 406,
  "symbols_in_volume": [
   "caffe2.python.brew.accuracy",
   "caffe2.python.brew.arg_scope",
   "caffe2.python.brew.conv",
   "caffe2.python.brew.fc",
   "caffe2.python.modeling.initializers.Initializer",
   "caffe2.python.modeling.initializers.PseudoFP16Initializer",
   "caffe2.python.models.shufflenet.create_shufflenet"
  ],
  "type": "function"
 },
 "caffe2.python.examples.resnet50_trainer.Train.test_input_fn": {
  "lineno": 552,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.examples.resnet50_trainer.main": {
  "lineno": 630,
  "symbols_in_volume": [
   "argparse.ArgumentParser"
  ],
  "type": "function"
 },
 "caffe2.python.experiment_util": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.experiment_util.ExternalLogger": {
  "lineno": 28,
  "symbols_in_volume": [
   "abc.ABCMeta",
   "six.add_metaclass"
  ],
  "type": "class"
 },
 "caffe2.python.experiment_util.ExternalLogger.log": {
  "lineno": 41,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "caffe2.python.experiment_util.ExternalLogger.set_runtime_args": {
  "lineno": 31,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "caffe2.python.experiment_util.ModelTrainerLog": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.experiment_util.ModelTrainerLog.__init__": {
  "lineno": 54,
  "symbols_in_volume": [
   "datetime.datetime.fromtimestamp",
   "socket.gethostname",
   "time.time"
  ],
  "type": "function"
 },
 "caffe2.python.experiment_util.ModelTrainerLog.log": {
  "lineno": 83,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "future.utils.viewkeys",
   "future.utils.viewvalues",
   "logging.warn",
   "time.time"
  ],
  "type": "function"
 },
 "caffe2.python.experiment_util.ModelTrainerLog.logstr": {
  "lineno": 77,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "function"
 },
 "caffe2.python.extension_loader": {
  "lineno": null,
  "symbols_in_volume": [
   "sys"
  ],
  "type": "module"
 },
 "caffe2.python.extension_loader.DlopenGuard": {
  "lineno": 16,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "ctypes.RTLD_GLOBAL",
   "sys.getdlopenflags",
   "sys.setdlopenflags"
  ],
  "type": "function"
 },
 "caffe2.python.fakefp16_transform_lib": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.fakefp16_transform_lib.fakeFp16FuseOps": {
  "lineno": 9,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.python._import_c_extension.fakeFp16FuseOps"
  ],
  "type": "function"
 },
 "caffe2.python.fakelowp": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.fakelowp.init_shared_libs": {
  "lineno": null,
  "symbols_in_volume": [
   "ctypes.CDLL",
   "ctypes.RTLD_GLOBAL",
   "os.environ"
  ],
  "type": "module"
 },
 "caffe2.python.fakelowp.test_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.fakelowp.test_utils._acc_func": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.fakelowp.test_utils._gelu_by_sigmoid": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.float64"
  ],
  "type": "function"
 },
 "caffe2.python.fakelowp.test_utils._get_ulp16": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.floor",
   "numpy.log2"
  ],
  "type": "function"
 },
 "caffe2.python.fakelowp.test_utils._sigmoid": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.float64"
  ],
  "type": "function"
 },
 "caffe2.python.fakelowp.test_utils._swish": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "function"
 },
 "caffe2.python.fakelowp.test_utils._tanh": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.tanh"
  ],
  "type": "function"
 },
 "caffe2.python.fakelowp.test_utils.compute_ulp_error": {
  "lineno": 62,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "function"
 },
 "caffe2.python.fakelowp.test_utils.print_net": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.fakelowp.test_utils.print_test_debug_info": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.set_printoptions",
   "sys.maxsize"
  ],
  "type": "function"
 },
 "caffe2.python.filler_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.filler_test.TestFiller": {
  "lineno": 8,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.filler_test.TestFiller.test_filler": {
  "lineno": 9,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.FillRandomNetworkInputs",
   "caffe2.python.workspace.HasBlob"
  ],
  "type": "function"
 },
 "caffe2.python.functional": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.workspace.C.OpSchema"
  ],
  "type": "module"
 },
 "caffe2.python.functional._Functional": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.functional._Functional.__getattribute__": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.functional._Functional.__getattribute__.op_func": {
  "lineno": 32,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.onnx.workspace.Workspace"
  ],
  "type": "function"
 },
 "caffe2.python.functional._Functional.__getattribute__.op_func.get_name_list": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.functional.namedtupledict": {
  "lineno": 15,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "function"
 },
 "caffe2.python.functional.namedtupledict.getitem": {
  "lineno": 21,
  "symbols_in_volume": [
   "six.string_types"
  ],
  "type": "function"
 },
 "caffe2.python.functional_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.functional_test.TestFunctional": {
  "lineno": 48,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.functional_test.TestFunctional.test_concat": {
  "lineno": 71,
  "symbols_in_volume": [
   "caffe2.python.functional.Functional.Concat",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "numpy.array",
   "numpy.concatenate",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.functional_test.TestFunctional.test_relu": {
  "lineno": 49,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.functional.Functional.Relu",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "caffe2.python.workspace.WorkspaceGuard",
   "hypothesis.given",
   "hypothesis.strategies.sampled_from",
   "numpy.sign",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.functional_test.TestFunctional.test_split": {
  "lineno": 92,
  "symbols_in_volume": [
   "caffe2.python.functional.Functional.Split",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "numpy.concatenate",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.functional_test.TestFunctional.test_split.split_ref": {
  "lineno": 107,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.cumsum"
  ],
  "type": "function"
 },
 "caffe2.python.functional_test._tensor_splits": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.strategies.composite",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.lists",
   "numpy.array",
   "numpy.diff",
   "numpy.int32",
   "numpy.ones"
  ],
  "type": "function"
 },
 "caffe2.python.fused_8bit_rowwise_conversion_ops_test": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.vectorize"
  ],
  "type": "module"
 },
 "caffe2.python.fused_8bit_rowwise_conversion_ops_test.TestFused8BitRowwiseQuantizationConversion": {
  "lineno": 63,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.fused_8bit_rowwise_conversion_ops_test.TestFused8BitRowwiseQuantizationConversion.test_quantize_and_dequantize_op": {
  "lineno": 81,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "hypothesis.given",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "caffe2.python.fused_8bit_rowwise_conversion_ops_test.TestFused8BitRowwiseQuantizationConversion.test_quantize_op": {
  "lineno": 64,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "hypothesis.given",
   "numpy.float32",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "caffe2.python.fused_8bit_rowwise_conversion_ops_test.bytes_to_floats": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.float32",
   "numpy.shape",
   "struct.unpack"
  ],
  "type": "function"
 },
 "caffe2.python.fused_8bit_rowwise_conversion_ops_test.floats_to_bytes": {
  "lineno": 24,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.float32",
   "numpy.shape",
   "numpy.uint8",
   "struct.pack"
  ],
  "type": "function"
 },
 "caffe2.python.fused_8bit_rowwise_conversion_ops_test.fused_rowwise_8bit_quantize_dequantize_reference": {
  "lineno": 53,
  "symbols_in_volume": [
   "numpy.uint8"
  ],
  "type": "function"
 },
 "caffe2.python.fused_8bit_rowwise_conversion_ops_test.fused_rowwise_8bit_quantize_reference": {
  "lineno": 37,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.max",
   "numpy.min"
  ],
  "type": "function"
 },
 "caffe2.python.gradient_check_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.DeviceOption",
   "caffe2.python.device_checker",
   "caffe2.python.device_checker.DeviceChecker",
   "caffe2.python.gradient_checker.GradientChecker",
   "caffe2.python.workspace.GlobalInit",
   "caffe2.python.workspace.GpuDeviceType",
   "caffe2.python.workspace.NumGpuDevices",
   "caffe2.python.workspace.has_gpu_support",
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.gradient_check_test.TestAbs": {
  "lineno": 209,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.gradient_check_test.TestAbs.setUp": {
  "lineno": 211,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestAbs.testAbs": {
  "lineno": 219,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.device_checker.CheckSimple",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.sign"
  ],
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestConcat": {
  "lineno": 102,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.gradient_check_test.TestConcat.setUp": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestConcat.testConcatNCHW": {
  "lineno": 135,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.device_checker.CheckSimple",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestConcat.testConcatNHWC": {
  "lineno": 111,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.device_checker.CheckSimple",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestCos": {
  "lineno": 252,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.gradient_check_test.TestCos.setUp": {
  "lineno": 254,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestCos.testCos": {
  "lineno": 262,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.device_checker.CheckSimple",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestExp": {
  "lineno": 232,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.gradient_check_test.TestExp.setUp": {
  "lineno": 234,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestExp.testExp": {
  "lineno": 242,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.device_checker.CheckSimple",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestFlatten": {
  "lineno": 90,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.gradient_check_test.TestFlatten.testFlatten": {
  "lineno": 92,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.device_checker.CheckSimple",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestIf": {
  "lineno": 407,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.gradient_check_test.TestIf.testIf": {
  "lineno": 408,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.INT64",
   "caffe2.python.net_builder.NetBuilder",
   "caffe2.python.net_builder.ops.Add",
   "caffe2.python.net_builder.ops.ConstantFill",
   "caffe2.python.net_builder.ops.Else",
   "caffe2.python.net_builder.ops.FC",
   "caffe2.python.net_builder.ops.GaussianFill",
   "caffe2.python.net_builder.ops.GivenTensorFill",
   "caffe2.python.net_builder.ops.IfNet",
   "caffe2.python.net_builder.ops.LT",
   "caffe2.python.net_builder.ops.SquaredL2Distance",
   "caffe2.python.net_builder.ops.UniformFill",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNet",
   "caffe2.python.workspace.RunNetOnce"
  ],
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestLRN": {
  "lineno": 65,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.gradient_check_test.TestLRN.setUp": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestLRN.testLRN": {
  "lineno": 70,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.device_checker.CheckSimple",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestMakeTwoClass": {
  "lineno": 338,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.gradient_check_test.TestMakeTwoClass.setUp": {
  "lineno": 340,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestMakeTwoClass.testMakeTwoClass": {
  "lineno": 350,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.device_checker.CheckSimple",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestNetGradientChecker": {
  "lineno": 364,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.gradient_check_test.TestNetGradientChecker.test_net_comparison": {
  "lineno": 382,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.gradient_checker.NetGradientChecker.CompareNets",
   "numpy.array",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestNetGradientChecker.test_net_gradient_checker": {
  "lineno": 365,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.gradient_checker.NetGradientChecker.Check",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.array"
  ],
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestRelu": {
  "lineno": 160,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.gradient_check_test.TestRelu.setUp": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestRelu.testRelu": {
  "lineno": 174,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.device_checker.CheckSimple",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.sign"
  ],
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestSigmoid": {
  "lineno": 292,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.gradient_check_test.TestSigmoid.setUp": {
  "lineno": 294,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestSigmoid.testSigmoid": {
  "lineno": 302,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.device_checker.CheckSimple",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestSin": {
  "lineno": 272,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.gradient_check_test.TestSin.setUp": {
  "lineno": 274,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestSin.testSin": {
  "lineno": 282,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.device_checker.CheckSimple",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestSum": {
  "lineno": 313,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.gradient_check_test.TestSum.setUp": {
  "lineno": 315,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestSum.testSum": {
  "lineno": 321,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.device_checker.CheckSimple",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestTanh": {
  "lineno": 188,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.gradient_check_test.TestTanh.setUp": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestTanh.testTanh": {
  "lineno": 198,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.device_checker.CheckSimple",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestWhile": {
  "lineno": 512,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.gradient_check_test.TestWhile.testWhile": {
  "lineno": 513,
  "symbols_in_volume": [
   "caffe2.python.net_builder.NetBuilder",
   "caffe2.python.net_builder.ops.Add",
   "caffe2.python.net_builder.ops.Condition",
   "caffe2.python.net_builder.ops.Const",
   "caffe2.python.net_builder.ops.Copy",
   "caffe2.python.net_builder.ops.Else",
   "caffe2.python.net_builder.ops.IfNet",
   "caffe2.python.net_builder.ops.LE",
   "caffe2.python.net_builder.ops.LT",
   "caffe2.python.net_builder.ops.Pow",
   "caffe2.python.net_builder.ops.WhileNet",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "unittest.skip"
  ],
  "type": "function"
 },
 "caffe2.python.gradient_checker": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.gradient_checker.GradientChecker": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.gradient_checker.GradientChecker.CheckSimple": {
  "lineno": 229,
  "symbols_in_volume": [
   "caffe2.python.core.InferOpBlobDevicesAsDict",
   "caffe2.python.workspace.CurrentWorkspace",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.SwitchWorkspace",
   "numpy.any",
   "numpy.flatnonzero",
   "numpy.isclose",
   "numpy.vstack",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "caffe2.python.gradient_checker.GradientChecker.GetLossAndGrad": {
  "lineno": 180,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.GradientSlice",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "caffe2.python.workspace.RunOperatorsOnce",
   "numpy.float32",
   "numpy.ones",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "caffe2.python.gradient_checker.GradientChecker.__init__": {
  "lineno": 163,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.DeviceOption"
  ],
  "type": "function"
 },
 "caffe2.python.gradient_checker.GradientChecker._assertInferTensorChecks": {
  "lineno": 332,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.proto.caffe2_pb2.TensorProto.DOUBLE",
   "caffe2.proto.caffe2_pb2.TensorProto.FLOAT",
   "caffe2.proto.caffe2_pb2.TensorProto.INT32",
   "caffe2.proto.caffe2_pb2.TensorProto.INT64",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.InferShapesAndTypes",
   "numpy.dtype",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "caffe2.python.gradient_checker.NetGradientChecker": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.gradient_checker.NetGradientChecker.Check": {
  "lineno": 119,
  "symbols_in_volume": [
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "caffe2.python.gradient_checker.NetGradientChecker.Check.GetLoss": {
  "lineno": 128,
  "symbols_in_volume": [
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.python.workspace.blobs"
  ],
  "type": "function"
 },
 "caffe2.python.gradient_checker.NetGradientChecker.Check.GetValue": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.gradient_checker.NetGradientChecker.CompareNets": {
  "lineno": 72,
  "symbols_in_volume": [
   "caffe2.python.net_drawer.GetPydotGraph"
  ],
  "type": "function"
 },
 "caffe2.python.gradient_checker.NetGradientChecker.CompareNets._get_output_with_grad_names": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.gradient_checker._assert_close": {
  "lineno": 60,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.mean",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.gradient_checker._get_grad": {
  "lineno": 39,
  "symbols_in_volume": [
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.python.workspace.blobs"
  ],
  "type": "function"
 },
 "caffe2.python.gradient_checker._get_grad_blob": {
  "lineno": 19,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.GradientSlice",
   "caffe2.python.workspace.RunOperatorOnce",
   "caffe2.python.workspace.blobs"
  ],
  "type": "function"
 },
 "caffe2.python.gradient_checker.getGradientForOp": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.core.GradientRegistry.GetGradientForOp"
  ],
  "type": "function"
 },
 "caffe2.python.gru_cell": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.rnn_cell._LSTM",
   "functools.partial"
  ],
  "type": "module"
 },
 "caffe2.python.gru_cell.GRUCell": {
  "lineno": 10,
  "symbols_in_volume": [
   "caffe2.python.rnn_cell.RNNCell"
  ],
  "type": "class"
 },
 "caffe2.python.gru_cell.GRUCell.__init__": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.gru_cell.GRUCell._apply": {
  "lineno": 35,
  "symbols_in_volume": [
   "caffe2.python.brew.fc"
  ],
  "type": "function"
 },
 "caffe2.python.gru_cell.GRUCell.get_output_dim": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.gru_cell.GRUCell.get_state_names": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.gru_cell.GRUCell.prepare_input": {
  "lineno": 155,
  "symbols_in_volume": [
   "caffe2.python.brew.fc"
  ],
  "type": "function"
 },
 "caffe2.python.helpers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.helpers.algebra": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.helpers.algebra.batch_mat_mul": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.helpers.algebra.sum": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.helpers.algebra.transpose": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.helpers.arg_scope": {
  "lineno": null,
  "symbols_in_volume": [
   "threading.local"
  ],
  "type": "module"
 },
 "caffe2.python.helpers.arg_scope.arg_scope": {
  "lineno": 11,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "caffe2.python.helpers.arg_scope.get_current_scope": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.helpers.array_helpers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.helpers.array_helpers.concat": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.helpers.array_helpers.depth_concat": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.helpers.control_ops": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.helpers.control_ops.cond": {
  "lineno": 11,
  "symbols_in_volume": [
   "caffe2.python.control_ops_util.add_if_op"
  ],
  "type": "function"
 },
 "caffe2.python.helpers.control_ops.loop": {
  "lineno": 21,
  "symbols_in_volume": [
   "caffe2.python.control_ops_util.add_while_op"
  ],
  "type": "function"
 },
 "caffe2.python.helpers.conv": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.helpers.conv._ConvBase": {
  "lineno": 12,
  "symbols_in_volume": [
   "caffe2.python.modeling.initializers.ExternalInitializer",
   "caffe2.python.modeling.initializers.update_initializer",
   "caffe2.python.modeling.parameter_info.ParameterTags.BIAS",
   "caffe2.python.modeling.parameter_info.ParameterTags.WEIGHT"
  ],
  "type": "function"
 },
 "caffe2.python.helpers.conv.conv": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.helpers.conv.conv_nd": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.helpers.conv.conv_transpose": {
  "lineno": 189,
  "symbols_in_volume": [
   "caffe2.python.core.ScopedBlobReference",
   "caffe2.python.modeling.parameter_info.ParameterTags.BIAS",
   "caffe2.python.modeling.parameter_info.ParameterTags.WEIGHT"
  ],
  "type": "function"
 },
 "caffe2.python.helpers.conv.group_conv": {
  "lineno": 247,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.helpers.conv.group_conv_deprecated": {
  "lineno": 269,
  "symbols_in_volume": [
   "caffe2.python.core.ScopedBlobReference",
   "caffe2.python.modeling.parameter_info.ParameterTags.BIAS",
   "caffe2.python.modeling.parameter_info.ParameterTags.WEIGHT"
  ],
  "type": "function"
 },
 "caffe2.python.helpers.db_input": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.helpers.db_input.db_input": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.helpers.dropout": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.helpers.dropout.dropout": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.helpers.elementwise_linear": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.helpers.elementwise_linear._elementwise_linear": {
  "lineno": 12,
  "symbols_in_volume": [
   "caffe2.python.core.ScopedBlobReference",
   "caffe2.python.modeling.parameter_info.ParameterTags.BIAS",
   "caffe2.python.modeling.parameter_info.ParameterTags.WEIGHT"
  ],
  "type": "function"
 },
 "caffe2.python.helpers.elementwise_linear.elementwise_linear": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.helpers.fc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.helpers.fc._FC_or_packed_FC": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.modeling.initializers.ExternalInitializer",
   "caffe2.python.modeling.initializers.update_initializer",
   "caffe2.python.modeling.parameter_info.ParameterTags.BIAS",
   "caffe2.python.modeling.parameter_info.ParameterTags.COMPUTED_PARAM",
   "caffe2.python.modeling.parameter_info.ParameterTags.WEIGHT"
  ],
  "type": "function"
 },
 "caffe2.python.helpers.fc.fc": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.helpers.fc.fc_decomp": {
  "lineno": 65,
  "symbols_in_volume": [
   "caffe2.python.modeling.initializers.update_initializer"
  ],
  "type": "function"
 },
 "caffe2.python.helpers.fc.fc_prune": {
  "lineno": 98,
  "symbols_in_volume": [
   "caffe2.python.core.ScopedBlobReference"
  ],
  "type": "function"
 },
 "caffe2.python.helpers.fc.fc_sparse": {
  "lineno": 185,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.helpers.fc.packed_fc": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.helpers.nonlinearity": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.helpers.nonlinearity.prelu": {
  "lineno": 11,
  "symbols_in_volume": [
   "caffe2.python.core.ScopedBlobReference"
  ],
  "type": "function"
 },
 "caffe2.python.helpers.nonlinearity.relu": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.helpers.nonlinearity.tanh": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.helpers.normalization": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.helpers.normalization.instance_norm": {
  "lineno": 47,
  "symbols_in_volume": [
   "caffe2.python.modeling.parameter_info.ParameterTags.BIAS",
   "caffe2.python.modeling.parameter_info.ParameterTags.WEIGHT"
  ],
  "type": "function"
 },
 "caffe2.python.helpers.normalization.instance_norm.init_blob": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.helpers.normalization.layer_norm": {
  "lineno": 211,
  "symbols_in_volume": [
   "caffe2.python.modeling.initializers.Initializer",
   "caffe2.python.modeling.parameter_info.ParameterTags.BIAS",
   "caffe2.python.modeling.parameter_info.ParameterTags.WEIGHT"
  ],
  "type": "function"
 },
 "caffe2.python.helpers.normalization.lrn": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.scope.CurrentDeviceScope"
  ],
  "type": "function"
 },
 "caffe2.python.helpers.normalization.moments_with_running_stats": {
  "lineno": 278,
  "symbols_in_volume": [
   "caffe2.python.modeling.initializers.ExternalInitializer",
   "caffe2.python.modeling.initializers.update_initializer",
   "caffe2.python.modeling.parameter_info.ParameterTags.COMPUTED_PARAM"
  ],
  "type": "function"
 },
 "caffe2.python.helpers.normalization.softmax": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.helpers.normalization.spatial_bn": {
  "lineno": 75,
  "symbols_in_volume": [
   "caffe2.python.modeling.initializers.ExternalInitializer",
   "caffe2.python.modeling.initializers.update_initializer",
   "caffe2.python.modeling.parameter_info.ParameterTags.BIAS",
   "caffe2.python.modeling.parameter_info.ParameterTags.COMPUTED_PARAM",
   "caffe2.python.modeling.parameter_info.ParameterTags.WEIGHT"
  ],
  "type": "function"
 },
 "caffe2.python.helpers.normalization.spatial_gn": {
  "lineno": 156,
  "symbols_in_volume": [
   "caffe2.python.modeling.initializers.ExternalInitializer",
   "caffe2.python.modeling.initializers.update_initializer",
   "caffe2.python.modeling.parameter_info.ParameterTags.BIAS",
   "caffe2.python.modeling.parameter_info.ParameterTags.WEIGHT"
  ],
  "type": "function"
 },
 "caffe2.python.helpers.pooling": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.helpers.pooling.average_pool": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.helpers.pooling.max_pool": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.helpers.pooling.max_pool_with_index": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.helpers.tools": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.helpers.tools.image_input": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.helpers.tools.video_input": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.helpers.train": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.helpers.train._get_weights": {
  "lineno": 12,
  "symbols_in_volume": [
   "caffe2.python.scope.CurrentNameScope"
  ],
  "type": "function"
 },
 "caffe2.python.helpers.train.accuracy": {
  "lineno": 37,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.scope.CurrentDeviceScope"
  ],
  "type": "function"
 },
 "caffe2.python.helpers.train.add_weight_decay": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.helpers.train.iter": {
  "lineno": 22,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.DataType.INT64",
   "caffe2.python.core.DeviceOption"
  ],
  "type": "function"
 },
 "caffe2.python.hip_test_util": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.hip_test_util.run_in_hip": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.HIP"
  ],
  "type": "function"
 },
 "caffe2.python.hsm_util": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.hsm_util.create_hierarchy": {
  "lineno": 34,
  "symbols_in_volume": [
   "caffe2.proto.hsm_pb2.HierarchyProto"
  ],
  "type": "function"
 },
 "caffe2.python.hsm_util.create_hierarchy.create_path": {
  "lineno": 37,
  "symbols_in_volume": [
   "caffe2.proto.hsm_pb2.PathProto"
  ],
  "type": "function"
 },
 "caffe2.python.hsm_util.create_hierarchy.recursive_path_builder": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.hsm_util.create_node_with_nodes": {
  "lineno": 25,
  "symbols_in_volume": [
   "caffe2.proto.hsm_pb2.NodeProto"
  ],
  "type": "function"
 },
 "caffe2.python.hsm_util.create_node_with_words": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.proto.hsm_pb2.NodeProto"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.BOOL",
   "caffe2.python.core.DataType.DOUBLE",
   "caffe2.python.core.DataType.FLOAT",
   "caffe2.python.core.DataType.INT16",
   "caffe2.python.core.DataType.INT32",
   "caffe2.python.core.DataType.INT64",
   "caffe2.python.core.DataType.INT8",
   "caffe2.python.core.DataType.UINT16",
   "caffe2.python.core.DataType.UINT8",
   "caffe2.python.dyndep.InitOpsLibrary",
   "numpy.bool",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.uint16",
   "numpy.uint8",
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.hypothesis_test.TestOperators": {
  "lineno": 115,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.hypothesis_test.TestOperators._dense_ftrl": {
  "lineno": 571,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.asscalar",
   "numpy.ndarray",
   "numpy.sign",
   "numpy.sqrt",
   "numpy.stack",
   "numpy.take"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators._dense_ftrl_send_alpha_by_input": {
  "lineno": 723,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators._dense_gftrl": {
  "lineno": 617,
  "symbols_in_volume": [
   "numpy.asscalar",
   "numpy.linalg.norm",
   "numpy.ndarray",
   "numpy.sqrt",
   "numpy.stack",
   "numpy.take"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_abs": {
  "lineno": 1115,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.arrays",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_abs.abs_ref": {
  "lineno": 1127,
  "symbols_in_volume": [
   "numpy.abs"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_accumulate_histogram_op": {
  "lineno": 2664,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_accumulate_histogram_op.histogram": {
  "lineno": 2678,
  "symbols_in_volume": [
   "numpy.int32",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_accuracy": {
  "lineno": 825,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.arrays",
   "caffe2.python.hypothesis_test_util.cpu_do",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_accuracy.op_ref": {
  "lineno": 849,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_add": {
  "lineno": 171,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_add.not_overflow": {
  "lineno": 172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_add.ref": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_atomic_iter_with_concurrent_steps": {
  "lineno": 2038,
  "symbols_in_volume": [
   "caffe2.python.core.ExecutionStep",
   "caffe2.python.core.Net",
   "caffe2.python.core.Plan",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.asarray",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_averaged_loss": {
  "lineno": 236,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_batch_to_space": {
  "lineno": 2356,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.HealthCheck.filter_too_much",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_blobs_dequeue_timeout": {
  "lineno": 1221,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "time.time"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_blobs_queue_threading": {
  "lineno": 1239,
  "symbols_in_volume": [
   "Queue.Queue",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.device_options",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.array_equal",
   "numpy.float32",
   "numpy.random.randn",
   "numpy.vstack",
   "threading.Thread"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_blobs_queue_threading.enqueue": {
  "lineno": 1276,
  "symbols_in_volume": [
   "Queue.Empty",
   "caffe2.python.core.CreateOperator"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_cast": {
  "lineno": 2078,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.TensorProto.DataType.Name",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "future.utils.viewkeys",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.sampled_from",
   "numpy.bool",
   "numpy.clip",
   "numpy.float32",
   "numpy.float64",
   "numpy.iinfo"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_cast.ref": {
  "lineno": 2094,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_comparison_ops": {
  "lineno": 117,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "future.utils.viewitems"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_constant_fill": {
  "lineno": 2145,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.elements_of_type",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.lists",
   "numpy.bool",
   "numpy.dtype",
   "numpy.float32",
   "numpy.int32",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_constant_fill.ref": {
  "lineno": 2184,
  "symbols_in_volume": [
   "numpy.full"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_constant_fill_from_tensor": {
  "lineno": 2192,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.elements_of_type",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.array",
   "numpy.bool",
   "numpy.dtype",
   "numpy.float32",
   "numpy.int32",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_constant_fill_from_tensor.ref": {
  "lineno": 2213,
  "symbols_in_volume": [
   "numpy.full"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_cos": {
  "lineno": 1136,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.arrays",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_cos.cos_ref": {
  "lineno": 1148,
  "symbols_in_volume": [
   "numpy.cos"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_dag_net_forking": {
  "lineno": 1795,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.has_gpu_support",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.random.randn",
   "numpy.random.seed",
   "numpy.square",
   "numpy.sum",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_dag_net_forking.run": {
  "lineno": 1844,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.random.randn",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_depth_concat": {
  "lineno": 408,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_depth_concat.depth_concat": {
  "lineno": 431,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.concatenate",
   "numpy.expand_dims",
   "numpy.shape"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_depth_concat_with_order": {
  "lineno": 441,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_depth_concat_with_order.depth_concat_with_order": {
  "lineno": 461,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.concatenate",
   "numpy.shape"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_disabled_execution_step": {
  "lineno": 1949,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "caffe2.python.core.Plan",
   "caffe2.python.core.execution_step"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_disabled_execution_step.createNets": {
  "lineno": 1950,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_div": {
  "lineno": 200,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs_cpu_only"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_div.div_dtypes": {
  "lineno": 207,
  "symbols_in_volume": [
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.float64"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_div.non_zero": {
  "lineno": 204,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_div.ref": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_dot_product": {
  "lineno": 2582,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.hypothesis_test_util.tensors",
   "hypothesis.given",
   "hypothesis.settings"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_dot_product.dotproduct": {
  "lineno": 2588,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_dot_product_with_padding": {
  "lineno": 2596,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_dot_product_with_padding.dotproduct": {
  "lineno": 2608,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.ones",
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_dot_product_with_rep_padding": {
  "lineno": 2622,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_dot_product_with_rep_padding.dotproduct": {
  "lineno": 2635,
  "symbols_in_volume": [
   "numpy.matlib.repmat",
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_elman_recurrent_network": {
  "lineno": 2221,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.GradientRegistry.GetBackwardPass",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.cpu_do",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "future.utils.viewitems",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.randint",
   "numpy.random.randn",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_elman_recurrent_network.reference": {
  "lineno": 2302,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_ensure_dense": {
  "lineno": 2649,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_exp": {
  "lineno": 1178,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.arrays",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_exp.exp_ref": {
  "lineno": 1190,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_ftrl_sgd": {
  "lineno": 587,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.hypothesis_test_util.tensors",
   "functools.partial",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.sampled_from",
   "numpy.abs",
   "numpy.stack"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_ftrl_sgd_send_alpha_by_input": {
  "lineno": 728,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.hypothesis_test_util.tensors",
   "functools.partial",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.sampled_from",
   "numpy.abs",
   "numpy.array",
   "numpy.float32",
   "numpy.stack"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_fully_connected_axis": {
  "lineno": 295,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.randn",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_fully_connected_axis.prod": {
  "lineno": 304,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_gftrl_sgd": {
  "lineno": 656,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.hypothesis_test_util.tensors",
   "functools.partial",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.sampled_from",
   "numpy.abs",
   "numpy.stack"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_has_elements": {
  "lineno": 1916,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_instance_norm": {
  "lineno": 2486,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.workspace.C.Workspace",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.seed",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_instance_norm.ref_nchw": {
  "lineno": 2510,
  "symbols_in_volume": [
   "numpy.newaxis",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_instance_norm.ref_nhwc": {
  "lineno": 2519,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_iter_count_with_execution_step": {
  "lineno": 2018,
  "symbols_in_volume": [
   "caffe2.python.core.ExecutionStep",
   "caffe2.python.core.Net",
   "caffe2.python.core.Plan",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.asarray",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_last_n_windows": {
  "lineno": 469,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.core.Plan",
   "caffe2.python.core.execution_step",
   "caffe2.python.hypothesis_test_util.arrays",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.workspace.CreateBlob",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunPlan",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.array",
   "numpy.int32",
   "numpy.testing.assert_almost_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_lengths_range_fill": {
  "lineno": 920,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.lists",
   "numpy.array",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_lengths_range_fill.op_ref": {
  "lineno": 931,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_lengths_to_ranges": {
  "lineno": 974,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.lists",
   "numpy.array",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_lengths_to_ranges.op_ref": {
  "lineno": 985,
  "symbols_in_volume": [
   "numpy.column_stack",
   "numpy.concatenate",
   "numpy.cumsum"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_lengths_to_segment_ids": {
  "lineno": 897,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.lists",
   "numpy.array",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_lengths_to_segment_ids.op_ref": {
  "lineno": 908,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_lengths_to_weights": {
  "lineno": 1089,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.lists",
   "hypothesis.strategies.sampled_from",
   "numpy.array",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_lengths_to_weights.lengths_to_weights": {
  "lineno": 1102,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_log": {
  "lineno": 1199,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.arrays",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_log.log_ref": {
  "lineno": 1211,
  "symbols_in_volume": [
   "numpy.log"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_logit": {
  "lineno": 2105,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_logit.ref": {
  "lineno": 2112,
  "symbols_in_volume": [
   "numpy.clip",
   "numpy.log"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_max": {
  "lineno": 153,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.hypothesis_test_util.tensors",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.logical_and"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_max.elementwise_max": {
  "lineno": 167,
  "symbols_in_volume": [
   "numpy.maximum"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_momentum_sgd": {
  "lineno": 506,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensors",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "numpy.asarray",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_momentum_sgd.momentum_sgd": {
  "lineno": 529,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_mul": {
  "lineno": 189,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_mul.not_overflow": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_mul.ref": {
  "lineno": 195,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_multi_class_accuracy": {
  "lineno": 997,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.arrays",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_multi_class_accuracy.op_ref": {
  "lineno": 1015,
  "symbols_in_volume": [
   "numpy.argmax",
   "numpy.empty"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_negative": {
  "lineno": 221,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_pad_image": {
  "lineno": 2438,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_pad_image.numpy_pad_ref": {
  "lineno": 2477,
  "symbols_in_volume": [
   "numpy.pad"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_perplexity": {
  "lineno": 871,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.arrays",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_perplexity.op_ref": {
  "lineno": 885,
  "symbols_in_volume": [
   "functools.reduce",
   "numpy.power"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_print": {
  "lineno": 498,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.sampled_from",
   "numpy.bool",
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "numpy.random.permutation"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_random_seed_behaviour": {
  "lineno": 259,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.expanded_device_options",
   "copy.deepcopy",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.lists",
   "hypothesis.strategies.sampled_from",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_random_seed_behaviour.run": {
  "lineno": 275,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.C.Workspace",
   "caffe2.python.workspace.ResetWorkspace"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_recurrent": {
  "lineno": 332,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gpu_do",
   "caffe2.python.hypothesis_test_util.hip_do",
   "caffe2.python.workspace.has_gpu_support",
   "caffe2.python.workspace.has_hip_support",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.empty",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.randn",
   "numpy.random.seed",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_replace_nan": {
  "lineno": 2131,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_replace_nan.ref": {
  "lineno": 2136,
  "symbols_in_volume": [
   "numpy.copy",
   "numpy.isnan"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_rmsprop_sgd": {
  "lineno": 540,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensors",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "numpy.abs",
   "numpy.asarray",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_rmsprop_sgd.rmsprop": {
  "lineno": 562,
  "symbols_in_volume": [
   "numpy.sqrt",
   "numpy.square"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_row_mul": {
  "lineno": 135,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.hypothesis_test_util.tensors",
   "hypothesis.given",
   "hypothesis.settings"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_row_mul.ref": {
  "lineno": 142,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_safe_blobs_queue": {
  "lineno": 1329,
  "symbols_in_volume": [
   "Queue",
   "caffe2.python.core.Net",
   "caffe2.python.core.Plan",
   "caffe2.python.core.execution_step",
   "caffe2.python.hypothesis_test_util.device_options",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_safe_dequeue_blob__raises_exception_when_hang": {
  "lineno": 2698,
  "symbols_in_volume": [
   "Queue",
   "caffe2.python.core.Net",
   "caffe2.python.workspace.Workspace",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "threading.Thread"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_safe_dequeue_blob__raises_exception_when_hang._net_instance_cancel": {
  "lineno": 2722,
  "symbols_in_volume": [
   "time.sleep"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_same_pad_image": {
  "lineno": 2398,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_same_pad_image.numpy_pad_ref": {
  "lineno": 2430,
  "symbols_in_volume": [
   "numpy.pad"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_scale": {
  "lineno": 2377,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_segment_ids_to_lengths": {
  "lineno": 1041,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.lists",
   "numpy.array",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_segment_ids_to_lengths.ids_to_lengths": {
  "lineno": 1060,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_segment_ids_to_lengths.lengths_to_ids": {
  "lineno": 1052,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_segment_ids_to_ranges": {
  "lineno": 943,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.array",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_segment_ids_to_ranges.lengths_to_segment_ids": {
  "lineno": 962,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_segment_ids_to_ranges.op_ref": {
  "lineno": 952,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_shape": {
  "lineno": 1901,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_shape_with_axes": {
  "lineno": 1907,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_shape_with_axes.shape_ref": {
  "lineno": 1910,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_should_stop_as_criteria_net_execution_step": {
  "lineno": 1925,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "caffe2.python.core.Net",
   "caffe2.python.core.Plan",
   "caffe2.python.core.execution_step",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.asarray",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_sin": {
  "lineno": 1157,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.arrays",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_sin.sin_ref": {
  "lineno": 1169,
  "symbols_in_volume": [
   "numpy.sin"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_slice": {
  "lineno": 1867,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.int32",
   "numpy.ones",
   "numpy.random.rand",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_slice.slice_ref": {
  "lineno": 1891,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_softsign": {
  "lineno": 243,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_softsign.softsign": {
  "lineno": 248,
  "symbols_in_volume": [
   "numpy.abs"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_space_to_batch": {
  "lineno": 2339,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.HealthCheck.filter_too_much",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_sparse_ftrl_sgd": {
  "lineno": 685,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.hypothesis_test_util.tensors",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.sampled_from",
   "numpy.abs",
   "numpy.arange",
   "numpy.stack"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_sparse_ftrl_sgd.ftrl": {
  "lineno": 713,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_sparse_ftrl_sgd_send_alpha_by_input": {
  "lineno": 758,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.hypothesis_test_util.tensors",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.sampled_from",
   "numpy.abs",
   "numpy.arange",
   "numpy.array",
   "numpy.float32",
   "numpy.stack"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_sparse_ftrl_sgd_send_alpha_by_input.ftrl": {
  "lineno": 788,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_sparse_to_dense": {
  "lineno": 2541,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CUDA",
   "caffe2.proto.caffe2_pb2.HIP",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.elements_of_type",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.abs",
   "numpy.dtype",
   "numpy.float32",
   "numpy.iinfo",
   "numpy.int32",
   "numpy.int64",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_sparse_to_dense.sparse_to_dense": {
  "lineno": 2565,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_sparse_to_dense.sparse_to_dense_noshapeinfer": {
  "lineno": 2571,
  "symbols_in_volume": [
   "numpy.max",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_squeeze_expand_dims": {
  "lineno": 1484,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_squeeze_expand_dims.expand_dims_ref": {
  "lineno": 1498,
  "symbols_in_volume": [
   "numpy.expand_dims"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_squeeze_expand_dims.squeeze_ref": {
  "lineno": 1506,
  "symbols_in_volume": [
   "numpy.squeeze"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_string_serde": {
  "lineno": 2389,
  "symbols_in_volume": [
   "hypothesis.given",
   "hypothesis.strategies.text"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_sub": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_sub.ref": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_sum": {
  "lineno": 126,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensors",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_tanh": {
  "lineno": 229,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_tt_layer": {
  "lineno": 1522,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.tt_core.init_tt_cores",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.array",
   "numpy.expand_dims",
   "numpy.float32",
   "numpy.linalg.norm",
   "numpy.random.rand",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_tt_sls": {
  "lineno": 1694,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.int64",
   "numpy.ones"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_tt_sls_gradientop": {
  "lineno": 1607,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.int64",
   "numpy.ones"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_tt_sls_gradientop1": {
  "lineno": 1651,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.int64",
   "numpy.ones"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_tt_sls_gradientop2": {
  "lineno": 1752,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.int64",
   "numpy.ones"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_tt_sls_layer": {
  "lineno": 1567,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.int64",
   "numpy.linalg.norm",
   "numpy.ones",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_tt_sls_repro": {
  "lineno": 1717,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.int64",
   "numpy.linalg.norm",
   "numpy.ones"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_unique": {
  "lineno": 799,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_no_hip",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_unique.unique_valid": {
  "lineno": 815,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_weighted_sample_blobs_queue": {
  "lineno": 1393,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.core.Plan",
   "caffe2.python.core.execution_step",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.random.randint",
   "numpy.random.uniform"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_weighted_sample_blobs_queue.append": {
  "lineno": 1447,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.hypothesis_test._dtypes": {
  "lineno": 63,
  "symbols_in_volume": [
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.int32",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test._tensor_and_indices": {
  "lineno": 37,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.arrays",
   "caffe2.python.hypothesis_test_util.dims",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.just",
   "hypothesis.strategies.lists",
   "hypothesis.strategies.tuples",
   "numpy.float32",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test._tensor_and_prefix": {
  "lineno": 26,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.arrays",
   "caffe2.python.hypothesis_test_util.dims",
   "hypothesis.assume",
   "hypothesis.strategies.composite",
   "hypothesis.strategies.lists"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test._test_binary": {
  "lineno": 68,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test._test_binary.test_binary": {
  "lineno": 70,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.elements_of_type",
   "caffe2.python.hypothesis_test_util.tensors",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.sampled_from",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test._test_binary_broadcast": {
  "lineno": 90,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test._test_binary_broadcast.test_binary_broadcast": {
  "lineno": 92,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.elements_of_type",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.just"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test._test_binary_broadcast.test_binary_broadcast.cast_ref": {
  "lineno": 105,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test.sigmoid": {
  "lineno": 22,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CUDA",
   "caffe2.proto.caffe2_pb2.DeviceOption",
   "caffe2.proto.caffe2_pb2.HIP",
   "caffe2.python.workspace.GpuDeviceType",
   "caffe2.python.workspace.NumGpuDevices",
   "caffe2.python.workspace.has_cuda_support",
   "caffe2.python.workspace.has_gpu_support",
   "caffe2.python.workspace.has_hip_support",
   "hypothesis.HealthCheck.too_slow",
   "hypothesis.Verbosity.verbose",
   "hypothesis.settings.load_profile",
   "hypothesis.settings.register_profile",
   "hypothesis.strategies.just",
   "hypothesis.strategies.sampled_from",
   "os.getenv"
  ],
  "type": "module"
 },
 "caffe2.python.hypothesis_test_util.HypothesisTestCase": {
  "lineno": 404,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.hypothesis_test_util.HypothesisTestCase._assertGradReferenceChecks": {
  "lineno": 491,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "caffe2.python.core.GradientRegistry.GetBackwardPass",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorsOnce",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.HypothesisTestCase._assertInferTensorChecks": {
  "lineno": 538,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.TensorProto.DOUBLE",
   "caffe2.proto.caffe2_pb2.TensorProto.FLOAT",
   "caffe2.proto.caffe2_pb2.TensorProto.INT32",
   "caffe2.proto.caffe2_pb2.TensorProto.INT64",
   "caffe2.python.workspace.FetchBlob",
   "logging.warning",
   "numpy.array",
   "numpy.dtype",
   "numpy.int32",
   "numpy.ndarray",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal",
   "os.getenv"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertDeviceChecks": {
  "lineno": 410,
  "symbols_in_volume": [
   "caffe2.python.device_checker.DeviceChecker"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertGradientChecks": {
  "lineno": 443,
  "symbols_in_volume": [
   "caffe2.python.gradient_checker.GradientChecker"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertReferenceChecks": {
  "lineno": 586,
  "symbols_in_volume": [
   "caffe2.python.core.DeviceScope",
   "caffe2.python.core.InferOpBlobDevicesAsDict",
   "caffe2.python.core.Net",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.InferShapesAndTypes",
   "caffe2.python.workspace.RunNetOnce",
   "copy.deepcopy",
   "logging.warning",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_array_equal",
   "os.getenv"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertRunOpRaises": {
  "lineno": 729,
  "symbols_in_volume": [
   "caffe2.python.core.InferOpBlobDevicesAsDict",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "copy.deepcopy",
   "six.assertRaisesRegex"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertValidationChecks": {
  "lineno": 693,
  "symbols_in_volume": [
   "caffe2.python.core.InferOpBlobDevicesAsDict",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.python.workspace.RunOperatorOnce",
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.arrays": {
  "lineno": 163,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.arrays",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.device_checker_device_options": {
  "lineno": 317,
  "symbols_in_volume": [
   "hypothesis.strategies.just"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.dims": {
  "lineno": 140,
  "symbols_in_volume": [
   "hypothesis.strategies.integers"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.elements_of_type": {
  "lineno": 144,
  "symbols_in_volume": [
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.bool",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.floats": {
  "lineno": 91,
  "symbols_in_volume": [
   "hypothesis.strategies.floats",
   "hypothesis.version.__version_info__"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.gradient_checker_device_option": {
  "lineno": 321,
  "symbols_in_volume": [
   "hypothesis.strategies.sampled_from"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.is_sandcastle": {
  "lineno": 57,
  "symbols_in_volume": [
   "os.getenv"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.is_travis": {
  "lineno": 65,
  "symbols_in_volume": [
   "os.environ"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.lengths": {
  "lineno": 205,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.arrays",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.just",
   "numpy.append",
   "numpy.array",
   "numpy.diff",
   "numpy.empty",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.lengths_tensor": {
  "lineno": 254,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.runOpBenchmark": {
  "lineno": 345,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.python.core.InferOpBlobDevicesAsDict",
   "caffe2.python.workspace.BenchmarkNet",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.runOpOnInput": {
  "lineno": 372,
  "symbols_in_volume": [
   "caffe2.python.core.InferOpBlobDevicesAsDict",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.segment_ids": {
  "lineno": 189,
  "symbols_in_volume": [
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.just",
   "numpy.cumsum",
   "numpy.empty",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.segmented_tensor": {
  "lineno": 233,
  "symbols_in_volume": [
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.just",
   "hypothesis.strategies.lists",
   "hypothesis.strategies.tuples",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.settings": {
  "lineno": 75,
  "symbols_in_volume": [
   "hypothesis.settings",
   "hypothesis.version.__version_info__"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.sparse_lengths_tensor": {
  "lineno": 280,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.sparse_segmented_tensor": {
  "lineno": 260,
  "symbols_in_volume": [
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.just",
   "hypothesis.strategies.lists",
   "hypothesis.strategies.tuples",
   "numpy.float32",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.temp_workspace": {
  "lineno": 336,
  "symbols_in_volume": [
   "caffe2.python.workspace.CurrentWorkspace",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.SwitchWorkspace",
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.tensor": {
  "lineno": 174,
  "symbols_in_volume": [
   "hypothesis.strategies.lists",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.tensor1d": {
  "lineno": 185,
  "symbols_in_volume": [
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.tensors": {
  "lineno": 284,
  "symbols_in_volume": [
   "hypothesis.strategies.lists",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.tensors1d": {
  "lineno": 293,
  "symbols_in_volume": [
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.to_float32": {
  "lineno": 69,
  "symbols_in_volume": [
   "struct.pack",
   "struct.unpack"
  ],
  "type": "function"
 },
 "caffe2.python.ideep": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.ideep.LRN_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.ideep.LRN_op_test.LRNTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase",
   "caffe2.python.workspace.C.use_mkldnn",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.ideep.LRN_op_test.LRNTest.test_LRN": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.ideep_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.adam_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.ideep.adam_op_test.TestAdamOps": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase",
   "caffe2.python.workspace.C.use_mkldnn",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.ideep.adam_op_test.TestAdamOps.test_adam": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.cpu_do",
   "caffe2.python.hypothesis_test_util.tensors",
   "caffe2.python.ideep_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "numpy.absolute",
   "numpy.array",
   "numpy.float32",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.adam_op_test.TestAdamOps.test_adam_output_grad": {
  "lineno": 48,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.cpu_do",
   "caffe2.python.hypothesis_test_util.tensors",
   "caffe2.python.ideep_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "numpy.absolute",
   "numpy.array",
   "numpy.float32",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.blobs_queue_db_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.ideep.blobs_queue_db_test.BlobsQueueDBTest": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.workspace.C.use_mkldnn",
   "unittest.TestCase",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.ideep.blobs_queue_db_test.BlobsQueueDBTest._add_blob_to_queue": {
  "lineno": 84,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.proto.caffe2_pb2.IDEEP",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.RunOperatorOnce"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.blobs_queue_db_test.BlobsQueueDBTest._create_test_tensor_protos": {
  "lineno": 96,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.TensorProtos",
   "caffe2.python.core.DataType.INT32",
   "caffe2.python.core.DataType.STRING"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.blobs_queue_db_test.BlobsQueueDBTest._test_create_blobs_queue_db": {
  "lineno": 41,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.IDEEP",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.core.Net",
   "caffe2.python.timeout_guard.CompleteInTimeOrDie",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNet",
   "caffe2.python.workspace.RunNetOnce"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.blobs_queue_db_test.BlobsQueueDBTest.test_create_blobs_queue_db_string": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.IDEEP",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.blobs_queue_db_test.BlobsQueueDBTest.test_create_blobs_queue_db_string.add_blobs": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.blobs_queue_db_test.BlobsQueueDBTest.test_create_blobs_queue_db_tensor": {
  "lineno": 27,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.IDEEP",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.blobs_queue_db_test.BlobsQueueDBTest.test_create_blobs_queue_db_tensor.add_blobs": {
  "lineno": 30,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "numpy.array"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.channel_shuffle_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.ideep.channel_shuffle_op_test.ChannelShuffleTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase",
   "caffe2.python.workspace.C.use_mkldnn",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.ideep.channel_shuffle_op_test.ChannelShuffleTest.test_channel_shuffle": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.ideep_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.concat_split_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.ideep.concat_split_op_test.TestConcatSplitOps": {
  "lineno": 48,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase",
   "caffe2.python.workspace.C.use_mkldnn",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.ideep.concat_split_op_test.TestConcatSplitOps.test_concat": {
  "lineno": 50,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.ideep_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.concat_split_op_test.TestConcatSplitOps.test_concat_add_axis": {
  "lineno": 101,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.ideep_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.concat_split_op_test.TestConcatSplitOps.test_concat_with_TensorCPU": {
  "lineno": 119,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.ideep_test_util.gcs",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "hypothesis.given",
   "numpy.abs",
   "numpy.allclose",
   "numpy.max"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.concat_split_op_test.TestConcatSplitOps.test_split": {
  "lineno": 66,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.ideep_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "numpy.concatenate"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.concat_split_op_test.TestConcatSplitOps.test_split.split_ref": {
  "lineno": 91,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.cumsum"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.concat_split_op_test._tensor_splits": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.strategies.composite",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.lists",
   "numpy.array",
   "numpy.diff",
   "numpy.int32",
   "numpy.ones"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.conv_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.ideep.conv_op_test.ConvTest": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase",
   "caffe2.python.workspace.C.use_mkldnn",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.ideep.conv_op_test.ConvTest.test_convolution": {
  "lineno": 20,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.ideep_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.conv_op_test.ConvTest.test_depthwise_convolution": {
  "lineno": 99,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.ideep_test_util.gcs",
   "caffe2.python.transformations.optimizeForMKLDNN",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunOperatorOnce",
   "caffe2.python.workspace.SwitchWorkspace",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.abs",
   "numpy.allclose",
   "numpy.float32",
   "numpy.max",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.conv_op_test.ConvTest.test_winograd_convolution": {
  "lineno": 59,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.ideep_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.conv_transpose_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.ideep.conv_transpose_test.ConvTransposeTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase",
   "caffe2.python.workspace.C.use_mkldnn",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.ideep.conv_transpose_test.ConvTransposeTest.test_convolution_transpose_gradients": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.ideep_test_util.gcs",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.convfusion_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.ideep.convfusion_op_test.ConvFusionTest": {
  "lineno": 19,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase",
   "caffe2.python.workspace.C.use_mkldnn",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.ideep.convfusion_op_test.ConvFusionTest.test_convolution_affch_folding": {
  "lineno": 780,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.proto.caffe2_pb2.OperatorDef",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.ideep_test_util.gcs",
   "caffe2.python.transformations.optimizeForMKLDNN",
   "caffe2.python.workspace.CurrentWorkspace",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunOperatorOnce",
   "caffe2.python.workspace.SwitchWorkspace",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.abs",
   "numpy.allclose",
   "numpy.float32",
   "numpy.max",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.convfusion_op_test.ConvFusionTest.test_convolution_bn_folding": {
  "lineno": 692,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.proto.caffe2_pb2.OperatorDef",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.ideep_test_util.gcs",
   "caffe2.python.transformations.optimizeForMKLDNN",
   "caffe2.python.workspace.CurrentWorkspace",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunOperatorOnce",
   "caffe2.python.workspace.SwitchWorkspace",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.abs",
   "numpy.absolute",
   "numpy.allclose",
   "numpy.float32",
   "numpy.max",
   "numpy.random.rand",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.convfusion_op_test.ConvFusionTest.test_convolution_grouped_sum_relu_fusion": {
  "lineno": 583,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.proto.caffe2_pb2.OperatorDef",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.ideep_test_util.gcs",
   "caffe2.python.transformations.optimizeForMKLDNN",
   "caffe2.python.workspace.CurrentWorkspace",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.python.workspace.RunOperatorOnce",
   "caffe2.python.workspace.SwitchWorkspace",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.abs",
   "numpy.allclose",
   "numpy.float32",
   "numpy.max",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.convfusion_op_test.ConvFusionTest.test_convolution_relu_fusion": {
  "lineno": 21,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.proto.caffe2_pb2.OperatorDef",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.ideep_test_util.gcs",
   "caffe2.python.transformations.optimizeForMKLDNN",
   "caffe2.python.workspace.CurrentWorkspace",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunOperatorOnce",
   "caffe2.python.workspace.SwitchWorkspace",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.abs",
   "numpy.allclose",
   "numpy.float32",
   "numpy.max",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.convfusion_op_test.ConvFusionTest.test_convolution_sum_fusion": {
  "lineno": 120,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.proto.caffe2_pb2.OperatorDef",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.ideep_test_util.gcs",
   "caffe2.python.transformations.optimizeForMKLDNN",
   "caffe2.python.workspace.CurrentWorkspace",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.python.workspace.RunOperatorOnce",
   "caffe2.python.workspace.SwitchWorkspace",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "math.ceil",
   "numpy.abs",
   "numpy.allclose",
   "numpy.float32",
   "numpy.max",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.convfusion_op_test.ConvFusionTest.test_convolution_sum_relu_fusion": {
  "lineno": 431,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.proto.caffe2_pb2.OperatorDef",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.ideep_test_util.gcs",
   "caffe2.python.transformations.optimizeForMKLDNN",
   "caffe2.python.workspace.CurrentWorkspace",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.python.workspace.RunOperatorOnce",
   "caffe2.python.workspace.SwitchWorkspace",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.abs",
   "numpy.allclose",
   "numpy.float32",
   "numpy.max",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.copy_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.ideep.copy_op_test.CopyTest": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.workspace.C.use_mkldnn",
   "unittest.TestCase",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.ideep.copy_op_test.CopyTest._get_deep_device": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.DeviceOption",
   "caffe2.proto.caffe2_pb2.IDEEP"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.copy_op_test.CopyTest.test_copy_from_ideep": {
  "lineno": 50,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.testing.assert_allclose",
   "random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.copy_op_test.CopyTest.test_copy_from_ideep_fallthrough": {
  "lineno": 82,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.testing.assert_allclose",
   "random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.copy_op_test.CopyTest.test_copy_from_ideep_zero_dim": {
  "lineno": 67,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.testing.assert_allclose",
   "random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.copy_op_test.CopyTest.test_copy_to_ideep": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.testing.assert_allclose",
   "random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.copy_op_test.CopyTest.test_copy_to_ideep_zero_dim": {
  "lineno": 35,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.testing.assert_allclose",
   "random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.dropout_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.ideep.dropout_op_test.DropoutTest": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase",
   "caffe2.python.workspace.C.use_mkldnn",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.ideep.dropout_op_test.DropoutTest.test_dropout_is_test": {
  "lineno": 20,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.ideep_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.floats"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.dropout_op_test.DropoutTest.test_dropout_is_test.reference_dropout_test": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.ones"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.dropout_op_test.DropoutTest.test_dropout_ratio0": {
  "lineno": 40,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.ideep_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.dropout_op_test.DropoutTest.test_dropout_ratio0.reference_dropout_ratio0": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.ones"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.elementwise_sum_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.ideep.elementwise_sum_op_test.ElementwiseSumTest": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase",
   "caffe2.python.workspace.C.use_mkldnn",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.ideep.elementwise_sum_op_test.ElementwiseSumTest.test_elementwise_sum": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.ideep_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.elementwise_sum_op_test.ElementwiseSumTest.test_elementwise_sum_fallback": {
  "lineno": 42,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.ideep_test_util.gcs_cpu_ideep",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.abs",
   "numpy.allclose",
   "numpy.float32",
   "numpy.max",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.elementwise_sum_op_test.ElementwiseSumTest.test_int8_elementwise_sum": {
  "lineno": 82,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.ideep_test_util.gcs_cpu_ideep",
   "caffe2.python.workspace.CurrentWorkspace",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.python.workspace.RunOperatorOnce",
   "caffe2.python.workspace.SwitchWorkspace",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.abs",
   "numpy.absolute",
   "numpy.float32",
   "numpy.max",
   "numpy.random.rand",
   "numpy.square",
   "numpy.subtract"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.expanddims_squeeze_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.ideep.expanddims_squeeze_op_test.ExpandDimsSqueezeTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase",
   "caffe2.python.workspace.C.use_mkldnn",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.ideep.expanddims_squeeze_op_test.ExpandDimsSqueezeTest.test_expand_dims": {
  "lineno": 73,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.ideep_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.lists",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.expanddims_squeeze_op_test.ExpandDimsSqueezeTest.test_expand_dims_fallback": {
  "lineno": 92,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.ideep_test_util.gcs_cpu_ideep",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.lists",
   "numpy.abs",
   "numpy.allclose",
   "numpy.float32",
   "numpy.max",
   "numpy.random.rand",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.expanddims_squeeze_op_test.ExpandDimsSqueezeTest.test_squeeze": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.ideep_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.lists",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.expanddims_squeeze_op_test.ExpandDimsSqueezeTest.test_squeeze_fallback": {
  "lineno": 33,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.ideep_test_util.gcs_cpu_ideep",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.lists",
   "numpy.abs",
   "numpy.allclose",
   "numpy.float32",
   "numpy.max",
   "numpy.random.rand",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.fc_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.ideep.fc_op_test.FcTest": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase",
   "caffe2.python.workspace.C.use_mkldnn",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.ideep.fc_op_test.FcTest.test_fc_2_dims": {
  "lineno": 19,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.ideep_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.fc_op_test.FcTest.test_fc_4_dims": {
  "lineno": 248,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.ideep_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.fc_op_test.FcTest.test_fc_4_dims_src": {
  "lineno": 229,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.ideep_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.fc_op_test.FcTest.test_fc_with_axis": {
  "lineno": 38,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.ideep_test_util.gcs",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunOperatorOnce",
   "caffe2.python.workspace.SwitchWorkspace",
   "functools.reduce",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.abs",
   "numpy.allclose",
   "numpy.float32",
   "numpy.max",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.fc_op_test.FcTest.test_fc_with_axis_w": {
  "lineno": 133,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.ideep_test_util.gcs",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunOperatorOnce",
   "caffe2.python.workspace.SwitchWorkspace",
   "functools.reduce",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.abs",
   "numpy.allclose",
   "numpy.float32",
   "numpy.max",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.fc_op_test.FcTest.test_int8_fc_4_dims": {
  "lineno": 267,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.ideep_test_util.gcs_cpu_ideep",
   "caffe2.python.workspace.CurrentWorkspace",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.python.workspace.RunOperatorOnce",
   "caffe2.python.workspace.SwitchWorkspace",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.abs",
   "numpy.absolute",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.int8",
   "numpy.max",
   "numpy.random.rand",
   "numpy.rint",
   "numpy.square",
   "numpy.subtract",
   "numpy.transpose",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.leaky_relu_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.ideep.leaky_relu_op_test.LeakyReluTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase",
   "caffe2.python.workspace.C.use_mkldnn",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.ideep.leaky_relu_op_test.LeakyReluTest._feed_inputs": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.ideep.leaky_relu_op_test.LeakyReluTest._get_inputs": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.logical_and",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.leaky_relu_op_test.LeakyReluTest._get_op": {
  "lineno": 28,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.leaky_relu_op_test.LeakyReluTest.test_leaky_relu_gradients": {
  "lineno": 43,
  "symbols_in_volume": [
   "caffe2.python.ideep_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.leaky_relu_op_test.LeakyReluTest.test_leaky_relu_model_helper_helper": {
  "lineno": 63,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper",
   "hypothesis.given",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.moment_sgd_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.ideep.moment_sgd_op_test.TestMomentumSGDUpdateOps": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase",
   "caffe2.python.workspace.C.use_mkldnn",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.ideep.moment_sgd_op_test.TestMomentumSGDUpdateOps.test_MomentumSGDUpdate": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.cpu_do",
   "caffe2.python.ideep_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.operator_fallback_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.ideep.operator_fallback_op_test.TestFallbackOps": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase",
   "caffe2.python.workspace.C.use_mkldnn",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.ideep.operator_fallback_op_test.TestFallbackOps.test_in_place": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.proto.caffe2_pb2.OperatorDef",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.ideep_test_util.gcs",
   "caffe2.python.workspace.CurrentWorkspace",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.python.workspace.RunOperatorOnce",
   "caffe2.python.workspace.SwitchWorkspace",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.abs",
   "numpy.allclose",
   "numpy.float32",
   "numpy.max",
   "numpy.random.rand",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.order_switch_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.ideep.order_switch_op_test.OrderSwitchTest": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase",
   "caffe2.python.workspace.C.use_mkldnn",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.ideep.order_switch_op_test.OrderSwitchTest.test_nchw2nhwc": {
  "lineno": 19,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.ideep_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.order_switch_op_test.OrderSwitchTest.test_nhwc2nchw": {
  "lineno": 35,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.ideep_test_util.gcs",
   "caffe2.python.workspace.CurrentWorkspace",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunOperatorOnce",
   "caffe2.python.workspace.SwitchWorkspace",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.abs",
   "numpy.allclose",
   "numpy.float32",
   "numpy.max",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.pool_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.ideep.pool_op_test.PoolTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase",
   "caffe2.python.workspace.C.use_mkldnn",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.ideep.pool_op_test.PoolTest.test_int8_pooling": {
  "lineno": 48,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.ideep_test_util.gcs_cpu_ideep",
   "caffe2.python.workspace.CurrentWorkspace",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.python.workspace.RunOperatorOnce",
   "caffe2.python.workspace.SwitchWorkspace",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.abs",
   "numpy.absolute",
   "numpy.float32",
   "numpy.max",
   "numpy.random.rand",
   "numpy.square",
   "numpy.subtract"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.pool_op_test.PoolTest.test_pooling": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.ideep_test_util.gcs",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.pre_convert_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.ideep.pre_convert_test.PreConvertTest": {
  "lineno": 21,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase",
   "caffe2.python.workspace.C.use_mkldnn",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.ideep.pre_convert_test.PreConvertTest.test_preConvert": {
  "lineno": 23,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.IDEEP",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.transformations.optimizeForMKLDNN",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.CurrentWorkspace",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNet",
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.python.workspace.SwitchWorkspace",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.abs",
   "numpy.allclose",
   "numpy.float32",
   "numpy.int32",
   "numpy.max",
   "numpy.random.rand",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.pre_convert_test.PreConvertTest.test_preConvert.AddModel": {
  "lineno": 26,
  "symbols_in_volume": [
   "caffe2.python.brew.conv",
   "caffe2.python.brew.conv_transpose",
   "caffe2.python.brew.fc",
   "caffe2.python.brew.softmax"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.pre_convert_test.PreConvertTest.test_preConvert.AddTrainingOperators": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.ideep.relu_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.ideep.relu_op_test.ReluTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase",
   "caffe2.python.workspace.C.use_mkldnn",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.ideep.relu_op_test.ReluTest.test_int8_relu": {
  "lineno": 35,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.ideep_test_util.gcs_cpu_ideep",
   "caffe2.python.workspace.CurrentWorkspace",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.python.workspace.RunOperatorOnce",
   "caffe2.python.workspace.SwitchWorkspace",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.abs",
   "numpy.absolute",
   "numpy.float32",
   "numpy.max",
   "numpy.random.rand",
   "numpy.sign",
   "numpy.square",
   "numpy.subtract"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.relu_op_test.ReluTest.test_relu": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.ideep_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "numpy.sign"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.reshape_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.ideep.reshape_op_test.TestReShapeOps": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase",
   "caffe2.python.workspace.C.use_mkldnn",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.ideep.reshape_op_test.TestReShapeOps.test_backprop": {
  "lineno": 62,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.IDEEP",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.core.Net",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.reshape_op_test.TestReShapeOps.test_basic_reshape": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.ideep.reshape_op_test.TestReShapeOps.test_in_place": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.ideep.reshape_op_test.TestReShapeOps.test_input_shape_changes": {
  "lineno": 94,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.IDEEP",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.core.Net",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.RunNet",
   "numpy.array",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.reshape_op_test.TestReShapeOps.test_int64_reshape_input": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.reshape_op_test.TestReShapeOps.test_missing_dim": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.ideep.reshape_op_test.TestReShapeOps.test_reshape_ops": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.proto.caffe2_pb2.IDEEP",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.reshape_op_test.TestReShapeOps.test_zero_dim": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.ideep.reshape_op_test.TestReShapeOps.test_zero_dim_and_missing_dim": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.ideep.reshape_op_test._test_reshape": {
  "lineno": 112,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.proto.caffe2_pb2.IDEEP",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.asarray",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.shape_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.ideep.shape_op_test.ShapeTest": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase",
   "caffe2.python.workspace.C.use_mkldnn",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.ideep.shape_op_test.ShapeTest.test_shape": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.ideep_test_util.gcs",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.abs",
   "numpy.allclose",
   "numpy.float32",
   "numpy.max",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.shape_op_test.ShapeTest.test_shape_with_axes": {
  "lineno": 51,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.ideep_test_util.gcs",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.lists",
   "numpy.abs",
   "numpy.allclose",
   "numpy.float32",
   "numpy.max",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.sigmoid_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.ideep.sigmoid_op_test.SigmoidTest": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase",
   "caffe2.python.workspace.C.use_mkldnn",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.ideep.sigmoid_op_test.SigmoidTest.test_sigmoid": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.softmax_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.ideep.softmax_op_test.SoftmaxTest": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase",
   "caffe2.python.workspace.C.use_mkldnn",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.ideep.softmax_op_test.SoftmaxTest.test_softmax": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.ideep_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.spatial_bn_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.ideep.spatial_bn_op_test.TestSpatialBN": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase",
   "caffe2.python.workspace.C.use_mkldnn",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.ideep.spatial_bn_op_test.TestSpatialBN.test_spatialbn_test_mode": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.ideep_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.randn",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.spatial_bn_op_test.TestSpatialBN.test_spatialbn_test_mode.reference_spatialbn_test": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.newaxis",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.spatial_bn_op_test.TestSpatialBN.test_spatialbn_train_mode": {
  "lineno": 60,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.ideep_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.randn",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.spatial_bn_op_test.TestSpatialBN.test_spatialbn_train_mode_gradient_check": {
  "lineno": 98,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.ideep_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.randn",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.test_ideep_net": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.ideep.test_ideep_net.GetArgumentParser": {
  "lineno": 15,
  "symbols_in_volume": [
   "argparse.ArgumentParser"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.test_ideep_net.benchmark": {
  "lineno": 80,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.proto.caffe2_pb2.IDEEP",
   "caffe2.proto.caffe2_pb2.MKLDNN",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.models.download.ModelDownloader",
   "caffe2.python.workspace.BenchmarkNet",
   "caffe2.python.workspace.Blobs",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.float32",
   "numpy.random.randn",
   "time.time"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.transform_ideep_net": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.ideep.transform_ideep_net.GetArgumentParser": {
  "lineno": 41,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "argparse.FileType"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.transform_ideep_net.Optimize": {
  "lineno": 284,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.proto.caffe2_pb2.IDEEP",
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.workspace.Blobs",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNetOnce",
   "json.load",
   "numpy.allclose",
   "numpy.float32",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.transform_ideep_net.add_tensor": {
  "lineno": 234,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.utils.MakeArgument",
   "numpy.dtype"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.transform_ideep_net.blob_uses": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.ideep.transform_ideep_net.fuse_bn": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.ideep.transform_ideep_net.fuse_conv_relu": {
  "lineno": 273,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.IDEEP",
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.python._import_c_extension.transform_optimizeForMKLDNN",
   "caffe2.python.core.DeviceOption",
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.transform_ideep_net.fuse_first_bn": {
  "lineno": 58,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension",
   "copy.deepcopy",
   "numpy.float32",
   "numpy.sqrt",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.transform_ideep_net.fuse_first_mul_add": {
  "lineno": 178,
  "symbols_in_volume": [
   "caffe2.python.utils.MakeArgument",
   "copy.deepcopy",
   "numpy.ones_like",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.transform_ideep_net.fuse_first_mul_add.s": {
  "lineno": 200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.ideep.transform_ideep_net.fuse_mul_add": {
  "lineno": 223,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.ideep.transform_ideep_net.gen_init_net_from_blobs": {
  "lineno": 265,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.transform_ideep_net.last_producer": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.ideep.transform_ideep_net.pairwise": {
  "lineno": 19,
  "symbols_in_volume": [
   "itertools.tee"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.transpose_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.ideep.transpose_op_test.TransposeTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase",
   "caffe2.python.workspace.C.use_mkldnn",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.ideep.transpose_op_test.TransposeTest.test_transpose": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.ideep_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "numpy.arange",
   "numpy.float32",
   "numpy.random.shuffle"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.transpose_op_test.TransposeTest.test_transpose.transpose_ref": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.transpose"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.weightedsum_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.ideep.weightedsum_op_test.TestWeightedSumOp": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase",
   "caffe2.python.workspace.C.use_mkldnn",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.ideep.weightedsum_op_test.TestWeightedSumOp.test_weighted_sum": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.ideep_test_util.gcs_ideep_only",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.ideep.weightedsum_op_test.TestWeightedSumOp.test_weighted_sum.weighted_sum_op_ref": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.ideep_test_util": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.DeviceOption",
   "caffe2.proto.caffe2_pb2.IDEEP",
   "caffe2.python.hypothesis_test_util.cpu_do",
   "caffe2.python.hypothesis_test_util.device_options",
   "hypothesis.strategies.just",
   "hypothesis.strategies.sampled_from"
  ],
  "type": "module"
 },
 "caffe2.python.ideep_test_util.device_checker_device_options": {
  "lineno": 25,
  "symbols_in_volume": [
   "hypothesis.strategies.just"
  ],
  "type": "function"
 },
 "caffe2.python.ideep_test_util.gradient_checker_device_option": {
  "lineno": 29,
  "symbols_in_volume": [
   "hypothesis.strategies.sampled_from"
  ],
  "type": "function"
 },
 "caffe2.python.layer_model_helper": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper": {
  "lineno": 30,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper"
  ],
  "type": "class"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.NoOptim": {
  "lineno": 741,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper._GetOne": {
  "lineno": 737,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.__getattr__": {
  "lineno": 559,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.layer_exists"
  ],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.__getattr__.is_functional_layer": {
  "lineno": 560,
  "symbols_in_volume": [
   "caffe2.python.core.IsOperator"
  ],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.__getattr__.resolve_functional_layer": {
  "lineno": 568,
  "symbols_in_volume": [
   "caffe2.python.core.IsOperator"
  ],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.__getattr__.wrapper": {
  "lineno": 597,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.create_layer"
  ],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.__getattr__.wrapper.apply_operator": {
  "lineno": 598,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.__init__": {
  "lineno": 42,
  "symbols_in_volume": [
   "caffe2.python.schema.NewRecord",
   "caffe2.python.schema.Struct"
  ],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper._add_global_constants": {
  "lineno": 226,
  "symbols_in_volume": [
   "future.utils.viewvalues"
  ],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper._get_global_constant_initializer_op": {
  "lineno": 134,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool",
   "numpy.int32",
   "numpy.int64",
   "numpy.str"
  ],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper._get_global_constant_initializer_op.initializer": {
  "lineno": 161,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator"
  ],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper._init_global_constants": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper._validate_param_optim": {
  "lineno": 249,
  "symbols_in_volume": [
   "caffe2.python.optimizer.Optimizer"
  ],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper._validate_param_shape": {
  "lineno": 235,
  "symbols_in_volume": [
   "caffe2.python.scope.CurrentNameScope"
  ],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.add_ad_hoc_plot_blob": {
  "lineno": 126,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "caffe2.python.schema.Scalar",
   "numpy.float",
   "six.string_types"
  ],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.add_final_net_modifiers": {
  "lineno": 415,
  "symbols_in_volume": [
   "caffe2.python.modeling.net_modifier.NetModifier"
  ],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.add_global_constant": {
  "lineno": 173,
  "symbols_in_volume": [
   "six.string_types"
  ],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.add_layer": {
  "lineno": 368,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "caffe2.python.layers.layers.LayerParameter",
   "caffe2.python.modeling.parameter_info.ParameterInfo"
  ],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.add_loss": {
  "lineno": 518,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct"
  ],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.add_metric_field": {
  "lineno": 111,
  "symbols_in_volume": [
   "caffe2.python.schema.Struct"
  ],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.add_output_schema": {
  "lineno": 540,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct"
  ],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.add_post_grad_net_modifiers": {
  "lineno": 408,
  "symbols_in_volume": [
   "caffe2.python.modeling.net_modifier.NetModifier"
  ],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.add_prediction": {
  "lineno": 492,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.add_trainer_extra_schema": {
  "lineno": 555,
  "symbols_in_volume": [
   "caffe2.python.schema.NewRecord"
  ],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.apply_final_net_modifiers": {
  "lineno": 695,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.apply_optimizers": {
  "lineno": 708,
  "symbols_in_volume": [
   "caffe2.python.core.DeviceScope",
   "caffe2.python.muji.OnCPU",
   "caffe2.python.optimizer.get_param_device",
   "future.utils.viewitems"
  ],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.apply_post_grad_net_modifiers": {
  "lineno": 679,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.apply_regularizers_after_optimizer": {
  "lineno": 651,
  "symbols_in_volume": [
   "caffe2.python.core.DeviceScope",
   "caffe2.python.muji.OnCPU",
   "caffe2.python.optimizer.get_param_device",
   "caffe2.python.regularizer.RegularizationBy.AFTER_OPTIMIZER",
   "caffe2.python.regularizer.Regularizer",
   "future.utils.viewitems"
  ],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.apply_regularizers_on_loss": {
  "lineno": 630,
  "symbols_in_volume": [
   "caffe2.python.regularizer.RegularizationBy.ON_LOSS",
   "caffe2.python.regularizer.Regularizer",
   "caffe2.python.schema.Scalar",
   "future.utils.viewitems"
  ],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.apply_seed": {
  "lineno": 436,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.breakdown_map": {
  "lineno": 748,
  "symbols_in_volume": [
   "six.string_types"
  ],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.clear_output_schema": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.create_init_net": {
  "lineno": 230,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.create_param": {
  "lineno": 309,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.layers.layers.LayerParameter",
   "caffe2.python.modeling.parameter_sharing.parameter_sharing_context.get_parameter_name",
   "copy.deepcopy",
   "six.string_types"
  ],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.default_optimizer": {
  "lineno": 444,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.filter_metrics_schema": {
  "lineno": 119,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct"
  ],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.get_parameter_blobs": {
  "lineno": 400,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.has_loss": {
  "lineno": 515,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.input_feature_schema": {
  "lineno": 448,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.layers": {
  "lineno": 626,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.loss": {
  "lineno": 510,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.maybe_add_global_constant": {
  "lineno": 193,
  "symbols_in_volume": [
   "caffe2.python.utils.OpAlmostEqual"
  ],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.metrics_schema": {
  "lineno": 456,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.next_layer_name": {
  "lineno": 357,
  "symbols_in_volume": [
   "caffe2.python.core.ScopedName"
  ],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.output_schema": {
  "lineno": 472,
  "symbols_in_volume": [
   "caffe2.python.schema"
  ],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.prediction": {
  "lineno": 487,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.preproc_output_schema": {
  "lineno": 482,
  "symbols_in_volume": [
   "caffe2.python.schema"
  ],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.seed": {
  "lineno": 422,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.sequence_seed": {
  "lineno": 426,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.set_initialize_params": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.store_seed": {
  "lineno": 430,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.trainer_extra_schema": {
  "lineno": 452,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.transfer_learning_blob_name_mappings": {
  "lineno": 500,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layer_model_instantiator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.layer_model_instantiator._filter_layers": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layer_model_instantiator._generate_training_net_only": {
  "lineno": 76,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.layers.tags.Tags.EXCLUDE_FROM_TRAIN"
  ],
  "type": "function"
 },
 "caffe2.python.layer_model_instantiator.generate_eval_net": {
  "lineno": 60,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.layers.layers.InstantiationContext.EVAL",
   "caffe2.python.layers.tags.Tags.EXCLUDE_FROM_EVAL"
  ],
  "type": "function"
 },
 "caffe2.python.layer_model_instantiator.generate_predict_net": {
  "lineno": 44,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.layers.layers.InstantiationContext.PREDICTION",
   "caffe2.python.layers.tags.Tags.EXCLUDE_FROM_PREDICTION"
  ],
  "type": "function"
 },
 "caffe2.python.layer_model_instantiator.generate_training_nets": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layer_model_instantiator.generate_training_nets_forward_only": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layer_model_instantiator.shrink_output_schema": {
  "lineno": 20,
  "symbols_in_volume": [
   "caffe2.python.schema.from_column_list"
  ],
  "type": "function"
 },
 "caffe2.python.layer_parameter_sharing_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.layer_parameter_sharing_test.ParameterSharingTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.layer_test_util.LayersTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.layer_parameter_sharing_test.ParameterSharingTest.test_layer_duplicated_parameter_init": {
  "lineno": 125,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.modeling.parameter_sharing.ParameterSharing",
   "caffe2.python.scope.NameScope"
  ],
  "type": "function"
 },
 "caffe2.python.layer_parameter_sharing_test.ParameterSharingTest.test_layer_parameter_name": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.scope.NameScope"
  ],
  "type": "function"
 },
 "caffe2.python.layer_parameter_sharing_test.ParameterSharingTest.test_layer_shared_parameter_name_different_namescopes": {
  "lineno": 46,
  "symbols_in_volume": [
   "caffe2.python.modeling.parameter_sharing.ParameterSharing",
   "caffe2.python.scope.NameScope"
  ],
  "type": "function"
 },
 "caffe2.python.layer_parameter_sharing_test.ParameterSharingTest.test_layer_shared_parameter_name_different_shapes": {
  "lineno": 108,
  "symbols_in_volume": [
   "caffe2.python.modeling.parameter_sharing.ParameterSharing",
   "caffe2.python.scope.NameScope",
   "six.assertRaisesRegex"
  ],
  "type": "function"
 },
 "caffe2.python.layer_parameter_sharing_test.ParameterSharingTest.test_layer_shared_parameter_name_within_same_namescope": {
  "lineno": 70,
  "symbols_in_volume": [
   "caffe2.python.modeling.parameter_sharing.ParameterSharing",
   "caffe2.python.scope.NameScope"
  ],
  "type": "function"
 },
 "caffe2.python.layer_parameter_sharing_test.ParameterSharingTest.test_layer_shared_parameter_name_within_same_namescope_customized_name": {
  "lineno": 88,
  "symbols_in_volume": [
   "caffe2.python.modeling.parameter_sharing.ParameterSharing",
   "caffe2.python.scope.NameScope"
  ],
  "type": "function"
 },
 "caffe2.python.layer_parameter_sharing_test.ParameterSharingTest.test_layer_shared_parameter_optim_validator": {
  "lineno": 154,
  "symbols_in_volume": [
   "caffe2.python.modeling.parameter_sharing.ParameterSharing",
   "caffe2.python.optimizer.AdagradOptimizer",
   "caffe2.python.optimizer.AdamOptimizer",
   "caffe2.python.scope.NameScope"
  ],
  "type": "function"
 },
 "caffe2.python.layer_test_util": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.layer_test_util.LayersTestCase": {
  "lineno": 30,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.layer_test_util.LayersTestCase.assertArgsEqual": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layer_test_util.LayersTestCase.assertArgsEqual.parse_args": {
  "lineno": 114,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.OperatorDef",
   "caffe2.python.utils.MakeArgument"
  ],
  "type": "function"
 },
 "caffe2.python.layer_test_util.LayersTestCase.assertBlobsEqual": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layer_test_util.LayersTestCase.assertNetContainOps": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layer_test_util.LayersTestCase.get_eval_net": {
  "lineno": 73,
  "symbols_in_volume": [
   "caffe2.python.layer_model_instantiator.generate_eval_net"
  ],
  "type": "function"
 },
 "caffe2.python.layer_test_util.LayersTestCase.get_predict_net": {
  "lineno": 76,
  "symbols_in_volume": [
   "caffe2.python.layer_model_instantiator.generate_predict_net"
  ],
  "type": "function"
 },
 "caffe2.python.layer_test_util.LayersTestCase.get_training_nets": {
  "lineno": 57,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.layer_test_util.LayersTestCase.new_record": {
  "lineno": 54,
  "symbols_in_volume": [
   "caffe2.python.schema.NewRecord"
  ],
  "type": "function"
 },
 "caffe2.python.layer_test_util.LayersTestCase.reset_model": {
  "lineno": 44,
  "symbols_in_volume": [
   "caffe2.python.layer_model_helper.LayerModelHelper",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.layer_test_util.LayersTestCase.run_train_net": {
  "lineno": 79,
  "symbols_in_volume": [
   "caffe2.python.layer_model_instantiator.generate_training_nets",
   "caffe2.python.schema.Struct",
   "caffe2.python.workspace.RunNetOnce"
  ],
  "type": "function"
 },
 "caffe2.python.layer_test_util.LayersTestCase.run_train_net_forward_only": {
  "lineno": 86,
  "symbols_in_volume": [
   "caffe2.python.layer_model_instantiator.generate_training_nets_forward_only",
   "caffe2.python.schema.Struct",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.RunNet",
   "caffe2.python.workspace.RunNetOnce"
  ],
  "type": "function"
 },
 "caffe2.python.layer_test_util.LayersTestCase.setUp": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layer_test_util.LayersTestCase.setup_example": {
  "lineno": 36,
  "symbols_in_volume": [
   "caffe2.python.workspace.ResetWorkspace"
  ],
  "type": "function"
 },
 "caffe2.python.layer_test_util.OpSpec": {
  "lineno": 23,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "class"
 },
 "caffe2.python.layer_test_util.OpSpec.__new__": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.modules"
  ],
  "type": "module"
 },
 "caffe2.python.layers.adaptive_weight": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.layers.adaptive_weight.AdaptiveWeight": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.ModelLayer"
  ],
  "type": "class"
 },
 "caffe2.python.layers.adaptive_weight.AdaptiveWeight.__init__": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "numpy.array",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.layers.adaptive_weight.AdaptiveWeight._add_ops_impl": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.adaptive_weight.AdaptiveWeight.add_ops": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.adaptive_weight.AdaptiveWeight.concat_data": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.adaptive_weight.AdaptiveWeight.inv_var_init": {
  "lineno": 107,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.FLOAT",
   "caffe2.python.regularizer.BoundedGradientProjection",
   "caffe2.python.regularizer.LogBarrier"
  ],
  "type": "function"
 },
 "caffe2.python.layers.adaptive_weight.AdaptiveWeight.inv_var_reg": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.adaptive_weight.AdaptiveWeight.inv_var_weight": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.adaptive_weight.AdaptiveWeight.log_std_init": {
  "lineno": 76,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.FLOAT",
   "numpy.log"
  ],
  "type": "function"
 },
 "caffe2.python.layers.adaptive_weight.AdaptiveWeight.log_std_reg": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.adaptive_weight.AdaptiveWeight.log_std_weight": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.add_bias": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.layers.add_bias.AddBias": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.ModelLayer"
  ],
  "type": "class"
 },
 "caffe2.python.layers.add_bias.AddBias.__init__": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "math.sqrt"
  ],
  "type": "function"
 },
 "caffe2.python.layers.add_bias.AddBias.add_ops": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.arc_cosine_feature_map": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.layers.arc_cosine_feature_map.ArcCosineFeatureMap": {
  "lineno": 11,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.ModelLayer"
  ],
  "type": "class"
 },
 "caffe2.python.layers.arc_cosine_feature_map.ArcCosineFeatureMap.__init__": {
  "lineno": 36,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "numpy.float32",
   "numpy.random.normal",
   "numpy.random.uniform",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "caffe2.python.layers.arc_cosine_feature_map.ArcCosineFeatureMap._heaviside_with_power": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.arc_cosine_feature_map.ArcCosineFeatureMap._initialize_params": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.arc_cosine_feature_map.ArcCosineFeatureMap.add_ops": {
  "lineno": 169,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.batch_huber_loss": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.layers.batch_huber_loss.BatchHuberLoss": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.ModelLayer"
  ],
  "type": "class"
 },
 "caffe2.python.layers.batch_huber_loss.BatchHuberLoss.__init__": {
  "lineno": 20,
  "symbols_in_volume": [
   "caffe2.python.layers.tags.Tags.EXCLUDE_FROM_PREDICTION",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "caffe2.python.schema.is_schema_subset",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.layers.batch_huber_loss.BatchHuberLoss.add_ops": {
  "lineno": 40,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.FLOAT",
   "caffe2.python.schema.data_type_for_dtype",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.layers.batch_lr_loss": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.layers.batch_lr_loss.BatchLRLoss": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.ModelLayer"
  ],
  "type": "class"
 },
 "caffe2.python.layers.batch_lr_loss.BatchLRLoss.__init__": {
  "lineno": 19,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.FLOAT",
   "caffe2.python.layers.tags.Tags.EXCLUDE_FROM_PREDICTION",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "caffe2.python.schema.is_schema_subset",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.layers.batch_lr_loss.BatchLRLoss.add_ops": {
  "lineno": 181,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.FLOAT",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.layers.batch_lr_loss.BatchLRLoss.init_weight": {
  "lineno": 119,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.FLOAT",
   "caffe2.python.core.DataType.INT64"
  ],
  "type": "function"
 },
 "caffe2.python.layers.batch_lr_loss.BatchLRLoss.update_weight": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.batch_mse_loss": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.layers.batch_mse_loss.BatchMSELoss": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.ModelLayer"
  ],
  "type": "class"
 },
 "caffe2.python.layers.batch_mse_loss.BatchMSELoss.__init__": {
  "lineno": 20,
  "symbols_in_volume": [
   "caffe2.python.layers.tags.Tags.EXCLUDE_FROM_PREDICTION",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "caffe2.python.schema.is_schema_subset",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.layers.batch_mse_loss.BatchMSELoss.add_ops": {
  "lineno": 36,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.FLOAT",
   "caffe2.python.schema.data_type_for_dtype",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.layers.batch_normalization": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.layers.batch_normalization.BatchNormalization": {
  "lineno": 12,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.ModelLayer"
  ],
  "type": "class"
 },
 "caffe2.python.layers.batch_normalization.BatchNormalization.__init__": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.layers.batch_normalization.BatchNormalization._add_ops": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.batch_normalization.BatchNormalization.add_eval_ops": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.batch_normalization.BatchNormalization.add_ops": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.batch_normalization.BatchNormalization.add_train_ops": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.batch_sigmoid_cross_entropy_loss": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.layers.batch_sigmoid_cross_entropy_loss.BatchSigmoidCrossEntropyLoss": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.ModelLayer"
  ],
  "type": "class"
 },
 "caffe2.python.layers.batch_sigmoid_cross_entropy_loss.BatchSigmoidCrossEntropyLoss.__init__": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.layers.tags.Tags.EXCLUDE_FROM_PREDICTION",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "caffe2.python.schema.is_schema_subset",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.layers.batch_sigmoid_cross_entropy_loss.BatchSigmoidCrossEntropyLoss.add_ops": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.batch_softmax_loss": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.layers.batch_softmax_loss.BatchSoftmaxLoss": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.ModelLayer"
  ],
  "type": "class"
 },
 "caffe2.python.layers.batch_softmax_loss.BatchSoftmaxLoss.__init__": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "caffe2.python.schema.is_schema_subset",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.layers.batch_softmax_loss.BatchSoftmaxLoss.add_ops": {
  "lineno": 97,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.FLOAT",
   "caffe2.python.core.DataType.INT32",
   "numpy.float32",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.layers.batch_softmax_loss.BatchSoftmaxLoss.compute_smoothed_label": {
  "lineno": 82,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.INT64",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.layers.batch_softmax_loss.BatchSoftmaxLoss.initialize_label_smoothing_constants": {
  "lineno": 60,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.float32",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.layers.blob_weighted_sum": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.layers.blob_weighted_sum.BlobWeightedSum": {
  "lineno": 12,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.ModelLayer"
  ],
  "type": "class"
 },
 "caffe2.python.layers.blob_weighted_sum.BlobWeightedSum.__init__": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar"
  ],
  "type": "function"
 },
 "caffe2.python.layers.blob_weighted_sum.BlobWeightedSum.add_ops": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.bpr_loss": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.layers.bpr_loss.BPRLoss": {
  "lineno": 19,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.ModelLayer"
  ],
  "type": "class"
 },
 "caffe2.python.layers.bpr_loss.BPRLoss.__init__": {
  "lineno": 21,
  "symbols_in_volume": [
   "caffe2.python.layers.tags.Tags.EXCLUDE_FROM_PREDICTION",
   "caffe2.python.schema.List",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "caffe2.python.schema.is_schema_subset",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.layers.bpr_loss.BPRLoss.add_ops": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.bucket_weighted": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "caffe2.python.layers.bucket_weighted.BucketWeighted": {
  "lineno": 22,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.ModelLayer"
  ],
  "type": "class"
 },
 "caffe2.python.layers.bucket_weighted.BucketWeighted.__init__": {
  "lineno": 23,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.get_categorical_limit",
   "caffe2.python.layers.tags.Tags.HANDLE_AS_SPARSE_LAYER",
   "caffe2.python.schema.List",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.layers.bucket_weighted.BucketWeighted.add_ops": {
  "lineno": 53,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.INT32"
  ],
  "type": "function"
 },
 "caffe2.python.layers.bucket_weighted.BucketWeighted.get_memory_usage": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.build_index": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.layers.build_index.MapToRange": {
  "lineno": 12,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.ModelLayer"
  ],
  "type": "class"
 },
 "caffe2.python.layers.build_index.MapToRange.__init__": {
  "lineno": 19,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "numpy.int64",
   "numpy.void"
  ],
  "type": "function"
 },
 "caffe2.python.layers.build_index.MapToRange.add_eval_ops": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.build_index.MapToRange.add_ops": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.build_index.MapToRange.add_train_ops": {
  "lineno": 49,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.INT64",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.layers.concat": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "caffe2.python.layers.concat.Concat": {
  "lineno": 35,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.ModelLayer"
  ],
  "type": "class"
 },
 "caffe2.python.layers.concat.Concat.__init__": {
  "lineno": 67,
  "symbols_in_volume": [
   "caffe2.python.schema.FeatureSpec",
   "caffe2.python.schema.Metadata",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "caffe2.python.schema.from_blob_list",
   "future.utils.viewitems",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.layers.concat.Concat.add_ops": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.concat.get_concatenated_feature_to_index": {
  "lineno": 20,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "caffe2.python.layers.constant_weight": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.layers.constant_weight.ConstantWeight": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.ModelLayer"
  ],
  "type": "class"
 },
 "caffe2.python.layers.constant_weight.ConstantWeight.__init__": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.layers.constant_weight.ConstantWeight.add_ops": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.conv": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.layers.conv.Conv": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.ModelLayer"
  ],
  "type": "class"
 },
 "caffe2.python.layers.conv.Conv.__init__": {
  "lineno": 28,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.layers.conv.Conv.add_ops": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.dropout": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.layers.dropout.Dropout": {
  "lineno": 11,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.ModelLayer"
  ],
  "type": "class"
 },
 "caffe2.python.layers.dropout.Dropout.__init__": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar"
  ],
  "type": "function"
 },
 "caffe2.python.layers.dropout.Dropout._add_ops": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.dropout.Dropout.add_eval_ops": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.dropout.Dropout.add_ops": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.dropout.Dropout.add_train_ops": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.fc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.layers.fc.FC": {
  "lineno": 24,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.ModelLayer",
   "caffe2.python.layers.sampling_trainable_mixin.SamplingTrainableMixin"
  ],
  "type": "class"
 },
 "caffe2.python.layers.fc.FC.__init__": {
  "lineno": 26,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "math.sqrt",
   "numpy.float32",
   "numpy.prod"
  ],
  "type": "function"
 },
 "caffe2.python.layers.fc.FC._add_ops": {
  "lineno": 171,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.fc.FC._insert_fc_ops": {
  "lineno": 138,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.fc.FC.add_ops": {
  "lineno": 206,
  "symbols_in_volume": [
   "caffe2.python.helpers.arg_scope.get_current_scope"
  ],
  "type": "function"
 },
 "caffe2.python.layers.fc.FC.add_train_ops": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.fc.FC.calculate_fc_output_dims": {
  "lineno": 119,
  "symbols_in_volume": [
   "numpy.floor"
  ],
  "type": "function"
 },
 "caffe2.python.layers.fc.FC.get_fp16_compatible_parameters": {
  "lineno": 219,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.fc.FC.param_blobs": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.fc.get_fc_predictor_version": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.fc_with_bootstrap": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.layers.fc_with_bootstrap.FCWithBootstrap": {
  "lineno": 22,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.ModelLayer",
   "caffe2.python.layers.sampling_trainable_mixin.SamplingTrainableMixin"
  ],
  "type": "class"
 },
 "caffe2.python.layers.fc_with_bootstrap.FCWithBootstrap.__init__": {
  "lineno": 23,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "math.sqrt",
   "numpy.prod"
  ],
  "type": "function"
 },
 "caffe2.python.layers.fc_with_bootstrap.FCWithBootstrap._add_ops": {
  "lineno": 263,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.fc_with_bootstrap.FCWithBootstrap._bootstrap_ops": {
  "lineno": 212,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.layers.fc_with_bootstrap.FCWithBootstrap._generate_bootstrapped_indices": {
  "lineno": 172,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.INT32",
   "caffe2.python.core.NameScope",
   "numpy.array",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.layers.fc_with_bootstrap.FCWithBootstrap._insert_fc_ops": {
  "lineno": 240,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.fc_with_bootstrap.FCWithBootstrap.add_ops": {
  "lineno": 290,
  "symbols_in_volume": [
   "caffe2.python.helpers.arg_scope.get_current_scope"
  ],
  "type": "function"
 },
 "caffe2.python.layers.fc_with_bootstrap.FCWithBootstrap.add_train_ops": {
  "lineno": 323,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.fc_with_bootstrap.FCWithBootstrap.get_fp16_compatible_parameters": {
  "lineno": 347,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.fc_with_bootstrap.FCWithBootstrap.param_blobs": {
  "lineno": 358,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.fc_with_bootstrap.get_fc_predictor_version": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.fc_without_bias": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.layers.fc_without_bias.FCWithoutBias": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.ModelLayer",
   "caffe2.python.layers.sampling_trainable_mixin.SamplingTrainableMixin"
  ],
  "type": "class"
 },
 "caffe2.python.layers.fc_without_bias.FCWithoutBias.__init__": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "math.sqrt",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.layers.fc_without_bias.FCWithoutBias._add_ops": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.fc_without_bias.FCWithoutBias.param_blobs": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.feature_sparse_to_dense": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.layers.feature_sparse_to_dense.FeatureSparseToDense": {
  "lineno": 12,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.ModelLayer"
  ],
  "type": "class"
 },
 "caffe2.python.layers.feature_sparse_to_dense.FeatureSparseToDense.__init__": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.schema.Metadata",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "caffe2.python.schema.attach_metadata_to_scalars",
   "numpy.float32",
   "numpy.int32",
   "numpy.int64",
   "numpy.isnan"
  ],
  "type": "function"
 },
 "caffe2.python.layers.feature_sparse_to_dense.FeatureSparseToDense.add_ops": {
  "lineno": 184,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.feature_sparse_to_dense.FeatureSparseToDense.get_accessed_features": {
  "lineno": 318,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.AccessedFeatures",
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "caffe2.python.layers.feature_sparse_to_dense.FeatureSparseToDense.get_metadata": {
  "lineno": 300,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.find_subclasses_recursively": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.functional": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.INFO",
   "logging.getLogger"
  ],
  "type": "module"
 },
 "caffe2.python.layers.functional.Functional": {
  "lineno": 21,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.ModelLayer"
  ],
  "type": "class"
 },
 "caffe2.python.layers.functional.Functional.__init__": {
  "lineno": 23,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.TensorProto.DOUBLE",
   "caffe2.proto.caffe2_pb2.TensorProto.FLOAT",
   "caffe2.proto.caffe2_pb2.TensorProto.FLOAT16",
   "caffe2.proto.caffe2_pb2.TensorProto.INT32",
   "caffe2.proto.caffe2_pb2.TensorProto.INT64",
   "caffe2.python.core.Net",
   "caffe2.python.schema.Field",
   "caffe2.python.schema.InitEmptyRecord",
   "caffe2.python.schema.NewRecord",
   "caffe2.python.schema.RawTuple",
   "caffe2.python.schema.Struct",
   "caffe2.python.schema.as_record",
   "caffe2.python.scope.NameScope",
   "caffe2.python.workspace.InferShapesAndTypes",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "numpy.int64",
   "numpy.void",
   "six.integer_types"
  ],
  "type": "function"
 },
 "caffe2.python.layers.functional.Functional.add_ops": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.gather_record": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.layers.gather_record.GatherRecord": {
  "lineno": 12,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.ModelLayer"
  ],
  "type": "class"
 },
 "caffe2.python.layers.gather_record.GatherRecord.__init__": {
  "lineno": 32,
  "symbols_in_volume": [
   "caffe2.python.schema.NewRecord"
  ],
  "type": "function"
 },
 "caffe2.python.layers.gather_record.GatherRecord._dispatch": {
  "lineno": 78,
  "symbols_in_volume": [
   "caffe2.python.schema.List",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct"
  ],
  "type": "function"
 },
 "caffe2.python.layers.gather_record.GatherRecord._gather_list": {
  "lineno": 54,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.FLOAT",
   "caffe2.python.core.DataType.INT32"
  ],
  "type": "function"
 },
 "caffe2.python.layers.gather_record.GatherRecord._gather_scalar": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.gather_record.GatherRecord._gather_struct": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.gather_record.GatherRecord.add_ops": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.homotopy_weight": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "caffe2.python.layers.homotopy_weight.HomotopyWeight": {
  "lineno": 26,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.ModelLayer"
  ],
  "type": "class"
 },
 "caffe2.python.layers.homotopy_weight.HomotopyWeight.__init__": {
  "lineno": 27,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.layers.homotopy_weight.HomotopyWeight.add_ops": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.homotopy_weight.HomotopyWeight.create_atomic_iter": {
  "lineno": 77,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.INT64"
  ],
  "type": "function"
 },
 "caffe2.python.layers.homotopy_weight.HomotopyWeight.solve_inv_lr_params": {
  "lineno": 62,
  "symbols_in_volume": [
   "numpy.log",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "caffe2.python.layers.homotopy_weight.HomotopyWeight.update_weight": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.import_recursive": {
  "lineno": 12,
  "symbols_in_volume": [
   "importlib.import_module",
   "pkgutil.iter_modules"
  ],
  "type": "function"
 },
 "caffe2.python.layers.label_smooth": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.layers.label_smooth.LabelSmooth": {
  "lineno": 28,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.ModelLayer"
  ],
  "type": "class"
 },
 "caffe2.python.layers.label_smooth.LabelSmooth.__init__": {
  "lineno": 29,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "numpy.array",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.layers.label_smooth.LabelSmooth.add_ops": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.label_smooth.LabelSmooth.add_ops_for_binary_prob_label": {
  "lineno": 67,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.FLOAT",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.layers.label_smooth.LabelSmooth.add_ops_for_categorical_label": {
  "lineno": 81,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.INT64",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.layers.label_smooth.LabelSmooth.set_dim": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "caffe2.python.layers.label_smooth.LabelSmooth.set_smooth_matrix": {
  "lineno": 52,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.float32",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.layers.last_n_window_collector": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.layers.last_n_window_collector.LastNWindowCollector": {
  "lineno": 12,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.ModelLayer"
  ],
  "type": "class"
 },
 "caffe2.python.layers.last_n_window_collector.LastNWindowCollector.__init__": {
  "lineno": 20,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.INT32",
   "caffe2.python.core.DataType.INT64",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "caffe2.python.schema.from_blob_list"
  ],
  "type": "function"
 },
 "caffe2.python.layers.last_n_window_collector.LastNWindowCollector.add_ops": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.layer_normalization": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.layers.layer_normalization.LayerNormalization": {
  "lineno": 12,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.ModelLayer"
  ],
  "type": "class"
 },
 "caffe2.python.layers.layer_normalization.LayerNormalization.__init__": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.layers.layer_normalization.LayerNormalization.add_ops": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.layer_normalization.LayerNormalization.add_ops_with_layer_norm_op": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.layer_normalization.LayerNormalization.add_ops_without_layer_norm_op": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.layers": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.schema.List",
   "caffe2.python.schema.ListWithEvicted",
   "caffe2.python.schema.Map",
   "caffe2.python.schema.MapWithEvicted",
   "collections.namedtuple",
   "logging.INFO",
   "logging.getLogger",
   "numpy.float32",
   "numpy.int64"
  ],
  "type": "module"
 },
 "caffe2.python.layers.layers.InstantiationContext": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.layers.layers.LayerParameter": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.layers.layers.LayerParameter.__init__": {
  "lineno": 161,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference"
  ],
  "type": "function"
 },
 "caffe2.python.layers.layers.LayerParameter.__str__": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.layers.LayerParameter._infer_shape_from_initializer": {
  "lineno": 206,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.python.workspace.WorkspaceGuard"
  ],
  "type": "function"
 },
 "caffe2.python.layers.layers.LayerParameter.initializer": {
  "lineno": 185,
  "symbols_in_volume": [
   "caffe2.python.core.IsOperator"
  ],
  "type": "function"
 },
 "caffe2.python.layers.layers.LayerParameter.shape": {
  "lineno": 198,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.layers.ModelLayer": {
  "lineno": 251,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.layers.layers.ModelLayer.__init__": {
  "lineno": 252,
  "symbols_in_volume": [
   "caffe2.python.layers.tags.TagContext.current"
  ],
  "type": "function"
 },
 "caffe2.python.layers.layers.ModelLayer._check_output_schema": {
  "lineno": 316,
  "symbols_in_volume": [
   "caffe2.python.schema.is_schema_subset"
  ],
  "type": "function"
 },
 "caffe2.python.layers.layers.ModelLayer.add_eval_ops": {
  "lineno": 459,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.layers.ModelLayer.add_init_params": {
  "lineno": 369,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.OperatorDef",
   "caffe2.python.scope.CurrentDeviceScope",
   "caffe2.python.utils.OpAlmostEqual"
  ],
  "type": "function"
 },
 "caffe2.python.layers.layers.ModelLayer.add_operators": {
  "lineno": 424,
  "symbols_in_volume": [
   "caffe2.python.scope.NameScope"
  ],
  "type": "function"
 },
 "caffe2.python.layers.layers.ModelLayer.add_ops": {
  "lineno": 455,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.layers.ModelLayer.add_ops_to_accumulate_pred": {
  "lineno": 469,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.layers.ModelLayer.add_param_copy_operators": {
  "lineno": 476,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.layers.ModelLayer.add_train_ops": {
  "lineno": 464,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.layers.ModelLayer.create_param": {
  "lineno": 401,
  "symbols_in_volume": [
   "caffe2.python.scope.NameScope"
  ],
  "type": "function"
 },
 "caffe2.python.layers.layers.ModelLayer.export_output_for_metrics": {
  "lineno": 481,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.layers.ModelLayer.export_params_for_metrics": {
  "lineno": 488,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.layers.ModelLayer.get_accessed_features": {
  "lineno": 362,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.layers.ModelLayer.get_fp16_compatible_parameters": {
  "lineno": 355,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.layers.ModelLayer.get_memory_usage": {
  "lineno": 359,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.layers.ModelLayer.get_next_blob_reference": {
  "lineno": 420,
  "symbols_in_volume": [
   "caffe2.python.scope.NameScope"
  ],
  "type": "function"
 },
 "caffe2.python.layers.layers.ModelLayer.get_parameters": {
  "lineno": 352,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.layers.ModelLayer.get_type": {
  "lineno": 313,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.layers.ModelLayer.input_record": {
  "lineno": 326,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.layers.ModelLayer.output_schema": {
  "lineno": 347,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.layers.ModelLayer.predict_input_record": {
  "lineno": 322,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.layers.ModelLayer.predict_output_schema": {
  "lineno": 335,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.layers.almost_equal_schemas": {
  "lineno": 24,
  "symbols_in_volume": [
   "caffe2.python.schema.equal_schemas"
  ],
  "type": "function"
 },
 "caffe2.python.layers.layers.create_layer": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.layers.get_avg_length": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.layers.get_categorical_limit": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.layers.get_key": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.layers.get_layer_class": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.layers.is_request_only_scalar": {
  "lineno": 234,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.layers.layer_exists": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.layers.register_layer": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.layers.set_request_only": {
  "lineno": 87,
  "symbols_in_volume": [
   "caffe2.python.schema.FeatureSpec",
   "caffe2.python.schema.Metadata",
   "numpy.integer",
   "numpy.issubdtype"
  ],
  "type": "function"
 },
 "caffe2.python.layers.margin_rank_loss": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.layers.margin_rank_loss.MarginRankLoss": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.ModelLayer"
  ],
  "type": "class"
 },
 "caffe2.python.layers.margin_rank_loss.MarginRankLoss.__init__": {
  "lineno": 20,
  "symbols_in_volume": [
   "caffe2.python.layers.tags.Tags.EXCLUDE_FROM_PREDICTION",
   "caffe2.python.schema.List",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "caffe2.python.schema.is_schema_subset",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.layers.margin_rank_loss.MarginRankLoss.add_ops": {
  "lineno": 38,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.INT32"
  ],
  "type": "function"
 },
 "caffe2.python.layers.merge_id_lists": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.layers.merge_id_lists.MergeIdLists": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.ModelLayer"
  ],
  "type": "class"
 },
 "caffe2.python.layers.merge_id_lists.MergeIdLists.__init__": {
  "lineno": 27,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.IdList",
   "caffe2.python.layers.layers.get_categorical_limit",
   "caffe2.python.schema.List",
   "caffe2.python.schema.Metadata",
   "caffe2.python.schema.NewRecord",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.equal_schemas",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.layers.merge_id_lists.MergeIdLists.add_ops": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.pairwise_similarity": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.layers.pairwise_similarity.PairwiseSimilarity": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.ModelLayer"
  ],
  "type": "class"
 },
 "caffe2.python.layers.pairwise_similarity.PairwiseSimilarity.__init__": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct"
  ],
  "type": "function"
 },
 "caffe2.python.layers.pairwise_similarity.PairwiseSimilarity.add_ops": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.position_weighted": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "caffe2.python.layers.position_weighted.PositionWeighted": {
  "lineno": 22,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.ModelLayer"
  ],
  "type": "class"
 },
 "caffe2.python.layers.position_weighted.PositionWeighted.__init__": {
  "lineno": 23,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.get_categorical_limit",
   "caffe2.python.layers.tags.Tags.HANDLE_AS_SPARSE_LAYER",
   "caffe2.python.schema.List",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.layers.position_weighted.PositionWeighted.add_ops": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.position_weighted.PositionWeighted.get_memory_usage": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.random_fourier_features": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.layers.random_fourier_features.RandomFourierFeatures": {
  "lineno": 12,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.ModelLayer"
  ],
  "type": "class"
 },
 "caffe2.python.layers.random_fourier_features.RandomFourierFeatures.__init__": {
  "lineno": 30,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "numpy.float32",
   "numpy.pi"
  ],
  "type": "function"
 },
 "caffe2.python.layers.random_fourier_features.RandomFourierFeatures.add_ops": {
  "lineno": 78,
  "symbols_in_volume": [
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "caffe2.python.layers.reservoir_sampling": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.layers.reservoir_sampling.ReservoirSampling": {
  "lineno": 12,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.ModelLayer"
  ],
  "type": "class"
 },
 "caffe2.python.layers.reservoir_sampling.ReservoirSampling.__init__": {
  "lineno": 20,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.INT32",
   "caffe2.python.core.DataType.INT64",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "caffe2.python.schema.from_blob_list"
  ],
  "type": "function"
 },
 "caffe2.python.layers.reservoir_sampling.ReservoirSampling.add_ops": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.sampling_train": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.layers.sampling_train.SamplingTrain": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.ModelLayer"
  ],
  "type": "class"
 },
 "caffe2.python.layers.sampling_train.SamplingTrain.__init__": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.get_layer_class",
   "caffe2.python.layers.sampling_trainable_mixin.SamplingTrainableMixin",
   "caffe2.python.schema.Scalar"
  ],
  "type": "function"
 },
 "caffe2.python.layers.sampling_train.SamplingTrain.add_ops": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.sampling_train.SamplingTrain.add_train_ops": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.sampling_trainable_mixin": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.layers.sampling_trainable_mixin.SamplingTrainableMixin": {
  "lineno": 12,
  "symbols_in_volume": [
   "abc.ABCMeta",
   "six.with_metaclass"
  ],
  "type": "class"
 },
 "caffe2.python.layers.sampling_trainable_mixin.SamplingTrainableMixin.__init__": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.sampling_trainable_mixin.SamplingTrainableMixin._add_ops": {
  "lineno": 43,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "caffe2.python.layers.sampling_trainable_mixin.SamplingTrainableMixin.add_ops": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.sampling_trainable_mixin.SamplingTrainableMixin.add_train_ops": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.sampling_trainable_mixin.SamplingTrainableMixin.param_blobs": {
  "lineno": 19,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "caffe2.python.layers.sampling_trainable_mixin.SamplingTrainableMixin.train_param_blobs": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.select_record_by_context": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "caffe2.python.layers.select_record_by_context.SelectRecordByContext": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.ModelLayer"
  ],
  "type": "class"
 },
 "caffe2.python.layers.select_record_by_context.SelectRecordByContext.__init__": {
  "lineno": 25,
  "symbols_in_volume": [
   "caffe2.python.schema.NewRecord",
   "caffe2.python.schema.Struct",
   "caffe2.python.schema.equal_schemas"
  ],
  "type": "function"
 },
 "caffe2.python.layers.select_record_by_context.SelectRecordByContext._set_output_blobs": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.select_record_by_context.SelectRecordByContext.add_eval_ops": {
  "lineno": 70,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.InstantiationContext.EVAL"
  ],
  "type": "function"
 },
 "caffe2.python.layers.select_record_by_context.SelectRecordByContext.add_ops": {
  "lineno": 67,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.InstantiationContext.PREDICTION"
  ],
  "type": "function"
 },
 "caffe2.python.layers.select_record_by_context.SelectRecordByContext.add_ops_to_accumulate_pred": {
  "lineno": 76,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.InstantiationContext.ACCUMULATE_PRED"
  ],
  "type": "function"
 },
 "caffe2.python.layers.select_record_by_context.SelectRecordByContext.add_train_ops": {
  "lineno": 73,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.InstantiationContext.TRAINING"
  ],
  "type": "function"
 },
 "caffe2.python.layers.semi_random_features": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.layers.semi_random_features.SemiRandomFeatures": {
  "lineno": 11,
  "symbols_in_volume": [
   "caffe2.python.layers.arc_cosine_feature_map.ArcCosineFeatureMap"
  ],
  "type": "class"
 },
 "caffe2.python.layers.semi_random_features.SemiRandomFeatures.__init__": {
  "lineno": 54,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "caffe2.python.schema.is_schema_subset",
   "numpy.float32",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "caffe2.python.layers.semi_random_features.SemiRandomFeatures.add_ops": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.sparse_dropout_with_replacement": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.layers.sparse_dropout_with_replacement.SparseDropoutWithReplacement": {
  "lineno": 33,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.ModelLayer"
  ],
  "type": "class"
 },
 "caffe2.python.layers.sparse_dropout_with_replacement.SparseDropoutWithReplacement.__init__": {
  "lineno": 34,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.IdList",
   "caffe2.python.schema.NewRecord",
   "caffe2.python.schema.equal_schemas"
  ],
  "type": "function"
 },
 "caffe2.python.layers.sparse_dropout_with_replacement.SparseDropoutWithReplacement._add_ops": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.sparse_dropout_with_replacement.SparseDropoutWithReplacement.add_eval_ops": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.sparse_dropout_with_replacement.SparseDropoutWithReplacement.add_ops": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.sparse_dropout_with_replacement.SparseDropoutWithReplacement.add_train_ops": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.sparse_feature_hash": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.layers.sparse_feature_hash.SparseFeatureHash": {
  "lineno": 21,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.ModelLayer"
  ],
  "type": "class"
 },
 "caffe2.python.layers.sparse_feature_hash.SparseFeatureHash.__init__": {
  "lineno": 23,
  "symbols_in_volume": [
   "caffe2.python.core.NameScope",
   "caffe2.python.layers.layers.IdList",
   "caffe2.python.layers.layers.IdScoreList",
   "caffe2.python.layers.tags.Tags.CPU_ONLY",
   "caffe2.python.schema.Metadata",
   "caffe2.python.schema.NewRecord",
   "caffe2.python.schema.equal_schemas",
   "numpy.array"
  ],
  "type": "function"
 },
 "caffe2.python.layers.sparse_feature_hash.SparseFeatureHash.add_ops": {
  "lineno": 83,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.IdList",
   "caffe2.python.layers.layers.IdScoreList",
   "caffe2.python.schema.equal_schemas"
  ],
  "type": "function"
 },
 "caffe2.python.layers.sparse_feature_hash.SparseFeatureHash.extract_hash_size": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.sparse_lookup": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "caffe2.python.layers.sparse_lookup.SparseLookup": {
  "lineno": 113,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.ModelLayer"
  ],
  "type": "class"
 },
 "caffe2.python.layers.sparse_lookup.SparseLookup.__init__": {
  "lineno": 131,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.IdListWithEvicted",
   "caffe2.python.layers.layers.IdScoreListWithEvicted",
   "caffe2.python.layers.layers.LayerPsParam",
   "caffe2.python.layers.layers.get_categorical_limit",
   "caffe2.python.layers.layers.get_key",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.equal_schemas",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.layers.sparse_lookup.SparseLookup._add_ops": {
  "lineno": 519,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.sparse_lookup.SparseLookup._add_ops_id_list": {
  "lineno": 390,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.sparse_lookup.SparseLookup._add_ops_id_score_list": {
  "lineno": 463,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.sparse_lookup.SparseLookup._gather_wrapper": {
  "lineno": 306,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.sparse_lookup.SparseLookup._get_default_init_op": {
  "lineno": 290,
  "symbols_in_volume": [
   "math.sqrt"
  ],
  "type": "function"
 },
 "caffe2.python.layers.sparse_lookup.SparseLookup._sparse_lengths_weighted_reducer": {
  "lineno": 337,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.sparse_lookup.SparseLookup.add_ops": {
  "lineno": 533,
  "symbols_in_volume": [
   "caffe2.python.helpers.arg_scope.get_current_scope"
  ],
  "type": "function"
 },
 "caffe2.python.layers.sparse_lookup.SparseLookup.add_train_ops": {
  "lineno": 530,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.sparse_lookup.SparseLookup.get_8bits_compatible_parameters": {
  "lineno": 276,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "function"
 },
 "caffe2.python.layers.sparse_lookup.SparseLookup.get_fp16_compatible_parameters": {
  "lineno": 266,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.sparse_lookup.SparseLookup.get_memory_usage": {
  "lineno": 263,
  "symbols_in_volume": [
   "functools.reduce",
   "operator.mul"
  ],
  "type": "function"
 },
 "caffe2.python.layers.sparse_lookup.SparseLookup.support_8bit": {
  "lineno": 269,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.sparse_lookup._is_id_list": {
  "lineno": 103,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.IdList",
   "caffe2.python.layers.layers.almost_equal_schemas"
  ],
  "type": "function"
 },
 "caffe2.python.layers.sparse_lookup._is_id_score_list": {
  "lineno": 107,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.IdScoreList",
   "caffe2.python.layers.layers.almost_equal_schemas"
  ],
  "type": "function"
 },
 "caffe2.python.layers.sparse_lookup.get_sparse_lookup_predictor_version": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.sparse_lookup.get_sparse_lookup_trainer_version": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.sparse_lookup.get_trainer_version_based_on_optim": {
  "lineno": 32,
  "symbols_in_volume": [
   "caffe2.python.optimizer.FP16_ENGINES",
   "caffe2.python.optimizer.Optimizer"
  ],
  "type": "function"
 },
 "caffe2.python.layers.split": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.layers.split.Split": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.ModelLayer"
  ],
  "type": "class"
 },
 "caffe2.python.layers.split.Split.__init__": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Tuple"
  ],
  "type": "function"
 },
 "caffe2.python.layers.split.Split.add_ops": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.tags": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.layers.tags.TagContext": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.context.define_context"
  ],
  "type": "class"
 },
 "caffe2.python.layers.tags.TagContext.__init__": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.tags.TagContext.add_tags": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.tags.TagContext.remove_tags": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.tags.Tags": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.layers.tags.Tags.__call__": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.tags.Tags.__call__.wrapper": {
  "lineno": 108,
  "symbols_in_volume": [
   "six.wraps"
  ],
  "type": "function"
 },
 "caffe2.python.layers.tags.Tags.__enter__": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.tags.Tags.__exit__": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.tags.Tags.__init__": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers.uniform_sampling": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.layers.uniform_sampling.UniformSampling": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.ModelLayer"
  ],
  "type": "class"
 },
 "caffe2.python.layers.uniform_sampling.UniformSampling.__init__": {
  "lineno": 21,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.FLOAT",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "numpy.float32",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.layers.uniform_sampling.UniformSampling.add_ops": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers_test": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "caffe2.python.layers_test.TestLayers": {
  "lineno": 38,
  "symbols_in_volume": [
   "caffe2.python.layer_test_util.LayersTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.layers_test.TestLayers._testLabelSmooth": {
  "lineno": 2222,
  "symbols_in_volume": [
   "caffe2.python.schema.FeedRecord",
   "caffe2.python.schema.Scalar",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.array",
   "numpy.float32",
   "numpy.random.randint",
   "numpy.random.random",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers._test_net": {
  "lineno": 198,
  "symbols_in_volume": [
   "caffe2.python.workspace.RunNetOnce"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testAdaptiveWeight": {
  "lineno": 2116,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.schema.FeedRecord",
   "caffe2.python.schema.RawTuple",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.array",
   "numpy.float32",
   "numpy.log",
   "numpy.random.random",
   "numpy.sum",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testAddLoss": {
  "lineno": 73,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "caffe2.python.schema.NamedTuple",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "numpy.float32",
   "numpy.float64"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testAddOutputSchema": {
  "lineno": 174,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "numpy.float64"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testArcCosineFeatureMap": {
  "lineno": 1747,
  "symbols_in_volume": [
   "caffe2.python.layer_test_util.OpSpec",
   "caffe2.python.schema.FeedRecord",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.normal"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testArcCosineFeatureMap._arc_cosine_hypothesis_test": {
  "lineno": 1758,
  "symbols_in_volume": [
   "caffe2.python.workspace.FetchBlob",
   "numpy.matmul",
   "numpy.multiply",
   "numpy.piecewise",
   "numpy.power",
   "numpy.testing.assert_allclose",
   "numpy.transpose"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testBPRLoss": {
  "lineno": 969,
  "symbols_in_volume": [
   "caffe2.python.schema.FeedRecord",
   "caffe2.python.schema.List",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "caffe2.python.workspace.FetchBlob",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testBatchHuberLoss": {
  "lineno": 995,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testBatchLRLoss": {
  "lineno": 934,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "numpy.float32",
   "numpy.float64"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testBatchLRLossWithUncertainty": {
  "lineno": 943,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "numpy.float32",
   "numpy.float64"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testBatchMSELoss": {
  "lineno": 987,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "numpy.float32",
   "numpy.float64"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testBatchNormalization": {
  "lineno": 1034,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.arrays",
   "caffe2.python.layer_test_util.OpSpec",
   "caffe2.python.schema.FeedRecord",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testBatchSigmoidCrossEntropyLoss": {
  "lineno": 1003,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testBatchSoftmaxLoss": {
  "lineno": 1011,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testBatchSoftmaxLossWeight": {
  "lineno": 1022,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "numpy.float32",
   "numpy.float64"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testBlobWeightedSum": {
  "lineno": 2261,
  "symbols_in_volume": [
   "caffe2.python.schema.FeedRecord",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Tuple",
   "caffe2.python.schema.equal_schemas",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.random",
   "numpy.random.seed",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testBlobWeightedSum.get_blob_weighted_sum": {
  "lineno": 2269,
  "symbols_in_volume": [
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.HasBlob",
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testConcat": {
  "lineno": 817,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testConstantWeight": {
  "lineno": 2165,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.schema.FeedRecord",
   "caffe2.python.schema.RawTuple",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.array",
   "numpy.float32",
   "numpy.random.random",
   "numpy.sum",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testConv": {
  "lineno": 2043,
  "symbols_in_volume": [
   "caffe2.python.layer_test_util.OpSpec",
   "caffe2.python.schema.FeedRecord",
   "caffe2.python.schema.FetchRecord",
   "caffe2.python.schema.Scalar",
   "numpy.float32",
   "numpy.random.random"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testDropout": {
  "lineno": 1577,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.arrays",
   "caffe2.python.layer_test_util.OpSpec",
   "caffe2.python.schema.FeedRecord",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testFCTransposed": {
  "lineno": 347,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testFCTransposedWithMaxFCSize": {
  "lineno": 368,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testFCWithBootstrap": {
  "lineno": 246,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "caffe2.python.layer_model_instantiator.generate_predict_net"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testFCWithoutBias": {
  "lineno": 212,
  "symbols_in_volume": [
   "caffe2.python.layer_test_util.OpSpec",
   "caffe2.python.schema.Scalar",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testFCwithAxis2": {
  "lineno": 326,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testFeatureSparseToDenseGetAccessedFeatures": {
  "lineno": 2324,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.AccessedFeatures",
   "caffe2.python.schema.FeatureSpec",
   "caffe2.python.schema.List",
   "caffe2.python.schema.Map",
   "caffe2.python.schema.Struct",
   "numpy.float32",
   "numpy.int32",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testFilterMetricSchema": {
  "lineno": 149,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testFunctionalLayer": {
  "lineno": 1410,
  "symbols_in_volume": [
   "caffe2.python.layer_model_instantiator.generate_predict_net",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testFunctionalLayer.normalize": {
  "lineno": 1411,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testFunctionalLayerHelper": {
  "lineno": 1438,
  "symbols_in_volume": [
   "caffe2.python.layer_model_instantiator.generate_predict_net",
   "caffe2.python.schema.Tuple",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testFunctionalLayerHelperAutoInference": {
  "lineno": 1462,
  "symbols_in_volume": [
   "caffe2.python.layer_model_instantiator.generate_predict_net",
   "caffe2.python.schema.Tuple",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testFunctionalLayerHelperAutoInferenceScalar": {
  "lineno": 1493,
  "symbols_in_volume": [
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testFunctionalLayerInputCoercion": {
  "lineno": 1499,
  "symbols_in_volume": [
   "caffe2.python.workspace.FetchBlob",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testFunctionalLayerSameOperatorOutputNames": {
  "lineno": 1521,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testFunctionalLayerWithOutputDtypes": {
  "lineno": 1526,
  "symbols_in_volume": [
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testFunctionalLayerWithOutputNames": {
  "lineno": 1507,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testGatherRecord": {
  "lineno": 1221,
  "symbols_in_volume": [
   "caffe2.python.schema.FeedRecord",
   "caffe2.python.schema.List",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "caffe2.python.schema.equal_schemas",
   "caffe2.python.workspace.FetchBlob",
   "numpy.array",
   "numpy.concatenate",
   "numpy.float32",
   "numpy.int32",
   "numpy.int64",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testHalfToFloatTypeInference": {
  "lineno": 1482,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "numpy.float16",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testHomotopyWeight": {
  "lineno": 2181,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.schema.FeedRecord",
   "caffe2.python.schema.RawTuple",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNet",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.array",
   "numpy.float32",
   "numpy.random.random",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testLabelSmoothForBinaryProbLabel": {
  "lineno": 2254,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.integers"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testLabelSmoothForCategoricalLabel": {
  "lineno": 2246,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.integers"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testLastNWindowCollector": {
  "lineno": 1136,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.arrays",
   "caffe2.python.schema.FeedRecord",
   "caffe2.python.schema.FetchRecord",
   "caffe2.python.schema.Scalar",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testLayerNormalization": {
  "lineno": 1115,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.arrays",
   "caffe2.python.schema.FeedRecord",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testMapToRange": {
  "lineno": 1300,
  "symbols_in_volume": [
   "caffe2.python.schema.FeedRecord",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.array",
   "numpy.int32",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testMarginRankLoss": {
  "lineno": 953,
  "symbols_in_volume": [
   "caffe2.python.schema.FeedRecord",
   "caffe2.python.schema.List",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "numpy.array",
   "numpy.float32",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testMergeIdListsLayer": {
  "lineno": 1646,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.IdList",
   "caffe2.python.schema.FeedRecord",
   "caffe2.python.schema.List",
   "caffe2.python.schema.Metadata",
   "caffe2.python.schema.NewRecord",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Tuple",
   "caffe2.python.schema.equal_schemas",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.int32",
   "numpy.int64",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testPairwiseSimilarityIncorrectInput": {
  "lineno": 799,
  "symbols_in_volume": [
   "caffe2.python.schema.List",
   "caffe2.python.schema.NewRecord",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testPairwiseSimilarityWithAllEmbeddings": {
  "lineno": 710,
  "symbols_in_volume": [
   "caffe2.python.layer_test_util.OpSpec",
   "caffe2.python.schema.NewRecord",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testPairwiseSimilarityWithXandYEmbeddings": {
  "lineno": 733,
  "symbols_in_volume": [
   "caffe2.python.layer_test_util.OpSpec",
   "caffe2.python.schema.NewRecord",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testPairwiseSimilarityWithXandYEmbeddingsAndGather": {
  "lineno": 758,
  "symbols_in_volume": [
   "caffe2.python.layer_test_util.OpSpec",
   "caffe2.python.schema.NewRecord",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "numpy.float32",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testPropagateRequestOnly": {
  "lineno": 1536,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.is_request_only_scalar",
   "caffe2.python.layers.layers.set_request_only",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testRandomFourierFeatures": {
  "lineno": 1672,
  "symbols_in_volume": [
   "caffe2.python.layer_test_util.OpSpec",
   "caffe2.python.schema.FeedRecord",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "caffe2.python.workspace.FetchBlob",
   "hypothesis.given",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.random",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testRandomFourierFeatures._rff_hypothesis_test": {
  "lineno": 1680,
  "symbols_in_volume": [
   "caffe2.python.workspace.FetchBlob",
   "numpy.cos",
   "numpy.dot",
   "numpy.testing.assert_allclose",
   "numpy.transpose"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testReservoirSamplingWithID": {
  "lineno": 1151,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.arrays",
   "caffe2.python.layer_model_instantiator.generate_training_nets_forward_only",
   "caffe2.python.schema.FeedRecord",
   "caffe2.python.schema.FetchRecord",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.DeserializeBlob",
   "caffe2.python.workspace.RunNet",
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.python.workspace.SerializeBlob",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.array",
   "numpy.int64",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testSamplingTrain": {
  "lineno": 841,
  "symbols_in_volume": [
   "caffe2.python.layer_test_util.OpSpec",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "numpy.float32",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testSelectRecordByContext": {
  "lineno": 1368,
  "symbols_in_volume": [
   "caffe2.python.layer_model_instantiator.generate_eval_net",
   "caffe2.python.layer_model_instantiator.generate_predict_net",
   "caffe2.python.layer_model_instantiator.generate_training_nets_forward_only",
   "caffe2.python.layers.layers.InstantiationContext.EVAL",
   "caffe2.python.layers.layers.InstantiationContext.PREDICTION",
   "caffe2.python.layers.layers.InstantiationContext.TRAINING",
   "caffe2.python.layers.tags.Tags",
   "caffe2.python.layers.tags.Tags.EXCLUDE_FROM_PREDICTION",
   "caffe2.python.schema.FeedRecord",
   "caffe2.python.schema.FetchRecord",
   "caffe2.python.schema.Struct",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.array",
   "numpy.float32",
   "numpy.log",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testSemiRandomFeatures": {
  "lineno": 1864,
  "symbols_in_volume": [
   "caffe2.python.layer_test_util.OpSpec",
   "caffe2.python.schema.FeedRecord",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.normal"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testSemiRandomFeatures._semi_random_hypothesis_test": {
  "lineno": 1876,
  "symbols_in_volume": [
   "caffe2.python.workspace.FetchBlob",
   "numpy.matmul",
   "numpy.multiply",
   "numpy.piecewise",
   "numpy.power",
   "numpy.testing.assert_allclose",
   "numpy.transpose"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testSetRequestOnly": {
  "lineno": 1556,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.set_request_only",
   "caffe2.python.schema.FeatureSpec",
   "caffe2.python.schema.Metadata",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.attach_metadata_to_scalars",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testSparseDropoutWithReplacement": {
  "lineno": 39,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.IdList",
   "caffe2.python.schema.List",
   "caffe2.python.schema.NewRecord",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.array",
   "numpy.int32",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testSparseFeatureHashIdList": {
  "lineno": 470,
  "symbols_in_volume": [
   "caffe2.python.schema.List",
   "caffe2.python.schema.Metadata",
   "caffe2.python.schema.NewRecord",
   "caffe2.python.schema.Scalar",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testSparseFeatureHashIdScoreList": {
  "lineno": 504,
  "symbols_in_volume": [
   "caffe2.python.schema.Map",
   "caffe2.python.schema.Metadata",
   "caffe2.python.schema.NewRecord",
   "caffe2.python.schema.Scalar",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testSparseLookupIncorrectPositionWeightedOnIdList": {
  "lineno": 527,
  "symbols_in_volume": [
   "caffe2.python.schema.List",
   "caffe2.python.schema.Metadata",
   "caffe2.python.schema.NewRecord",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testSparseLookupIncorrectRecencyWeightedOnIdList": {
  "lineno": 644,
  "symbols_in_volume": [
   "caffe2.python.schema.List",
   "caffe2.python.schema.Metadata",
   "caffe2.python.schema.NewRecord",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testSparseLookupPositionWeightedOnIdList": {
  "lineno": 545,
  "symbols_in_volume": [
   "caffe2.python.layer_test_util.OpSpec",
   "caffe2.python.layers.layers.get_key",
   "caffe2.python.schema.List",
   "caffe2.python.schema.Map",
   "caffe2.python.schema.Metadata",
   "caffe2.python.schema.NewRecord",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "numpy.float32",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testSparseLookupPositionWeightedOnIdScoreList": {
  "lineno": 596,
  "symbols_in_volume": [
   "caffe2.python.layer_test_util.OpSpec",
   "caffe2.python.schema.Map",
   "caffe2.python.schema.Metadata",
   "caffe2.python.schema.NewRecord",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "numpy.float32",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testSparseLookupRecencyWeightedOnIdScoreList": {
  "lineno": 662,
  "symbols_in_volume": [
   "caffe2.python.layer_test_util.OpSpec",
   "caffe2.python.schema.Map",
   "caffe2.python.schema.Metadata",
   "caffe2.python.schema.NewRecord",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "numpy.float32",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testSparseLookupSumPooling": {
  "lineno": 430,
  "symbols_in_volume": [
   "caffe2.python.layer_test_util.OpSpec",
   "caffe2.python.schema.List",
   "caffe2.python.schema.Metadata",
   "caffe2.python.schema.NewRecord",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "numpy.float32",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testSparseLookupSumPoolingWithEviction": {
  "lineno": 390,
  "symbols_in_volume": [
   "caffe2.python.schema.ListWithEvicted",
   "caffe2.python.schema.Metadata",
   "caffe2.python.schema.NewRecord",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testSparseLookupWithAttentionWeightOnIdScoreList": {
  "lineno": 2443,
  "symbols_in_volume": [
   "caffe2.python.layer_test_util.OpSpec",
   "caffe2.python.schema.Map",
   "caffe2.python.schema.Metadata",
   "caffe2.python.schema.NewRecord",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "numpy.float32",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testUniformSampling": {
  "lineno": 1193,
  "symbols_in_volume": [
   "caffe2.python.schema.FeedRecord",
   "caffe2.python.schema.Scalar",
   "caffe2.python.workspace.FetchBlob",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testUniformSamplingWithIncorrectSampleSize": {
  "lineno": 1214,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.test_get_key": {
  "lineno": 2391,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.get_key",
   "caffe2.python.schema.List",
   "caffe2.python.schema.Map",
   "caffe2.python.schema.Metadata",
   "caffe2.python.schema.NewRecord",
   "caffe2.python.schema.Scalar",
   "numpy.float32",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.test_get_key._is_id_list": {
  "lineno": 2392,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.IdList",
   "caffe2.python.layers.layers.almost_equal_schemas"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.test_get_key._is_id_score_list": {
  "lineno": 2396,
  "symbols_in_volume": [
   "caffe2.python.layers.layers.IdScoreList",
   "caffe2.python.layers.layers.almost_equal_schemas"
  ],
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.test_get_key.old_get_sparse_key_logic": {
  "lineno": 2401,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.lazy": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.lazy.RegisterLazyImport": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.lazy.TriggerLazyImport": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.lazy_dyndep": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.lazy.RegisterLazyImport"
  ],
  "type": "module"
 },
 "caffe2.python.lazy_dyndep.GetImportedOpsLibraries": {
  "lineno": 66,
  "symbols_in_volume": [
   "caffe2.python.dyndep.GetImportedOpsLibraries"
  ],
  "type": "function"
 },
 "caffe2.python.lazy_dyndep.RegisterOpsLibrary": {
  "lineno": 12,
  "symbols_in_volume": [
   "os.path.exists"
  ],
  "type": "function"
 },
 "caffe2.python.lazy_dyndep.SetErrorHandler": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.lazy_dyndep._import_lazy": {
  "lineno": 71,
  "symbols_in_volume": [
   "caffe2.python.dyndep.InitOpLibrary"
  ],
  "type": "function"
 },
 "caffe2.python.lazy_dyndep_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.lazy_dyndep_test.TemporaryDirectory": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.lazy_dyndep_test.TemporaryDirectory.__enter__": {
  "lineno": 22,
  "symbols_in_volume": [
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "caffe2.python.lazy_dyndep_test.TemporaryDirectory.__exit__": {
  "lineno": 26,
  "symbols_in_volume": [
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "caffe2.python.lazy_dyndep_test.TestLazyDynDepAllCompare": {
  "lineno": 59,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.lazy_dyndep_test.TestLazyDynDepAllCompare.test_allcompare": {
  "lineno": 60,
  "symbols_in_volume": [
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "multiprocessing.Process",
   "numpy.float32",
   "numpy.random.randint",
   "numpy.random.ranf"
  ],
  "type": "function"
 },
 "caffe2.python.lazy_dyndep_test.TestLazyDynDepError": {
  "lineno": 84,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.lazy_dyndep_test.TestLazyDynDepError.test_errorhandler": {
  "lineno": 85,
  "symbols_in_volume": [
   "caffe2.python.core.RefreshRegisteredOperators",
   "caffe2.python.lazy_dyndep.RegisterOpsLibrary",
   "caffe2.python.lazy_dyndep.SetErrorHandler",
   "tempfile.NamedTemporaryFile"
  ],
  "type": "function"
 },
 "caffe2.python.lazy_dyndep_test.TestLazyDynDepError.test_errorhandler.handler": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.lazy_dyndep_test.TestLazyDynDepError.test_importaftererror": {
  "lineno": 98,
  "symbols_in_volume": [
   "caffe2.python.core.RefreshRegisteredOperators",
   "caffe2.python.lazy_dyndep.RegisterOpsLibrary",
   "caffe2.python.lazy_dyndep.SetErrorHandler",
   "tempfile.NamedTemporaryFile"
  ],
  "type": "function"
 },
 "caffe2.python.lazy_dyndep_test.TestLazyDynDepError.test_importaftererror.handler": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.lazy_dyndep_test.TestLazyDynDepError.test_importaftererror.handlernoop": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.lazy_dyndep_test.TestLazyDynDepError.test_workspacecreatenet": {
  "lineno": 117,
  "symbols_in_volume": [
   "caffe2.python.lazy_dyndep.RegisterOpsLibrary",
   "caffe2.python.lazy_dyndep.SetErrorHandler",
   "caffe2.python.workspace.CreateNet",
   "tempfile.NamedTemporaryFile"
  ],
  "type": "function"
 },
 "caffe2.python.lazy_dyndep_test.TestLazyDynDepError.test_workspacecreatenet.handler": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.lazy_dyndep_test.allcompare_process": {
  "lineno": 30,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.data_parallel_model._RunComparison",
   "caffe2.python.lazy_dyndep.RegisterOpsLibrary",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.RunOperatorOnce"
  ],
  "type": "function"
 },
 "caffe2.python.lengths_reducer_fused_8bit_rowwise_ops_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.lengths_reducer_fused_8bit_rowwise_ops_test.TestLengthsReducerOpsFused8BitRowwise": {
  "lineno": 34,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.lengths_reducer_fused_8bit_rowwise_ops_test.TestLengthsReducerOpsFused8BitRowwise.test_sparse_lengths_mean": {
  "lineno": 125,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.GlobalInit",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.clip",
   "numpy.float16",
   "numpy.float32",
   "numpy.int32",
   "numpy.ones",
   "numpy.random.rand",
   "numpy.random.randint",
   "numpy.random.seed",
   "numpy.testing.assert_array_almost_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.lengths_reducer_fused_8bit_rowwise_ops_test.TestLengthsReducerOpsFused8BitRowwise.test_sparse_lengths_sum": {
  "lineno": 35,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.GlobalInit",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.clip",
   "numpy.float16",
   "numpy.float32",
   "numpy.int32",
   "numpy.ones",
   "numpy.random.rand",
   "numpy.random.randint",
   "numpy.random.seed",
   "numpy.random.uniform",
   "numpy.testing.assert_array_almost_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.lengths_reducer_fused_8bit_rowwise_ops_test.compare_rowwise": {
  "lineno": 10,
  "symbols_in_volume": [
   "numpy.amax",
   "numpy.amin",
   "numpy.isclose"
  ],
  "type": "function"
 },
 "caffe2.python.lengths_reducer_rowwise_8bit_ops_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.lengths_reducer_rowwise_8bit_ops_test.FakeQuantization8BitsRowwise": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.max",
   "numpy.min",
   "numpy.round"
  ],
  "type": "function"
 },
 "caffe2.python.lengths_reducer_rowwise_8bit_ops_test.TestQuantize8bits": {
  "lineno": 23,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.lengths_reducer_rowwise_8bit_ops_test.TestQuantize8bits.test_SparseSegmentUint8": {
  "lineno": 64,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.INT32",
   "caffe2.python.core.DataType.INT64",
   "caffe2.python.core.Net",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.GlobalInit",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "caffe2.python.lengths_reducer_rowwise_8bit_ops_test.TestQuantize8bits.test_quantize_op": {
  "lineno": 25,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.asarray",
   "numpy.float32",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "caffe2.python.lengths_reducer_rowwise_8bit_ops_test.TestQuantize8bits.test_quantize_tensor_with_const_row_op": {
  "lineno": 44,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.asarray",
   "numpy.float32",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "caffe2.python.lstm_benchmark": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.workspace.GlobalInit",
   "caffe2.python.workspace.GpuDeviceType",
   "logging.DEBUG",
   "logging.basicConfig",
   "logging.getLogger"
  ],
  "type": "module"
 },
 "caffe2.python.lstm_benchmark.Benchmark": {
  "lineno": 233,
  "symbols_in_volume": [
   "caffe2.python.utils.debug"
  ],
  "type": "function"
 },
 "caffe2.python.lstm_benchmark.Caffe2LSTM": {
  "lineno": 163,
  "symbols_in_volume": [
   "caffe2.python.utils.GetGPUMemoryUsageStats",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.RunNet",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.array",
   "numpy.int32",
   "numpy.sum",
   "time.time"
  ],
  "type": "function"
 },
 "caffe2.python.lstm_benchmark.GetArgumentParser": {
  "lineno": 238,
  "symbols_in_volume": [
   "argparse.ArgumentParser"
  ],
  "type": "function"
 },
 "caffe2.python.lstm_benchmark.create_model": {
  "lineno": 67,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.recurrent.set_rnn_executor_config",
   "caffe2.python.rnn_cell.LSTM",
   "caffe2.python.rnn_cell.cudnn_LSTM",
   "caffe2.python.workspace.FeedBlob",
   "numpy.float32",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.lstm_benchmark.generate_data": {
  "lineno": 23,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand",
   "numpy.random.randint",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.memonger": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple",
   "logging.INFO",
   "logging.getLogger"
  ],
  "type": "module"
 },
 "caffe2.python.memonger.AssignmentAlgorithm": {
  "lineno": 819,
  "symbols_in_volume": [
   "enum.Enum"
  ],
  "type": "class"
 },
 "caffe2.python.memonger._add_single_target_ifneeded": {
  "lineno": 302,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "caffe2.python.memonger._add_single_target_ifneeded._next_available_idx": {
  "lineno": 309,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.memonger._build_tree": {
  "lineno": 368,
  "symbols_in_volume": [
   "networkx.DiGraph"
  ],
  "type": "function"
 },
 "caffe2.python.memonger._compute_tree_height": {
  "lineno": 386,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.memonger._compute_tree_height._get_height": {
  "lineno": 390,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.memonger._find_source_nodes": {
  "lineno": 282,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.memonger._find_target_nodes": {
  "lineno": 292,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.memonger._get_count": {
  "lineno": 563,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.memonger._get_longest_paths": {
  "lineno": 348,
  "symbols_in_volume": [
   "copy.deepcopy",
   "networkx.bellman_ford_predecessor_and_distance"
  ],
  "type": "function"
 },
 "caffe2.python.memonger._get_max_size": {
  "lineno": 522,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.memonger._get_path": {
  "lineno": 325,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.memonger._sort_tree_leaves": {
  "lineno": 402,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.memonger._sort_tree_leaves._get_height": {
  "lineno": 406,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.memonger._sort_tree_leaves._get_sorted_leaves": {
  "lineno": 409,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.memonger.apply_assignments": {
  "lineno": 784,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.memonger.apply_assignments.canonical_name": {
  "lineno": 785,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.memonger.apply_recurrent_blob_assignments": {
  "lineno": 802,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.Argument",
   "future.utils.viewitems"
  ],
  "type": "function"
 },
 "caffe2.python.memonger.blob_nbytes": {
  "lineno": 959,
  "symbols_in_volume": [
   "caffe2.python.workspace.FetchBlob"
  ],
  "type": "function"
 },
 "caffe2.python.memonger.collect_blob_sizes": {
  "lineno": 981,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.memonger.compute_assignments": {
  "lineno": 717,
  "symbols_in_volume": [
   "future.utils.viewitems"
  ],
  "type": "function"
 },
 "caffe2.python.memonger.compute_assignments_dp": {
  "lineno": 570,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "caffe2.python.memonger.compute_assignments_dp._find_best": {
  "lineno": 617,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "caffe2.python.memonger.compute_assignments_dp._get_compatible_prev": {
  "lineno": 599,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.memonger.compute_assignments_dp._get_compatible_prev.is_compatible_all": {
  "lineno": 605,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.memonger.compute_assignments_greedy": {
  "lineno": 537,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.memonger.compute_blob_assignments": {
  "lineno": 511,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.memonger.compute_interference_graph": {
  "lineno": 765,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.is_directed_acyclic_graph"
  ],
  "type": "function"
 },
 "caffe2.python.memonger.compute_ranges": {
  "lineno": 470,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "caffe2.python.memonger.compute_statistics": {
  "lineno": 968,
  "symbols_in_volume": [
   "future.utils.viewvalues"
  ],
  "type": "function"
 },
 "caffe2.python.memonger.estimate_memory_usage": {
  "lineno": 161,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.TensorProto.BOOL",
   "caffe2.proto.caffe2_pb2.TensorProto.DOUBLE",
   "caffe2.proto.caffe2_pb2.TensorProto.FLOAT",
   "caffe2.proto.caffe2_pb2.TensorProto.FLOAT16",
   "caffe2.proto.caffe2_pb2.TensorProto.INT16",
   "caffe2.proto.caffe2_pb2.TensorProto.INT32",
   "caffe2.proto.caffe2_pb2.TensorProto.INT64",
   "caffe2.proto.caffe2_pb2.TensorProto.INT8",
   "caffe2.proto.caffe2_pb2.TensorProto.UINT16",
   "caffe2.proto.caffe2_pb2.TensorProto.UINT8",
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "caffe2.python.memonger.estimate_memory_usage.num_bytes": {
  "lineno": 194,
  "symbols_in_volume": [
   "numpy.prod"
  ],
  "type": "function"
 },
 "caffe2.python.memonger.estimate_memory_usage.split_net": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.memonger.get_memory_usage": {
  "lineno": 530,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.memonger.get_updated_ranges": {
  "lineno": 690,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.memonger.get_updated_ranges._get_max_live": {
  "lineno": 696,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.memonger.get_updated_ranges._update_range": {
  "lineno": 700,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.memonger.is_compatible": {
  "lineno": 501,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.memonger.optimize_inference_fast": {
  "lineno": 824,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.python._import_c_extension.memonger_optimize_inference_net"
  ],
  "type": "function"
 },
 "caffe2.python.memonger.optimize_inference_for_dag": {
  "lineno": 109,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.python._import_c_extension.memonger_compute_blob_recycling_for_dag",
   "copy.deepcopy",
   "time.time"
  ],
  "type": "function"
 },
 "caffe2.python.memonger.optimize_inference_for_dag.is_activation_blob": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.memonger.optimize_interference": {
  "lineno": 834,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "caffe2.python.memonger.release_blobs_when_used": {
  "lineno": 229,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "caffe2.python.memonger.share_grad_blobs": {
  "lineno": 24,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.python._import_c_extension.memonger_compute_blob_recycling_for_dag",
   "copy.deepcopy",
   "time.time"
  ],
  "type": "function"
 },
 "caffe2.python.memonger.share_grad_blobs.is_grad_blob": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.memonger.share_grad_blobs.is_grad_op": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.memonger.topological_sort_traversal": {
  "lineno": 466,
  "symbols_in_volume": [
   "networkx.topological_sort"
  ],
  "type": "function"
 },
 "caffe2.python.memonger.topological_sort_traversal_longest_path": {
  "lineno": 425,
  "symbols_in_volume": [
   "future.utils.viewvalues",
   "networkx.__version__",
   "networkx.algorithms.dag.lexicographical_topological_sort",
   "networkx.descendants",
   "networkx.topological_sort"
  ],
  "type": "function"
 },
 "caffe2.python.memonger.verify_assignments": {
  "lineno": 759,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.memonger.verify_graph_equality": {
  "lineno": 904,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.memonger.verify_graph_equality.parent_list": {
  "lineno": 916,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.memonger.verify_inplace_blobs": {
  "lineno": 882,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.memonger.verify_inplace_blobs.get_inplaces": {
  "lineno": 888,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.memonger_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.memonger_test.MemongerTest": {
  "lineno": 35,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.memonger_test.MemongerTest.test_compute_assignments_dp": {
  "lineno": 607,
  "symbols_in_volume": [
   "caffe2.python.memonger.LiveRange",
   "caffe2.python.memonger.compute_assignments_dp",
   "caffe2.python.memonger.get_memory_usage"
  ],
  "type": "function"
 },
 "caffe2.python.memonger_test.MemongerTest.test_compute_assignments_dp1": {
  "lineno": 619,
  "symbols_in_volume": [
   "caffe2.python.memonger.LiveRange",
   "caffe2.python.memonger.compute_assignments_dp",
   "caffe2.python.memonger.get_memory_usage"
  ],
  "type": "function"
 },
 "caffe2.python.memonger_test.MemongerTest.test_compute_assignments_greedy": {
  "lineno": 590,
  "symbols_in_volume": [
   "caffe2.python.memonger.LiveRange",
   "caffe2.python.memonger.compute_assignments_greedy",
   "caffe2.python.memonger.get_memory_usage"
  ],
  "type": "function"
 },
 "caffe2.python.memonger_test.MemongerTest.test_compute_interference_graph_inplace_ops": {
  "lineno": 516,
  "symbols_in_volume": [
   "caffe2.python.memonger.compute_interference_graph",
   "caffe2.python.model_helper.ModelHelper"
  ],
  "type": "function"
 },
 "caffe2.python.memonger_test.MemongerTest.test_fast_memonger": {
  "lineno": 90,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.hypothesis_test_util.device_options",
   "caffe2.python.memonger.optimize_inference_fast",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.randint",
   "numpy.random.randn",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "caffe2.python.memonger_test.MemongerTest.test_fast_memonger_unique_outputs": {
  "lineno": 131,
  "symbols_in_volume": [
   "caffe2.python.brew.concat",
   "caffe2.python.brew.fc",
   "caffe2.python.brew.relu",
   "caffe2.python.brew.sum",
   "caffe2.python.memonger.optimize_inference_fast",
   "caffe2.python.model_helper.ModelHelper"
  ],
  "type": "function"
 },
 "caffe2.python.memonger_test.MemongerTest.test_forward_optim_tree_daggy": {
  "lineno": 332,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.brew.sum",
   "caffe2.python.core.NameScope",
   "caffe2.python.memonger.optimize_inference_for_dag",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.randint",
   "numpy.random.randn",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "caffe2.python.memonger_test.MemongerTest.test_forward_optim_tree_harder": {
  "lineno": 389,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.brew.sum",
   "caffe2.python.core.NameScope",
   "caffe2.python.memonger.optimize_inference_for_dag",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.randint",
   "numpy.random.randn",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "caffe2.python.memonger_test.MemongerTest.test_gradient_optim": {
  "lineno": 155,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.core.NameScope",
   "caffe2.python.memonger.share_grad_blobs",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "future.utils.viewvalues",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.randint",
   "numpy.random.randn",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "caffe2.python.memonger_test.MemongerTest.test_gradient_optim_tree": {
  "lineno": 274,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.core.NameScope",
   "caffe2.python.memonger.share_grad_blobs",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "future.utils.viewvalues",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.randint",
   "numpy.random.randn",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "caffe2.python.memonger_test.MemongerTest.test_memonger_mix_cpu_gpu": {
  "lineno": 226,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.proto.caffe2_pb2.CPU.intersection",
   "caffe2.python.brew.fc",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.memonger.share_grad_blobs",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.GpuDeviceType",
   "caffe2.python.workspace.has_gpu_support",
   "future.utils.viewvalues",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.memonger_test.MemongerTest.test_release_blobs_when_used": {
  "lineno": 734,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.brew.sum",
   "caffe2.python.memonger.release_blobs_when_used",
   "caffe2.python.model_helper.ModelHelper"
  ],
  "type": "function"
 },
 "caffe2.python.memonger_test.MemongerTest.test_rnn": {
  "lineno": 459,
  "symbols_in_volume": [
   "caffe2.python.memonger.share_grad_blobs",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.rnn_cell.LSTM",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.RunNetOnce",
   "future.utils.viewvalues",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.memonger_test.MemongerTest.test_simple_memonger": {
  "lineno": 36,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.hypothesis_test_util.device_options",
   "caffe2.python.memonger.AssignmentAlgorithm",
   "caffe2.python.memonger.collect_blob_sizes",
   "caffe2.python.memonger.compute_statistics",
   "caffe2.python.memonger.optimize_interference",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.randint",
   "numpy.random.randn",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "caffe2.python.memonger_test.MemongerTest.test_topological_sort_longest_path": {
  "lineno": 524,
  "symbols_in_volume": [
   "caffe2.python.brew.conv",
   "caffe2.python.memonger.compute_interference_graph",
   "caffe2.python.memonger.topological_sort_traversal",
   "caffe2.python.memonger.topological_sort_traversal_longest_path",
   "caffe2.python.model_helper.ModelHelper"
  ],
  "type": "function"
 },
 "caffe2.python.memonger_test.MemongerTest.test_topological_sort_longest_path_multi_target": {
  "lineno": 546,
  "symbols_in_volume": [
   "caffe2.python.brew.conv",
   "caffe2.python.memonger.compute_interference_graph",
   "caffe2.python.memonger.topological_sort_traversal",
   "caffe2.python.memonger.topological_sort_traversal_longest_path",
   "caffe2.python.model_helper.ModelHelper"
  ],
  "type": "function"
 },
 "caffe2.python.memonger_test.MemongerTest.test_topological_sort_longest_path_single_node": {
  "lineno": 573,
  "symbols_in_volume": [
   "caffe2.python.memonger.compute_interference_graph",
   "caffe2.python.memonger.topological_sort_traversal",
   "caffe2.python.memonger.topological_sort_traversal_longest_path",
   "caffe2.python.model_helper.ModelHelper"
  ],
  "type": "function"
 },
 "caffe2.python.memonger_test.MemongerTest.test_verify_graph_equality": {
  "lineno": 630,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.brew.sum",
   "caffe2.python.core.NameScope",
   "caffe2.python.memonger.verify_graph_equality",
   "caffe2.python.model_helper.ModelHelper",
   "hypothesis.given",
   "hypothesis.strategies.integers"
  ],
  "type": "function"
 },
 "caffe2.python.memonger_test.MemongerTest.test_verify_graph_equality_harder": {
  "lineno": 654,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.brew.sum",
   "caffe2.python.core.NameScope",
   "caffe2.python.memonger.verify_graph_equality",
   "caffe2.python.model_helper.ModelHelper",
   "hypothesis.given",
   "hypothesis.strategies.integers"
  ],
  "type": "function"
 },
 "caffe2.python.memonger_test.MemongerTest.test_verify_graph_inequality": {
  "lineno": 682,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.brew.sum",
   "caffe2.python.core.NameScope",
   "caffe2.python.memonger.verify_graph_equality",
   "caffe2.python.model_helper.ModelHelper",
   "hypothesis.given",
   "hypothesis.strategies.integers"
  ],
  "type": "function"
 },
 "caffe2.python.memonger_test.MemongerTest.test_verify_graph_inequality_harder": {
  "lineno": 706,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.brew.sum",
   "caffe2.python.core.NameScope",
   "caffe2.python.memonger.verify_graph_equality",
   "caffe2.python.model_helper.ModelHelper",
   "hypothesis.given",
   "hypothesis.strategies.integers"
  ],
  "type": "function"
 },
 "caffe2.python.memonger_test.count_blobs": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.memonger_test.has_blob": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.mint": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.mint.app": {
  "lineno": null,
  "symbols_in_volume": [
   "flask.Flask",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.join",
   "sys.argv"
  ],
  "type": "module"
 },
 "caffe2.python.mint.app.index": {
  "lineno": 122,
  "symbols_in_volume": [
   "flask.render_template",
   "glob.glob",
   "os.path.basename",
   "os.path.join"
  ],
  "type": "function"
 },
 "caffe2.python.mint.app.jsonify_nvd3": {
  "lineno": 23,
  "symbols_in_volume": [
   "flask.jsonify"
  ],
  "type": "function"
 },
 "caffe2.python.mint.app.main": {
  "lineno": 141,
  "symbols_in_volume": [
   "argparse.ArgumentParser"
  ],
  "type": "function"
 },
 "caffe2.python.mint.app.visualization": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.mint.app.visualize_file": {
  "lineno": 109,
  "symbols_in_volume": [
   "flask.jsonify",
   "os.path.join"
  ],
  "type": "function"
 },
 "caffe2.python.mint.app.visualize_print_log": {
  "lineno": 63,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.loadtxt",
   "numpy.newaxis",
   "nvd3.lineChart",
   "os.path.basename",
   "os.path.splitext"
  ],
  "type": "function"
 },
 "caffe2.python.mint.app.visualize_summary": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.loadtxt",
   "nvd3.lineChart",
   "os.path.basename",
   "os.path.splitext"
  ],
  "type": "function"
 },
 "caffe2.python.mkl": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.mkl.mkl_LRN_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.mkl.mkl_LRN_op_test.MKLLRNTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase",
   "caffe2.python.workspace.C.has_mkldnn",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.mkl.mkl_LRN_op_test.MKLLRNTest.test_mkl_LRN": {
  "lineno": 20,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.mkl_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.mkl.mkl_LRN_speed_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.mkl.mkl_LRN_speed_test.TestMKLBasic": {
  "lineno": 12,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase",
   "caffe2.python.workspace.C.has_mkldnn",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.mkl.mkl_LRN_speed_test.TestMKLBasic.testConvReluLRNSpeed": {
  "lineno": 40,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.MKLDNN",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.Net",
   "caffe2.python.workspace.BenchmarkNet",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNet",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.mkl.mkl_LRN_speed_test.TestMKLBasic.testLRNSpeed": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.MKLDNN",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.Net",
   "caffe2.python.workspace.BenchmarkNet",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNet",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.mkl.mkl_concat_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.mkl.mkl_concat_op_test.MKLConcatTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase",
   "caffe2.python.workspace.C.has_mkldnn",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.mkl.mkl_concat_op_test.MKLConcatTest.test_mkl_concat": {
  "lineno": 19,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.mkl_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.lists",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.mkl.mkl_conv_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.mkl.mkl_conv_op_test.MKLConvTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase",
   "caffe2.python.workspace.C.has_mkldnn",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.mkl.mkl_conv_op_test.MKLConvTest.test_mkl_convolution": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.mkl_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.mkl.mkl_copy_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.mkl.mkl_copy_op_test.MKCopyTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase",
   "caffe2.python.workspace.C.has_mkldnn",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.mkl.mkl_copy_op_test.MKCopyTest.test_mkl_copy": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.DeviceOption",
   "caffe2.proto.caffe2_pb2.MKLDNN",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.mkl_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.mkl.mkl_copy_op_test.MKCopyTest.test_mkl_zero_copy": {
  "lineno": 46,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.DeviceOption",
   "caffe2.proto.caffe2_pb2.MKLDNN",
   "caffe2.python.core.CreateOperator",
   "hypothesis.given",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.mkl.mkl_elementwise_add_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.mkl.mkl_elementwise_add_op_test.MKLElementwiseAddTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase",
   "caffe2.python.workspace.C.has_mkldnn",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.mkl.mkl_elementwise_add_op_test.MKLElementwiseAddTest.test_mkl_elementwise_add": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.mkl_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.mkl.mkl_elementwise_sum_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.mkl.mkl_elementwise_sum_op_test.MKLElementwiseSumTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase",
   "caffe2.python.workspace.C.has_mkldnn",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.mkl.mkl_elementwise_sum_op_test.MKLElementwiseSumTest.test_mkl_elementwise_sum": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.mkl_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.mkl.mkl_fc_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.mkl.mkl_fc_op_test.MKLFcTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase",
   "caffe2.python.workspace.C.has_mkldnn",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.mkl.mkl_fc_op_test.MKLFcTest.test_mkl_fc": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.mkl_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.mkl.mkl_fc_speed_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.mkl.mkl_fc_speed_test.TestMKLBasic": {
  "lineno": 12,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase",
   "caffe2.python.workspace.C.has_mkldnn",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.mkl.mkl_fc_speed_test.TestMKLBasic.testConvReluMaxPoolFcSpeed": {
  "lineno": 47,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.MKLDNN",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.Net",
   "caffe2.python.workspace.BenchmarkNet",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNet",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.mkl.mkl_fc_speed_test.TestMKLBasic.testFCSpeed": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.MKLDNN",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.Net",
   "caffe2.python.workspace.BenchmarkNet",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNet",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.mkl.mkl_fill_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.mkl.mkl_fill_op_test.MKLFillTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase",
   "caffe2.python.workspace.C.has_mkldnn",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.mkl.mkl_fill_op_test.MKLFillTest.test_mkl_fill": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.mkl_test_util.gcs_cpu_mkl",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from"
  ],
  "type": "function"
 },
 "caffe2.python.mkl.mkl_pool_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.mkl.mkl_pool_op_test.MKLPoolTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase",
   "caffe2.python.workspace.C.has_mkldnn",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.mkl.mkl_pool_op_test.MKLPoolTest.test_mkl_pooling": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.mkl_test_util.gcs",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.mkl.mkl_pool_speed_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.mkl.mkl_pool_speed_test.TestMKLBasic": {
  "lineno": 12,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase",
   "caffe2.python.workspace.C.has_mkldnn",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.mkl.mkl_pool_speed_test.TestMKLBasic.testAveragePoolingSpeed": {
  "lineno": 40,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.MKLDNN",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.Net",
   "caffe2.python.workspace.BenchmarkNet",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNet",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.mkl.mkl_pool_speed_test.TestMKLBasic.testConvReluMaxPoolSpeed": {
  "lineno": 66,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.MKLDNN",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.Net",
   "caffe2.python.workspace.BenchmarkNet",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNet",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.mkl.mkl_pool_speed_test.TestMKLBasic.testMaxPoolingSpeed": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.MKLDNN",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.Net",
   "caffe2.python.workspace.BenchmarkNet",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNet",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.mkl.mkl_relu_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.mkl.mkl_relu_op_test.MKLReluTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase",
   "caffe2.python.workspace.C.has_mkldnn",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.mkl.mkl_relu_op_test.MKLReluTest.test_mkl_relu": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.mkl_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.mkl.mkl_sbn_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.mkl.mkl_sbn_op_test.MKLSpatialBNTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase",
   "caffe2.python.workspace.C.has_mkldnn",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.mkl.mkl_sbn_op_test.MKLSpatialBNTest.test_spatialbn_test_mode": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.mkl_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.randn",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.mkl.mkl_sbn_op_test.MKLSpatialBNTest.test_spatialbn_train_mode": {
  "lineno": 47,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.mkl_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.randn",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.mkl.mkl_sbn_speed_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.mkl.mkl_sbn_speed_test.TestMKLBasic": {
  "lineno": 12,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase",
   "caffe2.python.workspace.C.has_mkldnn",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.mkl.mkl_sbn_speed_test.TestMKLBasic.testSpatialBNTestingSpeed": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.MKLDNN",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.Net",
   "caffe2.python.workspace.BenchmarkNet",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNet",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.randn",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.mkl.mkl_sbn_speed_test.TestMKLBasic.testSpatialBNTrainingSpeed": {
  "lineno": 56,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.MKLDNN",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.Net",
   "caffe2.python.workspace.BenchmarkNet",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNet",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.randn",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.mkl.mkl_sigmoid_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.mkl.mkl_sigmoid_op_test.MKLSigmoidTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase",
   "caffe2.python.workspace.C.has_mkldnn",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.mkl.mkl_sigmoid_op_test.MKLSigmoidTest.test_mkl_sigmoid": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.mkl_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.mkl.mkl_speed_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.mkl.mkl_speed_test.TestMKLBasic": {
  "lineno": 12,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase",
   "caffe2.python.workspace.C.has_mkldnn",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.mkl.mkl_speed_test.TestMKLBasic.testConvSpeed": {
  "lineno": 46,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.MKLDNN",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.Net",
   "caffe2.python.workspace.BenchmarkNet",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNet",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.mkl.mkl_speed_test.TestMKLBasic.testReLUSpeed": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.MKLDNN",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.Net",
   "caffe2.python.workspace.BenchmarkNet",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNet",
   "numpy.float32",
   "numpy.random.randn",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.mkl.mkl_squeeze_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.mkl.mkl_squeeze_op_test.MKLSqueezeTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase",
   "caffe2.python.workspace.C.has_mkldnn",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.mkl.mkl_squeeze_op_test.MKLSqueezeTest.test_mkl_squeeze": {
  "lineno": 19,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.mkl_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.lists",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.mkl.rewrite_graph": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.mkl.rewrite_graph.fix_BoxWithNMSLimit": {
  "lineno": 23,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU"
  ],
  "type": "function"
 },
 "caffe2.python.mkl.rewrite_graph.last_producer": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.mkl.rewrite_graph.rewrite_init_net_simple": {
  "lineno": 12,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.IDEEP"
  ],
  "type": "function"
 },
 "caffe2.python.mkl.rewrite_graph.rewrite_model_helper_simple": {
  "lineno": 211,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "caffe2.python.mkl.rewrite_graph.rewrite_run_net_simple": {
  "lineno": 38,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.IDEEP",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.DeviceOption"
  ],
  "type": "function"
 },
 "caffe2.python.mkl.rewrite_graph.rewrite_run_net_simple.mkl_tmp": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.mkl.rewrite_graph.rewrite_run_net_simple_xrayocr_lstm": {
  "lineno": 87,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.proto.caffe2_pb2.IDEEP",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.DeviceOption"
  ],
  "type": "function"
 },
 "caffe2.python.mkl.rewrite_graph.rewrite_run_net_simple_xrayocr_lstm.cpu_tmp": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.mkl.rewrite_graph.rewrite_run_net_simple_xrayocr_lstm.mkl_tmp": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.mkl.rewrite_graph_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.mkl.rewrite_graph_test.MKLRewriteTest": {
  "lineno": 183,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase",
   "caffe2.python.workspace.C.use_mkldnn",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.mkl.rewrite_graph_test.MKLRewriteTest.test_mkl_alexnet_rewrite": {
  "lineno": 238,
  "symbols_in_volume": [
   "caffe2.python.mkl.rewrite_graph.rewrite_model_helper_simple",
   "numpy.float32",
   "numpy.random.randn",
   "numpy.random.seed",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.mkl.rewrite_graph_test.MKLRewriteTest.test_mkl_alexnet_rewrite.run": {
  "lineno": 245,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.mkl.rewrite_graph_test.MKLRewriteTest.test_mkl_multi_output_rewrite": {
  "lineno": 217,
  "symbols_in_volume": [
   "caffe2.python.mkl.rewrite_graph.rewrite_model_helper_simple",
   "numpy.float32",
   "numpy.random.randn",
   "numpy.random.seed",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.mkl.rewrite_graph_test.MKLRewriteTest.test_mkl_multi_output_rewrite.run": {
  "lineno": 224,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.mkl.rewrite_graph_test.MKLRewriteTest.test_mkl_resnet_rewrite": {
  "lineno": 202,
  "symbols_in_volume": [
   "caffe2.python.mkl.rewrite_graph.rewrite_model_helper_simple",
   "numpy.float32",
   "numpy.random.randn",
   "numpy.random.seed",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.mkl.rewrite_graph_test.MKLRewriteTest.test_mkl_resnet_rewrite.run": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.mkl.rewrite_graph_test.MKLRewriteTest.test_mkl_simple_rewrite": {
  "lineno": 185,
  "symbols_in_volume": [
   "caffe2.python.mkl.rewrite_graph.rewrite_model_helper_simple",
   "hypothesis.given",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.randn",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.mkl.rewrite_graph_test.MKLRewriteTest.test_mkl_simple_rewrite.run": {
  "lineno": 193,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.mkl.rewrite_graph_test.alexnet": {
  "lineno": 79,
  "symbols_in_volume": [
   "caffe2.python.brew.conv",
   "caffe2.python.brew.dropout",
   "caffe2.python.brew.fc",
   "caffe2.python.brew.lrn",
   "caffe2.python.brew.max_pool",
   "caffe2.python.brew.relu",
   "caffe2.python.model_helper.ModelHelper"
  ],
  "type": "function"
 },
 "caffe2.python.mkl.rewrite_graph_test.complex_resnet": {
  "lineno": 175,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.models.resnet.create_resnet50"
  ],
  "type": "function"
 },
 "caffe2.python.mkl.rewrite_graph_test.deterministic_io": {
  "lineno": 19,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "caffe2.python.mkl.rewrite_graph_test.double_matmul": {
  "lineno": 32,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.model_helper.ModelHelper"
  ],
  "type": "function"
 },
 "caffe2.python.mkl.rewrite_graph_test.simple_cnn": {
  "lineno": 67,
  "symbols_in_volume": [
   "caffe2.python.brew.conv",
   "caffe2.python.brew.relu",
   "caffe2.python.brew.spatial_bn",
   "caffe2.python.model_helper.ModelHelper"
  ],
  "type": "function"
 },
 "caffe2.python.mkl.rewrite_graph_test.simple_fc": {
  "lineno": 27,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.model_helper.ModelHelper"
  ],
  "type": "function"
 },
 "caffe2.python.mkl.rewrite_graph_test.simple_mlp": {
  "lineno": 45,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.brew.relu",
   "caffe2.python.model_helper.ModelHelper"
  ],
  "type": "function"
 },
 "caffe2.python.mkl.rewrite_graph_test.simple_relu": {
  "lineno": 39,
  "symbols_in_volume": [
   "caffe2.python.brew.relu",
   "caffe2.python.model_helper.ModelHelper"
  ],
  "type": "function"
 },
 "caffe2.python.mkl.rewrite_graph_test.simple_resnet": {
  "lineno": 167,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.models.resnet.create_resnet_32x32"
  ],
  "type": "function"
 },
 "caffe2.python.mkl_test_util": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.DeviceOption",
   "caffe2.proto.caffe2_pb2.MKLDNN",
   "caffe2.python.hypothesis_test_util.cpu_do",
   "caffe2.python.hypothesis_test_util.device_options",
   "caffe2.python.hypothesis_test_util.gpu_do",
   "caffe2.python.workspace.C.has_mkldnn",
   "hypothesis.strategies.just",
   "hypothesis.strategies.sampled_from"
  ],
  "type": "module"
 },
 "caffe2.python.mkl_test_util.device_checker_device_options": {
  "lineno": 27,
  "symbols_in_volume": [
   "hypothesis.strategies.just"
  ],
  "type": "function"
 },
 "caffe2.python.mkl_test_util.gradient_checker_device_option": {
  "lineno": 31,
  "symbols_in_volume": [
   "hypothesis.strategies.sampled_from"
  ],
  "type": "function"
 },
 "caffe2.python.model_device_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.model_device_test.TestMiniAlexNet": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.model_device_test.TestMiniAlexNet._MiniAlexNetNoDropout": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.brew.conv",
   "caffe2.python.brew.fc",
   "caffe2.python.brew.group_conv",
   "caffe2.python.brew.lrn",
   "caffe2.python.brew.max_pool",
   "caffe2.python.brew.relu",
   "caffe2.python.brew.softmax",
   "caffe2.python.model_helper.ModelHelper"
  ],
  "type": "function"
 },
 "caffe2.python.model_device_test.TestMiniAlexNet._testMiniAlexNet": {
  "lineno": 109,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.proto.caffe2_pb2.DeviceOption",
   "caffe2.python.device_checker.DeviceChecker",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.GpuDeviceType",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.model_device_test.TestMiniAlexNet.testMiniAlexNetNCHW": {
  "lineno": 139,
  "symbols_in_volume": [
   "caffe2.python.workspace.has_gpu_support",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.model_helper": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.model_helper.ExtractPredictorNet": {
  "lineno": 496,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "logging.debug"
  ],
  "type": "function"
 },
 "caffe2.python.model_helper.ExtractPredictorNet.rename_list": {
  "lineno": 567,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.model_helper.ExtractPredictorNet.validate_op": {
  "lineno": 556,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.model_helper.ModelHelper.AddGradientOperators": {
  "lineno": 311,
  "symbols_in_volume": [
   "caffe2.python.modeling.parameter_info.ParameterInfo"
  ],
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper.AddParameter": {
  "lineno": 262,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "caffe2.python.modeling.parameter_info.ParameterTags.BIAS",
   "caffe2.python.modeling.parameter_info.ParameterTags.COMPUTED_PARAM",
   "caffe2.python.modeling.parameter_info.ParameterTags.WEIGHT"
  ],
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper.ConstructInitTrainNetfromNet": {
  "lineno": 469,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper.CreateDB": {
  "lineno": 306,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper.GetAllParams": {
  "lineno": 407,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper.GetCompleteNet": {
  "lineno": 453,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper.GetComputedParams": {
  "lineno": 392,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper.GetDevices": {
  "lineno": 421,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper.GetOptimizationParamInfo": {
  "lineno": 351,
  "symbols_in_volume": [
   "caffe2.python.core.GradientSlice",
   "future.utils.viewitems"
  ],
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper.GetParams": {
  "lineno": 284,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper.InitProto": {
  "lineno": 299,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper.Proto": {
  "lineno": 296,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper.RunAllOnGPU": {
  "lineno": 302,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper.TensorProtosDBInput": {
  "lineno": 410,
  "symbols_in_volume": [
   "caffe2.python.helpers.db_input.db_input"
  ],
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper.Validate": {
  "lineno": 388,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper._NormalizeNamescope": {
  "lineno": 275,
  "symbols_in_volume": [
   "caffe2.python.scope.CurrentNameScope",
   "caffe2.python.scope._NAMESCOPE_SEPARATOR"
  ],
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper._Validate": {
  "lineno": 371,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper.__dir__": {
  "lineno": 446,
  "symbols_in_volume": [
   "future.utils.viewkeys",
   "itertools.chain"
  ],
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper.__getattr__": {
  "lineno": 426,
  "symbols_in_volume": [
   "caffe2.python.core.IsOperator",
   "caffe2.python.workspace.C.nearby_opnames",
   "logging.warning"
  ],
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper.__init__": {
  "lineno": 95,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper._infer_param_shape": {
  "lineno": 138,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper._normalize_tags": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper._update_param_info_deprecated": {
  "lineno": 146,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "caffe2.python.modeling.parameter_info.ParameterInfo"
  ],
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper.add_param_DEPRECATED": {
  "lineno": 243,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "caffe2.python.modeling.parameter_info.ParameterInfo",
   "logging.warning"
  ],
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper.arg_scope": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper.create_param": {
  "lineno": 163,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "caffe2.python.modeling.parameter_sharing.parameter_sharing_context.get_parameter_name",
   "caffe2.python.optimizer_context.DEFAULT_OPTIM",
   "caffe2.python.optimizer_context.OptimizerContext.current",
   "caffe2.python.regularizer_context.RegularizerContext.current",
   "six.string_types"
  ],
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper.get_name": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper.get_param_info": {
  "lineno": 236,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference"
  ],
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper.get_param_to_grad": {
  "lineno": 335,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.model_helper_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.model_helper_test.ModelHelperTest": {
  "lineno": 10,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.model_helper_test.ModelHelperTest.test_get_complete_net": {
  "lineno": 31,
  "symbols_in_volume": [
   "caffe2.python.brew.conv",
   "caffe2.python.brew.fc",
   "caffe2.python.brew.relu",
   "caffe2.python.brew.softmax",
   "caffe2.python.brew.spatial_bn",
   "caffe2.python.model_helper.ModelHelper"
  ],
  "type": "function"
 },
 "caffe2.python.model_helper_test.ModelHelperTest.test_get_complete_net_type": {
  "lineno": 11,
  "symbols_in_volume": [
   "caffe2.python.brew.conv",
   "caffe2.python.model_helper.ModelHelper"
  ],
  "type": "function"
 },
 "caffe2.python.modeling": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.modeling.compute_histogram_for_blobs": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.modeling.compute_histogram_for_blobs.ComputeHistogramForBlobs": {
  "lineno": 12,
  "symbols_in_volume": [
   "caffe2.python.modeling.net_modifier.NetModifier"
  ],
  "type": "class"
 },
 "caffe2.python.modeling.compute_histogram_for_blobs.ComputeHistogramForBlobs.__init__": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.modeling.compute_histogram_for_blobs.ComputeHistogramForBlobs.field_name_suffix": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.modeling.compute_histogram_for_blobs.ComputeHistogramForBlobs.modify_net": {
  "lineno": 42,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "caffe2.python.core.DataType.FLOAT",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.modeling.compute_histogram_for_blobs_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.modeling.compute_histogram_for_blobs_test.ComputeHistogramForBlobsTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.modeling.compute_histogram_for_blobs_test.ComputeHistogramForBlobsTest.histogram": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.int32",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.modeling.compute_histogram_for_blobs_test.ComputeHistogramForBlobsTest.test_compute_histogram_for_blobs": {
  "lineno": 38,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.modeling.compute_histogram_for_blobs.ComputeHistogramForBlobs",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.float32",
   "numpy.linalg.norm",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.modeling.compute_histogram_for_blobs_test.ComputeHistogramForBlobsTest.test_compute_histogram_for_blobs_modify_output_record": {
  "lineno": 77,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.modeling.compute_histogram_for_blobs.ComputeHistogramForBlobs",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.float32",
   "numpy.linalg.norm",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.modeling.compute_norm_for_blobs": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.modeling.compute_norm_for_blobs.ComputeNormForBlobs": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.modeling.net_modifier.NetModifier"
  ],
  "type": "class"
 },
 "caffe2.python.modeling.compute_norm_for_blobs.ComputeNormForBlobs.__init__": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.modeling.compute_norm_for_blobs.ComputeNormForBlobs.field_name_suffix": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.modeling.compute_norm_for_blobs.ComputeNormForBlobs.modify_net": {
  "lineno": 40,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "caffe2.python.core.DataType.FLOAT",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.muji.OnCPU",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "numpy.float"
  ],
  "type": "function"
 },
 "caffe2.python.modeling.compute_norm_for_blobs_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.modeling.compute_norm_for_blobs_test.ComputeNormForBlobsTest": {
  "lineno": 13,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.modeling.compute_norm_for_blobs_test.ComputeNormForBlobsTest.test_compute_averaged_norm_for_blobs": {
  "lineno": 82,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.modeling.compute_norm_for_blobs.ComputeNormForBlobs",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.float32",
   "numpy.linalg.norm",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.modeling.compute_norm_for_blobs_test.ComputeNormForBlobsTest.test_compute_l1_averaged_norm_for_blobs": {
  "lineno": 174,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.modeling.compute_norm_for_blobs.ComputeNormForBlobs",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.abs",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.python.modeling.compute_norm_for_blobs_test.ComputeNormForBlobsTest.test_compute_l1_norm_for_blobs": {
  "lineno": 143,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.modeling.compute_norm_for_blobs.ComputeNormForBlobs",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.abs",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.python.modeling.compute_norm_for_blobs_test.ComputeNormForBlobsTest.test_compute_norm_for_blobs": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.modeling.compute_norm_for_blobs.ComputeNormForBlobs",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.float32",
   "numpy.linalg.norm",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.modeling.compute_norm_for_blobs_test.ComputeNormForBlobsTest.test_compute_norm_for_blobs_modify_output_record": {
  "lineno": 46,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.modeling.compute_norm_for_blobs.ComputeNormForBlobs",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.float32",
   "numpy.linalg.norm",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.modeling.compute_norm_for_blobs_test.ComputeNormForBlobsTest.test_compute_norm_for_blobs_no_print": {
  "lineno": 113,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.modeling.compute_norm_for_blobs.ComputeNormForBlobs",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.float32",
   "numpy.linalg.norm",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.modeling.compute_norm_for_blobs_test.ComputeNormForBlobsTest.test_compute_norm_row_index_for_blobs": {
  "lineno": 206,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.modeling.compute_norm_for_blobs.ComputeNormForBlobs",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.float32",
   "numpy.linalg.norm",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.modeling.compute_statistics_for_blobs": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.modeling.compute_statistics_for_blobs.ComputeStatisticsForBlobs": {
  "lineno": 12,
  "symbols_in_volume": [
   "caffe2.python.modeling.net_modifier.NetModifier"
  ],
  "type": "class"
 },
 "caffe2.python.modeling.compute_statistics_for_blobs.ComputeStatisticsForBlobs.__init__": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.modeling.compute_statistics_for_blobs.ComputeStatisticsForBlobs.field_name_suffix": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.modeling.compute_statistics_for_blobs.ComputeStatisticsForBlobs.modify_net": {
  "lineno": 28,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "caffe2.python.core.DataType.FLOAT",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "numpy.float"
  ],
  "type": "function"
 },
 "caffe2.python.modeling.compute_statistics_for_blobs_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.modeling.compute_statistics_for_blobs_test.ComputeStatisticsForBlobsTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.modeling.compute_statistics_for_blobs_test.ComputeStatisticsForBlobsTest.test_compute_statistics_for_blobs": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.modeling.compute_statistics_for_blobs.ComputeStatisticsForBlobs",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.array",
   "numpy.float32",
   "numpy.linalg.norm",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.modeling.compute_statistics_for_blobs_test.ComputeStatisticsForBlobsTest.test_compute_statistics_for_blobs_modify_output_record": {
  "lineno": 49,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.modeling.compute_statistics_for_blobs.ComputeStatisticsForBlobs",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.array",
   "numpy.float32",
   "numpy.linalg.norm",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.modeling.get_entry_from_blobs": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.modeling.get_entry_from_blobs.GetEntryFromBlobs": {
  "lineno": 27,
  "symbols_in_volume": [
   "caffe2.python.modeling.net_modifier.NetModifier"
  ],
  "type": "class"
 },
 "caffe2.python.modeling.get_entry_from_blobs.GetEntryFromBlobs.__init__": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.modeling.get_entry_from_blobs.GetEntryFromBlobs.field_name_suffix": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.modeling.get_entry_from_blobs.GetEntryFromBlobs.modify_net": {
  "lineno": 48,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "numpy.float"
  ],
  "type": "function"
 },
 "caffe2.python.modeling.get_entry_from_blobs_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.modeling.get_entry_from_blobs_test.GetEntryFromBlobsTest": {
  "lineno": 28,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.modeling.get_entry_from_blobs_test.GetEntryFromBlobsTest.test_get_entry_from_blobs": {
  "lineno": 29,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.modeling.get_entry_from_blobs.GetEntryFromBlobs",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.modeling.get_entry_from_blobs_test.GetEntryFromBlobsTest.test_get_entry_from_blobs_modify_output_record": {
  "lineno": 56,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.modeling.get_entry_from_blobs.GetEntryFromBlobs",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.modeling.gradient_clipping": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "caffe2.python.modeling.gradient_clipping.GradientClipping": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.modeling.net_modifier.NetModifier"
  ],
  "type": "class"
 },
 "caffe2.python.modeling.gradient_clipping.GradientClipping.__init__": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.modeling.gradient_clipping.GradientClipping.modify_net": {
  "lineno": 69,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.BlobReference",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.core.GradientSlice",
   "caffe2.python.optimizer.get_param_device"
  ],
  "type": "function"
 },
 "caffe2.python.modeling.gradient_clipping_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.modeling.gradient_clipping_test.GradientClippingTest": {
  "lineno": 28,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.modeling.gradient_clipping_test.GradientClippingTest.test_gradient_clipping_by_norm": {
  "lineno": 29,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.modeling.gradient_clipping.GradientClipping",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.modeling.gradient_clipping_test.GradientClippingTest.test_gradient_clipping_by_norm_compute_norm_ratio": {
  "lineno": 129,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.modeling.gradient_clipping.GradientClipping",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.modeling.gradient_clipping_test.GradientClippingTest.test_gradient_clipping_by_norm_excluding_blobs": {
  "lineno": 238,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.modeling.gradient_clipping.GradientClipping",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.modeling.gradient_clipping_test.GradientClippingTest.test_gradient_clipping_by_norm_including_blobs": {
  "lineno": 203,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.modeling.gradient_clipping.GradientClipping",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.modeling.gradient_clipping_test.GradientClippingTest.test_gradient_clipping_by_norm_l1_norm": {
  "lineno": 62,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.modeling.gradient_clipping.GradientClipping",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.modeling.gradient_clipping_test.GradientClippingTest.test_gradient_clipping_by_norm_using_param_norm": {
  "lineno": 95,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.modeling.gradient_clipping.GradientClipping",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.modeling.gradient_clipping_test.GradientClippingTest.test_gradient_clipping_by_value": {
  "lineno": 164,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.modeling.gradient_clipping.GradientClipping",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.amax",
   "numpy.amin",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.modeling.initializers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.modeling.initializers.ExternalInitializer": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.modeling.initializers.ExternalInitializer.create_param": {
  "lineno": 47,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "caffe2.python.core.ScopedBlobReference",
   "caffe2.python.modeling.parameter_info.ParameterInfo",
   "six.string_types"
  ],
  "type": "function"
 },
 "caffe2.python.modeling.initializers.Initializer": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.modeling.initializers.Initializer.__init__": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.modeling.initializers.Initializer.create_param": {
  "lineno": 28,
  "symbols_in_volume": [
   "caffe2.python.modeling.parameter_info.ParameterInfo"
  ],
  "type": "function"
 },
 "caffe2.python.modeling.initializers.Initializer.update": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.modeling.initializers.PseudoFP16Initializer": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.modeling.initializers.PseudoFP16Initializer.create_param": {
  "lineno": 78,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.FLOAT",
   "caffe2.python.modeling.parameter_info.ParameterInfo"
  ],
  "type": "function"
 },
 "caffe2.python.modeling.initializers.PseudoFP16Initializer.update": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.modeling.initializers.ReversePseudoFP16Initializer": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.modeling.initializers.ReversePseudoFP16Initializer.create_param": {
  "lineno": 107,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.FLOAT16",
   "caffe2.python.modeling.parameter_info.ParameterInfo"
  ],
  "type": "function"
 },
 "caffe2.python.modeling.initializers.ReversePseudoFP16Initializer.update": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.modeling.initializers.update_initializer": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.modeling.initializers.update_initializer.get_initializer_args": {
  "lineno": 141,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.modeling.initializers_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.modeling.initializers_test.InitializerTest": {
  "lineno": 12,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.modeling.initializers_test.InitializerTest.test_fc_external_initializer": {
  "lineno": 51,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.model_helper.ModelHelper"
  ],
  "type": "function"
 },
 "caffe2.python.modeling.initializers_test.InitializerTest.test_fc_fp16_initializer": {
  "lineno": 34,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.modeling.initializers.PseudoFP16Initializer",
   "caffe2.python.workspace.has_gpu_support",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.modeling.initializers_test.InitializerTest.test_fc_initializer": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.modeling.initializers.Initializer"
  ],
  "type": "function"
 },
 "caffe2.python.modeling.net_modifier": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.modeling.net_modifier.NetModifier": {
  "lineno": 10,
  "symbols_in_volume": [
   "abc.ABCMeta",
   "six.with_metaclass"
  ],
  "type": "class"
 },
 "caffe2.python.modeling.net_modifier.NetModifier.__call__": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.modeling.net_modifier.NetModifier.__init__": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.modeling.net_modifier.NetModifier.modify_net": {
  "lineno": 24,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "caffe2.python.modeling.parameter_info": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.modeling.parameter_info.ParameterInfo": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.modeling.parameter_info.ParameterInfo.__init__": {
  "lineno": 19,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "numpy.prod"
  ],
  "type": "function"
 },
 "caffe2.python.modeling.parameter_info.ParameterInfo.__str__": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.modeling.parameter_info.ParameterInfo.optimizer": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.modeling.parameter_info.ParameterInfo.parameter": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.modeling.parameter_info.ParameterTags": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.modeling.parameter_sharing": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "caffe2.python.modeling.parameter_sharing.ParameterSharing": {
  "lineno": 87,
  "symbols_in_volume": [
   "caffe2.python.scope.CurrentNameScope",
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "caffe2.python.modeling.parameter_sharing.ParameterSharingContext": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.modeling.parameter_sharing.ParameterSharingContext.__init__": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.modeling.parameter_sharing.ParameterSharingContext._resolve_scope_overrides": {
  "lineno": 24,
  "symbols_in_volume": [
   "caffe2.python.scope._NAMESCOPE_SEPARATOR",
   "caffe2.python.scope._NAMESCOPE_SEPARATOR.join"
  ],
  "type": "function"
 },
 "caffe2.python.modeling.parameter_sharing.ParameterSharingContext.add_scope_overrides": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.modeling.parameter_sharing.ParameterSharingContext.get_parameter_name": {
  "lineno": 56,
  "symbols_in_volume": [
   "caffe2.python.scope.CurrentNameScope"
  ],
  "type": "function"
 },
 "caffe2.python.modeling.parameter_sharing.ParameterSharingContext.pop": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.modeling.parameter_sharing._normalize_namescope": {
  "lineno": 80,
  "symbols_in_volume": [
   "caffe2.python.scope._NAMESCOPE_SEPARATOR"
  ],
  "type": "function"
 },
 "caffe2.python.modeling.parameter_sharing_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.modeling.parameter_sharing_test.ParameterSharingTest": {
  "lineno": 17,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.modeling.parameter_sharing_test.ParameterSharingTest.test_create_param": {
  "lineno": 73,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.modeling.initializers.Initializer",
   "caffe2.python.scope.NameScope"
  ],
  "type": "function"
 },
 "caffe2.python.modeling.parameter_sharing_test.ParameterSharingTest.test_deep_hierarchy": {
  "lineno": 92,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.modeling.initializers.Initializer",
   "caffe2.python.modeling.parameter_sharing.ParameterSharing",
   "caffe2.python.scope.NameScope"
  ],
  "type": "function"
 },
 "caffe2.python.modeling.parameter_sharing_test.ParameterSharingTest.test_parameter_sharing_brew": {
  "lineno": 108,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.modeling.parameter_sharing.ParameterSharing",
   "caffe2.python.scope.NameScope"
  ],
  "type": "function"
 },
 "caffe2.python.modeling.parameter_sharing_test.ParameterSharingTest.test_parameter_sharing_default_scopes": {
  "lineno": 19,
  "symbols_in_volume": [
   "caffe2.python.modeling.parameter_sharing.parameter_sharing_context.get_parameter_name",
   "caffe2.python.scope.NameScope"
  ],
  "type": "function"
 },
 "caffe2.python.modeling.parameter_sharing_test.ParameterSharingTest.test_parameter_sharing_nested_scopes": {
  "lineno": 30,
  "symbols_in_volume": [
   "caffe2.python.modeling.parameter_sharing.ParameterSharing",
   "caffe2.python.modeling.parameter_sharing.parameter_sharing_context.get_parameter_name",
   "caffe2.python.scope.NameScope"
  ],
  "type": "function"
 },
 "caffe2.python.modeling.parameter_sharing_test.ParameterSharingTest.test_parameter_sharing_subscopes": {
  "lineno": 57,
  "symbols_in_volume": [
   "caffe2.python.modeling.parameter_sharing.ParameterSharing",
   "caffe2.python.modeling.parameter_sharing.parameter_sharing_context.get_parameter_name",
   "caffe2.python.scope.NameScope"
  ],
  "type": "function"
 },
 "caffe2.python.models": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.models.__sym_init__": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.models.__sym_init__._parseFile": {
  "lineno": 9,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "os.path.dirname"
  ],
  "type": "function"
 },
 "caffe2.python.models.download": {
  "lineno": null,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "signal.SIGINT",
   "signal.signal",
   "urllib.error.HTTPError",
   "urllib.error.URLError",
   "urllib2.HTTPError",
   "urllib2.URLError"
  ],
  "type": "module"
 },
 "caffe2.python.models.download.ModelDownloader": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.models.download.ModelDownloader.__init__": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.models.download.ModelDownloader._download": {
  "lineno": 157,
  "symbols_in_volume": [
   "os.makedirs",
   "os.path.exists",
   "os.path.join"
  ],
  "type": "function"
 },
 "caffe2.python.models.download.ModelDownloader._model_dir": {
  "lineno": 152,
  "symbols_in_volume": [
   "os.getenv",
   "os.path.expanduser",
   "os.path.join"
  ],
  "type": "function"
 },
 "caffe2.python.models.download.ModelDownloader.get_c2_model": {
  "lineno": 204,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.models.download.ModelDownloader.get_c2_model_dbg": {
  "lineno": 178,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "json.load",
   "os.path.exists",
   "os.path.join"
  ],
  "type": "function"
 },
 "caffe2.python.models.download.deleteDirectory": {
  "lineno": 41,
  "symbols_in_volume": [
   "os.path.join",
   "os.remove",
   "os.rmdir",
   "os.walk"
  ],
  "type": "function"
 },
 "caffe2.python.models.download.downloadFromURLToFile": {
  "lineno": 57,
  "symbols_in_volume": [
   "urllib2.urlopen"
  ],
  "type": "function"
 },
 "caffe2.python.models.download.downloadModel": {
  "lineno": 90,
  "symbols_in_volume": [
   "os.makedirs",
   "os.path.dirname",
   "os.path.exists",
   "os.path.isdir",
   "os.path.realpath",
   "os.remove",
   "os.symlink"
  ],
  "type": "function"
 },
 "caffe2.python.models.download.getURLFromName": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.models.download.progressBar": {
  "lineno": 50,
  "symbols_in_volume": [
   "sys.stdout.flush",
   "sys.stdout.write"
  ],
  "type": "function"
 },
 "caffe2.python.models.download.signalHandler": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.models.download.validModelName": {
  "lineno": 139,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "caffe2.python.models.imagenet_trainer_test_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.models.imagenet_trainer_test_utils.count_blobs": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.models.imagenet_trainer_test_utils.count_shared_blobs": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.models.imagenet_trainer_test_utils.has_blob": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.models.imagenet_trainer_test_utils.test_forward_only": {
  "lineno": 107,
  "symbols_in_volume": [
   "caffe2.python.cnn.CNNModelHelper",
   "caffe2.python.core.NameScope",
   "caffe2.python.memonger.optimize_inference_for_dag",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.models.imagenet_trainer_test_utils.test_forward_only_fast_simplenet": {
  "lineno": 152,
  "symbols_in_volume": [
   "caffe2.python.cnn.CNNModelHelper",
   "caffe2.python.core.NameScope",
   "caffe2.python.memonger.optimize_inference_fast",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.float32",
   "numpy.random.rand",
   "time.time"
  ],
  "type": "function"
 },
 "caffe2.python.models.imagenet_trainer_test_utils.test_shared_grads": {
  "lineno": 36,
  "symbols_in_volume": [
   "caffe2.python.cnn.CNNModelHelper",
   "caffe2.python.core.NameScope",
   "caffe2.python.memonger.share_grad_blobs",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.InferShapesAndTypes",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.models.resnet": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.DEBUG",
   "logging.basicConfig",
   "logging.getLogger"
  ],
  "type": "module"
 },
 "caffe2.python.models.resnet.ResNetBuilder": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.models.resnet.ResNetBuilder.__init__": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.models.resnet.ResNetBuilder.add_bottleneck": {
  "lineno": 90,
  "symbols_in_volume": [
   "caffe2.python.brew.conv",
   "caffe2.python.brew.spatial_bn",
   "caffe2.python.brew.sum"
  ],
  "type": "function"
 },
 "caffe2.python.models.resnet.ResNetBuilder.add_conv": {
  "lineno": 41,
  "symbols_in_volume": [
   "caffe2.python.brew.conv"
  ],
  "type": "function"
 },
 "caffe2.python.models.resnet.ResNetBuilder.add_relu": {
  "lineno": 66,
  "symbols_in_volume": [
   "caffe2.python.brew.relu"
  ],
  "type": "function"
 },
 "caffe2.python.models.resnet.ResNetBuilder.add_simple_block": {
  "lineno": 173,
  "symbols_in_volume": [
   "caffe2.python.brew.conv",
   "caffe2.python.brew.spatial_bn",
   "caffe2.python.brew.sum"
  ],
  "type": "function"
 },
 "caffe2.python.models.resnet.ResNetBuilder.add_spatial_bn": {
  "lineno": 74,
  "symbols_in_volume": [
   "caffe2.python.brew.spatial_bn"
  ],
  "type": "function"
 },
 "caffe2.python.models.resnet.create_resnet50": {
  "lineno": 405,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.models.resnet.create_resnet_32x32": {
  "lineno": 234,
  "symbols_in_volume": [
   "caffe2.python.brew.average_pool",
   "caffe2.python.brew.conv",
   "caffe2.python.brew.fc",
   "caffe2.python.brew.relu",
   "caffe2.python.brew.softmax",
   "caffe2.python.brew.spatial_bn"
  ],
  "type": "function"
 },
 "caffe2.python.models.resnet.create_resnext": {
  "lineno": 291,
  "symbols_in_volume": [
   "caffe2.python.brew.average_pool",
   "caffe2.python.brew.conv",
   "caffe2.python.brew.fc",
   "caffe2.python.brew.max_pool",
   "caffe2.python.brew.relu",
   "caffe2.python.brew.softmax",
   "caffe2.python.brew.spatial_bn"
  ],
  "type": "function"
 },
 "caffe2.python.models.resnet_test": {
  "lineno": null,
  "symbols_in_volume": [
   "random.seed",
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.models.resnet_test.ResnetMemongerTest": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.models.resnet_test.ResnetMemongerTest.test_resnet_forward_only": {
  "lineno": 29,
  "symbols_in_volume": [
   "caffe2.python.models.imagenet_trainer_test_utils.test_forward_only",
   "caffe2.python.models.resnet.create_resnet50",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "caffe2.python.models.resnet_test.ResnetMemongerTest.test_resnet_forward_only_fast_simplenet": {
  "lineno": 38,
  "symbols_in_volume": [
   "caffe2.python.models.imagenet_trainer_test_utils.test_forward_only_fast_simplenet",
   "caffe2.python.models.resnet.create_resnet50",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "caffe2.python.models.resnet_test.ResnetMemongerTest.test_resnet_shared_grads": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.models.imagenet_trainer_test_utils.test_shared_grads",
   "caffe2.python.models.resnet.create_resnet50",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "caffe2.python.models.seq2seq": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.models.seq2seq.beam_search": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.models.seq2seq.beam_search.BeamSearchForwardOnly": {
  "lineno": 14,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "class"
 },
 "caffe2.python.models.seq2seq.beam_search.BeamSearchForwardOnly.__init__": {
  "lineno": 40,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.INT32",
   "caffe2.python.models.seq2seq.seq2seq_model_helper.Seq2SeqModelHelper",
   "caffe2.python.models.seq2seq.seq2seq_util.GO_ID"
  ],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.beam_search.BeamSearchForwardOnly.apply": {
  "lineno": 95,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.FLOAT",
   "caffe2.python.core.DataType.INT32",
   "caffe2.python.core.DataType.INT64"
  ],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.beam_search.BeamSearchForwardOnly.apply.choose_state_per_hypo": {
  "lineno": 312,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.beam_search.BeamSearchForwardOnly.get_previous_tokens": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.beam_search.BeamSearchForwardOnly.get_step_model": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.beam_search.BeamSearchForwardOnly.get_timestep": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_beam_search_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.models.seq2seq.seq2seq_beam_search_test.Seq2SeqBeamSearchTest": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.models.seq2seq.seq2seq_beam_search_test.Seq2SeqBeamSearchTest._build_seq2seq_model": {
  "lineno": 20,
  "symbols_in_volume": [
   "caffe2.python.models.seq2seq.train.Seq2SeqModelCaffe2",
   "os.path.join"
  ],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_beam_search_test.Seq2SeqBeamSearchTest._run_compare_train_inference": {
  "lineno": 54,
  "symbols_in_volume": [
   "caffe2.python.models.seq2seq.seq2seq_util.GO_ID",
   "caffe2.python.models.seq2seq.translate.Seq2SeqModelCaffe2EnsembleDecoder",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNet",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.random_integers",
   "numpy.testing.assert_almost_equal",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_beam_search_test.Seq2SeqBeamSearchTest.test_2layer_attention": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_beam_search_test.Seq2SeqBeamSearchTest.test_attention": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_beam_search_test.Seq2SeqBeamSearchTest.test_multi_decoder": {
  "lineno": 189,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_model_helper": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.models.seq2seq.seq2seq_model_helper.Seq2SeqModelHelper": {
  "lineno": 12,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper"
  ],
  "type": "class"
 },
 "caffe2.python.models.seq2seq.seq2seq_model_helper.Seq2SeqModelHelper.AddParam": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_model_helper.Seq2SeqModelHelper.GetAllParams": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_model_helper.Seq2SeqModelHelper.GetNonTrainableParams": {
  "lineno": 63,
  "symbols_in_volume": [
   "caffe2.python.scope.CurrentNameScope",
   "caffe2.python.scope._NAMESCOPE_SEPARATOR"
  ],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_model_helper.Seq2SeqModelHelper.__init__": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_model_helper_test": {
  "lineno": null,
  "symbols_in_volume": [
   "random.seed",
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.models.seq2seq.seq2seq_model_helper_test.Seq2SeqModelHelperTest": {
  "lineno": 10,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.models.seq2seq.seq2seq_model_helper_test.Seq2SeqModelHelperTest.testAddParam": {
  "lineno": 24,
  "symbols_in_volume": [
   "caffe2.python.models.seq2seq.seq2seq_model_helper.Seq2SeqModelHelper"
  ],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_model_helper_test.Seq2SeqModelHelperTest.testConstuctor": {
  "lineno": 11,
  "symbols_in_volume": [
   "caffe2.python.models.seq2seq.seq2seq_model_helper.Seq2SeqModelHelper"
  ],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_model_helper_test.Seq2SeqModelHelperTest.testGetAllParams": {
  "lineno": 54,
  "symbols_in_volume": [
   "caffe2.python.models.seq2seq.seq2seq_model_helper.Seq2SeqModelHelper"
  ],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_model_helper_test.Seq2SeqModelHelperTest.testGetNonTrainableParams": {
  "lineno": 31,
  "symbols_in_volume": [
   "caffe2.python.models.seq2seq.seq2seq_model_helper.Seq2SeqModelHelper",
   "caffe2.python.scope.NameScope"
  ],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_util": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.LSTMWithAttentionDecoder": {
  "lineno": 320,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.LSTMWithAttentionDecoder.__init__": {
  "lineno": 333,
  "symbols_in_volume": [
   "caffe2.python.rnn_cell.AttentionCell",
   "caffe2.python.rnn_cell.MultiRNNCell"
  ],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.LSTMWithAttentionDecoder._get_attention_type": {
  "lineno": 325,
  "symbols_in_volume": [
   "caffe2.python.attention.AttentionType.Recurrent",
   "caffe2.python.attention.AttentionType.Regular"
  ],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.LSTMWithAttentionDecoder.apply": {
  "lineno": 396,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.LSTMWithAttentionDecoder.apply_over_sequence": {
  "lineno": 412,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.LSTMWithAttentionDecoder.get_attention_weights": {
  "lineno": 391,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.LSTMWithAttentionDecoder.get_output_dim": {
  "lineno": 388,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.LSTMWithAttentionDecoder.get_outputs_with_grads": {
  "lineno": 384,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.LSTMWithAttentionDecoder.get_state_names": {
  "lineno": 381,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.LSTMWithAttentionDecoder.scope": {
  "lineno": 322,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.build_embedding_decoder": {
  "lineno": 519,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.core.NameScope",
   "caffe2.python.rnn_cell.DropoutCell",
   "caffe2.python.rnn_cell.LSTMCell"
  ],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.build_embedding_encoder": {
  "lineno": 224,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.core.NameScope"
  ],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.build_embeddings": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.build_initial_rnn_decoder_states": {
  "lineno": 428,
  "symbols_in_volume": [
   "caffe2.python.brew.fc"
  ],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.gen_vocab": {
  "lineno": 27,
  "symbols_in_volume": [
   "collections.defaultdict",
   "future.utils.viewitems"
  ],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.get_layer_scope": {
  "lineno": 219,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.get_numberized_sentence": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.output_projection": {
  "lineno": 632,
  "symbols_in_volume": [
   "caffe2.python.brew.fc"
  ],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.rnn_bidirectional_layer": {
  "lineno": 124,
  "symbols_in_volume": [
   "caffe2.python.core.NameScope"
  ],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.rnn_unidirectional_layer": {
  "lineno": 58,
  "symbols_in_volume": [
   "caffe2.python.core.NameScope",
   "caffe2.python.rnn_cell.DropoutCell",
   "caffe2.python.rnn_cell.LSTMCell"
  ],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple",
   "logging.INFO",
   "logging.StreamHandler",
   "logging.getLogger",
   "sys.stderr"
  ],
  "type": "module"
 },
 "caffe2.python.models.seq2seq.train.Seq2SeqModelCaffe2": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.models.seq2seq.train.Seq2SeqModelCaffe2.__enter__": {
  "lineno": 495,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.Seq2SeqModelCaffe2.__exit__": {
  "lineno": 498,
  "symbols_in_volume": [
   "caffe2.python.workspace.ResetWorkspace"
  ],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.Seq2SeqModelCaffe2.__init__": {
  "lineno": 467,
  "symbols_in_volume": [
   "caffe2.python.workspace.GlobalInit"
  ],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.Seq2SeqModelCaffe2._apply_norm_ratio": {
  "lineno": 353,
  "symbols_in_volume": [
   "caffe2.python.core.GradientSlice",
   "caffe2.python.core.NameScope"
  ],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.Seq2SeqModelCaffe2._build_embeddings": {
  "lineno": 172,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "math.sqrt"
  ],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.Seq2SeqModelCaffe2._build_model": {
  "lineno": 101,
  "symbols_in_volume": [
   "caffe2.python.data_parallel_model.Parallelize_GPU",
   "caffe2.python.models.seq2seq.seq2seq_model_helper.Seq2SeqModelHelper"
  ],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.Seq2SeqModelCaffe2._build_model.clipped_grad_update_bound": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.Seq2SeqModelCaffe2._build_shared": {
  "lineno": 153,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "time.time"
  ],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.Seq2SeqModelCaffe2._calc_norm_ratio": {
  "lineno": 306,
  "symbols_in_volume": [
   "caffe2.python.core.GradientSlice",
   "caffe2.python.core.NameScope"
  ],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.Seq2SeqModelCaffe2._init_model": {
  "lineno": 455,
  "symbols_in_volume": [
   "caffe2.python.workspace.RunNetOnce"
  ],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.Seq2SeqModelCaffe2._init_model.create_net": {
  "lineno": 458,
  "symbols_in_volume": [
   "caffe2.python.workspace.CreateNet"
  ],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.Seq2SeqModelCaffe2.forward_model_build_fun": {
  "lineno": 299,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.Seq2SeqModelCaffe2.get_current_step": {
  "lineno": 507,
  "symbols_in_volume": [
   "caffe2.python.workspace.FetchBlob"
  ],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.Seq2SeqModelCaffe2.inc_current_step": {
  "lineno": 510,
  "symbols_in_volume": [
   "caffe2.python.workspace.FeedBlob",
   "numpy.array"
  ],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.Seq2SeqModelCaffe2.initialize_from_scratch": {
  "lineno": 501,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.Seq2SeqModelCaffe2.model_build_fun": {
  "lineno": 198,
  "symbols_in_volume": [
   "caffe2.python.models.seq2seq.seq2seq_util.build_embedding_decoder",
   "caffe2.python.models.seq2seq.seq2seq_util.build_embedding_encoder",
   "caffe2.python.models.seq2seq.seq2seq_util.output_projection",
   "caffe2.python.workspace.GetNameScope"
  ],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.Seq2SeqModelCaffe2.norm_clipped_grad_update": {
  "lineno": 392,
  "symbols_in_volume": [
   "caffe2.python.core.GradientSlice"
  ],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.Seq2SeqModelCaffe2.norm_clipped_sparse_grad_update": {
  "lineno": 420,
  "symbols_in_volume": [
   "caffe2.python.core.GradientSlice"
  ],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.Seq2SeqModelCaffe2.save": {
  "lineno": 551,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.RunOperatorOnce",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.Seq2SeqModelCaffe2.step": {
  "lineno": 516,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.GpuDeviceType",
   "caffe2.python.workspace.RunNet"
  ],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.Seq2SeqModelCaffe2.total_loss_scalar": {
  "lineno": 444,
  "symbols_in_volume": [
   "caffe2.python.workspace.FetchBlob"
  ],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.gen_batches": {
  "lineno": 579,
  "symbols_in_volume": [
   "caffe2.python.models.seq2seq.seq2seq_util.get_numberized_sentence",
   "random.shuffle"
  ],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.main": {
  "lineno": 673,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.prepare_batch": {
  "lineno": 38,
  "symbols_in_volume": [
   "caffe2.python.models.seq2seq.seq2seq_util.EOS_ID",
   "caffe2.python.models.seq2seq.seq2seq_util.GO_ID",
   "caffe2.python.models.seq2seq.seq2seq_util.PAD_ID",
   "numpy.array",
   "numpy.float32",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.run_seq2seq_model": {
  "lineno": 623,
  "symbols_in_volume": [
   "caffe2.python.models.seq2seq.seq2seq_util.gen_vocab"
  ],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.translate": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.INFO",
   "logging.StreamHandler",
   "logging.getLogger",
   "sys.stderr"
  ],
  "type": "module"
 },
 "caffe2.python.models.seq2seq.translate.Seq2SeqModelCaffe2EnsembleDecoder": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.models.seq2seq.translate.Seq2SeqModelCaffe2EnsembleDecoder.__init__": {
  "lineno": 316,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.FLOAT",
   "caffe2.python.core.DataType.INT32",
   "caffe2.python.models.seq2seq.beam_search.BeamSearchForwardOnly",
   "caffe2.python.models.seq2seq.seq2seq_model_helper.Seq2SeqModelHelper",
   "caffe2.python.models.seq2seq.seq2seq_util.EOS_ID",
   "caffe2.python.models.seq2seq.seq2seq_util.GO_ID",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.RunNetOnce"
  ],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.translate.Seq2SeqModelCaffe2EnsembleDecoder._build_decoder": {
  "lineno": 98,
  "symbols_in_volume": [
   "caffe2.python.core.NameScope",
   "caffe2.python.models.seq2seq.beam_search.BeamSearchForwardOnly.LinkConfig",
   "caffe2.python.models.seq2seq.beam_search.BeamSearchForwardOnly.StateConfig",
   "caffe2.python.models.seq2seq.seq2seq_util.LSTMWithAttentionDecoder",
   "caffe2.python.models.seq2seq.seq2seq_util.build_embedding_encoder",
   "caffe2.python.models.seq2seq.seq2seq_util.build_embeddings",
   "caffe2.python.models.seq2seq.seq2seq_util.build_initial_rnn_decoder_states",
   "caffe2.python.models.seq2seq.seq2seq_util.output_projection",
   "caffe2.python.rnn_cell.LSTMCell"
  ],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.translate.Seq2SeqModelCaffe2EnsembleDecoder.decode": {
  "lineno": 464,
  "symbols_in_volume": [
   "caffe2.python.models.seq2seq.seq2seq_util.EOS_ID",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNet",
   "numpy.array",
   "numpy.int32",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.translate.Seq2SeqModelCaffe2EnsembleDecoder.get_db_type": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.translate.Seq2SeqModelCaffe2EnsembleDecoder.get_model_file": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.translate.Seq2SeqModelCaffe2EnsembleDecoder.scope": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.translate.Seq2SeqModelCaffe2EnsembleDecoderBase": {
  "lineno": 36,
  "symbols_in_volume": [
   "abc.ABCMeta",
   "six.with_metaclass"
  ],
  "type": "class"
 },
 "caffe2.python.models.seq2seq.translate.Seq2SeqModelCaffe2EnsembleDecoderBase.build_word_rewards": {
  "lineno": 46,
  "symbols_in_volume": [
   "caffe2.python.models.seq2seq.seq2seq_util.EOS_ID",
   "caffe2.python.models.seq2seq.seq2seq_util.GO_ID",
   "caffe2.python.models.seq2seq.seq2seq_util.PAD_ID",
   "caffe2.python.models.seq2seq.seq2seq_util.UNK_ID",
   "numpy.float32",
   "numpy.full"
  ],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.translate.Seq2SeqModelCaffe2EnsembleDecoderBase.get_db_type": {
  "lineno": 42,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.translate.Seq2SeqModelCaffe2EnsembleDecoderBase.get_model_file": {
  "lineno": 38,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.translate.Seq2SeqModelCaffe2EnsembleDecoderBase.load_models": {
  "lineno": 54,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.RunOperatorOnce"
  ],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.translate._weighted_sum": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.translate.main": {
  "lineno": 570,
  "symbols_in_volume": [
   "argparse.ArgumentParser"
  ],
  "type": "function"
 },
 "caffe2.python.models.seq2seq.translate.run_seq2seq_beam_decoder": {
  "lineno": 532,
  "symbols_in_volume": [
   "caffe2.python.models.seq2seq.seq2seq_util.gen_vocab",
   "caffe2.python.models.seq2seq.seq2seq_util.get_numberized_sentence",
   "future.utils.viewitems",
   "sys.stdin"
  ],
  "type": "function"
 },
 "caffe2.python.models.shufflenet": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.models.shufflenet.ShuffleNetV2Builder": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.models.shufflenet.ShuffleNetV2Builder.__init__": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.models.shufflenet.ShuffleNetV2Builder.add_basic_unit": {
  "lineno": 115,
  "symbols_in_volume": [
   "caffe2.python.brew.concat"
  ],
  "type": "function"
 },
 "caffe2.python.models.shufflenet.ShuffleNetV2Builder.add_conv1x1_bn": {
  "lineno": 152,
  "symbols_in_volume": [
   "caffe2.python.brew.conv",
   "caffe2.python.brew.relu",
   "caffe2.python.brew.spatial_bn"
  ],
  "type": "function"
 },
 "caffe2.python.models.shufflenet.ShuffleNetV2Builder.add_detection_unit": {
  "lineno": 141,
  "symbols_in_volume": [
   "caffe2.python.brew.conv",
   "caffe2.python.brew.spatial_bn"
  ],
  "type": "function"
 },
 "caffe2.python.models.shufflenet.ShuffleNetV2Builder.add_dwconv3x3_bn": {
  "lineno": 163,
  "symbols_in_volume": [
   "caffe2.python.brew.conv",
   "caffe2.python.brew.spatial_bn"
  ],
  "type": "function"
 },
 "caffe2.python.models.shufflenet.ShuffleNetV2Builder.add_spatial_ds_unit": {
  "lineno": 82,
  "symbols_in_volume": [
   "caffe2.python.brew.concat"
  ],
  "type": "function"
 },
 "caffe2.python.models.shufflenet.ShuffleNetV2Builder.create": {
  "lineno": 47,
  "symbols_in_volume": [
   "caffe2.python.brew.conv",
   "caffe2.python.brew.fc",
   "caffe2.python.brew.max_pool"
  ],
  "type": "function"
 },
 "caffe2.python.models.shufflenet.create_shufflenet": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.models.shufflenet_test": {
  "lineno": null,
  "symbols_in_volume": [
   "random.seed",
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.models.shufflenet_test.ShufflenetMemongerTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.models.shufflenet_test.ShufflenetMemongerTest.test_shufflenet_forward_only": {
  "lineno": 29,
  "symbols_in_volume": [
   "caffe2.python.models.imagenet_trainer_test_utils.test_forward_only",
   "caffe2.python.models.shufflenet.create_shufflenet",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "caffe2.python.models.shufflenet_test.ShufflenetMemongerTest.test_shufflenet_forward_only_fast_simplenet": {
  "lineno": 38,
  "symbols_in_volume": [
   "caffe2.python.models.imagenet_trainer_test_utils.test_forward_only_fast_simplenet",
   "caffe2.python.models.shufflenet.create_shufflenet",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "caffe2.python.models.shufflenet_test.ShufflenetMemongerTest.test_shufflenet_shared_grads": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.models.imagenet_trainer_test_utils.test_shared_grads",
   "caffe2.python.models.shufflenet.create_shufflenet",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "caffe2.python.modifier_context": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.modifier_context.ModifierContext": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.modifier_context.ModifierContext.__init__": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.modifier_context.ModifierContext._get_modifier": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.modifier_context.ModifierContext._has_modifier": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.modifier_context.ModifierContext._rebuild_modifiers": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.modifier_context.ModifierContext.pop_modifiers": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.modifier_context.ModifierContext.push_modifiers": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.modifier_context.UseModifierBase": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.modifier_context.UseModifierBase.__enter__": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.modifier_context.UseModifierBase.__exit__": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.modifier_context.UseModifierBase.__init__": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.modifier_context.UseModifierBase._context_class": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.muji": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.muji.Allreduce": {
  "lineno": 39,
  "symbols_in_volume": [
   "caffe2.python.workspace.GetGpuPeerAccessPattern",
   "numpy.all"
  ],
  "type": "function"
 },
 "caffe2.python.muji.Allreduce2": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.muji.Allreduce4": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.muji.Allreduce4Group2": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.muji.Allreduce8": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.muji.AllreduceFallback": {
  "lineno": 226,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.muji.OnCPU": {
  "lineno": 33,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.proto.caffe2_pb2.DeviceOption"
  ],
  "type": "function"
 },
 "caffe2.python.muji.OnGPU": {
  "lineno": 23,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.DeviceOption",
   "caffe2.python.workspace.GpuDeviceType"
  ],
  "type": "function"
 },
 "caffe2.python.muji_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.muji_test.TestMuji": {
  "lineno": 7,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase",
   "caffe2.python.workspace.has_gpu_support",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.muji_test.TestMuji.RunningAllreduceWithGPUs": {
  "lineno": 9,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.muji.OnGPU",
   "caffe2.python.workspace.Blobs",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.muji_test.TestMuji.testAllreduceFallback": {
  "lineno": 39,
  "symbols_in_volume": [
   "caffe2.python.muji.AllreduceFallback",
   "caffe2.python.workspace.NumGpuDevices"
  ],
  "type": "function"
 },
 "caffe2.python.muji_test.TestMuji.testAllreduceSingleGPU": {
  "lineno": 44,
  "symbols_in_volume": [
   "caffe2.python.muji.Allreduce",
   "caffe2.python.workspace.NumGpuDevices"
  ],
  "type": "function"
 },
 "caffe2.python.muji_test.TestMuji.testAllreduceWithEightGPUs": {
  "lineno": 69,
  "symbols_in_volume": [
   "caffe2.python.muji.Allreduce8",
   "caffe2.python.workspace.GetGpuPeerAccessPattern",
   "numpy.all"
  ],
  "type": "function"
 },
 "caffe2.python.muji_test.TestMuji.testAllreduceWithFourGPUs": {
  "lineno": 55,
  "symbols_in_volume": [
   "caffe2.python.muji.Allreduce4",
   "caffe2.python.workspace.GetGpuPeerAccessPattern",
   "numpy.all"
  ],
  "type": "function"
 },
 "caffe2.python.muji_test.TestMuji.testAllreduceWithFourGPUsAndTwoGroups": {
  "lineno": 62,
  "symbols_in_volume": [
   "caffe2.python.muji.Allreduce4Group2",
   "caffe2.python.workspace.GetGpuPeerAccessPattern",
   "numpy.all"
  ],
  "type": "function"
 },
 "caffe2.python.muji_test.TestMuji.testAllreduceWithTwoGPUs": {
  "lineno": 48,
  "symbols_in_volume": [
   "caffe2.python.muji.Allreduce2",
   "caffe2.python.workspace.GetGpuPeerAccessPattern",
   "numpy.all"
  ],
  "type": "function"
 },
 "caffe2.python.net_builder": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.net_builder.NetBuilder": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.context.define_context"
  ],
  "type": "class"
 },
 "caffe2.python.net_builder.NetBuilder.__exit__": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_builder.NetBuilder.__init__": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_builder.NetBuilder.__str__": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_builder.NetBuilder._assert_mutable": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_builder.NetBuilder._reset_children": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_builder.NetBuilder._update_lexical_scope": {
  "lineno": 89,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.net_builder.NetBuilder.add": {
  "lineno": 107,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.net_builder.NetBuilder.current_net": {
  "lineno": 123,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.net_builder.NetBuilder.freeze": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_builder.NetBuilder.get": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_builder.NetBuilder.merge_nets": {
  "lineno": 156,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.net_builder.NetBuilder.stop_blob": {
  "lineno": 58,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.net_builder.NetBuilder.stop_if": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_builder.Operations": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.net_builder.Operations.Condition": {
  "lineno": 358,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_builder.Operations.Else": {
  "lineno": 341,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_builder.Operations.If": {
  "lineno": 322,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_builder.Operations.IfNet": {
  "lineno": 335,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_builder.Operations.WhileNet": {
  "lineno": 352,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_builder.Operations.__getattr__": {
  "lineno": 226,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_builder.Operations.local_exit": {
  "lineno": 444,
  "symbols_in_volume": [
   "caffe2.python.task.TaskGroup.LOCAL_SETUP"
  ],
  "type": "function"
 },
 "caffe2.python.net_builder.Operations.local_init": {
  "lineno": 433,
  "symbols_in_volume": [
   "caffe2.python.task.TaskGroup.LOCAL_SETUP"
  ],
  "type": "function"
 },
 "caffe2.python.net_builder.Operations.local_reporter": {
  "lineno": 467,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_builder.Operations.loop": {
  "lineno": 274,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_builder.Operations.net": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_builder.Operations.stop": {
  "lineno": 250,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_builder.Operations.stop_guard": {
  "lineno": 300,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_builder.Operations.stop_if": {
  "lineno": 261,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_builder.Operations.task_exit": {
  "lineno": 388,
  "symbols_in_volume": [
   "caffe2.python.task.Task.TASK_SETUP"
  ],
  "type": "function"
 },
 "caffe2.python.net_builder.Operations.task_group": {
  "lineno": 237,
  "symbols_in_volume": [
   "caffe2.python.task.Cluster",
   "caffe2.python.task.Node",
   "caffe2.python.task.TaskGroup"
  ],
  "type": "function"
 },
 "caffe2.python.net_builder.Operations.task_init": {
  "lineno": 366,
  "symbols_in_volume": [
   "caffe2.python.task.Task.TASK_SETUP"
  ],
  "type": "function"
 },
 "caffe2.python.net_builder.Operations.task_instance_exit": {
  "lineno": 421,
  "symbols_in_volume": [
   "caffe2.python.task.Task.TASK_INSTANCE_SETUP"
  ],
  "type": "function"
 },
 "caffe2.python.net_builder.Operations.task_instance_init": {
  "lineno": 408,
  "symbols_in_volume": [
   "caffe2.python.task.Task.TASK_INSTANCE_SETUP"
  ],
  "type": "function"
 },
 "caffe2.python.net_builder.Operations.task_reporter": {
  "lineno": 454,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_builder._Loop": {
  "lineno": 550,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.net_builder._Loop.__enter__": {
  "lineno": 569,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_builder._Loop.__exit__": {
  "lineno": 575,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_builder._Loop.__init__": {
  "lineno": 551,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference"
  ],
  "type": "function"
 },
 "caffe2.python.net_builder._Loop.iter": {
  "lineno": 562,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_builder._ReporterBuilder": {
  "lineno": 479,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.net_builder._ReporterBuilder.__exit__": {
  "lineno": 485,
  "symbols_in_volume": [
   "caffe2.python.core.to_execution_step",
   "caffe2.python.task.Task.REPORT_STEP",
   "caffe2.python.task.TaskGroup.current"
  ],
  "type": "function"
 },
 "caffe2.python.net_builder._ReporterBuilder.__init__": {
  "lineno": 480,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_builder._RunElseNet": {
  "lineno": 644,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.net_builder._RunElseNet.__exit__": {
  "lineno": 656,
  "symbols_in_volume": [
   "caffe2.python.control_ops_util.add_if_op",
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.net_builder._RunElseNet.__init__": {
  "lineno": 648,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_builder._RunIf": {
  "lineno": 581,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.net_builder._RunIf.Elif": {
  "lineno": 600,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_builder._RunIf.Else": {
  "lineno": 605,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_builder._RunIf.__enter__": {
  "lineno": 594,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_builder._RunIf.__init__": {
  "lineno": 582,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_builder._RunIfNet": {
  "lineno": 611,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.net_builder._RunIfNet.__exit__": {
  "lineno": 625,
  "symbols_in_volume": [
   "caffe2.python.control_ops_util.add_if_op",
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.net_builder._RunIfNet.__init__": {
  "lineno": 615,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_builder._RunIfNet.add": {
  "lineno": 622,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_builder._RunOnce": {
  "lineno": 514,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.net_builder._RunOnce.__exit__": {
  "lineno": 518,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_builder._RunOnce.__init__": {
  "lineno": 515,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_builder._RunWhileCondition": {
  "lineno": 708,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.net_builder._RunWhileCondition.__exit__": {
  "lineno": 728,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference"
  ],
  "type": "function"
 },
 "caffe2.python.net_builder._RunWhileCondition.__init__": {
  "lineno": 715,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_builder._RunWhileNet": {
  "lineno": 676,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.net_builder._RunWhileNet.__exit__": {
  "lineno": 684,
  "symbols_in_volume": [
   "caffe2.python.control_ops_util.add_while_op",
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.net_builder._RunWhileNet.__init__": {
  "lineno": 680,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_builder._SetupBuilder": {
  "lineno": 497,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.net_builder._SetupBuilder.__init__": {
  "lineno": 501,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_builder._SetupBuilder.exit": {
  "lineno": 509,
  "symbols_in_volume": [
   "caffe2.python.core.to_execution_step"
  ],
  "type": "function"
 },
 "caffe2.python.net_builder._SetupBuilder.setup": {
  "lineno": 505,
  "symbols_in_volume": [
   "caffe2.python.core.to_execution_step"
  ],
  "type": "function"
 },
 "caffe2.python.net_builder._StopGuard": {
  "lineno": 524,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.net_builder._StopGuard.__enter__": {
  "lineno": 530,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_builder._StopGuard.__exit__": {
  "lineno": 535,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_builder._StopGuard.__init__": {
  "lineno": 525,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_builder._StopGuard.has_stopped": {
  "lineno": 541,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_builder_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.net_builder_test.PythonOpStats": {
  "lineno": 15,
  "symbols_in_volume": [
   "threading.Lock"
  ],
  "type": "class"
 },
 "caffe2.python.net_builder_test.TestNetBuilder": {
  "lineno": 82,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.net_builder_test.TestNetBuilder._actual_loop": {
  "lineno": 124,
  "symbols_in_volume": [
   "caffe2.python.net_builder.ops.Add",
   "caffe2.python.net_builder.ops.Const",
   "caffe2.python.net_builder.ops.GE",
   "caffe2.python.net_builder.ops.If",
   "caffe2.python.net_builder.ops.Mul",
   "caffe2.python.net_builder.ops.loop",
   "caffe2.python.task.final_output"
  ],
  "type": "function"
 },
 "caffe2.python.net_builder_test.TestNetBuilder._expected_loop": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_builder_test.TestNetBuilder.test_if_net": {
  "lineno": 249,
  "symbols_in_volume": [
   "caffe2.python.core.Plan",
   "caffe2.python.core.to_execution_step",
   "caffe2.python.net_builder.NetBuilder",
   "caffe2.python.net_builder.ops.Add",
   "caffe2.python.net_builder.ops.Const",
   "caffe2.python.net_builder.ops.EQ",
   "caffe2.python.net_builder.ops.Else",
   "caffe2.python.net_builder.ops.GT",
   "caffe2.python.net_builder.ops.IfNet",
   "caffe2.python.net_builder.ops.LT",
   "caffe2.python.workspace.C.Workspace"
  ],
  "type": "function"
 },
 "caffe2.python.net_builder_test.TestNetBuilder.test_loops": {
  "lineno": 157,
  "symbols_in_volume": [
   "caffe2.python.session.LocalSession",
   "caffe2.python.task.Task"
  ],
  "type": "function"
 },
 "caffe2.python.net_builder_test.TestNetBuilder.test_multi_instance": {
  "lineno": 209,
  "symbols_in_volume": [
   "caffe2.python.net_builder.ops.CountUp",
   "caffe2.python.net_builder.ops.CreateCounter",
   "caffe2.python.net_builder.ops.Mul",
   "caffe2.python.net_builder.ops.RetrieveCount",
   "caffe2.python.net_builder.ops.loop",
   "caffe2.python.net_builder.ops.task_exit",
   "caffe2.python.net_builder.ops.task_init",
   "caffe2.python.net_builder.ops.task_instance_exit",
   "caffe2.python.net_builder.ops.task_instance_init",
   "caffe2.python.session.LocalSession",
   "caffe2.python.task.Task",
   "caffe2.python.task.TaskGroup",
   "caffe2.python.task.final_output"
  ],
  "type": "function"
 },
 "caffe2.python.net_builder_test.TestNetBuilder.test_multi_instance_python_op": {
  "lineno": 191,
  "symbols_in_volume": [
   "caffe2.python.net_builder.ops.Python",
   "caffe2.python.net_builder.ops.loop",
   "caffe2.python.session.LocalSession",
   "caffe2.python.task.Task"
  ],
  "type": "function"
 },
 "caffe2.python.net_builder_test.TestNetBuilder.test_net_multi_use": {
  "lineno": 145,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.net_builder.ops.Const",
   "caffe2.python.net_builder.ops.net",
   "caffe2.python.session.LocalSession",
   "caffe2.python.task.Task",
   "caffe2.python.task.final_output"
  ],
  "type": "function"
 },
 "caffe2.python.net_builder_test.TestNetBuilder.test_ops": {
  "lineno": 83,
  "symbols_in_volume": [
   "caffe2.python.core.Plan",
   "caffe2.python.core.to_execution_step",
   "caffe2.python.net_builder.NetBuilder",
   "caffe2.python.net_builder.ops.Const",
   "caffe2.python.workspace.C.Workspace"
  ],
  "type": "function"
 },
 "caffe2.python.net_builder_test.TestNetBuilder.test_setup": {
  "lineno": 167,
  "symbols_in_volume": [
   "caffe2.python.net_builder.ops.Add",
   "caffe2.python.net_builder.ops.Const",
   "caffe2.python.net_builder.ops.task_exit",
   "caffe2.python.net_builder.ops.task_init",
   "caffe2.python.session.LocalSession",
   "caffe2.python.task.Task",
   "caffe2.python.task.final_output"
  ],
  "type": "function"
 },
 "caffe2.python.net_builder_test.TestNetBuilder.test_while_net": {
  "lineno": 313,
  "symbols_in_volume": [
   "caffe2.python.core.Plan",
   "caffe2.python.core.to_execution_step",
   "caffe2.python.net_builder.NetBuilder",
   "caffe2.python.net_builder.ops.Add",
   "caffe2.python.net_builder.ops.Condition",
   "caffe2.python.net_builder.ops.Const",
   "caffe2.python.net_builder.ops.LT",
   "caffe2.python.net_builder.ops.WhileNet",
   "caffe2.python.workspace.C.Workspace"
  ],
  "type": "function"
 },
 "caffe2.python.net_builder_test._test_if": {
  "lineno": 71,
  "symbols_in_volume": [
   "caffe2.python.net_builder.ops.Const",
   "caffe2.python.net_builder.ops.GT",
   "caffe2.python.net_builder.ops.If",
   "caffe2.python.net_builder.ops.LT",
   "caffe2.python.net_builder.ops.stop"
  ],
  "type": "function"
 },
 "caffe2.python.net_builder_test._test_inner_stop": {
  "lineno": 44,
  "symbols_in_volume": [
   "caffe2.python.net_builder.ops.Const",
   "caffe2.python.net_builder.ops.LT",
   "caffe2.python.net_builder.ops.stop_if"
  ],
  "type": "function"
 },
 "caffe2.python.net_builder_test._test_loop": {
  "lineno": 34,
  "symbols_in_volume": [
   "caffe2.python.net_builder.ops.Add",
   "caffe2.python.net_builder.ops.Const",
   "caffe2.python.net_builder.ops.EQ",
   "caffe2.python.net_builder.ops.loop",
   "caffe2.python.net_builder.ops.stop_if"
  ],
  "type": "function"
 },
 "caffe2.python.net_builder_test._test_outer": {
  "lineno": 48,
  "symbols_in_volume": [
   "caffe2.python.net_builder.ops.Const",
   "caffe2.python.net_builder.ops.stop_guard"
  ],
  "type": "function"
 },
 "caffe2.python.net_builder_test.python_op_builder": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_builder_test.python_op_builder.my_op": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_drawer": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.INFO",
   "logging.getLogger",
   "pydot"
  ],
  "type": "module"
 },
 "caffe2.python.net_drawer.GetBlobNodeProducer": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_drawer.GetBlobNodeProducer.ReallyGetBlobNode": {
  "lineno": 83,
  "symbols_in_volume": [
   "pydot.Node"
  ],
  "type": "function"
 },
 "caffe2.python.net_drawer.GetGraphInJson": {
  "lineno": 265,
  "symbols_in_volume": [
   "collections.defaultdict",
   "json.dump"
  ],
  "type": "function"
 },
 "caffe2.python.net_drawer.GetGraphPngSafe": {
  "lineno": 331,
  "symbols_in_volume": [
   "pydot.Dot"
  ],
  "type": "function"
 },
 "caffe2.python.net_drawer.GetOpNodeProducer": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_drawer.GetOpNodeProducer.ReallyGetOpNode": {
  "lineno": 70,
  "symbols_in_volume": [
   "pydot.Node"
  ],
  "type": "function"
 },
 "caffe2.python.net_drawer.GetOperatorMapForPlan": {
  "lineno": 186,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_drawer.GetPlanGraph": {
  "lineno": 259,
  "symbols_in_volume": [
   "pydot.Dot"
  ],
  "type": "function"
 },
 "caffe2.python.net_drawer.GetPydotGraph": {
  "lineno": 87,
  "symbols_in_volume": [
   "collections.defaultdict",
   "pydot.Dot",
   "pydot.Edge"
  ],
  "type": "function"
 },
 "caffe2.python.net_drawer.GetPydotGraphMinimal": {
  "lineno": 135,
  "symbols_in_volume": [
   "collections.defaultdict",
   "pydot.Dot",
   "pydot.Edge"
  ],
  "type": "function"
 },
 "caffe2.python.net_drawer._draw_nets": {
  "lineno": 196,
  "symbols_in_volume": [
   "pydot.Edge",
   "pydot.Node"
  ],
  "type": "function"
 },
 "caffe2.python.net_drawer._draw_steps": {
  "lineno": 206,
  "symbols_in_volume": [
   "pydot.Edge",
   "pydot.Node"
  ],
  "type": "function"
 },
 "caffe2.python.net_drawer._draw_steps.get_label": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_drawer._draw_steps.substep_edge": {
  "lineno": 221,
  "symbols_in_volume": [
   "pydot.Edge"
  ],
  "type": "function"
 },
 "caffe2.python.net_drawer._escape_label": {
  "lineno": 64,
  "symbols_in_volume": [
   "json.dumps"
  ],
  "type": "function"
 },
 "caffe2.python.net_drawer._rectify_operator_and_name": {
  "lineno": 43,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef"
  ],
  "type": "function"
 },
 "caffe2.python.net_drawer.main": {
  "lineno": 346,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.proto.caffe2_pb2.PlanDef",
   "caffe2.python.utils.GetContentFromProtoString",
   "future.utils.viewitems"
  ],
  "type": "function"
 },
 "caffe2.python.net_printer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.net_printer.Analyzer": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.net_printer.Analyzer.__init__": {
  "lineno": 51,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "caffe2.python.net_printer.Analyzer.define_blob": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_printer.Analyzer.need_blob": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_printer.Analyzer.set_workspace": {
  "lineno": 59,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "copy.copy"
  ],
  "type": "function"
 },
 "caffe2.python.net_printer.Analyzer.workspace": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_printer.Printer": {
  "lineno": 186,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.net_printer.Printer.__init__": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_printer.Text": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.net_printer.Text.__init__": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_printer.Text.__str__": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_printer.Text.add": {
  "lineno": 178,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_printer.Text.context": {
  "lineno": 165,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "caffe2.python.net_printer.Visitor": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.net_printer.Visitor.__call__": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_printer.Visitor.register": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_printer.Visitor.register._register": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_printer._arg_val": {
  "lineno": 208,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_printer._get_step_context": {
  "lineno": 319,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_printer._print_task_output": {
  "lineno": 368,
  "symbols_in_volume": [
   "caffe2.python.task.TaskOutput"
  ],
  "type": "function"
 },
 "caffe2.python.net_printer._sanitize_str": {
  "lineno": 195,
  "symbols_in_volume": [
   "six.binary_type",
   "six.text_type"
  ],
  "type": "function"
 },
 "caffe2.python.net_printer.analyze": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_printer.analyze_job": {
  "lineno": 144,
  "symbols_in_volume": [
   "caffe2.python.checkpoint.Job"
  ],
  "type": "function"
 },
 "caffe2.python.net_printer.analyze_net": {
  "lineno": 90,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.net_printer.analyze_op": {
  "lineno": 82,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.OperatorDef"
  ],
  "type": "function"
 },
 "caffe2.python.net_printer.analyze_step": {
  "lineno": 96,
  "symbols_in_volume": [
   "caffe2.python.core.ExecutionStep",
   "future.utils.viewkeys"
  ],
  "type": "function"
 },
 "caffe2.python.net_printer.analyze_task": {
  "lineno": 121,
  "symbols_in_volume": [
   "caffe2.python.core.Plan",
   "caffe2.python.task.Task",
   "caffe2.python.task.WorkspaceType.GLOBAL"
  ],
  "type": "function"
 },
 "caffe2.python.net_printer.analyze_task_group": {
  "lineno": 137,
  "symbols_in_volume": [
   "caffe2.python.task.TaskGroup"
  ],
  "type": "function"
 },
 "caffe2.python.net_printer.call": {
  "lineno": 250,
  "symbols_in_volume": [
   "itertools.chain"
  ],
  "type": "function"
 },
 "caffe2.python.net_printer.commonprefix": {
  "lineno": 224,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_printer.debug_net": {
  "lineno": 409,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.net_printer.factor_prefix": {
  "lineno": 243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_printer.format_device_option": {
  "lineno": 269,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_printer.format_value": {
  "lineno": 236,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_printer.print_job": {
  "lineno": 388,
  "symbols_in_volume": [
   "caffe2.python.checkpoint.Job"
  ],
  "type": "function"
 },
 "caffe2.python.net_printer.print_net": {
  "lineno": 314,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.net_printer.print_net_def": {
  "lineno": 301,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef"
  ],
  "type": "function"
 },
 "caffe2.python.net_printer.print_op": {
  "lineno": 278,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.OperatorDef"
  ],
  "type": "function"
 },
 "caffe2.python.net_printer.print_step": {
  "lineno": 338,
  "symbols_in_volume": [
   "caffe2.python.core.ExecutionStep"
  ],
  "type": "function"
 },
 "caffe2.python.net_printer.print_task": {
  "lineno": 373,
  "symbols_in_volume": [
   "caffe2.python.task.Task"
  ],
  "type": "function"
 },
 "caffe2.python.net_printer.print_task_group": {
  "lineno": 381,
  "symbols_in_volume": [
   "caffe2.python.task.TaskGroup"
  ],
  "type": "function"
 },
 "caffe2.python.net_printer.to_string": {
  "lineno": 399,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.net_printer_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.net_printer_test.TestNetPrinter": {
  "lineno": 69,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.net_printer_test.TestNetPrinter.test_multiple_definition": {
  "lineno": 91,
  "symbols_in_volume": [
   "caffe2.python.net_builder.ops.Add",
   "caffe2.python.net_builder.ops.Const",
   "caffe2.python.net_printer.analyze",
   "caffe2.python.task.Task",
   "caffe2.python.task.WorkspaceType.GLOBAL"
  ],
  "type": "function"
 },
 "caffe2.python.net_printer_test.TestNetPrinter.test_print": {
  "lineno": 70,
  "symbols_in_volume": [
   "caffe2.python.net_printer.to_string"
  ],
  "type": "function"
 },
 "caffe2.python.net_printer_test.TestNetPrinter.test_undefined_blob": {
  "lineno": 82,
  "symbols_in_volume": [
   "caffe2.python.net_builder.ops.Add",
   "caffe2.python.net_printer.analyze",
   "caffe2.python.task.Task"
  ],
  "type": "function"
 },
 "caffe2.python.net_printer_test.TestNetPrinter.test_valid_job": {
  "lineno": 73,
  "symbols_in_volume": [
   "caffe2.python.net_builder.ops.Add",
   "caffe2.python.net_printer.to_string",
   "caffe2.python.task.Task"
  ],
  "type": "function"
 },
 "caffe2.python.net_printer_test.example_job": {
  "lineno": 61,
  "symbols_in_volume": [
   "caffe2.python.checkpoint.Job"
  ],
  "type": "function"
 },
 "caffe2.python.net_printer_test.example_loop": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.net_builder.ops.Add",
   "caffe2.python.net_builder.ops.Const",
   "caffe2.python.net_builder.ops.GE",
   "caffe2.python.net_builder.ops.If",
   "caffe2.python.net_builder.ops.Mul",
   "caffe2.python.net_builder.ops.loop",
   "caffe2.python.task.Task"
  ],
  "type": "function"
 },
 "caffe2.python.net_printer_test.example_task": {
  "lineno": 32,
  "symbols_in_volume": [
   "caffe2.python.net_builder.ops.Add",
   "caffe2.python.net_builder.ops.Const",
   "caffe2.python.net_builder.ops.LogInfo",
   "caffe2.python.net_builder.ops.task_exit",
   "caffe2.python.net_builder.ops.task_init",
   "caffe2.python.net_builder.ops.task_instance_init",
   "caffe2.python.task.Task",
   "caffe2.python.task.final_output"
  ],
  "type": "function"
 },
 "caffe2.python.nomnigraph": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.Annotation",
   "caffe2.python._import_c_extension.Graph",
   "caffe2.python._import_c_extension.NNMatchGraph",
   "caffe2.python._import_c_extension.NNSubgraph",
   "caffe2.python._import_c_extension.NeuralNetData",
   "caffe2.python._import_c_extension.NeuralNetOperator"
  ],
  "type": "module"
 },
 "caffe2.python.nomnigraph.NNModule": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.nomnigraph.NNModule.__init__": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.python._import_c_extension.NNModule",
   "caffe2.python._import_c_extension.NNModuleFromProtobuf",
   "caffe2.python._import_c_extension.NNModuleFromProtobufDistributed",
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.nomnigraph.NNModule.controlFlow": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.nomnigraph.NNModule.convertToCaffe2Proto": {
  "lineno": 95,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef"
  ],
  "type": "function"
 },
 "caffe2.python.nomnigraph.NNModule.createEdge": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.nomnigraph.NNModule.createNode": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.nomnigraph.NNModule.createUniqueDataNode": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.nomnigraph.NNModule.dataFlow": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.nomnigraph.NNModule.deleteEdge": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.nomnigraph.NNModule.deleteNode": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.nomnigraph.NNModule.deleteSubgraph": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.nomnigraph.NNModule.match": {
  "lineno": 103,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.matchSubgraph"
  ],
  "type": "function"
 },
 "caffe2.python.nomnigraph.NNModule.nodes": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.nomnigraph.NNModule.operators": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.nomnigraph.NNModule.replaceAllUsesWith": {
  "lineno": 80,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.replaceAllUsesWith"
  ],
  "type": "function"
 },
 "caffe2.python.nomnigraph.NNModule.replaceAsConsumer": {
  "lineno": 83,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.replaceAsConsumer"
  ],
  "type": "function"
 },
 "caffe2.python.nomnigraph.NNModule.replaceNode": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.nomnigraph.NNModule.replaceProducer": {
  "lineno": 77,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.replaceProducer"
  ],
  "type": "function"
 },
 "caffe2.python.nomnigraph.NNModule.replaceSubgraph": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.nomnigraph.NNModule.tensors": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.nomnigraph.render": {
  "lineno": 110,
  "symbols_in_volume": [
   "errno.EINVAL",
   "errno.EPIPE",
   "os.X_OK",
   "os.access",
   "os.getenv",
   "os.path.join",
   "os.pathsep",
   "subprocess.PIPE",
   "subprocess.Popen"
  ],
  "type": "function"
 },
 "caffe2.python.nomnigraph_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.nomnigraph_test.TestBindings": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_annotation_basic": {
  "lineno": 371,
  "symbols_in_volume": [
   "caffe2.python.nomnigraph.Annotation"
  ],
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_annotation_device_option": {
  "lineno": 398,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.DeviceOption",
   "caffe2.python.nomnigraph.NNModule",
   "caffe2.python.nomnigraph.NeuralNetOperator"
  ],
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_annotation_from_graph": {
  "lineno": 378,
  "symbols_in_volume": [
   "caffe2.python.nomnigraph.NNModule",
   "caffe2.python.nomnigraph.NeuralNetOperator"
  ],
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_annotation_operator_def": {
  "lineno": 387,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.nomnigraph.NNModule"
  ],
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_convertToProto": {
  "lineno": 273,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.nomnigraph.NNModule"
  ],
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_core_net_controlflow": {
  "lineno": 33,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.nomnigraph.NNModule"
  ],
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_core_net_nn_accessors": {
  "lineno": 44,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.nomnigraph.NNModule"
  ],
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_core_net_simple": {
  "lineno": 23,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.nomnigraph.NNModule"
  ],
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_createUniqueDataNode": {
  "lineno": 258,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.nomnigraph.NNModule",
   "caffe2.python.nomnigraph.Operator"
  ],
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_debug": {
  "lineno": 146,
  "symbols_in_volume": [
   "caffe2.python.nomnigraph.NNModule",
   "caffe2.python.nomnigraph.NeuralNetData",
   "caffe2.python.nomnigraph.NeuralNetOperator",
   "caffe2.python.nomnigraph.render"
  ],
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_delete_node": {
  "lineno": 329,
  "symbols_in_volume": [
   "caffe2.python.nomnigraph.NNModule",
   "caffe2.python.nomnigraph.NeuralNetOperator"
  ],
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_delete_subgraph": {
  "lineno": 209,
  "symbols_in_volume": [
   "caffe2.python.nomnigraph.NNMatchGraph",
   "caffe2.python.nomnigraph.NNModule",
   "caffe2.python.nomnigraph.NeuralNetData",
   "caffe2.python.nomnigraph.NeuralNetOperator"
  ],
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_distributed_annotations": {
  "lineno": 416,
  "symbols_in_volume": [
   "caffe2.python.nomnigraph.Annotation",
   "caffe2.python.nomnigraph.NNModule",
   "caffe2.python.nomnigraph.NeuralNetData",
   "caffe2.python.nomnigraph.NeuralNetOperator"
  ],
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_distributed_device_map": {
  "lineno": 436,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.DeviceOption",
   "caffe2.python.core.Net",
   "caffe2.python.nomnigraph.NNModule"
  ],
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_edges_complex": {
  "lineno": 112,
  "symbols_in_volume": [
   "caffe2.python.nomnigraph.NNModule",
   "caffe2.python.nomnigraph.NeuralNetData",
   "caffe2.python.nomnigraph.NeuralNetOperator",
   "hypothesis.given",
   "hypothesis.strategies.sampled_from",
   "random.getrandbits",
   "random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_edges_simple": {
  "lineno": 87,
  "symbols_in_volume": [
   "caffe2.python.nomnigraph.NNModule",
   "caffe2.python.nomnigraph.NNSubgraph",
   "caffe2.python.nomnigraph.NeuralNetData",
   "caffe2.python.nomnigraph.NeuralNetOperator"
  ],
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_genericGraph": {
  "lineno": 251,
  "symbols_in_volume": [
   "caffe2.python.nomnigraph.Graph",
   "caffe2.python.nomnigraph.render"
  ],
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_has_device_option": {
  "lineno": 408,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.DeviceOption",
   "caffe2.python.nomnigraph.NNModule",
   "caffe2.python.nomnigraph.NeuralNetOperator"
  ],
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_invalid_node": {
  "lineno": 81,
  "symbols_in_volume": [
   "caffe2.python.nomnigraph.NNModule"
  ],
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_match_graph": {
  "lineno": 187,
  "symbols_in_volume": [
   "caffe2.python.nomnigraph.NNMatchGraph",
   "caffe2.python.nomnigraph.NNModule",
   "caffe2.python.nomnigraph.NeuralNetData",
   "caffe2.python.nomnigraph.NeuralNetOperator"
  ],
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_match_graph_node": {
  "lineno": 155,
  "symbols_in_volume": [
   "caffe2.python.nomnigraph.NNMatchGraph",
   "caffe2.python.nomnigraph.NNModule",
   "caffe2.python.nomnigraph.NeuralNetData",
   "caffe2.python.nomnigraph.NeuralNetOperator"
  ],
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_match_graph_node_strict": {
  "lineno": 171,
  "symbols_in_volume": [
   "caffe2.python.nomnigraph.NNMatchGraph",
   "caffe2.python.nomnigraph.NNModule",
   "caffe2.python.nomnigraph.NeuralNetData",
   "caffe2.python.nomnigraph.NeuralNetOperator"
  ],
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_netdef_simple": {
  "lineno": 62,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.nomnigraph.NNModule"
  ],
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_node_interactions": {
  "lineno": 296,
  "symbols_in_volume": [
   "caffe2.python.nomnigraph.Data",
   "caffe2.python.nomnigraph.NNModule",
   "caffe2.python.nomnigraph.Operator"
  ],
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_operatordef_simple": {
  "lineno": 72,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.nomnigraph.NNModule"
  ],
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_replace_all_uses_with": {
  "lineno": 346,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.nomnigraph.NNModule",
   "caffe2.python.nomnigraph.NeuralNetData"
  ],
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_replace_as_consumer": {
  "lineno": 358,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.nomnigraph.NNModule",
   "caffe2.python.nomnigraph.NeuralNetOperator"
  ],
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_replace_producer": {
  "lineno": 335,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.nomnigraph.NNModule",
   "caffe2.python.nomnigraph.NeuralNetOperator"
  ],
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_replace_subraph": {
  "lineno": 229,
  "symbols_in_volume": [
   "caffe2.python.nomnigraph.NNMatchGraph",
   "caffe2.python.nomnigraph.NNModule",
   "caffe2.python.nomnigraph.NeuralNetData",
   "caffe2.python.nomnigraph.NeuralNetOperator"
  ],
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_simple": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.nomnigraph.NNModule",
   "caffe2.python.nomnigraph.NeuralNetData",
   "caffe2.python.nomnigraph.NeuralNetOperator"
  ],
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_traversal": {
  "lineno": 130,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.nomnigraph.NNModule"
  ],
  "type": "function"
 },
 "caffe2.python.nomnigraph_transformations": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.nomnigraph_transformations.transpose_network": {
  "lineno": 9,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.nomnigraph.NeuralNetOperator",
   "caffe2.python.utils.ArgsToDict",
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "caffe2.python.nomnigraph_transformations_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.nomnigraph_transformations_test.TestNomnigraphTransformations": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.nomnigraph_transformations_test.TestNomnigraphTransformations.test_simple_replace": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.nomnigraph.NNModule",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.array",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "caffe2.python.nomnigraph_transformations_test.TestNomnigraphTransformations.test_simple_rewire": {
  "lineno": 36,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.nomnigraph.NNModule",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.array",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "caffe2.python.nomnigraph_transformations_test.TestNomnigraphTransformations.test_transpose_network": {
  "lineno": 82,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.nomnigraph.NNModule",
   "caffe2.python.nomnigraph_transformations.transpose_network",
   "caffe2.python.test_util.randBlobFloat32",
   "caffe2.python.test_util.randBlobsFloat32",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.FetchBlobs",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.random.seed",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "caffe2.python.normalizer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.normalizer.BatchNormalizer": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.normalizer.BatchNormalizer.__init__": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.normalizer.BatchNormalizer._run": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.normalizer.LayerNormalizer": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.normalizer.LayerNormalizer.__init__": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.normalizer.LayerNormalizer._run": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.normalizer.Normalizer": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.normalizer.Normalizer.__call__": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.normalizer.Normalizer.__init__": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.normalizer.Normalizer._run": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.normalizer_context": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.normalizer_context.NormalizerContext": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.context.define_context",
   "caffe2.python.modifier_context.ModifierContext"
  ],
  "type": "class"
 },
 "caffe2.python.normalizer_context.NormalizerContext.get_normalizer": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.normalizer_context.NormalizerContext.has_normalizer": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.normalizer_context.UseNormalizer": {
  "lineno": 28,
  "symbols_in_volume": [
   "caffe2.python.modifier_context.UseModifierBase"
  ],
  "type": "class"
 },
 "caffe2.python.normalizer_context.UseNormalizer._context_class": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.normalizer_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.normalizer_test.TestNormalizerContext": {
  "lineno": 10,
  "symbols_in_volume": [
   "caffe2.python.layer_test_util.LayersTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.normalizer_test.TestNormalizerContext.test_normalizer_context": {
  "lineno": 11,
  "symbols_in_volume": [
   "caffe2.python.normalizer.BatchNormalizer",
   "caffe2.python.normalizer_context.NormalizerContext.current",
   "caffe2.python.normalizer_context.UseNormalizer"
  ],
  "type": "function"
 },
 "caffe2.python.numa_benchmark": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.core.GlobalInit"
  ],
  "type": "module"
 },
 "caffe2.python.numa_benchmark.build_net": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.proto.caffe2_pb2.DeviceOption",
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.numa_benchmark.main": {
  "lineno": 36,
  "symbols_in_volume": [
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.GetNumNUMANodes",
   "caffe2.python.workspace.IsNUMAEnabled",
   "caffe2.python.workspace.RunNet",
   "time.time"
  ],
  "type": "function"
 },
 "caffe2.python.numa_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.core.GlobalInit",
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.numa_test.NUMATest": {
  "lineno": 39,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase",
   "caffe2.python.workspace.GetNumNUMANodes",
   "caffe2.python.workspace.IsNUMAEnabled",
   "caffe2.python.workspace.has_gpu_support",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.numa_test.NUMATest.test_numa": {
  "lineno": 43,
  "symbols_in_volume": [
   "caffe2.python.workspace.GetBlobNUMANode",
   "caffe2.python.workspace.RunNetOnce"
  ],
  "type": "function"
 },
 "caffe2.python.numa_test.build_test_net": {
  "lineno": 12,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.proto.caffe2_pb2.CUDA",
   "caffe2.proto.caffe2_pb2.DeviceOption",
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.observer_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.observer_test.TestObservers": {
  "lineno": 15,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.observer_test.TestObservers.enable_rnn_executor": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.observer_test.TestObservers.setUp": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.core.GlobalInit",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.observer_test.TestObservers.testObserver": {
  "lineno": 30,
  "symbols_in_volume": [
   "caffe2.python.workspace.RunNet"
  ],
  "type": "function"
 },
 "caffe2.python.observer_test.TestObservers.test_observer_rnn_executor": {
  "lineno": 38,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.rnn_cell.LSTM",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNet",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand",
   "numpy.random.seed",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.onnx": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.onnx.backend": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "module"
 },
 "caffe2.python.onnx.backend.Caffe2Backend": {
  "lineno": 136,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.DummyName",
   "onnx.backend.base.Backend"
  ],
  "type": "class"
 },
 "caffe2.python.onnx.backend.Caffe2Backend._all_names_in_graph": {
  "lineno": 840,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend._common_onnx_node_to_caffe2_op": {
  "lineno": 787,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.OperatorDef",
   "caffe2.python.core.IsOperator",
   "caffe2.python.utils.MakeArgument"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend._common_onnx_node_to_caffe2_op.kmap": {
  "lineno": 818,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend._create_control_op": {
  "lineno": 538,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend._create_if": {
  "lineno": 557,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend._create_loop": {
  "lineno": 587,
  "symbols_in_volume": [
   "caffe2.python.utils.MakeArgument"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend._create_rnn_variant": {
  "lineno": 389,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.model_helper.ModelHelper",
   "itertools.chain"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend._create_rnn_variant.make_cell": {
  "lineno": 480,
  "symbols_in_volume": [
   "caffe2.python.rnn_cell.LSTM"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend._create_rnn_variant.make_rnn": {
  "lineno": 483,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend._create_rnn_variant.reform": {
  "lineno": 470,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend._create_tensor_filling_op": {
  "lineno": 255,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.OperatorDef",
   "onnx.TensorProto.BOOL",
   "onnx.TensorProto.DOUBLE",
   "onnx.TensorProto.FLOAT",
   "onnx.TensorProto.INT16",
   "onnx.TensorProto.INT32",
   "onnx.TensorProto.INT64",
   "onnx.TensorProto.INT8",
   "onnx.TensorProto.STRING",
   "onnx.TensorProto.UINT16",
   "onnx.TensorProto.UINT32",
   "onnx.TensorProto.UINT8"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend._create_tensor_filling_op.tensor2list": {
  "lineno": 269,
  "symbols_in_volume": [
   "onnx.numpy_helper.to_array"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend._direct_initialize_inputs": {
  "lineno": 645,
  "symbols_in_volume": [
   "numpy.ones",
   "onnx.mapping.TENSOR_TYPE_TO_NP_TYPE"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend._direct_initialize_parameters": {
  "lineno": 640,
  "symbols_in_volume": [
   "onnx.numpy_helper.to_array"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend._external_value_resolution_pass": {
  "lineno": 632,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend._graph_to_net": {
  "lineno": 853,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend._make_rnn_direction": {
  "lineno": 320,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.INT32"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend._onnx_model_to_caffe2_net": {
  "lineno": 872,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "onnx.backend.base.Device",
   "onnx.utils.polish_model",
   "sys.stderr"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend._onnx_node_to_caffe2_op": {
  "lineno": 740,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.OperatorDef",
   "caffe2.python._import_c_extension.Caffe2Backend",
   "caffe2.python.compatibility.container_abcs.Iterable",
   "itertools.chain"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend._remove_ssa": {
  "lineno": 547,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend._rnn_reform_weights": {
  "lineno": 308,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend._substitute_raw_value": {
  "lineno": 611,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend._visit_and_substitute_raw_values": {
  "lineno": 619,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend.dummy_name": {
  "lineno": 210,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend.is_compatible": {
  "lineno": 932,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend.onnx_graph_to_caffe2_net": {
  "lineno": 919,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend.optimize_onnx": {
  "lineno": 656,
  "symbols_in_volume": [
   "onnx.optimizer.optimize"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend.prepare": {
  "lineno": 683,
  "symbols_in_volume": [
   "caffe2.python.onnx.backend_rep.Caffe2Rep",
   "caffe2.python.onnx.workspace.Workspace",
   "onnx.backend.base.Device",
   "onnx.shape_inference.infer_shapes",
   "warnings.warn"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend.prepare_zip_archive": {
  "lineno": 669,
  "symbols_in_volume": [
   "onnx.load",
   "zipfile.ZipFile"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend.run_node": {
  "lineno": 217,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.OperatorDef",
   "caffe2.python._import_c_extension.Caffe2Backend",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.onnx.workspace.Workspace",
   "onnx.backend.base.Device",
   "onnx.backend.base.namedtupledict",
   "onnx.helper.make_tensor_value_info",
   "onnx.mapping.NP_TYPE_TO_TENSOR_TYPE"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend.supports_device": {
  "lineno": 923,
  "symbols_in_volume": [
   "caffe2.python.core.IsGPUDeviceType",
   "caffe2.python.workspace.has_gpu_support",
   "onnx.backend.base.Device",
   "onnx.backend.base.DeviceType.CPU"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.backend.OnnxAttributes": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.onnx.backend.OnnxAttributes.caffe2": {
  "lineno": 75,
  "symbols_in_volume": [
   "caffe2.python.utils.MakeArgument"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.backend.OnnxAttributes.from_onnx": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.onnx.backend.OnnxNode": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.onnx.backend.OnnxNode.__init__": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.onnx.backend.convertAttributeProto": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.onnx.backend.force_unicode": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.onnx.backend.get_device_option": {
  "lineno": 57,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.workspace.GpuDeviceType",
   "onnx.backend.base.DeviceType.CPU",
   "onnx.backend.base.DeviceType.CUDA"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.backend_cpp_rep": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.onnx.backend_cpp_rep.Caffe2CppRep": {
  "lineno": 13,
  "symbols_in_volume": [
   "onnx.backend.base.BackendRep"
  ],
  "type": "class"
 },
 "caffe2.python.onnx.backend_cpp_rep.Caffe2CppRep.__init__": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.onnx.backend_cpp_rep.Caffe2CppRep.external_inputs": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.onnx.backend_cpp_rep.Caffe2CppRep.external_outputs": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.onnx.backend_cpp_rep.Caffe2CppRep.init_net": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.onnx.backend_cpp_rep.Caffe2CppRep.pred_net": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.onnx.backend_cpp_rep.Caffe2CppRep.run": {
  "lineno": 33,
  "symbols_in_volume": [
   "onnx.backend.base.namedtupledict"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.backend_rep": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.onnx.backend_rep.Caffe2Rep": {
  "lineno": 12,
  "symbols_in_volume": [
   "onnx.backend.base.BackendRep"
  ],
  "type": "class"
 },
 "caffe2.python.onnx.backend_rep.Caffe2Rep.__init__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.onnx.backend_rep.Caffe2Rep._name_scope": {
  "lineno": 24,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CUDA"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.backend_rep.Caffe2Rep.run": {
  "lineno": 30,
  "symbols_in_volume": [
   "caffe2.python.core.DeviceScope",
   "caffe2.python.core.NameScope",
   "onnx.backend.base.namedtupledict"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.bin": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.onnx.bin.conversion": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.onnx.bin.conversion.caffe2_to_onnx": {
  "lineno": 19,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.python.onnx.frontend.caffe2_net_to_onnx_model",
   "click.BadParameter",
   "click.File",
   "click.argument",
   "click.command",
   "click.option",
   "json.loads"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.bin.conversion.onnx_to_caffe2": {
  "lineno": 69,
  "symbols_in_volume": [
   "caffe2.python.onnx.backend.Caffe2Backend.onnx_graph_to_caffe2_net",
   "click.File",
   "click.argument",
   "click.command",
   "click.option",
   "onnx.ModelProto"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.error": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.onnx.error.BaseException": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.onnx.error.Unsupported": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.onnx.frontend": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.INFO",
   "logging.basicConfig",
   "logging.getLogger"
  ],
  "type": "module"
 },
 "caffe2.python.onnx.frontend.Caffe2Frontend": {
  "lineno": 36,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.DummyName"
  ],
  "type": "class"
 },
 "caffe2.python.onnx.frontend.Caffe2Frontend._all_names_in_net": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.onnx.frontend.Caffe2Frontend._common_caffe2_arg_to_onnx_attr": {
  "lineno": 85,
  "symbols_in_volume": [
   "onnx.helper.make_attribute"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.frontend.Caffe2Frontend._common_caffe2_op_to_onnx_node": {
  "lineno": 120,
  "symbols_in_volume": [
   "onnx.NodeProto"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.frontend.Caffe2Frontend._extract_value_info": {
  "lineno": 176,
  "symbols_in_volume": [
   "onnx.helper.make_tensor_value_info"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.frontend.Caffe2Frontend._filter_fake_init": {
  "lineno": 294,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.frontend.Caffe2Frontend._ssa_rewrite": {
  "lineno": 309,
  "symbols_in_volume": [
   "caffe2.python.core.get_ssa",
   "re.match"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.frontend.Caffe2Frontend._ssa_rewrite.ssa_name": {
  "lineno": 311,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.onnx.frontend.Caffe2Frontend.caffe2_arg_to_onnx_attr": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.onnx.frontend.Caffe2Frontend.caffe2_init_net_to_initializer": {
  "lineno": 284,
  "symbols_in_volume": [
   "caffe2.python.onnx.helper.c2_native_run_net",
   "onnx.numpy_helper.from_array"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.frontend.Caffe2Frontend.caffe2_net_to_onnx_graph": {
  "lineno": 183,
  "symbols_in_volume": [
   "caffe2.python.onnx.helper.c2_native_run_net",
   "itertools.chain",
   "numpy.random.randn",
   "onnx.GraphProto",
   "onnx.helper.make_tensor_value_info",
   "onnx.mapping.NP_TYPE_TO_TENSOR_TYPE",
   "onnx.mapping.TENSOR_TYPE_TO_NP_TYPE"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.frontend.Caffe2Frontend.caffe2_net_to_onnx_model": {
  "lineno": 345,
  "symbols_in_volume": [
   "onnx.OperatorSetIdProto",
   "onnx.checker.check_model",
   "onnx.helper.make_model"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.frontend.Caffe2Frontend.caffe2_op_to_onnx_node": {
  "lineno": 136,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.export_to_onnx",
   "caffe2.python._import_c_extension.support_onnx_export",
   "caffe2.python.compatibility.container_abcs.Iterable",
   "onnx.NodeProto",
   "onnx.TensorProto"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.frontend.Caffe2Frontend.dummy_name": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.onnx.frontend.Caffe2Frontend.ssa_rewrite": {
  "lineno": 305,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.onnx.helper": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "caffe2.python.onnx.helper.benchmark_caffe2_model": {
  "lineno": 92,
  "symbols_in_volume": [
   "caffe2.python.onnx.workspace.Workspace"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.helper.benchmark_pytorch_model": {
  "lineno": 106,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.helper.c2_native_run_net": {
  "lineno": 39,
  "symbols_in_volume": [
   "caffe2.python.onnx.workspace.Workspace",
   "onnx.backend.base.namedtupledict"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.helper.c2_native_run_op": {
  "lineno": 22,
  "symbols_in_volume": [
   "caffe2.python.onnx.workspace.Workspace",
   "onnx.backend.base.namedtupledict"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.helper.load_caffe2_net": {
  "lineno": 77,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.helper.save_caffe2_net": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.onnx.onnxifi": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.onnx.onnxifi.onnxifi_caffe2_net": {
  "lineno": 19,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.proto.caffe2_pb2.TensorBoundShape",
   "caffe2.proto.caffe2_pb2.TensorBoundShape.BATCH",
   "caffe2.proto.caffe2_pb2.TensorBoundShape.CONSTANT",
   "caffe2.proto.caffe2_pb2.TensorBoundShapes",
   "caffe2.python._import_c_extension.onnxifi"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.test_onnxifi": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.onnx.test_onnxifi.OnnxifiTest": {
  "lineno": 38,
  "symbols_in_volume": [
   "caffe2.python.onnx.tests.test_utils.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.onnx.test_onnxifi.OnnxifiTest.test_conv_graph": {
  "lineno": 64,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.array",
   "numpy.float32",
   "numpy.testing.assert_almost_equal",
   "onnx.TensorProto.FLOAT",
   "onnx.helper.make_graph",
   "onnx.helper.make_model",
   "onnx.helper.make_node",
   "onnx.helper.make_tensor_value_info",
   "unittest.skip"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.test_onnxifi.OnnxifiTest.test_relu_graph": {
  "lineno": 39,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.float32",
   "numpy.maximum",
   "numpy.random.randn",
   "numpy.testing.assert_almost_equal",
   "onnx.TensorProto.FLOAT",
   "onnx.helper.make_graph",
   "onnx.helper.make_model",
   "onnx.helper.make_node",
   "onnx.helper.make_tensor_value_info",
   "unittest.skip"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.test_onnxifi.OnnxifiTransformTest": {
  "lineno": 111,
  "symbols_in_volume": [
   "caffe2.python.onnx.tests.test_utils.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.onnx.test_onnxifi.OnnxifiTransformTest._add_head_tail": {
  "lineno": 115,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.proto.caffe2_pb2.OperatorDef"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.test_onnxifi.OnnxifiTransformTest.setUp": {
  "lineno": 112,
  "symbols_in_volume": [
   "caffe2.python.models.download.ModelDownloader"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.test_onnxifi.OnnxifiTransformTest.test_resnet50_core": {
  "lineno": 139,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.onnx.onnxifi.onnxifi_caffe2_net",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNet",
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.python.workspace.SwitchWorkspace",
   "numpy.float32",
   "numpy.random.randn",
   "numpy.testing.assert_allclose",
   "onnx.backend.base.namedtupledict",
   "time.time",
   "unittest.skip"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.test_onnxifi._print_net": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.onnx.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.onnx.tests.c2_ref_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2Basic": {
  "lineno": 33,
  "symbols_in_volume": [
   "caffe2.python.onnx.tests.test_utils.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2Basic.test_cast": {
  "lineno": 738,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.proto.caffe2_pb2.TensorProto.DOUBLE",
   "caffe2.proto.caffe2_pb2.TensorProto.INT8",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.onnx.backend.run_model",
   "caffe2.python.onnx.frontend.caffe2_net_to_onnx_model",
   "caffe2.python.onnx.helper.c2_native_run_net",
   "numpy.float32",
   "numpy.random.randn",
   "onnx.mapping.NP_TYPE_TO_TENSOR_TYPE"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2Basic.test_check_arguments": {
  "lineno": 40,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.Caffe2Backend",
   "onnx.helper.make_node",
   "six.assertRaisesRegex"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2Basic.test_concat": {
  "lineno": 677,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.onnx.backend.run_model",
   "caffe2.python.onnx.frontend.caffe2_net_to_onnx_model",
   "caffe2.python.onnx.helper.c2_native_run_net",
   "numpy.float32",
   "numpy.random.randn",
   "onnx.mapping.NP_TYPE_TO_TENSOR_TYPE"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2Basic.test_dummy_name": {
  "lineno": 34,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.DummyName"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2Basic.test_dynamicslice_3inputs_graph": {
  "lineno": 52,
  "symbols_in_volume": [
   "caffe2.python.onnx.backend.prepare",
   "numpy.array",
   "onnx.TensorProto.FLOAT",
   "onnx.TensorProto.INT32",
   "onnx.helper.make_graph",
   "onnx.helper.make_model",
   "onnx.helper.make_node",
   "onnx.helper.make_tensor_value_info"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2Basic.test_dynamicslice_4inputs_graph": {
  "lineno": 72,
  "symbols_in_volume": [
   "caffe2.python.onnx.backend.prepare",
   "numpy.array",
   "onnx.TensorProto.FLOAT",
   "onnx.TensorProto.INT32",
   "onnx.helper.make_graph",
   "onnx.helper.make_model",
   "onnx.helper.make_node",
   "onnx.helper.make_tensor_value_info"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2Basic.test_elementwiselinear": {
  "lineno": 111,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.onnx.backend.run_model",
   "caffe2.python.onnx.frontend.caffe2_net_to_onnx_model",
   "caffe2.python.onnx.helper.c2_native_run_net",
   "numpy.float32",
   "numpy.random.randn",
   "onnx.mapping.NP_TYPE_TO_TENSOR_TYPE"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2Basic.test_fc": {
  "lineno": 261,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.onnx.backend.run_model",
   "caffe2.python.onnx.frontend.caffe2_net_to_onnx_model",
   "caffe2.python.onnx.helper.c2_native_run_net",
   "numpy.float32",
   "numpy.random.randn",
   "numpy.zeros",
   "onnx.mapping.NP_TYPE_TO_TENSOR_TYPE"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2Basic.test_gemm": {
  "lineno": 294,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension",
   "caffe2.python.onnx.backend.run_node",
   "numpy.dot",
   "numpy.float32",
   "numpy.random.randn",
   "numpy.random.random",
   "numpy.testing.assert_almost_equal",
   "numpy.transpose",
   "onnx.helper.make_node"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2Basic.test_gemm_conversion": {
  "lineno": 433,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.OperatorDef",
   "caffe2.python._import_c_extension.Caffe2Backend",
   "onnx.TensorProto.FLOAT",
   "onnx.helper.make_node",
   "onnx.helper.make_tensor_value_info"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2Basic.test_initializer": {
  "lineno": 143,
  "symbols_in_volume": [
   "caffe2.python.onnx.backend.prepare",
   "numpy.array",
   "numpy.float32",
   "numpy.tanh",
   "numpy.testing.assert_almost_equal",
   "onnx.TensorProto.FLOAT",
   "onnx.helper.make_graph",
   "onnx.helper.make_model",
   "onnx.helper.make_node",
   "onnx.helper.make_tensor",
   "onnx.helper.make_tensor_value_info"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2Basic.test_initializer.sigmoid": {
  "lineno": 169,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2Basic.test_mergedim": {
  "lineno": 582,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.onnx.backend.run_model",
   "caffe2.python.onnx.frontend.caffe2_net_to_onnx_model",
   "caffe2.python.onnx.helper.c2_native_run_net",
   "numpy.float32",
   "numpy.random.randn",
   "onnx.mapping.NP_TYPE_TO_TENSOR_TYPE"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2Basic.test_reducemean": {
  "lineno": 177,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.onnx.backend.run_model",
   "caffe2.python.onnx.frontend.caffe2_net_to_onnx_model",
   "caffe2.python.onnx.helper.c2_native_run_net",
   "numpy.float32",
   "numpy.random.randn",
   "onnx.mapping.NP_TYPE_TO_TENSOR_TYPE"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2Basic.test_relu_graph": {
  "lineno": 92,
  "symbols_in_volume": [
   "caffe2.python.onnx.backend.prepare",
   "caffe2.python.onnx.backend.run_node",
   "numpy.clip",
   "numpy.float32",
   "numpy.inf",
   "numpy.random.randn",
   "numpy.testing.assert_almost_equal",
   "onnx.TensorProto.FLOAT",
   "onnx.helper.make_graph",
   "onnx.helper.make_model",
   "onnx.helper.make_node",
   "onnx.helper.make_tensor_value_info"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2Basic.test_slice": {
  "lineno": 707,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.onnx.backend.run_model",
   "caffe2.python.onnx.frontend.caffe2_net_to_onnx_model",
   "caffe2.python.onnx.helper.c2_native_run_net",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.randn",
   "onnx.mapping.NP_TYPE_TO_TENSOR_TYPE"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2Basic.test_tensor_filling_ops": {
  "lineno": 609,
  "symbols_in_volume": [
   "caffe2.python.onnx.backend.Caffe2Backend._create_tensor_filling_op",
   "caffe2.python.onnx.helper.c2_native_run_op",
   "numpy.random.randn",
   "numpy.testing.assert_almost_equal",
   "onnx.TensorProto.BOOL",
   "onnx.TensorProto.DOUBLE",
   "onnx.TensorProto.FLOAT",
   "onnx.TensorProto.INT16",
   "onnx.TensorProto.INT32",
   "onnx.TensorProto.INT64",
   "onnx.TensorProto.INT8",
   "onnx.TensorProto.UINT16",
   "onnx.TensorProto.UINT32",
   "onnx.TensorProto.UINT8",
   "onnx.helper.make_tensor",
   "onnx.mapping.TENSOR_TYPE_TO_NP_TYPE"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2Basic.test_tensor_filling_ops_c_backend": {
  "lineno": 642,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.OperatorDef",
   "caffe2.python._import_c_extension.Caffe2Backend",
   "caffe2.python.onnx.helper.c2_native_run_op",
   "numpy.random.randn",
   "numpy.testing.assert_almost_equal",
   "onnx.TensorProto.BOOL",
   "onnx.TensorProto.DOUBLE",
   "onnx.TensorProto.FLOAT",
   "onnx.TensorProto.INT16",
   "onnx.TensorProto.INT32",
   "onnx.TensorProto.INT64",
   "onnx.TensorProto.INT8",
   "onnx.TensorProto.UINT16",
   "onnx.TensorProto.UINT32",
   "onnx.TensorProto.UINT8",
   "onnx.helper.make_tensor",
   "onnx.mapping.TENSOR_TYPE_TO_NP_TYPE"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2Basic.test_upsample": {
  "lineno": 230,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.onnx.backend.run_model",
   "caffe2.python.onnx.frontend.caffe2_net_to_onnx_model",
   "caffe2.python.onnx.helper.c2_native_run_net",
   "numpy.float32",
   "numpy.random.randn",
   "onnx.mapping.NP_TYPE_TO_TENSOR_TYPE"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2End2End": {
  "lineno": 769,
  "symbols_in_volume": [
   "caffe2.python.onnx.tests.test_utils.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2End2End._test_net": {
  "lineno": 773,
  "symbols_in_volume": [
   "caffe2.python.onnx.backend.prepare",
   "caffe2.python.onnx.frontend.caffe2_net_to_onnx_model",
   "caffe2.python.onnx.helper.c2_native_run_net",
   "numpy.float32",
   "numpy.random.randn",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2End2End.setUp": {
  "lineno": 770,
  "symbols_in_volume": [
   "caffe2.python.models.download.ModelDownloader"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2End2End.test_alexnet": {
  "lineno": 804,
  "symbols_in_volume": [
   "os.environ.get",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2End2End.test_bvlc_googlenet": {
  "lineno": 852,
  "symbols_in_volume": [
   "os.environ.get",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2End2End.test_bvlc_reference_caffenet": {
  "lineno": 858,
  "symbols_in_volume": [
   "os.environ.get",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2End2End.test_bvlc_reference_rcnn_ilsvrc13": {
  "lineno": 864,
  "symbols_in_volume": [
   "os.environ.get",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2End2End.test_densenet121": {
  "lineno": 846,
  "symbols_in_volume": [
   "os.environ.get",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2End2End.test_inception_v1": {
  "lineno": 828,
  "symbols_in_volume": [
   "os.environ.get",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2End2End.test_inception_v2": {
  "lineno": 834,
  "symbols_in_volume": [
   "os.environ.get",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2End2End.test_resnet50": {
  "lineno": 810,
  "symbols_in_volume": [
   "os.environ.get",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2End2End.test_squeezenet": {
  "lineno": 840,
  "symbols_in_volume": [
   "os.environ.get",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2End2End.test_vgg16": {
  "lineno": 816,
  "symbols_in_volume": [
   "os.environ.get",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2End2End.test_zfnet": {
  "lineno": 822,
  "symbols_in_volume": [
   "os.environ.get",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.tests.conversion_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.onnx.tests.conversion_test.TestConversion": {
  "lineno": 29,
  "symbols_in_volume": [
   "caffe2.python.onnx.tests.test_utils.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.onnx.tests.conversion_test.TestConversion._make_fake_if_op": {
  "lineno": 173,
  "symbols_in_volume": [
   "onnx.TensorProto.BOOL",
   "onnx.TensorProto.FLOAT",
   "onnx.helper.make_graph",
   "onnx.helper.make_node",
   "onnx.helper.make_tensor",
   "onnx.helper.make_tensor_value_info"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.tests.conversion_test.TestConversion._make_fake_loop_op": {
  "lineno": 219,
  "symbols_in_volume": [
   "onnx.TensorProto.BOOL",
   "onnx.TensorProto.INT32",
   "onnx.TensorProto.INT64",
   "onnx.helper.make_graph",
   "onnx.helper.make_node",
   "onnx.helper.make_tensor",
   "onnx.helper.make_tensor_value_info"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.tests.conversion_test.TestConversion._run_command": {
  "lineno": 30,
  "symbols_in_volume": [
   "click.testing.CliRunner",
   "textwrap.dedent",
   "traceback.format_exception"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.tests.conversion_test.TestConversion.test_caffe2_to_onnx": {
  "lineno": 43,
  "symbols_in_volume": [
   "caffe2.python.brew.relu",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.onnx.bin.conversion.caffe2_to_onnx",
   "numpy.zeros",
   "onnx.ModelProto",
   "tempfile.NamedTemporaryFile"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.tests.conversion_test.TestConversion.test_caffe2_to_onnx_value_info": {
  "lineno": 75,
  "symbols_in_volume": [
   "caffe2.python.brew.relu",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.onnx.bin.conversion.caffe2_to_onnx",
   "json.dumps",
   "onnx.ModelProto",
   "onnx.TensorProto.FLOAT",
   "six.assertRaisesRegex",
   "tempfile.NamedTemporaryFile"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.tests.conversion_test.TestConversion.test_convert_end2end": {
  "lineno": 273,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.onnx.backend.run_model",
   "caffe2.python.onnx.bin.conversion.caffe2_to_onnx",
   "caffe2.python.onnx.bin.conversion.onnx_to_caffe2",
   "caffe2.python.onnx.helper.c2_native_run_net",
   "json.dumps",
   "numpy.float32",
   "numpy.matmul",
   "numpy.random.randn",
   "numpy.testing.assert_almost_equal",
   "onnx.ModelProto",
   "onnx.TensorProto.FLOAT",
   "tempfile.NamedTemporaryFile",
   "unittest.skip"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.tests.conversion_test.TestConversion.test_onnx_to_caffe2": {
  "lineno": 102,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.python.onnx.bin.conversion.onnx_to_caffe2",
   "numpy.zeros",
   "onnx.TensorProto.FLOAT",
   "onnx.helper.make_graph",
   "onnx.helper.make_model",
   "onnx.helper.make_node",
   "onnx.helper.make_tensor",
   "onnx.helper.make_tensor_value_info",
   "tempfile.NamedTemporaryFile"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.tests.conversion_test.TestConversion.test_onnx_to_caffe2_if": {
  "lineno": 190,
  "symbols_in_volume": [
   "caffe2.python.onnx.backend.prepare",
   "numpy.float32",
   "numpy.matmul",
   "numpy.random.rand",
   "numpy.testing.assert_allclose",
   "onnx.TensorProto.FLOAT",
   "onnx.helper.make_graph",
   "onnx.helper.make_model",
   "onnx.helper.make_node",
   "onnx.helper.make_opsetid",
   "onnx.helper.make_tensor",
   "onnx.helper.make_tensor_value_info"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.tests.conversion_test.TestConversion.test_onnx_to_caffe2_loop": {
  "lineno": 244,
  "symbols_in_volume": [
   "caffe2.python.onnx.backend.prepare",
   "numpy.float32",
   "numpy.matmul",
   "numpy.random.rand",
   "numpy.testing.assert_allclose",
   "onnx.TensorProto.FLOAT",
   "onnx.helper.make_graph",
   "onnx.helper.make_model",
   "onnx.helper.make_node",
   "onnx.helper.make_tensor",
   "onnx.helper.make_tensor_value_info"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.tests.conversion_test.TestConversion.test_onnx_to_caffe2_zipfile": {
  "lineno": 142,
  "symbols_in_volume": [
   "caffe2.python.onnx.backend.prepare_zip_archive",
   "numpy.float32",
   "numpy.matmul",
   "numpy.random.rand",
   "numpy.testing.assert_allclose",
   "onnx.TensorProto.FLOAT",
   "onnx.helper.make_graph",
   "onnx.helper.make_model",
   "onnx.helper.make_node",
   "onnx.helper.make_tensor",
   "onnx.helper.make_tensor_value_info",
   "tempfile.NamedTemporaryFile",
   "zipfile.ZipFile"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.tests.helper_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.onnx.tests.helper_test.TestCaffe2Basic": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.onnx.tests.test_utils.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.onnx.tests.helper_test.TestCaffe2Basic.test_dummy_name": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.DummyName"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.tests.onnx_backend_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.core.SetEnginePref",
   "caffe2.python.onnx.backend",
   "os.environ",
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.onnx.tests.ssa_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.onnx.tests.ssa_test.TestFrontendSSAConversion": {
  "lineno": 21,
  "symbols_in_volume": [
   "caffe2.python.onnx.tests.test_utils.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.onnx.tests.ssa_test.TestFrontendSSAConversion.test_idempotence": {
  "lineno": 110,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.onnx.frontend.Caffe2Frontend._ssa_rewrite",
   "copy.deepcopy",
   "onnx.TensorProto.FLOAT"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.tests.ssa_test.TestFrontendSSAConversion.test_ssa": {
  "lineno": 22,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.onnx.frontend.Caffe2Frontend._ssa_rewrite",
   "caffe2.python.onnx.helper.c2_native_run_net",
   "numpy.float32",
   "numpy.random.randn",
   "onnx.TensorProto.FLOAT"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.tests.test_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.onnx.tests.test_utils.TestCase": {
  "lineno": 14,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.onnx.tests.test_utils.TestCase.add_test_case": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.onnx.tests.test_utils.TestCase.assertSameOutputs": {
  "lineno": 19,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.tests.test_utils.TestCase.setUp": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.workspace": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.onnx.workspace.Workspace": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.onnx.workspace.Workspace.__del__": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.onnx.workspace.Workspace.__getattr__": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.onnx.workspace.Workspace.__getattr__.f": {
  "lineno": 61,
  "symbols_in_volume": [
   "caffe2.python.workspace"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.workspace.Workspace.__init__": {
  "lineno": 53,
  "symbols_in_volume": [
   "uuid.uuid4"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.workspace._WorkspaceCtx": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.onnx.workspace._WorkspaceCtx.__enter__": {
  "lineno": 21,
  "symbols_in_volume": [
   "caffe2.python.workspace.CurrentWorkspace",
   "caffe2.python.workspace.SwitchWorkspace"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.workspace._WorkspaceCtx.__exit__": {
  "lineno": 25,
  "symbols_in_volume": [
   "caffe2.python.workspace.SwitchWorkspace"
  ],
  "type": "function"
 },
 "caffe2.python.onnx.workspace._WorkspaceCtx.__init__": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_fp_exceptions_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_fp_exceptions_test.OperatorFPExceptionsTest": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_fp_exceptions_test.OperatorFPExceptionsTest.test_fp_exception_divbyzero": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.python.workspace.blobs",
   "numpy.array",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_fp_exceptions_test.setThrowIfFpExceptions": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.core.GlobalInit"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.activation_ops_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.activation_ops_test.TestActivations": {
  "lineno": 21,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.activation_ops_test.TestActivations.test_elu": {
  "lineno": 128,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.sampled_from",
   "numpy.sign"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.activation_ops_test.TestActivations.test_elu.elu_ref": {
  "lineno": 141,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.activation_ops_test.TestActivations.test_gelu": {
  "lineno": 243,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.activation_ops_test.TestActivations.test_gelu.gelu_ref": {
  "lineno": 255,
  "symbols_in_volume": [
   "scipy.stats.norm.cdf"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.activation_ops_test.TestActivations.test_leaky_relu": {
  "lineno": 198,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.strategies.booleans",
   "numpy.sign"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.activation_ops_test.TestActivations.test_leaky_relu.leaky_relu_ref": {
  "lineno": 207,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.activation_ops_test.TestActivations.test_leaky_relu_default": {
  "lineno": 222,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "numpy.sign"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.activation_ops_test.TestActivations.test_leaky_relu_default.leaky_relu_ref": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.activation_ops_test.TestActivations.test_prelu": {
  "lineno": 154,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.randn",
   "numpy.random.seed",
   "numpy.sign"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.activation_ops_test.TestActivations.test_prelu.prelu_ref": {
  "lineno": 174,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.activation_ops_test.TestActivations.test_relu": {
  "lineno": 22,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.mkl_test_util.gcs",
   "caffe2.python.mkl_test_util.mkl_do",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.sampled_from",
   "numpy.sign"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.activation_ops_test.TestActivations.test_relu.relu_ref": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.maximum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.activation_ops_test.TestActivations.test_relu_empty_input": {
  "lineno": 47,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.activation_ops_test.TestActivations.test_relu_empty_input.relu_ref": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.maximum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.activation_ops_test.TestActivations.test_relu_fp16": {
  "lineno": 65,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.IsGPUDeviceType",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.workspace.has_gpu_support",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.sampled_from",
   "numpy.float16",
   "numpy.sign",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.activation_ops_test.TestActivations.test_relu_fp16.relu_grad_ref": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.activation_ops_test.TestActivations.test_relu_fp16.relu_ref": {
  "lineno": 79,
  "symbols_in_volume": [
   "numpy.maximum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.activation_ops_test.TestActivations.test_relu_n": {
  "lineno": 101,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.strategies.booleans",
   "numpy.sign"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.activation_ops_test.TestActivations.test_relu_n.relu_n_ref": {
  "lineno": 112,
  "symbols_in_volume": [
   "numpy.maximum",
   "numpy.minimum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.adadelta_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.adadelta_test.TestAdadelta": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.adadelta_test.TestAdadelta.ref_adadelta": {
  "lineno": 19,
  "symbols_in_volume": [
   "numpy.float16",
   "numpy.float32",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.adadelta_test.TestAdadelta.test_adadelta": {
  "lineno": 48,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensors",
   "functools.partial",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.abs",
   "numpy.array",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.adadelta_test.TestAdadelta.test_sparse_adadelta": {
  "lineno": 79,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.gpu_do",
   "caffe2.python.hypothesis_test_util.tensors",
   "hypothesis.HealthCheck.filter_too_much",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.abs",
   "numpy.arange",
   "numpy.array",
   "numpy.float16",
   "numpy.float32",
   "numpy.random.choice",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.adadelta_test.TestAdadelta.test_sparse_adadelta.ref_sparse": {
  "lineno": 110,
  "symbols_in_volume": [
   "numpy.copy"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.adadelta_test.TestAdadelta.test_sparse_adadelta_empty": {
  "lineno": 144,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.gpu_do",
   "caffe2.python.hypothesis_test_util.tensors",
   "hypothesis.given",
   "hypothesis.note",
   "hypothesis.settings",
   "hypothesis.strategies.floats",
   "numpy.abs",
   "numpy.array",
   "numpy.empty",
   "numpy.float16",
   "numpy.float32",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.adadelta_test.TestAdadelta.test_sparse_adadelta_empty.ref_sparse_empty": {
  "lineno": 171,
  "symbols_in_volume": [
   "numpy.copy"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.adagrad_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.adagrad_test.TestAdagrad": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.adagrad_test.TestAdagrad.test_adagrad": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensors",
   "caffe2.python.operator_test.adagrad_test_helper.ref_adagrad",
   "functools.partial",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.sampled_from",
   "numpy.abs",
   "numpy.array",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.adagrad_test.TestAdagrad.test_adagrad_output_effective_lr": {
  "lineno": 51,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.hypothesis_test_util.tensors",
   "caffe2.python.operator_test.adagrad_test_helper.ref_adagrad",
   "functools.partial",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.sampled_from",
   "numpy.abs",
   "numpy.array",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.adagrad_test.TestAdagrad.test_adagrad_output_effective_lr_and_update": {
  "lineno": 91,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.hypothesis_test_util.tensors",
   "caffe2.python.operator_test.adagrad_test_helper.ref_adagrad",
   "functools.partial",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.floats",
   "numpy.abs",
   "numpy.array",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.adagrad_test.TestAdagrad.test_row_wise_sparse_adagrad": {
  "lineno": 193,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensors",
   "caffe2.python.operator_test.adagrad_test_helper.adagrad_sparse_test_helper",
   "caffe2.python.operator_test.adagrad_test_helper.ref_adagrad",
   "functools.partial",
   "hypothesis.HealthCheck.filter_too_much",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.sampled_from"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.adagrad_test.TestAdagrad.test_row_wise_sparse_adagrad_empty": {
  "lineno": 219,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensors",
   "caffe2.python.operator_test.adagrad_test_helper.adagrad_sparse_test_helper",
   "caffe2.python.operator_test.adagrad_test_helper.ref_adagrad",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.floats",
   "numpy.empty",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.adagrad_test.TestAdagrad.test_sparse_adagrad": {
  "lineno": 126,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensors",
   "caffe2.python.operator_test.adagrad_test_helper.adagrad_sparse_test_helper",
   "caffe2.python.operator_test.adagrad_test_helper.ref_adagrad",
   "hypothesis.HealthCheck.filter_too_much",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.sampled_from"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.adagrad_test.TestAdagrad.test_sparse_adagrad_empty": {
  "lineno": 151,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.gpu_do",
   "caffe2.python.hypothesis_test_util.tensors",
   "caffe2.python.operator_test.adagrad_test_helper.adagrad_sparse_test_helper",
   "caffe2.python.operator_test.adagrad_test_helper.ref_adagrad",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.floats",
   "numpy.empty",
   "numpy.float16",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.adagrad_test_helper": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.adagrad_test_helper.adagrad_sparse_test_helper": {
  "lineno": 73,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gpu_do",
   "numpy.abs",
   "numpy.arange",
   "numpy.array",
   "numpy.empty",
   "numpy.float16",
   "numpy.float32",
   "numpy.int",
   "numpy.random.choice",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.adagrad_test_helper.adagrad_sparse_test_helper.ref_sparse": {
  "lineno": 116,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.copy"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.adagrad_test_helper.ref_adagrad": {
  "lineno": 10,
  "symbols_in_volume": [
   "numpy.float16",
   "numpy.float32",
   "numpy.mean",
   "numpy.sqrt",
   "numpy.square"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.adam_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.adam_test.TestAdam": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.adam_test.TestAdam.ref_adam": {
  "lineno": 19,
  "symbols_in_volume": [
   "numpy.power",
   "numpy.sqrt",
   "numpy.square"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.adam_test.TestAdam.ref_row_wise_adam": {
  "lineno": 35,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.power",
   "numpy.sqrt",
   "numpy.square"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.adam_test.TestAdam.test_adam": {
  "lineno": 50,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.cpu_do",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensors",
   "functools.partial",
   "hypothesis.given",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "numpy.abs",
   "numpy.array",
   "numpy.float32",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.adam_test.TestAdam.test_adam_output_grad": {
  "lineno": 84,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.cpu_do",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.hypothesis_test_util.tensors",
   "functools.partial",
   "hypothesis.given",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "numpy.abs",
   "numpy.array",
   "numpy.float32",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.adam_test.TestAdam.test_row_wise_sparse_adam": {
  "lineno": 254,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.cpu_do",
   "caffe2.python.hypothesis_test_util.elements_of_type",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.hypothesis_test_util.tensor1d",
   "caffe2.python.hypothesis_test_util.tensors",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.note",
   "hypothesis.strategies.data",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.absolute",
   "numpy.arange",
   "numpy.array",
   "numpy.array_equal",
   "numpy.float32",
   "numpy.int64",
   "numpy.sort",
   "numpy.unique"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.adam_test.TestAdam.test_row_wise_sparse_adam.ref_row_wise_sparse": {
  "lineno": 310,
  "symbols_in_volume": [
   "numpy.copy"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.adam_test.TestAdam.test_row_wise_sparse_adam_output_grad": {
  "lineno": 336,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.cpu_do",
   "caffe2.python.hypothesis_test_util.elements_of_type",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.hypothesis_test_util.tensor1d",
   "caffe2.python.hypothesis_test_util.tensors",
   "functools.partial",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.note",
   "hypothesis.strategies.data",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.absolute",
   "numpy.arange",
   "numpy.array",
   "numpy.array_equal",
   "numpy.float32",
   "numpy.int64",
   "numpy.sort",
   "numpy.unique"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.adam_test.TestAdam.test_row_wise_sparse_adam_output_grad.ref_row_wise_sparse_output_grad": {
  "lineno": 392,
  "symbols_in_volume": [
   "numpy.copy"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.adam_test.TestAdam.test_sparse_adam": {
  "lineno": 118,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.cpu_do",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.hypothesis_test_util.tensors",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.strategies.data",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.absolute",
   "numpy.arange",
   "numpy.array",
   "numpy.array_equal",
   "numpy.float32",
   "numpy.int64",
   "numpy.sort",
   "numpy.unique"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.adam_test.TestAdam.test_sparse_adam.ref_sparse": {
  "lineno": 163,
  "symbols_in_volume": [
   "numpy.copy"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.adam_test.TestAdam.test_sparse_adam_output_grad": {
  "lineno": 184,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.cpu_do",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.hypothesis_test_util.tensors",
   "functools.partial",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.strategies.data",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.absolute",
   "numpy.arange",
   "numpy.array",
   "numpy.array_equal",
   "numpy.float32",
   "numpy.int64",
   "numpy.sort",
   "numpy.unique"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.adam_test.TestAdam.test_sparse_adam_output_grad.ref_sparse_output_grad": {
  "lineno": 229,
  "symbols_in_volume": [
   "numpy.copy"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.affine_channel_op_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.affine_channel_op_test.TestAffineChannelOp": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.affine_channel_op_test.TestAffineChannelOp.affine_channel_nchw_ref": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.affine_channel_op_test.TestAffineChannelOp.affine_channel_nhwc_ref": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.affine_channel_op_test.TestAffineChannelOp.test_affine_channel_2d": {
  "lineno": 32,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.affine_channel_op_test.TestAffineChannelOp.test_affine_channel_2d.ref_op": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.affine_channel_op_test.TestAffineChannelOp.test_affine_channel_3d": {
  "lineno": 71,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.affine_channel_op_test.TestAffineChannelOp.test_affine_channel_3d.ref_op": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.alias_with_name_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.alias_with_name_test.TestAliasWithNameOp": {
  "lineno": 10,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.alias_with_name_test.TestAliasWithNameOp.test_alias_with_name_op": {
  "lineno": 11,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.utils.MakeArgument",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.lists",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.int64",
   "numpy.random.random"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.alias_with_name_test.TestAliasWithNameOp.test_alias_with_name_op.reference_func": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.apmeter_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.apmeter_test.TestAPMeterOps": {
  "lineno": 27,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.apmeter_test.TestAPMeterOps.test_average_precision": {
  "lineno": 28,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.arrays",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.apmeter_test.TestAPMeterOps.test_average_precision.op_ref": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.apmeter_test.TestAPMeterOps.test_average_precision_small_buffer": {
  "lineno": 56,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.arrays",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.apmeter_test.TestAPMeterOps.test_average_precision_small_buffer.op_ref": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.apmeter_test.calculate_ap": {
  "lineno": 13,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.argsort",
   "numpy.bool",
   "numpy.cumsum",
   "numpy.float32",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.arg_ops_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.arg_ops_test.TestArgOps": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.arg_ops_test.TestArgOps.test_argmax": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.arg_ops_test.TestArgOps.test_argmax.argmax_ref": {
  "lineno": 27,
  "symbols_in_volume": [
   "numpy.argmax"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.arg_ops_test.TestArgOps.test_argmin": {
  "lineno": 38,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.arg_ops_test.TestArgOps.test_argmin.argmin_ref": {
  "lineno": 49,
  "symbols_in_volume": [
   "numpy.argmin"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.assert_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.assert_test.TestAssert": {
  "lineno": 12,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.assert_test.TestAssert.test_assert": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.lists",
   "hypothesis.strategies.sampled_from",
   "numpy.all",
   "numpy.dtype",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.assert_test.TestAssert.test_assert.assert_ref": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.atomic_ops_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.atomic_ops_test.TestAtomicOps": {
  "lineno": 11,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.atomic_ops_test.TestAtomicOps.test_atomic64_ops": {
  "lineno": 51,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.INT64",
   "caffe2.python.core.Net",
   "caffe2.python.core.Plan",
   "caffe2.python.core.execution_step",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunPlan",
   "unittest.skip"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.atomic_ops_test.TestAtomicOps.test_atomic_ops": {
  "lineno": 12,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.INT32",
   "caffe2.python.core.Net",
   "caffe2.python.core.Plan",
   "caffe2.python.core.execution_step",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunPlan",
   "unittest.skip"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.basic_rnn_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.workspace.GlobalInit",
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.basic_rnn_test.BasicRNNCellTest": {
  "lineno": 52,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.basic_rnn_test.BasicRNNCellTest.test_basic_rnn": {
  "lineno": 53,
  "symbols_in_volume": [
   "caffe2.python.core.DeviceScope",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.temp_workspace",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.rnn_cell.BasicRNN",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.randint",
   "numpy.random.randn",
   "numpy.random.seed",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.basic_rnn_test.basic_rnn_reference": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.rnn.rnn_cell_test_util.tanh",
   "numpy.dot",
   "numpy.int32",
   "numpy.ones"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.batch_box_cox_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.batch_box_cox_test.TestBatchBoxCox": {
  "lineno": 55,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.batch_box_cox_test.TestBatchBoxCox.batch_box_cox": {
  "lineno": 99,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "numpy.array",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.batch_box_cox_test.TestBatchBoxCox.batch_box_cox.ref": {
  "lineno": 110,
  "symbols_in_volume": [
   "numpy.copy",
   "numpy.log",
   "numpy.maximum",
   "numpy.power"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.batch_box_cox_test.TestBatchBoxCox.test_batch_box_cox": {
  "lineno": 56,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.batch_box_cox_test.TestBatchBoxCox.test_bound_base_away_from_zero": {
  "lineno": 92,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.batch_box_cox_test.TestBatchBoxCox.test_lambda1_is_all_zero": {
  "lineno": 64,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.batch_box_cox_test.TestBatchBoxCox.test_lambda1_is_partially_zero": {
  "lineno": 76,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.batch_box_cox_test._inputs": {
  "lineno": 25,
  "symbols_in_volume": [
   "hypothesis.strategies.composite",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.lists",
   "hypothesis.strategies.one_of"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.batch_bucketize_op_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.batch_bucketize_op_test.TestBatchBucketize": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.batch_bucketize_op_test.TestBatchBucketize.test_batch_bucketize": {
  "lineno": 42,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.append",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.choice",
   "numpy.random.randint",
   "numpy.random.randn",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.batch_bucketize_op_test.TestBatchBucketize.test_batch_bucketize.ref": {
  "lineno": 73,
  "symbols_in_volume": [
   "numpy.int32",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.batch_bucketize_op_test.TestBatchBucketize.test_batch_bucketize_example": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "numpy.array",
   "numpy.float32",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.batch_bucketize_op_test.TestBatchBucketize.test_batch_bucketize_example.ref": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.batch_moments_op_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.batch_moments_op_test.TestBatchMomentsOp": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.batch_moments_op_test.TestBatchMomentsOp.batch_moments_nchw_ref": {
  "lineno": 14,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.square"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.batch_moments_op_test.TestBatchMomentsOp.batch_moments_nhwc_ref": {
  "lineno": 23,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.square"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.batch_moments_op_test.TestBatchMomentsOp.test_batch_moments_2d": {
  "lineno": 31,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.batch_moments_op_test.TestBatchMomentsOp.test_batch_moments_2d.ref": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.batch_moments_op_test.TestBatchMomentsOp.test_batch_moments_3d": {
  "lineno": 62,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.batch_moments_op_test.TestBatchMomentsOp.test_batch_moments_3d.ref": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.batch_sparse_to_dense_op_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.batch_sparse_to_dense_op_test.TestBatchSparseToDense": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.batch_sparse_to_dense_op_test.TestBatchSparseToDense.test_batch_dense_to_sparse": {
  "lineno": 73,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.array",
   "numpy.concatenate",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.choice",
   "numpy.random.rand",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.batch_sparse_to_dense_op_test.TestBatchSparseToDense.test_batch_dense_to_sparse.batch_dense_to_sparse_ref": {
  "lineno": 94,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.batch_sparse_to_dense_op_test.TestBatchSparseToDense.test_batch_sparse_to_dense": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "numpy.array",
   "numpy.concatenate",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.choice",
   "numpy.random.rand",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.batch_sparse_to_dense_op_test.TestBatchSparseToDense.test_batch_sparse_to_dense.batch_sparse_to_dense_ref": {
  "lineno": 51,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.bbox_transform_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.bbox_transform_test.TestBBoxTransformOp": {
  "lineno": 206,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.bbox_transform_test.TestBBoxTransformOp.test_bbox_transform": {
  "lineno": 207,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.array",
   "numpy.float32",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.bbox_transform_test.TestBBoxTransformOp.test_bbox_transform.bbox_transform_ref": {
  "lineno": 244,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.bbox_transform_test.TestBBoxTransformOp.test_bbox_transform_batch": {
  "lineno": 277,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.lists",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.randint",
   "numpy.random.randn",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.bbox_transform_test.TestBBoxTransformOp.test_bbox_transform_batch.bbox_transform_ref": {
  "lineno": 314,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.float32",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.bbox_transform_test.bbox_transform": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.log",
   "numpy.minimum",
   "numpy.newaxis",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.bbox_transform_test.bbox_transform_rotated": {
  "lineno": 106,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.log",
   "numpy.minimum",
   "numpy.newaxis",
   "numpy.pi",
   "numpy.where",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.bbox_transform_test.clip_tiled_boxes": {
  "lineno": 60,
  "symbols_in_volume": [
   "numpy.maximum",
   "numpy.minimum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.bbox_transform_test.clip_tiled_boxes_rotated": {
  "lineno": 157,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.maximum",
   "numpy.minimum",
   "numpy.where"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.bbox_transform_test.generate_rois": {
  "lineno": 79,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.float32",
   "numpy.maximum",
   "numpy.minimum",
   "numpy.random.uniform",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.bbox_transform_test.generate_rois_rotated": {
  "lineno": 193,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.float32",
   "numpy.random.uniform"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.bisect_percentile_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.bisect_percentile_op_test.TestBisectPercentileOp": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.bisect_percentile_op_test.TestBisectPercentileOp.compare_reference": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunOperatorOnce",
   "caffe2.python.workspace.blobs",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.bisect_percentile_op_test.TestBisectPercentileOp.compare_reference.bisect_percentile_op_ref": {
  "lineno": 26,
  "symbols_in_volume": [
   "bisect.bisect_left",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.bisect_percentile_op_test.TestBisectPercentileOp.test_bisect_percentil_op_large": {
  "lineno": 116,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.lists",
   "numpy.arange",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.choice",
   "numpy.random.randint",
   "numpy.random.randn",
   "numpy.random.uniform",
   "numpy.sort"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.bisect_percentile_op_test.TestBisectPercentileOp.test_bisect_percentil_op_simple": {
  "lineno": 95,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.blobs_queue_db_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.blobs_queue_db_test.BlobsQueueDBTest": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.blobs_queue_db_test.BlobsQueueDBTest._add_blob_to_queue": {
  "lineno": 76,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.RunOperatorOnce"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.blobs_queue_db_test.BlobsQueueDBTest._create_test_tensor_protos": {
  "lineno": 85,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.TensorProtos",
   "caffe2.python.core.DataType.INT32",
   "caffe2.python.core.DataType.STRING"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.blobs_queue_db_test.BlobsQueueDBTest._test_create_blobs_queue_db": {
  "lineno": 36,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.timeout_guard.CompleteInTimeOrDie",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNet",
   "caffe2.python.workspace.RunNetOnce"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.blobs_queue_db_test.BlobsQueueDBTest.test_create_blobs_queue_db_string": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.blobs_queue_db_test.BlobsQueueDBTest.test_create_blobs_queue_db_string.add_blobs": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.blobs_queue_db_test.BlobsQueueDBTest.test_create_blobs_queue_db_tensor": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.blobs_queue_db_test.BlobsQueueDBTest.test_create_blobs_queue_db_tensor.add_blobs": {
  "lineno": 25,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "numpy.array"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.boolean_mask_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.boolean_mask_test.TestBooleanMaskOp": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.boolean_mask_test.TestBooleanMaskOp._dtype_conversion": {
  "lineno": 62,
  "symbols_in_volume": [
   "caffe2.python.core.IsGPUDeviceType",
   "hypothesis.assume",
   "numpy.float16"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.boolean_mask_test.TestBooleanMaskOp.test_boolean_mask": {
  "lineno": 30,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor1d",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.random.choice"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.boolean_mask_test.TestBooleanMaskOp.test_boolean_mask.ref": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.boolean_mask_test.TestBooleanMaskOp.test_boolean_mask_gradient": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.hypothesis_test_util.tensor1d",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.copy",
   "numpy.random.choice"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.boolean_mask_test.TestBooleanMaskOp.test_boolean_mask_indices": {
  "lineno": 46,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor1d",
   "hypothesis.given",
   "numpy.random.choice"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.boolean_mask_test.TestBooleanMaskOp.test_boolean_mask_indices.ref": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.where"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.boolean_mask_test.TestBooleanMaskOp.test_sequence_mask_batching_lengths": {
  "lineno": 199,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.sampled_from",
   "numpy.arange",
   "numpy.float16",
   "numpy.float32",
   "numpy.int32",
   "numpy.prod",
   "numpy.random.randint",
   "numpy.random.shuffle"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.boolean_mask_test.TestBooleanMaskOp.test_sequence_mask_batching_lengths.ref": {
  "lineno": 232,
  "symbols_in_volume": [
   "numpy.reshape"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.boolean_mask_test.TestBooleanMaskOp.test_sequence_mask_batching_triangle": {
  "lineno": 307,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.sampled_from",
   "numpy.arange",
   "numpy.float16",
   "numpy.float32",
   "numpy.random.shuffle"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.boolean_mask_test.TestBooleanMaskOp.test_sequence_mask_batching_triangle.compare": {
  "lineno": 344,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.boolean_mask_test.TestBooleanMaskOp.test_sequence_mask_batching_triangle.ref": {
  "lineno": 347,
  "symbols_in_volume": [
   "numpy.prod",
   "numpy.reshape"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.boolean_mask_test.TestBooleanMaskOp.test_sequence_mask_batching_window": {
  "lineno": 252,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.sampled_from",
   "numpy.arange",
   "numpy.float16",
   "numpy.float32",
   "numpy.int32",
   "numpy.prod",
   "numpy.random.randint",
   "numpy.random.shuffle"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.boolean_mask_test.TestBooleanMaskOp.test_sequence_mask_batching_window.ref": {
  "lineno": 287,
  "symbols_in_volume": [
   "numpy.reshape"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.boolean_mask_test.TestBooleanMaskOp.test_sequence_mask_repeated": {
  "lineno": 372,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.strategies.sampled_from",
   "numpy.float16",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.boolean_mask_test.TestBooleanMaskOp.test_sequence_mask_repeated.ref": {
  "lineno": 396,
  "symbols_in_volume": [
   "numpy.reshape"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.boolean_mask_test.TestBooleanMaskOp.test_sequence_mask_triangle": {
  "lineno": 146,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.sampled_from",
   "numpy.float16",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.boolean_mask_test.TestBooleanMaskOp.test_sequence_mask_triangle.compare": {
  "lineno": 178,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.boolean_mask_test.TestBooleanMaskOp.test_sequence_mask_triangle.ref": {
  "lineno": 181,
  "symbols_in_volume": [
   "numpy.reshape"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.boolean_mask_test.TestBooleanMaskOp.test_sequence_mask_with_lengths": {
  "lineno": 71,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.strategies.sampled_from",
   "numpy.float16",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.boolean_mask_test.TestBooleanMaskOp.test_sequence_mask_with_lengths.ref": {
  "lineno": 93,
  "symbols_in_volume": [
   "numpy.reshape"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.boolean_mask_test.TestBooleanMaskOp.test_sequence_mask_with_window": {
  "lineno": 104,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.sampled_from",
   "numpy.float16",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.boolean_mask_test.TestBooleanMaskOp.test_sequence_mask_with_window.ref": {
  "lineno": 129,
  "symbols_in_volume": [
   "numpy.reshape"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.boolean_unmask_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.boolean_unmask_test.TestUnmaskOp": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.boolean_unmask_test.TestUnmaskOp.test": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.bool_",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.random.choice",
   "numpy.random.permutation",
   "numpy.random.rand",
   "numpy.random.randint",
   "numpy.split",
   "numpy.uint16",
   "numpy.uint8",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.boolean_unmask_test.TestUnmaskOp.test.ref": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.box_with_nms_limit_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.box_with_nms_limit_op_test.TestBoxWithNMSLimitOp": {
  "lineno": 67,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.box_with_nms_limit_op_test.TestBoxWithNMSLimitOp.test_detections_per_im": {
  "lineno": 104,
  "symbols_in_volume": [
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.ones"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.box_with_nms_limit_op_test.TestBoxWithNMSLimitOp.test_detections_per_im.ref": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.box_with_nms_limit_op_test.TestBoxWithNMSLimitOp.test_detections_per_im_same_thresh": {
  "lineno": 188,
  "symbols_in_volume": [
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.ones"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.box_with_nms_limit_op_test.TestBoxWithNMSLimitOp.test_detections_per_im_same_thresh.verify": {
  "lineno": 205,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.box_with_nms_limit_op_test.TestBoxWithNMSLimitOp.test_detections_per_im_same_thresh_multiclass": {
  "lineno": 218,
  "symbols_in_volume": [
   "hypothesis.given",
   "hypothesis.strategies.integers"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.box_with_nms_limit_op_test.TestBoxWithNMSLimitOp.test_detections_per_im_same_thresh_multiclass.verify": {
  "lineno": 235,
  "symbols_in_volume": [
   "numpy.allclose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.box_with_nms_limit_op_test.TestBoxWithNMSLimitOp.test_multiclass": {
  "lineno": 126,
  "symbols_in_volume": [
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.array",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.tile"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.box_with_nms_limit_op_test.TestBoxWithNMSLimitOp.test_multiclass.ref": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.box_with_nms_limit_op_test.TestBoxWithNMSLimitOp.test_score_thresh": {
  "lineno": 85,
  "symbols_in_volume": [
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.float32",
   "numpy.ones"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.box_with_nms_limit_op_test.TestBoxWithNMSLimitOp.test_score_thresh.ref": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.box_with_nms_limit_op_test.TestBoxWithNMSLimitOp.test_simple": {
  "lineno": 68,
  "symbols_in_volume": [
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.float32",
   "numpy.ones"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.box_with_nms_limit_op_test.TestBoxWithNMSLimitOp.test_simple.ref": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.box_with_nms_limit_op_test.gen_boxes": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.tile"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.box_with_nms_limit_op_test.gen_multiple_boxes": {
  "lineno": 51,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.ones",
   "numpy.tile",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.box_with_nms_limit_op_test.get_op": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.bucketize_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.bucketize_op_test.TestBucketizeOp": {
  "lineno": 12,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.bucketize_op_test.TestBucketizeOp.test_bucketize_op": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "numpy.float32",
   "numpy.random.randint",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.bucketize_op_test.TestBucketizeOp.test_bucketize_op.ref": {
  "lineno": 23,
  "symbols_in_volume": [
   "numpy.digitize"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.cast_op_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.cast_op_test.TestCastOp": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.cast_op_test.TestCastOp.test_cast_int_float": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "numpy.int32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.cast_op_test.TestCastOp.test_cast_int_float_empty": {
  "lineno": 25,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "numpy.int32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.cast_op_test.TestCastOp.test_cast_int_to_string": {
  "lineno": 34,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.DataType.STRING",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.cast_op_test.TestCastOp.test_cast_int_to_string.ref": {
  "lineno": 39,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.temp_workspace",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "numpy.str"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.ceil_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.ceil_op_test.TestCeil": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.ceil_op_test.TestCeil.test_ceil": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.sampled_from"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.ceil_op_test.TestCeil.test_ceil.ceil_ref": {
  "lineno": 25,
  "symbols_in_volume": [
   "numpy.ceil"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.channel_backprop_stats_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.channel_backprop_stats_op_test.TestChannelBackpropStats": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.channel_backprop_stats_op_test.TestChannelBackpropStats.testChannelBackpropStats": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.sqrt",
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.channel_backprop_stats_op_test.TestChannelBackpropStats.testChannelBackpropStats.referenceChannelBackpropStatsTest": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.channel_shuffle_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.channel_shuffle_test.ChannelShuffleOpsTest": {
  "lineno": 10,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.channel_shuffle_test.ChannelShuffleOpsTest._channel_shuffle_nchw_ref": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.prod",
   "numpy.transpose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.channel_shuffle_test.ChannelShuffleOpsTest._channel_shuffle_nhwc_ref": {
  "lineno": 21,
  "symbols_in_volume": [
   "numpy.prod",
   "numpy.transpose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.channel_shuffle_test.ChannelShuffleOpsTest.test_channel_shuffle": {
  "lineno": 31,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.channel_shuffle_test.ChannelShuffleOpsTest.test_channel_shuffle.channel_shuffle_ref": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.channel_stats_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.channel_stats_op_test.TestChannelStatsOp": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.channel_stats_op_test.TestChannelStatsOp.channel_stats_nchw_ref": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.channel_stats_op_test.TestChannelStatsOp.channel_stats_nhwc_ref": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.channel_stats_op_test.TestChannelStatsOp.test_channel_stats_2d": {
  "lineno": 35,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.randn",
   "numpy.transpose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.channel_stats_op_test.TestChannelStatsOp.test_channel_stats_2d.ref_op": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.channel_stats_op_test.TestChannelStatsOp.test_channel_stats_3d": {
  "lineno": 60,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.randn",
   "numpy.transpose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.channel_stats_op_test.TestChannelStatsOp.test_channel_stats_3d.ref_op": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.checkpoint_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.checkpoint_test.CheckpointTest": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.checkpoint_test.CheckpointTest.testCheckpoint": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.core.C.registered_dbs",
   "caffe2.python.core.Net",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.RunNet",
   "os.path.exists",
   "os.path.join",
   "shutil.rmtree",
   "tempfile.mkdtemp",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.clip_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.clip_op_test.TestClip": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.clip_op_test.TestClip.test_clip": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.floats",
   "numpy.abs",
   "numpy.array",
   "numpy.float32",
   "numpy.isscalar"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.clip_op_test.TestClip.test_clip.clip_ref": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.clip_op_test.TestClip.test_clip_default": {
  "lineno": 46,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "numpy.array",
   "numpy.float32",
   "numpy.isscalar",
   "numpy.sign"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.clip_op_test.TestClip.test_clip_default.clip_ref": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.clip_tensor_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.clip_tensor_op_test.TestClipTensorByScalingOp": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.clip_tensor_op_test.TestClipTensorByScalingOp.test_clip_tensor_by_scaling": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "numpy.array",
   "numpy.float32",
   "numpy.linalg.norm",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.clip_tensor_op_test.TestClipTensorByScalingOp.test_clip_tensor_by_scaling.clip_tensor_by_scaling_ref": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.collect_and_distribute_fpn_rpn_proposals_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.collect_and_distribute_fpn_rpn_proposals_op_test.TestCollectAndDistributeFpnRpnProposals": {
  "lineno": 151,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.collect_and_distribute_fpn_rpn_proposals_op_test.TestCollectAndDistributeFpnRpnProposals._create_input": {
  "lineno": 152,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.collect_and_distribute_fpn_rpn_proposals_op_test.TestCollectAndDistributeFpnRpnProposals.test_collect_and_dist": {
  "lineno": 178,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.utils.MakeArgument",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.collect_and_distribute_fpn_rpn_proposals_op_test.TestCollectAndDistributeFpnRpnProposals.test_collect_and_dist_separately": {
  "lineno": 238,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.utils.MakeArgument",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.collect_and_distribute_fpn_rpn_proposals_op_test.boxes_area": {
  "lineno": 21,
  "symbols_in_volume": [
   "numpy.all"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.collect_and_distribute_fpn_rpn_proposals_op_test.collect": {
  "lineno": 49,
  "symbols_in_volume": [
   "numpy.argsort",
   "numpy.concatenate"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.collect_and_distribute_fpn_rpn_proposals_op_test.collect_and_distribute_fpn_rpn_ref": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.collect_and_distribute_fpn_rpn_proposals_op_test.collect_rpn_ref": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.collect_and_distribute_fpn_rpn_proposals_op_test.distribute": {
  "lineno": 69,
  "symbols_in_volume": [
   "numpy.argsort",
   "numpy.concatenate",
   "numpy.empty",
   "numpy.int32",
   "numpy.where"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.collect_and_distribute_fpn_rpn_proposals_op_test.distribute_fpn_ref": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.collect_and_distribute_fpn_rpn_proposals_op_test.map_rois_to_fpn_levels": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.clip",
   "numpy.floor",
   "numpy.log2",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.concat_split_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.concat_split_op_test.TestConcatSplitOps": {
  "lineno": 48,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.concat_split_op_test.TestConcatSplitOps.test_concat": {
  "lineno": 49,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "numpy.array",
   "numpy.concatenate"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.concat_split_op_test.TestConcatSplitOps.test_concat_add_axis": {
  "lineno": 74,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.array",
   "numpy.concatenate",
   "numpy.expand_dims"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.concat_split_op_test.TestConcatSplitOps.test_split": {
  "lineno": 105,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.strategies.booleans",
   "numpy.concatenate"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.concat_split_op_test.TestConcatSplitOps.test_split.split_ref": {
  "lineno": 129,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.cumsum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.concat_split_op_test.TestConcatSplitOps.test_split_by_lengths": {
  "lineno": 146,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.cpu_do",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.lengths_tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "numpy.array",
   "numpy.float32",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.concat_split_op_test.TestConcatSplitOps.test_split_by_lengths._find_factor_simple": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.concat_split_op_test.TestConcatSplitOps.test_split_by_lengths.split_by_lengths_ref": {
  "lineno": 188,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.cumsum",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.concat_split_op_test._tensor_splits": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.strategies.composite",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.lists",
   "numpy.array",
   "numpy.diff",
   "numpy.int32",
   "numpy.ones"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.conditional_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.conditional_test.TestConditionalOp": {
  "lineno": 12,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.conditional_test.TestConditionalOp.test_conditional": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.choice",
   "numpy.random.random"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.conditional_test.TestConditionalOp.test_conditional.ref": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.conftest": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.conftest.pytest_addoption": {
  "lineno": 9,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.DATA_DIR"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.conftest.pytest_configure": {
  "lineno": 40,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.DATA_DIR",
   "caffe2.python.serialized_test.serialized_test_util._output_context.__setattr__"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.conv_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.conv_test.TestConvolution": {
  "lineno": 52,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.conv_test.TestConvolution._nd_convolution": {
  "lineno": 358,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.utils.NCHW2NHWC",
   "hypothesis.assume",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.conv_test.TestConvolution.test_1d_convolution": {
  "lineno": 433,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.hip_test_util.run_in_hip",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.conv_test.TestConvolution.test_1x1_conv": {
  "lineno": 895,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hip_test_util.run_in_hip",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.conv_test.TestConvolution.test_1x1_conv.conv_1x1_nchw_ref": {
  "lineno": 963,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.dot",
   "numpy.float32",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.conv_test.TestConvolution.test_1x1_conv.conv_1x1_nhwc_ref": {
  "lineno": 980,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.dot",
   "numpy.float32",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.conv_test.TestConvolution.test_3d_convolution": {
  "lineno": 501,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.conv_test.TestConvolution.test_3d_convolution_cudnn_nchw": {
  "lineno": 565,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_no_hip",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.conv_test.TestConvolution.test_convolution_gradients": {
  "lineno": 231,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hip_test_util.run_in_hip",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.utils.NHWC2NCHW",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.conv_test.TestConvolution.test_convolution_layout": {
  "lineno": 656,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hip_test_util.run_in_hip",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.utils.NHWC2NCHW",
   "collections.namedtuple",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.conv_test.TestConvolution.test_convolution_layout.canonical": {
  "lineno": 741,
  "symbols_in_volume": [
   "caffe2.python.utils.NHWC2NCHW"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.conv_test.TestConvolution.test_convolution_separate_stride_pad_gradients": {
  "lineno": 54,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.utils.NHWC2NCHW",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.conv_test.TestConvolution.test_convolution_separate_stride_pad_layout": {
  "lineno": 151,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.utils.NHWC2NCHW",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.conv_test.TestConvolution.test_convolution_sync": {
  "lineno": 752,
  "symbols_in_volume": [
   "caffe2.python.brew.conv",
   "caffe2.python.hypothesis_test_util.gcs_no_hip",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.has_gpu_support",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.random.randint",
   "numpy.random.randn",
   "numpy.random.seed",
   "numpy.square",
   "numpy.sum",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.conv_test.TestConvolution.test_convolution_sync.run": {
  "lineno": 832,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.random.randn",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.conv_test.TestConvolution.test_use_cudnn_engine_interactions": {
  "lineno": 858,
  "symbols_in_volume": [
   "caffe2.python.brew.conv",
   "caffe2.python.model_helper.ModelHelper",
   "functools.partial"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.conv_test._cudnn_convolution_algo_count": {
  "lineno": 38,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.cudnn_convolution_bwd_data_algo_count",
   "caffe2.python._import_c_extension.cudnn_convolution_bwd_filter_algo_count",
   "caffe2.python._import_c_extension.cudnn_convolution_fwd_algo_count",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.conv_test._cudnn_supports": {
  "lineno": 20,
  "symbols_in_volume": [
   "caffe2.python.workspace.GetCuDNNVersion"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.conv_transpose_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.conv_transpose_test.TestConvolutionTranspose": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.conv_transpose_test.TestConvolutionTranspose.test_convolution_transpose_gradients": {
  "lineno": 231,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hip_test_util.run_in_hip",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.utils.NHWC2NCHW",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.conv_transpose_test.TestConvolutionTranspose.test_convolution_transpose_layout": {
  "lineno": 86,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hip_test_util.run_in_hip",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.utils.NHWC2NCHW",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.conv_transpose_test.TestConvolutionTranspose.test_convolution_transpose_layout_legacy_args": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hip_test_util.run_in_hip",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.utils.NHWC2NCHW",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.conv_transpose_test.TestConvolutionTranspose.test_convolution_transpose_separate_stride_pad_adj_gradient": {
  "lineno": 294,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.utils.NHWC2NCHW",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.conv_transpose_test.TestConvolutionTranspose.test_convolution_transpose_separate_stride_pad_adj_layout": {
  "lineno": 157,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.utils.NHWC2NCHW",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.conv_transpose_test.TestConvolutionTranspose.test_convolution_transpose_with_group": {
  "lineno": 364,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hip_test_util.run_in_hip",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.utils.NHWC2NCHW",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.copy_ops_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.copy_ops_test.CopyOpsTest": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.copy_ops_test.CopyOpsTest.run_test_copy_gradient": {
  "lineno": 21,
  "symbols_in_volume": [
   "caffe2.python.core.DeviceScope",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.array_equal",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.copy_ops_test.CopyOpsTest.tearDown": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.workspace.ResetWorkspace"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.copy_ops_test.CopyOpsTest.test_copy_gradient_cpu": {
  "lineno": 40,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.DeviceOption"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.copy_ops_test.CopyOpsTest.test_copy_gradient_gpu": {
  "lineno": 43,
  "symbols_in_volume": [
   "caffe2.python.core.DeviceOption",
   "caffe2.python.workspace.GpuDeviceType",
   "caffe2.python.workspace.NumGpuDevices",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.copy_ops_test.CopyOpsTest.test_copy_gradient_multiple_gpus": {
  "lineno": 47,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.GpuDeviceType",
   "caffe2.python.workspace.NumGpuDevices",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.array_equal",
   "numpy.float32",
   "numpy.random.rand",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.copy_ops_test.CopyOpsTest.test_copy_gradient_multiple_gpus.get_op_with_output": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.copy_ops_test.CopyOpsTest.test_cpu2gpu_gpu2cpu_gradients": {
  "lineno": 115,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.brew.fc",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.core.NameScope",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.GpuDeviceType",
   "caffe2.python.workspace.NumGpuDevices",
   "caffe2.python.workspace.RunNet",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.array_equal",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand",
   "numpy.random.randint",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.copy_ops_test.CopyOpsTest.test_cpu2gpu_gpu2cpu_sparse_gradients": {
  "lineno": 90,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.brew.fc",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.core.GradientSlice",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.GpuDeviceType",
   "caffe2.python.workspace.NumGpuDevices",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.copy_rows_to_tensor_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.copy_rows_to_tensor_op_test.TestCopyRowsToTensor": {
  "lineno": 27,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.copy_rows_to_tensor_op_test.TestCopyRowsToTensor.test_copy_rows_to_tensor": {
  "lineno": 28,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "numpy.arange",
   "numpy.array",
   "numpy.float16",
   "numpy.float32",
   "numpy.int32",
   "numpy.int64",
   "numpy.random.choice",
   "numpy.random.rand",
   "numpy.random.randint",
   "numpy.random.shuffle",
   "numpy.shape"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.copy_rows_to_tensor_op_test.TestCopyRowsToTensor.test_copy_rows_to_tensor.ref": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.copy_rows_to_tensor_op_test.TestCopyRowsToTensor.test_copy_rows_to_tensor_invalid_input": {
  "lineno": 54,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.arange",
   "numpy.array",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.randint",
   "numpy.random.shuffle",
   "numpy.shape"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.copy_rows_to_tensor_op_test.get_input_tensors": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.arrays",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.cosine_embedding_criterion_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.cosine_embedding_criterion_op_test.TestCosineEmbeddingCriterion": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.cosine_embedding_criterion_op_test.TestCosineEmbeddingCriterion.test_cosine_embedding_criterion": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "numpy.abs",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.choice",
   "numpy.random.randn",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.cosine_embedding_criterion_op_test.TestCosineEmbeddingCriterion.test_cosine_embedding_criterion.ref_cec": {
  "lineno": 28,
  "symbols_in_volume": [
   "numpy.maximum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.counter_ops_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.counter_ops_test.TestCounterOps": {
  "lineno": 11,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.counter_ops_test.TestCounterOps.test_counter_ops": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.DataType.BOOL",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "tempfile.NamedTemporaryFile"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.crf_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.crf_test.TestCRFOp": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.crf_test.TestCRFOp._compute_loss_manual": {
  "lineno": 104,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.concatenate",
   "numpy.expand_dims",
   "numpy.float32",
   "numpy.int32",
   "numpy.ones",
   "scipy.special.logsumexp"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.crf_test.TestCRFOp.test_crf_gradient": {
  "lineno": 61,
  "symbols_in_volume": [
   "caffe2.python.crf.CRFWithLoss",
   "caffe2.python.hypothesis_test_util.cpu_do",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.crf_test.TestCRFOp.test_crf_with_loss_op": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.crf.CRFWithLoss",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.int64",
   "numpy.random.randint",
   "numpy.random.randn",
   "numpy.random.uniform",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.TestCrossEntropyOps": {
  "lineno": 43,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.TestCrossEntropyOps.test_cross_entropy_and_unjoied_cross_entropy_relation": {
  "lineno": 121,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.strategies.just",
   "numpy.array"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.TestCrossEntropyOps.test_cross_entropy_and_unjoied_cross_entropy_relation.sigmoid_xentr_logit_grad_ref": {
  "lineno": 142,
  "symbols_in_volume": [
   "numpy.expand_dims"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.TestCrossEntropyOps.test_cross_entropy_and_unjoied_cross_entropy_relation.sigmoid_xentr_logit_ref": {
  "lineno": 134,
  "symbols_in_volume": [
   "numpy.mean"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.TestCrossEntropyOps.test_sigmoid_cross_entropy_with_logits": {
  "lineno": 44,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.arrays",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.just",
   "hypothesis.strategies.lists",
   "hypothesis.strategies.one_of",
   "hypothesis.strategies.sampled_from",
   "hypothesis.strategies.tuples"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.TestCrossEntropyOps.test_sigmoid_cross_entropy_with_logits.sigmoid_xentr_logit_grad_ref": {
  "lineno": 90,
  "symbols_in_volume": [
   "numpy.expand_dims"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.TestCrossEntropyOps.test_sigmoid_cross_entropy_with_logits.sigmoid_xentr_logit_ref": {
  "lineno": 76,
  "symbols_in_volume": [
   "numpy.mean"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.TestCrossEntropyOps.test_soft_label_cross_entropy": {
  "lineno": 251,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.TestCrossEntropyOps.test_soft_label_cross_entropy.soft_label_xentr_ref": {
  "lineno": 267,
  "symbols_in_volume": [
   "numpy.log",
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.TestCrossEntropyOps.test_weighted_sigmoid_cross_entropy_with_logits": {
  "lineno": 197,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.arrays",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.lists",
   "hypothesis.strategies.one_of",
   "hypothesis.strategies.sampled_from",
   "hypothesis.strategies.tuples"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.TestCrossEntropyOps.test_weighted_sigmoid_cross_entropy_with_logits.weighted_sigmoid_xentr_logit_grad_ref": {
  "lineno": 231,
  "symbols_in_volume": [
   "numpy.expand_dims",
   "numpy.multiply"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.TestCrossEntropyOps.test_weighted_sigmoid_cross_entropy_with_logits.weighted_sigmoid_xentr_logit_ref": {
  "lineno": 225,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.multiply"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.sigmoid": {
  "lineno": 14,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.sigmoid_cross_entropy_with_logits": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.exp",
   "numpy.log",
   "numpy.maximum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.sigmoid_cross_entropy_with_logits_grad": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.sigmoid_cross_entropy_with_logits_with_log_D_trick": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.log"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.sigmoid_cross_entropy_with_logits_with_log_D_trick_grad": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.unjoined_sigmoid_cross_entropy": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.exp",
   "numpy.log",
   "numpy.maximum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.unjoined_sigmoid_cross_entropy_grad": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.ctc_beam_search_decoder_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "random.seed",
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.ctc_beam_search_decoder_op_test.TestCTCBeamSearchDecoderOp": {
  "lineno": 21,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.ctc_beam_search_decoder_op_test.TestCTCBeamSearchDecoderOp.test_ctc_beam_search_decoder": {
  "lineno": 22,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.sampled_from"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.ctc_beam_search_decoder_op_test.TestCTCBeamSearchDecoderOp.test_ctc_beam_search_decoder.input_generater": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.ctc_beam_search_decoder_op_test.TestCTCBeamSearchDecoderOp.test_ctc_beam_search_decoder.ref_ctc_decoder": {
  "lineno": 66,
  "symbols_in_volume": [
   "collections.Counter",
   "collections.defaultdict",
   "numpy.array",
   "numpy.float32",
   "numpy.hstack",
   "numpy.int32",
   "numpy.vstack",
   "numpy.where",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.ctc_beam_search_decoder_op_test.TestCTCBeamSearchDecoderOp.test_ctc_beam_search_decoder.ref_ctc_decoder_max_time": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.ctc_greedy_decoder_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "random.seed",
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.ctc_greedy_decoder_op_test.TestCTCGreedyDecoderOp": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.ctc_greedy_decoder_op_test.TestCTCGreedyDecoderOp.test_ctc_greedy_decoder": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.sampled_from"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.ctc_greedy_decoder_op_test.TestCTCGreedyDecoderOp.test_ctc_greedy_decoder.input_generater": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.ctc_greedy_decoder_op_test.TestCTCGreedyDecoderOp.test_ctc_greedy_decoder.ref_ctc_decoder": {
  "lineno": 37,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.argmax",
   "numpy.array",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.ctc_greedy_decoder_op_test.TestCTCGreedyDecoderOp.test_ctc_greedy_decoder.ref_ctc_decoder_max_time": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.ctc_greedy_decoder_op_test.TestCTCGreedyDecoderOp.test_ctc_greedy_decoder_no_merge_arg": {
  "lineno": 88,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.sampled_from"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.ctc_greedy_decoder_op_test.TestCTCGreedyDecoderOp.test_ctc_greedy_decoder_no_merge_arg.input_generater": {
  "lineno": 100,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.ctc_greedy_decoder_op_test.TestCTCGreedyDecoderOp.test_ctc_greedy_decoder_no_merge_arg.ref_ctc_decoder_max_time": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.ctc_greedy_decoder_op_test.TestCTCGreedyDecoderOp.test_ctc_greedy_decoder_no_merge_arg.ref_ctc_decoder_no_merge_arg": {
  "lineno": 107,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.argmax",
   "numpy.array",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.cudnn_recurrent_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.cudnn_recurrent_test.TestLSTMs": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.workspace.has_gpu_support",
   "unittest.TestCase",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.cudnn_recurrent_test.TestLSTMs.testEqualToCudnn": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.rnn_cell.InitFromLSTMParams",
   "caffe2.python.rnn_cell.LSTM",
   "caffe2.python.rnn_cell.cudnn_LSTM",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.GpuDeviceType",
   "caffe2.python.workspace.RunNet",
   "caffe2.python.workspace.RunNetOnce",
   "future.utils.viewitems",
   "numpy.allclose",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.data_couple_op_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.data_couple_op_test.TestDataCoupleOp": {
  "lineno": 11,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.data_couple_op_test.TestDataCoupleOp.test_data_couple_op": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.dataset_ops_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.dataset_ops_test.TestDatasetOps": {
  "lineno": 165,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.dataset_ops_test.TestDatasetOps.test_collect_tensor_ops": {
  "lineno": 589,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.core.Plan",
   "caffe2.python.core.execution_step",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.python.workspace.RunPlan",
   "numpy.histogram"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.dataset_ops_test.TestDatasetOps.test_dataset_ops": {
  "lineno": 202,
  "symbols_in_volume": [
   "caffe2.python.core.NameScope",
   "caffe2.python.core.Net",
   "caffe2.python.core.Plan",
   "caffe2.python.core.execution_step",
   "caffe2.python.dataset.Const",
   "caffe2.python.dataset.Dataset",
   "caffe2.python.schema.FeedRecord",
   "caffe2.python.schema.FetchRecord",
   "caffe2.python.schema.List",
   "caffe2.python.schema.Map",
   "caffe2.python.schema.NewRecord",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "caffe2.python.schema.from_blob_list",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNet",
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.python.workspace.RunPlan",
   "numpy.array",
   "numpy.dtype",
   "numpy.float32",
   "numpy.int32",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.dataset_ops_test.TestDatasetOps.test_last_n_window_ops": {
  "lineno": 542,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.core.Plan",
   "caffe2.python.core.execution_step",
   "caffe2.python.workspace.CreateBlob",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunPlan",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.dataset_ops_test.TestDatasetOps.test_pack_unpack": {
  "lineno": 166,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.schema.FeedRecord",
   "caffe2.python.schema.NewRecord",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.dataset_ops_test._assert_arrays_equal": {
  "lineno": 22,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.dataset_ops_test._assert_records_equal": {
  "lineno": 32,
  "symbols_in_volume": [
   "caffe2.python.schema.Field"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.dataset_ops_test._dataset": {
  "lineno": 122,
  "symbols_in_volume": [
   "caffe2.python.schema.List",
   "caffe2.python.schema.Map",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "caffe2.python.schema.from_blob_list",
   "hypothesis.strategies.composite",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.lists",
   "hypothesis.strategies.text",
   "numpy.float32",
   "numpy.int32",
   "numpy.int64",
   "string.ascii_lowercase"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.dataset_ops_test._dense_features_map": {
  "lineno": 92,
  "symbols_in_volume": [
   "hypothesis.strategies.composite",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.lists"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.dataset_ops_test._sparse_features_map": {
  "lineno": 44,
  "symbols_in_volume": [
   "hypothesis.strategies.composite",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.lists"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.deform_conv_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.deform_conv_test.TestConvolution": {
  "lineno": 95,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.deform_conv_test.TestConvolution.test_conv_gradients": {
  "lineno": 510,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CUDA",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_gpu_only",
   "caffe2.python.utils.NHWC2NCHW",
   "caffe2.python.workspace.has_gpu_support",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.deform_conv_test.TestConvolution.test_conv_separate_stride_pad_gradients": {
  "lineno": 421,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_gpu_only",
   "caffe2.python.utils.NHWC2NCHW",
   "caffe2.python.workspace.has_gpu_support",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.deform_conv_test.TestConvolution.test_flat_input_convolution": {
  "lineno": 210,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CUDA",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_gpu_only",
   "caffe2.python.utils.NHWC2NCHW",
   "caffe2.python.workspace.has_gpu_support",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.ones",
   "numpy.random.rand",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.deform_conv_test.TestConvolution.test_flat_input_convolution.reference_conv_op": {
  "lineno": 289,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.deform_conv_test.TestConvolution.test_null_offset_convolution": {
  "lineno": 96,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CUDA",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_gpu_only",
   "caffe2.python.utils.NHWC2NCHW",
   "caffe2.python.workspace.has_gpu_support",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.zeros",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.deform_conv_test.TestConvolution.test_null_offset_convolution.reference_conv_op": {
  "lineno": 191,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.deform_conv_test.TestConvolution.test_shuffle_input_convolution": {
  "lineno": 308,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CUDA",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_gpu_only",
   "caffe2.python.utils.NHWC2NCHW",
   "caffe2.python.workspace.has_gpu_support",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.ones",
   "numpy.random.rand",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.deform_conv_test.TestConvolution.test_shuffle_input_convolution.reference_conv_op": {
  "lineno": 399,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.deform_conv_test._conv_1d_output_size": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.deform_conv_test._conv_2d_offsets_dims": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.deform_conv_test._conv_2d_output_size": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.deform_conv_test._conv_2d_random_offsets": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.random.randint",
   "numpy.random.uniform"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.deform_conv_test._conv_2d_shuffle_offsets": {
  "lineno": 72,
  "symbols_in_volume": [
   "caffe2.python.utils.NCHW2NHWC",
   "numpy.array",
   "numpy.float32",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.deform_conv_test._cudnn_supports": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.workspace.GetCuDNNVersion"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.dense_vector_to_id_list_op_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.dense_vector_to_id_list_op_test.TestDenseVectorToIdList": {
  "lineno": 43,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.dense_vector_to_id_list_op_test.TestDenseVectorToIdList.test_dense_vector_to_id_list_op": {
  "lineno": 58,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.dense_vector_to_id_list_op_test.TestDenseVectorToIdList.test_dense_vector_to_id_list_ref": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.int64",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.dense_vector_to_id_list_op_test.dense_vector_to_id_list_ref": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.dense_vector_to_id_list_op_test.id_list_batch": {
  "lineno": 15,
  "symbols_in_volume": [
   "hypothesis.extra.numpy.arrays",
   "hypothesis.strategies.composite",
   "hypothesis.strategies.integers",
   "numpy.array",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.depthwise_3x3_conv_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.depthwise_3x3_conv_test.Depthwise3x3ConvOpsTest": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.depthwise_3x3_conv_test.Depthwise3x3ConvOpsTest.test_convolution_gradients": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.utils.NHWC2NCHW",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.detectron_keypoints": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.detectron_keypoints.approx_heatmap_keypoint": {
  "lineno": 90,
  "symbols_in_volume": [
   "numpy.maximum",
   "numpy.transpose",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.detectron_keypoints.heatmaps_to_keypoints": {
  "lineno": 18,
  "symbols_in_volume": [
   "cv2.INTER_CUBIC",
   "cv2.resize",
   "numpy.ceil",
   "numpy.float32",
   "numpy.int",
   "numpy.maximum",
   "numpy.transpose",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.detectron_keypoints.scores_to_probs": {
  "lineno": 79,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.distance_op_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.distance_op_test.DistanceTest": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.distance_op_test.DistanceTest.test_L1_distance": {
  "lineno": 61,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.linalg.norm",
   "numpy.random.uniform",
   "numpy.sign",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.distance_op_test.DistanceTest.test_L2_distance": {
  "lineno": 92,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.uniform",
   "numpy.square",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.distance_op_test.DistanceTest.test_cosine_similarity": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.strategies.integers",
   "numpy.divide",
   "numpy.float32",
   "numpy.linalg.norm",
   "numpy.multiply",
   "numpy.random.uniform",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.distance_op_test.DistanceTest.test_dot_product": {
  "lineno": 36,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensors",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.distance_op_test.DistanceTest.test_dot_product.dot_ref": {
  "lineno": 49,
  "symbols_in_volume": [
   "numpy.dot"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.dropout_op_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.dropout_op_test.TestDropout": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.dropout_op_test.TestDropout.test_dropout_is_test": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CUDA",
   "caffe2.proto.caffe2_pb2.HIP",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.assume",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.sampled_from"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.dropout_op_test.TestDropout.test_dropout_is_test.reference_dropout_test": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.ones"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.dropout_op_test.TestDropout.test_dropout_ratio0": {
  "lineno": 46,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CUDA",
   "caffe2.proto.caffe2_pb2.HIP",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.sampled_from"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.dropout_op_test.TestDropout.test_dropout_ratio0.reference_dropout_ratio0": {
  "lineno": 71,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.ones"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.duplicate_operands_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.duplicate_operands_test.TestDuplicateOperands": {
  "lineno": 12,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.duplicate_operands_test.TestDuplicateOperands.test_duplicate_operands": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.allclose",
   "numpy.random.uniform"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_linear_op_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.elementwise_linear_op_test.TestElementwiseLinearOp": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.elementwise_linear_op_test.TestElementwiseLinearOp.test": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_linear_op_test.TestElementwiseLinearOp.test.ref_op": {
  "lineno": 23,
  "symbols_in_volume": [
   "numpy.multiply"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_logical_ops_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.elementwise_logical_ops_test.TestIsMemberOf": {
  "lineno": 112,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.elementwise_logical_ops_test.TestIsMemberOf.test_is_member_of": {
  "lineno": 114,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.array",
   "numpy.int64",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_logical_ops_test.TestIsMemberOf.test_is_member_of.test": {
  "lineno": 131,
  "symbols_in_volume": [
   "numpy.vectorize"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_logical_ops_test.TestRowWhere": {
  "lineno": 63,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.elementwise_logical_ops_test.TestRowWhere.test_reference": {
  "lineno": 65,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_logical_ops_test.TestRowWhere.test_rowwhere": {
  "lineno": 77,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_logical_ops_test.TestRowWhere.test_rowwhere_dim2": {
  "lineno": 94,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_logical_ops_test.TestWhere": {
  "lineno": 24,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.elementwise_logical_ops_test.TestWhere.test_reference": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_logical_ops_test.TestWhere.test_where": {
  "lineno": 38,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_logical_ops_test.TestWhere.test_where_dim2": {
  "lineno": 50,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_logical_ops_test.mux": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.vectorize"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_logical_ops_test.rowmux": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.TestElementwiseBroadcast": {
  "lineno": 19,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.TestElementwiseBroadcast.__generate_test_cases": {
  "lineno": 21,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.newaxis",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.TestElementwiseBroadcast.__test_binary_op": {
  "lineno": 58,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_Add": {
  "lineno": 77,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "operator.add"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_Mul": {
  "lineno": 82,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "operator.mul"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_Sub": {
  "lineno": 87,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "operator.sub"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_powt": {
  "lineno": 92,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_powt.powt_grad": {
  "lineno": 102,
  "symbols_in_volume": [
   "numpy.log",
   "numpy.power"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_powt.powt_grad_axis0": {
  "lineno": 158,
  "symbols_in_volume": [
   "numpy.newaxis",
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_powt.powt_grad_axis1": {
  "lineno": 135,
  "symbols_in_volume": [
   "numpy.newaxis",
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_powt.powt_grad_broadcast": {
  "lineno": 113,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_powt.powt_grad_mixed": {
  "lineno": 183,
  "symbols_in_volume": [
   "numpy.newaxis",
   "numpy.reshape",
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_powt.powt_op": {
  "lineno": 98,
  "symbols_in_volume": [
   "numpy.power"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_powt.powt_op_axis0": {
  "lineno": 153,
  "symbols_in_volume": [
   "numpy.newaxis"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_powt.powt_op_axis1": {
  "lineno": 130,
  "symbols_in_volume": [
   "numpy.newaxis"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_powt.powt_op_mixed": {
  "lineno": 178,
  "symbols_in_volume": [
   "numpy.newaxis"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_scalar": {
  "lineno": 197,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "hypothesis.given",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.TestElementwiseBroadcast.test_semantic_broadcast": {
  "lineno": 223,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "hypothesis.given",
   "numpy.float32",
   "numpy.newaxis",
   "numpy.random.rand",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.TestElementwiseBroadcast.test_sum_reduce": {
  "lineno": 260,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CUDA",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "hypothesis.given",
   "numpy.array",
   "numpy.float32",
   "numpy.float64",
   "numpy.random.rand",
   "numpy.sum",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.TestElementwiseBroadcast.test_sum_reduce_empty_blob": {
  "lineno": 250,
  "symbols_in_volume": [
   "caffe2.python.core.DeviceScope",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.TestElementwiseBroadcast.test_sum_reduce_fp16": {
  "lineno": 334,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.IsGPUDeviceType",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.workspace.has_gpu_support",
   "hypothesis.assume",
   "hypothesis.given",
   "numpy.float16",
   "numpy.random.rand",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.TestElementwiseBroadcast.test_sum_reduce_fp16.ref_op": {
  "lineno": 399,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps._run_single_test": {
  "lineno": 546,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps._test_binary_op": {
  "lineno": 581,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps._test_binary_op.ref": {
  "lineno": 589,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps._test_binary_op_in_place": {
  "lineno": 620,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps._test_binary_op_in_place.ref": {
  "lineno": 622,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps._test_bitwise_binary_op": {
  "lineno": 715,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps._test_bitwise_binary_op.ref": {
  "lineno": 722,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_abs": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_abs.abs_ref": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.absolute"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_add": {
  "lineno": 651,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.add"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_bitwise_and": {
  "lineno": 753,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.bitwise_and"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_bitwise_or": {
  "lineno": 760,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.bitwise_or"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_bitwise_xor": {
  "lineno": 767,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.bitwise_xor"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_cbrt": {
  "lineno": 260,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_cbrt.cbrt_ref": {
  "lineno": 269,
  "symbols_in_volume": [
   "numpy.cbrt"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_cbrt_grad": {
  "lineno": 280,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_cube": {
  "lineno": 232,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_cube.cube_grad_ref": {
  "lineno": 244,
  "symbols_in_volume": [
   "numpy.square"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_cube.cube_ref": {
  "lineno": 241,
  "symbols_in_volume": [
   "numpy.power"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_div": {
  "lineno": 675,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.divide"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_div_legacy_grad": {
  "lineno": 683,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_div_legacy_grad.div_grad_ref": {
  "lineno": 693,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_eq": {
  "lineno": 479,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.DataType.BOOL",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.InferShapesAndTypes",
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.python.workspace.blobs.shape",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_eq.eq": {
  "lineno": 487,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_eq_bcast": {
  "lineno": 510,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.DataType.BOOL",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.InferShapesAndTypes",
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.python.workspace.blobs.shape",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_eq_bcast.eq": {
  "lineno": 518,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_exp": {
  "lineno": 39,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_exp.exp_ref": {
  "lineno": 48,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_hard_sigmoid": {
  "lineno": 436,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.sign"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_hard_sigmoid.hard_sigmoid_ref": {
  "lineno": 456,
  "symbols_in_volume": [
   "numpy.maximum",
   "numpy.minimum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_log": {
  "lineno": 61,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_log.log_op": {
  "lineno": 68,
  "symbols_in_volume": [
   "numpy.log"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_mish": {
  "lineno": 299,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_mish.mish": {
  "lineno": 305,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.log",
   "numpy.tanh"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_mish_gradient_inplace": {
  "lineno": 326,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_mish_gradient_inplace.mish": {
  "lineno": 331,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.log",
   "numpy.tanh"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_mish_gradient_inplace.mish_gradient": {
  "lineno": 334,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.square"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_mul": {
  "lineno": 668,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.multiply"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_not": {
  "lineno": 799,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.bool"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_not.not_op": {
  "lineno": 802,
  "symbols_in_volume": [
   "numpy.logical_not"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_powt": {
  "lineno": 89,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_powt.powt_grad": {
  "lineno": 101,
  "symbols_in_volume": [
   "numpy.log",
   "numpy.power"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_powt.powt_op": {
  "lineno": 97,
  "symbols_in_volume": [
   "numpy.power"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_reciprocal": {
  "lineno": 774,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_reciprocal.reciprocal_op": {
  "lineno": 778,
  "symbols_in_volume": [
   "numpy.reciprocal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_rsqrt": {
  "lineno": 206,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_rsqrt.rsqrt_ref": {
  "lineno": 216,
  "symbols_in_volume": [
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_sigmoid": {
  "lineno": 412,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.sampled_from",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_sigmoid.sigmoid_ref": {
  "lineno": 423,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_softsign": {
  "lineno": 180,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_softsign.softsign_ref": {
  "lineno": 189,
  "symbols_in_volume": [
   "numpy.absolute"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_sqr": {
  "lineno": 120,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_sqr.sqr_op": {
  "lineno": 127,
  "symbols_in_volume": [
   "numpy.square"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_sqrt": {
  "lineno": 148,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_sqrt.sqrt_op": {
  "lineno": 158,
  "symbols_in_volume": [
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_sub": {
  "lineno": 659,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.subtract"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_swish": {
  "lineno": 356,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_swish.swish": {
  "lineno": 363,
  "symbols_in_volume": [
   "numpy.divide",
   "numpy.exp"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_swish_gradient_inplace": {
  "lineno": 384,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_swish_gradient_inplace.swish": {
  "lineno": 390,
  "symbols_in_volume": [
   "numpy.divide",
   "numpy.exp"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_swish_gradient_inplace.swish_gradient": {
  "lineno": 393,
  "symbols_in_volume": [
   "numpy.divide",
   "numpy.exp"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.emptysample_ops_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.emptysample_ops_test.TestEmptySampleOps": {
  "lineno": 30,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.emptysample_ops_test.TestEmptySampleOps.test_emptysample": {
  "lineno": 31,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.array",
   "numpy.int32",
   "numpy.int64",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.enforce_finite_op_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.enforce_finite_op_test.TestEnforceFinite": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.enforce_finite_op_test.TestEnforceFinite.test_enforce_finite": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "hypothesis.settings"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.enforce_finite_op_test.TestEnforceFinite.test_enforce_finite.all_finite_value": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.isfinite"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.enforce_finite_op_test.TestEnforceFinite.test_enforce_finite_device_check": {
  "lineno": 42,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.ensure_clipped_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.ensure_clipped_test.TestEnsureClipped": {
  "lineno": 11,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.ensure_clipped_test.TestEnsureClipped.test_ensure_clipped": {
  "lineno": 12,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.arrays",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "caffe2.python.workspace.blobs",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "numpy.array",
   "numpy.float32",
   "numpy.int64",
   "numpy.nonzero",
   "numpy.random.rand",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.ensure_clipped_test.TestEnsureClipped.test_ensure_clipped.ref": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.clip"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.ensure_cpu_output_op_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.ensure_cpu_output_op_test.TestEnsureCPUOutputOp": {
  "lineno": 26,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.ensure_cpu_output_op_test.TestEnsureCPUOutputOp.test_ensure_cpu_output": {
  "lineno": 28,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "numpy.float32",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.ensure_cpu_output_op_test._dev_options": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.cpu_do",
   "caffe2.python.hypothesis_test_util.device_options",
   "hypothesis.strategies.composite",
   "hypothesis.strategies.sampled_from"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.erf_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.erf_op_test.TestErfOp": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.erf_op_test.TestErfOp.test_erf": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "math.erf",
   "numpy.vectorize"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.expand_op_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.expand_op_test.TestExpandOp": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.expand_op_test.TestExpandOp._rand_shape": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.int64",
   "numpy.ones",
   "numpy.random.choice",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.expand_op_test.TestExpandOp._run_expand_op_test": {
  "lineno": 29,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "numpy.array"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.expand_op_test.TestExpandOp._run_expand_op_test.ref": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.ones"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.expand_op_test.TestExpandOp.test_expand_nonrand_shape1": {
  "lineno": 49,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.sampled_from",
   "numpy.ones"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.expand_op_test.TestExpandOp.test_expand_nonrand_shape2": {
  "lineno": 58,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.sampled_from",
   "numpy.ones"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.expand_op_test.TestExpandOp.test_expand_rand_shape": {
  "lineno": 43,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.fc_operator_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.fc_operator_test.TestFcOperator": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.fc_operator_test.TestFcOperator._run_test": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.Argument",
   "caffe2.proto.caffe2_pb2.CUDA",
   "caffe2.proto.caffe2_pb2.HIP",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.IsGPUDeviceType",
   "hypothesis.assume",
   "numpy.float16",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.fc_operator_test.TestFcOperator._run_test.fc_op": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.dot"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.fc_operator_test.TestFcOperator._run_test.fc_transposed_op": {
  "lineno": 47,
  "symbols_in_volume": [
   "numpy.dot"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.fc_operator_test.TestFcOperator.test_fc": {
  "lineno": 83,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.HealthCheck.filter_too_much",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float16",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.fc_operator_test.TestFcOperator.test_fc_transposed": {
  "lineno": 94,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.HealthCheck.filter_too_much",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float16",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.feature_maps_ops_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.feature_maps_ops_test.TestFeatureMapsOps": {
  "lineno": 10,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.feature_maps_ops_test.TestFeatureMapsOps._test_merge_multi_list_or_map_feature_tensors_gradient": {
  "lineno": 652,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.array",
   "numpy.float",
   "numpy.int32",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.feature_maps_ops_test.TestFeatureMapsOps._test_merge_single_list_or_map_feature_tensors_gradient": {
  "lineno": 262,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.array",
   "numpy.bool",
   "numpy.float",
   "numpy.int32",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.feature_maps_ops_test.TestFeatureMapsOps.test_merge_dense_feature_tensors": {
  "lineno": 12,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.array",
   "numpy.bool",
   "numpy.float",
   "numpy.int32",
   "numpy.int64",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.feature_maps_ops_test.TestFeatureMapsOps.test_merge_multi_list_feature_tensors": {
  "lineno": 477,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.array",
   "numpy.float",
   "numpy.int32",
   "numpy.int64",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.feature_maps_ops_test.TestFeatureMapsOps.test_merge_multi_list_feature_tensors_gradient": {
  "lineno": 642,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.feature_maps_ops_test.TestFeatureMapsOps.test_merge_multi_map_feature_tensors": {
  "lineno": 552,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.array",
   "numpy.float",
   "numpy.int32",
   "numpy.int64",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.feature_maps_ops_test.TestFeatureMapsOps.test_merge_multi_map_feature_tensors_gradient": {
  "lineno": 647,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.feature_maps_ops_test.TestFeatureMapsOps.test_merge_multi_scalar_feature_tensors": {
  "lineno": 382,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.array",
   "numpy.float",
   "numpy.int32",
   "numpy.int64",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.feature_maps_ops_test.TestFeatureMapsOps.test_merge_multi_scalar_feature_tensors_gradient": {
  "lineno": 436,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.array",
   "numpy.float",
   "numpy.int32",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.feature_maps_ops_test.TestFeatureMapsOps.test_merge_single_list_feature_tensors": {
  "lineno": 192,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.array",
   "numpy.bool",
   "numpy.float",
   "numpy.int32",
   "numpy.int64",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.feature_maps_ops_test.TestFeatureMapsOps.test_merge_single_list_feature_tensors_gradient": {
  "lineno": 252,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.feature_maps_ops_test.TestFeatureMapsOps.test_merge_single_map_feature_tensors": {
  "lineno": 310,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.array",
   "numpy.bool",
   "numpy.float",
   "numpy.int32",
   "numpy.int64",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.feature_maps_ops_test.TestFeatureMapsOps.test_merge_single_map_feature_tensors_gradient": {
  "lineno": 257,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.feature_maps_ops_test.TestFeatureMapsOps.test_merge_single_scalar_feature_tensors": {
  "lineno": 49,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.array",
   "numpy.bool",
   "numpy.float",
   "numpy.int32",
   "numpy.int64",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.feature_maps_ops_test.TestFeatureMapsOps.test_merge_single_scalar_feature_tensors_gradient": {
  "lineno": 96,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.array",
   "numpy.bool",
   "numpy.float",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.feature_maps_ops_test.TestFeatureMapsOps.test_merge_single_scalar_feature_tensors_gradient_with_strings": {
  "lineno": 144,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.array",
   "numpy.bool",
   "numpy.bytes_",
   "numpy.testing.assert_array_equal",
   "numpy.unicode_"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.filler_ops_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.filler_ops_test.TestFillerOperator": {
  "lineno": 22,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.filler_ops_test.TestFillerOperator.test_diagonal_fill_op_float": {
  "lineno": 133,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.strategies.sampled_from"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.filler_ops_test.TestFillerOperator.test_diagonal_fill_op_int": {
  "lineno": 158,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.DataType.INT32",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.filler_ops_test.TestFillerOperator.test_fp16_uniformfill_op": {
  "lineno": 233,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "caffe2.python.workspace.blobs.shape",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.max",
   "numpy.mean",
   "numpy.min",
   "numpy.var"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.filler_ops_test.TestFillerOperator.test_gaussian_fill_op": {
  "lineno": 196,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "hypothesis.given",
   "numpy.count_nonzero"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.filler_ops_test.TestFillerOperator.test_int64_shape": {
  "lineno": 53,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.RunNet",
   "caffe2.python.workspace.blobs.shape",
   "hypothesis.given",
   "hypothesis.settings"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.filler_ops_test.TestFillerOperator.test_lengths_range_fill": {
  "lineno": 174,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.lists",
   "numpy.array",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.filler_ops_test.TestFillerOperator.test_lengths_range_fill._len_range_fill": {
  "lineno": 184,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.filler_ops_test.TestFillerOperator.test_msra_fill_op": {
  "lineno": 216,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "hypothesis.given",
   "numpy.count_nonzero"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.filler_ops_test.TestFillerOperator.test_shape_error": {
  "lineno": 24,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "hypothesis.given",
   "hypothesis.settings"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.filler_ops_test.TestFillerOperator.test_uniform_fill_using_arg": {
  "lineno": 103,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "numpy.max",
   "numpy.min",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.filler_ops_test.TestFillerOperator.test_uniform_int_fill_op_blob_input": {
  "lineno": 69,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.arrays",
   "caffe2.python.hypothesis_test_util.dims",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.int32",
   "numpy.int64",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.filler_ops_test._fill_diagonal": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.fill_diagonal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.find_op_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.find_op_test.TestFindOperator": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.find_op_test.TestFindOperator.test_find": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.sampled_from",
   "numpy.int32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.find_op_test.TestFindOperator.test_find.findop": {
  "lineno": 24,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int32",
   "numpy.where"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.flatten_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.flatten_op_test.TestFlatten": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.flatten_op_test.TestFlatten.test_flatten": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.flatten_op_test.TestFlatten.test_flatten.flatten_ref": {
  "lineno": 24,
  "symbols_in_volume": [
   "numpy.copy",
   "numpy.prod"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.flexible_top_k_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.flexible_top_k_test.TestFlexibleTopK": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.flexible_top_k_test.TestFlexibleTopK.flexible_top_k_ref": {
  "lineno": 16,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "numpy.float32",
   "numpy.int32",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.flexible_top_k_test.TestFlexibleTopK.test_flexible_top_k": {
  "lineno": 42,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.float32",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.flexible_top_k_test.TestFlexibleTopK.test_flexible_top_k.bind_ref": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.flexible_top_k_test.TestFlexibleTopK.test_flexible_top_k_grad": {
  "lineno": 59,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.float32",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.floor_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.floor_op_test.TestFloor": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.floor_op_test.TestFloor.test_floor": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.sampled_from"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.floor_op_test.TestFloor.test_floor.floor_ref": {
  "lineno": 25,
  "symbols_in_volume": [
   "numpy.floor"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.fused_nbit_rowwise_conversion_ops_test": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.vectorize"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.fused_nbit_rowwise_conversion_ops_test.ErrorThresholdRow": {
  "lineno": 190,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.float16",
   "numpy.max",
   "numpy.maximum",
   "numpy.min"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.fused_nbit_rowwise_conversion_ops_test.TestFusedNBitRowwiseQuantizationConversion": {
  "lineno": 117,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.fused_nbit_rowwise_conversion_ops_test.TestFusedNBitRowwiseQuantizationConversion.test_quantize_and_dequantize_op": {
  "lineno": 154,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.fused_nbit_rowwise_conversion_ops_test.TestFusedNBitRowwiseQuantizationConversion.test_quantize_op": {
  "lineno": 118,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.fused_nbit_rowwise_conversion_ops_test.TestNBitFakeFused": {
  "lineno": 206,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.fused_nbit_rowwise_conversion_ops_test.TestNBitFakeFused.testNBit": {
  "lineno": 207,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.GlobalInit",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.sampled_from",
   "numpy.abs",
   "numpy.float32",
   "numpy.linalg.norm",
   "numpy.random.rand",
   "numpy.random.randint",
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.fused_nbit_rowwise_conversion_ops_test.TestNBitGreedyFused": {
  "lineno": 272,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.fused_nbit_rowwise_conversion_ops_test.TestNBitGreedyFused.testNBit": {
  "lineno": 273,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.operator_test.fused_nbit_rowwise_test_helper._compress_uniform_simplified",
   "caffe2.python.operator_test.fused_nbit_rowwise_test_helper.param_search_greedy",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.GlobalInit",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.sampled_from",
   "numpy.abs",
   "numpy.float32",
   "numpy.linalg.norm",
   "numpy.random.rand",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.fused_nbit_rowwise_conversion_ops_test.bytes_to_half_floats": {
  "lineno": 21,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.float16",
   "numpy.frombuffer",
   "numpy.shape"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.fused_nbit_rowwise_conversion_ops_test.fused_rowwise_nbit_quantize_dequantize_reference": {
  "lineno": 91,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.uint8",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.fused_nbit_rowwise_conversion_ops_test.fused_rowwise_nbit_quantize_reference": {
  "lineno": 53,
  "symbols_in_volume": [
   "math.isinf",
   "numpy.clip",
   "numpy.concatenate",
   "numpy.float16",
   "numpy.float32",
   "numpy.max",
   "numpy.min",
   "numpy.round",
   "numpy.uint8",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.fused_nbit_rowwise_conversion_ops_test.half_floats_to_bytes": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.empty",
   "numpy.float16",
   "numpy.frombuffer",
   "numpy.shape",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.fused_nbit_rowwise_conversion_ops_test.int8_to_bytes": {
  "lineno": 40,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.int8",
   "numpy.shape",
   "numpy.uint8",
   "struct.pack"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.fused_nbit_rowwise_test_helper": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.fused_nbit_rowwise_test_helper._compress_uniform_simplified": {
  "lineno": 45,
  "symbols_in_volume": [
   "numpy.clip",
   "numpy.float16",
   "numpy.float32",
   "numpy.round",
   "numpy.sqrt",
   "numpy.where",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.fused_nbit_rowwise_test_helper.param_search_greedy": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.max",
   "numpy.min"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.gather_ops_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.gather_ops_test.TestBatchGatherOps": {
  "lineno": 193,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.gather_ops_test.TestBatchGatherOps.test_batch_gather_ops": {
  "lineno": 194,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.gather_ops_test.TestGatherFused8BitRowwise": {
  "lineno": 207,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.gather_ops_test.TestGatherFused8BitRowwise.test_batch_gather_ops": {
  "lineno": 208,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.randint",
   "numpy.random.random",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.gather_ops_test.TestGatherOps": {
  "lineno": 60,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.gather_ops_test.TestGatherOps.test_batch_gather_op_match_outer": {
  "lineno": 123,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.randint",
   "numpy.random.random"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.gather_ops_test.TestGatherOps.test_gather_op_match_outer_axis2_data4D_ind4D": {
  "lineno": 148,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.randint",
   "numpy.random.random"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.gather_ops_test.TestGatherOps.test_gather_ops": {
  "lineno": 61,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.randint",
   "numpy.random.random"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.gather_ops_test.TestGatherOps.test_gather_ops_axis2": {
  "lineno": 83,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.randint",
   "numpy.random.random"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.gather_ops_test.TestGatherOps.test_gather_ops_match_outer": {
  "lineno": 101,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.randint",
   "numpy.random.random"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.gather_ops_test._inputs": {
  "lineno": 174,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.floats",
   "hypothesis.extra.numpy.arrays",
   "hypothesis.strategies.composite",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.gather_ops_test.ref_gather": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.gather_ops_test.ref_gather.inner": {
  "lineno": 28,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.gather_ops_test.ref_gather_axis0": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.gather_ops_test.ref_gather_axis0.inner": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.gather_ops_test.ref_gather_match_outer": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.gather_ops_test.ref_gather_match_outer.inner": {
  "lineno": 40,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.gather_ranges_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.gather_ranges_op_test.TestGatherRanges": {
  "lineno": 167,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.gather_ranges_op_test.TestGatherRanges.test_empty_range_check": {
  "lineno": 235,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "hypothesis.given",
   "hypothesis.settings"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.gather_ranges_op_test.TestGatherRanges.test_empty_range_check.getOpWithThreshold": {
  "lineno": 244,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.gather_ranges_op_test.TestGatherRanges.test_gather_ranges": {
  "lineno": 168,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.apply_along_axis"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.gather_ranges_op_test.TestGatherRanges.test_gather_ranges.boarders_to_range": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.gather_ranges_op_test.TestGatherRanges.test_gather_ranges_split": {
  "lineno": 189,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.gather_ranges_op_test.TestGatherRanges.test_gather_ranges_with_key_split": {
  "lineno": 206,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.gather_ranges_op_test.TestGatherRanges.test_shape_and_type_inference": {
  "lineno": 222,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.INT32",
   "caffe2.python.core.DataType.INT64",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.temp_workspace",
   "caffe2.python.workspace.InferShapesAndTypes"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.gather_ranges_op_test._bad_tensor_splits": {
  "lineno": 68,
  "symbols_in_volume": [
   "hypothesis.strategies.composite",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.lists",
   "hypothesis.strategies.permutations",
   "numpy.array",
   "numpy.float32",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.gather_ranges_op_test._tensor_splits": {
  "lineno": 37,
  "symbols_in_volume": [
   "hypothesis.strategies.composite",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.lists",
   "hypothesis.strategies.permutations",
   "numpy.array",
   "numpy.float32",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.gather_ranges_op_test.batched_boarders_and_data": {
  "lineno": 10,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.arrays",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.tuples",
   "numpy.float32",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.gather_ranges_op_test.gather_ranges": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.gather_ranges_op_test.gather_ranges_to_dense": {
  "lineno": 122,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.gather_ranges_op_test.gather_ranges_to_dense_with_key": {
  "lineno": 142,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.given_tensor_byte_string_to_uint8_fill_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.given_tensor_byte_string_to_uint8_fill_op_test.TestGivenTensorByteStringToUInt8FillOps": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.given_tensor_byte_string_to_uint8_fill_op_test.TestGivenTensorByteStringToUInt8FillOps.test_empty_given_tensor_byte_string_to_uint8_fill": {
  "lineno": 34,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "numpy.array",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.given_tensor_byte_string_to_uint8_fill_op_test.TestGivenTensorByteStringToUInt8FillOps.test_empty_given_tensor_byte_string_to_uint8_fill.constant_fill": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.given_tensor_byte_string_to_uint8_fill_op_test.TestGivenTensorByteStringToUInt8FillOps.test_given_tensor_byte_string_to_uint8_fill": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.DataType.STRING",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "numpy.int32",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.given_tensor_byte_string_to_uint8_fill_op_test.TestGivenTensorByteStringToUInt8FillOps.test_given_tensor_byte_string_to_uint8_fill.constant_fill": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.given_tensor_fill_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.given_tensor_fill_op_test.TestGivenTensorFillOps": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.given_tensor_fill_op_test.TestGivenTensorFillOps.test_given_tensor_fill": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.DataType.BOOL",
   "caffe2.python.core.DataType.DOUBLE",
   "caffe2.python.core.DataType.FLOAT",
   "caffe2.python.core.DataType.INT16",
   "caffe2.python.core.DataType.INT32",
   "caffe2.python.core.DataType.INT64",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.strategies.sampled_from",
   "numpy.bool_",
   "numpy.double",
   "numpy.float32",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.given_tensor_fill_op_test.TestGivenTensorFillOps.test_given_tensor_fill.constant_fill": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.glu_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.glu_op_test.TestGlu": {
  "lineno": 27,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.glu_op_test.TestGlu.test_glu_old": {
  "lineno": 28,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.glu_op_test.TestGlu.test_glu_old.glu_ref": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.split"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.glu_op_test._glu_old_input": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.arrays",
   "hypothesis.strategies.composite",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.lists",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.group_conv_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.group_conv_test.TestGroupConvolution": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.group_conv_test.TestGroupConvolution.test_group_convolution": {
  "lineno": 19,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hip_test_util.run_in_hip",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.utils.NHWC2NCHW",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.group_norm_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.group_norm_op_test.TestGroupNormOp": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.group_norm_op_test.TestGroupNormOp.group_norm_nchw_ref": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.sqrt",
   "numpy.var"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.group_norm_op_test.TestGroupNormOp.group_norm_nhwc_ref": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.sqrt",
   "numpy.var"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.group_norm_op_test.TestGroupNormOp.test_group_norm_2d": {
  "lineno": 45,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.group_norm_op_test.TestGroupNormOp.test_group_norm_2d.ref_op": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.group_norm_op_test.TestGroupNormOp.test_group_norm_3d": {
  "lineno": 84,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.group_norm_op_test.TestGroupNormOp.test_group_norm_3d.ref_op": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.group_norm_op_test.TestGroupNormOp.test_group_norm_grad": {
  "lineno": 122,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.arange",
   "numpy.float32",
   "numpy.random.randn",
   "numpy.random.shuffle"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.gru_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.workspace.GlobalInit",
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.gru_test.GRUCellTest": {
  "lineno": 250,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.gru_test.GRUCellTest.gru_base": {
  "lineno": 330,
  "symbols_in_volume": [
   "caffe2.python.core.DeviceScope",
   "caffe2.python.hypothesis_test_util.cpu_do",
   "caffe2.python.rnn.rnn_cell_test_util._prepare_rnn",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "functools.partial"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.gru_test.GRUCellTest.test_gru_main": {
  "lineno": 314,
  "symbols_in_volume": [
   "caffe2.python.gru_cell.GRU",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.gru_test.GRUCellTest.test_gru_unit_op": {
  "lineno": 253,
  "symbols_in_volume": [
   "caffe2.python.core.DeviceScope",
   "caffe2.python.hypothesis_test_util.cpu_do",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "functools.partial",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.gru_test._prepare_gru_unit_op": {
  "lineno": 175,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.scope.NameScope",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.gru_test._prepare_gru_unit_op.generate_input_state": {
  "lineno": 181,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.gru_test.gru_input": {
  "lineno": 156,
  "symbols_in_volume": [
   "hypothesis.strategies.integers",
   "hypothesis.strategies.tuples"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.gru_test.gru_input.create_input": {
  "lineno": 167,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.arrays"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.gru_test.gru_reference": {
  "lineno": 75,
  "symbols_in_volume": [
   "caffe2.python.rnn.rnn_cell_test_util.sigmoid",
   "numpy.concatenate",
   "numpy.dot",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.gru_test.gru_unit": {
  "lineno": 22,
  "symbols_in_volume": [
   "caffe2.python.rnn.rnn_cell_test_util.sigmoid",
   "caffe2.python.rnn.rnn_cell_test_util.tanh",
   "numpy.int32",
   "numpy.ones"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.gru_test.gru_unit_op_input": {
  "lineno": 135,
  "symbols_in_volume": [
   "hypothesis.strategies.integers",
   "hypothesis.strategies.tuples"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.gru_test.gru_unit_op_input.create_input": {
  "lineno": 148,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.arrays"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.heatmap_max_keypoint_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.heatmap_max_keypoint_op_test.TestHeatmapMaxKeypointOp": {
  "lineno": 40,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.heatmap_max_keypoint_op_test.TestHeatmapMaxKeypointOp.setUp": {
  "lineno": 41,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.DeviceOption",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.utils.MakeArgument",
   "numpy.arange",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.seed",
   "numpy.zeros",
   "scipy.interpolate.interp2d"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.heatmap_max_keypoint_op_test.TestHeatmapMaxKeypointOp.test_approx_heatmap_keypoint": {
  "lineno": 102,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.DeviceOption"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.heatmap_max_keypoint_op_test.TestHeatmapMaxKeypointOp.test_caffe2_pytorch_eq": {
  "lineno": 135,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.DeviceOption"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.heatmap_max_keypoint_op_test.TestHeatmapMaxKeypointOp.test_close_to_FAIR": {
  "lineno": 91,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.DeviceOption",
   "sys.modules",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.heatmap_max_keypoint_op_test.TestHeatmapMaxKeypointOp.test_special_cases": {
  "lineno": 111,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.DeviceOption",
   "numpy.array",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.heatmap_max_keypoint_op_test.c10_op_ref": {
  "lineno": 31,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.ops._caffe2.HeatmapMaxKeypoint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.heatmap_max_keypoint_op_test.heatmap_FAIR_keypoint_ref": {
  "lineno": 23,
  "symbols_in_volume": [
   "caffe2.python.operator_test.detectron_keypoints.heatmaps_to_keypoints"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.heatmap_max_keypoint_op_test.heatmap_approx_keypoint_ref": {
  "lineno": 27,
  "symbols_in_volume": [
   "caffe2.python.operator_test.detectron_keypoints.approx_heatmap_keypoint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.histogram_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.core.GlobalInit",
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.histogram_test.TestHistogram": {
  "lineno": 10,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.histogram_test.TestHistogram._test_histogram": {
  "lineno": 61,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.size",
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.histogram_test.TestHistogram.test_histogram__device_consistency": {
  "lineno": 11,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.linspace",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.histogram_test.TestHistogram.test_histogram__empty_input_tensor": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linspace"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.histogram_test.TestHistogram.test_histogram__insufficient_bin_edges": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.histogram_test.TestHistogram.test_histogram__non_increasing_bin_edges": {
  "lineno": 47,
  "symbols_in_volume": [
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.histogram_test.TestHistogram.test_histogram__valid_inputs_0": {
  "lineno": 19,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.array"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.histogram_test.TestHistogram.test_histogram__valid_inputs_1": {
  "lineno": 33,
  "symbols_in_volume": [
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.logspace",
   "numpy.random.rand",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.hsm_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.Argument",
   "caffe2.proto.hsm_pb2.TreeProto",
   "caffe2.python.hsm_util.create_hierarchy",
   "caffe2.python.hsm_util.create_node_with_nodes",
   "caffe2.python.hsm_util.create_node_with_words",
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.hsm_test.TestHsm": {
  "lineno": 62,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.hsm_test.TestHsm.test_hsm_forward": {
  "lineno": 145,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.DeviceOption",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.GradientRegistry.GetGradientForOp",
   "caffe2.python.gradient_checker.GradientChecker",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.GlobalInit",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.hsm_test.TestHsm.test_hsm_gradient": {
  "lineno": 180,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.GlobalInit",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.hsm_test.TestHsm.test_hsm_run_once": {
  "lineno": 127,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.GlobalInit",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.hsm_test.TestHsm.test_hsm_search": {
  "lineno": 63,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.GlobalInit",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.argsort",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand",
   "numpy.random.randint",
   "numpy.sort"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.hsm_test.TestHsm.test_hsm_search.simulation_hsm_search": {
  "lineno": 88,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.exp",
   "numpy.inf",
   "numpy.log",
   "numpy.max",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.hsm_test.TestHsm.test_huffman_tree_hierarchy": {
  "lineno": 210,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.Argument",
   "caffe2.proto.hsm_pb2.TreeProto",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hsm_util.create_hierarchy",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.GlobalInit",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.array",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.hsm_test.TestHsm.test_huffman_tree_hierarchy.checkPath": {
  "lineno": 236,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.hyperbolic_ops_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.hyperbolic_ops_test.TestHyperbolicOps": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.hyperbolic_ops_test.TestHyperbolicOps._test_hyperbolic_op": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.hyperbolic_ops_test.TestHyperbolicOps._test_hyperbolic_op.ref": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.hyperbolic_ops_test.TestHyperbolicOps.test_cosh": {
  "lineno": 39,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "numpy.cosh",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.hyperbolic_ops_test.TestHyperbolicOps.test_sinh": {
  "lineno": 35,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "numpy.float32",
   "numpy.sinh"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.hyperbolic_ops_test.TestHyperbolicOps.test_tanh": {
  "lineno": 43,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.tanh"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.im2col_col2im_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.im2col_col2im_test.TestReduceFrontSum": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.im2col_col2im_test.TestReduceFrontSum.test_col2im_gradients": {
  "lineno": 117,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.im2col_col2im_test.TestReduceFrontSum.test_im2col_layout": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.image_input_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.image_input_op_test.TestImport": {
  "lineno": 318,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase",
   "sys.modules",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.image_input_op_test.TestImport.test_imageinput": {
  "lineno": 350,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.Verbosity.verbose",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.just",
   "hypothesis.strategies.tuples"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.image_input_op_test.TestImport.test_imageinput.validator": {
  "lineno": 374,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.image_input_op_test.TestImport.test_imageinput_with_additional_outputs": {
  "lineno": 384,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.Verbosity.verbose",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.just",
   "hypothesis.strategies.tuples"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.image_input_op_test.TestImport.test_imageinput_with_additional_outputs.validator": {
  "lineno": 410,
  "symbols_in_volume": [
   "caffe2.python.workspace.FetchBlob"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.image_input_op_test.TestImport.validate_image_and_label": {
  "lineno": 321,
  "symbols_in_volume": [
   "caffe2.python.workspace.FetchBlob",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.image_input_op_test.caffe2_img": {
  "lineno": 109,
  "symbols_in_volume": [
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.image_input_op_test.create_test": {
  "lineno": 119,
  "symbols_in_volume": [
   "PIL.Image.fromarray",
   "caffe2.proto.caffe2_pb2.TensorProtos",
   "lmdb.open",
   "numpy.float32",
   "numpy.random.randint",
   "numpy.random.random_integers",
   "numpy.uint8",
   "numpy.zeros",
   "six.BytesIO"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.image_input_op_test.run_test": {
  "lineno": 238,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.temp_workspace",
   "caffe2.python.workspace.RunNetOnce",
   "shutil.rmtree",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.image_input_op_test.verify_apply_bounding_box": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.isnan"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.image_input_op_test.verify_color_normalize": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.image_input_op_test.verify_crop": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.image_input_op_test.verify_rescale": {
  "lineno": 55,
  "symbols_in_volume": [
   "cv2.COLOR_BGR2RGB",
   "cv2.COLOR_RGB2BGR",
   "cv2.INTER_AREA",
   "cv2.cvtColor",
   "cv2.resize",
   "numpy.ceil"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.index_hash_ops_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.index_hash_ops_test.TestIndexHashOps": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.index_hash_ops_test.TestIndexHashOps.test_index_hash_ops": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.int32",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.index_hash_ops_test.TestIndexHashOps.test_index_hash_ops.index_hash": {
  "lineno": 25,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.index_hash_ops_test.TestIndexHashOps.test_shape_and_type_inference": {
  "lineno": 53,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.INT32",
   "caffe2.python.core.DataType.INT64",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.temp_workspace",
   "caffe2.python.workspace.InferShapesAndTypes"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.index_ops_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.index_ops_test.TestIndexOps": {
  "lineno": 11,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.index_ops_test.TestIndexOps._test_index_ops": {
  "lineno": 12,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.array",
   "numpy.concatenate",
   "numpy.str_",
   "numpy.testing.assert_array_equal",
   "tempfile.NamedTemporaryFile"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.index_ops_test.TestIndexOps.test_int_index_ops": {
  "lineno": 129,
  "symbols_in_volume": [
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.index_ops_test.TestIndexOps.test_long_index_ops": {
  "lineno": 132,
  "symbols_in_volume": [
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.index_ops_test.TestIndexOps.test_string_index_ops": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.instance_norm_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.instance_norm_test.TestInstanceNorm": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.instance_norm_test.TestInstanceNorm._feed_inputs": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.instance_norm_test.TestInstanceNorm._get_inputs": {
  "lineno": 19,
  "symbols_in_volume": [
   "caffe2.python.utils.NCHW2NHWC",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.instance_norm_test.TestInstanceNorm._get_op": {
  "lineno": 32,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.instance_norm_test.TestInstanceNorm.test_instance_norm_device_check": {
  "lineno": 201,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.instance_norm_test.TestInstanceNorm.test_instance_norm_gradients": {
  "lineno": 53,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.arange",
   "numpy.float32",
   "numpy.random.randn",
   "numpy.random.seed",
   "numpy.random.shuffle"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.instance_norm_test.TestInstanceNorm.test_instance_norm_layout": {
  "lineno": 107,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.utils.NHWC2NCHW",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "numpy.random.seed",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.instance_norm_test.TestInstanceNorm.test_instance_norm_model_helper": {
  "lineno": 231,
  "symbols_in_volume": [
   "caffe2.python.brew.instance_norm",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.utils.NCHW2NHWC",
   "caffe2.python.utils.NHWC2NCHW",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.instance_norm_test.TestInstanceNorm.test_instance_norm_reference_check": {
  "lineno": 142,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.assume",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.instance_norm_test.TestInstanceNorm.test_instance_norm_reference_check.ref": {
  "lineno": 174,
  "symbols_in_volume": [
   "caffe2.python.utils.NCHW2NHWC",
   "caffe2.python.utils.NHWC2NCHW",
   "numpy.newaxis",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.integral_image_ops_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.integral_image_ops_test.TestIntegralImageOps": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.integral_image_ops_test.TestIntegralImageOps.test_integral_image_gradient_ops": {
  "lineno": 51,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.integral_image_ops_test.TestIntegralImageOps.test_integral_image_gradient_ops.integral_image_gradient": {
  "lineno": 71,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.integral_image_ops_test.TestIntegralImageOps.test_integral_image_ops": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.integral_image_ops_test.TestIntegralImageOps.test_integral_image_ops.integral_image": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.jsd_ops_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.jsd_ops_test.TestJSDOps": {
  "lineno": 29,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.jsd_ops_test.TestJSDOps.test_bernoulli_jsd": {
  "lineno": 30,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.jsd_ops_test.entropy": {
  "lineno": 14,
  "symbols_in_volume": [
   "numpy.log"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.jsd_ops_test.jsd": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.jsd_ops_test.jsd_grad": {
  "lineno": 23,
  "symbols_in_volume": [
   "numpy.log"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.key_split_ops_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.key_split_ops_test.TestKeySplitOps": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.key_split_ops_test.TestKeySplitOps.test_key_split_op": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.arrays",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunOperatorOnce",
   "caffe2.python.workspace.blobs",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.array",
   "numpy.int32",
   "numpy.int64",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.lars_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.lars_test.TestLars": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.lars_test.TestLars.test_lars": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.floats",
   "numpy.array",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.lars_test.TestLars.test_lars.ref_lars": {
  "lineno": 25,
  "symbols_in_volume": [
   "numpy.linalg.norm",
   "numpy.maximum",
   "numpy.minimum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.layer_norm_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.layer_norm_op_test.TestLayerNormOp": {
  "lineno": 68,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.layer_norm_op_test.TestLayerNormOp.test_layer_norm_brew_wrapper": {
  "lineno": 355,
  "symbols_in_volume": [
   "caffe2.python.brew.layer_norm",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.model_helper.ModelHelper",
   "hypothesis.given",
   "numpy.ndim",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.layer_norm_op_test.TestLayerNormOp.test_layer_norm_grad": {
  "lineno": 139,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "numpy.arange",
   "numpy.float32",
   "numpy.random.randn",
   "numpy.random.shuffle"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.layer_norm_op_test.TestLayerNormOp.test_layer_norm_grad_op": {
  "lineno": 69,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "functools.partial",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.layer_norm_op_test.TestLayerNormOp.test_layer_norm_op": {
  "lineno": 98,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "functools.partial",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.floats",
   "numpy.float32",
   "numpy.random.randint",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.layer_norm_op_test.TestLayerNormOp.test_layer_norm_op_c10": {
  "lineno": 170,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.workspace.has_hip_support",
   "functools.partial",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.floats",
   "numpy.float32",
   "numpy.random.randint",
   "numpy.random.randn",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.layer_norm_op_test.TestLayerNormOp.test_layer_norm_op_c10_preallocated_outputs": {
  "lineno": 214,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.has_hip_support",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.floats",
   "numpy.float32",
   "numpy.random.randint",
   "numpy.random.randn",
   "torch.testing.assert_allclose",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.layer_norm_op_test.TestLayerNormOp.test_layer_norm_op_jit": {
  "lineno": 321,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.floats",
   "numpy.float32",
   "numpy.random.randint",
   "numpy.random.randn",
   "torch.Tensor",
   "torch.tensor",
   "torch.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.layer_norm_op_test.TestLayerNormOp.test_layer_norm_op_jit.jit_layer_norm": {
  "lineno": 327,
  "symbols_in_volume": [
   "torch.jit.script",
   "torch.ops._caffe2.LayerNorm"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.layer_norm_op_test.TestLayerNormOp.test_layer_norm_op_pytorch": {
  "lineno": 262,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.floats",
   "numpy.float32",
   "numpy.random.randint",
   "numpy.random.randn",
   "torch.ops._caffe2.LayerNorm",
   "torch.tensor",
   "torch.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.layer_norm_op_test.TestLayerNormOp.test_layer_norm_op_pytorch_cuda": {
  "lineno": 291,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.workspace.has_cuda_support",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.floats",
   "numpy.float32",
   "numpy.random.randint",
   "numpy.random.randn",
   "torch.ops._caffe2.LayerNorm",
   "torch.tensor",
   "torch.testing.assert_allclose",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.layer_norm_op_test.TestLayerNormOp.test_layer_norm_with_empty_batch": {
  "lineno": 376,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.layer_norm_op_test.TestLayerNormOp.test_layer_norm_with_empty_batch.ref": {
  "lineno": 390,
  "symbols_in_volume": [
   "numpy.zeros",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.layer_norm_op_test._layer_norm_grad_ref": {
  "lineno": 41,
  "symbols_in_volume": [
   "numpy.power",
   "numpy.prod",
   "numpy.reshape",
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.layer_norm_op_test._layer_norm_ref": {
  "lineno": 22,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.prod",
   "numpy.reshape",
   "numpy.sqrt",
   "numpy.square"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.layer_norm_op_test._layer_norm_with_affine_ref": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.leaky_relu_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.leaky_relu_test.TestLeakyRelu": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.leaky_relu_test.TestLeakyRelu._feed_inputs": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.leaky_relu_test.TestLeakyRelu._get_inputs": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.utils.NCHW2NHWC",
   "numpy.float32",
   "numpy.logical_and",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.leaky_relu_test.TestLeakyRelu._get_op": {
  "lineno": 29,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.leaky_relu_test.TestLeakyRelu.test_leaky_relu_device_check": {
  "lineno": 122,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.leaky_relu_test.TestLeakyRelu.test_leaky_relu_gradients": {
  "lineno": 44,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.leaky_relu_test.TestLeakyRelu.test_leaky_relu_layout": {
  "lineno": 65,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.utils.NHWC2NCHW",
   "hypothesis.given",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "numpy.random.seed",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.leaky_relu_test.TestLeakyRelu.test_leaky_relu_model_helper_helper": {
  "lineno": 143,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.utils.NCHW2NHWC",
   "caffe2.python.utils.NHWC2NCHW",
   "hypothesis.given",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.leaky_relu_test.TestLeakyRelu.test_leaky_relu_reference_check": {
  "lineno": 91,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.leaky_relu_test.TestLeakyRelu.test_leaky_relu_reference_check.ref": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.learning_rate_adaption_op_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.learning_rate_adaption_op_test.TestLearningRateAdaption": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.learning_rate_adaption_op_test.TestLearningRateAdaption.test_learning_rate_adaption_op_normalization": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.hypothesis_test_util.tensors",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.floats",
   "numpy.array",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.learning_rate_adaption_op_test.TestLearningRateAdaption.test_learning_rate_adaption_op_normalization.ref": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.linalg.norm",
   "numpy.maximum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.learning_rate_adaption_op_test.TestLearningRateAdaption.test_learning_rate_adaption_op_without_normalization": {
  "lineno": 52,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.hypothesis_test_util.tensors",
   "hypothesis.given",
   "hypothesis.strategies.floats",
   "numpy.array",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.learning_rate_adaption_op_test.TestLearningRateAdaption.test_learning_rate_adaption_op_without_normalization.ref": {
  "lineno": 70,
  "symbols_in_volume": [
   "numpy.dot"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.learning_rate_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.learning_rate_op_test.TestLearningRate": {
  "lineno": 19,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.learning_rate_op_test.TestLearningRate.test_alter_learning_rate_op": {
  "lineno": 20,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.random.randint",
   "numpy.random.random"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.learning_rate_op_test.TestLearningRate.test_alter_learning_rate_op.ref": {
  "lineno": 28,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.learning_rate_op_test.TestLearningRate.test_composite_learning_rate_op": {
  "lineno": 151,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "copy.deepcopy",
   "functools.partial",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.asarray",
   "numpy.random.randint",
   "numpy.random.random",
   "numpy.random.seed",
   "numpy.random.uniform"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.learning_rate_op_test.TestLearningRate.test_composite_learning_rate_op.all_sub_policy_check_ref": {
  "lineno": 215,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.learning_rate_op_test.TestLearningRate.test_composite_learning_rate_op.exp_lr": {
  "lineno": 185,
  "symbols_in_volume": [
   "math.pow"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.learning_rate_op_test.TestLearningRate.test_composite_learning_rate_op.fixed_lr": {
  "lineno": 189,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.learning_rate_op_test.TestLearningRate.test_composite_learning_rate_op.one_policy_check_ref": {
  "lineno": 193,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.learning_rate_op_test.TestLearningRate.test_composite_learning_rate_op.step_lr": {
  "lineno": 181,
  "symbols_in_volume": [
   "math.pow"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.learning_rate_op_test.TestLearningRate.test_gate_learningrate": {
  "lineno": 120,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.random.randint",
   "numpy.random.uniform"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.learning_rate_op_test.TestLearningRate.test_gate_learningrate.ref": {
  "lineno": 131,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.learning_rate_op_test.TestLearningRate.test_hill_learning_rate_op": {
  "lineno": 49,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "numpy.random.randint",
   "numpy.random.random"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.learning_rate_op_test.TestLearningRate.test_hill_learning_rate_op.ref": {
  "lineno": 60,
  "symbols_in_volume": [
   "math.pow",
   "numpy.array"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.learning_rate_op_test.TestLearningRate.test_slope_learning_rate_op": {
  "lineno": 86,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "numpy.random.randint",
   "numpy.random.random"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.learning_rate_op_test.TestLearningRate.test_slope_learning_rate_op.ref": {
  "lineno": 96,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.length_split_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.length_split_op_test.TestLengthSplitOperator": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.length_split_op_test.TestLengthSplitOperator._length_split_op_ref": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.length_split_op_test.TestLengthSplitOperator.test_length_split_arg": {
  "lineno": 55,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.array",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.length_split_op_test.TestLengthSplitOperator.test_length_split_edge": {
  "lineno": 30,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.array",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.length_split_op_test.TestLengthSplitOperator.test_length_split_even_divide": {
  "lineno": 103,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.array",
   "numpy.int32",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.length_split_op_test.TestLengthSplitOperator.test_length_split_override_arg": {
  "lineno": 78,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.array",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.length_split_op_test.TestLengthSplitOperator.test_length_split_random": {
  "lineno": 129,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.array",
   "numpy.int32",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.lengths_pad_op_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.lengths_pad_op_test.TestLengthsPadOp": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.lengths_pad_op_test.TestLengthsPadOp.test_lengths_pad": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.lengths_tensor",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.max"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.lengths_pad_op_test.TestLengthsPadOp.test_lengths_pad.lengths_pad_op": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.lengths_reducer_fused_nbit_rowwise_ops_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.lengths_reducer_fused_nbit_rowwise_ops_test.TestLengthsReducerOpsFusedNBitRowwise": {
  "lineno": 10,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.lengths_reducer_fused_nbit_rowwise_ops_test.TestLengthsReducerOpsFusedNBitRowwise.test_sparse_lengths_mean": {
  "lineno": 110,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.GlobalInit",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.clip",
   "numpy.float32",
   "numpy.int32",
   "numpy.ones",
   "numpy.random.rand",
   "numpy.random.randint",
   "numpy.random.seed",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_array_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.lengths_reducer_fused_nbit_rowwise_ops_test.TestLengthsReducerOpsFusedNBitRowwise.test_sparse_lengths_mean_rowwise_sparse_with_skipped_pruning": {
  "lineno": 316,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.GlobalInit",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.array",
   "numpy.clip",
   "numpy.float32",
   "numpy.int32",
   "numpy.ones",
   "numpy.random.rand",
   "numpy.random.randint",
   "numpy.random.seed",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_array_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.lengths_reducer_fused_nbit_rowwise_ops_test.TestLengthsReducerOpsFusedNBitRowwise.test_sparse_lengths_sum": {
  "lineno": 11,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.GlobalInit",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.clip",
   "numpy.float32",
   "numpy.int32",
   "numpy.int64",
   "numpy.ones",
   "numpy.random.rand",
   "numpy.random.randint",
   "numpy.random.seed",
   "numpy.random.uniform",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_array_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.lengths_reducer_fused_nbit_rowwise_ops_test.TestLengthsReducerOpsFusedNBitRowwise.test_sparse_lengths_sum_rowwise_sparse": {
  "lineno": 192,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.python.workspace.RunOperatorOnce",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.clip",
   "numpy.float32",
   "numpy.int32",
   "numpy.int64",
   "numpy.ones",
   "numpy.random.rand",
   "numpy.random.randint",
   "numpy.random.uniform",
   "numpy.testing.assert_array_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.lengths_tile_op_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.lengths_tile_op_test.TestLengthsTileOp": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.lengths_tile_op_test.TestLengthsTileOp.test_lengths_tile": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.arrays",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.tuples",
   "numpy.float32",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.lengths_tile_op_test.TestLengthsTileOp.test_lengths_tile.lengths_tile_op": {
  "lineno": 28,
  "symbols_in_volume": [
   "numpy.concatenate"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.lengths_top_k_ops_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.lengths_top_k_ops_test.TestLengthsTopKOps": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.lengths_top_k_ops_test.TestLengthsTopKOps.test_lengths_top_k_empty_op": {
  "lineno": 46,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.lengths_top_k_ops_test.TestLengthsTopKOps.test_lengths_top_k_empty_op.lengths_top_k": {
  "lineno": 54,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.int32",
   "numpy.ones",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.lengths_top_k_ops_test.TestLengthsTopKOps.test_lengths_top_k_op": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.strategies.integers",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.lengths_top_k_ops_test.TestLengthsTopKOps.test_lengths_top_k_op.lengths_top_k": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.listwise_l2r_operator_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.listwise_l2r_operator_test.TestListwiseL2rOps": {
  "lineno": 10,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.listwise_l2r_operator_test.TestListwiseL2rOps.ref_lambda_rank_loss": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.sum",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.listwise_l2r_operator_test.TestListwiseL2rOps.ref_lambda_rank_loss.get_discounts": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.argsort",
   "numpy.log2"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.listwise_l2r_operator_test.TestListwiseL2rOps.ref_lambda_rank_loss.log_sigm": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.log"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.listwise_l2r_operator_test.TestListwiseL2rOps.ref_lambda_rank_loss.sigm": {
  "lineno": 23,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.listwise_l2r_operator_test.TestListwiseL2rOps.test_lambda_rank_loss": {
  "lineno": 63,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.RunOperatorOnce",
   "caffe2.python.workspace.blobs",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.append",
   "numpy.empty",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand",
   "numpy.random.randint",
   "numpy.random.random",
   "numpy.repeat",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.load_save_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.workspace.GpuDeviceType",
   "caffe2.python.workspace.NumGpuDevices",
   "caffe2.python.workspace.has_gpu_support",
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.load_save_test.TestLoadSave": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.operator_test.load_save_test.TestLoadSave.testBlobNameOverrides": {
  "lineno": 253,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.Blobs",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.HasBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunOperatorOnce",
   "errno.ENOENT",
   "numpy.random.permutation",
   "os.path.join",
   "shutil.rmtree",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.load_save_test.TestLoadSave.testLoadAllMultipleFiles": {
  "lineno": 406,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.Blobs",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunOperatorOnce",
   "errno.ENOENT",
   "numpy.testing.assert_array_equal",
   "shutil.rmtree",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.load_save_test.TestLoadSave.testLoadAllMultipleFilesWithSameKey": {
  "lineno": 442,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.Blobs",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunOperatorOnce",
   "errno.ENOENT",
   "shutil.rmtree",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.load_save_test.TestLoadSave.testLoadExcessblobs": {
  "lineno": 183,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunOperatorOnce",
   "errno.ENOENT",
   "shutil.rmtree",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.load_save_test.TestLoadSave.testLoadMultipleFilesGivenSourceBlobNames": {
  "lineno": 369,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.Blobs",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunOperatorOnce",
   "errno.ENOENT",
   "numpy.testing.assert_array_equal",
   "shutil.rmtree",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.load_save_test.TestLoadSave.testLoadRepeatedFiles": {
  "lineno": 464,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.Blobs",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunOperatorOnce",
   "errno.ENOENT",
   "shutil.rmtree",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.load_save_test.TestLoadSave.testLoadSave": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.load_save_test.TestLoadSave.testMissingFile": {
  "lineno": 347,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.RunOperatorOnce",
   "errno.ENOENT",
   "os.path.join",
   "shutil.rmtree",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.load_save_test.TestLoadSave.testRepeatedArgs": {
  "lineno": 158,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.HasBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "errno.ENOENT",
   "numpy.bool",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.random.permutation",
   "numpy.uint16",
   "numpy.uint8",
   "os.path.join",
   "shutil.rmtree",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.load_save_test.TestLoadSave.testTruncatedFile": {
  "lineno": 222,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.RunOperatorOnce",
   "errno.ENOENT",
   "os.SEEK_END",
   "shutil.rmtree",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.load_save_test.TestLoadSaveBase": {
  "lineno": 28,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.load_save_test.TestLoadSaveBase.__init__": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.load_save_test.TestLoadSaveBase.load_save": {
  "lineno": 34,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.IsGPUDeviceType",
   "caffe2.python.workspace.Blobs",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.HasBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunOperatorOnce",
   "errno.ENOENT",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.bool",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.random.permutation",
   "numpy.uint16",
   "numpy.uint8",
   "os.path.join",
   "shutil.rmtree",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.load_save_test.TestLoadSaveBase.load_save._LoadTest": {
  "lineno": 72,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.BlobProto",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.IsGPUDeviceType",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.HasBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "caffe2.python.workspace.SerializeBlob",
   "numpy.testing.assert_array_equal",
   "os.path.join"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.load_save_test.TestLoadSaveBase.saveFile": {
  "lineno": 132,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.HasBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.bool",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.random.permutation",
   "numpy.uint16",
   "numpy.uint8",
   "os.path.join"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.locally_connected_op_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.locally_connected_op_test.TestLocallyConnectedOp": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.locally_connected_op_test.TestLocallyConnectedOp.test_lc_1d": {
  "lineno": 97,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.locally_connected_op_test.TestLocallyConnectedOp.test_lc_1d.lc_1d_nchw": {
  "lineno": 125,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.locally_connected_op_test.TestLocallyConnectedOp.test_lc_1d.lc_1d_nchw.conv": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.locally_connected_op_test.TestLocallyConnectedOp.test_lc_2d": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.locally_connected_op_test.TestLocallyConnectedOp.test_lc_2d.lc_2d_nchw": {
  "lineno": 57,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.locally_connected_op_test.TestLocallyConnectedOp.test_lc_2d.lc_2d_nchw.conv": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.locally_connected_op_test.TestLocallyConnectedOp.test_lc_2d.lc_2d_nhwc": {
  "lineno": 79,
  "symbols_in_volume": [
   "caffe2.python.utils.NCHW2NHWC",
   "caffe2.python.utils.NHWC2NCHW",
   "numpy.transpose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.locally_connected_op_test.TestLocallyConnectedOp.test_lc_3d": {
  "lineno": 154,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.locally_connected_op_test.TestLocallyConnectedOp.test_lc_3d.lc_3d_nchw": {
  "lineno": 191,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.locally_connected_op_test.TestLocallyConnectedOp.test_lc_3d.lc_3d_nchw.conv": {
  "lineno": 195,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.loss_ops_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.loss_ops_test.TestLossOps": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.loss_ops_test.TestLossOps.test_averaged_loss": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.loss_ops_test.TestLossOps.test_averaged_loss.avg_op": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.mean"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.lpnorm_op_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.lpnorm_op_test.LpnormTest": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.lpnorm_op_test.LpnormTest.test_Lp_Norm": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensors",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.float32",
   "numpy.linalg.norm",
   "numpy.sign",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.lpnorm_op_test.LpnormTest.test_lpnorm_shape_inference": {
  "lineno": 77,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.FLOAT",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.InferShapesAndTypes",
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.python.workspace.blobs.shape",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.map_ops_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.map_ops_test.TestMap": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.map_ops_test.TestMap.test_create_map": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.DataType.INT32",
   "caffe2.python.core.DataType.INT64",
   "caffe2.python.workspace.HasBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "itertools.product"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.map_ops_test.TestMap.test_map": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.int32",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.map_ops_test.TestMap.test_map.test_map_func": {
  "lineno": 33,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.asarray",
   "os.path.join",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.margin_ranking_criterion_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.margin_ranking_criterion_op_test.TestMarginRankingCriterion": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.margin_ranking_criterion_op_test.TestMarginRankingCriterion.test_margin_ranking_criterion": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "numpy.abs",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.choice",
   "numpy.random.randn",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.margin_ranking_criterion_op_test.TestMarginRankingCriterion.test_margin_ranking_criterion.ref_cec": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.maximum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.math_ops_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.math_ops_test.TestMathOps": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.math_ops_test.TestMathOps.test_elementwise_power": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.strategies.floats",
   "numpy.abs"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.math_ops_test.TestMathOps.test_elementwise_power.powf": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.math_ops_test.TestMathOps.test_elementwise_power.powf_grad": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.math_ops_test.TestMathOps.test_sign": {
  "lineno": 38,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.floats"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.math_ops_test.TestMathOps.test_sign.signf": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.sign"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.matmul_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.matmul_op_test.TestBatchMatMul": {
  "lineno": 130,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.matmul_op_test.TestBatchMatMul._test_batch_matmul_with_broadcast_common": {
  "lineno": 190,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.matmul_op_test.TestBatchMatMul._test_batch_matmul_with_broadcast_common.matmul_ref": {
  "lineno": 209,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.matmul"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.matmul_op_test.TestBatchMatMul.test_batch_matmul": {
  "lineno": 131,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.IsGPUDeviceType",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float16",
   "numpy.float32",
   "numpy.int64",
   "numpy.random.rand",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.matmul_op_test.TestBatchMatMul.test_batch_matmul.matmul_ref": {
  "lineno": 164,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.matmul"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.matmul_op_test.TestBatchMatMul.test_batch_matmul.relax_fp16_check": {
  "lineno": 170,
  "symbols_in_volume": [
   "inspect.getargspec",
   "numpy.float16"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.matmul_op_test.TestBatchMatMul.test_numpy_batch_matmul": {
  "lineno": 219,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.int64",
   "numpy.random.rand",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.matmul_op_test.TestBatchMatMul.test_numpy_batch_matmul_1d": {
  "lineno": 247,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.matmul_op_test.TestBatchMatMul.test_numpy_batch_matmul_1d_2d": {
  "lineno": 260,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.matmul_op_test.TestBatchMatMul.test_numpy_batch_matmul_2d_1d": {
  "lineno": 274,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.matmul_op_test.TestMatMul": {
  "lineno": 19,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.matmul_op_test.TestMatMul.test_matmul": {
  "lineno": 20,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.matmul_op_test.TestMatMul.test_matmul.matmul_ref": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.matmul_op_test.TestMatMul.test_matmul_axis": {
  "lineno": 55,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.matmul_op_test.TestMatMul.test_matmul_axis.canonical_axis": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.matmul_op_test.TestMatMul.test_matmul_axis.matmul_ref": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.matmul_op_test.TestMatMul.test_matmul_axis.reshape": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.matmul_op_test.TestMatMul.test_matmul_axis.size_from_dim": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.matmul_op_test.TestMatMul.test_matmul_axis.size_to_dim": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.mean_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.mean_op_test.TestMean": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.mean_op_test.TestMean.test_mean": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.randn",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.mean_op_test.TestMean.test_mean.mean_ref": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.mean"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.merge_id_lists_op_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.merge_id_lists_op_test.TestMergeIdListsOp": {
  "lineno": 54,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.merge_id_lists_op_test.TestMergeIdListsOp.test_merge_id_lists_op": {
  "lineno": 70,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.serialized_test.serialized_test_util.given"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.merge_id_lists_op_test.TestMergeIdListsOp.test_merge_id_lists_ref": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int32",
   "numpy.int64",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.merge_id_lists_op_test.id_list_batch": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.lengths",
   "hypothesis.extra.numpy.arrays",
   "hypothesis.strategies.composite",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.int32",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.merge_id_lists_op_test.merge_id_lists_ref": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.concatenate",
   "numpy.cumsum",
   "numpy.insert"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.merge_id_lists_op_test.merge_id_lists_ref.merge_arrays": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.sort",
   "numpy.unique"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.mkl_conv_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.mkl_conv_op_test.MKLConvTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase",
   "caffe2.python.workspace.C.has_mkldnn",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.mkl_conv_op_test.MKLConvTest.test_mkl_convolution": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.mkl_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.mkl_packed_fc_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.mkl_packed_fc_op_test.PackedFCTest": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.core.IsOperator",
   "caffe2.python.hypothesis_test_util.HypothesisTestCase",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.mkl_packed_fc_op_test.PackedFCTest.test_packed_fc": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.core.C.builtin_cpu_supports_avx2",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.seed",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.mkl_packed_fc_op_test.PackedFCTest.test_packed_fc.ref": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.dot"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.mkl_packed_fc_op_test.PackedFCTest.test_packed_fc_axis": {
  "lineno": 47,
  "symbols_in_volume": [
   "caffe2.python.core.C.builtin_cpu_supports_avx2",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.prod",
   "numpy.random.randn",
   "numpy.random.seed",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.mkl_packed_fc_op_test.PackedFCTest.test_packed_fc_axis.ref": {
  "lineno": 67,
  "symbols_in_volume": [
   "numpy.dot"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.mod_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.mod_op_test.TestMod": {
  "lineno": 27,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.mod_op_test.TestMod.test_mod": {
  "lineno": 28,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.iinfo",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.mod_op_test.TestMod.test_mod.ref": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.fmod"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.mod_op_test._data": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.strategies.composite",
   "hypothesis.strategies.integers",
   "numpy.iinfo",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.moments_op_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.moments_op_test.TestMomentsOp": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.moments_op_test.TestMomentsOp.run_moments_test": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.moments_op_test.TestMomentsOp.run_moments_test.ref": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.var"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.moments_op_test.TestMomentsOp.test_moments": {
  "lineno": 45,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "itertools.combinations",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.momentum_sgd_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.momentum_sgd_test.TestMomentumSGD": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.momentum_sgd_test.TestMomentumSGD.test_fp16momentum_sgd": {
  "lineno": 144,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CUDA",
   "caffe2.proto.caffe2_pb2.HIP",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.IsGPUDeviceType",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.workspace.GetDeviceProperties",
   "caffe2.python.workspace.has_gpu_support",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float16",
   "numpy.float32",
   "numpy.random.rand",
   "unittest.skip",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.momentum_sgd_test.TestMomentumSGD.test_fp16momentum_sgd.momentum_sgd": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.momentum_sgd_test.TestMomentumSGD.test_momentum_sgd": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.momentum_sgd_test.TestMomentumSGD.test_momentum_sgd.momentum_sgd": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.momentum_sgd_test.TestMomentumSGD.test_sparse_momentum_sgd": {
  "lineno": 74,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.hypothesis_test_util.tensors",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.data",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.sampled_from",
   "numpy.abs",
   "numpy.arange",
   "numpy.array_equal",
   "numpy.asarray",
   "numpy.float32",
   "numpy.int64",
   "numpy.sort",
   "numpy.unique"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.momentum_sgd_test.TestMomentumSGD.test_sparse_momentum_sgd.momentum_sgd": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.momentum_sgd_test.TestMomentumSGD.test_sparse_momentum_sgd.sparse": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.mpi_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.dyndep.InitOpsLibrary",
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.mpi_test.SetupMPI": {
  "lineno": 22,
  "symbols_in_volume": [
   "caffe2.python.core.IsOperatorWithEngine",
   "mpi4py.MPI.COMM_WORLD"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.mpi_test.TestMPI": {
  "lineno": 34,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.mpi_test.TestMPI.test_allreduce": {
  "lineno": 88,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.device_options",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunOperatorOnce",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.mpi_test.TestMPI.test_broadcast": {
  "lineno": 37,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.device_options",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunOperatorOnce",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.mpi_test.TestMPI.test_reduce": {
  "lineno": 62,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.device_options",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunOperatorOnce",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.mpi_test.TestMPI.test_sendrecv": {
  "lineno": 121,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.device_options",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunOperatorOnce",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.sampled_from",
   "numpy.array",
   "numpy.int32",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.mul_gradient_benchmark": {
  "lineno": null,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "caffe2.python.core.GlobalInit"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.mul_gradient_benchmark.benchmark_mul_gradient": {
  "lineno": 12,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.BenchmarkNet",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.negate_gradient_op_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.negate_gradient_op_test.TestNegateGradient": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.negate_gradient_op_test.TestNegateGradient.test_forward": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.negate_gradient_op_test.TestNegateGradient.test_forward.neg_grad_ref": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.negate_gradient_op_test.TestNegateGradient.test_grad": {
  "lineno": 26,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlobs",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.lists",
   "numpy.float32",
   "numpy.random.random_sample",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.ngram_ops_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.ngram_ops_test.TestNGramOps": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.ngram_ops_test.TestNGramOps.test_ngram_from_categorical_op": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunOperatorOnce",
   "caffe2.python.workspace.blobs",
   "hypothesis.given",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.prod",
   "numpy.random.choice",
   "numpy.random.rand",
   "numpy.random.randint",
   "numpy.random.seed",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.normalize_op_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.normalize_op_test.TestNormalizeOp": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.normalize_op_test.TestNormalizeOp.test_normalize": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "copy.copy",
   "functools.partial",
   "hypothesis.given",
   "hypothesis.settings"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.normalize_op_test.TestNormalizeOp.test_normalize.ref_normalize": {
  "lineno": 23,
  "symbols_in_volume": [
   "numpy.maximum",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.normalize_op_test.TestNormalizeOp.test_normalize_L1": {
  "lineno": 38,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "functools.partial",
   "hypothesis.given",
   "hypothesis.settings"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.normalize_op_test.TestNormalizeOp.test_normalize_L1.ref": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.numpy_tile_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.numpy_tile_op_test.TestNumpyTile": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.numpy_tile_op_test.TestNumpyTile.test_numpy_tile": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.random.randint",
   "numpy.random.randn",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.numpy_tile_op_test.TestNumpyTile.test_numpy_tile.tile_ref": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.tile"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.numpy_tile_op_test.TestNumpyTile.test_numpy_tile_zero_dim": {
  "lineno": 41,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.random.randint",
   "numpy.random.randn",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.numpy_tile_op_test.TestNumpyTile.test_numpy_tile_zero_dim.tile_ref": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.tile"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.one_hot_ops_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.one_hot_ops_test.TestOneHotOps": {
  "lineno": 29,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.one_hot_ops_test.TestOneHotOps.test_batch_bucket_one_hot_shape_inference": {
  "lineno": 166,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.FLOAT",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.InferShapesAndTypes",
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.python.workspace.blobs.shape",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.append",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.randint",
   "numpy.random.randn",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.one_hot_ops_test.TestOneHotOps.test_batch_bucketized_one_hot": {
  "lineno": 60,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.append",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.randint",
   "numpy.random.randn",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.one_hot_ops_test.TestOneHotOps.test_batch_bucketized_one_hot.ref": {
  "lineno": 85,
  "symbols_in_volume": [
   "numpy.add",
   "numpy.digitize",
   "numpy.floor_divide",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.one_hot_ops_test.TestOneHotOps.test_batch_one_hot": {
  "lineno": 30,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.strategies.integers",
   "numpy.array",
   "numpy.int32",
   "numpy.unique"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.one_hot_ops_test.TestOneHotOps.test_batch_one_hot.ref": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.one_hot_ops_test.TestOneHotOps.test_one_hot": {
  "lineno": 113,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.strategies.integers",
   "numpy.array",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.one_hot_ops_test.TestOneHotOps.test_one_hot.one_hot_ref": {
  "lineno": 121,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.one_hot_ops_test.TestOneHotOps.test_segment_one_hot": {
  "lineno": 139,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.cpu_do",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "numpy.array",
   "numpy.int32",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.one_hot_ops_test.TestOneHotOps.test_segment_one_hot.segment_one_hot_ref": {
  "lineno": 147,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.one_hot_ops_test._one_hots": {
  "lineno": 15,
  "symbols_in_volume": [
   "hypothesis.strategies.integers",
   "hypothesis.strategies.just",
   "hypothesis.strategies.lists",
   "hypothesis.strategies.tuples"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.onnx_while_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.onnx_while_test.TestONNXWhile": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.onnx_while_test.TestONNXWhile.test_onnx_while_fibb": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.proto.caffe2_pb2.TensorProto.FLOAT",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.array",
   "numpy.bool",
   "numpy.float32",
   "numpy.int64",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.onnx_while_test.TestONNXWhile.test_onnx_while_fibb.ref": {
  "lineno": 76,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.order_switch_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.order_switch_test.OrderSwitchOpsTest": {
  "lineno": 9,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.order_switch_test.OrderSwitchOpsTest.test_nchw2nhwc": {
  "lineno": 10,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.sampled_from"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.order_switch_test.OrderSwitchOpsTest.test_nchw2nhwc.nchw2nhwc_ref": {
  "lineno": 19,
  "symbols_in_volume": [
   "caffe2.python.utils.NCHW2NHWC"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.order_switch_test.OrderSwitchOpsTest.test_nhwc2nchw": {
  "lineno": 26,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.sampled_from"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.order_switch_test.OrderSwitchOpsTest.test_nhwc2nchw.nhwc2nchw_ref": {
  "lineno": 35,
  "symbols_in_volume": [
   "caffe2.python.utils.NHWC2NCHW"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.pack_ops_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.pack_ops_test.TestTensorPackOps": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.pack_ops_test.TestTensorPackOps.pack_segments_ref": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.pack_ops_test.TestTensorPackOps.pack_segments_ref.pack_segments_ref": {
  "lineno": 19,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.max",
   "numpy.ones",
   "numpy.pad",
   "numpy.size"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.pack_ops_test.TestTensorPackOps.test_out_of_bounds": {
  "lineno": 328,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.array",
   "numpy.float32",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.pack_ops_test.TestTensorPackOps.test_pack_ops": {
  "lineno": 133,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.arange",
   "numpy.cumsum",
   "numpy.float32",
   "numpy.int32",
   "numpy.sum",
   "numpy.zeros",
   "time.time"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.pack_ops_test.TestTensorPackOps.test_pack_ops_str": {
  "lineno": 184,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "hypothesis.given",
   "numpy.array",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.pack_ops_test.TestTensorPackOps.test_pack_with_max_length_ops": {
  "lineno": 59,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.arange",
   "numpy.cumsum",
   "numpy.float32",
   "numpy.int32",
   "numpy.sum",
   "numpy.zeros",
   "time.time"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.pack_ops_test.TestTensorPackOps.test_pack_with_max_length_ops._cal_unpacked_data": {
  "lineno": 115,
  "symbols_in_volume": [
   "numpy.concatenate"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.pack_ops_test.TestTensorPackOps.test_pad_minf": {
  "lineno": 211,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.array",
   "numpy.float32",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.pack_ops_test.TestTensorPackOps.test_pad_no_minf": {
  "lineno": 236,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.array",
   "numpy.float32",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.pack_ops_test.TestTensorPackOps.test_presence_mask": {
  "lineno": 272,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "hypothesis.given",
   "numpy.array",
   "numpy.bool",
   "numpy.float32",
   "numpy.int32",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.pack_ops_test.TestTensorPackOps.test_presence_mask_empty": {
  "lineno": 313,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.array",
   "numpy.float32",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.pack_ops_test.TestTensorPackOps.test_under_bounds": {
  "lineno": 351,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.array",
   "numpy.float32",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.pack_rnn_sequence_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.pack_rnn_sequence_op_test.TestPackRNNSequenceOperator": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.pack_rnn_sequence_op_test.TestPackRNNSequenceOperator.test_pack_rnn_seqence": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.pack_rnn_sequence_op_test.TestPackRNNSequenceOperator.test_pack_rnn_seqence.pack_op": {
  "lineno": 22,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.pack_rnn_sequence_op_test.TestPackRNNSequenceOperator.test_unpack_rnn_seqence": {
  "lineno": 51,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.pack_rnn_sequence_op_test.TestPackRNNSequenceOperator.test_unpack_rnn_seqence.unpack_op": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.pad_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.pad_test.TestPad": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.pad_test.TestPad.test_crop": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.pad_test.TestPad.test_crop.ref": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.partition_ops_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.partition_ops_test.TestPartitionOps": {
  "lineno": 10,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.partition_ops_test.TestPartitionOps.testLengthsPartition": {
  "lineno": 104,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.test_util.rand_array",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.array",
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "numpy.random.randint",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.partition_ops_test.TestPartitionOps.testLengthsPartition.sharding": {
  "lineno": 138,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.partition_ops_test.TestPartitionOps.testLengthsPartition.sharding.join": {
  "lineno": 164,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.stack"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.partition_ops_test.TestPartitionOps.testPartition": {
  "lineno": 35,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.test_util.rand_array",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.float32",
   "numpy.float64",
   "numpy.random.randint",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.partition_ops_test.TestPartitionOps.testPartition.sharding": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.partition_ops_test.TestPartitionOps.testPartition.sharding.join": {
  "lineno": 71,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.stack"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.partition_ops_test.TestPartitionOps.test_configs": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.int32",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.percentile_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.percentile_op_test.TestPercentileOp": {
  "lineno": 11,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.percentile_op_test.TestPercentileOp._test_percentile_op": {
  "lineno": 12,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.percentile_op_test.TestPercentileOp._test_shape_inference": {
  "lineno": 43,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.FLOAT",
   "caffe2.python.core.Net",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.InferShapesAndTypes",
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.python.workspace.blobs.shape",
   "numpy.array",
   "numpy.float32",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.percentile_op_test.TestPercentileOp.test_percentile_op_with_all_elements_in_map": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.percentile_op_test.TestPercentileOp.test_percentile_op_with_elements_bigger_than_map_range": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.percentile_op_test.TestPercentileOp.test_percentile_op_with_elements_smaller_than_map_range": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.percentile_op_test.TestPercentileOp.test_percentile_op_with_interpolation": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.percentile_op_test.TestPercentileOp.test_percentile_op_with_large_sample_size_per_dist": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.percentile_op_test.TestPercentileOp.test_percentile_op_with_only_one_dist": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.percentile_op_test.TestPercentileOp.test_percentile_op_with_same_value": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.piecewise_linear_transform_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.piecewise_linear_transform_test.TestPiecewiseLinearTransform": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.piecewise_linear_transform_test.TestPiecewiseLinearTransform.constrain": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.piecewise_linear_transform_test.TestPiecewiseLinearTransform.constrain.constrain_internal": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.piecewise_linear_transform_test.TestPiecewiseLinearTransform.test_1D_predictions_params_from_input": {
  "lineno": 144,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.uniform"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.piecewise_linear_transform_test.TestPiecewiseLinearTransform.test_1D_predictions_params_from_input.piecewise": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.piecewise_linear_transform_test.TestPiecewiseLinearTransform.test_binary_predictions_params_from_arg": {
  "lineno": 63,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.uniform"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.piecewise_linear_transform_test.TestPiecewiseLinearTransform.test_binary_predictions_params_from_arg.piecewise": {
  "lineno": 83,
  "symbols_in_volume": [
   "numpy.vstack"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.piecewise_linear_transform_test.TestPiecewiseLinearTransform.test_binary_predictions_params_from_input": {
  "lineno": 118,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.uniform"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.piecewise_linear_transform_test.TestPiecewiseLinearTransform.test_binary_predictions_params_from_input.piecewise": {
  "lineno": 136,
  "symbols_in_volume": [
   "numpy.vstack"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.piecewise_linear_transform_test.TestPiecewiseLinearTransform.test_multi_predictions_params_from_arg": {
  "lineno": 35,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.uniform"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.piecewise_linear_transform_test.TestPiecewiseLinearTransform.test_multi_predictions_params_from_arg.piecewise": {
  "lineno": 52,
  "symbols_in_volume": [
   "numpy.vstack"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.piecewise_linear_transform_test.TestPiecewiseLinearTransform.test_multi_predictions_params_from_input": {
  "lineno": 90,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.uniform"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.piecewise_linear_transform_test.TestPiecewiseLinearTransform.test_multi_predictions_params_from_input.piecewise": {
  "lineno": 106,
  "symbols_in_volume": [
   "numpy.vstack"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.piecewise_linear_transform_test.TestPiecewiseLinearTransform.transform": {
  "lineno": 22,
  "symbols_in_volume": [
   "numpy.maximum",
   "numpy.minimum",
   "numpy.searchsorted"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.pooling_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.pooling_test.TestPooling": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.pooling_test.TestPooling.test_avg_pool_count_include_pad": {
  "lineno": 408,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hip_test_util.run_in_hip",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.randn",
   "numpy.transpose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.pooling_test.TestPooling.test_global_avg_pool_nchw": {
  "lineno": 220,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.pooling_test.TestPooling.test_global_max_pool_nchw": {
  "lineno": 244,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.workspace.GetCuDNNVersion",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.pooling_test.TestPooling.test_global_pooling": {
  "lineno": 312,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hip_test_util.run_in_hip",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.utils.NHWC2NCHW",
   "caffe2.python.workspace.GetCuDNNVersion",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.pooling_test.TestPooling.test_global_pooling_3d": {
  "lineno": 157,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hip_test_util.run_in_hip",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.utils.NHWC2NCHW",
   "caffe2.python.workspace.GetHIPVersion",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.pooling_test.TestPooling.test_max_pool_grad": {
  "lineno": 344,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hip_test_util.run_in_hip",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.arange",
   "numpy.float32",
   "numpy.random.shuffle",
   "numpy.transpose",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.pooling_test.TestPooling.test_pooling": {
  "lineno": 274,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hip_test_util.run_in_hip",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.utils.NHWC2NCHW",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.pooling_test.TestPooling.test_pooling_1d": {
  "lineno": 83,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.utils.NHWC2NCHW",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.pooling_test.TestPooling.test_pooling_3d": {
  "lineno": 116,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hip_test_util.run_in_hip",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.utils.NHWC2NCHW",
   "caffe2.python.workspace.GetHIPVersion",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.pooling_test.TestPooling.test_pooling_big_batch": {
  "lineno": 64,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cuda_only",
   "hypothesis.given",
   "numpy.float32",
   "numpy.random.rand",
   "os.getenv",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.pooling_test.TestPooling.test_pooling_separate_stride_pad": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.utils.NHWC2NCHW",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.max",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.pooling_test.TestPooling.test_pooling_with_index": {
  "lineno": 191,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_gpu_only",
   "caffe2.python.utils.NHWC2NCHW",
   "caffe2.python.workspace.has_gpu_support",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.prepend_dim_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.prepend_dim_test.TestPrependDim": {
  "lineno": 12,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.prepend_dim_test.TestPrependDim._test_fwd_bwd": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.prepend_dim_test.TestPrependDim.test_prepend_dim": {
  "lineno": 39,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.workspace.GpuDeviceType",
   "caffe2.python.workspace.NumGpuDevices"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.python_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.python_op_test.PythonOpTest": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.python_op_test.PythonOpTest.test_simple_python_op": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.core.CreatePythonOperator",
   "caffe2.python.core.ExecutionStep",
   "caffe2.python.core.Net",
   "caffe2.python.core.Plan",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunPlan",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.python_op_test.PythonOpTest.test_simple_python_op.f": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.python_op_test.PythonOpTest.test_simple_python_op.g": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.quantile_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.core.GlobalInit",
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.quantile_test.TestQuantile": {
  "lineno": 10,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.quantile_test.TestQuantile._test_quantile": {
  "lineno": 11,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.abs",
   "numpy.ceil",
   "numpy.concatenate",
   "numpy.size",
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.quantile_test.TestQuantile.test_quantile_1": {
  "lineno": 47,
  "symbols_in_volume": [
   "numpy.random.rand",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.quantile_test.TestQuantile.test_quantile_2": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.random.rand",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.quantile_test.TestQuantile.test_quantile_3": {
  "lineno": 63,
  "symbols_in_volume": [
   "numpy.random.rand",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.quantile_test.TestQuantile.test_quantile_4": {
  "lineno": 72,
  "symbols_in_volume": [
   "numpy.random.rand",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rand_quantization_op_speed_test": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.set_printoptions",
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.rand_quantization_op_speed_test.TestSpeedFloatToFusedRandRowwiseQuantized": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.rand_quantization_op_speed_test.TestSpeedFloatToFusedRandRowwiseQuantized.test_speed_of_rand_quantization": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.RunNet",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.sampled_from",
   "numpy.array",
   "numpy.float32",
   "numpy.random.rand",
   "time.time"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rand_quantization_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.set_printoptions",
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.rand_quantization_op_test.TestFloatToFusedRandRowwiseQuantized": {
  "lineno": 19,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.rand_quantization_op_test.TestFloatToFusedRandRowwiseQuantized.test_rand_quantization": {
  "lineno": 20,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "hypothesis.example",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.sampled_from",
   "numpy.absolute",
   "numpy.array",
   "numpy.float32",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_array_less",
   "numpy.zeros_like",
   "struct.unpack",
   "unittest.skip"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rand_quantization_op_test.TestFloatToFusedRandRowwiseQuantized.test_rand_quantization.dec_ref": {
  "lineno": 74,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float",
   "numpy.uint8",
   "numpy.zeros",
   "struct.unpack"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rand_quantization_op_test.TestFloatToFusedRandRowwiseQuantized.test_rand_quantization.get_allowed_errors": {
  "lineno": 64,
  "symbols_in_volume": [
   "numpy.amax",
   "numpy.amin",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rand_quantization_op_test.TestFloatToFusedRandRowwiseQuantized.test_rand_quantization.quantization_ref": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.amax",
   "numpy.amin",
   "numpy.around",
   "numpy.uint8",
   "numpy.zeros",
   "struct.pack"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rank_loss_operator_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.rank_loss_operator_test.TestPairWiseLossOps": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.rank_loss_operator_test.TestPairWiseLossOps.test_pair_wise_loss_batch": {
  "lineno": 103,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rank_loss_operator_test.TestPairWiseLossOps.test_pair_wise_loss_batch.pair_wise_op": {
  "lineno": 109,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rank_loss_operator_test.TestPairWiseLossOps.test_pair_wise_loss_batch.pair_wise_op.f": {
  "lineno": 113,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.log"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rank_loss_operator_test.TestPairWiseLossOps.test_pair_wise_loss_gradient": {
  "lineno": 50,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.core.Plan",
   "caffe2.python.core.execution_step",
   "caffe2.python.hypothesis_test_util.arrays",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunPlan",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.array",
   "numpy.asscalar",
   "numpy.exp",
   "numpy.float32",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rank_loss_operator_test.TestPairWiseLossOps.test_pair_wise_loss_predictions": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.core.Plan",
   "caffe2.python.core.execution_step",
   "caffe2.python.hypothesis_test_util.arrays",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunPlan",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.array",
   "numpy.asscalar",
   "numpy.exp",
   "numpy.float32",
   "numpy.log"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rebatching_queue_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.rebatching_queue_test.TestReBatchingQueue": {
  "lineno": 30,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.rebatching_queue_test.TestReBatchingQueue.test_rebatching_parallel_producer_consumer": {
  "lineno": 168,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.core.Plan",
   "caffe2.python.core.execution_step",
   "functools.reduce",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rebatching_queue_test.TestReBatchingQueue.test_rebatching_parallel_producer_consumer.append": {
  "lineno": 220,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.rebatching_queue_test.TestReBatchingQueue.test_rebatching_queue_closes_properly": {
  "lineno": 80,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.array",
   "numpy.int32",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rebatching_queue_test.TestReBatchingQueue.test_rebatching_queue_multi_enqueue_dequeue": {
  "lineno": 56,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.array",
   "numpy.int32",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rebatching_queue_test.TestReBatchingQueue.test_rebatching_queue_multiple_components": {
  "lineno": 120,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.python.workspace.blobs",
   "numpy.array",
   "numpy.int32",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rebatching_queue_test.TestReBatchingQueue.test_rebatching_queue_single_enqueue_dequeue": {
  "lineno": 31,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rebatching_queue_test.primefac": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.record_queue_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.record_queue_test.TestRecordQueue": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.record_queue_test.TestRecordQueue.test_record_queue": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.core.Plan",
   "caffe2.python.core.execution_step",
   "caffe2.python.core.workspace.RunPlan",
   "caffe2.python.dataset.Dataset",
   "caffe2.python.record_queue.RecordQueue",
   "caffe2.python.schema.FeedRecord",
   "caffe2.python.schema.Map",
   "caffe2.python.schema.NewRecord",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "caffe2.python.schema.from_blob_list",
   "caffe2.python.workspace.FetchBlobs",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.float32",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.record_queue_test.TestRecordQueue.test_record_queue.process": {
  "lineno": 48,
  "symbols_in_volume": [
   "caffe2.python.schema.from_blob_list"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.recurrent_net_executor_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.workspace.GlobalInit",
   "random.seed",
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.recurrent_net_executor_test.TestRNNExecutor": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.recurrent_net_executor_test.TestRNNExecutor._compare": {
  "lineno": 223,
  "symbols_in_volume": [
   "caffe2.python.workspace.Blobs",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNet",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.allclose",
   "numpy.float32",
   "numpy.ndarray",
   "numpy.random.rand",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.recurrent_net_executor_test.TestRNNExecutor.enable_rnn_executor": {
  "lineno": 287,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.recurrent_net_executor_test.TestRNNExecutor.init_lstm_model": {
  "lineno": 114,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.rnn_cell.LSTM",
   "caffe2.python.workspace.FeedBlob",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.recurrent_net_executor_test.TestRNNExecutor.setUp": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.recurrent_net_executor_test.TestRNNExecutor.test_empty_sequence": {
  "lineno": 169,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNet",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.recurrent_net_executor_test.TestRNNExecutor.test_lstm_equal_simplenet": {
  "lineno": 202,
  "symbols_in_volume": [
   "caffe2.python.core.DeviceScope",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.workspace.ResetWorkspace",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.recurrent_net_executor_test.TestRNNExecutor.test_lstm_with_attention_equal_simplenet": {
  "lineno": 27,
  "symbols_in_volume": [
   "caffe2.python.attention.AttentionType.Recurrent",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.rnn_cell.LSTMWithAttention",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.recurrent_network_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.recurrent_network_test.RecurrentNetworkTest": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.recurrent_network_test.RecurrentNetworkTest._convolution_1d": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.recurrent_network_test.RecurrentNetworkTest.simple_rnn": {
  "lineno": 109,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.cpu_do",
   "caffe2.python.recurrent.recurrent_net",
   "caffe2.python.workspace.blobs",
   "numpy.float32",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.recurrent_network_test.RecurrentNetworkTest.simple_rnn.reference": {
  "lineno": 131,
  "symbols_in_volume": [
   "caffe2.python.workspace.CurrentWorkspace",
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.python.workspace.SwitchWorkspace",
   "caffe2.python.workspace.blobs",
   "numpy.float32",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.recurrent_network_test.RecurrentNetworkTest.test_extract": {
  "lineno": 57,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.recurrent.recurrent_net",
   "caffe2.python.recurrent.retrieve_step_blobs",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNet",
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.python.workspace.blobs",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.recurrent_network_test.RecurrentNetworkTest.test_mul": {
  "lineno": 38,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.recurrent_network_test.RecurrentNetworkTest.test_stateful_convolution_forward_only": {
  "lineno": 226,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.recurrent_network_test.RecurrentNetworkTest.test_sum_mul": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduce_ops_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.reduce_ops_test.TestReduceFrontReductions": {
  "lineno": 128,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.reduce_ops_test.TestReduceFrontReductions.grad_variant_input_test": {
  "lineno": 129,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.array",
   "numpy.float32",
   "numpy.int64",
   "numpy.random.rand",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduce_ops_test.TestReduceFrontReductions.max_op_test": {
  "lineno": 154,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "numpy.array",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduce_ops_test.TestReduceFrontReductions.reduce_op_test": {
  "lineno": 190,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduce_ops_test.TestReduceFrontReductions.test_reduce_back_max": {
  "lineno": 338,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduce_ops_test.TestReduceFrontReductions.test_reduce_back_max.ref_backmax": {
  "lineno": 342,
  "symbols_in_volume": [
   "numpy.max"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduce_ops_test.TestReduceFrontReductions.test_reduce_back_max_with_length": {
  "lineno": 348,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "numpy.float32",
   "numpy.int32",
   "numpy.prod",
   "numpy.random.rand",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduce_ops_test.TestReduceFrontReductions.test_reduce_back_max_with_length.ref_max": {
  "lineno": 356,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.max",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduce_ops_test.TestReduceFrontReductions.test_reduce_back_mean": {
  "lineno": 401,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduce_ops_test.TestReduceFrontReductions.test_reduce_back_mean.ref_mean": {
  "lineno": 406,
  "symbols_in_volume": [
   "numpy.mean"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduce_ops_test.TestReduceFrontReductions.test_reduce_back_mean_with_length": {
  "lineno": 414,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.float32",
   "numpy.int32",
   "numpy.prod",
   "numpy.random.rand",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduce_ops_test.TestReduceFrontReductions.test_reduce_back_mean_with_length.ref_mean": {
  "lineno": 423,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.mean",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduce_ops_test.TestReduceFrontReductions.test_reduce_back_sum": {
  "lineno": 367,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduce_ops_test.TestReduceFrontReductions.test_reduce_back_sum.ref_sum": {
  "lineno": 373,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduce_ops_test.TestReduceFrontReductions.test_reduce_back_sum_with_length": {
  "lineno": 381,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.float32",
   "numpy.int32",
   "numpy.prod",
   "numpy.random.rand",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduce_ops_test.TestReduceFrontReductions.test_reduce_back_sum_with_length.ref_sum": {
  "lineno": 390,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.sum",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduce_ops_test.TestReduceFrontReductions.test_reduce_front_max": {
  "lineno": 309,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduce_ops_test.TestReduceFrontReductions.test_reduce_front_max.ref_frontmax": {
  "lineno": 313,
  "symbols_in_volume": [
   "numpy.max"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduce_ops_test.TestReduceFrontReductions.test_reduce_front_max_with_length": {
  "lineno": 319,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "numpy.float32",
   "numpy.int32",
   "numpy.prod",
   "numpy.random.rand",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduce_ops_test.TestReduceFrontReductions.test_reduce_front_max_with_length.ref_max": {
  "lineno": 327,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.max",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduce_ops_test.TestReduceFrontReductions.test_reduce_front_mean": {
  "lineno": 276,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduce_ops_test.TestReduceFrontReductions.test_reduce_front_mean.ref_mean": {
  "lineno": 281,
  "symbols_in_volume": [
   "numpy.mean"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduce_ops_test.TestReduceFrontReductions.test_reduce_front_mean_with_length": {
  "lineno": 289,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.float32",
   "numpy.int32",
   "numpy.prod",
   "numpy.random.rand",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduce_ops_test.TestReduceFrontReductions.test_reduce_front_mean_with_length.ref_mean": {
  "lineno": 298,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.mean",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduce_ops_test.TestReduceFrontReductions.test_reduce_front_sum": {
  "lineno": 209,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduce_ops_test.TestReduceFrontReductions.test_reduce_front_sum.ref_sum": {
  "lineno": 214,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduce_ops_test.TestReduceFrontReductions.test_reduce_front_sum_empty_batch": {
  "lineno": 222,
  "symbols_in_volume": [
   "caffe2.python.core.DeviceScope",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.GetNetName",
   "caffe2.python.workspace.RunNet",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.seed",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduce_ops_test.TestReduceFrontReductions.test_reduce_front_sum_empty_batch.ref_sum": {
  "lineno": 227,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduce_ops_test.TestReduceFrontReductions.test_reduce_front_sum_with_length": {
  "lineno": 256,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.float32",
   "numpy.int32",
   "numpy.prod",
   "numpy.random.rand",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduce_ops_test.TestReduceFrontReductions.test_reduce_front_sum_with_length.ref_sum": {
  "lineno": 265,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.sum",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduce_ops_test.TestReduceOps": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.reduce_ops_test.TestReduceOps.run_reduce_op_test": {
  "lineno": 45,
  "symbols_in_volume": [
   "itertools.combinations"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduce_ops_test.TestReduceOps.run_reduce_op_test_impl": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduce_ops_test.TestReduceOps.run_reduce_op_test_impl.ref": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.reduce_ops_test.TestReduceOps.test_reduce_l1": {
  "lineno": 98,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.arange",
   "numpy.float32",
   "numpy.random.shuffle"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduce_ops_test.TestReduceOps.test_reduce_l2": {
  "lineno": 108,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduce_ops_test.TestReduceOps.test_reduce_max": {
  "lineno": 71,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.arange",
   "numpy.float32",
   "numpy.max",
   "numpy.random.shuffle"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduce_ops_test.TestReduceOps.test_reduce_mean": {
  "lineno": 92,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.mean"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduce_ops_test.TestReduceOps.test_reduce_min": {
  "lineno": 59,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.arange",
   "numpy.float32",
   "numpy.min",
   "numpy.random.shuffle"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduce_ops_test.TestReduceOps.test_reduce_sum": {
  "lineno": 83,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.randn",
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduce_ops_test.getNorm": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.reduce_ops_test.getNorm.norm": {
  "lineno": 121,
  "symbols_in_volume": [
   "numpy.power",
   "numpy.sqrt",
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduction_ops_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.reduction_ops_test.TestReductionOps": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.reduction_ops_test.TestReductionOps.test_columnwise_max": {
  "lineno": 149,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduction_ops_test.TestReductionOps.test_columnwise_max.columnwise_max": {
  "lineno": 156,
  "symbols_in_volume": [
   "numpy.max"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduction_ops_test.TestReductionOps.test_elementwise_avg": {
  "lineno": 97,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduction_ops_test.TestReductionOps.test_elementwise_avg.avg_op": {
  "lineno": 101,
  "symbols_in_volume": [
   "numpy.mean"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduction_ops_test.TestReductionOps.test_elementwise_int_sum": {
  "lineno": 45,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.int32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduction_ops_test.TestReductionOps.test_elementwise_int_sum.sum_op": {
  "lineno": 50,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduction_ops_test.TestReductionOps.test_elementwise_sqrsum": {
  "lineno": 66,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.workspace.GpuDeviceType",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float16",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduction_ops_test.TestReductionOps.test_elementwise_sqrsum.sumsqr_op": {
  "lineno": 78,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduction_ops_test.TestReductionOps.test_elementwise_sum": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduction_ops_test.TestReductionOps.test_elementwise_sum.sum_op": {
  "lineno": 21,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduction_ops_test.TestReductionOps.test_rowwise_max": {
  "lineno": 126,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reduction_ops_test.TestReductionOps.test_rowwise_max.rowwise_max": {
  "lineno": 133,
  "symbols_in_volume": [
   "numpy.max"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reshape_ops_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.reshape_ops_test.TestLengthsToShapeOps": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.reshape_ops_test.TestLengthsToShapeOps.test_backprop": {
  "lineno": 74,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reshape_ops_test.TestLengthsToShapeOps.test_basic_reshape": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.reshape_ops_test.TestLengthsToShapeOps.test_empty_tensor": {
  "lineno": 130,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reshape_ops_test.TestLengthsToShapeOps.test_in_place": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.reshape_ops_test.TestLengthsToShapeOps.test_input_shape_changes": {
  "lineno": 104,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.RunNet",
   "numpy.array",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reshape_ops_test.TestLengthsToShapeOps.test_lengths_to_shape_ops": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.array",
   "numpy.int32",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reshape_ops_test.TestLengthsToShapeOps.test_missing_dim": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.reshape_ops_test.TestLengthsToShapeOps.test_nonempty_tensor_gradient": {
  "lineno": 119,
  "symbols_in_volume": [
   "numpy.ones"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reshape_ops_test.TestLengthsToShapeOps.test_one_dim_and_empty_tensor": {
  "lineno": 152,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.reshape_ops_test.TestLengthsToShapeOps.test_one_dim_empty_tensor_gradient": {
  "lineno": 141,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reshape_ops_test.TestLengthsToShapeOps.test_reshape_ops": {
  "lineno": 22,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.testing.assert_array_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.reshape_ops_test.TestLengthsToShapeOps.test_scalar_to_tensor": {
  "lineno": 158,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.reshape_ops_test.TestLengthsToShapeOps.test_zero_dim": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.reshape_ops_test.TestLengthsToShapeOps.test_zero_dim_and_missing_dim": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.reshape_ops_test._test_reshape_output_and_gradient": {
  "lineno": 165,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.core.Net",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.GpuDeviceType",
   "caffe2.python.workspace.NumGpuDevices",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.asarray",
   "numpy.atleast_1d",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.resize_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.resize_op_test.TestResize": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.resize_op_test.TestResize.test_nearest": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.just",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.resize_op_test.TestResize.test_nearest.ref": {
  "lineno": 49,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int32",
   "numpy.meshgrid",
   "numpy.minimum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.resize_op_test.TestResize.test_nearest_grad": {
  "lineno": 73,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.just",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.resize_op_test.TestResize.test_nearest_grad.ref": {
  "lineno": 116,
  "symbols_in_volume": [
   "numpy.int32",
   "numpy.minimum",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.resize_op_test.TestResize.test_nearest_onnx": {
  "lineno": 132,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.just",
   "hypothesis.strategies.sampled_from",
   "numpy.array",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.resize_op_test.TestResize.test_nearest_onnx.ref": {
  "lineno": 166,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int32",
   "numpy.meshgrid",
   "numpy.minimum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.resize_op_test.TestResize.test_nearest_onnx_grad": {
  "lineno": 191,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.just",
   "hypothesis.strategies.sampled_from",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.resize_op_test.TestResize.test_nearest_onnx_grad.ref": {
  "lineno": 233,
  "symbols_in_volume": [
   "numpy.int32",
   "numpy.minimum",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rmac_regions_op_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.rmac_regions_op_test.RMACRegionsOpTest": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.rmac_regions_op_test.RMACRegionsOpTest.test": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rmac_regions_op_test.RMACRegionsOpTest.test.ref_op": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.arange",
   "numpy.argmin",
   "numpy.array",
   "numpy.float32",
   "numpy.floor",
   "numpy.maximum",
   "numpy.minimum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rms_norm_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.rms_norm_op_test.TestRMSNormOp": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.rms_norm_op_test.TestRMSNormOp.test_rms_norm": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.float64",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rms_norm_op_test.TestRMSNormOp.test_rms_norm.rms_norm_ref": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.expand_dims",
   "numpy.mean",
   "numpy.sqrt",
   "numpy.square"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.workspace.GlobalInit",
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.rnn_cell_test.MulCell": {
  "lineno": 883,
  "symbols_in_volume": [
   "caffe2.python.rnn_cell.RNNCell"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.rnn_cell_test.MulCell._apply": {
  "lineno": 884,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.MulCell.get_state_names": {
  "lineno": 891,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.RNNCellTest": {
  "lineno": 918,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.rnn_cell_test.RNNCellTest.lstm_base": {
  "lineno": 1096,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.cpu_do",
   "caffe2.python.rnn.rnn_cell_test_util._prepare_rnn",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "functools.partial",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.RNNCellTest.lstm_with_attention": {
  "lineno": 1433,
  "symbols_in_volume": [
   "caffe2.python.core.DeviceScope",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.randint",
   "numpy.random.randn",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.RNNCellTest.test_layer_norm_lstm_params": {
  "lineno": 1260,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.rnn_cell.LayerNormLSTM"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.RNNCellTest.test_layered_lstm": {
  "lineno": 1057,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.rnn.rnn_cell_test_util._prepare_rnn",
   "caffe2.python.rnn_cell.LSTM",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.floats"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.RNNCellTest.test_lstm": {
  "lineno": 1078,
  "symbols_in_volume": [
   "caffe2.python.rnn_cell.LSTM"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.RNNCellTest.test_lstm_extract_predictor_net": {
  "lineno": 1156,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.model_helper.ExtractPredictorNet",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.rnn_cell.LSTM",
   "caffe2.python.workspace.Blobs",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNet",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.RNNCellTest.test_lstm_params": {
  "lineno": 1224,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.rnn_cell.LSTM"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.RNNCellTest.test_lstm_unit_recurrent_network": {
  "lineno": 1563,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.cpu_do",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.workspace.GpuDeviceType",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float16",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.randint",
   "numpy.random.randn",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.RNNCellTest.test_lstm_unit_recurrent_network.lstm_unit_reference": {
  "lineno": 1608,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.RNNCellTest.test_lstm_with_coverage_attention": {
  "lineno": 1402,
  "symbols_in_volume": [
   "caffe2.python.attention.AttentionType.SoftCoverage",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.rnn_cell.LSTMWithAttention",
   "functools.partial",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.RNNCellTest.test_lstm_with_dot_attention_different_dim": {
  "lineno": 1371,
  "symbols_in_volume": [
   "caffe2.python.attention.AttentionType.Dot",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.rnn_cell.LSTMWithAttention",
   "functools.partial",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.RNNCellTest.test_lstm_with_dot_attention_same_dim": {
  "lineno": 1340,
  "symbols_in_volume": [
   "caffe2.python.attention.AttentionType.Dot",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.rnn_cell.LSTMWithAttention",
   "functools.partial",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.RNNCellTest.test_lstm_with_recurrent_attention": {
  "lineno": 1309,
  "symbols_in_volume": [
   "caffe2.python.attention.AttentionType.Recurrent",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.rnn_cell.LSTMWithAttention",
   "functools.partial",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.RNNCellTest.test_lstm_with_regular_attention": {
  "lineno": 1278,
  "symbols_in_volume": [
   "caffe2.python.attention.AttentionType.Regular",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.rnn_cell.LSTMWithAttention",
   "functools.partial",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.RNNCellTest.test_milstm": {
  "lineno": 1081,
  "symbols_in_volume": [
   "caffe2.python.rnn_cell.MILSTM"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.RNNCellTest.test_milstm_params": {
  "lineno": 1242,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.rnn_cell.MILSTM"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.RNNCellTest.test_multi_lstm": {
  "lineno": 1626,
  "symbols_in_volume": [
   "caffe2.python.gradient_checker.NetGradientChecker.Check",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.rnn_cell.LSTM",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.abs",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.randint",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.RNNCellTest.test_norm_lstm": {
  "lineno": 1084,
  "symbols_in_volume": [
   "caffe2.python.rnn_cell.LayerNormLSTM",
   "unittest.skip"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.RNNCellTest.test_norm_milstm": {
  "lineno": 1090,
  "symbols_in_volume": [
   "caffe2.python.rnn_cell.LayerNormMILSTM",
   "unittest.skip"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.RNNCellTest.test_unroll_attention": {
  "lineno": 983,
  "symbols_in_volume": [
   "caffe2.python.gradient_checker.NetGradientChecker.CompareNets",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.utils.debug",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.random.random"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.RNNCellTest.test_unroll_lstm": {
  "lineno": 947,
  "symbols_in_volume": [
   "caffe2.python.gradient_checker.NetGradientChecker.CompareNets",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.rnn.rnn_cell_test_util._prepare_rnn",
   "caffe2.python.rnn_cell.LSTM",
   "caffe2.python.utils.debug",
   "caffe2.python.workspace.FeedBlob",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.lists",
   "hypothesis.strategies.sampled_from"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.RNNCellTest.test_unroll_mul": {
  "lineno": 919,
  "symbols_in_volume": [
   "caffe2.python.gradient_checker.NetGradientChecker.CompareNets",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.python.workspace.blobs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test._prepare_attention": {
  "lineno": 758,
  "symbols_in_volume": [
   "caffe2.python.attention.AttentionType.Recurrent",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.rnn_cell.AttentionCell",
   "caffe2.python.rnn_cell.DropoutCell",
   "caffe2.python.rnn_cell.MILSTMCell",
   "caffe2.python.rnn_cell.MultiRNNCell",
   "caffe2.python.rnn_cell.UnrolledCell",
   "caffe2.python.scope.NameScope",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.int32",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test._prepare_attention.generate_input_state": {
  "lineno": 768,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.random.random"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.compute_coverage_attention_logits": {
  "lineno": 290,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.sum",
   "numpy.tanh"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.compute_dot_attention_logits": {
  "lineno": 258,
  "symbols_in_volume": [
   "numpy.expand_dims",
   "numpy.matmul",
   "numpy.sum",
   "numpy.transpose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.compute_recurrent_attention_logits": {
  "lineno": 227,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.sum",
   "numpy.tanh"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.compute_regular_attention_logits": {
  "lineno": 203,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.sum",
   "numpy.tanh"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.layer_norm_lstm_reference": {
  "lineno": 82,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.layer_norm_milstm_reference": {
  "lineno": 681,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.layer_norm_with_scale_and_bias_ref": {
  "lineno": 67,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.prod",
   "numpy.reshape",
   "numpy.sqrt",
   "numpy.square"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.lstm_input": {
  "lineno": 739,
  "symbols_in_volume": [
   "hypothesis.strategies.integers",
   "hypothesis.strategies.tuples"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.lstm_input.create_input": {
  "lineno": 750,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.arrays"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.lstm_reference": {
  "lineno": 137,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.lstm_unit": {
  "lineno": 23,
  "symbols_in_volume": [
   "caffe2.python.rnn.rnn_cell_test_util.sigmoid",
   "caffe2.python.rnn.rnn_cell_test_util.tanh",
   "numpy.int32",
   "numpy.ones"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.lstm_with_attention_reference": {
  "lineno": 316,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.dot",
   "numpy.exp",
   "numpy.sum",
   "numpy.transpose",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.lstm_with_coverage_attention_reference": {
  "lineno": 588,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.lstm_with_dot_attention_reference": {
  "lineno": 499,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.lstm_with_dot_attention_reference_different_dim": {
  "lineno": 560,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.lstm_with_dot_attention_reference_same_dim": {
  "lineno": 534,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.lstm_with_recurrent_attention_reference": {
  "lineno": 459,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.lstm_with_regular_attention_reference": {
  "lineno": 421,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.milstm_reference": {
  "lineno": 628,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.multi_lstm_reference": {
  "lineno": 177,
  "symbols_in_volume": [
   "numpy.dot"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.prepare_mul_rnn": {
  "lineno": 895,
  "symbols_in_volume": [
   "caffe2.python.rnn_cell.MultiRNNCell",
   "caffe2.python.rnn_cell.UnrolledCell"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.roi_align_rotated_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.roi_align_rotated_op_test.RoIAlignRotatedOp": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.roi_align_rotated_op_test.RoIAlignRotatedOp.bbox_xywh_to_xyxy": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.roi_align_rotated_op_test.RoIAlignRotatedOp.test_horizontal_rois": {
  "lineno": 27,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.IsGPUDeviceType",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.randn",
   "numpy.random.uniform",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.roi_align_rotated_op_test.RoIAlignRotatedOp.test_horizontal_rois.roialign_ref": {
  "lineno": 58,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.roi_align_rotated_op_test.RoIAlignRotatedOp.test_simple_rotations": {
  "lineno": 83,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.IsGPUDeviceType",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.randn",
   "numpy.random.uniform",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.roi_align_rotated_op_test.RoIAlignRotatedOp.test_simple_rotations.roialign_flip": {
  "lineno": 148,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.roi_align_rotated_op_test.RoIAlignRotatedOp.test_simple_rotations.roialign_ref": {
  "lineno": 159,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.roi_align_rotated_op_test.RoIAlignRotatedOp.test_simple_rotations.roialign_rot90": {
  "lineno": 116,
  "symbols_in_volume": [
   "numpy.absolute",
   "numpy.arange",
   "numpy.asanyarray",
   "numpy.transpose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rowwise_counter_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.core.GlobalInit",
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.rowwise_counter_test.TestRowWiseCounter": {
  "lineno": 24,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.rowwise_counter_test.TestRowWiseCounter.test_rowwise_counter": {
  "lineno": 25,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.allclose",
   "numpy.array",
   "numpy.float64",
   "numpy.int64",
   "numpy.random.rand",
   "numpy.random.randint",
   "numpy.unique"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.rowwise_counter_test.update_counter_ref": {
  "lineno": 10,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.log"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.scale_op_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.scale_op_test.TestScaleOps": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.scale_op_test.TestScaleOps.test_scale_ops": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test": {
  "lineno": null,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.amax",
   "numpy.mean",
   "numpy.sum",
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.segment_ops_test.LengthsTester": {
  "lineno": 171,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.operator_test.segment_ops_test.LengthsTester.split": {
  "lineno": 172,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.LengthsTester.unsplit": {
  "lineno": 188,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.SegmentsTester": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.operator_test.segment_ops_test.SegmentsTester.split": {
  "lineno": 129,
  "symbols_in_volume": [
   "numpy.count_nonzero",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.SegmentsTester.unsplit": {
  "lineno": 158,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps": {
  "lineno": 318,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_legacy_sparse_and_lengths_sum_gradient": {
  "lineno": 632,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "numpy.asarray",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_lengths_mean": {
  "lineno": 502,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.lengths_tensor",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_lengths_mean.ref": {
  "lineno": 515,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_lengths_ops": {
  "lineno": 376,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.lengths_tensor",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_lengths_sum": {
  "lineno": 444,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.lengths_tensor",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_lengths_sum.ref": {
  "lineno": 457,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_sorted_segment_ops": {
  "lineno": 319,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.segmented_tensor",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_sorted_segment_range_log_mean_exp": {
  "lineno": 423,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.workspace.has_gpu_support",
   "hypothesis.given",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_sorted_segment_range_mean": {
  "lineno": 410,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.workspace.has_gpu_support",
   "hypothesis.given",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_sparse_lengths_fp16": {
  "lineno": 698,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.arrays",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.workspace.has_gpu_support",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.data",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.arange",
   "numpy.float16",
   "numpy.int32",
   "numpy.int64",
   "numpy.sum",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_sparse_lengths_indices_in_gradient_mean_gpu": {
  "lineno": 622,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "numpy.asarray",
   "numpy.float32",
   "numpy.int32",
   "numpy.int64",
   "numpy.random.rand",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_sparse_lengths_indices_in_gradient_sum_gpu": {
  "lineno": 612,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "numpy.asarray",
   "numpy.float32",
   "numpy.int32",
   "numpy.int64",
   "numpy.random.rand",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_sparse_lengths_mean": {
  "lineno": 537,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.sparse_lengths_tensor",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_sparse_lengths_mean.ref": {
  "lineno": 550,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_sparse_lengths_ops": {
  "lineno": 388,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.sparse_lengths_tensor",
   "numpy.float32",
   "numpy.int32",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_sparse_lengths_positional_weighted_sum": {
  "lineno": 662,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "numpy.asarray",
   "numpy.float32",
   "numpy.int32",
   "numpy.int64",
   "numpy.random.rand",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_sparse_lengths_positional_weighted_sum.ref_sparse": {
  "lineno": 674,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_sparse_lengths_sum": {
  "lineno": 473,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.sparse_lengths_tensor",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_sparse_lengths_sum.ref": {
  "lineno": 486,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_sparse_lengths_sum_invalid_index": {
  "lineno": 646,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.asarray",
   "numpy.float32",
   "numpy.int32",
   "numpy.int64",
   "numpy.random.rand",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_sparse_lengths_weighted_sum": {
  "lineno": 573,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.sparse_lengths_tensor",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "functools.partial",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_sparse_sorted_segment_ops": {
  "lineno": 354,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.sparse_segmented_tensor",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_sparse_unsorted_segment_ops": {
  "lineno": 365,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.sparse_segmented_tensor",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_unsorted_means_large": {
  "lineno": 436,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.workspace.has_gpu_support",
   "hypothesis.given",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand",
   "numpy.random.randint",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_unsorted_segment_ops": {
  "lineno": 330,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.segmented_tensor",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_unsorted_segment_ops_gpu": {
  "lineno": 341,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.segmented_tensor",
   "caffe2.python.workspace.has_gpu_support",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_unsorted_sums_large": {
  "lineno": 402,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.workspace.has_gpu_support",
   "hypothesis.given",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand",
   "numpy.random.randint",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TesterBase": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.operator_test.segment_ops_test.TesterBase._test": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TesterBase._test.test_segment_ops": {
  "lineno": 73,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TesterBase._test.test_segment_ops.seg_reduce": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TesterBase._test.test_segment_ops.seg_reduce_grad": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TesterBase.segment_reduce_grad_op": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TesterBase.segment_reduce_op": {
  "lineno": 41,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.logmeanexp": {
  "lineno": 222,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.log",
   "numpy.mean"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.logsumexp": {
  "lineno": 209,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.log",
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.logsumexp_grad": {
  "lineno": 213,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.expand_dims",
   "numpy.repeat",
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.max_fwd": {
  "lineno": 238,
  "symbols_in_volume": [
   "numpy.amax"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.max_grad": {
  "lineno": 242,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.resize",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.mean": {
  "lineno": 226,
  "symbols_in_volume": [
   "numpy.mean"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.mean_grad": {
  "lineno": 230,
  "symbols_in_volume": [
   "numpy.expand_dims",
   "numpy.repeat"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.sparse_lengths_mean_ref": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.sparse_lengths_sum_ref": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.sparse_lengths_weighted_sum_grad_ref": {
  "lineno": 296,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.sparse_lengths_weighted_sum_ref": {
  "lineno": 283,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.sum_grad": {
  "lineno": 201,
  "symbols_in_volume": [
   "numpy.expand_dims",
   "numpy.repeat"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.self_binning_histogram_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.core.GlobalInit",
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.self_binning_histogram_test.TestSelfBinningHistogramBase": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.operator_test.self_binning_histogram_test.TestSelfBinningHistogramBase.__init__": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.self_binning_histogram_test.TestSelfBinningHistogramBase._check_histogram": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.workspace.FetchBlob",
   "numpy.array_equal",
   "numpy.size",
   "numpy.sum",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.self_binning_histogram_test.TestSelfBinningHistogramBase._run_single_op_net": {
  "lineno": 47,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.RunNetOnce"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.self_binning_histogram_test.TestSelfBinningHistogramBase.test_histogram_bin_to_fewer": {
  "lineno": 83,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.self_binning_histogram_test.TestSelfBinningHistogramBase.test_histogram_bin_to_more": {
  "lineno": 91,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.self_binning_histogram_test.TestSelfBinningHistogramBase.test_histogram_bin_to_two": {
  "lineno": 99,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.self_binning_histogram_test.TestSelfBinningHistogramBase.test_histogram_device_consistency": {
  "lineno": 70,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.self_binning_histogram_test.TestSelfBinningHistogramBase.test_histogram_empty_input_tensor": {
  "lineno": 140,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.self_binning_histogram_test.TestSelfBinningHistogramBase.test_histogram_insufficient_bins": {
  "lineno": 176,
  "symbols_in_volume": [
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.self_binning_histogram_test.TestSelfBinningHistogramBase.test_histogram_min_max_equal": {
  "lineno": 108,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.self_binning_histogram_test.TestSelfBinningHistogramBase.test_histogram_min_max_equal_nonzero": {
  "lineno": 129,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.self_binning_histogram_test.TestSelfBinningHistogramBase.test_histogram_multi_input": {
  "lineno": 153,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.self_binning_histogram_test.TestSelfBinningHistogramBase.test_histogram_very_small_range_for_stride_underflow": {
  "lineno": 162,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.self_binning_histogram_test.TestSelfBinningHistogramLinear": {
  "lineno": 183,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.self_binning_histogram_test.TestSelfBinningHistogramLinear.__init__": {
  "lineno": 184,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase.__init__"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.self_binning_histogram_test.TestSelfBinningHistogramLinearFloat": {
  "lineno": 193,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.self_binning_histogram_test.TestSelfBinningHistogramLinearFloat.__init__": {
  "lineno": 194,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase.__init__"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.self_binning_histogram_test.TestSelfBinningHistogramLogarithmic": {
  "lineno": 188,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.self_binning_histogram_test.TestSelfBinningHistogramLogarithmic.__init__": {
  "lineno": 189,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase.__init__"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.self_binning_histogram_test.TestSelfBinningHistogramLogarithmicFloat": {
  "lineno": 198,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.self_binning_histogram_test.TestSelfBinningHistogramLogarithmicFloat.__init__": {
  "lineno": 199,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase.__init__"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.selu_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.selu_op_test.TestSelu": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.selu_op_test.TestSelu.fix0": {
  "lineno": 86,
  "symbols_in_volume": [
   "numpy.sign"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.selu_op_test.TestSelu.selu_ref": {
  "lineno": 93,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.selu_op_test.TestSelu.test_selu_1": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.strategies.sampled_from"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.selu_op_test.TestSelu.test_selu_2": {
  "lineno": 33,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.sampled_from"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.selu_op_test.TestSelu.test_selu_3": {
  "lineno": 50,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.sampled_from"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.selu_op_test.TestSelu.test_selu_inplace": {
  "lineno": 67,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.strategies.sampled_from",
   "numpy.ones_like"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.sequence_ops_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.sequence_ops_test.TestSequenceOps": {
  "lineno": 104,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.sequence_ops_test.TestSequenceOps.test_add_padding": {
  "lineno": 105,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "functools.partial",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.array",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.sequence_ops_test.TestSequenceOps.test_add_padding_no_length": {
  "lineno": 151,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "functools.partial",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.array"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.sequence_ops_test.TestSequenceOps.test_add_zero_padding": {
  "lineno": 133,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "functools.partial",
   "hypothesis.given",
   "hypothesis.strategies.integers"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.sequence_ops_test.TestSequenceOps.test_find_duplicate_elements": {
  "lineno": 278,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.lists",
   "numpy.array"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.sequence_ops_test.TestSequenceOps.test_find_duplicate_elements.op_ref": {
  "lineno": 302,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.sequence_ops_test.TestSequenceOps.test_gather_padding": {
  "lineno": 192,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "functools.partial",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.sequence_ops_test.TestSequenceOps.test_remove_data_blocks": {
  "lineno": 249,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.lists",
   "numpy.array",
   "numpy.float32",
   "numpy.inf"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.sequence_ops_test.TestSequenceOps.test_remove_data_blocks.op_ref": {
  "lineno": 266,
  "symbols_in_volume": [
   "numpy.delete",
   "numpy.sort",
   "numpy.unique"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.sequence_ops_test.TestSequenceOps.test_remove_padding": {
  "lineno": 173,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "functools.partial",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "unittest.skip"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.sequence_ops_test.TestSequenceOps.test_reverse_packed_segs": {
  "lineno": 214,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.float32",
   "numpy.inf",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.sequence_ops_test.TestSequenceOps.test_reverse_packed_segs.op_grad_ref": {
  "lineno": 238,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.sequence_ops_test.TestSequenceOps.test_reverse_packed_segs.op_ref": {
  "lineno": 230,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.sequence_ops_test._add_padding_ref": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.sequence_ops_test._gather_padding_ref": {
  "lineno": 88,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.sequence_ops_test._gen_test_add_padding": {
  "lineno": 17,
  "symbols_in_volume": [
   "hypothesis.strategies.integers",
   "hypothesis.strategies.lists",
   "hypothesis.strategies.tuples"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.sequence_ops_test._gen_test_add_padding.gen_with_size": {
  "lineno": 19,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.arrays",
   "hypothesis.strategies.just",
   "hypothesis.strategies.tuples",
   "numpy.array",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.sequence_ops_test._remove_padding_ref": {
  "lineno": 71,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.build.CAFFE2_NO_OPERATOR_SCHEMA",
   "caffe2.python.test_util.TestCase",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.InferTensorRunAndCompare": {
  "lineno": 592,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.TensorProto.BOOL",
   "caffe2.proto.caffe2_pb2.TensorProto.DOUBLE",
   "caffe2.proto.caffe2_pb2.TensorProto.FLOAT",
   "caffe2.proto.caffe2_pb2.TensorProto.FLOAT16",
   "caffe2.proto.caffe2_pb2.TensorProto.INT16",
   "caffe2.proto.caffe2_pb2.TensorProto.INT32",
   "caffe2.proto.caffe2_pb2.TensorProto.INT64",
   "caffe2.proto.caffe2_pb2.TensorProto.INT8",
   "caffe2.proto.caffe2_pb2.TensorProto.UINT16",
   "caffe2.proto.caffe2_pb2.TensorProto.UINT8",
   "caffe2.python.workspace.Blobs",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.InferShapesAndTypes",
   "caffe2.python.workspace.RunNet",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.array",
   "numpy.array_equal",
   "numpy.dtype",
   "numpy.int32",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testCast": {
  "lineno": 473,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.TensorProto.BOOL",
   "caffe2.proto.caffe2_pb2.TensorProto.DOUBLE",
   "caffe2.proto.caffe2_pb2.TensorProto.FLOAT",
   "caffe2.proto.caffe2_pb2.TensorProto.INT16",
   "caffe2.proto.caffe2_pb2.TensorProto.INT32",
   "caffe2.proto.caffe2_pb2.TensorProto.INT64",
   "caffe2.proto.caffe2_pb2.TensorProto.INT8",
   "caffe2.proto.caffe2_pb2.TensorProto.UINT16",
   "caffe2.proto.caffe2_pb2.TensorProto.UINT8",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "numpy.bool",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.random.rand",
   "numpy.uint16",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testConcat": {
  "lineno": 414,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.InferShapesAndTypes"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testConcatInt32": {
  "lineno": 434,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.INT32",
   "caffe2.python.core.Net",
   "caffe2.python.workspace.InferShapesAndTypes"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testFCAxis2": {
  "lineno": 37,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testFCTransposed": {
  "lineno": 45,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testGather": {
  "lineno": 103,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testHalfInt8Conversion": {
  "lineno": 542,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "numpy.allclose",
   "numpy.float16",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testInt8Conversion": {
  "lineno": 520,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "numpy.allclose",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testLearningRateOp": {
  "lineno": 564,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.INT64",
   "caffe2.python.core.Net",
   "caffe2.python.workspace.InferShapesAndTypes"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testLengthsPad": {
  "lineno": 401,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testLengthsSum": {
  "lineno": 393,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testShapeInferenceConvNet": {
  "lineno": 110,
  "symbols_in_volume": [
   "caffe2.python.brew.conv",
   "caffe2.python.brew.dropout",
   "caffe2.python.brew.fc",
   "caffe2.python.brew.max_pool",
   "caffe2.python.brew.relu",
   "caffe2.python.brew.softmax",
   "caffe2.python.brew.spatial_bn",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testShapeInferenceDistances": {
  "lineno": 69,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testShapeInferenceFlatten": {
  "lineno": 346,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testShapeInferenceIm2Col": {
  "lineno": 295,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testShapeInferenceMatMul": {
  "lineno": 214,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testShapeInferencePad": {
  "lineno": 184,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testShapeInferencePadZero": {
  "lineno": 202,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testShapeInferencePow": {
  "lineno": 514,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testShapeInferenceReduceBackFrontX": {
  "lineno": 91,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testShapeInferenceReshape": {
  "lineno": 378,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testShapeInferenceRoiPool": {
  "lineno": 500,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testShapeInferenceSimpleFC": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.InferShapesAndTypes"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testShapeInferenceSlice": {
  "lineno": 53,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testShapeInferenceSoftmaxWithLoss": {
  "lineno": 224,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testShapeInferenceTile": {
  "lineno": 332,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testShapeInferenceTranspose": {
  "lineno": 158,
  "symbols_in_volume": [
   "caffe2.python.brew.transpose",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "numpy.float32",
   "numpy.random.permutation",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testShapeInferenceTwoClass": {
  "lineno": 196,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testShapeInferenceUnique": {
  "lineno": 385,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "numpy.int64",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testShapeOp": {
  "lineno": 586,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testSqueeze": {
  "lineno": 464,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.InferShapesAndTypes"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.sinusoid_position_encoding_op_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.sinusoid_position_encoding_op_test.TestSinusoidPositionEncodingOp": {
  "lineno": 23,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.sinusoid_position_encoding_op_test.TestSinusoidPositionEncodingOp.test_sinusoid_embedding": {
  "lineno": 24,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.arrays",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "numpy.int32",
   "numpy.tile"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.sinusoid_position_encoding_op_test.TestSinusoidPositionEncodingOp.test_sinusoid_embedding.sinusoid_embedding_op": {
  "lineno": 58,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.sinusoid_position_encoding_op_test.TestSinusoidPositionEncodingOp.test_sinusoid_embedding.sinusoid_encoding": {
  "lineno": 51,
  "symbols_in_volume": [
   "math.cos",
   "math.pow",
   "math.sin"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test": {
  "lineno": null,
  "symbols_in_volume": [
   "random.seed",
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_compare_cpugpu": {
  "lineno": 626,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.GpuDeviceType",
   "caffe2.python.workspace.RunOperatorOnce",
   "caffe2.python.workspace.has_gpu_support",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand",
   "numpy.testing.assert_allclose",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_softmax": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_softmax.label_softmax": {
  "lineno": 29,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_softmax_axis": {
  "lineno": 94,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.randn",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_softmax_axis.label_softmax": {
  "lineno": 112,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_softmax_axis.prod": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_softmax_grad": {
  "lineno": 60,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_softmax_grad.label_softmax_grad": {
  "lineno": 73,
  "symbols_in_volume": [
   "numpy.dot"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_softmax_with_loss": {
  "lineno": 144,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_softmax_with_loss.label_softmax_crossent": {
  "lineno": 158,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.log",
   "numpy.sum",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_softmax_with_loss_axis_2": {
  "lineno": 191,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_softmax_with_loss_axis_2.label_softmax_crossent": {
  "lineno": 214,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.log",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_softmax_with_loss_label_prob": {
  "lineno": 303,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.seed",
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_softmax_with_loss_label_prob.label_softmax_crossent": {
  "lineno": 320,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.log",
   "numpy.sum",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_softmax_with_loss_label_prob_weighted": {
  "lineno": 409,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_softmax_with_loss_label_prob_weighted.label_softmax_crossent_weighted": {
  "lineno": 428,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.log",
   "numpy.sum",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_softmax_with_loss_large": {
  "lineno": 259,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_gpu_only",
   "caffe2.python.workspace.has_gpu_support",
   "hypothesis.given",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand",
   "numpy.random.seed",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_softmax_with_loss_large.label_softmax_crossent": {
  "lineno": 274,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.log",
   "numpy.sum",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_softmax_with_loss_weighted": {
  "lineno": 356,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_softmax_with_loss_weighted.label_softmax_crossent_weighted": {
  "lineno": 376,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.log",
   "numpy.sum",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_softmax_with_loss_zero_weight": {
  "lineno": 586,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand",
   "numpy.random.seed",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_softmax_with_loss_zero_weight.label_softmax_crossent": {
  "lineno": 600,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_spatial_softmax_with_loss": {
  "lineno": 464,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_spatial_softmax_with_loss.label_softmax_crossent_spatial": {
  "lineno": 484,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.log",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_spatial_softmax_with_loss_allignore": {
  "lineno": 533,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand",
   "numpy.random.seed",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_spatial_softmax_with_loss_allignore.label_softmax_crossent_spatial": {
  "lineno": 553,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.log",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.softplus_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.softplus_op_test.TestSoftplus": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.softplus_op_test.TestSoftplus.test_softplus": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.sparse_dropout_with_replacement_op_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.sparse_dropout_with_replacement_op_test.SparseDropoutWithReplacementTest": {
  "lineno": 12,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.sparse_dropout_with_replacement_op_test.SparseDropoutWithReplacementTest.test_all_dropout": {
  "lineno": 31,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "numpy.array",
   "numpy.int32",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.sparse_dropout_with_replacement_op_test.SparseDropoutWithReplacementTest.test_all_dropout_empty_input": {
  "lineno": 51,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "numpy.array",
   "numpy.int32",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.sparse_dropout_with_replacement_op_test.SparseDropoutWithReplacementTest.test_no_dropout": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "numpy.array",
   "numpy.int32",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.sparse_gradient_checker_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.sparse_gradient_checker_test.TestSparseGradient": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.sparse_gradient_checker_test.TestSparseGradient.test_sparse_gradient": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.int32",
   "numpy.int64",
   "numpy.random.randn",
   "scipy.sparse.coo_matrix"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.sparse_lengths_sum_benchmark": {
  "lineno": null,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "caffe2.python.core.GlobalInit",
   "numpy.float16",
   "numpy.float32",
   "numpy.uint8"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.sparse_lengths_sum_benchmark.benchmark_sparse_lengths_sum": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.BenchmarkNet",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "datetime.datetime.now",
   "numpy.concatenate",
   "numpy.float32",
   "numpy.ones",
   "numpy.random.rand",
   "numpy.random.randint",
   "numpy.random.randn",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.sparse_lengths_sum_benchmark.benchmark_sparse_lengths_sum.f": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.int32",
   "numpy.int64",
   "numpy.random.randint",
   "numpy.round",
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.sparse_lp_regularizer_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.sparse_lp_regularizer_test.TestSparseLpNorm": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.sparse_lp_regularizer_test.TestSparseLpNorm.ref_lpnorm": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.ones_like",
   "numpy.sign"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.sparse_lp_regularizer_test.TestSparseLpNorm.test_sparse_lpnorm": {
  "lineno": 31,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.hypothesis_test_util.tensors",
   "hypothesis.HealthCheck.filter_too_much",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.note",
   "hypothesis.settings",
   "hypothesis.strategies.data",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.arange",
   "numpy.array_equal",
   "numpy.int64",
   "numpy.sign",
   "numpy.sort",
   "numpy.unique"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.sparse_lp_regularizer_test.TestSparseLpNorm.test_sparse_lpnorm.ref_sparse_lp_regularizer": {
  "lineno": 63,
  "symbols_in_volume": [
   "numpy.copy"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.sparse_normalize_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.sparse_normalize_test.TestSparseNormalize": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.sparse_normalize_test.TestSparseNormalize.ref_normalize": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.linalg.norm"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.sparse_normalize_test.TestSparseNormalize.test_sparse_normalize": {
  "lineno": 26,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.hypothesis_test_util.tensors",
   "hypothesis.HealthCheck.filter_too_much",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.note",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.data",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.sampled_from",
   "numpy.arange",
   "numpy.array_equal",
   "numpy.int64",
   "numpy.sign",
   "numpy.sort",
   "numpy.unique"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.sparse_normalize_test.TestSparseNormalize.test_sparse_normalize.ref_sparse_normalize": {
  "lineno": 69,
  "symbols_in_volume": [
   "numpy.copy"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.sparse_ops_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.sparse_ops_test.TestScatterOps": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.sparse_ops_test.TestScatterOps.testScatterAssign": {
  "lineno": 58,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.test_util.rand_array",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.lists",
   "hypothesis.strategies.sampled_from",
   "numpy.float16",
   "numpy.float32",
   "numpy.int32",
   "numpy.int64",
   "numpy.random.choice"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.sparse_ops_test.TestScatterOps.testScatterAssign.ref": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.sparse_ops_test.TestScatterOps.testScatterWeightedSum": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.gpu_do",
   "caffe2.python.hypothesis_test_util.hip_do",
   "caffe2.python.test_util.rand_array",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.lists",
   "hypothesis.strategies.sampled_from",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.int64",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.sparse_ops_test.TestScatterOps.testScatterWeightedSum.ref": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.sparse_to_dense_mask_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.sparse_to_dense_mask_op_test.TestFcOperator": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.sparse_to_dense_mask_op_test.TestFcOperator.test_sparse_to_dense_mask": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.arange",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand",
   "numpy.random.randint",
   "numpy.random.shuffle"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.sparse_to_dense_mask_op_test.TestFcOperator.test_sparse_to_dense_mask_high_dim": {
  "lineno": 82,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.arange",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand",
   "numpy.random.randint",
   "numpy.random.shuffle"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.sparse_to_dense_mask_op_test.TestFcOperator.test_sparse_to_dense_mask_with_int64": {
  "lineno": 48,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.arange",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand",
   "numpy.random.randint",
   "numpy.random.shuffle"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.spatial_bn_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.spatial_bn_op_test.TestSpatialBN": {
  "lineno": 19,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.spatial_bn_op_test.TestSpatialBN.test_spatial_bn_multi_batch": {
  "lineno": 325,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.spatial_bn_op_test.TestSpatialBN.test_spatial_bn_multi_batch.spatial_bn_multi_batch_ref": {
  "lineno": 366,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.reshape",
   "numpy.sqrt",
   "numpy.square",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.spatial_bn_op_test.TestSpatialBN.test_spatial_bn_multi_batch_grad": {
  "lineno": 398,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.spatial_bn_op_test.TestSpatialBN.test_spatial_bn_multi_batch_grad.spatial_bn_multi_batch_grad_ref": {
  "lineno": 438,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.reshape",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.spatial_bn_op_test.TestSpatialBN.test_spatialbn_brew_wrapper": {
  "lineno": 467,
  "symbols_in_volume": [
   "caffe2.python.brew.spatial_bn",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.spatial_bn_op_test.TestSpatialBN.test_spatialbn_test_mode": {
  "lineno": 115,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hip_test_util.run_in_hip",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.randn",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.spatial_bn_op_test.TestSpatialBN.test_spatialbn_test_mode.reference_spatialbn_test": {
  "lineno": 141,
  "symbols_in_volume": [
   "numpy.newaxis",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.spatial_bn_op_test.TestSpatialBN.test_spatialbn_test_mode_1d": {
  "lineno": 67,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hip_test_util.run_in_hip",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.workspace.has_gpu_support",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.randn",
   "numpy.random.seed",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.spatial_bn_op_test.TestSpatialBN.test_spatialbn_test_mode_1d.reference_spatialbn_test": {
  "lineno": 93,
  "symbols_in_volume": [
   "numpy.newaxis",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.spatial_bn_op_test.TestSpatialBN.test_spatialbn_test_mode_3d": {
  "lineno": 21,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "caffe2.python.utils.NCHW2NHWC",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.randn",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.spatial_bn_op_test.TestSpatialBN.test_spatialbn_test_mode_3d.reference_spatialbn_test": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.newaxis",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.spatial_bn_op_test.TestSpatialBN.test_spatialbn_train_mode": {
  "lineno": 164,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hip_test_util.run_in_hip",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.randn",
   "numpy.random.seed",
   "numpy.transpose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.spatial_bn_op_test.TestSpatialBN.test_spatialbn_train_mode.batch_norm_ref": {
  "lineno": 205,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.reshape",
   "numpy.sqrt",
   "numpy.transpose",
   "numpy.var",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.spatial_bn_op_test.TestSpatialBN.test_spatialbn_train_mode_gradient_check": {
  "lineno": 244,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hip_test_util.run_in_hip",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.randn",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.spatial_bn_op_test.TestSpatialBN.test_spatialbn_train_mode_gradient_check_1d": {
  "lineno": 285,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hip_test_util.run_in_hip",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.randn",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.specialized_segment_ops_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.specialized_segment_ops_test.TestSpecializedSegmentOps": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.specialized_segment_ops_test.TestSpecializedSegmentOps.test_sparse_lengths_sum_8BitsRowwiseOp_cpu": {
  "lineno": 234,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.int32",
   "numpy.int64",
   "numpy.random.rand",
   "numpy.random.randint",
   "numpy.uint8",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.specialized_segment_ops_test.TestSpecializedSegmentOps.test_sparse_lengths_sum_8BitsRowwiseOp_cpu.sparse_lengths_sum_8BitsRowwiseOp_cpu_reg": {
  "lineno": 270,
  "symbols_in_volume": [
   "numpy.cumsum",
   "numpy.float32",
   "numpy.insert",
   "numpy.newaxis",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.specialized_segment_ops_test.TestSpecializedSegmentOps.test_sparse_lengths_sum_8BitsRowwiseOp_cpu_invalid_index": {
  "lineno": 293,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.int32",
   "numpy.int64",
   "numpy.random.rand",
   "numpy.random.randint",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.specialized_segment_ops_test.TestSpecializedSegmentOps.test_sparse_lengths_sum_cpu": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.proto.caffe2_pb2.CUDA",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hip_test_util.run_in_hip",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float16",
   "numpy.float32",
   "numpy.int32",
   "numpy.int64",
   "numpy.random.rand",
   "numpy.random.randint",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.specialized_segment_ops_test.TestSpecializedSegmentOps.test_sparse_lengths_sum_cpu.sparse_lengths_sum_ref": {
  "lineno": 75,
  "symbols_in_volume": [
   "numpy.cumsum",
   "numpy.float32",
   "numpy.insert",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.specialized_segment_ops_test.TestSpecializedSegmentOps.test_sparse_lengths_weightedsum_8BitsRowwiseOp_cpu": {
  "lineno": 167,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.int32",
   "numpy.int64",
   "numpy.random.rand",
   "numpy.random.randint",
   "numpy.uint8",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.specialized_segment_ops_test.TestSpecializedSegmentOps.test_sparse_lengths_weightedsum_8BitsRowwiseOp_cpu.sparse_lengths_weightedsum_8BitsRowwiseOp_cpu_ref": {
  "lineno": 208,
  "symbols_in_volume": [
   "numpy.cumsum",
   "numpy.float32",
   "numpy.insert",
   "numpy.newaxis",
   "numpy.newaxis.sum",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.specialized_segment_ops_test.TestSpecializedSegmentOps.test_sparse_lengths_weightedsum_cpu": {
  "lineno": 101,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.proto.caffe2_pb2.CUDA",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hip_test_util.run_in_hip",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float16",
   "numpy.float32",
   "numpy.int32",
   "numpy.int64",
   "numpy.random.rand",
   "numpy.random.randint",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.specialized_segment_ops_test.TestSpecializedSegmentOps.test_sparse_lengths_weightedsum_cpu.sparse_lengths_weightedsum_ref": {
  "lineno": 148,
  "symbols_in_volume": [
   "numpy.cumsum",
   "numpy.float32",
   "numpy.insert",
   "numpy.newaxis.sum",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.square_root_divide_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.square_root_divide_op_test.TestSquareRootDivide": {
  "lineno": 59,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.square_root_divide_op_test.TestSquareRootDivide.test_square_root_divide": {
  "lineno": 60,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "functools.partial"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.square_root_divide_op_test._data_and_scale": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.arrays",
   "caffe2.python.hypothesis_test_util.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "hypothesis.strategies.tuples",
   "numpy.float32",
   "numpy.int32",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.square_root_divide_op_test.divide_by_square_root": {
  "lineno": 40,
  "symbols_in_volume": [
   "math.sqrt",
   "numpy.copy",
   "numpy.multiply"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.square_root_divide_op_test.grad": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.stats_ops_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.stats_ops_test.TestCounterOps": {
  "lineno": 11,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.stats_ops_test.TestCounterOps.test_stats_ops": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.array",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.stats_put_ops_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.stats_put_ops_test.TestPutOps": {
  "lineno": 11,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.stats_put_ops_test.TestPutOps.test_avg_put_ops": {
  "lineno": 106,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.array",
   "numpy.float"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.stats_put_ops_test.TestPutOps.test_clamp": {
  "lineno": 44,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.array",
   "numpy.float"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.stats_put_ops_test.TestPutOps.test_clamp_with_out_of_bounds": {
  "lineno": 75,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.array",
   "numpy.float"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.stats_put_ops_test.TestPutOps.test_default_value": {
  "lineno": 12,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.array",
   "numpy.float"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.stats_put_ops_test.TestPutOps.test_increment_put_ops": {
  "lineno": 136,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.array",
   "numpy.float"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.stats_put_ops_test.TestPutOps.test_stddev_put_ops": {
  "lineno": 163,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.array",
   "numpy.float"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.storm_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.storm_test.TestStorm": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.storm_test.TestStorm.test_storm_dense": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.hypothesis_test_util.tensors",
   "functools.partial",
   "hypothesis.given",
   "hypothesis.strategies.floats",
   "numpy.array",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.storm_test.TestStorm.test_storm_dense.ref_dense": {
  "lineno": 41,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.power",
   "numpy.square",
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.storm_test.TestStorm.test_storm_sparse": {
  "lineno": 59,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.hypothesis_test_util.tensors",
   "functools.partial",
   "hypothesis.HealthCheck.filter_too_much",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.floats",
   "numpy.arange",
   "numpy.array",
   "numpy.float32",
   "numpy.random.choice",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.storm_test.TestStorm.test_storm_sparse.ref_sparse": {
  "lineno": 93,
  "symbols_in_volume": [
   "numpy.copy",
   "numpy.float32",
   "numpy.power",
   "numpy.square",
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.storm_test.TestStorm.test_storm_sparse_empty": {
  "lineno": 116,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.hypothesis_test_util.tensors",
   "functools.partial",
   "hypothesis.given",
   "hypothesis.strategies.data",
   "hypothesis.strategies.floats",
   "numpy.array",
   "numpy.empty",
   "numpy.float32",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.storm_test.TestStorm.test_storm_sparse_empty.ref_sparse_empty": {
  "lineno": 144,
  "symbols_in_volume": [
   "numpy.copy",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.string_ops_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.string_ops_test.TestStringOps": {
  "lineno": 21,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.string_ops_test.TestStringOps.test_string_ends_with": {
  "lineno": 98,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.cpu_do",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.text",
   "numpy.array",
   "numpy.object"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.string_ops_test.TestStringOps.test_string_ends_with.string_ends_with_ref": {
  "lineno": 106,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.string_ops_test.TestStringOps.test_string_prefix": {
  "lineno": 22,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.cpu_do",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.array",
   "numpy.object"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.string_ops_test.TestStringOps.test_string_prefix.string_prefix_ref": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.string_ops_test.TestStringOps.test_string_starts_with": {
  "lineno": 74,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.cpu_do",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.text",
   "numpy.array",
   "numpy.object"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.string_ops_test.TestStringOps.test_string_starts_with.string_starts_with_ref": {
  "lineno": 82,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.string_ops_test.TestStringOps.test_string_suffix": {
  "lineno": 50,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.cpu_do",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.array",
   "numpy.object"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.string_ops_test.TestStringOps.test_string_suffix.string_suffix_ref": {
  "lineno": 58,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.string_ops_test._string_lists": {
  "lineno": 14,
  "symbols_in_volume": [
   "hypothesis.strategies.lists",
   "hypothesis.strategies.text"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.text_file_reader_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.text_file_reader_test.TestTextFileReader": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.text_file_reader_test.TestTextFileReader.test_text_file_reader": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.schema.FetchRecord",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "caffe2.python.text_file_reader.TextFileReader",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.append",
   "numpy.array",
   "numpy.float32",
   "numpy.float64",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_array_equal",
   "numpy.tile",
   "tempfile.NamedTemporaryFile"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.thresholded_relu_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.thresholded_relu_op_test.TestThresholdedRelu": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.thresholded_relu_op_test.TestThresholdedRelu.fix_input": {
  "lineno": 65,
  "symbols_in_volume": [
   "numpy.sign"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.thresholded_relu_op_test.TestThresholdedRelu.test_thresholded_relu_1": {
  "lineno": 21,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.strategies.sampled_from"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.thresholded_relu_op_test.TestThresholdedRelu.test_thresholded_relu_1.defaultRef": {
  "lineno": 29,
  "symbols_in_volume": [
   "numpy.copy"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.thresholded_relu_op_test.TestThresholdedRelu.test_thresholded_relu_2": {
  "lineno": 37,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.sampled_from"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.thresholded_relu_op_test.TestThresholdedRelu.test_thresholded_relu_2.ref": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.copy"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.thresholded_relu_op_test.TestThresholdedRelu.test_thresholded_relu_3": {
  "lineno": 54,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.sampled_from"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.tile_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.tile_op_test.TestTile": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.tile_op_test.TestTile.test_tile": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.tile_op_test.TestTile.test_tile.tile_ref": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.int",
   "numpy.tile"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.tile_op_test.TestTile.test_tile_grad": {
  "lineno": 48,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.workspace.has_gpu_support",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.tile_op_test.TestTile.test_tile_grad.tile_ref": {
  "lineno": 63,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.int",
   "numpy.tile"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.tile_op_test.TestTile.test_tilewinput": {
  "lineno": 84,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.tile_op_test.TestTile.test_tilewinput.tile_ref": {
  "lineno": 101,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.int",
   "numpy.tile"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.top_k_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.top_k_test.TestTopK": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.top_k_test.TestTopK.test_top_k": {
  "lineno": 68,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.randint",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.top_k_test.TestTopK.test_top_k.bind_ref": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.top_k_test.TestTopK.test_top_k_1": {
  "lineno": 92,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.top_k_test.TestTopK.test_top_k_1.bind_ref": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.top_k_test.TestTopK.test_top_k_2": {
  "lineno": 108,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.top_k_test.TestTopK.test_top_k_2.bind_ref": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.top_k_test.TestTopK.test_top_k_3": {
  "lineno": 125,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.top_k_test.TestTopK.test_top_k_3.bind_ref": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.top_k_test.TestTopK.test_top_k_4": {
  "lineno": 141,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.top_k_test.TestTopK.test_top_k_4.bind_ref": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.top_k_test.TestTopK.test_top_k_5": {
  "lineno": 160,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.top_k_test.TestTopK.test_top_k_5.bind_ref": {
  "lineno": 172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.top_k_test.TestTopK.test_top_k_6": {
  "lineno": 178,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.top_k_test.TestTopK.test_top_k_6.bind_ref": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.top_k_test.TestTopK.test_top_k_axis": {
  "lineno": 197,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.top_k_test.TestTopK.test_top_k_axis.bind_ref": {
  "lineno": 211,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.top_k_test.TestTopK.test_top_k_grad": {
  "lineno": 217,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.arange",
   "numpy.float32",
   "numpy.random.shuffle"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.top_k_test.TestTopK.top_k_ref": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.int64",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.vectorize",
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration": {
  "lineno": 118,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration._test_gelu_op": {
  "lineno": 616,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "torch.ops._caffe2.Gelu",
   "torch.tensor",
   "torch.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration._test_gelu_op._gelu_ref": {
  "lineno": 619,
  "symbols_in_volume": [
   "numpy.float32",
   "scipy.stats.norm.cdf"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration._test_lengths_max_op": {
  "lineno": 679,
  "symbols_in_volume": [
   "torch.ops._caffe2.LengthsMax"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration._test_lengths_mean_op": {
  "lineno": 669,
  "symbols_in_volume": [
   "torch.ops._caffe2.LengthsMean"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration._test_lengths_op": {
  "lineno": 637,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.lengths_tensor",
   "hypothesis.given",
   "numpy.float32",
   "torch.int32",
   "torch.tensor",
   "torch.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration._test_lengths_op._lengths_ref": {
  "lineno": 646,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration._test_lengths_sum_op": {
  "lineno": 659,
  "symbols_in_volume": [
   "torch.ops._caffe2.LengthsSum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration._test_resize_nearest_op": {
  "lineno": 689,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.random.rand",
   "torch.ops._caffe2.ResizeNearest",
   "torch.tensor",
   "torch.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration._test_resize_nearest_op._resize_nearest_ref": {
  "lineno": 692,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration._test_roi_align": {
  "lineno": 458,
  "symbols_in_volume": [
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.array",
   "numpy.float32",
   "numpy.random.randn",
   "torch.Tensor",
   "torch.ops._caffe2.RoIAlign",
   "torch.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration._test_roi_align.rand_roi": {
  "lineno": 465,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration._test_roi_align.roi_align_ref": {
  "lineno": 479,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration._test_roi_align_rotated": {
  "lineno": 514,
  "symbols_in_volume": [
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.array",
   "numpy.float32",
   "numpy.random.randn",
   "torch.Tensor",
   "torch.ops._caffe2.RoIAlignRotated",
   "torch.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration._test_roi_align_rotated.rand_rotated_roi": {
  "lineno": 521,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration._test_roi_align_rotated.roi_align_ref": {
  "lineno": 536,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration.test_Fused8BitRowwiseQuantizedToFloat": {
  "lineno": 716,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "hypothesis.given",
   "numpy.testing.assert_array_almost_equal",
   "torch.ops._caffe2.Fused8BitRowwiseQuantizedToFloat",
   "torch.tensor"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration.test_alias_with_name_is_in_place": {
  "lineno": 770,
  "symbols_in_volume": [
   "caffe2.python.workspace.has_cuda_support",
   "torch.Tensor",
   "torch.ops._caffe2.AliasWithName",
   "torch.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration.test_batch_bucket_one_hot_op": {
  "lineno": 859,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "torch.Tensor",
   "torch.ops._caffe2.BatchBucketOneHot",
   "torch.tensor",
   "torch.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration.test_batch_bucket_one_hot_op._batch_bucket_one_hot_ref": {
  "lineno": 864,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration.test_bbox_transform": {
  "lineno": 119,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.lists",
   "hypothesis.strategies.sampled_from",
   "torch.ops._caffe2.BBoxTransform",
   "torch.tensor",
   "torch.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration.test_bbox_transform.bbox_transform_ref": {
  "lineno": 144,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration.test_box_with_nms_limits": {
  "lineno": 177,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.lists",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.randn",
   "torch.ops._caffe2.BBoxTransform",
   "torch.ops._caffe2.BoxWithNMSLimit",
   "torch.tensor",
   "torch.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration.test_box_with_nms_limits.box_with_nms_limit_ref": {
  "lineno": 220,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration.test_bucketize_op": {
  "lineno": 807,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.random.rand",
   "torch.ops._caffe2.Bucketize",
   "torch.tensor",
   "torch.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration.test_bucketize_op._bucketize_ref": {
  "lineno": 811,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration.test_collect_and_distribute_fpn_rpn_proposals_op": {
  "lineno": 571,
  "symbols_in_volume": [
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.lists",
   "numpy.random.randint",
   "torch.Tensor",
   "torch.ops._caffe2.CollectAndDistributeFpnRpnProposals",
   "torch.ops._caffe2.CollectRpnProposals",
   "torch.ops._caffe2.DistributeFpnProposals",
   "torch.rand",
   "torch.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration.test_copy_between_cpu_and_gpu": {
  "lineno": 779,
  "symbols_in_volume": [
   "caffe2.python.workspace.has_cuda_support",
   "torch.Tensor",
   "torch.ops._caffe2.CopyCPUToGPU",
   "torch.ops._caffe2.CopyGPUToCPU",
   "torch.testing.assert_allclose",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration.test_gather_ranges_to_dense_op": {
  "lineno": 878,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.array",
   "numpy.testing.assert_array_almost_equal",
   "torch.from_numpy",
   "torch.ops._caffe2.GatherRangesToDense"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration.test_gelu_op": {
  "lineno": 629,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration.test_gelu_op_cuda": {
  "lineno": 632,
  "symbols_in_volume": [
   "caffe2.python.workspace.has_cuda_support",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration.test_generate_proposals": {
  "lineno": 271,
  "symbols_in_volume": [
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.linspace",
   "numpy.ones",
   "torch.ops._caffe2.GenerateProposals",
   "torch.tensor",
   "torch.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration.test_generate_proposals.generate_proposals_ref": {
  "lineno": 287,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration.test_generate_proposals_cuda": {
  "lineno": 405,
  "symbols_in_volume": [
   "caffe2.python.workspace.has_cuda_support",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.linspace",
   "numpy.ones",
   "torch.ops._caffe2.GenerateProposals",
   "torch.tensor",
   "torch.testing.assert_allclose",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration.test_generate_proposals_cuda.generate_proposals_ref": {
  "lineno": 422,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration.test_index_hash_op": {
  "lineno": 789,
  "symbols_in_volume": [
   "numpy.random.randint",
   "torch.ops._caffe2.IndexHash",
   "torch.tensor",
   "torch.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration.test_index_hash_op._index_hash_ref": {
  "lineno": 792,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration.test_inference_lstm": {
  "lineno": 323,
  "symbols_in_volume": [
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.randn",
   "numpy.zeros",
   "torch.from_numpy",
   "torch.nn.LSTM",
   "torch.ops._caffe2.InferenceLSTM",
   "torch.tensor",
   "torch.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration.test_inference_lstm.inference_lstm_ref": {
  "lineno": 361,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration.test_learning_rate": {
  "lineno": 948,
  "symbols_in_volume": [
   "torch.ops._caffe2.LearningRate",
   "torch.tensor"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration.test_lengths_max_op": {
  "lineno": 682,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration.test_lengths_max_op_cuda": {
  "lineno": 685,
  "symbols_in_volume": [
   "caffe2.python.workspace.has_cuda_support",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration.test_lengths_mean_op": {
  "lineno": 672,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration.test_lengths_mean_op_cuda": {
  "lineno": 675,
  "symbols_in_volume": [
   "caffe2.python.workspace.has_cuda_support",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration.test_lengths_sum_op": {
  "lineno": 662,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration.test_lengths_sum_op_cuda": {
  "lineno": 665,
  "symbols_in_volume": [
   "caffe2.python.workspace.has_cuda_support",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration.test_logit": {
  "lineno": 825,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.strategies.floats",
   "torch.ops._caffe2.Logit",
   "torch.tensor",
   "torch.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration.test_logit.ref": {
  "lineno": 829,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration.test_merge_id_lists": {
  "lineno": 919,
  "symbols_in_volume": [
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.arange",
   "numpy.array",
   "numpy.int32",
   "numpy.random.choice",
   "torch.ops._caffe2.MergeIdLists",
   "torch.tensor",
   "torch.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration.test_merge_id_lists._merge_id_lists": {
  "lineno": 922,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration.test_pack_segments": {
  "lineno": 1003,
  "symbols_in_volume": [
   "torch.ops._caffe2.PackSegments",
   "torch.ops._caffe2.UnpackSegments",
   "torch.rand",
   "torch.tensor",
   "torch.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration.test_percentile": {
  "lineno": 840,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "torch.Tensor",
   "torch.ops._caffe2.Percentile",
   "torch.tensor",
   "torch.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration.test_percentile._percentile_ref": {
  "lineno": 845,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration.test_piecewise_linear_op": {
  "lineno": 736,
  "symbols_in_volume": [
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.sort",
   "numpy.zeros",
   "torch.ops._caffe2.PiecewiseLinearTransform",
   "torch.tensor",
   "torch.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration.test_piecewise_linear_op._piecewise_linear_ref": {
  "lineno": 747,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration.test_resize_nearest_op_cpu": {
  "lineno": 709,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration.test_resize_nearest_op_cuda": {
  "lineno": 712,
  "symbols_in_volume": [
   "caffe2.python.workspace.has_cuda_support",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration.test_roi_align_cpu": {
  "lineno": 507,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration.test_roi_align_cuda": {
  "lineno": 510,
  "symbols_in_volume": [
   "caffe2.python.workspace.has_cuda_support",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration.test_roi_align_rotated_cpu": {
  "lineno": 564,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.TorchIntegration.test_roi_align_rotated_cuda": {
  "lineno": 567,
  "symbols_in_volume": [
   "caffe2.python.workspace.has_cuda_support",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.bytes_to_floats": {
  "lineno": 77,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.float32",
   "numpy.shape",
   "struct.unpack"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.create_bbox_transform_inputs": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.random.randint",
   "numpy.random.randn",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.floats_to_bytes": {
  "lineno": 84,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.float32",
   "numpy.shape",
   "numpy.uint8",
   "struct.pack"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.fused_rowwise_8bit_quantize_dequantize_reference": {
  "lineno": 110,
  "symbols_in_volume": [
   "numpy.uint8"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.fused_rowwise_8bit_quantize_reference": {
  "lineno": 97,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.max",
   "numpy.min"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.generate_rois": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.float32",
   "numpy.maximum",
   "numpy.minimum",
   "numpy.random.uniform",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.torch_integration_test.generate_rois_rotated": {
  "lineno": 42,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.float32",
   "numpy.random.uniform"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.transpose_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.transpose_op_test.TestTransposeOp": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.transpose_op_test.TestTransposeOp.test_transpose": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "numpy.arange",
   "numpy.float32",
   "numpy.random.shuffle"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.transpose_op_test.TestTransposeOp.test_transpose.transpose_ref": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.transpose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.transpose_op_test.TestTransposeOp.test_transpose_cudnn": {
  "lineno": 56,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.cuda_do",
   "caffe2.python.hypothesis_test_util.gcs_cuda_only",
   "caffe2.python.hypothesis_test_util.gpu_do",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.workspace.has_cuda_support",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "numpy.arange",
   "numpy.float32",
   "numpy.random.shuffle",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.transpose_op_test.TestTransposeOp.test_transpose_cudnn.transpose_ref": {
  "lineno": 73,
  "symbols_in_volume": [
   "numpy.transpose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.transpose_op_test.TestTransposeOp.test_transpose_large_matrix": {
  "lineno": 42,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.transpose_op_test.TestTransposeOp.test_transpose_large_matrix.transpose_ref": {
  "lineno": 48,
  "symbols_in_volume": [
   "numpy.transpose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.trigonometric_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.trigonometric_op_test.TestTrigonometricOp": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.trigonometric_op_test.TestTrigonometricOp.assertTrigonometricChecks": {
  "lineno": 44,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.trigonometric_op_test.TestTrigonometricOp.test_acos": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.arccos"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.trigonometric_op_test.TestTrigonometricOp.test_asin": {
  "lineno": 23,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.arcsin"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.trigonometric_op_test.TestTrigonometricOp.test_atan": {
  "lineno": 30,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.arctan"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.trigonometric_op_test.TestTrigonometricOp.test_tan": {
  "lineno": 37,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.tan"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.unique_ops_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.unique_ops_test.TestUniqueOps": {
  "lineno": 38,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.unique_ops_test.TestUniqueOps.test_unique_op": {
  "lineno": 39,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_no_hip",
   "caffe2.python.hypothesis_test_util.tensor1d",
   "functools.partial",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.int32",
   "numpy.sort"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.unique_ops_test._unique_ref": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.unique"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.unique_uniform_fill_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.unique_uniform_fill_op_test.TestUniqueUniformFillOp": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.unique_uniform_fill_op_test.TestUniqueUniformFillOp.test_unique_uniform_int_fill": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.INT32",
   "caffe2.python.core.DataType.INT64",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.lists",
   "hypothesis.strategies.sampled_from",
   "numpy.array",
   "numpy.int32",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.upsample_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.upsample_op_test.TestUpSample": {
  "lineno": 29,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.upsample_op_test.TestUpSample.test_upsample": {
  "lineno": 30,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.just",
   "numpy.array",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.upsample_op_test.TestUpSample.test_upsample.ref": {
  "lineno": 71,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.upsample_op_test.TestUpSample.test_upsample_grad": {
  "lineno": 111,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.just",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.upsample_op_test.TestUpSample.test_upsample_grad.ref": {
  "lineno": 159,
  "symbols_in_volume": [
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_alias_op": {
  "lineno": 421,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.arange",
   "numpy.float32",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_elementwise_max": {
  "lineno": 166,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_elementwise_max.max_op": {
  "lineno": 174,
  "symbols_in_volume": [
   "numpy.maximum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_elementwise_max_grad": {
  "lineno": 191,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.maximum",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_elementwise_max_grad.max_grad_op": {
  "lineno": 202,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_elementwise_max_grad.max_grad_op.mx_grad": {
  "lineno": 203,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_elementwise_min": {
  "lineno": 222,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.serialized_test.serialized_test_util.given",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_elementwise_min.min_op": {
  "lineno": 230,
  "symbols_in_volume": [
   "numpy.minimum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_elementwise_min_grad": {
  "lineno": 247,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.minimum",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_elementwise_min_grad.min_grad_op": {
  "lineno": 258,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_elementwise_min_grad.min_grad_op.mx_grad": {
  "lineno": 259,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_lengths_gather": {
  "lineno": 318,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.arrays",
   "caffe2.python.hypothesis_test_util.dims",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.hypothesis_test_util.lengths_tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.just",
   "hypothesis.strategies.tuples",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_lengths_gather.lengths_gather_op": {
  "lineno": 342,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.cumsum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_lengths_to_ranges": {
  "lineno": 360,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.DataType.INT32",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.hypothesis_test_util.lengths_tensor",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.InferShapesAndTypes",
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.python.workspace.blobs.shape",
   "hypothesis.given",
   "hypothesis.settings"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_lengths_to_ranges.lengths_to_ranges_op": {
  "lineno": 367,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.cumsum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_nan_check": {
  "lineno": 114,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.array",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_nan_check.nan_reference": {
  "lineno": 129,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.isnan"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_range": {
  "lineno": 436,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.arange",
   "numpy.array",
   "numpy.float32",
   "six.assertRaisesRegex"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_resize_like": {
  "lineno": 62,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_resize_like.resize_like": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_size_op": {
  "lineno": 400,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.array",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_size_op.size_op": {
  "lineno": 405,
  "symbols_in_volume": [
   "numpy.prod"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_slice": {
  "lineno": 19,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "numpy.array",
   "numpy.float32",
   "numpy.int32",
   "random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_slice.slice_ref": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_sum": {
  "lineno": 278,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.int32",
   "numpy.int64",
   "numpy.random.rand",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_sum.sum_op_ref": {
  "lineno": 297,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_transpose": {
  "lineno": 78,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CUDA",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.workspace.GetCuDNNVersion",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.permutation",
   "numpy.random.rand",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_transpose.transpose_ref": {
  "lineno": 108,
  "symbols_in_volume": [
   "numpy.transpose"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.video_input_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.SkipTest",
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.video_input_op_test.VideoInputOpTest": {
  "lineno": 20,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.video_input_op_test.VideoInputOpTest.create_a_list": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.video_input_op_test.VideoInputOpTest.create_video_db": {
  "lineno": 28,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.TensorProtos",
   "lmdb.open",
   "sys.getsizeof"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.video_input_op_test.VideoInputOpTest.test_optical_flow_use_shorter_edge": {
  "lineno": 247,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.random.randint",
   "numpy.testing.assert_equal",
   "os.path.exists",
   "os.remove",
   "shutil.rmtree",
   "tempfile.NamedTemporaryFile",
   "tempfile.mkdtemp",
   "unittest.SkipTest"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.video_input_op_test.VideoInputOpTest.test_optical_flow_with_temporal_jittering": {
  "lineno": 158,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.random.randint",
   "numpy.testing.assert_equal",
   "os.path.exists",
   "os.remove",
   "shutil.rmtree",
   "tempfile.NamedTemporaryFile",
   "tempfile.mkdtemp",
   "unittest.SkipTest"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.video_input_op_test.VideoInputOpTest.test_rgb_use_shorter_edge": {
  "lineno": 201,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.random.randint",
   "numpy.testing.assert_equal",
   "os.path.exists",
   "os.remove",
   "shutil.rmtree",
   "tempfile.NamedTemporaryFile",
   "tempfile.mkdtemp",
   "unittest.SkipTest"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.video_input_op_test.VideoInputOpTest.test_rgb_with_temporal_jittering": {
  "lineno": 75,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.random.randint",
   "numpy.testing.assert_equal",
   "os.path.exists",
   "os.remove",
   "shutil.rmtree",
   "tempfile.NamedTemporaryFile",
   "tempfile.mkdtemp",
   "unittest.SkipTest"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.video_input_op_test.VideoInputOpTest.test_rgb_with_uniform_sampling": {
  "lineno": 116,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.random.randint",
   "numpy.testing.assert_equal",
   "os.path.exists",
   "os.remove",
   "shutil.rmtree",
   "tempfile.NamedTemporaryFile",
   "tempfile.mkdtemp",
   "unittest.SkipTest"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.weight_scale_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.operator_test.weight_scale_test.TestWeightScale": {
  "lineno": 28,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.weight_scale_test.TestWeightScale.test_weight_scale": {
  "lineno": 29,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.cpu_do",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensors",
   "functools.partial",
   "hypothesis.given",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "numpy.array",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.weight_scale_test.TestWeightScale.test_weight_scale.ref_weight_scale": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.operator_test.weighted_multi_sample_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.weighted_multi_sample_test.TestWeightedMultiSample": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.weighted_multi_sample_test.TestWeightedMultiSample.test_weighted_multi_sample": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.repeat",
   "numpy.testing.assert_allclose",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.weighted_sample_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.weighted_sample_test.TestWeightedSample": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.weighted_sample_test.TestWeightedSample.test_weighted_sample": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.array",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.randint",
   "numpy.testing.assert_allclose",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.weighted_sum_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.testWithArgs"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.weighted_sum_test.TestWeightedSumOp": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.weighted_sum_test.TestWeightedSumOp.test_weighted_sum": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.weighted_sum_test.TestWeightedSumOp.test_weighted_sum.weighted_sum_op_ref": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.weighted_sum_test.TestWeightedSumOp.test_weighted_sum_grad": {
  "lineno": 61,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.wngrad_test": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "caffe2.python.operator_test.wngrad_test.TestWngrad": {
  "lineno": 80,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.operator_test.wngrad_test.TestWngrad.test_sparse_wngrad": {
  "lineno": 168,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.hypothesis_test_util.tensors",
   "hypothesis.HealthCheck.filter_too_much",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.floats"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.wngrad_test.TestWngrad.test_sparse_wngrad_empty": {
  "lineno": 181,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.hypothesis_test_util.tensors",
   "hypothesis.given",
   "hypothesis.note",
   "hypothesis.settings",
   "hypothesis.strategies.floats",
   "numpy.array",
   "numpy.empty",
   "numpy.float32",
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.wngrad_test.TestWngrad.test_sparse_wngrad_empty.ref_sparse": {
  "lineno": 207,
  "symbols_in_volume": [
   "numpy.copy"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.wngrad_test.TestWngrad.test_wngrad_dense_base": {
  "lineno": 81,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.hypothesis_test_util.tensors",
   "functools.partial",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.floats",
   "numpy.array",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.wngrad_test.TestWngrad.test_wngrad_dense_output_effective_lr": {
  "lineno": 108,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.hypothesis_test_util.tensors",
   "functools.partial",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.floats",
   "numpy.array",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.wngrad_test.TestWngrad.test_wngrad_dense_output_effective_lr_and_update": {
  "lineno": 137,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.hypothesis_test_util.tensors",
   "functools.partial",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.floats",
   "numpy.abs",
   "numpy.array",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.wngrad_test.ref_wngrad": {
  "lineno": 21,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.wngrad_test.wngrad_sparse_test_helper": {
  "lineno": 39,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "numpy.arange",
   "numpy.array",
   "numpy.float32",
   "numpy.random.choice",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.operator_test.wngrad_test.wngrad_sparse_test_helper.ref_sparse": {
  "lineno": 62,
  "symbols_in_volume": [
   "numpy.copy",
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.defaultdict",
   "collections.namedtuple",
   "logging.getLogger"
  ],
  "type": "module"
 },
 "caffe2.python.optimizer.AdadeltaOptimizer": {
  "lineno": 1273,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.optimizer.AdadeltaOptimizer.__init__": {
  "lineno": 1274,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer.AdadeltaOptimizer._run": {
  "lineno": 1306,
  "symbols_in_volume": [
   "caffe2.python.core.GradientSlice"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer.AdadeltaOptimizer.scale_learning_rate": {
  "lineno": 1350,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer.AdagradOptimizer": {
  "lineno": 558,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.optimizer.AdagradOptimizer.__init__": {
  "lineno": 559,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer.AdagradOptimizer._process_pruning_options": {
  "lineno": 609,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer.AdagradOptimizer._process_swa_options": {
  "lineno": 600,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer.AdagradOptimizer._run": {
  "lineno": 673,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.BOOL",
   "caffe2.python.core.DataType.DOUBLE",
   "caffe2.python.core.DataType.FLOAT",
   "caffe2.python.core.DataType.INT64",
   "caffe2.python.core.DataType.UINT8",
   "caffe2.python.core.GradientSlice",
   "caffe2.python.core.IsGPUDeviceType",
   "caffe2.python.scope.CurrentDeviceScope",
   "caffe2.python.workspace.InferShapesAndTypes",
   "numpy.finfo",
   "numpy.float32",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer.AdagradOptimizer.scale_learning_rate": {
  "lineno": 1065,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer.AdamOptimizer": {
  "lineno": 1457,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.optimizer.AdamOptimizer.__init__": {
  "lineno": 1458,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer.AdamOptimizer._run": {
  "lineno": 1489,
  "symbols_in_volume": [
   "caffe2.python.core.GradientSlice",
   "caffe2.python.workspace.InferShapesAndTypes"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer.AdamOptimizer.scale_learning_rate": {
  "lineno": 1585,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer.FP16SgdOptimizer": {
  "lineno": 423,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.optimizer.FP16SgdOptimizer.__init__": {
  "lineno": 424,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer.FP16SgdOptimizer._run": {
  "lineno": 444,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.FLOAT",
   "caffe2.python.core.DataType.FLOAT16",
   "caffe2.python.core.GradientSlice"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer.FtrlOptimizer": {
  "lineno": 1355,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.optimizer.FtrlOptimizer.__init__": {
  "lineno": 1356,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer.FtrlOptimizer._run": {
  "lineno": 1373,
  "symbols_in_volume": [
   "caffe2.python.core.GradientSlice"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer.FtrlOptimizer.scale_learning_rate": {
  "lineno": 1406,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer.GFtrlOptimizer": {
  "lineno": 1411,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.optimizer.GFtrlOptimizer.__init__": {
  "lineno": 1414,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer.GFtrlOptimizer._run": {
  "lineno": 1431,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer.GFtrlOptimizer.scale_learning_rate": {
  "lineno": 1452,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer.MultiPrecisionSgdOptimizer": {
  "lineno": 353,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.optimizer.MultiPrecisionSgdOptimizer.__init__": {
  "lineno": 354,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer.MultiPrecisionSgdOptimizer._run": {
  "lineno": 372,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.FLOAT",
   "caffe2.python.core.GradientSlice"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer.Optimizer": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.optimizer.Optimizer.__call__": {
  "lineno": 44,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "caffe2.python.modeling.parameter_info.ParameterInfo",
   "past.builtins.basestring"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer.Optimizer.__init__": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer.Optimizer._add_local_lr_multiplier": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer.Optimizer._clear_local_lr_multiplier": {
  "lineno": 178,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer.Optimizer._run": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer.Optimizer.add_lr_multiplier": {
  "lineno": 158,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer.Optimizer.attributes": {
  "lineno": 74,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer.Optimizer.build_lr": {
  "lineno": 97,
  "symbols_in_volume": [
   "caffe2.python.core.IsGPUDeviceType",
   "caffe2.python.scope.CurrentDeviceScope",
   "caffe2.python.utils.BuildUniqueMutexIter"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer.Optimizer.create_lars_inputs": {
  "lineno": 227,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer.Optimizer.dedup": {
  "lineno": 182,
  "symbols_in_volume": [
   "caffe2.python.core.GradientSlice"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer.Optimizer.get_auxiliary_parameters": {
  "lineno": 194,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer.Optimizer.get_cpu_blob_name": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer.Optimizer.get_gpu_blob_name": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer.Optimizer.make_unique_blob_name": {
  "lineno": 81,
  "symbols_in_volume": [
   "caffe2.python.core.IsGPUDeviceType",
   "caffe2.python.scope.CurrentDeviceScope"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer.Optimizer.scale_learning_rate": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer.RmsPropOptimizer": {
  "lineno": 1685,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.optimizer.RmsPropOptimizer.__init__": {
  "lineno": 1686,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer.RmsPropOptimizer._run": {
  "lineno": 1705,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.GradientSlice",
   "caffe2.python.scope.CurrentDeviceScope"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer.RmsPropOptimizer.scale_learning_rate": {
  "lineno": 1754,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer.SgdOptimizer": {
  "lineno": 236,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.optimizer.SgdOptimizer.__init__": {
  "lineno": 237,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer.SgdOptimizer._run": {
  "lineno": 256,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.GradientSlice",
   "caffe2.python.core.IsGPUDeviceType",
   "caffe2.python.scope.CurrentDeviceScope",
   "numpy.finfo",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer.SgdOptimizer.scale_learning_rate": {
  "lineno": 348,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer.StormOptimizer": {
  "lineno": 1169,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.optimizer.StormOptimizer.__init__": {
  "lineno": 1170,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer.StormOptimizer._run": {
  "lineno": 1206,
  "symbols_in_volume": [
   "caffe2.python.core.GradientSlice",
   "caffe2.python.core.IsGPUDeviceType",
   "caffe2.python.scope.CurrentDeviceScope",
   "numpy.finfo",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer.StormOptimizer.scale_learning_rate": {
  "lineno": 1269,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer.WeightDecayBuilder": {
  "lineno": 531,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.optimizer.WeightDecayBuilder.__init__": {
  "lineno": 532,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer.WeightDecayBuilder._run": {
  "lineno": 535,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.GradientSlice",
   "caffe2.python.scope.CurrentDeviceScope"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer.WngradOptimizer": {
  "lineno": 1070,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.optimizer.WngradOptimizer.__init__": {
  "lineno": 1071,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer.WngradOptimizer._run": {
  "lineno": 1096,
  "symbols_in_volume": [
   "caffe2.python.core.GradientSlice",
   "caffe2.python.core.IsGPUDeviceType",
   "caffe2.python.scope.CurrentDeviceScope",
   "numpy.finfo",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer.WngradOptimizer.scale_learning_rate": {
  "lineno": 1164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer.YellowFinOptimizer": {
  "lineno": 1590,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.optimizer.YellowFinOptimizer.__init__": {
  "lineno": 1596,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer.YellowFinOptimizer._run": {
  "lineno": 1619,
  "symbols_in_volume": [
   "caffe2.python.core.GradientSlice",
   "caffe2.python.utils.BuildUniqueMutexIter"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer.YellowFinOptimizer.scale_learning_rate": {
  "lineno": 1680,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer._build": {
  "lineno": 1848,
  "symbols_in_volume": [
   "caffe2.python.core.DeviceScope"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer._calc_norm_ratio": {
  "lineno": 1815,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.core.GradientSlice",
   "caffe2.python.core.NameScope"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer._get_param_to_device": {
  "lineno": 1759,
  "symbols_in_volume": [
   "caffe2.python.core.InferBlobDevices"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer.add_weight_decay": {
  "lineno": 1904,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer.build_adadelta": {
  "lineno": 2023,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer.build_adagrad": {
  "lineno": 1972,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer.build_adam": {
  "lineno": 2040,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer.build_fp16_sgd": {
  "lineno": 1952,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer.build_ftrl": {
  "lineno": 1957,
  "symbols_in_volume": [
   "caffe2.python.core.IsOperator"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer.build_gftrl": {
  "lineno": 1965,
  "symbols_in_volume": [
   "caffe2.python.core.IsOperator"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer.build_multi_precision_sgd": {
  "lineno": 1936,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer.build_rms_prop": {
  "lineno": 2061,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer.build_sgd": {
  "lineno": 1920,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer.build_storm": {
  "lineno": 2006,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer.build_wngrad": {
  "lineno": 1989,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer.build_yellowfin": {
  "lineno": 2056,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer.get_lr_injection": {
  "lineno": 1793,
  "symbols_in_volume": [
   "caffe2.python.workspace.FetchBlob"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer.get_param_device": {
  "lineno": 1767,
  "symbols_in_volume": [
   "caffe2.python.core.GradientSlice"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer.set_lr_injection": {
  "lineno": 1803,
  "symbols_in_volume": [
   "caffe2.python.workspace.FeedBlob",
   "numpy.array",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_context": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.optimizer_context.OptimizerContext": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.context.define_context",
   "caffe2.python.modifier_context.ModifierContext"
  ],
  "type": "class"
 },
 "caffe2.python.optimizer_context.OptimizerContext.get_optimizer": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer_context.OptimizerContext.has_optimizer": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer_context.UseOptimizer": {
  "lineno": 31,
  "symbols_in_volume": [
   "caffe2.python.modifier_context.UseModifierBase"
  ],
  "type": "class"
 },
 "caffe2.python.optimizer_context.UseOptimizer._context_class": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.optimizer_test.TestAdadelta": {
  "lineno": 214,
  "symbols_in_volume": [
   "caffe2.python.optimizer_test_util.LRModificationTestBase",
   "caffe2.python.optimizer_test_util.OptimizerTestBase",
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.optimizer_test.TestAdadelta.build_optimizer": {
  "lineno": 215,
  "symbols_in_volume": [
   "caffe2.python.optimizer.build_adadelta"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestAdadelta.check_optimizer": {
  "lineno": 219,
  "symbols_in_volume": [
   "caffe2.python.optimizer.get_auxiliary_parameters",
   "caffe2.python.workspace.FetchBlob"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestAdagrad": {
  "lineno": 128,
  "symbols_in_volume": [
   "caffe2.python.optimizer_test_util.LRModificationTestBase",
   "caffe2.python.optimizer_test_util.OptimizerTestBase",
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.optimizer_test.TestAdagrad.build_optimizer": {
  "lineno": 129,
  "symbols_in_volume": [
   "caffe2.python.optimizer.build_adagrad"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestAdagrad.check_optimizer": {
  "lineno": 133,
  "symbols_in_volume": [
   "caffe2.python.optimizer.get_auxiliary_parameters",
   "caffe2.python.workspace.FetchBlob"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestAdam": {
  "lineno": 226,
  "symbols_in_volume": [
   "caffe2.python.optimizer_test_util.LRModificationTestBase",
   "caffe2.python.optimizer_test_util.OptimizerTestBase",
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.optimizer_test.TestAdam.build_optimizer": {
  "lineno": 227,
  "symbols_in_volume": [
   "caffe2.python.optimizer.build_adam"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestAdam.check_optimizer": {
  "lineno": 231,
  "symbols_in_volume": [
   "caffe2.python.optimizer.get_auxiliary_parameters",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.HasBlob",
   "numpy.array",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestFtrl": {
  "lineno": 85,
  "symbols_in_volume": [
   "caffe2.python.optimizer_test_util.OptimizerTestBase",
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.optimizer_test.TestFtrl.build_optimizer": {
  "lineno": 86,
  "symbols_in_volume": [
   "caffe2.python.optimizer.build_ftrl"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestFtrl.check_optimizer": {
  "lineno": 98,
  "symbols_in_volume": [
   "caffe2.python.optimizer.get_auxiliary_parameters",
   "caffe2.python.workspace.FetchBlob"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestGFtrl": {
  "lineno": 105,
  "symbols_in_volume": [
   "caffe2.python.optimizer_test_util.OptimizerTestBase",
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.optimizer_test.TestGFtrl.build_optimizer": {
  "lineno": 109,
  "symbols_in_volume": [
   "caffe2.python.optimizer.build_gftrl"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestGFtrl.check_optimizer": {
  "lineno": 121,
  "symbols_in_volume": [
   "caffe2.python.optimizer.get_auxiliary_parameters",
   "caffe2.python.workspace.FetchBlob"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestGFtrl.testSparse": {
  "lineno": 106,
  "symbols_in_volume": [
   "unittest.SkipTest"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestLars": {
  "lineno": 22,
  "symbols_in_volume": [
   "caffe2.python.optimizer_test_util.OptimizerTestBase",
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.optimizer_test.TestLars.build_optimizer": {
  "lineno": 26,
  "symbols_in_volume": [
   "caffe2.python.optimizer.build_sgd"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestLars.check_optimizer": {
  "lineno": 30,
  "symbols_in_volume": [
   "caffe2.python.optimizer.get_auxiliary_parameters",
   "caffe2.python.workspace.FetchBlob",
   "numpy.array",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestLars.testSparse": {
  "lineno": 23,
  "symbols_in_volume": [
   "unittest.SkipTest"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestMomentumSgd": {
  "lineno": 38,
  "symbols_in_volume": [
   "caffe2.python.optimizer_test_util.OptimizerTestBase",
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.optimizer_test.TestMomentumSgd.build_optimizer": {
  "lineno": 39,
  "symbols_in_volume": [
   "caffe2.python.optimizer.build_sgd"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestMomentumSgd.check_optimizer": {
  "lineno": 43,
  "symbols_in_volume": [
   "caffe2.python.optimizer.get_auxiliary_parameters",
   "caffe2.python.workspace.FetchBlob",
   "numpy.array",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestMultiOptimizers": {
  "lineno": 554,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.optimizer_test.TestMultiOptimizers.test_multiple_optimizers": {
  "lineno": 555,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.optimizer.AdagradOptimizer",
   "caffe2.python.optimizer.SgdOptimizer",
   "caffe2.python.optimizer._get_param_to_device"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestMultiOptimizers.test_multiple_optimizers.infer_blob_device": {
  "lineno": 571,
  "symbols_in_volume": [
   "caffe2.python.optimizer.get_param_device"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestMultiPrecisionSgd": {
  "lineno": 64,
  "symbols_in_volume": [
   "caffe2.python.optimizer_test_util.LRModificationTestBase",
   "caffe2.python.optimizer_test_util.OptimizerTestBase",
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.optimizer_test.TestMultiPrecisionSgd.build_optimizer": {
  "lineno": 67,
  "symbols_in_volume": [
   "caffe2.python.optimizer.build_multi_precision_sgd"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestMultiPrecisionSgd.check_optimizer": {
  "lineno": 73,
  "symbols_in_volume": [
   "caffe2.python.optimizer.get_auxiliary_parameters",
   "caffe2.python.workspace.FetchBlob",
   "numpy.array",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestMultiPrecisionSgd.testGPUDense": {
  "lineno": 80,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.FLOAT16",
   "caffe2.python.workspace.has_gpu_support",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestOptimizerContext": {
  "lineno": 660,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.optimizer_test.TestOptimizerContext.test_optimizer_context": {
  "lineno": 662,
  "symbols_in_volume": [
   "caffe2.python.brew.conv",
   "caffe2.python.brew.fc",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.optimizer.SgdOptimizer",
   "caffe2.python.optimizer._optimizer_instance_count",
   "caffe2.python.optimizer.add_weight_decay",
   "caffe2.python.optimizer.build_sgd",
   "caffe2.python.optimizer_context.UseOptimizer"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestRmsProp": {
  "lineno": 537,
  "symbols_in_volume": [
   "caffe2.python.optimizer_test_util.LRModificationTestBase",
   "caffe2.python.optimizer_test_util.OptimizerTestBase",
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.optimizer_test.TestRmsProp.build_optimizer": {
  "lineno": 538,
  "symbols_in_volume": [
   "caffe2.python.optimizer.build_rms_prop"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestRmsProp.check_optimizer": {
  "lineno": 544,
  "symbols_in_volume": [
   "caffe2.python.optimizer.get_auxiliary_parameters",
   "caffe2.python.workspace.FetchBlob"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestRmsProp.testSparse": {
  "lineno": 550,
  "symbols_in_volume": [
   "unittest.SkipTest"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestRowWiseAdagrad": {
  "lineno": 140,
  "symbols_in_volume": [
   "caffe2.python.optimizer_test_util.OptimizerTestBase",
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.optimizer_test.TestRowWiseAdagrad.build_optimizer": {
  "lineno": 141,
  "symbols_in_volume": [
   "caffe2.python.optimizer.build_adagrad"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestRowWiseAdagrad.check_optimizer": {
  "lineno": 147,
  "symbols_in_volume": [
   "caffe2.python.optimizer.get_auxiliary_parameters",
   "caffe2.python.workspace.FetchBlob"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestRowWiseAdagrad.testDense": {
  "lineno": 153,
  "symbols_in_volume": [
   "unittest.SkipTest"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestRowWiseAdagrad.testGPUDense": {
  "lineno": 156,
  "symbols_in_volume": [
   "unittest.SkipTest"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestRowWiseAdagradWithCounter": {
  "lineno": 159,
  "symbols_in_volume": [
   "caffe2.python.optimizer_test_util.OptimizerTestBase",
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.optimizer_test.TestRowWiseAdagradWithCounter.build_optimizer": {
  "lineno": 160,
  "symbols_in_volume": [
   "caffe2.python.optimizer.build_adagrad"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestRowWiseAdagradWithCounter.check_optimizer": {
  "lineno": 171,
  "symbols_in_volume": [
   "caffe2.python.optimizer.get_auxiliary_parameters",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.HasBlob",
   "numpy.array",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestRowWiseAdagradWithCounter.testDense": {
  "lineno": 184,
  "symbols_in_volume": [
   "unittest.SkipTest"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestRowWiseAdagradWithCounter.testGPUDense": {
  "lineno": 187,
  "symbols_in_volume": [
   "unittest.SkipTest"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestSgd": {
  "lineno": 51,
  "symbols_in_volume": [
   "caffe2.python.optimizer_test_util.LRModificationTestBase",
   "caffe2.python.optimizer_test_util.OptimizerTestBase",
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.optimizer_test.TestSgd.build_optimizer": {
  "lineno": 52,
  "symbols_in_volume": [
   "caffe2.python.optimizer.build_sgd"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestSgd.check_optimizer": {
  "lineno": 56,
  "symbols_in_volume": [
   "caffe2.python.optimizer.get_auxiliary_parameters",
   "caffe2.python.workspace.FetchBlob",
   "numpy.array",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestSparseRAdam": {
  "lineno": 245,
  "symbols_in_volume": [
   "caffe2.python.optimizer_test_util.LRModificationTestBase",
   "caffe2.python.optimizer_test_util.OptimizerTestBase",
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.optimizer_test.TestSparseRAdam.build_optimizer": {
  "lineno": 246,
  "symbols_in_volume": [
   "caffe2.python.optimizer.build_adam"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestSparseRAdam.check_optimizer": {
  "lineno": 250,
  "symbols_in_volume": [
   "caffe2.python.optimizer.get_auxiliary_parameters",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.HasBlob",
   "numpy.array",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestStorm": {
  "lineno": 202,
  "symbols_in_volume": [
   "caffe2.python.optimizer_test_util.LRModificationTestBase",
   "caffe2.python.optimizer_test_util.OptimizerTestBase",
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.optimizer_test.TestStorm.build_optimizer": {
  "lineno": 203,
  "symbols_in_volume": [
   "caffe2.python.optimizer.build_storm"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestStorm.check_optimizer": {
  "lineno": 207,
  "symbols_in_volume": [
   "caffe2.python.optimizer.get_auxiliary_parameters",
   "caffe2.python.workspace.FetchBlob"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestWeightDecay": {
  "lineno": 620,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.optimizer_test.TestWeightDecay.test_weight_decay": {
  "lineno": 622,
  "symbols_in_volume": [
   "caffe2.python.brew.conv",
   "caffe2.python.brew.fc",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.optimizer.add_weight_decay",
   "caffe2.python.optimizer.build_sgd"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestWngrad": {
  "lineno": 190,
  "symbols_in_volume": [
   "caffe2.python.optimizer_test_util.LRModificationTestBase",
   "caffe2.python.optimizer_test_util.OptimizerTestBase",
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.optimizer_test.TestWngrad.build_optimizer": {
  "lineno": 191,
  "symbols_in_volume": [
   "caffe2.python.optimizer.build_wngrad"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestWngrad.check_optimizer": {
  "lineno": 195,
  "symbols_in_volume": [
   "caffe2.python.optimizer.get_auxiliary_parameters",
   "caffe2.python.workspace.FetchBlob"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestYellowFin": {
  "lineno": 264,
  "symbols_in_volume": [
   "caffe2.python.optimizer_test_util.OptimizerTestBase",
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.optimizer_test.TestYellowFin.build_optimizer": {
  "lineno": 267,
  "symbols_in_volume": [
   "caffe2.python.optimizer.build_yellowfin"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestYellowFin.caffe2_yellowfin": {
  "lineno": 312,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.DataType.INT64",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.core.Net",
   "caffe2.python.optimizer.YellowFinOptimizer",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNet",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.exp"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestYellowFin.check_optimizer": {
  "lineno": 271,
  "symbols_in_volume": [
   "caffe2.python.optimizer.get_auxiliary_parameters",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.HasBlob",
   "numpy.array",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestYellowFin.compare_yellowfin_models": {
  "lineno": 471,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestYellowFin.deb": {
  "lineno": 287,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestYellowFin.get_lr_mu": {
  "lineno": 293,
  "symbols_in_volume": [
   "math.fabs",
   "math.pow",
   "math.sqrt",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestYellowFin.numpy_yellowfin": {
  "lineno": 402,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.linalg.norm",
   "numpy.log",
   "numpy.ones",
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestYellowFin.testSparse": {
  "lineno": 284,
  "symbols_in_volume": [
   "unittest.SkipTest"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestYellowFin.test_caffe2_cpu_vs_numpy": {
  "lineno": 495,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "unittest.skip"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestYellowFin.test_caffe2_gpu_vs_numpy": {
  "lineno": 517,
  "symbols_in_volume": [
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.workspace.GpuDeviceType",
   "caffe2.python.workspace.has_gpu_support",
   "unittest.skip",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test_util": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.optimizer_test_util.LRModificationTestBase": {
  "lineno": 152,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.optimizer_test_util.LRModificationTestBase._gradient_ratio_reference": {
  "lineno": 159,
  "symbols_in_volume": [
   "caffe2.python.core.GradientSlice",
   "caffe2.python.workspace.FetchBlob",
   "numpy.linalg.norm",
   "numpy.maximum",
   "numpy.power",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test_util.LRModificationTestBase.test_global_norm_based_gradient_clipping": {
  "lineno": 177,
  "symbols_in_volume": [
   "caffe2.python.core.GradientSlice",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNet",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.random.randint",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test_util.LRModificationTestBase.test_lr_injection": {
  "lineno": 215,
  "symbols_in_volume": [
   "caffe2.python.optimizer.get_lr_injection",
   "caffe2.python.optimizer.set_lr_injection",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNet",
   "caffe2.python.workspace.RunNetOnce"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test_util.OptimizerTestBase": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.optimizer_test_util.OptimizerTestBase._createDense": {
  "lineno": 25,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.core.BlobReference",
   "caffe2.python.core.DataType.FLOAT",
   "caffe2.python.core.DataType.FLOAT16",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.modeling.initializers.Initializer",
   "caffe2.python.modeling.initializers.PseudoFP16Initializer",
   "numpy.array",
   "numpy.dot",
   "numpy.float16",
   "numpy.float32",
   "numpy.newaxis",
   "numpy.random.randint",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test_util.OptimizerTestBase.testDense": {
  "lineno": 51,
  "symbols_in_volume": [
   "caffe2.python.optimizer",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNet",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.newaxis",
   "numpy.random.randint",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test_util.OptimizerTestBase.testGPUDense": {
  "lineno": 71,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.core.DataType.FLOAT",
   "caffe2.python.core.DataType.FLOAT16",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.GpuDeviceType",
   "caffe2.python.workspace.RunNet",
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.python.workspace.has_gpu_support",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.optimizer_test_util.OptimizerTestBase.testSparse": {
  "lineno": 98,
  "symbols_in_volume": [
   "caffe2.python.cnn.CNNModelHelper",
   "caffe2.python.core.GradientSlice",
   "caffe2.python.optimizer",
   "caffe2.python.workspace.CreateBlob",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNet",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.arange",
   "numpy.array",
   "numpy.dot",
   "numpy.float32",
   "numpy.int32",
   "numpy.int64",
   "numpy.random.randint",
   "numpy.random.seed",
   "numpy.repeat",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.parallel_workers": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.INFO",
   "logging.getLogger"
  ],
  "type": "module"
 },
 "caffe2.python.parallel_workers.GlobalWorkerCoordinator": {
  "lineno": 195,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.parallel_workers.GlobalWorkerCoordinator.__init__": {
  "lineno": 196,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.parallel_workers.GlobalWorkerCoordinator.add": {
  "lineno": 202,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.parallel_workers.GlobalWorkerCoordinator.get_new_worker_id": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.parallel_workers.GlobalWorkerCoordinator.get_worker_ids": {
  "lineno": 211,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.parallel_workers.GlobalWorkerCoordinator.register_shutdown_handler": {
  "lineno": 245,
  "symbols_in_volume": [
   "atexit.register"
  ],
  "type": "function"
 },
 "caffe2.python.parallel_workers.GlobalWorkerCoordinator.register_shutdown_handler.cleanup": {
  "lineno": 246,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.parallel_workers.GlobalWorkerCoordinator.start": {
  "lineno": 214,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.parallel_workers.GlobalWorkerCoordinator.stop": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.parallel_workers.GlobalWorkerCoordinator.stop_coordinator": {
  "lineno": 232,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.parallel_workers.Metrics": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.parallel_workers.Metrics.__init__": {
  "lineno": 89,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "caffe2.python.parallel_workers.Metrics.log_metrics": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.parallel_workers.Metrics.put_metric": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.parallel_workers.Metrics.reset_metrics": {
  "lineno": 93,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "caffe2.python.parallel_workers.State": {
  "lineno": 112,
  "symbols_in_volume": [
   "abc.ABCMeta",
   "six.add_metaclass"
  ],
  "type": "class"
 },
 "caffe2.python.parallel_workers.State.cleanup": {
  "lineno": 123,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "caffe2.python.parallel_workers.State.start": {
  "lineno": 115,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "caffe2.python.parallel_workers.State.stop": {
  "lineno": 119,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "caffe2.python.parallel_workers.Worker": {
  "lineno": 252,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.parallel_workers.Worker.__init__": {
  "lineno": 253,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.parallel_workers.Worker.finish": {
  "lineno": 278,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "caffe2.python.parallel_workers.Worker.handle_exception": {
  "lineno": 271,
  "symbols_in_volume": [
   "logging.exception",
   "traceback.print_exc"
  ],
  "type": "function"
 },
 "caffe2.python.parallel_workers.Worker.run": {
  "lineno": 268,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.parallel_workers.Worker.start": {
  "lineno": 265,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "caffe2.python.parallel_workers.WorkerCoordinator": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.parallel_workers.WorkerCoordinator.__init__": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.parallel_workers.WorkerCoordinator._start": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.parallel_workers.WorkerCoordinator._stop": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.parallel_workers.WorkerCoordinator._wait_finish": {
  "lineno": 173,
  "symbols_in_volume": [
   "threading.current_thread"
  ],
  "type": "function"
 },
 "caffe2.python.parallel_workers.WorkerCoordinator.get_worker_ids": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.parallel_workers.WorkerCoordinator.init": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.parallel_workers.WorkerCoordinator.is_active": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.parallel_workers.init_workers": {
  "lineno": 51,
  "symbols_in_volume": [
   "threading.Thread"
  ],
  "type": "function"
 },
 "caffe2.python.parallel_workers.run_worker": {
  "lineno": 287,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.parallel_workers_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.parallel_workers_test.ParallelWorkersTest": {
  "lineno": 58,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.parallel_workers_test.ParallelWorkersTest.testParallelWorkers": {
  "lineno": 59,
  "symbols_in_volume": [
   "caffe2.python.parallel_workers.init_workers",
   "caffe2.python.workspace.ResetWorkspace"
  ],
  "type": "function"
 },
 "caffe2.python.parallel_workers_test.ParallelWorkersTest.testParallelWorkersInitFun": {
  "lineno": 75,
  "symbols_in_volume": [
   "caffe2.python.parallel_workers.init_workers",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace"
  ],
  "type": "function"
 },
 "caffe2.python.parallel_workers_test.ParallelWorkersTest.testParallelWorkersInitFun.init_fun": {
  "lineno": 84,
  "symbols_in_volume": [
   "caffe2.python.workspace.FeedBlob"
  ],
  "type": "function"
 },
 "caffe2.python.parallel_workers_test.ParallelWorkersTest.testParallelWorkersShutdownFun": {
  "lineno": 101,
  "symbols_in_volume": [
   "caffe2.python.parallel_workers.init_workers",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace"
  ],
  "type": "function"
 },
 "caffe2.python.parallel_workers_test.ParallelWorkersTest.testParallelWorkersShutdownFun.shutdown_fun": {
  "lineno": 108,
  "symbols_in_volume": [
   "caffe2.python.workspace.FeedBlob"
  ],
  "type": "function"
 },
 "caffe2.python.parallel_workers_test.create_queue": {
  "lineno": 12,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.C.Workspace.current.create_blob",
   "caffe2.python.workspace.RunOperatorOnce"
  ],
  "type": "function"
 },
 "caffe2.python.parallel_workers_test.create_worker": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.parallel_workers_test.create_worker.dummy_worker": {
  "lineno": 33,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.RunOperatorOnce"
  ],
  "type": "function"
 },
 "caffe2.python.parallel_workers_test.dequeue_value": {
  "lineno": 47,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce"
  ],
  "type": "function"
 },
 "caffe2.python.parallelize_bmuf_distributed_test": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.INFO",
   "logging.getLogger"
  ],
  "type": "module"
 },
 "caffe2.python.parallelize_bmuf_distributed_test.DistributedTest": {
  "lineno": 222,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.parallelize_bmuf_distributed_test.DistributedTest._test_bmuf_distributed": {
  "lineno": 235,
  "symbols_in_volume": [
   "multiprocessing.Manager",
   "multiprocessing.Process",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_equal",
   "shutil.rmtree",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "caffe2.python.parallelize_bmuf_distributed_test.DistributedTest.test_bmuf_distributed": {
  "lineno": 224,
  "symbols_in_volume": [
   "caffe2.python.workspace.has_hip_support",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans"
  ],
  "type": "function"
 },
 "caffe2.python.parallelize_bmuf_distributed_test.bmuf_process": {
  "lineno": 22,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.cnn.CNNModelHelper",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.data_parallel_model.Parallelize_BMUF",
   "caffe2.python.data_parallel_model.RunInitNet",
   "caffe2.python.data_parallel_model.RunNet",
   "caffe2.python.dyndep.InitOpsLibrary",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.GpuDeviceType",
   "caffe2.python.workspace.NumGpuDevices",
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.python.workspace.RunOperatorOnce",
   "caffe2.python.workspace.has_gpu_support",
   "numpy.array",
   "numpy.float32",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.parallelize_bmuf_distributed_test.bmuf_process._device_pid": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.parallelize_bmuf_distributed_test.bmuf_process._generate_data": {
  "lineno": 82,
  "symbols_in_volume": [
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.workspace.FeedBlob",
   "hypothesis.strategies",
   "hypothesis.strategies.astype",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.seed",
   "numpy.round"
  ],
  "type": "function"
 },
 "caffe2.python.parallelize_bmuf_distributed_test.bmuf_process._input_builder_fun": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.parallelize_bmuf_distributed_test.bmuf_process._model_build_fun": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.parallelize_bmuf_distributed_test.bmuf_process._param_update_fun": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.pipeline": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.pipeline.NetProcessor": {
  "lineno": 397,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.pipeline.NetProcessor.__call__": {
  "lineno": 425,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "caffe2.python.core.clone_and_bind_net",
   "caffe2.python.net_builder.NetBuilder.current"
  ],
  "type": "function"
 },
 "caffe2.python.pipeline.NetProcessor.__init__": {
  "lineno": 404,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.pipeline.NetProcessor.blob_maps": {
  "lineno": 449,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.pipeline.NetProcessor.schema": {
  "lineno": 416,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.pipeline.NetProcessor.setup": {
  "lineno": 419,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.pipeline.Output": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.pipeline.Output.__init__": {
  "lineno": 21,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.net_builder.NetBuilder.current",
   "caffe2.python.schema.as_record"
  ],
  "type": "function"
 },
 "caffe2.python.pipeline.ProcessingReader": {
  "lineno": 353,
  "symbols_in_volume": [
   "caffe2.python.dataio.Reader"
  ],
  "type": "class"
 },
 "caffe2.python.pipeline.ProcessingReader.__init__": {
  "lineno": 358,
  "symbols_in_volume": [
   "caffe2.python.dataio.Reader.__init__"
  ],
  "type": "function"
 },
 "caffe2.python.pipeline.ProcessingReader.read_ex": {
  "lineno": 369,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.net_builder.NetBuilder",
   "caffe2.python.task.TaskGroup.LOCAL_SETUP"
  ],
  "type": "function"
 },
 "caffe2.python.pipeline.ProcessingReader.schema": {
  "lineno": 363,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.pipeline.ProcessingReader.setup_ex": {
  "lineno": 366,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.pipeline._init_output": {
  "lineno": 37,
  "symbols_in_volume": [
   "caffe2.python.dataio.Writer",
   "caffe2.python.queue_util.Queue"
  ],
  "type": "function"
 },
 "caffe2.python.pipeline._pipe_step": {
  "lineno": 314,
  "symbols_in_volume": [
   "caffe2.python.dataio.Reader"
  ],
  "type": "function"
 },
 "caffe2.python.pipeline._runtime_threads_task": {
  "lineno": 189,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.BOOL",
   "caffe2.python.core.Net",
   "caffe2.python.core.execution_step",
   "caffe2.python.net_builder.ops.net",
   "caffe2.python.net_builder.ops.task_exit",
   "caffe2.python.net_builder.ops.task_init",
   "caffe2.python.net_builder.ops.task_instance_exit",
   "caffe2.python.net_builder.ops.task_instance_init",
   "caffe2.python.task.Node.current",
   "caffe2.python.task.Task"
  ],
  "type": "function"
 },
 "caffe2.python.pipeline._static_threads_task": {
  "lineno": 249,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.BOOL",
   "caffe2.python.core.Net",
   "caffe2.python.core.execution_step",
   "caffe2.python.core.to_execution_step",
   "caffe2.python.net_builder.NetBuilder",
   "caffe2.python.net_builder.ops.net",
   "caffe2.python.task.Node.current",
   "caffe2.python.task.Task"
  ],
  "type": "function"
 },
 "caffe2.python.pipeline.make_processor": {
  "lineno": 58,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.pipeline.make_processor.processor_schema": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.pipeline.normalize_processor_output": {
  "lineno": 72,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "caffe2.python.schema.Field"
  ],
  "type": "function"
 },
 "caffe2.python.pipeline.pipe": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.pipeline.pipe_and_output": {
  "lineno": 152,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.pipeline.processor_name": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.pipeline_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.pipeline_test.TestPipeline": {
  "lineno": 20,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.pipeline_test.TestPipeline.test_dequeue_many": {
  "lineno": 21,
  "symbols_in_volume": [
   "caffe2.python.core.NameScope",
   "caffe2.python.core.Net",
   "caffe2.python.dataset.Dataset",
   "caffe2.python.pipeline.pipe",
   "caffe2.python.queue_util.Queue",
   "caffe2.python.schema.FeedRecord",
   "caffe2.python.schema.FetchRecord",
   "caffe2.python.schema.InitEmptyRecord",
   "caffe2.python.schema.NewRecord",
   "caffe2.python.schema.Struct",
   "caffe2.python.session.LocalSession",
   "caffe2.python.task.TaskGroup",
   "caffe2.python.workspace.C.Workspace",
   "math.ceil",
   "numpy.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.pipeline_test.TestPipeline.test_dequeue_many.proc1": {
  "lineno": 38,
  "symbols_in_volume": [
   "caffe2.python.core.NameScope",
   "caffe2.python.net_builder.ops",
   "caffe2.python.net_builder.ops.Add",
   "caffe2.python.schema.NewRecord"
  ],
  "type": "function"
 },
 "caffe2.python.pipeline_test.TestPipeline.test_dequeue_many.proc2": {
  "lineno": 45,
  "symbols_in_volume": [
   "caffe2.python.core.NameScope",
   "caffe2.python.net_builder.ops",
   "caffe2.python.net_builder.ops.Add",
   "caffe2.python.net_builder.ops.Sub",
   "caffe2.python.schema.NewRecord"
  ],
  "type": "function"
 },
 "caffe2.python.predictor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.predictor.mobile_exporter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.predictor.mobile_exporter.Export": {
  "lineno": 51,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.get_ssa",
   "caffe2.python.utils.MakeArgument"
  ],
  "type": "function"
 },
 "caffe2.python.predictor.mobile_exporter.add_tensor": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.utils.MakeArgument",
   "numpy.dtype"
  ],
  "type": "function"
 },
 "caffe2.python.predictor.mobile_exporter_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.predictor.mobile_exporter_test.TestMobileExporter": {
  "lineno": 12,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.predictor.mobile_exporter_test.TestMobileExporter.test_mobile_exporter": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.brew.conv",
   "caffe2.python.brew.fc",
   "caffe2.python.brew.max_pool",
   "caffe2.python.brew.relu",
   "caffe2.python.brew.softmax",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.predictor.mobile_exporter.Export",
   "caffe2.python.workspace",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.Predictor",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNet",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.predictor.mobile_exporter_test.TestMobileExporter.test_mobile_exporter_datatypes": {
  "lineno": 72,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.predictor.mobile_exporter.Export",
   "caffe2.python.workspace",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.Predictor",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNet",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.array",
   "numpy.dtype",
   "numpy.int32",
   "numpy.random.randint",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.predictor.predictor_exporter.PredictorExportMeta": {
  "lineno": 36,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "class"
 },
 "caffe2.python.predictor.predictor_exporter.PredictorExportMeta.__new__": {
  "lineno": 63,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.proto.caffe2_pb2.PlanDef",
   "caffe2.python.core.Net",
   "caffe2.python.core.Plan"
  ],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter.PredictorExportMeta.global_init_name": {
  "lineno": 110,
  "symbols_in_volume": [
   "caffe2.python.predictor.predictor_py_utils.get_comp_name",
   "caffe2.python.predictor_constants.predictor_constants.GLOBAL_INIT_NET_TYPE"
  ],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter.PredictorExportMeta.inputs_name": {
  "lineno": 98,
  "symbols_in_volume": [
   "caffe2.python.predictor.predictor_py_utils.get_comp_name",
   "caffe2.python.predictor_constants.predictor_constants.INPUTS_BLOB_TYPE"
  ],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter.PredictorExportMeta.outputs_name": {
  "lineno": 102,
  "symbols_in_volume": [
   "caffe2.python.predictor.predictor_py_utils.get_comp_name",
   "caffe2.python.predictor_constants.predictor_constants.OUTPUTS_BLOB_TYPE"
  ],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter.PredictorExportMeta.parameters_name": {
  "lineno": 106,
  "symbols_in_volume": [
   "caffe2.python.predictor.predictor_py_utils.get_comp_name",
   "caffe2.python.predictor_constants.predictor_constants.PARAMETERS_BLOB_TYPE"
  ],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter.PredictorExportMeta.predict_init_name": {
  "lineno": 114,
  "symbols_in_volume": [
   "caffe2.python.predictor.predictor_py_utils.get_comp_name",
   "caffe2.python.predictor_constants.predictor_constants.PREDICT_INIT_NET_TYPE"
  ],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter.PredictorExportMeta.predict_net_name": {
  "lineno": 118,
  "symbols_in_volume": [
   "caffe2.python.predictor.predictor_py_utils.get_comp_name",
   "caffe2.python.predictor_constants.predictor_constants.PREDICT_NET_TYPE"
  ],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter.PredictorExportMeta.train_init_plan_name": {
  "lineno": 122,
  "symbols_in_volume": [
   "caffe2.python.predictor.predictor_py_utils.get_comp_name",
   "caffe2.python.predictor_constants.predictor_constants.TRAIN_INIT_PLAN_TYPE"
  ],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter.PredictorExportMeta.train_plan_name": {
  "lineno": 128,
  "symbols_in_volume": [
   "caffe2.python.predictor.predictor_py_utils.get_comp_name",
   "caffe2.python.predictor_constants.predictor_constants.TRAIN_PLAN_TYPE"
  ],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter._global_init_net": {
  "lineno": 157,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.predictor.predictor_py_utils.AddModelIdArg",
   "caffe2.python.predictor_constants.predictor_constants.PREDICTOR_DBREADER"
  ],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter.get_meta_net_def": {
  "lineno": 175,
  "symbols_in_volume": [
   "caffe2.proto.metanet_pb2.MetaNetDef",
   "caffe2.python.predictor.predictor_py_utils.AddBlobs",
   "caffe2.python.predictor.predictor_py_utils.AddNet",
   "caffe2.python.predictor.predictor_py_utils.create_predict_init_net",
   "caffe2.python.predictor.predictor_py_utils.create_predict_net",
   "caffe2.python.workspace.C.Workspace.current"
  ],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter.get_predictor_exporter_helper": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter.load_from_db": {
  "lineno": 230,
  "symbols_in_volume": [
   "builtins.bytes",
   "caffe2.proto.metanet_pb2.MetaNetDef",
   "caffe2.python.core.BlobReference",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.predictor.serde.deserialize_protobuf_struct",
   "caffe2.python.predictor_constants.predictor_constants.META_NET_DEF",
   "caffe2.python.predictor_constants.predictor_constants.PREDICTOR_DBREADER",
   "caffe2.python.scope.CurrentDeviceScope",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce"
  ],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter.prepare_prediction_net": {
  "lineno": 135,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.predictor.predictor_py_utils.GetNet",
   "caffe2.python.predictor_constants.predictor_constants.GLOBAL_INIT_NET_TYPE",
   "caffe2.python.predictor_constants.predictor_constants.PREDICT_INIT_NET_TYPE",
   "caffe2.python.predictor_constants.predictor_constants.PREDICT_NET_TYPE",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.RunNetOnce"
  ],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter.save_to_db": {
  "lineno": 205,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.proto.caffe2_pb2.IDEEP",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.predictor.serde.serialize_protobuf_struct",
   "caffe2.python.predictor_constants.predictor_constants.META_NET_DEF",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.RunOperatorOnce"
  ],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter.set_model_info": {
  "lineno": 198,
  "symbols_in_volume": [
   "caffe2.proto.metanet_pb2.MetaNetDef"
  ],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.predictor.predictor_exporter_test.MetaNetDefTest": {
  "lineno": 18,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.predictor.predictor_exporter_test.MetaNetDefTest.test_adding_net": {
  "lineno": 26,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.proto.metanet_pb2.MetaNetDef"
  ],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter_test.MetaNetDefTest.test_minimal": {
  "lineno": 19,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.proto.metanet_pb2.NetsMap"
  ],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter_test.MetaNetDefTest.test_replace_blobs": {
  "lineno": 34,
  "symbols_in_volume": [
   "caffe2.proto.metanet_pb2.MetaNetDef",
   "caffe2.python.predictor.predictor_py_utils.AddBlobs",
   "caffe2.python.predictor.predictor_py_utils.GetBlobs",
   "caffe2.python.predictor.predictor_py_utils.ReplaceBlobs"
  ],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter_test.PredictorExporterTest": {
  "lineno": 52,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.predictor.predictor_exporter_test.PredictorExporterTest._create_model": {
  "lineno": 53,
  "symbols_in_volume": [
   "caffe2.python.cnn.CNNModelHelper"
  ],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter_test.PredictorExporterTest.setUp": {
  "lineno": 61,
  "symbols_in_volume": [
   "caffe2.python.predictor.predictor_exporter.PredictorExportMeta",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter_test.PredictorExporterTest.test_db_fails_without_params": {
  "lineno": 233,
  "symbols_in_volume": [
   "caffe2.python.predictor.predictor_exporter.save_to_db",
   "tempfile.NamedTemporaryFile"
  ],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter_test.PredictorExporterTest.test_load_device_scope": {
  "lineno": 195,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.core.Net",
   "caffe2.python.predictor.predictor_exporter.PredictorExportMeta",
   "caffe2.python.predictor.predictor_exporter.load_from_db",
   "caffe2.python.predictor.predictor_exporter.save_to_db",
   "caffe2.python.predictor.predictor_py_utils.GetNet",
   "caffe2.python.predictor_constants.predictor_constants.GLOBAL_INIT_NET_TYPE",
   "caffe2.python.predictor_constants.predictor_constants.PREDICT_INIT_NET_TYPE",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "tempfile.NamedTemporaryFile"
  ],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter_test.PredictorExporterTest.test_meta_constructor": {
  "lineno": 80,
  "symbols_in_volume": [
   "caffe2.python.predictor.predictor_exporter.PredictorExportMeta"
  ],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter_test.PredictorExporterTest.test_meta_net_def_net_runs": {
  "lineno": 115,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.FLOAT",
   "caffe2.python.core.Net",
   "caffe2.python.predictor.predictor_exporter.PredictorExportMeta",
   "caffe2.python.predictor.predictor_exporter.load_from_db",
   "caffe2.python.predictor.predictor_exporter.save_to_db",
   "caffe2.python.predictor.predictor_py_utils.GetNet",
   "caffe2.python.predictor_constants.predictor_constants.GLOBAL_INIT_NET_TYPE",
   "caffe2.python.predictor_constants.predictor_constants.PREDICT_INIT_NET_TYPE",
   "caffe2.python.predictor_constants.predictor_constants.PREDICT_NET_TYPE",
   "caffe2.python.workspace.Blobs",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.HasBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNetOnce",
   "future.utils.viewitems",
   "numpy.float32",
   "numpy.ones",
   "numpy.random.randn",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_array_equal",
   "numpy.zeros",
   "tempfile.NamedTemporaryFile"
  ],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter_test.PredictorExporterTest.test_param_intersection": {
  "lineno": 93,
  "symbols_in_volume": [
   "caffe2.python.predictor.predictor_exporter.PredictorExportMeta"
  ],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_py_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.predictor.predictor_py_utils.AddBlobs": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_py_utils.AddModelIdArg": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_py_utils.AddNet": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_py_utils.AddPlan": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_py_utils.GetApplicationSpecificInfo": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_py_utils.GetArgumentByName": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_py_utils.GetBlobs": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_py_utils.GetBlobsByTypePrefix": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_py_utils.GetBlobsOrder": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_py_utils.GetNet": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_py_utils.GetNetOriginal": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_py_utils.GetPlan": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_py_utils.GetPlanOriginal": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_py_utils.ReplaceBlobs": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_py_utils.SetAOTConfig": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_py_utils.SetBlobsOrder": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_py_utils.SetPreLoadBlobs": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_py_utils.SetRequestOnlyEmbeddings": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_py_utils.SetTensorBoundShapes": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_py_utils._ProtoMapGet": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_py_utils.create_predict_init_net": {
  "lineno": 30,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_py_utils.create_predict_init_net.zero_fill": {
  "lineno": 38,
  "symbols_in_volume": [
   "caffe2.python.scope.EmptyDeviceScope"
  ],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_py_utils.create_predict_net": {
  "lineno": 11,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_py_utils.get_comp_name": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.predictor.predictor_test.TestPredictor": {
  "lineno": 13,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.predictor.predictor_test.TestPredictor._init_net": {
  "lineno": 34,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.python.core.CreateOperator",
   "numpy.float32",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_test.TestPredictor._predict_net": {
  "lineno": 19,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.python.core.CreateOperator"
  ],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_test.TestPredictor.setUp": {
  "lineno": 14,
  "symbols_in_volume": [
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_test.TestPredictor.test_run": {
  "lineno": 57,
  "symbols_in_volume": [
   "caffe2.python.workspace.Predictor",
   "numpy.dot",
   "numpy.float32",
   "numpy.ones",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "caffe2.python.predictor.predictor_test.TestPredictor.test_run_map": {
  "lineno": 65,
  "symbols_in_volume": [
   "caffe2.python.workspace.Predictor",
   "numpy.dot",
   "numpy.float32",
   "numpy.ones",
   "numpy.testing.assert_almost_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.predictor.serde": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.predictor.serde.deserialize_protobuf_struct": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.predictor.serde.serialize_protobuf_struct": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.predictor_constants": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.proto.predictor_consts_pb2.PredictorConsts"
  ],
  "type": "module"
 },
 "caffe2.python.python_op_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.python_op_test.CustomError": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.python_op_test.MainOpFunctionThatThrowsCustomError": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.python_op_test.MainOpFunctionThatThrowsCustomErrorInBuilder": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest": {
  "lineno": 44,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_builder_tuple": {
  "lineno": 78,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.RunNet",
   "numpy.array"
  ],
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_caught_exception_doesnt_terminate": {
  "lineno": 136,
  "symbols_in_volume": [
   "caffe2.python.core.CreatePythonOperator",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "hypothesis.given"
  ],
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_caught_exception_doesnt_terminate.f": {
  "lineno": 138,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_exception": {
  "lineno": 56,
  "symbols_in_volume": [
   "caffe2.python.core.CreatePythonOperator",
   "caffe2.python.workspace.RunOperatorOnce",
   "six.assertRaisesRegex"
  ],
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_exception_builder": {
  "lineno": 61,
  "symbols_in_volume": [
   "caffe2.python.core.CreatePythonOperator",
   "caffe2.python.workspace.RunOperatorOnce",
   "six.assertRaisesRegex"
  ],
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_feed": {
  "lineno": 45,
  "symbols_in_volume": [
   "caffe2.python.core.CreatePythonOperator",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "hypothesis.given"
  ],
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_feed.f": {
  "lineno": 47,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_feed_with_gc": {
  "lineno": 95,
  "symbols_in_volume": [
   "caffe2.python.core.CreatePythonOperator",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "hypothesis.given"
  ],
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_feed_with_gc.f": {
  "lineno": 97,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_feed_with_helper_function": {
  "lineno": 66,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given"
  ],
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_feed_with_helper_function.f": {
  "lineno": 68,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_gradient": {
  "lineno": 170,
  "symbols_in_volume": [
   "caffe2.python.core.CreatePythonOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensor",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans"
  ],
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_gradient.f": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_gradient.grad_f": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_gradient_multiple": {
  "lineno": 190,
  "symbols_in_volume": [
   "caffe2.python.core.CreatePythonOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensors",
   "hypothesis.given",
   "hypothesis.settings"
  ],
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_gradient_multiple.f": {
  "lineno": 195,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_gradient_multiple.grad_f": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_gradient_multiple_with_indices": {
  "lineno": 217,
  "symbols_in_volume": [
   "caffe2.python.core.CreatePythonOperator",
   "caffe2.python.hypothesis_test_util.gcs",
   "caffe2.python.hypothesis_test_util.tensors",
   "hypothesis.given",
   "hypothesis.settings"
  ],
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_gradient_multiple_with_indices.f": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_gradient_multiple_with_indices.grad_f": {
  "lineno": 228,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_multithreaded_evaluation": {
  "lineno": 148,
  "symbols_in_volume": [
   "caffe2.python.core.CreatePythonOperator",
   "caffe2.python.core.ExecutionStep",
   "caffe2.python.core.Net",
   "caffe2.python.core.Plan",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunPlan",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_multithreaded_evaluation.f": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_reshape": {
  "lineno": 107,
  "symbols_in_volume": [
   "caffe2.python.core.CreatePythonOperator",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "hypothesis.given",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_reshape.f": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_workspace_manipulation": {
  "lineno": 121,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.workspace.C.Workspace",
   "hypothesis.given"
  ],
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_workspace_manipulation.f": {
  "lineno": 126,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "caffe2.python.python_op_test.SubFunctionThatThrowsCustomError": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.python_op_test.op_builder": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.python_op_test.op_builder.my_op": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.queue_util": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "caffe2.python.queue_util.Queue": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.queue_util.Queue.__init__": {
  "lineno": 76,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.queue_util.Queue.setup": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.queue_util.QueueWrapper": {
  "lineno": 58,
  "symbols_in_volume": [
   "caffe2.python.dataio.Pipe"
  ],
  "type": "class"
 },
 "caffe2.python.queue_util.QueueWrapper.__init__": {
  "lineno": 59,
  "symbols_in_volume": [
   "caffe2.python.dataio.Pipe.__init__",
   "caffe2.python.task.TaskGroup.LOCAL_SETUP"
  ],
  "type": "function"
 },
 "caffe2.python.queue_util.QueueWrapper.queue": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.queue_util.QueueWrapper.reader": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.queue_util.QueueWrapper.writer": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.queue_util._QueueReader": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.dataio.Reader"
  ],
  "type": "class"
 },
 "caffe2.python.queue_util._QueueReader.__init__": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.dataio.Reader.__init__"
  ],
  "type": "function"
 },
 "caffe2.python.queue_util._QueueReader.read": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.queue_util._QueueReader.read_ex": {
  "lineno": 28,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.queue_util._QueueReader.setup_ex": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.queue_util._QueueWriter": {
  "lineno": 44,
  "symbols_in_volume": [
   "caffe2.python.dataio.Writer"
  ],
  "type": "class"
 },
 "caffe2.python.queue_util._QueueWriter.__init__": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.queue_util._QueueWriter.setup_ex": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.queue_util._QueueWriter.write_ex": {
  "lineno": 51,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.queue_util.close_queue": {
  "lineno": 129,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.core.execution_step"
  ],
  "type": "function"
 },
 "caffe2.python.queue_util.dequeue": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.queue_util.enqueue": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.record_queue": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.record_queue.RecordQueue": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.record_queue.RecordQueue.__init__": {
  "lineno": 52,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.core.execution_step",
   "caffe2.python.core.workspace.RunNetOnce",
   "caffe2.python.schema.Struct",
   "caffe2.python.schema.from_column_list"
  ],
  "type": "function"
 },
 "caffe2.python.record_queue.RecordQueue.build": {
  "lineno": 80,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.core.execution_step"
  ],
  "type": "function"
 },
 "caffe2.python.record_queue._QueueReader": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.dataio.Reader"
  ],
  "type": "class"
 },
 "caffe2.python.record_queue._QueueReader.__init__": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.record_queue._QueueReader.read": {
  "lineno": 24,
  "symbols_in_volume": [
   "caffe2.python.core.NameScope"
  ],
  "type": "function"
 },
 "caffe2.python.record_queue._QueueWriter": {
  "lineno": 32,
  "symbols_in_volume": [
   "caffe2.python.dataio.Writer"
  ],
  "type": "class"
 },
 "caffe2.python.record_queue._QueueWriter.__init__": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.record_queue._QueueWriter.write": {
  "lineno": 37,
  "symbols_in_volume": [
   "caffe2.python.schema.Field"
  ],
  "type": "function"
 },
 "caffe2.python.recurrent": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.recurrent.recurrent_net": {
  "lineno": 11,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "caffe2.python.core.GradientRegistry.GetBackwardPass",
   "caffe2.python.core.Net",
   "caffe2.python.core.get_ssa",
   "caffe2.python.core.get_undefined_blobs",
   "future.utils.viewitems",
   "future.utils.viewkeys"
  ],
  "type": "function"
 },
 "caffe2.python.recurrent.recurrent_net.map_to_dual_list": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.recurrent.recurrent_net.s": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.recurrent.recurrent_net.unpack_triple": {
  "lineno": 189,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.recurrent.retrieve_step_blobs": {
  "lineno": 305,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce"
  ],
  "type": "function"
 },
 "caffe2.python.recurrent.set_rnn_executor_config": {
  "lineno": 289,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.recurrent.set_rnn_executor_config.add_arg": {
  "lineno": 293,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.Argument"
  ],
  "type": "function"
 },
 "caffe2.python.regularizer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.regularizer.BoundedGradientProjection": {
  "lineno": 397,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.regularizer.BoundedGradientProjection.__init__": {
  "lineno": 403,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.regularizer.BoundedGradientProjection._run_after_optimizer": {
  "lineno": 436,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.regularizer.ConstantNorm": {
  "lineno": 301,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.regularizer.ConstantNorm.__init__": {
  "lineno": 302,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.regularizer.ConstantNorm._run_after_optimizer": {
  "lineno": 306,
  "symbols_in_volume": [
   "caffe2.python.core.GradientSlice"
  ],
  "type": "function"
 },
 "caffe2.python.regularizer.ElasticNet": {
  "lineno": 240,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.regularizer.ElasticNet.__init__": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.regularizer.ElasticNet._run_on_loss": {
  "lineno": 246,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.regularizer.ElasticNetL1NormTrimmed": {
  "lineno": 258,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.regularizer.ElasticNetL1NormTrimmed.__init__": {
  "lineno": 259,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.regularizer.ElasticNetL1NormTrimmed._run_on_loss": {
  "lineno": 265,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.regularizer.GroupL1Norm": {
  "lineno": 448,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.regularizer.GroupL1Norm.__init__": {
  "lineno": 459,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.regularizer.GroupL1Norm._run_on_loss": {
  "lineno": 485,
  "symbols_in_volume": [
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "caffe2.python.regularizer.L0ApproxNorm": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.regularizer.L0ApproxNorm.__init__": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.regularizer.L0ApproxNorm._run_on_loss": {
  "lineno": 169,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.regularizer.L1Norm": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.regularizer.L1Norm.__init__": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.regularizer.L1Norm._run_on_loss": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.regularizer.L1NormTrimmed": {
  "lineno": 202,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.regularizer.L1NormTrimmed.__init__": {
  "lineno": 206,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.regularizer.L1NormTrimmed._run_on_loss": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.regularizer.L2Norm": {
  "lineno": 226,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.regularizer.L2Norm.__init__": {
  "lineno": 227,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.regularizer.L2Norm._run_on_loss": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.regularizer.LogBarrier": {
  "lineno": 351,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.regularizer.LogBarrier.__init__": {
  "lineno": 357,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.regularizer.LogBarrier._run_after_optimizer": {
  "lineno": 393,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.regularizer.LogBarrier._run_on_loss": {
  "lineno": 369,
  "symbols_in_volume": [
   "caffe2.python.utils.BuildUniqueMutexIter"
  ],
  "type": "function"
 },
 "caffe2.python.regularizer.LpNorm": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.regularizer.LpNorm.__init__": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.regularizer.LpNorm._run_on_loss": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.regularizer.MaxNorm": {
  "lineno": 283,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.regularizer.MaxNorm.__init__": {
  "lineno": 284,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.regularizer.MaxNorm._run_after_optimizer": {
  "lineno": 288,
  "symbols_in_volume": [
   "caffe2.python.core.GradientSlice"
  ],
  "type": "function"
 },
 "caffe2.python.regularizer.RegularizationBy": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.regularizer.Regularizer": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.regularizer.Regularizer.__call__": {
  "lineno": 24,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "caffe2.python.utils.EnumClassKeyVals"
  ],
  "type": "function"
 },
 "caffe2.python.regularizer.Regularizer.__init__": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.regularizer.Regularizer._ensure_clipped": {
  "lineno": 61,
  "symbols_in_volume": [
   "caffe2.python.core.GradientSlice"
  ],
  "type": "function"
 },
 "caffe2.python.regularizer.Regularizer._feature_grouping": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.regularizer.Regularizer._run_after_optimizer": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.regularizer.Regularizer._run_on_loss": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.regularizer.SparseL1Norm": {
  "lineno": 341,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.regularizer.SparseL1Norm.__init__": {
  "lineno": 342,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.regularizer.SparseL2Norm": {
  "lineno": 346,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.regularizer.SparseL2Norm.__init__": {
  "lineno": 347,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.regularizer.SparseLpNorm": {
  "lineno": 321,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.regularizer.SparseLpNorm.__init__": {
  "lineno": 322,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.regularizer.SparseLpNorm._run_after_optimizer": {
  "lineno": 329,
  "symbols_in_volume": [
   "caffe2.python.core.GradientSlice"
  ],
  "type": "function"
 },
 "caffe2.python.regularizer_context": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.regularizer_context.RegularizerContext": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.context.define_context",
   "caffe2.python.modifier_context.ModifierContext"
  ],
  "type": "class"
 },
 "caffe2.python.regularizer_context.RegularizerContext.get_regularizer": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.regularizer_context.RegularizerContext.has_regularizer": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.regularizer_context.UseRegularizer": {
  "lineno": 28,
  "symbols_in_volume": [
   "caffe2.python.modifier_context.UseModifierBase"
  ],
  "type": "class"
 },
 "caffe2.python.regularizer_context.UseRegularizer._context_class": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.regularizer_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.regularizer_test.TestRegularizer": {
  "lineno": 56,
  "symbols_in_volume": [
   "caffe2.python.layer_test_util.LayersTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.regularizer_test.TestRegularizer.test_bounded_grad_proj": {
  "lineno": 85,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "caffe2.python.hypothesis_test_util.arrays",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.regularizer.BoundedGradientProjection",
   "caffe2.python.regularizer.RegularizationBy.AFTER_OPTIMIZER",
   "caffe2.python.regularizer.RegularizationBy.ON_LOSS",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.python.workspace.blobs",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.regularizer_test.TestRegularizer.test_bounded_grad_proj.ref": {
  "lineno": 114,
  "symbols_in_volume": [
   "numpy.clip"
  ],
  "type": "function"
 },
 "caffe2.python.regularizer_test.TestRegularizer.test_elastic_l1_norm_trimmed": {
  "lineno": 190,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "caffe2.python.regularizer.ElasticNetL1NormTrimmed",
   "caffe2.python.regularizer.RegularizationBy.ON_LOSS",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.python.workspace.blobs",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.absolute",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.sort",
   "numpy.square",
   "numpy.sum",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "caffe2.python.regularizer_test.TestRegularizer.test_group_l1_norm": {
  "lineno": 122,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "caffe2.python.regularizer.GroupL1Norm",
   "caffe2.python.regularizer.RegularizationBy.ON_LOSS",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.append",
   "numpy.diff",
   "numpy.float32",
   "numpy.random.choice",
   "numpy.random.rand",
   "numpy.random.randint",
   "numpy.sort"
  ],
  "type": "function"
 },
 "caffe2.python.regularizer_test.TestRegularizer.test_group_l1_norm.compare_reference": {
  "lineno": 135,
  "symbols_in_volume": [
   "caffe2.python.workspace.blobs",
   "numpy.array",
   "numpy.hsplit",
   "numpy.multiply",
   "numpy.sqrt",
   "numpy.square",
   "numpy.sum",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "caffe2.python.regularizer_test.TestRegularizer.test_l1_norm_trimmed": {
  "lineno": 169,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "caffe2.python.regularizer.L1NormTrimmed",
   "caffe2.python.regularizer.RegularizationBy.ON_LOSS",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.python.workspace.blobs",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.absolute",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.sort",
   "numpy.sum",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "caffe2.python.regularizer_test.TestRegularizer.test_log_barrier": {
  "lineno": 57,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "caffe2.python.hypothesis_test_util.arrays",
   "caffe2.python.hypothesis_test_util.floats",
   "caffe2.python.regularizer.LogBarrier",
   "caffe2.python.regularizer.RegularizationBy.AFTER_OPTIMIZER",
   "caffe2.python.regularizer.RegularizationBy.ON_LOSS",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlobs",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.regularizer_test.TestRegularizer.test_log_barrier.ref": {
  "lineno": 74,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.clip",
   "numpy.float32",
   "numpy.log",
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.python.regularizer_test.TestRegularizerContext": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.layer_test_util.LayersTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.regularizer_test.TestRegularizerContext.test_regularizer_context": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.arrays",
   "caffe2.python.layer_model_instantiator.generate_training_nets",
   "caffe2.python.optimizer.SgdOptimizer",
   "caffe2.python.regularizer.L1Norm",
   "caffe2.python.regularizer_context.RegularizerContext.current",
   "caffe2.python.regularizer_context.UseRegularizer",
   "caffe2.python.schema.FeedRecord",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "hypothesis.given",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.rnn": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.rnn.lstm_comparison": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.lstm_benchmark.GetArgumentParser",
   "caffe2.python.workspace.GlobalInit"
  ],
  "type": "module"
 },
 "caffe2.python.rnn.lstm_comparison.Compare": {
  "lineno": 9,
  "symbols_in_volume": [
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.lstm_benchmark.Benchmark",
   "caffe2.python.utils.debug",
   "caffe2.python.workspace.GpuDeviceType",
   "caffe2.python.workspace.ResetWorkspace",
   "copy.copy"
  ],
  "type": "function"
 },
 "caffe2.python.rnn.rnn_cell_test_util": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.rnn.rnn_cell_test_util._prepare_rnn": {
  "lineno": 20,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.scope.NameScope",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.rnn.rnn_cell_test_util._prepare_rnn.generate_input_state": {
  "lineno": 37,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "caffe2.python.rnn.rnn_cell_test_util.sigmoid": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "caffe2.python.rnn.rnn_cell_test_util.tanh": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.rnn_cell": {
  "lineno": null,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "module"
 },
 "caffe2.python.rnn_cell.AttentionCell": {
  "lineno": 1109,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.rnn_cell.AttentionCell.__init__": {
  "lineno": 1111,
  "symbols_in_volume": [
   "caffe2.python.attention.AttentionType.Dot",
   "caffe2.python.attention.AttentionType.Recurrent",
   "caffe2.python.attention.AttentionType.Regular",
   "caffe2.python.attention.AttentionType.SoftCoverage"
  ],
  "type": "function"
 },
 "caffe2.python.rnn_cell.AttentionCell._apply": {
  "lineno": 1140,
  "symbols_in_volume": [
   "caffe2.python.attention.AttentionType.Dot",
   "caffe2.python.attention.AttentionType.Recurrent",
   "caffe2.python.attention.AttentionType.Regular",
   "caffe2.python.attention.AttentionType.SoftCoverage",
   "caffe2.python.attention.apply_dot_attention",
   "caffe2.python.attention.apply_recurrent_attention",
   "caffe2.python.attention.apply_regular_attention",
   "caffe2.python.attention.apply_soft_coverage_attention"
  ],
  "type": "function"
 },
 "caffe2.python.rnn_cell.AttentionCell._prepare_output": {
  "lineno": 1349,
  "symbols_in_volume": [
   "caffe2.python.attention.AttentionType.SoftCoverage",
   "caffe2.python.brew.concat",
   "caffe2.python.core.NameScope"
  ],
  "type": "function"
 },
 "caffe2.python.rnn_cell.AttentionCell._prepare_output_sequence": {
  "lineno": 1365,
  "symbols_in_volume": [
   "caffe2.python.attention.AttentionType.SoftCoverage",
   "caffe2.python.brew.concat",
   "caffe2.python.core.NameScope"
  ],
  "type": "function"
 },
 "caffe2.python.rnn_cell.AttentionCell.build_initial_coverage": {
  "lineno": 1288,
  "symbols_in_volume": [
   "caffe2.python.attention.AttentionType.SoftCoverage",
   "caffe2.python.brew.fc",
   "caffe2.python.core.IsGPUDeviceType",
   "caffe2.python.scope.CurrentDeviceScope"
  ],
  "type": "function"
 },
 "caffe2.python.rnn_cell.AttentionCell.get_attention_weights": {
  "lineno": 1261,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.rnn_cell.AttentionCell.get_output_dim": {
  "lineno": 1343,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.rnn_cell.AttentionCell.get_output_state_index": {
  "lineno": 1346,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.rnn_cell.AttentionCell.get_state_names": {
  "lineno": 1333,
  "symbols_in_volume": [
   "caffe2.python.attention.AttentionType.SoftCoverage"
  ],
  "type": "function"
 },
 "caffe2.python.rnn_cell.AttentionCell.prepare_input": {
  "lineno": 1265,
  "symbols_in_volume": [
   "caffe2.python.attention.AttentionType.Dot",
   "caffe2.python.brew.fc",
   "caffe2.python.brew.transpose"
  ],
  "type": "function"
 },
 "caffe2.python.rnn_cell.BasicRNNCell": {
  "lineno": 296,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.rnn_cell.BasicRNNCell.__init__": {
  "lineno": 297,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.rnn_cell.BasicRNNCell.apply_override": {
  "lineno": 319,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.brew.sum"
  ],
  "type": "function"
 },
 "caffe2.python.rnn_cell.BasicRNNCell.get_output_dim": {
  "lineno": 393,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.rnn_cell.BasicRNNCell.get_state_names": {
  "lineno": 390,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.rnn_cell.BasicRNNCell.prepare_input": {
  "lineno": 380,
  "symbols_in_volume": [
   "caffe2.python.brew.fc"
  ],
  "type": "function"
 },
 "caffe2.python.rnn_cell.DropoutCell": {
  "lineno": 816,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.rnn_cell.DropoutCell.__init__": {
  "lineno": 822,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.rnn_cell.DropoutCell._apply": {
  "lineno": 843,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.rnn_cell.DropoutCell._apply_dropout": {
  "lineno": 879,
  "symbols_in_volume": [
   "caffe2.python.brew.dropout",
   "caffe2.python.core.NameScope"
  ],
  "type": "function"
 },
 "caffe2.python.rnn_cell.DropoutCell._prepare_output": {
  "lineno": 861,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.rnn_cell.DropoutCell._prepare_output_sequence": {
  "lineno": 870,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.rnn_cell.GetLSTMParamNames": {
  "lineno": 1670,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.rnn_cell.InitFromLSTMParams": {
  "lineno": 1676,
  "symbols_in_volume": [
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "future.utils.viewkeys",
   "numpy.append",
   "numpy.array",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.rnn_cell.LSTMCell": {
  "lineno": 397,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.rnn_cell.LSTMCell.__init__": {
  "lineno": 399,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.rnn_cell.LSTMCell.apply_override": {
  "lineno": 420,
  "symbols_in_volume": [
   "caffe2.python.brew.concat",
   "caffe2.python.brew.fc",
   "caffe2.python.brew.sum"
  ],
  "type": "function"
 },
 "caffe2.python.rnn_cell.LSTMCell.get_input_params": {
  "lineno": 472,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.rnn_cell.LSTMCell.get_output_dim": {
  "lineno": 497,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.rnn_cell.LSTMCell.get_recurrent_params": {
  "lineno": 478,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.rnn_cell.LSTMCell.get_state_names_override": {
  "lineno": 494,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.rnn_cell.LSTMCell.prepare_input": {
  "lineno": 484,
  "symbols_in_volume": [
   "caffe2.python.brew.fc"
  ],
  "type": "function"
 },
 "caffe2.python.rnn_cell.LSTMInitializer": {
  "lineno": 274,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.rnn_cell.LSTMInitializer.__init__": {
  "lineno": 275,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.rnn_cell.LSTMInitializer.create_states": {
  "lineno": 278,
  "symbols_in_volume": [
   "caffe2.python.modeling.initializers.Initializer"
  ],
  "type": "function"
 },
 "caffe2.python.rnn_cell.LSTMWithAttention": {
  "lineno": 1845,
  "symbols_in_volume": [
   "caffe2.python.attention.AttentionType.Regular",
   "caffe2.python.attention.AttentionType.SoftCoverage",
   "caffe2.python.scope"
  ],
  "type": "function"
 },
 "caffe2.python.rnn_cell.LSTMWithAttentionCell": {
  "lineno": 1394,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.rnn_cell.LSTMWithAttentionCell.__init__": {
  "lineno": 1396,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.rnn_cell.LayerNormLSTMCell": {
  "lineno": 501,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.rnn_cell.LayerNormLSTMCell.__init__": {
  "lineno": 503,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.rnn_cell.LayerNormLSTMCell._apply": {
  "lineno": 527,
  "symbols_in_volume": [
   "caffe2.python.brew.concat",
   "caffe2.python.brew.fc",
   "caffe2.python.brew.layer_norm",
   "caffe2.python.brew.sum"
  ],
  "type": "function"
 },
 "caffe2.python.rnn_cell.LayerNormLSTMCell.get_input_params": {
  "lineno": 588,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.rnn_cell.LayerNormLSTMCell.get_state_names": {
  "lineno": 604,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.rnn_cell.LayerNormLSTMCell.prepare_input": {
  "lineno": 594,
  "symbols_in_volume": [
   "caffe2.python.brew.fc"
  ],
  "type": "function"
 },
 "caffe2.python.rnn_cell.LayerNormMILSTMCell": {
  "lineno": 708,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.rnn_cell.LayerNormMILSTMCell._apply": {
  "lineno": 710,
  "symbols_in_volume": [
   "caffe2.python.brew.concat",
   "caffe2.python.brew.fc",
   "caffe2.python.brew.layer_norm",
   "caffe2.python.brew.sum",
   "caffe2.python.modeling.initializers.Initializer"
  ],
  "type": "function"
 },
 "caffe2.python.rnn_cell.MILSTMCell": {
  "lineno": 608,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.rnn_cell.MILSTMCell._apply": {
  "lineno": 610,
  "symbols_in_volume": [
   "caffe2.python.brew.concat",
   "caffe2.python.brew.fc",
   "caffe2.python.brew.sum",
   "caffe2.python.modeling.initializers.Initializer"
  ],
  "type": "function"
 },
 "caffe2.python.rnn_cell.MILSTMWithAttentionCell": {
  "lineno": 1434,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.rnn_cell.MILSTMWithAttentionCell.__init__": {
  "lineno": 1436,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.rnn_cell.MultiRNNCell": {
  "lineno": 911,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.rnn_cell.MultiRNNCell.__init__": {
  "lineno": 924,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.rnn_cell.MultiRNNCell._apply": {
  "lineno": 984,
  "symbols_in_volume": [
   "caffe2.python.brew.sum",
   "caffe2.python.core.NameScope"
  ],
  "type": "function"
 },
 "caffe2.python.rnn_cell.MultiRNNCell._prepare_output": {
  "lineno": 1062,
  "symbols_in_volume": [
   "caffe2.python.brew.sum"
  ],
  "type": "function"
 },
 "caffe2.python.rnn_cell.MultiRNNCell._prepare_output_sequence": {
  "lineno": 1085,
  "symbols_in_volume": [
   "caffe2.python.brew.sum"
  ],
  "type": "function"
 },
 "caffe2.python.rnn_cell.MultiRNNCell.get_output_state_index": {
  "lineno": 1055,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.rnn_cell.MultiRNNCell.get_state_names": {
  "lineno": 1052,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.rnn_cell.MultiRNNCell.layer_scoper": {
  "lineno": 974,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.rnn_cell.MultiRNNCell.layer_scoper.helper": {
  "lineno": 975,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.rnn_cell.MultiRNNCell.prepare_input": {
  "lineno": 979,
  "symbols_in_volume": [
   "caffe2.python.core.NameScope"
  ],
  "type": "function"
 },
 "caffe2.python.rnn_cell.MultiRNNCellInitializer": {
  "lineno": 894,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.rnn_cell.MultiRNNCellInitializer.__init__": {
  "lineno": 895,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.rnn_cell.MultiRNNCellInitializer.create_states": {
  "lineno": 898,
  "symbols_in_volume": [
   "caffe2.python.core.NameScope"
  ],
  "type": "function"
 },
 "caffe2.python.rnn_cell.RNNCell": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.rnn_cell.RNNCell.__init__": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.rnn_cell.RNNCell._apply": {
  "lineno": 152,
  "symbols_in_volume": [
   "caffe2.python.core.NameScope"
  ],
  "type": "function"
 },
 "caffe2.python.rnn_cell.RNNCell._prepare_output": {
  "lineno": 257,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.rnn_cell.RNNCell._prepare_output_sequence": {
  "lineno": 263,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.rnn_cell.RNNCell._rectify_apply_inputs": {
  "lineno": 167,
  "symbols_in_volume": [
   "inspect.getargspec"
  ],
  "type": "function"
 },
 "caffe2.python.rnn_cell.RNNCell.apply": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.rnn_cell.RNNCell.apply_over_sequence": {
  "lineno": 78,
  "symbols_in_volume": [
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.recurrent.recurrent_net",
   "caffe2.python.scope.NameScope",
   "caffe2.python.utils.raiseIfNotEqual"
  ],
  "type": "function"
 },
 "caffe2.python.rnn_cell.RNNCell.apply_override": {
  "lineno": 189,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.rnn_cell.RNNCell.get_output_dim": {
  "lineno": 251,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.rnn_cell.RNNCell.get_output_state_index": {
  "lineno": 229,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.rnn_cell.RNNCell.get_state_names": {
  "lineno": 235,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.rnn_cell.RNNCell.get_state_names_override": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.rnn_cell.RNNCell.initializer": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.rnn_cell.RNNCell.prepare_input": {
  "lineno": 216,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.rnn_cell.RNNCell.scope": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.rnn_cell.UnrolledCell": {
  "lineno": 1591,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.rnn_cell.UnrolledCell.__init__": {
  "lineno": 1592,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.rnn_cell.UnrolledCell.apply_over_sequence": {
  "lineno": 1596,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.DataType.INT32",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.modeling.parameter_sharing.ParameterSharing",
   "caffe2.python.scope.NameScope",
   "logging.debug"
  ],
  "type": "function"
 },
 "caffe2.python.rnn_cell._LSTM": {
  "lineno": 1472,
  "symbols_in_volume": [
   "caffe2.python.scope"
  ],
  "type": "function"
 },
 "caffe2.python.rnn_cell._RectifyName": {
  "lineno": 32,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "caffe2.python.core.ScopedBlobReference",
   "six.string_types"
  ],
  "type": "function"
 },
 "caffe2.python.rnn_cell._RectifyNames": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.rnn_cell._layered_LSTM": {
  "lineno": 1954,
  "symbols_in_volume": [
   "caffe2.python.scope"
  ],
  "type": "function"
 },
 "caffe2.python.rnn_cell.cudnn_LSTM": {
  "lineno": 1711,
  "symbols_in_volume": [
   "caffe2.python.core.NameScope",
   "caffe2.python.core.Net",
   "caffe2.python.modeling.initializers.Initializer",
   "caffe2.python.modeling.parameter_info.ParameterTags.WEIGHT",
   "caffe2.python.scope",
   "random.randint"
  ],
  "type": "function"
 },
 "caffe2.python.rnn_cell.cudnn_LSTM.init": {
  "lineno": 1748,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.BOOL",
   "caffe2.python.core.DataType.DOUBLE",
   "caffe2.python.core.DataType.FLOAT",
   "caffe2.python.core.DataType.FLOAT16",
   "caffe2.python.core.DataType.INT16",
   "caffe2.python.core.DataType.INT32",
   "caffe2.python.core.DataType.INT64",
   "caffe2.python.core.DataType.INT8",
   "caffe2.python.core.DataType.STRING",
   "caffe2.python.core.DataType.UINT16",
   "caffe2.python.core.DataType.UINT8",
   "collections.namedtuple",
   "logging.INFO",
   "logging.getLogger",
   "numpy.bool",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.str",
   "numpy.uint16",
   "numpy.uint8"
  ],
  "type": "module"
 },
 "caffe2.python.schema.ConstRecord": {
  "lineno": 1199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.FeedRecord": {
  "lineno": 1149,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference"
  ],
  "type": "function"
 },
 "caffe2.python.schema.FeedRecord.feed": {
  "lineno": 1156,
  "symbols_in_volume": [
   "caffe2.python.workspace.FeedBlob"
  ],
  "type": "function"
 },
 "caffe2.python.schema.FetchRecord": {
  "lineno": 1130,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference"
  ],
  "type": "function"
 },
 "caffe2.python.schema.FetchRecord.fetch": {
  "lineno": 1136,
  "symbols_in_volume": [
   "caffe2.python.workspace.FetchBlob"
  ],
  "type": "function"
 },
 "caffe2.python.schema.Field": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.schema.Field.__eq__": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.Field.__init__": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.Field.__repr__": {
  "lineno": 190,
  "symbols_in_volume": [
   "six.StringIO"
  ],
  "type": "function"
 },
 "caffe2.python.schema.Field._child_base_id": {
  "lineno": 171,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.Field._pprint_impl": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.Field._set_parent": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.Field.all_scalars": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.Field.clone": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.Field.clone_schema": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.Field.field_blobs": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.Field.field_metadata": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.Field.field_names": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.Field.field_types": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.Field.has_blobs": {
  "lineno": 138,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.Field.slice": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.InitEmptyRecord": {
  "lineno": 1212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.List": {
  "lineno": 198,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.schema.List.__getattr__": {
  "lineno": 253,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.List.__getitem__": {
  "lineno": 265,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.List.__init__": {
  "lineno": 207,
  "symbols_in_volume": [
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.schema.List._pprint_impl": {
  "lineno": 245,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.List.all_scalars": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.List.clone": {
  "lineno": 239,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.List.field_blobs": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.List.field_metadata": {
  "lineno": 227,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.List.field_names": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.List.field_types": {
  "lineno": 224,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.List.has_blobs": {
  "lineno": 236,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.ListWithEvicted": {
  "lineno": 279,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.schema.ListWithEvicted.__getattr__": {
  "lineno": 331,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.ListWithEvicted.__getitem__": {
  "lineno": 345,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.ListWithEvicted.__init__": {
  "lineno": 284,
  "symbols_in_volume": [
   "numpy.int64"
  ],
  "type": "function"
 },
 "caffe2.python.schema.ListWithEvicted._pprint_impl": {
  "lineno": 320,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.ListWithEvicted.all_scalars": {
  "lineno": 307,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.ListWithEvicted.clone": {
  "lineno": 313,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.ListWithEvicted.field_blobs": {
  "lineno": 304,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.ListWithEvicted.field_metadata": {
  "lineno": 301,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.ListWithEvicted.field_names": {
  "lineno": 292,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.ListWithEvicted.field_types": {
  "lineno": 298,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.ListWithEvicted.has_blobs": {
  "lineno": 310,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.Map": {
  "lineno": 888,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.MapWithEvicted": {
  "lineno": 903,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.Metadata": {
  "lineno": 74,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "class"
 },
 "caffe2.python.schema.NamedTuple": {
  "lineno": 920,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.NewRecord": {
  "lineno": 1175,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.RawTuple": {
  "lineno": 932,
  "symbols_in_volume": [
   "numpy.void"
  ],
  "type": "function"
 },
 "caffe2.python.schema.Scalar": {
  "lineno": 668,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.schema.Scalar.__call__": {
  "lineno": 752,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.Scalar.__init__": {
  "lineno": 713,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.Scalar._pprint_impl": {
  "lineno": 874,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.Scalar._validate_metadata": {
  "lineno": 766,
  "symbols_in_volume": [
   "numpy.integer",
   "numpy.issubdtype"
  ],
  "type": "function"
 },
 "caffe2.python.schema.Scalar.all_scalars": {
  "lineno": 737,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.Scalar.clone": {
  "lineno": 740,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.Scalar.field_blobs": {
  "lineno": 733,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.Scalar.field_metadata": {
  "lineno": 727,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.Scalar.field_names": {
  "lineno": 718,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.Scalar.field_type": {
  "lineno": 721,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.Scalar.field_types": {
  "lineno": 724,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.Scalar.get": {
  "lineno": 747,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.Scalar.has_blobs": {
  "lineno": 730,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.Scalar.id": {
  "lineno": 879,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.Scalar.metadata": {
  "lineno": 756,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.Scalar.set": {
  "lineno": 783,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "numpy.array",
   "numpy.dtype",
   "numpy.ndarray",
   "numpy.void",
   "past.builtins.basestring"
  ],
  "type": "function"
 },
 "caffe2.python.schema.Scalar.set_metadata": {
  "lineno": 760,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.Scalar.set_type": {
  "lineno": 866,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.void"
  ],
  "type": "function"
 },
 "caffe2.python.schema.Scalar.set_value": {
  "lineno": 775,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.void"
  ],
  "type": "function"
 },
 "caffe2.python.schema.Struct": {
  "lineno": 361,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.schema.Struct.__add__": {
  "lineno": 550,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "future.utils.viewitems"
  ],
  "type": "function"
 },
 "caffe2.python.schema.Struct.__contains__": {
  "lineno": 492,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.Struct.__getattr__": {
  "lineno": 533,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.Struct.__getitem__": {
  "lineno": 499,
  "symbols_in_volume": [
   "future.utils.viewkeys",
   "future.utils.viewvalues",
   "itertools.islice"
  ],
  "type": "function"
 },
 "caffe2.python.schema.Struct.__init__": {
  "lineno": 365,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "future.utils.viewitems",
   "future.utils.viewvalues"
  ],
  "type": "function"
 },
 "caffe2.python.schema.Struct.__len__": {
  "lineno": 496,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.Struct.__setattr__": {
  "lineno": 541,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.Struct.__sub__": {
  "lineno": 597,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "caffe2.python.schema.Struct._get_field_by_nested_name": {
  "lineno": 470,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.Struct._pprint_impl": {
  "lineno": 485,
  "symbols_in_volume": [
   "future.utils.viewitems"
  ],
  "type": "function"
 },
 "caffe2.python.schema.Struct._struct_from_nested_name": {
  "lineno": 414,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.Struct._struct_from_nested_name.create_internal": {
  "lineno": 415,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.Struct.all_scalars": {
  "lineno": 454,
  "symbols_in_volume": [
   "future.utils.viewitems"
  ],
  "type": "function"
 },
 "caffe2.python.schema.Struct.clone": {
  "lineno": 463,
  "symbols_in_volume": [
   "future.utils.viewitems"
  ],
  "type": "function"
 },
 "caffe2.python.schema.Struct.field_blobs": {
  "lineno": 448,
  "symbols_in_volume": [
   "future.utils.viewitems"
  ],
  "type": "function"
 },
 "caffe2.python.schema.Struct.field_metadata": {
  "lineno": 442,
  "symbols_in_volume": [
   "future.utils.viewitems"
  ],
  "type": "function"
 },
 "caffe2.python.schema.Struct.field_names": {
  "lineno": 430,
  "symbols_in_volume": [
   "future.utils.viewitems"
  ],
  "type": "function"
 },
 "caffe2.python.schema.Struct.field_types": {
  "lineno": 436,
  "symbols_in_volume": [
   "future.utils.viewitems"
  ],
  "type": "function"
 },
 "caffe2.python.schema.Struct.get": {
  "lineno": 524,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.Struct.get_children": {
  "lineno": 427,
  "symbols_in_volume": [
   "future.utils.viewitems"
  ],
  "type": "function"
 },
 "caffe2.python.schema.Struct.has_blobs": {
  "lineno": 460,
  "symbols_in_volume": [
   "future.utils.viewvalues"
  ],
  "type": "function"
 },
 "caffe2.python.schema.Tuple": {
  "lineno": 925,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema._SchemaNode": {
  "lineno": 970,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.schema._SchemaNode.__init__": {
  "lineno": 973,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema._SchemaNode.add_child": {
  "lineno": 979,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema._SchemaNode.get_field": {
  "lineno": 987,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema._SchemaNode.print_recursively": {
  "lineno": 1039,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema._join_field_name": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema._normalize_field": {
  "lineno": 49,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "caffe2.python.schema.as_record": {
  "lineno": 1112,
  "symbols_in_volume": [
   "future.utils.viewitems",
   "past.builtins.basestring"
  ],
  "type": "function"
 },
 "caffe2.python.schema.attach_metadata_to_scalars": {
  "lineno": 1302,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.data_type_for_dtype": {
  "lineno": 1288,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.dtype_for_core_type": {
  "lineno": 1295,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.equal_schemas": {
  "lineno": 1260,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.from_blob_list": {
  "lineno": 1094,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference"
  ],
  "type": "function"
 },
 "caffe2.python.schema.from_column_list": {
  "lineno": 1047,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.from_dtype": {
  "lineno": 941,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "caffe2.python.schema.is_schema_subset": {
  "lineno": 1255,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema.schema_check": {
  "lineno": 1281,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.schema_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.schema_test.TestDB": {
  "lineno": 14,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.schema_test.TestDB.testAddFieldByNestedName": {
  "lineno": 319,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct"
  ],
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testAssignToField": {
  "lineno": 205,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct"
  ],
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testContains": {
  "lineno": 367,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct"
  ],
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testDtypeForCoreType": {
  "lineno": 441,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.FLOAT16",
   "caffe2.python.schema.dtype_for_core_type",
   "numpy.float16"
  ],
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testDupField": {
  "lineno": 199,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct"
  ],
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testFromColumnList": {
  "lineno": 390,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "caffe2.python.schema.List",
   "caffe2.python.schema.Map",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "caffe2.python.schema.from_column_list",
   "random.shuffle"
  ],
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testFromEmptyColumnList": {
  "lineno": 384,
  "symbols_in_volume": [
   "caffe2.python.schema.Struct",
   "caffe2.python.schema.from_column_list"
  ],
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testGetFieldByNestedName": {
  "lineno": 299,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct"
  ],
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testListInStructIndexing": {
  "lineno": 119,
  "symbols_in_volume": [
   "caffe2.python.schema.List",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testListSubclassClone": {
  "lineno": 26,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar"
  ],
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testListSubclassClone.Subclass": {
  "lineno": 27,
  "symbols_in_volume": [
   "caffe2.python.schema.List"
  ],
  "type": "class"
 },
 "caffe2.python.schema_test.TestDB.testListWithEvictedInStructIndexing": {
  "lineno": 132,
  "symbols_in_volume": [
   "caffe2.python.schema.ListWithEvicted",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testListWithEvictedSubclassClone": {
  "lineno": 36,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar"
  ],
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testListWithEvictedSubclassClone.Subclass": {
  "lineno": 37,
  "symbols_in_volume": [
   "caffe2.python.schema.ListWithEvicted"
  ],
  "type": "class"
 },
 "caffe2.python.schema_test.TestDB.testMapInStructIndexing": {
  "lineno": 146,
  "symbols_in_volume": [
   "caffe2.python.schema.Map",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "numpy.float32",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testNormalizeField": {
  "lineno": 58,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testPicklable": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.schema.List",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "numpy.int32",
   "pickle.dumps",
   "pickle.loads"
  ],
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testPreservesEmptyFields": {
  "lineno": 210,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "caffe2.python.schema.from_blob_list",
   "numpy.array",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testPreservesMetadata": {
  "lineno": 160,
  "symbols_in_volume": [
   "caffe2.python.schema.List",
   "caffe2.python.schema.Metadata",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "caffe2.python.schema.from_blob_list",
   "numpy.array",
   "numpy.float32",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testRawTuple": {
  "lineno": 92,
  "symbols_in_volume": [
   "caffe2.python.schema.RawTuple",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct"
  ],
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testScalarForVoidType": {
  "lineno": 416,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "numpy.void"
  ],
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testScalarShape": {
  "lineno": 425,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testStructAddition": {
  "lineno": 263,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct"
  ],
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testStructGet": {
  "lineno": 407,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.schema.NewRecord",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Tuple",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testStructIndexing": {
  "lineno": 102,
  "symbols_in_volume": [
   "caffe2.python.schema.List",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testStructNestedAddition": {
  "lineno": 278,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct"
  ],
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testStructNestedSubstraction": {
  "lineno": 244,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct"
  ],
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testStructSubclassClone": {
  "lineno": 46,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar"
  ],
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testStructSubclassClone.Subclass": {
  "lineno": 47,
  "symbols_in_volume": [
   "caffe2.python.schema.Struct"
  ],
  "type": "class"
 },
 "caffe2.python.schema_test.TestDB.testStructSubstraction": {
  "lineno": 223,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct"
  ],
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testTuple": {
  "lineno": 68,
  "symbols_in_volume": [
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "caffe2.python.schema.Tuple",
   "numpy.float32",
   "numpy.int32",
   "numpy.str"
  ],
  "type": "function"
 },
 "caffe2.python.scope": {
  "lineno": null,
  "symbols_in_volume": [
   "threading.local"
  ],
  "type": "module"
 },
 "caffe2.python.scope.CurrentDeviceScope": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.scope.CurrentNameScope": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.scope.DeviceScope": {
  "lineno": 55,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.DeviceOption",
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "caffe2.python.scope.EmptyDeviceScope": {
  "lineno": 106,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "caffe2.python.scope.EmptyNameScope": {
  "lineno": 89,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "caffe2.python.scope.NameScope": {
  "lineno": 35,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "past.builtins.basestring"
  ],
  "type": "function"
 },
 "caffe2.python.scope_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.scope_test.TestScope": {
  "lineno": 36,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.scope_test.TestScope.testDevicescopeAssertion": {
  "lineno": 86,
  "symbols_in_volume": [
   "caffe2.python.core.DeviceOption",
   "caffe2.python.scope.CurrentDeviceScope",
   "caffe2.python.scope.DeviceScope",
   "caffe2.python.workspace.GpuDeviceType"
  ],
  "type": "function"
 },
 "caffe2.python.scope_test.TestScope.testDevicescopeBasic": {
  "lineno": 66,
  "symbols_in_volume": [
   "caffe2.python.core.DeviceOption",
   "caffe2.python.scope.CurrentDeviceScope",
   "caffe2.python.scope.DeviceScope",
   "caffe2.python.workspace.GpuDeviceType"
  ],
  "type": "function"
 },
 "caffe2.python.scope_test.TestScope.testEmptyDevicescopeBasic": {
  "lineno": 75,
  "symbols_in_volume": [
   "caffe2.python.core.DeviceOption",
   "caffe2.python.scope.CurrentDeviceScope",
   "caffe2.python.scope.DeviceScope",
   "caffe2.python.scope.EmptyDeviceScope",
   "caffe2.python.workspace.GpuDeviceType"
  ],
  "type": "function"
 },
 "caffe2.python.scope_test.TestScope.testEmptyNamescopeBasic": {
  "lineno": 58,
  "symbols_in_volume": [
   "caffe2.python.scope.CurrentNameScope",
   "caffe2.python.scope.EmptyNameScope",
   "caffe2.python.scope.NameScope"
  ],
  "type": "function"
 },
 "caffe2.python.scope_test.TestScope.testMultiThreaded": {
  "lineno": 125,
  "symbols_in_volume": [
   "caffe2.python.scope.CurrentDeviceScope",
   "caffe2.python.scope.CurrentNameScope",
   "caffe2.python.scope.NameScope",
   "threading.Thread"
  ],
  "type": "function"
 },
 "caffe2.python.scope_test.TestScope.testNamescopeAssertion": {
  "lineno": 46,
  "symbols_in_volume": [
   "caffe2.python.scope.CurrentNameScope",
   "caffe2.python.scope.NameScope"
  ],
  "type": "function"
 },
 "caffe2.python.scope_test.TestScope.testNamescopeBasic": {
  "lineno": 38,
  "symbols_in_volume": [
   "caffe2.python.scope.CurrentNameScope",
   "caffe2.python.scope.NameScope"
  ],
  "type": "function"
 },
 "caffe2.python.scope_test.TestScope.testTags": {
  "lineno": 100,
  "symbols_in_volume": [
   "caffe2.python.core.DeviceOption",
   "caffe2.python.scope.CurrentDeviceScope",
   "caffe2.python.scope.DeviceScope"
  ],
  "type": "function"
 },
 "caffe2.python.scope_test.thread_runner": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.core.DeviceOption",
   "caffe2.python.scope.CurrentDeviceScope",
   "caffe2.python.scope.CurrentNameScope",
   "caffe2.python.scope.DeviceScope",
   "caffe2.python.scope.NameScope",
   "caffe2.python.workspace.GpuDeviceType",
   "time.sleep"
  ],
  "type": "function"
 },
 "caffe2.python.serialized_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.serialized_test.coverage": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.workspace.C.OpSchema"
  ],
  "type": "module"
 },
 "caffe2.python.serialized_test.coverage.gen_coverage_sets": {
  "lineno": 68,
  "symbols_in_volume": [
   "caffe2.python.core._GetRegisteredOperators"
  ],
  "type": "function"
 },
 "caffe2.python.serialized_test.coverage.gen_covered_ops": {
  "lineno": 87,
  "symbols_in_volume": [
   "os.listdir",
   "os.path.isfile",
   "os.path.join",
   "tempfile.mkdtemp",
   "zipfile.ZipFile"
  ],
  "type": "function"
 },
 "caffe2.python.serialized_test.coverage.gen_covered_ops.parse_proto": {
  "lineno": 88,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.OperatorDef"
  ],
  "type": "function"
 },
 "caffe2.python.serialized_test.coverage.gen_serialized_test_coverage": {
  "lineno": 21,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "caffe2.python.serialized_test.serialized_test_util": {
  "lineno": null,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.join",
   "os.path.realpath",
   "threading.local"
  ],
  "type": "module"
 },
 "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase": {
  "lineno": 65,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase._assertSameOps": {
  "lineno": 188,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.OperatorDef"
  ],
  "type": "function"
 },
 "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks": {
  "lineno": 220,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertSerializedOperatorChecks": {
  "lineno": 199,
  "symbols_in_volume": [
   "caffe2.python.serialized_test.coverage.gen_serialized_test_coverage"
  ],
  "type": "function"
 },
 "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.compare_test": {
  "lineno": 135,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.DeviceOption",
   "caffe2.python.hypothesis_test_util.runOpOnInput",
   "numpy.array_equal",
   "numpy.load",
   "numpy.testing.assert_allclose",
   "os.path.join",
   "shutil.rmtree",
   "tempfile.mkdtemp",
   "zipfile.ZipFile"
  ],
  "type": "function"
 },
 "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.compare_test.parse_proto": {
  "lineno": 137,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.OperatorDef"
  ],
  "type": "function"
 },
 "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.get_output_dir": {
  "lineno": 69,
  "symbols_in_volume": [
   "os.getcwd",
   "os.path.exists",
   "os.path.join"
  ],
  "type": "function"
 },
 "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.get_output_filename": {
  "lineno": 89,
  "symbols_in_volume": [
   "inspect.getfile",
   "os.path.basename"
  ],
  "type": "function"
 },
 "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.serialize_test": {
  "lineno": 99,
  "symbols_in_volume": [
   "numpy.savez_compressed",
   "os.path.basename",
   "os.path.join",
   "shutil.rmtree",
   "zipfile.ZipFile"
  ],
  "type": "function"
 },
 "caffe2.python.serialized_test.serialized_test_util._getGradientOrNone": {
  "lineno": 43,
  "symbols_in_volume": [
   "caffe2.python.gradient_checker.getGradientForOp"
  ],
  "type": "function"
 },
 "caffe2.python.serialized_test.serialized_test_util._prepare_dir": {
  "lineno": 59,
  "symbols_in_volume": [
   "os.makedirs",
   "os.path.exists",
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "caffe2.python.serialized_test.serialized_test_util._transformList": {
  "lineno": 52,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.object"
  ],
  "type": "function"
 },
 "caffe2.python.serialized_test.serialized_test_util.given": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.serialized_test.serialized_test_util.given.wrapper": {
  "lineno": 29,
  "symbols_in_volume": [
   "hypothesis.given",
   "hypothesis.seed",
   "hypothesis.settings"
  ],
  "type": "function"
 },
 "caffe2.python.serialized_test.serialized_test_util.given.wrapper.func": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.serialized_test.serialized_test_util.testWithArgs": {
  "lineno": 263,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "sys.argv",
   "unittest.main"
  ],
  "type": "function"
 },
 "caffe2.python.session": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.session.CompiledRunnable": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.session.CompiledRunnable.__init__": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.session.LocalSession": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.session.LocalSession.__init__": {
  "lineno": 185,
  "symbols_in_volume": [
   "caffe2.python.workspace.C.Workspace.current"
  ],
  "type": "function"
 },
 "caffe2.python.session.LocalSession._compile_task_group": {
  "lineno": 189,
  "symbols_in_volume": [
   "caffe2.python.core.Plan",
   "caffe2.python.task.Cluster"
  ],
  "type": "function"
 },
 "caffe2.python.session.LocalSession._fetch_output": {
  "lineno": 212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.session.LocalSession._run_compiled": {
  "lineno": 197,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "caffe2.python.task.WorkspaceType.PRIVATE",
   "caffe2.python.workspace.C.Workspace",
   "caffe2.python.workspace.WorkspaceGuard"
  ],
  "type": "function"
 },
 "caffe2.python.session.Session": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.session.Session.__enter__": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.session.Session.__exit__": {
  "lineno": 171,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.session.Session.__init__": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.session.Session._compile_task_group": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.session.Session._do_close": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.session.Session._run_compiled": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.session.Session.close": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.session.Session.compile": {
  "lineno": 84,
  "symbols_in_volume": [
   "caffe2.python.core.ExecutionStep",
   "caffe2.python.core.Plan",
   "caffe2.python.core.execution_step",
   "caffe2.python.task.Task",
   "caffe2.python.task.TaskGroup",
   "caffe2.python.task.WorkspaceType.GLOBAL"
  ],
  "type": "function"
 },
 "caffe2.python.session.Session.fetch_output": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.session.Session.is_open": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.session.Session.run": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.session_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.session_test.TestLocalSession": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.session_test.TestLocalSession.test_local_session": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.core.NameScope",
   "caffe2.python.core.Net",
   "caffe2.python.dataset.Dataset",
   "caffe2.python.pipeline.pipe",
   "caffe2.python.schema.FeedRecord",
   "caffe2.python.schema.FetchRecord",
   "caffe2.python.schema.InitEmptyRecord",
   "caffe2.python.schema.NewRecord",
   "caffe2.python.schema.Struct",
   "caffe2.python.session.LocalSession",
   "caffe2.python.task.TaskGroup",
   "caffe2.python.workspace.C.Workspace",
   "numpy.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.session_test.TestLocalSession.test_local_session.proc1": {
  "lineno": 31,
  "symbols_in_volume": [
   "caffe2.python.core.NameScope",
   "caffe2.python.core.Net",
   "caffe2.python.schema.NewRecord"
  ],
  "type": "function"
 },
 "caffe2.python.session_test.TestLocalSession.test_local_session.proc2": {
  "lineno": 39,
  "symbols_in_volume": [
   "caffe2.python.core.NameScope",
   "caffe2.python.core.Net",
   "caffe2.python.schema.NewRecord"
  ],
  "type": "function"
 },
 "caffe2.python.sparse_to_dense_mask_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.sparse_to_dense_mask_test.TestSparseToDenseMask": {
  "lineno": 11,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.sparse_to_dense_mask_test.TestSparseToDenseMask.test_sparse_to_dense_mask_empty_lengths": {
  "lineno": 104,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.array",
   "numpy.float",
   "numpy.int32",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.sparse_to_dense_mask_test.TestSparseToDenseMask.test_sparse_to_dense_mask_float": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.array",
   "numpy.float",
   "numpy.int32",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.sparse_to_dense_mask_test.TestSparseToDenseMask.test_sparse_to_dense_mask_invalid_inputs": {
  "lineno": 33,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.RunOperatorMultiple",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.array",
   "numpy.float",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.sparse_to_dense_mask_test.TestSparseToDenseMask.test_sparse_to_dense_mask_no_lengths": {
  "lineno": 119,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.array",
   "numpy.float",
   "numpy.int32",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.sparse_to_dense_mask_test.TestSparseToDenseMask.test_sparse_to_dense_mask_presence_mask": {
  "lineno": 134,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.array",
   "numpy.bool",
   "numpy.float",
   "numpy.int32",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.sparse_to_dense_mask_test.TestSparseToDenseMask.test_sparse_to_dense_mask_string": {
  "lineno": 83,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.array",
   "numpy.int32",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.sparse_to_dense_mask_test.TestSparseToDenseMask.test_sparse_to_dense_mask_subtensor": {
  "lineno": 60,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.array",
   "numpy.float",
   "numpy.int32",
   "numpy.int64",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.sparse_to_dense_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.sparse_to_dense_test.TestSparseToDense": {
  "lineno": 11,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.sparse_to_dense_test.TestSparseToDense.test_sparse_to_dense": {
  "lineno": 12,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.array",
   "numpy.int32",
   "numpy.testing.assert_array_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.sparse_to_dense_test.TestSparseToDense.test_sparse_to_dense_invalid_inputs": {
  "lineno": 70,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.array",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.sparse_to_dense_test.TestSparseToDense.test_sparse_to_dense_shape_inference": {
  "lineno": 36,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.DataType.INT32",
   "caffe2.python.core.Net",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.InferShapesAndTypes",
   "numpy.array",
   "numpy.int32",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.sparse_to_dense_test.TestSparseToDense.test_sparse_to_dense_with_data_to_infer_dim": {
  "lineno": 85,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.array",
   "numpy.int32",
   "numpy.testing.assert_array_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.task": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.task.Cluster": {
  "lineno": 26,
  "symbols_in_volume": [
   "caffe2.python.context.define_context"
  ],
  "type": "class"
 },
 "caffe2.python.task.Cluster.__init__": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.task.Cluster.__repr__": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.task.Cluster.add_node": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.task.Cluster.node_kwargs": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.task.Cluster.nodes": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.task.Node": {
  "lineno": 60,
  "symbols_in_volume": [
   "caffe2.python.context.define_context"
  ],
  "type": "class"
 },
 "caffe2.python.task.Node.__init__": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.task.Node.__repr__": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.task.Node.__str__": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.task.Node.kwargs": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.task.SetupNets": {
  "lineno": 650,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.task.SetupNets.__init__": {
  "lineno": 683,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.task.SetupNets.__repr__": {
  "lineno": 693,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.task.SetupNets.exit": {
  "lineno": 690,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.task.SetupNets.setup": {
  "lineno": 687,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.task.Task": {
  "lineno": 445,
  "symbols_in_volume": [
   "caffe2.python.context.define_context"
  ],
  "type": "class"
 },
 "caffe2.python.task.Task.__enter__": {
  "lineno": 544,
  "symbols_in_volume": [
   "caffe2.python.net_builder.NetBuilder"
  ],
  "type": "function"
 },
 "caffe2.python.task.Task.__exit__": {
  "lineno": 555,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.task.Task.__init__": {
  "lineno": 498,
  "symbols_in_volume": [
   "caffe2.python.core.ExecutionStep"
  ],
  "type": "function"
 },
 "caffe2.python.task.Task.__repr__": {
  "lineno": 645,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.task.Task._assert_not_used": {
  "lineno": 566,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.task.Task._get_next_name": {
  "lineno": 484,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.task.Task._notify_used": {
  "lineno": 641,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.task.Task.add_output": {
  "lineno": 570,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.task.Task.add_outputs": {
  "lineno": 577,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.task.Task.get_step": {
  "lineno": 588,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.INT32",
   "caffe2.python.core.Net",
   "caffe2.python.core.execution_step"
  ],
  "type": "function"
 },
 "caffe2.python.task.Task.output_list": {
  "lineno": 635,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.task.Task.outputs": {
  "lineno": 638,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.task.Task.set_step": {
  "lineno": 584,
  "symbols_in_volume": [
   "caffe2.python.core.to_execution_step"
  ],
  "type": "function"
 },
 "caffe2.python.task.Task.workspace_type": {
  "lineno": 563,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.task.TaskGroup": {
  "lineno": 165,
  "symbols_in_volume": [
   "caffe2.python.context.define_context"
  ],
  "type": "class"
 },
 "caffe2.python.task.TaskGroup.__init__": {
  "lineno": 198,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.task.TaskGroup.__repr__": {
  "lineno": 355,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.task.TaskGroup.add": {
  "lineno": 216,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.task.TaskGroup.add_remote_net": {
  "lineno": 210,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.task.TaskGroup.num_registered_tasks": {
  "lineno": 238,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.task.TaskGroup.remote_nets": {
  "lineno": 213,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.task.TaskGroup.report_net": {
  "lineno": 260,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.task.TaskGroup.report_step": {
  "lineno": 249,
  "symbols_in_volume": [
   "caffe2.python.core.to_execution_step"
  ],
  "type": "function"
 },
 "caffe2.python.task.TaskGroup.tasks": {
  "lineno": 231,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.task.TaskGroup.tasks_by_node": {
  "lineno": 272,
  "symbols_in_volume": [
   "caffe2.python.core.execution_step",
   "collections.defaultdict",
   "future.utils.viewitems"
  ],
  "type": "function"
 },
 "caffe2.python.task.TaskGroup.to_task": {
  "lineno": 345,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.task.TaskGroup.used_nodes": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.task.TaskGroup.workspace_type": {
  "lineno": 352,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.task.TaskOutput": {
  "lineno": 360,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.task.TaskOutput.__init__": {
  "lineno": 366,
  "symbols_in_volume": [
   "caffe2.python.schema.Field"
  ],
  "type": "function"
 },
 "caffe2.python.task.TaskOutput.__repr__": {
  "lineno": 403,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.task.TaskOutput.fetch": {
  "lineno": 392,
  "symbols_in_volume": [
   "caffe2.python.schema.from_blob_list"
  ],
  "type": "function"
 },
 "caffe2.python.task.TaskOutput.get": {
  "lineno": 383,
  "symbols_in_volume": [
   "caffe2.python.schema.from_blob_list"
  ],
  "type": "function"
 },
 "caffe2.python.task.TaskOutput.set": {
  "lineno": 378,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.task.TaskOutputList": {
  "lineno": 418,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.task.TaskOutputList.__init__": {
  "lineno": 420,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.task.TaskOutputList.__repr__": {
  "lineno": 441,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.task.TaskOutputList.names": {
  "lineno": 423,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.task.TaskOutputList.set_values": {
  "lineno": 433,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.task.WorkspaceType": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.task._merge_node_kwargs": {
  "lineno": 15,
  "symbols_in_volume": [
   "copy.copy"
  ],
  "type": "function"
 },
 "caffe2.python.task.add_setup_steps": {
  "lineno": 153,
  "symbols_in_volume": [
   "caffe2.python.core.execution_step"
  ],
  "type": "function"
 },
 "caffe2.python.task.final_output": {
  "lineno": 407,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.task.get_setup_nets": {
  "lineno": 109,
  "symbols_in_volume": [
   "caffe2.python.core.ExecutionStep",
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.task_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.task_test.TestTask": {
  "lineno": 10,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.task_test.TestTask.testRepr": {
  "lineno": 11,
  "symbols_in_volume": [
   "caffe2.python.task.Cluster",
   "caffe2.python.task.Node",
   "caffe2.python.task.SetupNets",
   "caffe2.python.task.Task",
   "caffe2.python.task.TaskGroup",
   "caffe2.python.task.TaskOutput"
  ],
  "type": "function"
 },
 "caffe2.python.test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.test.blob_deallocation_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.core.GlobalInit",
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.test.blob_deallocation_test.BlobDeallocationTest": {
  "lineno": 11,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.test.blob_deallocation_test.BlobDeallocationTest.test": {
  "lineno": 12,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNetOnce"
  ],
  "type": "function"
 },
 "caffe2.python.test.do_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.test.do_op_test.DoOpTest": {
  "lineno": 11,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.test.do_op_test.DoOpTest.test_operator": {
  "lineno": 12,
  "symbols_in_volume": [
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.all",
   "numpy.asarray"
  ],
  "type": "function"
 },
 "caffe2.python.test.do_op_test.DoOpTest.test_operator.make_net": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.test.do_op_test.DoOpTest.test_reuse_workspace": {
  "lineno": 40,
  "symbols_in_volume": [
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.all",
   "numpy.asarray"
  ],
  "type": "function"
 },
 "caffe2.python.test.do_op_test.DoOpTest.test_reuse_workspace.make_net": {
  "lineno": 41,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.test.executor_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.test.executor_test.ExecutorCPUConvNetTest": {
  "lineno": 26,
  "symbols_in_volume": [
   "caffe2.python.test.executor_test_util.ExecutorTestBase"
  ],
  "type": "class"
 },
 "caffe2.python.test.executor_test.ExecutorCPUConvNetTest.test_executor": {
  "lineno": 27,
  "symbols_in_volume": [
   "caffe2.python.test.executor_test_util.build_conv_model",
   "caffe2.python.test.executor_test_util.executor_test_model_names",
   "caffe2.python.test.executor_test_util.executor_test_settings",
   "hypothesis.given",
   "hypothesis.strategies.sampled_from"
  ],
  "type": "function"
 },
 "caffe2.python.test.executor_test.ExecutorCPUConvNetTest.test_executor.run_model": {
  "lineno": 36,
  "symbols_in_volume": [
   "caffe2.python.workspace.RunNet"
  ],
  "type": "function"
 },
 "caffe2.python.test.executor_test.ExecutorFailingOpTest": {
  "lineno": 71,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.test.executor_test.ExecutorFailingOpTest.test_failing_op": {
  "lineno": 72,
  "symbols_in_volume": [
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNet"
  ],
  "type": "function"
 },
 "caffe2.python.test.executor_test.ExecutorFailingOpTest.test_failing_op.create_failing_net": {
  "lineno": 73,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.test.executor_test.ExecutorGPUResNetTest": {
  "lineno": 50,
  "symbols_in_volume": [
   "caffe2.python.test.executor_test_util.ExecutorTestBase",
   "caffe2.python.workspace.has_gpu_support",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.test.executor_test.ExecutorGPUResNetTest.test_executor": {
  "lineno": 52,
  "symbols_in_volume": [
   "caffe2.python.test.executor_test_util.build_resnet50_dataparallel_model",
   "caffe2.python.test.executor_test_util.executor_test_settings",
   "caffe2.python.workspace.NumGpuDevices",
   "hypothesis.given",
   "hypothesis.strategies.sampled_from"
  ],
  "type": "function"
 },
 "caffe2.python.test.executor_test.ExecutorGPUResNetTest.test_executor.run_model": {
  "lineno": 60,
  "symbols_in_volume": [
   "caffe2.python.test.executor_test_util.run_resnet50_epoch"
  ],
  "type": "function"
 },
 "caffe2.python.test.executor_test_util": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.test.executor_test_util.ExecutorTestBase": {
  "lineno": 238,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.test.executor_test_util.ExecutorTestBase.compare_executors": {
  "lineno": 239,
  "symbols_in_volume": [
   "caffe2.python.workspace.Blobs",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.ndarray",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.test.executor_test_util.build_conv_model": {
  "lineno": 71,
  "symbols_in_volume": [
   "caffe2.python.brew.iter"
  ],
  "type": "function"
 },
 "caffe2.python.test.executor_test_util.build_resnet50_dataparallel_model": {
  "lineno": 108,
  "symbols_in_volume": [
   "caffe2.python.data_parallel_model.Parallelize",
   "caffe2.python.model_helper.ModelHelper"
  ],
  "type": "function"
 },
 "caffe2.python.test.executor_test_util.build_resnet50_dataparallel_model.add_image_input": {
  "lineno": 167,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.INT32"
  ],
  "type": "function"
 },
 "caffe2.python.test.executor_test_util.build_resnet50_dataparallel_model.add_optimizer": {
  "lineno": 153,
  "symbols_in_volume": [
   "caffe2.python.optimizer.add_weight_decay",
   "caffe2.python.optimizer.build_multi_precision_sgd"
  ],
  "type": "function"
 },
 "caffe2.python.test.executor_test_util.build_resnet50_dataparallel_model.add_post_sync_ops": {
  "lineno": 182,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.FLOAT"
  ],
  "type": "function"
 },
 "caffe2.python.test.executor_test_util.build_resnet50_dataparallel_model.create_resnet50_model_ops": {
  "lineno": 133,
  "symbols_in_volume": [
   "caffe2.python.brew.accuracy",
   "caffe2.python.brew.arg_scope",
   "caffe2.python.brew.conv",
   "caffe2.python.brew.fc",
   "caffe2.python.modeling.initializers.Initializer",
   "caffe2.python.models.resnet.create_resnet50"
  ],
  "type": "function"
 },
 "caffe2.python.test.executor_test_util.conv_model_generators": {
  "lineno": 53,
  "symbols_in_volume": [
   "caffe2.python.convnet_benchmarks.AlexNet",
   "caffe2.python.convnet_benchmarks.Inception",
   "caffe2.python.convnet_benchmarks.MLP",
   "caffe2.python.convnet_benchmarks.OverFeat",
   "caffe2.python.convnet_benchmarks.VGGA"
  ],
  "type": "function"
 },
 "caffe2.python.test.executor_test_util.executor_test_model_names": {
  "lineno": 64,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.is_sandcastle",
   "caffe2.python.hypothesis_test_util.is_travis"
  ],
  "type": "function"
 },
 "caffe2.python.test.executor_test_util.executor_test_settings": {
  "lineno": 24,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.is_sandcastle",
   "caffe2.python.hypothesis_test_util.is_travis",
   "caffe2.python.hypothesis_test_util.settings"
  ],
  "type": "function"
 },
 "caffe2.python.test.executor_test_util.gen_test_resnet50": {
  "lineno": 34,
  "symbols_in_volume": [
   "caffe2.python.cnn.CNNModelHelper",
   "caffe2.python.models.resnet.create_resnet50"
  ],
  "type": "function"
 },
 "caffe2.python.test.executor_test_util.run_resnet50_epoch": {
  "lineno": 206,
  "symbols_in_volume": [
   "caffe2.python.timeout_guard.CompleteInTimeOrDie",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNet",
   "time.time"
  ],
  "type": "function"
 },
 "caffe2.python.test.fakefp16_transform_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.test.fakefp16_transform_test.Transformer": {
  "lineno": 9,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.test.fakefp16_transform_test.Transformer.test_fuse": {
  "lineno": 10,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.fakefp16_transform_lib.fakeFp16FuseOps"
  ],
  "type": "function"
 },
 "caffe2.python.test.gpu_context_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.test.gpu_context_test.TestGPUInit": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.workspace.has_cuda_support",
   "unittest.TestCase",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.test.gpu_context_test.TestGPUInit.testTHCAllocator": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.GlobalInit",
   "caffe2.python.workspace.GpuDeviceType",
   "caffe2.python.workspace.RunOperatorOnce",
   "caffe2.python.workspace.has_hip_support",
   "torch.cuda.memory_allocated"
  ],
  "type": "function"
 },
 "caffe2.python.test.inference_lstm_op_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.test.inference_lstm_op_test.TestC2LSTM": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.test.inference_lstm_op_test.TestC2LSTM.test_c2_lstm": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.randn",
   "numpy.testing.assert_array_almost_equal",
   "numpy.zeros",
   "torch.from_numpy",
   "torch.nn.LSTM",
   "torch.ops._caffe2.InferenceLSTM"
  ],
  "type": "function"
 },
 "caffe2.python.test.python_protobuf_test": {
  "lineno": null,
  "symbols_in_volume": [
   "os.environ"
  ],
  "type": "module"
 },
 "caffe2.python.test.python_protobuf_test.TestCrossProtoCalls": {
  "lineno": 17,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.test.python_protobuf_test.TestCrossProtoCalls.testSimple": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.proto.metanet_pb2.MetaNetDef"
  ],
  "type": "function"
 },
 "caffe2.python.test_util": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.test_util.TestCase": {
  "lineno": 71,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.test_util.TestCase.setUp": {
  "lineno": 79,
  "symbols_in_volume": [
   "caffe2.python.workspace.C.Workspace",
   "caffe2.python.workspace.ResetWorkspace",
   "unittest.SkipTest"
  ],
  "type": "function"
 },
 "caffe2.python.test_util.TestCase.setUpClass": {
  "lineno": 72,
  "symbols_in_volume": [
   "caffe2.python.core.SetEnginePref",
   "caffe2.python.workspace.GlobalInit"
  ],
  "type": "function"
 },
 "caffe2.python.test_util.TestCase.tearDown": {
  "lineno": 92,
  "symbols_in_volume": [
   "caffe2.python.workspace.ResetWorkspace"
  ],
  "type": "function"
 },
 "caffe2.python.test_util.caffe2_flaky": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.test_util.get_default_test_flags": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.test_util.is_flaky_test_mode": {
  "lineno": 67,
  "symbols_in_volume": [
   "os.getenv"
  ],
  "type": "function"
 },
 "caffe2.python.test_util.numOps": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.test_util.randBlob": {
  "lineno": 20,
  "symbols_in_volume": [
   "caffe2.python.workspace.FeedBlob",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.test_util.randBlobFloat32": {
  "lineno": 25,
  "symbols_in_volume": [
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.test_util.randBlobsFloat32": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.test_util.rand_array": {
  "lineno": 14,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.python.test_util.str_compare": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.text_file_reader": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.text_file_reader.TextFileReader": {
  "lineno": 12,
  "symbols_in_volume": [
   "caffe2.python.dataio.Reader"
  ],
  "type": "class"
 },
 "caffe2.python.text_file_reader.TextFileReader.__init__": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.dataio.Reader.__init__",
   "caffe2.python.schema.Scalar",
   "caffe2.python.schema.Struct",
   "caffe2.python.schema.data_type_for_dtype"
  ],
  "type": "function"
 },
 "caffe2.python.text_file_reader.TextFileReader.read": {
  "lineno": 42,
  "symbols_in_volume": [
   "caffe2.python.core.BlobReference",
   "caffe2.python.core.ScopedBlobReference"
  ],
  "type": "function"
 },
 "caffe2.python.timeout_guard": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.timeout_guard.CompleteInTimeOrDie": {
  "lineno": 92,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "caffe2.python.timeout_guard.EuthanizeIfNecessary": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.timeout_guard.WatcherThread": {
  "lineno": 29,
  "symbols_in_volume": [
   "threading.Thread"
  ],
  "type": "class"
 },
 "caffe2.python.timeout_guard.WatcherThread.__init__": {
  "lineno": 31,
  "symbols_in_volume": [
   "threading.Condition",
   "threading.Thread.__init__",
   "threading.current_thread"
  ],
  "type": "function"
 },
 "caffe2.python.timeout_guard.WatcherThread.run": {
  "lineno": 39,
  "symbols_in_volume": [
   "future.utils.viewitems",
   "logging.getLogger",
   "os.getpid",
   "os.kill",
   "signal.SIGINT",
   "sys._current_frames",
   "threading.Thread",
   "time.time",
   "traceback.extract_stack"
  ],
  "type": "function"
 },
 "caffe2.python.timeout_guard.WatcherThread.run.forcequit": {
  "lineno": 53,
  "symbols_in_volume": [
   "future.utils.viewitems",
   "os.abort",
   "sys._current_frames",
   "time.sleep",
   "traceback.extract_stack"
  ],
  "type": "function"
 },
 "caffe2.python.toy_regression_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.toy_regression_test.TestToyRegression": {
  "lineno": 7,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.toy_regression_test.TestToyRegression.testToyRegression": {
  "lineno": 8,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.INT64",
   "caffe2.python.core.ExecutionStep",
   "caffe2.python.core.Net",
   "caffe2.python.core.Plan",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunPlan",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "caffe2.python.transformations": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.transformations.Transformer": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.transformations.Transformer.__getattr__": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.transformations.Transformer.__init__": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.transformations.Transformer.runTransform": {
  "lineno": 28,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.run_transform",
   "caffe2.python._import_c_extension.run_workspace_transform",
   "caffe2.python._import_c_extension.transform_exists",
   "caffe2.python._import_c_extension.workspace_transform_exists"
  ],
  "type": "function"
 },
 "caffe2.python.transformations.fuseConvBN": {
  "lineno": 55,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.transform_fuseConvBN"
  ],
  "type": "function"
 },
 "caffe2.python.transformations.fuseNNPACKConvRelu": {
  "lineno": 43,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.transform_fuseNNPACKConvRelu"
  ],
  "type": "function"
 },
 "caffe2.python.transformations.optimizeForMKLDNN": {
  "lineno": 49,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.transform_optimizeForMKLDNN"
  ],
  "type": "function"
 },
 "caffe2.python.transformations_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.transformations.Transformer"
  ],
  "type": "module"
 },
 "caffe2.python.transformations_test.TestTransformations": {
  "lineno": 32,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.transformations_test.TestTransformations._add_nnpack": {
  "lineno": 38,
  "symbols_in_volume": [
   "caffe2.python.test_util.str_compare"
  ],
  "type": "function"
 },
 "caffe2.python.transformations_test.TestTransformations._base_test_net": {
  "lineno": 33,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.transformations_test.TestTransformations._fuse_nnpack_convrelu": {
  "lineno": 42,
  "symbols_in_volume": [
   "caffe2.python.test_util.numOps",
   "caffe2.python.test_util.str_compare"
  ],
  "type": "function"
 },
 "caffe2.python.transformations_test.TestTransformations.test_converterDontEnforceUnusedInputs": {
  "lineno": 323,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.transformations_test.TestTransformations.test_converterDontEnforceUnusedOutputs": {
  "lineno": 330,
  "symbols_in_volume": [
   "caffe2.python.core.Net"
  ],
  "type": "function"
 },
 "caffe2.python.transformations_test.TestTransformations.test_noFuseNNPACKConvRelu": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.transformations_test.TestTransformations.test_transformer_AddNNPACK": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.transformations_test.TestTransformations.test_transformer_FuseConv3DBN": {
  "lineno": 269,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.test_util.numOps",
   "caffe2.python.test_util.randBlobFloat32",
   "caffe2.python.test_util.randBlobsFloat32",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "numpy.allclose",
   "numpy.random.seed",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.transformations_test.TestTransformations.test_transformer_FuseConvBN": {
  "lineno": 111,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.test_util.numOps",
   "caffe2.python.test_util.randBlobFloat32",
   "caffe2.python.test_util.randBlobsFloat32",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.allclose",
   "numpy.random.seed",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.transformations_test.TestTransformations.test_transformer_FuseConvBNNoConvBias": {
  "lineno": 163,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.test_util.numOps",
   "caffe2.python.test_util.randBlobFloat32",
   "caffe2.python.test_util.randBlobsFloat32",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.allclose",
   "numpy.random.seed",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.transformations_test.TestTransformations.test_transformer_FuseConvBNNoConvBiasDuplicatedName": {
  "lineno": 214,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.test_util.numOps",
   "caffe2.python.test_util.randBlobFloat32",
   "caffe2.python.test_util.randBlobsFloat32",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.allclose",
   "numpy.random.seed",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.transformations_test.TestTransformations.test_transformer_FuseNNPACKConvRelu": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.transformations_test.TestTransformations.test_transformer_FuseNNPACKConvReluFollowedByMultipleInputOp": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.transformations_test.TestTransformations.test_transformer_FuseNNPACKConvReluInplaceFollowedByMultipleInputOp": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.transformations_test.TestTransformations.test_transformer_FuseNNPACKConvReluInplaceRelu": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.transformations_test.TestTransformations.test_transformer_FuseNNPACKConvReluNoInplace": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.transformations_test.TestTransformations.test_transformer_FuseNNPACKConvReluPingPongNaming": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.trt": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.trt.test_pt_onnx_trt": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorrt.Logger",
   "tensorrt.Logger.WARNING",
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.trt.test_pt_onnx_trt.Test_PT_ONNX_TRT": {
  "lineno": 55,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.trt.test_pt_onnx_trt.Test_PT_ONNX_TRT.__enter__": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.trt.test_pt_onnx_trt.Test_PT_ONNX_TRT._test_model": {
  "lineno": 77,
  "symbols_in_volume": [
   "numpy.argmax",
   "os.path.basename",
   "os.path.splitext",
   "pycuda.driver.memcpy_dtoh_async",
   "pycuda.driver.memcpy_htod_async",
   "torch.onnx.export",
   "torch.randn",
   "torchvision.models"
  ],
  "type": "function"
 },
 "caffe2.python.trt.test_pt_onnx_trt.Test_PT_ONNX_TRT.build_engine_onnx": {
  "lineno": 68,
  "symbols_in_volume": [
   "tensorrt.Builder",
   "tensorrt.OnnxParser"
  ],
  "type": "function"
 },
 "caffe2.python.trt.test_pt_onnx_trt.Test_PT_ONNX_TRT.setUp": {
  "lineno": 59,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.dirname",
   "os.path.exists",
   "os.path.join"
  ],
  "type": "function"
 },
 "caffe2.python.trt.test_pt_onnx_trt.Test_PT_ONNX_TRT.test_alexnet": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.trt.test_pt_onnx_trt.Test_PT_ONNX_TRT.test_densenet121": {
  "lineno": 176,
  "symbols_in_volume": [
   "unittest.skip"
  ],
  "type": "function"
 },
 "caffe2.python.trt.test_pt_onnx_trt.Test_PT_ONNX_TRT.test_densenet161": {
  "lineno": 179,
  "symbols_in_volume": [
   "unittest.skip"
  ],
  "type": "function"
 },
 "caffe2.python.trt.test_pt_onnx_trt.Test_PT_ONNX_TRT.test_densenet169": {
  "lineno": 182,
  "symbols_in_volume": [
   "unittest.skip"
  ],
  "type": "function"
 },
 "caffe2.python.trt.test_pt_onnx_trt.Test_PT_ONNX_TRT.test_densenet201": {
  "lineno": 185,
  "symbols_in_volume": [
   "unittest.skip"
  ],
  "type": "function"
 },
 "caffe2.python.trt.test_pt_onnx_trt.Test_PT_ONNX_TRT.test_googlenet": {
  "lineno": 141,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.trt.test_pt_onnx_trt.Test_PT_ONNX_TRT.test_inception_v3": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.trt.test_pt_onnx_trt.Test_PT_ONNX_TRT.test_mnasnet0_5": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.trt.test_pt_onnx_trt.Test_PT_ONNX_TRT.test_mnasnet1_0": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.trt.test_pt_onnx_trt.Test_PT_ONNX_TRT.test_mobilenet_v2": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.trt.test_pt_onnx_trt.Test_PT_ONNX_TRT.test_resnet101": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.trt.test_pt_onnx_trt.Test_PT_ONNX_TRT.test_resnet101_2": {
  "lineno": 132,
  "symbols_in_volume": [
   "unittest.skip"
  ],
  "type": "function"
 },
 "caffe2.python.trt.test_pt_onnx_trt.Test_PT_ONNX_TRT.test_resnet152": {
  "lineno": 126,
  "symbols_in_volume": [
   "unittest.skip"
  ],
  "type": "function"
 },
 "caffe2.python.trt.test_pt_onnx_trt.Test_PT_ONNX_TRT.test_resnet18": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.trt.test_pt_onnx_trt.Test_PT_ONNX_TRT.test_resnet34": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.trt.test_pt_onnx_trt.Test_PT_ONNX_TRT.test_resnet50": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.trt.test_pt_onnx_trt.Test_PT_ONNX_TRT.test_resnet50_2": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.trt.test_pt_onnx_trt.Test_PT_ONNX_TRT.test_shufflenet_v2_x0_5": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.trt.test_pt_onnx_trt.Test_PT_ONNX_TRT.test_shufflenet_v2_x1_0": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.trt.test_pt_onnx_trt.Test_PT_ONNX_TRT.test_squeezenet1_0": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.trt.test_pt_onnx_trt.Test_PT_ONNX_TRT.test_squeezenet1_1": {
  "lineno": 138,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.trt.test_pt_onnx_trt.Test_PT_ONNX_TRT.test_vgg11": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.trt.test_pt_onnx_trt.Test_PT_ONNX_TRT.test_vgg11_bn": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.trt.test_pt_onnx_trt.Test_PT_ONNX_TRT.test_vgg13": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.trt.test_pt_onnx_trt.Test_PT_ONNX_TRT.test_vgg13_bn": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.trt.test_pt_onnx_trt.Test_PT_ONNX_TRT.test_vgg16": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.trt.test_pt_onnx_trt.Test_PT_ONNX_TRT.test_vgg16_bn": {
  "lineno": 169,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.trt.test_pt_onnx_trt.Test_PT_ONNX_TRT.test_vgg19": {
  "lineno": 171,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.trt.test_pt_onnx_trt.Test_PT_ONNX_TRT.test_vgg19_bn": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.trt.test_pt_onnx_trt.allocate_buffers": {
  "lineno": 33,
  "symbols_in_volume": [
   "pycuda.driver.Stream",
   "pycuda.driver.mem_alloc",
   "pycuda.driver.pagelocked_empty",
   "tensorrt.float32",
   "tensorrt.nptype",
   "tensorrt.volume"
  ],
  "type": "function"
 },
 "caffe2.python.trt.test_pt_onnx_trt.load_normalized_test_case": {
  "lineno": 43,
  "symbols_in_volume": [
   "PIL.Image.open",
   "numpy.copyto"
  ],
  "type": "function"
 },
 "caffe2.python.trt.test_pt_onnx_trt.load_normalized_test_case.normalize_image": {
  "lineno": 44,
  "symbols_in_volume": [
   "PIL.Image.ANTIALIAS",
   "numpy.asarray",
   "tensorrt.float32",
   "tensorrt.nptype"
  ],
  "type": "function"
 },
 "caffe2.python.trt.test_trt": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.trt.test_trt.TensorRTOpTest": {
  "lineno": 82,
  "symbols_in_volume": [
   "caffe2.python.onnx.tests.test_utils.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.trt.test_trt.TensorRTOpTest._test_onnx_importer": {
  "lineno": 120,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CUDA",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.onnx.backend.run_model",
   "caffe2.python.onnx.workspace.Workspace",
   "caffe2.python.trt.transform.convert_onnx_model_to_trt_op",
   "numpy.float32",
   "numpy.random.randn",
   "numpy.testing.assert_allclose",
   "onnx.backend.base.namedtupledict",
   "onnx.defs.onnx_opset_version",
   "onnx.load"
  ],
  "type": "function"
 },
 "caffe2.python.trt.test_trt.TensorRTOpTest._test_relu_graph": {
  "lineno": 86,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CUDA",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.onnx.backend.run_node",
   "caffe2.python.onnx.workspace.Workspace",
   "caffe2.python.trt.transform.convert_onnx_model_to_trt_op",
   "numpy.testing.assert_almost_equal",
   "onnx.TensorProto.FLOAT",
   "onnx.backend.base.namedtupledict",
   "onnx.helper.make_graph",
   "onnx.helper.make_model",
   "onnx.helper.make_node",
   "onnx.helper.make_tensor_value_info"
  ],
  "type": "function"
 },
 "caffe2.python.trt.test_trt.TensorRTOpTest.setUp": {
  "lineno": 83,
  "symbols_in_volume": [
   "onnx.defs.onnx_opset_version"
  ],
  "type": "function"
 },
 "caffe2.python.trt.test_trt.TensorRTOpTest.test_bvlc_alexnet": {
  "lineno": 148,
  "symbols_in_volume": [
   "caffe2.python.workspace.C.use_trt",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.trt.test_trt.TensorRTOpTest.test_densenet121": {
  "lineno": 152,
  "symbols_in_volume": [
   "unittest.skip"
  ],
  "type": "function"
 },
 "caffe2.python.trt.test_trt.TensorRTOpTest.test_inception_v1": {
  "lineno": 156,
  "symbols_in_volume": [
   "caffe2.python.workspace.C.use_trt",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.trt.test_trt.TensorRTOpTest.test_inception_v2": {
  "lineno": 160,
  "symbols_in_volume": [
   "unittest.skip"
  ],
  "type": "function"
 },
 "caffe2.python.trt.test_trt.TensorRTOpTest.test_relu_graph_big_batch": {
  "lineno": 115,
  "symbols_in_volume": [
   "caffe2.python.workspace.C.use_trt",
   "numpy.float32",
   "numpy.random.randn",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.trt.test_trt.TensorRTOpTest.test_relu_graph_simple": {
  "lineno": 109,
  "symbols_in_volume": [
   "caffe2.python.workspace.C.use_trt",
   "numpy.float32",
   "numpy.random.randn",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.trt.test_trt.TensorRTOpTest.test_resnet50": {
  "lineno": 144,
  "symbols_in_volume": [
   "caffe2.python.workspace.C.use_trt",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.trt.test_trt.TensorRTOpTest.test_shufflenet": {
  "lineno": 164,
  "symbols_in_volume": [
   "unittest.skip"
  ],
  "type": "function"
 },
 "caffe2.python.trt.test_trt.TensorRTOpTest.test_squeezenet": {
  "lineno": 168,
  "symbols_in_volume": [
   "caffe2.python.workspace.C.use_trt",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.trt.test_trt.TensorRTOpTest.test_vgg16": {
  "lineno": 172,
  "symbols_in_volume": [
   "caffe2.python.workspace.C.use_trt",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.trt.test_trt.TensorRTOpTest.test_vgg19": {
  "lineno": 176,
  "symbols_in_volume": [
   "caffe2.python.workspace.C.use_trt",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.trt.test_trt.TensorRTTransformTest": {
  "lineno": 181,
  "symbols_in_volume": [
   "caffe2.python.onnx.tests.test_utils.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.trt.test_trt.TensorRTTransformTest._add_head_tail": {
  "lineno": 185,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.proto.caffe2_pb2.OperatorDef"
  ],
  "type": "function"
 },
 "caffe2.python.trt.test_trt.TensorRTTransformTest.setUp": {
  "lineno": 182,
  "symbols_in_volume": [
   "caffe2.python.models.download.ModelDownloader"
  ],
  "type": "function"
 },
 "caffe2.python.trt.test_trt.TensorRTTransformTest.test_resnet50_core": {
  "lineno": 209,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CUDA",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope",
   "caffe2.python.trt.transform.transform_caffe2_net",
   "caffe2.python.workspace.C.use_trt",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNet",
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.python.workspace.SwitchWorkspace",
   "numpy.float32",
   "numpy.random.randn",
   "numpy.testing.assert_allclose",
   "onnx.backend.base.namedtupledict",
   "time.time",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.trt.test_trt._base_url": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.trt.test_trt._download_onnx_model": {
  "lineno": 45,
  "symbols_in_volume": [
   "shutil.move",
   "six.moves.urllib.request.urlretrieve",
   "tarfile.open",
   "tempfile.NamedTemporaryFile"
  ],
  "type": "function"
 },
 "caffe2.python.trt.test_trt._print_net": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.trt.transform": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.trt.transform._dim_values_to_list": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.trt.transform._get_output_shapes": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.trt.transform._infer_shapes": {
  "lineno": 58,
  "symbols_in_volume": [
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce"
  ],
  "type": "function"
 },
 "caffe2.python.trt.transform.check_gpu_": {
  "lineno": 31,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.get_cuda_version"
  ],
  "type": "function"
 },
 "caffe2.python.trt.transform.convert_onnx_model_to_trt_op": {
  "lineno": 37,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.OperatorDef",
   "caffe2.python._import_c_extension.onnx_to_trt_op"
  ],
  "type": "function"
 },
 "caffe2.python.trt.transform.transform_caffe2_net": {
  "lineno": 76,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.python._import_c_extension.transform_trt",
   "numpy.float32",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "caffe2.python.tt_core": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.tt_core.fc_net_to_tt_net": {
  "lineno": 240,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.tt_core.init_tt_cores": {
  "lineno": 21,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dot",
   "numpy.float32",
   "numpy.linalg.qr",
   "numpy.prod",
   "numpy.random.normal",
   "numpy.random.seed",
   "numpy.sum",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.tt_core.matrix_to_tt": {
  "lineno": 100,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.concatenate",
   "numpy.float32",
   "numpy.prod",
   "numpy.repeat",
   "numpy.reshape",
   "numpy.tile",
   "numpy.transpose",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.tt_core.tt_svd": {
  "lineno": 193,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.dot",
   "numpy.linalg.svd",
   "numpy.reshape",
   "numpy.sum",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.tt_core_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.tt_core_test.TestTTSVD": {
  "lineno": 13,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.tt_core_test.TestTTSVD.test_full_tt_svd": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.tt_core.matrix_to_tt",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.expand_dims",
   "numpy.float32",
   "numpy.linalg.norm",
   "numpy.random.rand",
   "numpy.random.seed",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.utils.ArgsToDict": {
  "lineno": 397,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.utils.BuildUniqueMutexIter": {
  "lineno": 341,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.DataType.INT64",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.core.DeviceScope"
  ],
  "type": "function"
 },
 "caffe2.python.utils.Caffe2TensorToNumpyArray": {
  "lineno": 58,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.TensorProto.DOUBLE",
   "caffe2.proto.caffe2_pb2.TensorProto.FLOAT",
   "caffe2.proto.caffe2_pb2.TensorProto.INT16",
   "caffe2.proto.caffe2_pb2.TensorProto.INT32",
   "caffe2.proto.caffe2_pb2.TensorProto.INT64",
   "caffe2.proto.caffe2_pb2.TensorProto.INT8",
   "caffe2.proto.caffe2_pb2.TensorProto.UINT16",
   "caffe2.proto.caffe2_pb2.TensorProto.UINT8",
   "numpy.asarray",
   "numpy.float32",
   "numpy.float64",
   "numpy.int",
   "numpy.int16",
   "numpy.int64",
   "numpy.int8",
   "numpy.uint16",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "caffe2.python.utils.CaffeBlobToNumpyArray": {
  "lineno": 47,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.utils.ConvertProtoToBinary": {
  "lineno": 238,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.utils.DebugMode": {
  "lineno": 279,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.utils.DebugMode.run": {
  "lineno": 295,
  "symbols_in_volume": [
   "pdb.post_mortem",
   "sys.exc_info",
   "sys.exit"
  ],
  "type": "function"
 },
 "caffe2.python.utils.EnumClassKeyVals": {
  "lineno": 378,
  "symbols_in_volume": [
   "six.string_types"
  ],
  "type": "function"
 },
 "caffe2.python.utils.GetContentFromProto": {
  "lineno": 219,
  "symbols_in_volume": [
   "future.utils.viewitems"
  ],
  "type": "function"
 },
 "caffe2.python.utils.GetContentFromProtoString": {
  "lineno": 227,
  "symbols_in_volume": [
   "future.utils.viewitems",
   "google.protobuf.message.DecodeError"
  ],
  "type": "function"
 },
 "caffe2.python.utils.GetGPUMemoryUsageStats": {
  "lineno": 246,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.GpuDeviceType",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.sum"
  ],
  "type": "function"
 },
 "caffe2.python.utils.MakeArgument": {
  "lineno": 125,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.Argument",
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.python.compatibility.container_abcs.Iterable",
   "google.protobuf.message.Message",
   "numpy.asscalar",
   "numpy.float32",
   "numpy.float_",
   "numpy.generic",
   "numpy.int_",
   "numpy.ndarray",
   "six.binary_type",
   "six.integer_types",
   "six.text_type"
  ],
  "type": "function"
 },
 "caffe2.python.utils.NCHW2NHWC": {
  "lineno": 427,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.utils.NHWC2NCHW": {
  "lineno": 422,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.utils.NumpyArrayToCaffe2Tensor": {
  "lineno": 89,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.TensorProto",
   "caffe2.proto.caffe2_pb2.TensorProto.DOUBLE",
   "caffe2.proto.caffe2_pb2.TensorProto.FLOAT",
   "caffe2.proto.caffe2_pb2.TensorProto.INT16",
   "caffe2.proto.caffe2_pb2.TensorProto.INT32",
   "caffe2.proto.caffe2_pb2.TensorProto.INT64",
   "caffe2.proto.caffe2_pb2.TensorProto.INT8",
   "caffe2.proto.caffe2_pb2.TensorProto.UINT16",
   "caffe2.proto.caffe2_pb2.TensorProto.UINT8",
   "numpy.float32",
   "numpy.float64",
   "numpy.int",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.uint16",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "caffe2.python.utils.OpAlmostEqual": {
  "lineno": 24,
  "symbols_in_volume": [
   "six.text_type"
  ],
  "type": "function"
 },
 "caffe2.python.utils.OpAlmostEqual.clean_op": {
  "lineno": 35,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "caffe2.python.utils.ResetBlobs": {
  "lineno": 267,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.workspace.RunOperatorOnce"
  ],
  "type": "function"
 },
 "caffe2.python.utils.TryReadProtoWithClass": {
  "lineno": 197,
  "symbols_in_volume": [
   "google.protobuf.text_format.Parse",
   "google.protobuf.text_format.ParseError"
  ],
  "type": "function"
 },
 "caffe2.python.utils.debug": {
  "lineno": 320,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.utils.debug.wrapper": {
  "lineno": 332,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "caffe2.python.utils.debug.wrapper.func": {
  "lineno": 334,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.utils.raiseIfNotEqual": {
  "lineno": 315,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.utils_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.utils_test.TestUtils": {
  "lineno": 11,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.utils_test.TestUtils.testArgsToDict": {
  "lineno": 12,
  "symbols_in_volume": [
   "caffe2.python.utils.ArgsToDict",
   "caffe2.python.utils.MakeArgument",
   "numpy.array"
  ],
  "type": "function"
 },
 "caffe2.python.utils_test.TestUtils.testBuildUniqueMutexIter": {
  "lineno": 29,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.utils.BuildUniqueMutexIter"
  ],
  "type": "function"
 },
 "caffe2.python.visualize": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.python.visualize.ChannelFirst": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.visualize.ChannelLast": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.visualize.NCHW": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.visualize.NCHW.ShowChannels": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.visualize.NCHW.ShowImages": {
  "lineno": 169,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.visualize.NCHW.ShowMultiple": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.visualize.NCHW.ShowSingle": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.visualize.NHWC": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.visualize.NHWC.ShowChannels": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.visualize.NHWC.ShowImages": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.visualize.NHWC.ShowMultiple": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.visualize.NHWC.ShowSingle": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.visualize.PatchVisualizer": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.visualize.PatchVisualizer.ShowChannels": {
  "lineno": 104,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.swapaxes"
  ],
  "type": "function"
 },
 "caffe2.python.visualize.PatchVisualizer.ShowImages": {
  "lineno": 96,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.float64",
   "numpy.max",
   "numpy.min"
  ],
  "type": "function"
 },
 "caffe2.python.visualize.PatchVisualizer.ShowMultiple": {
  "lineno": 52,
  "symbols_in_volume": [
   "matplotlib.cm.gray",
   "matplotlib.pyplot.axis",
   "matplotlib.pyplot.imshow",
   "numpy.array",
   "numpy.ceil",
   "numpy.mean",
   "numpy.ones",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "caffe2.python.visualize.PatchVisualizer.ShowSingle": {
  "lineno": 35,
  "symbols_in_volume": [
   "matplotlib.cm.gray",
   "matplotlib.pyplot.imshow"
  ],
  "type": "function"
 },
 "caffe2.python.visualize.PatchVisualizer.__init__": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.visualize.PatchVisualizer.get_patch_shape": {
  "lineno": 115,
  "symbols_in_volume": [
   "numpy.floor",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "caffe2.python.workspace": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CUDA",
   "caffe2.proto.caffe2_pb2.HIP",
   "caffe2.python._import_c_extension.Blob.feed",
   "caffe2.python._import_c_extension.Blob.to_torch",
   "caffe2.python._import_c_extension.TensorCPU.to_torch",
   "caffe2.python._import_c_extension.Workspace",
   "caffe2.python._import_c_extension.Workspace.fetch_int8_blob",
   "caffe2.python._import_c_extension.benchmark_net",
   "caffe2.python._import_c_extension.benchmark_net_once",
   "caffe2.python._import_c_extension.blobs",
   "caffe2.python._import_c_extension.create_blob",
   "caffe2.python._import_c_extension.create_offline_tensor",
   "caffe2.python._import_c_extension.current_workspace",
   "caffe2.python._import_c_extension.deserialize_blob",
   "caffe2.python._import_c_extension.get_blob_numa_node",
   "caffe2.python._import_c_extension.get_blob_size_bytes",
   "caffe2.python._import_c_extension.get_cuda_version",
   "caffe2.python._import_c_extension.get_cudnn_version",
   "caffe2.python._import_c_extension.get_device_properties",
   "caffe2.python._import_c_extension.get_gpu_memory_info",
   "caffe2.python._import_c_extension.get_hip_version",
   "caffe2.python._import_c_extension.get_num_numa_nodes",
   "caffe2.python._import_c_extension.get_stats",
   "caffe2.python._import_c_extension.global_init",
   "caffe2.python._import_c_extension.has_blob",
   "caffe2.python._import_c_extension.has_cuda_support",
   "caffe2.python._import_c_extension.has_gpu_support",
   "caffe2.python._import_c_extension.has_hip_support",
   "caffe2.python._import_c_extension.is_asan",
   "caffe2.python._import_c_extension.is_numa_enabled",
   "caffe2.python._import_c_extension.num_cuda_devices",
   "caffe2.python._import_c_extension.num_hip_devices",
   "caffe2.python._import_c_extension.registered_operators",
   "caffe2.python._import_c_extension.reset_blob",
   "caffe2.python._import_c_extension.root_folder",
   "caffe2.python._import_c_extension.serialize_blob",
   "caffe2.python._import_c_extension.switch_workspace",
   "caffe2.python._import_c_extension.workspaces",
   "collections.defaultdict",
   "collections.namedtuple",
   "logging.getLogger",
   "numpy.array"
  ],
  "type": "module"
 },
 "caffe2.python.workspace.ApplyTransform": {
  "lineno": 455,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.python._import_c_extension.apply_transform"
  ],
  "type": "function"
 },
 "caffe2.python.workspace.ApplyTransformIfFaster": {
  "lineno": 474,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.python._import_c_extension.apply_transform_if_faster"
  ],
  "type": "function"
 },
 "caffe2.python.workspace.CallWithExceptionIntercept": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.workspace.ClearGlobalNetObserver": {
  "lineno": 214,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.clear_global_net_observer"
  ],
  "type": "function"
 },
 "caffe2.python.workspace.CreateNet": {
  "lineno": 176,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.Workspace.current._last_failed_op_net_position",
   "caffe2.python._import_c_extension.create_blob",
   "caffe2.python._import_c_extension.create_net",
   "caffe2.python.lazy.TriggerLazyImport"
  ],
  "type": "function"
 },
 "caffe2.python.workspace.FeedBlob": {
  "lineno": 345,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.Workspace.current"
  ],
  "type": "function"
 },
 "caffe2.python.workspace.FeedImmediate": {
  "lineno": 660,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.workspace.FetchBlob": {
  "lineno": 371,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.fetch_blob"
  ],
  "type": "function"
 },
 "caffe2.python.workspace.FetchBlobs": {
  "lineno": 360,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.workspace.FetchImmediate": {
  "lineno": 655,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.workspace.FetchInt8Blob": {
  "lineno": 399,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.fetch_blob"
  ],
  "type": "function"
 },
 "caffe2.python.workspace.FetchInt8BlobRealVal": {
  "lineno": 417,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.fetch_blob",
   "numpy.float32",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.python.workspace.FetchTorch": {
  "lineno": 389,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.Workspace.current"
  ],
  "type": "function"
 },
 "caffe2.python.workspace.FillRandomNetworkInputs": {
  "lineno": 95,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.fill_random_network_inputs"
  ],
  "type": "function"
 },
 "caffe2.python.workspace.GetGpuPeerAccessPattern": {
  "lineno": 75,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.get_hip_peer_access_pattern",
   "numpy.asarray"
  ],
  "type": "function"
 },
 "caffe2.python.workspace.GetNameScope": {
  "lineno": 517,
  "symbols_in_volume": [
   "caffe2.python.scope.CurrentNameScope"
  ],
  "type": "function"
 },
 "caffe2.python.workspace.GetNetName": {
  "lineno": 335,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "past.builtins.basestring"
  ],
  "type": "function"
 },
 "caffe2.python.workspace.GetOperatorCost": {
  "lineno": 194,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.get_operator_cost"
  ],
  "type": "function"
 },
 "caffe2.python.workspace.ImmediateBlobs": {
  "lineno": 645,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.workspace.InferShapesAndTypes": {
  "lineno": 279,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.TensorShapes",
   "caffe2.python._import_c_extension.infer_shapes_and_types_from_map",
   "caffe2.python._import_c_extension.infer_shapes_and_types_from_workspace"
  ],
  "type": "function"
 },
 "caffe2.python.workspace.IsImmediate": {
  "lineno": 569,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.workspace.Predictor": {
  "lineno": 190,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.Predictor"
  ],
  "type": "function"
 },
 "caffe2.python.workspace.ResetWorkspace": {
  "lineno": 166,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.reset_workspace",
   "caffe2.python._import_c_extension.root_folder",
   "os.makedirs",
   "os.path.exists"
  ],
  "type": "function"
 },
 "caffe2.python.workspace.RunNet": {
  "lineno": 245,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.Workspace.current._last_failed_op_net_position",
   "caffe2.python._import_c_extension.run_net"
  ],
  "type": "function"
 },
 "caffe2.python.workspace.RunNetOnce": {
  "lineno": 236,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.Workspace.current._last_failed_op_net_position",
   "caffe2.python._import_c_extension.run_net_once"
  ],
  "type": "function"
 },
 "caffe2.python.workspace.RunOperatorImmediate": {
  "lineno": 650,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.workspace.RunOperatorMultiple": {
  "lineno": 202,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.run_operator_multiple"
  ],
  "type": "function"
 },
 "caffe2.python.workspace.RunOperatorOnce": {
  "lineno": 198,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.run_operator_once"
  ],
  "type": "function"
 },
 "caffe2.python.workspace.RunOperatorsOnce": {
  "lineno": 206,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.workspace.RunPlan": {
  "lineno": 263,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.run_plan",
   "caffe2.python.core.ExecutionStep",
   "caffe2.python.core.Plan"
  ],
  "type": "function"
 },
 "caffe2.python.workspace.RunPlanInBackground": {
  "lineno": 271,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.run_plan_in_background",
   "caffe2.python.core.ExecutionStep",
   "caffe2.python.core.Plan"
  ],
  "type": "function"
 },
 "caffe2.python.workspace.StartImmediate": {
  "lineno": 581,
  "symbols_in_volume": [
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "caffe2.python.workspace.StartMint": {
  "lineno": 117,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.root_folder",
   "caffe2.python.mint.app.main",
   "multiprocessing.Process",
   "socket.getfqdn"
  ],
  "type": "function"
 },
 "caffe2.python.workspace.StopImmediate": {
  "lineno": 631,
  "symbols_in_volume": [
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "caffe2.python.workspace.StringifyBlobName": {
  "lineno": 327,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.workspace.StringifyNetName": {
  "lineno": 331,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.workspace.StringifyProto": {
  "lineno": 141,
  "symbols_in_volume": [
   "google.protobuf.message.Message",
   "past.builtins.basestring"
  ],
  "type": "function"
 },
 "caffe2.python.workspace.WorkspaceGuard": {
  "lineno": 573,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "caffe2.python.workspace._BlobDict": {
  "lineno": 522,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.workspace._BlobDict.__contains__": {
  "lineno": 537,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.has_blob"
  ],
  "type": "function"
 },
 "caffe2.python.workspace._BlobDict.__getitem__": {
  "lineno": 525,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.workspace._BlobDict.__iter__": {
  "lineno": 534,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.blobs"
  ],
  "type": "function"
 },
 "caffe2.python.workspace._BlobDict.__len__": {
  "lineno": 531,
  "symbols_in_volume": [
   "caffe2.python._import_c_extension.blobs"
  ],
  "type": "function"
 },
 "caffe2.python.workspace._BlobDict.__setitem__": {
  "lineno": 528,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.workspace._Blob_feed": {
  "lineno": 734,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._C._tensor_impl_raw_handle"
  ],
  "type": "function"
 },
 "caffe2.python.workspace._Blob_to_torch": {
  "lineno": 767,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.workspace._GetFreeFlaskPort": {
  "lineno": 99,
  "symbols_in_volume": [
   "socket.AF_INET",
   "socket.SOCK_STREAM",
   "socket.socket"
  ],
  "type": "function"
 },
 "caffe2.python.workspace._StringifyName": {
  "lineno": 319,
  "symbols_in_volume": [
   "past.builtins.basestring"
  ],
  "type": "function"
 },
 "caffe2.python.workspace._Tensor_to_torch": {
  "lineno": 752,
  "symbols_in_volume": [
   "torch._C._wrap_tensor_impl"
  ],
  "type": "function"
 },
 "caffe2.python.workspace._Workspace_create_net_with_exception_intercept": {
  "lineno": 667,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.workspace._Workspace_feed_blob": {
  "lineno": 695,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CUDA",
   "caffe2.proto.caffe2_pb2.TensorProto",
   "caffe2.python.scope.CurrentDeviceScope",
   "caffe2.python.utils.Caffe2TensorToNumpyArray",
   "numpy.dtype",
   "numpy.ndarray",
   "numpy.object"
  ],
  "type": "function"
 },
 "caffe2.python.workspace._Workspace_fetch_int8_blob": {
  "lineno": 434,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.workspace._Workspace_remove_blob": {
  "lineno": 721,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.python.workspace._Workspace_run": {
  "lineno": 676,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.proto.caffe2_pb2.OperatorDef",
   "caffe2.proto.caffe2_pb2.PlanDef"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "caffe2.python.workspace_test.MyModule": {
  "lineno": 704,
  "symbols_in_volume": [
   "torch.jit.ScriptModule"
  ],
  "type": "class"
 },
 "caffe2.python.workspace_test.MyModule.__init__": {
  "lineno": 705,
  "symbols_in_volume": [
   "torch.nn.Parameter",
   "torch.tensor"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.MyModule.forward": {
  "lineno": 709,
  "symbols_in_volume": [
   "torch.jit.script_method"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.MyModule.multi_input": {
  "lineno": 713,
  "symbols_in_volume": [
   "torch.jit.script_method"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.MyModule.multi_output": {
  "lineno": 718,
  "symbols_in_volume": [
   "torch.jit.script_method"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestCWorkspace": {
  "lineno": 468,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.workspace_test.TestCWorkspace.test_array_serde": {
  "lineno": 547,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.device_options",
   "caffe2.python.hypothesis_test_util.tensor",
   "caffe2.python.workspace.C.Workspace",
   "hypothesis.given",
   "hypothesis.strategies.sampled_from",
   "hypothesis.strategies.text",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestCWorkspace.test_exception": {
  "lineno": 572,
  "symbols_in_volume": [
   "caffe2.python.workspace.C.Workspace"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestCWorkspace.test_net_create": {
  "lineno": 534,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.C.Workspace",
   "hypothesis.given",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.text",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestCWorkspace.test_net_execution": {
  "lineno": 469,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.C.Workspace",
   "numpy.float32",
   "numpy.ones",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestCWorkspace.test_net_run": {
  "lineno": 503,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.C.Workspace",
   "hypothesis.given",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.text",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestCWorkspace.test_operator_run": {
  "lineno": 493,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.C.Workspace",
   "hypothesis.given",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.text",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestCWorkspace.test_plan_run": {
  "lineno": 516,
  "symbols_in_volume": [
   "caffe2.python.core.ExecutionStep",
   "caffe2.python.core.Net",
   "caffe2.python.core.Plan",
   "caffe2.python.workspace.C.Workspace",
   "hypothesis.given",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.text",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestCWorkspace.test_string_serde": {
  "lineno": 560,
  "symbols_in_volume": [
   "caffe2.python.workspace.C.Workspace",
   "hypothesis.given",
   "hypothesis.strategies.text"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestCppEnforceAsException": {
  "lineno": 461,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.workspace_test.TestCppEnforceAsException.testEnforce": {
  "lineno": 462,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.RunOperatorOnce"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestImmedibate": {
  "lineno": 420,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.workspace_test.TestImmedibate.testImmediateEnterExit": {
  "lineno": 421,
  "symbols_in_volume": [
   "caffe2.python.workspace.IsImmediate",
   "caffe2.python.workspace.StartImmediate",
   "caffe2.python.workspace.StopImmediate"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestImmedibate.testImmediateRootFolder": {
  "lineno": 447,
  "symbols_in_volume": [
   "caffe2.python.workspace.StartImmediate",
   "caffe2.python.workspace.StopImmediate",
   "caffe2.python.workspace._immediate_root_folder",
   "os.path.exists",
   "os.path.isdir"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestImmedibate.testImmediateRunsCorrectly": {
  "lineno": 427,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.FeedImmediate",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.FetchImmediate",
   "caffe2.python.workspace.ImmediateBlobs",
   "caffe2.python.workspace.StartImmediate",
   "caffe2.python.workspace.StopImmediate",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestMultiWorkspaces": {
  "lineno": 315,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.workspace_test.TestMultiWorkspaces.setUp": {
  "lineno": 316,
  "symbols_in_volume": [
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.SwitchWorkspace"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestMultiWorkspaces.testCreateWorkspace": {
  "lineno": 320,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.HasBlob",
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.python.workspace.SwitchWorkspace",
   "caffe2.python.workspace.Workspaces"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestPredictor": {
  "lineno": 579,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.workspace_test.TestPredictor._create_model": {
  "lineno": 580,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.model_helper.ModelHelper"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestPredictor.test_predictor_memory_model": {
  "lineno": 608,
  "symbols_in_volume": [
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.Predictor",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.StringifyProto",
   "numpy.array",
   "numpy.testing.assert_array_almost_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestScriptModule": {
  "lineno": 723,
  "symbols_in_volume": [
   "caffe2.python.core._REGISTERED_OPERATORS",
   "caffe2.python.test_util.TestCase",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.workspace_test.TestScriptModule._createFeedModule": {
  "lineno": 727,
  "symbols_in_volume": [
   "caffe2.python.workspace.FeedBlob"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestScriptModule.testCreation": {
  "lineno": 730,
  "symbols_in_volume": [
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestScriptModule.testForward": {
  "lineno": 736,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.array",
   "numpy.float32",
   "numpy.matmul",
   "numpy.random.rand",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestScriptModule.testMultiInputOutput": {
  "lineno": 744,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestScriptModule.testSerialization": {
  "lineno": 756,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.HasBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.array",
   "numpy.float32",
   "numpy.matmul",
   "numpy.random.rand",
   "numpy.testing.assert_almost_equal",
   "os.path.join",
   "shutil.rmtree",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestScriptModuleFromString": {
  "lineno": 794,
  "symbols_in_volume": [],
  "type": "class"
 },
 "caffe2.python.workspace_test.TestScriptModuleFromString._createFeedModule": {
  "lineno": 795,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.RunOperatorOnce"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestScriptModuleFromString._get_modules_bytes": {
  "lineno": 801,
  "symbols_in_volume": [
   "io.BytesIO",
   "torch.jit.save"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestTransform": {
  "lineno": 622,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.python.workspace_test.TestTransform.test_apply_transform_if_faster": {
  "lineno": 660,
  "symbols_in_volume": [
   "caffe2.python.brew.conv",
   "caffe2.python.core.Net",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.ApplyTransformIfFaster",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.floats"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestTransform.test_registry_invalid": {
  "lineno": 648,
  "symbols_in_volume": [
   "caffe2.python.brew.fc",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.ApplyTransform",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestTransform.test_simple_transform": {
  "lineno": 623,
  "symbols_in_volume": [
   "caffe2.python.brew.conv",
   "caffe2.python.brew.fc",
   "caffe2.python.model_helper.ModelHelper",
   "caffe2.python.workspace.ApplyTransform",
   "hypothesis.given",
   "hypothesis.strategies.integers"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspace": {
  "lineno": 21,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "caffe2.python.workspace_test.TestWorkspace.setUp": {
  "lineno": 22,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.ResetWorkspace"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspace.testConstructPlanFromSteps": {
  "lineno": 98,
  "symbols_in_volume": [
   "caffe2.python.core.ExecutionStep",
   "caffe2.python.workspace.HasBlob",
   "caffe2.python.workspace.RunPlan"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspace.testCurrentWorkspaceWrapper": {
  "lineno": 73,
  "symbols_in_volume": [
   "caffe2.python.workspace.C.Workspace.current.blobs",
   "caffe2.python.workspace.HasBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNetOnce"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspace.testFetchBlobs": {
  "lineno": 267,
  "symbols_in_volume": [
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlobs"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspace.testFetchFeedBlob": {
  "lineno": 156,
  "symbols_in_volume": [
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspace.testFetchFeedBlobBool": {
  "lineno": 197,
  "symbols_in_volume": [
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "numpy.bool",
   "numpy.testing.assert_array_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspace.testFetchFeedBlobTypes": {
  "lineno": 182,
  "symbols_in_volume": [
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "numpy.bool",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.iinfo",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.random.rand",
   "numpy.testing.assert_array_equal",
   "numpy.uint16",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspace.testFetchFeedBlobViaBlobReference": {
  "lineno": 169,
  "symbols_in_volume": [
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspace.testFetchFeedBlobZeroDim": {
  "lineno": 231,
  "symbols_in_volume": [
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "numpy.empty",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspace.testFetchFeedLongStringTensor": {
  "lineno": 238,
  "symbols_in_volume": [
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "numpy.array"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspace.testFetchFeedPlainString": {
  "lineno": 260,
  "symbols_in_volume": [
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspace.testFetchFeedShortStringTensor": {
  "lineno": 251,
  "symbols_in_volume": [
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "numpy.array"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspace.testFetchFeedViaBlobDict": {
  "lineno": 276,
  "symbols_in_volume": [
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.python.workspace.blobs",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspace.testGetBlobSizeBytes": {
  "lineno": 207,
  "symbols_in_volume": [
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.GetBlobSizeBytes",
   "numpy.array",
   "numpy.bool",
   "numpy.dtype",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.random.randn",
   "numpy.uint16",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspace.testGetOperatorCost": {
  "lineno": 49,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.GetOperatorCost",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspace.testResetWorkspace": {
  "lineno": 103,
  "symbols_in_volume": [
   "caffe2.python.workspace.HasBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNetOnce"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspace.testRootFolder": {
  "lineno": 28,
  "symbols_in_volume": [
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RootFolder"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspace.testRunNetOnce": {
  "lineno": 68,
  "symbols_in_volume": [
   "caffe2.python.workspace.HasBlob",
   "caffe2.python.workspace.RunNetOnce"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspace.testRunOperatorOnce": {
  "lineno": 38,
  "symbols_in_volume": [
   "caffe2.python.workspace.Blobs",
   "caffe2.python.workspace.HasBlob",
   "caffe2.python.workspace.RunOperatorOnce"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspace.testRunPlan": {
  "lineno": 82,
  "symbols_in_volume": [
   "caffe2.python.core.ExecutionStep",
   "caffe2.python.core.Plan",
   "caffe2.python.workspace.HasBlob",
   "caffe2.python.workspace.RunPlan"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspace.testRunPlanInBackground": {
  "lineno": 89,
  "symbols_in_volume": [
   "caffe2.python.core.ExecutionStep",
   "caffe2.python.core.Plan",
   "caffe2.python.workspace.HasBlob",
   "caffe2.python.workspace.RunPlanInBackground"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspace.testTensorAccess": {
  "lineno": 110,
  "symbols_in_volume": [
   "caffe2.python.core.DataType.INT32",
   "caffe2.python.core.DataType.STRING",
   "caffe2.python.workspace.C.Workspace",
   "numpy.array",
   "numpy.int32",
   "numpy.object",
   "numpy.testing.assert_array_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspace.testTorchInterop": {
  "lineno": 295,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.FetchTorch",
   "caffe2.python.workspace.RunOperatorOnce",
   "numpy.array",
   "numpy.testing.assert_array_equal",
   "torch.int64",
   "torch.ones"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspace.testWorkspaceHasBlobWithNonexistingName": {
  "lineno": 35,
  "symbols_in_volume": [
   "caffe2.python.workspace.HasBlob"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspaceGPU": {
  "lineno": 345,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase",
   "caffe2.python.workspace.has_gpu_support",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.workspace_test.TestWorkspaceGPU.setUp": {
  "lineno": 348,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.ResetWorkspace"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspaceGPU.testFetchBlobGPU": {
  "lineno": 354,
  "symbols_in_volume": [
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspaceGPU.testGetGpuPeerAccessPattern": {
  "lineno": 367,
  "symbols_in_volume": [
   "caffe2.python.workspace.GetGpuPeerAccessPattern",
   "caffe2.python.workspace.NumGpuDevices",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspaceGPU.testTorchInterop": {
  "lineno": 374,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.FetchTorch",
   "caffe2.python.workspace.GpuDeviceType",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunOperatorOnce",
   "caffe2.python.workspace.has_cuda_support",
   "numpy.array",
   "numpy.testing.assert_array_equal",
   "torch.cuda.memory_allocated",
   "torch.int64",
   "torch.ones",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspaceIDEEP": {
  "lineno": 410,
  "symbols_in_volume": [
   "caffe2.python.test_util.TestCase",
   "caffe2.python.workspace.C.use_mkldnn",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "caffe2.python.workspace_test.TestWorkspaceIDEEP.testFeedFetchBlobIDEEP": {
  "lineno": 413,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.IDEEP",
   "caffe2.python.core.DeviceOption",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "numpy.float32",
   "numpy.random.randn",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "caffe2.quantization": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.quantization.server": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.quantization.server.batch_matmul_dnnlowp_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.dyndep.InitOpsLibrary",
   "caffe2.python.workspace.GlobalInit"
  ],
  "type": "module"
 },
 "caffe2.quantization.server.batch_matmul_dnnlowp_op_test.DNNLowPBatchMatMulOpTest": {
  "lineno": 22,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.quantization.server.batch_matmul_dnnlowp_op_test.DNNLowPBatchMatMulOpTest.test_dnnlowp_batch_matmul_int": {
  "lineno": 24,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.quantization.server.dnnlowp_test_utils.avoid_vpmaddubsw_overflow_fc",
   "caffe2.quantization.server.dnnlowp_test_utils.check_quantized_results_close",
   "collections.namedtuple",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "itertools.product",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.round",
   "numpy.transpose"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.batch_matmul_dnnlowp_op_test.DNNLowPBatchMatMulOpTest.test_dnnlowp_batch_matmul_int_constant_B": {
  "lineno": 116,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.quantization.server.dnnlowp_test_utils.avoid_vpmaddubsw_overflow_fc",
   "caffe2.quantization.server.dnnlowp_test_utils.check_quantized_results_close",
   "caffe2.quantization.server.utils.add_quantization_param_args",
   "caffe2.quantization.server.utils.create_int8_given_tensor_fill",
   "collections.namedtuple",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "itertools.product",
   "numpy.float32",
   "numpy.ndindex",
   "numpy.prod",
   "numpy.random.rand",
   "numpy.random.randint",
   "numpy.round",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.batch_permutation_dnnlowp_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.dyndep.InitOpsLibrary",
   "caffe2.python.workspace.GlobalInit"
  ],
  "type": "module"
 },
 "caffe2.quantization.server.batch_permutation_dnnlowp_op_test.DNNLowPBatchPermutationOpTest": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.quantization.server.batch_permutation_dnnlowp_op_test.DNNLowPBatchPermutationOpTest.test_batch_permutation": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchInt8Blob",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.arange",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand",
   "numpy.random.shuffle",
   "numpy.round",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.batch_permutation_dnnlowp_op_test.DNNLowPBatchPermutationOpTest.test_batch_permutation.batch_permutation_ref": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.channel_shuffle_dnnlowp_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.dyndep.InitOpsLibrary",
   "caffe2.python.workspace.GlobalInit"
  ],
  "type": "module"
 },
 "caffe2.quantization.server.channel_shuffle_dnnlowp_op_test.DNNLowPChannelShuffleOpsTest": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.quantization.server.channel_shuffle_dnnlowp_op_test.DNNLowPChannelShuffleOpsTest.test_channel_shuffle": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.utils.NCHW2NHWC",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.round",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.channel_shuffle_dnnlowp_op_test.DNNLowPChannelShuffleOpsTest.test_channel_shuffle.channel_shuffle_ref": {
  "lineno": 54,
  "symbols_in_volume": [
   "caffe2.python.utils.NCHW2NHWC",
   "caffe2.python.utils.NHWC2NCHW"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.channel_shuffle_dnnlowp_op_test.DNNLowPChannelShuffleOpsTest.test_channel_shuffle_fast_path": {
  "lineno": 69,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.utils.NCHW2NHWC",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.round",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.channel_shuffle_dnnlowp_op_test.DNNLowPChannelShuffleOpsTest.test_channel_shuffle_fast_path.channel_shuffle_ref": {
  "lineno": 107,
  "symbols_in_volume": [
   "caffe2.python.utils.NCHW2NHWC",
   "caffe2.python.utils.NHWC2NCHW"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.compute_equalization_scale_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.quantization.server.compute_equalization_scale_test.TestComputeEqualizationScaleOp": {
  "lineno": 25,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.quantization.server.compute_equalization_scale_test.TestComputeEqualizationScaleOp.test_compute_equalization_scale": {
  "lineno": 26,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.seed",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.compute_equalization_scale_test.TestComputeEqualizationScaleOp.test_compute_equalization_scale.ref_compute_equalization_scale": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.absolute",
   "numpy.ones",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.compute_equalization_scale_test.TestComputeEqualizationScaleOp.test_compute_equalization_scale_shape_inference": {
  "lineno": 67,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.DataType.FLOAT",
   "caffe2.python.core.Net",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.InferShapesAndTypes",
   "numpy.array",
   "numpy.float32"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.concat_dnnlowp_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.dyndep.InitOpsLibrary",
   "caffe2.python.workspace.GlobalInit"
  ],
  "type": "module"
 },
 "caffe2.quantization.server.concat_dnnlowp_op_test.DNNLowPConcatOpTest": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.quantization.server.concat_dnnlowp_op_test.DNNLowPConcatOpTest.test_dnnlowp_concat_int": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.quantization.server.dnnlowp_test_utils.check_quantized_results_close",
   "collections.namedtuple",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.round"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.conv_depthwise_dnnlowp_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.dyndep.InitOpsLibrary",
   "caffe2.python.workspace.GlobalInit"
  ],
  "type": "module"
 },
 "caffe2.quantization.server.conv_depthwise_dnnlowp_op_test.DNNLowPOpConvDepthWiseTest": {
  "lineno": 22,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.quantization.server.conv_depthwise_dnnlowp_op_test.DNNLowPOpConvDepthWiseTest.test_dnnlowp_depthwise_3x3_conv": {
  "lineno": 23,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.quantization.server.dnnlowp_test_utils.check_quantized_results_close",
   "caffe2.quantization.server.dnnlowp_test_utils.generate_conv_inputs",
   "caffe2.quantization.server.dnnlowp_test_utils.run_conv_or_fc",
   "caffe2.quantization.server.utils.add_quantization_param_args",
   "caffe2.quantization.server.utils.choose_quantization_params",
   "collections.namedtuple",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.conv_depthwise_dnnlowp_op_test.DNNLowPOpConvDepthWiseTest.test_dnnlowp_depthwise_3x3x3_conv": {
  "lineno": 176,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.quantization.server.dnnlowp_test_utils.check_quantized_results_close",
   "caffe2.quantization.server.dnnlowp_test_utils.generate_convnd_inputs",
   "caffe2.quantization.server.dnnlowp_test_utils.run_conv_or_fc",
   "caffe2.quantization.server.utils.add_quantization_param_args",
   "caffe2.quantization.server.utils.choose_quantization_params",
   "collections.namedtuple",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.just",
   "hypothesis.strategies.sampled_from"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.conv_dnnlowp_acc16_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.dyndep.InitOpsLibrary",
   "caffe2.python.workspace.GlobalInit"
  ],
  "type": "module"
 },
 "caffe2.quantization.server.conv_dnnlowp_acc16_op_test.DNNLowPOpConvAcc16OpTest": {
  "lineno": 28,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.quantization.server.conv_dnnlowp_acc16_op_test.DNNLowPOpConvAcc16OpTest.test_dnnlowp_conv_acc16_int": {
  "lineno": 30,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.quantization.server.dnnlowp_test_utils.check_quantized_results_close",
   "caffe2.quantization.server.dnnlowp_test_utils.run_conv_or_fc",
   "caffe2.quantization.server.utils.NHWC2NCHW",
   "caffe2.quantization.server.utils.add_quantization_param_args",
   "caffe2.quantization.server.utils.choose_quantization_params",
   "caffe2.quantization.server.utils.create_int8_bias_tensor_fill",
   "caffe2.quantization.server.utils.create_int8_given_tensor_fill",
   "collections.namedtuple",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.randn",
   "numpy.round"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.conv_dnnlowp_acc16_op_test.DNNLowPOpConvAcc16OpTest.test_dnnlowp_conv_acc16_outlier": {
  "lineno": 205,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.quantization.server.dnnlowp_test_utils.check_quantized_results_close",
   "caffe2.quantization.server.dnnlowp_test_utils.run_conv_or_fc",
   "caffe2.quantization.server.utils.NHWC2NCHW",
   "caffe2.quantization.server.utils.add_quantization_param_args",
   "caffe2.quantization.server.utils.choose_quantization_params",
   "caffe2.quantization.server.utils.create_int8_bias_tensor_fill",
   "caffe2.quantization.server.utils.create_int8_given_tensor_fill",
   "collections.namedtuple",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.randn",
   "numpy.round"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.conv_dnnlowp_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.dyndep.InitOpsLibrary",
   "caffe2.python.workspace.GlobalInit"
  ],
  "type": "module"
 },
 "caffe2.quantization.server.conv_dnnlowp_op_test.DNNLowPOpConvTest": {
  "lineno": 22,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.quantization.server.conv_dnnlowp_op_test.DNNLowPOpConvTest._test_dnnlowp_nd_int": {
  "lineno": 311,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.quantization.server.dnnlowp_test_utils.check_quantized_results_close",
   "caffe2.quantization.server.dnnlowp_test_utils.generate_convnd_inputs",
   "caffe2.quantization.server.dnnlowp_test_utils.run_conv_or_fc",
   "caffe2.quantization.server.utils.add_quantization_param_args",
   "caffe2.quantization.server.utils.choose_quantization_params",
   "caffe2.quantization.server.utils.create_int8_bias_tensor_fill",
   "caffe2.quantization.server.utils.create_int8_given_tensor_fill",
   "collections.namedtuple",
   "hypothesis.assume"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.conv_dnnlowp_op_test.DNNLowPOpConvTest.test_dnnlowp_conv1d_int": {
  "lineno": 490,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.conv_dnnlowp_op_test.DNNLowPOpConvTest.test_dnnlowp_conv3d_int": {
  "lineno": 441,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.conv_dnnlowp_op_test.DNNLowPOpConvTest.test_dnnlowp_conv_int": {
  "lineno": 24,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.quantization.server.dnnlowp_test_utils.check_quantized_results_close",
   "caffe2.quantization.server.dnnlowp_test_utils.generate_conv_inputs",
   "caffe2.quantization.server.dnnlowp_test_utils.run_conv_or_fc",
   "caffe2.quantization.server.utils.add_quantization_param_args",
   "caffe2.quantization.server.utils.choose_quantization_params",
   "caffe2.quantization.server.utils.create_int8_bias_tensor_fill",
   "caffe2.quantization.server.utils.create_int8_given_tensor_fill",
   "collections.namedtuple",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.conv_dnnlowp_op_test.DNNLowPOpConvTest.test_dnnlowp_conv_relu_int": {
  "lineno": 198,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.quantization.server.dnnlowp_test_utils.check_quantized_results_close",
   "caffe2.quantization.server.dnnlowp_test_utils.generate_conv_inputs",
   "caffe2.quantization.server.dnnlowp_test_utils.run_conv_or_fc",
   "collections.namedtuple",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.conv_groupwise_dnnlowp_acc16_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.dyndep.InitOpsLibrary",
   "caffe2.python.workspace.GlobalInit"
  ],
  "type": "module"
 },
 "caffe2.quantization.server.conv_groupwise_dnnlowp_acc16_op_test.GroupWiseDNNLowPOpConvAcc16OpTest": {
  "lineno": 28,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.quantization.server.conv_groupwise_dnnlowp_acc16_op_test.GroupWiseDNNLowPOpConvAcc16OpTest.test_groupwise_dnnlowp_conv_acc16_int": {
  "lineno": 30,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.quantization.server.dnnlowp_test_utils.check_quantized_results_close",
   "caffe2.quantization.server.dnnlowp_test_utils.run_conv_or_fc",
   "caffe2.quantization.server.utils.NHWC2NCHW",
   "caffe2.quantization.server.utils.add_quantization_param_args",
   "collections.namedtuple",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.randn",
   "numpy.round"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.conv_groupwise_dnnlowp_acc16_op_test.GroupWiseDNNLowPOpConvAcc16OpTest.test_groupwise_dnnlowp_conv_acc16_outlier": {
  "lineno": 183,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.quantization.server.dnnlowp_test_utils.check_quantized_results_close",
   "caffe2.quantization.server.dnnlowp_test_utils.run_conv_or_fc",
   "caffe2.quantization.server.utils.NHWC2NCHW",
   "caffe2.quantization.server.utils.add_quantization_param_args",
   "caffe2.quantization.server.utils.choose_quantization_params",
   "collections.namedtuple",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.randn",
   "numpy.round"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.conv_groupwise_dnnlowp_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.dyndep.InitOpsLibrary",
   "caffe2.python.workspace.GlobalInit"
  ],
  "type": "module"
 },
 "caffe2.quantization.server.conv_groupwise_dnnlowp_op_test.GroupWiseDNNLowPOpConvTest": {
  "lineno": 22,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.quantization.server.conv_groupwise_dnnlowp_op_test.GroupWiseDNNLowPOpConvTest.test_groupwise_dnnlowp_conv_int": {
  "lineno": 24,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.fb.hardcode_scale_zp.choose_quantization_params",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.quantization.server.dnnlowp_test_utils.check_quantized_results_close",
   "caffe2.quantization.server.dnnlowp_test_utils.generate_conv_inputs",
   "caffe2.quantization.server.dnnlowp_test_utils.run_conv_or_fc",
   "caffe2.quantization.server.utils.add_quantization_param_args",
   "collections.namedtuple",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.conv_groupwise_dnnlowp_op_test.GroupWiseDNNLowPOpConvTest.test_groupwise_dnnlowp_conv_relu_int": {
  "lineno": 176,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.quantization.server.dnnlowp_test_utils.check_quantized_results_close",
   "caffe2.quantization.server.dnnlowp_test_utils.generate_conv_inputs",
   "caffe2.quantization.server.dnnlowp_test_utils.run_conv_or_fc",
   "caffe2.quantization.server.utils.add_quantization_param_args",
   "collections.namedtuple",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.dequantize_dnnlowp_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.dyndep.InitOpsLibrary",
   "caffe2.python.workspace.GlobalInit"
  ],
  "type": "module"
 },
 "caffe2.quantization.server.dequantize_dnnlowp_op_test.DNNLowPDequantizeOpTest": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.quantization.server.dequantize_dnnlowp_op_test.DNNLowPDequantizeOpTest.test_dnnlowp_dequantize": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.quantization.server.dnnlowp_test_utils.check_quantized_results_close",
   "collections.namedtuple",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.dnnlowp_test_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.quantization.server.dnnlowp_test_utils.avoid_vpmaddubsw_overflow": {
  "lineno": 76,
  "symbols_in_volume": [
   "numpy.ndindex"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.dnnlowp_test_utils.avoid_vpmaddubsw_overflow_fc": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.ndindex"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.dnnlowp_test_utils.check_quantized_results_close": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.max",
   "numpy.min",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.dnnlowp_test_utils.generate_conv_inputs": {
  "lineno": 342,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.quantization.server.dnnlowp_test_utils.generate_convnd_inputs": {
  "lineno": 184,
  "symbols_in_volume": [
   "caffe2.python.utils.NHWC2NCHW",
   "hypothesis.assume",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.randn",
   "numpy.round"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.dnnlowp_test_utils.pairwise": {
  "lineno": 33,
  "symbols_in_volume": [
   "itertools.tee"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.dnnlowp_test_utils.run_conv_or_fc": {
  "lineno": 374,
  "symbols_in_volume": [
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.RunNet",
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.python.workspace.WorkspaceGuard",
   "caffe2.quantization.server.dnnlowp_pybind11.CreateInt8QuantParamsBlob",
   "collections.namedtuple"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.elementwise_add_dnnlowp_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.dyndep.InitOpsLibrary",
   "caffe2.python.workspace.GlobalInit"
  ],
  "type": "module"
 },
 "caffe2.quantization.server.elementwise_add_dnnlowp_op_test.DNNLowPAddOpTest": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.quantization.server.elementwise_add_dnnlowp_op_test.DNNLowPAddOpTest.test_dnnlowp_elementwise_add_broadcast": {
  "lineno": 105,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.quantization.server.dnnlowp_test_utils.check_quantized_results_close",
   "collections.namedtuple",
   "hypothesis.given",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.round"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.elementwise_add_dnnlowp_op_test.DNNLowPAddOpTest.test_dnnlowp_elementwise_add_broadcast_axis": {
  "lineno": 147,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.quantization.server.dnnlowp_test_utils.check_quantized_results_close",
   "collections.namedtuple",
   "hypothesis.given",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.round"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.elementwise_add_dnnlowp_op_test.DNNLowPAddOpTest.test_dnnlowp_elementwise_add_int": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.quantization.server.dnnlowp_test_utils.check_quantized_results_close",
   "collections.namedtuple",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.round"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.elementwise_linear_dnnlowp_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.dyndep.InitOpsLibrary",
   "caffe2.python.workspace.GlobalInit"
  ],
  "type": "module"
 },
 "caffe2.quantization.server.elementwise_linear_dnnlowp_op_test.DNNLowPElementwiseLinearOpTest": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.quantization.server.elementwise_linear_dnnlowp_op_test.DNNLowPElementwiseLinearOpTest.test_dnnlowp_elementwise_linear_int": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.quantization.server.dnnlowp_test_utils.check_quantized_results_close",
   "collections.namedtuple",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.round"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.elementwise_mul_dnnlowp_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.dyndep.InitOpsLibrary",
   "caffe2.python.workspace.GlobalInit"
  ],
  "type": "module"
 },
 "caffe2.quantization.server.elementwise_mul_dnnlowp_op_test.DNNLowPMulOpTest": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.quantization.server.elementwise_mul_dnnlowp_op_test.DNNLowPMulOpTest.test_dnnlowp_elementwise_mul_broadcast": {
  "lineno": 102,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.quantization.server.dnnlowp_test_utils.check_quantized_results_close",
   "collections.namedtuple",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.round"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.elementwise_mul_dnnlowp_op_test.DNNLowPMulOpTest.test_dnnlowp_elementwise_mul_broadcast_axis": {
  "lineno": 142,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.quantization.server.dnnlowp_test_utils.check_quantized_results_close",
   "collections.namedtuple",
   "hypothesis.given",
   "hypothesis.settings",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.round"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.elementwise_mul_dnnlowp_op_test.DNNLowPMulOpTest.test_dnnlowp_elementwise_mul_int": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.quantization.server.dnnlowp_test_utils.check_quantized_results_close",
   "collections.namedtuple",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.round"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.elementwise_sum_dnnlowp_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.dyndep.InitOpsLibrary",
   "caffe2.python.workspace.GlobalInit"
  ],
  "type": "module"
 },
 "caffe2.quantization.server.elementwise_sum_dnnlowp_op_test.DNNLowPOpSumOpTest": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.quantization.server.elementwise_sum_dnnlowp_op_test.DNNLowPOpSumOpTest.test_dnnlowp_elementwise_sum_int": {
  "lineno": 19,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.quantization.server.dnnlowp_test_utils.check_quantized_results_close",
   "collections.namedtuple",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.int8",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.elementwise_sum_dnnlowp_op_test.DNNLowPOpSumOpTest.test_dnnlowp_elementwise_sum_int_inplace": {
  "lineno": 87,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.quantization.server.dnnlowp_test_utils.check_quantized_results_close",
   "collections.namedtuple",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.int8",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.elementwise_sum_dnnlowp_op_test.DNNLowPOpSumOpTest.test_dnnlowp_elementwise_sum_relu_int": {
  "lineno": 153,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.quantization.server.dnnlowp_test_utils.check_quantized_results_close",
   "collections.namedtuple",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.int8",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.elementwise_sum_dnnlowp_op_test.DNNLowPOpSumOpTest.test_dnnlowp_elementwise_sum_relu_int_inplace": {
  "lineno": 217,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.quantization.server.dnnlowp_test_utils.check_quantized_results_close",
   "collections.namedtuple",
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.int8",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.fully_connected_dnnlowp_acc16_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.dyndep.InitOpsLibrary",
   "caffe2.python.workspace.GlobalInit"
  ],
  "type": "module"
 },
 "caffe2.quantization.server.fully_connected_dnnlowp_acc16_op_test.DNNLowPFullyConnectedAcc16OpTest": {
  "lineno": 21,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.quantization.server.fully_connected_dnnlowp_acc16_op_test.DNNLowPFullyConnectedAcc16OpTest.test_dnnlowp_fully_connected_acc16_int": {
  "lineno": 24,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.quantization.server.dnnlowp_test_utils.check_quantized_results_close",
   "caffe2.quantization.server.dnnlowp_test_utils.run_conv_or_fc",
   "collections.namedtuple",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.randn",
   "numpy.round"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.fully_connected_dnnlowp_acc16_op_test.DNNLowPFullyConnectedAcc16OpTest.test_dnnlowp_fully_connected_acc16_outlier": {
  "lineno": 117,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.quantization.server.dnnlowp_test_utils.check_quantized_results_close",
   "caffe2.quantization.server.dnnlowp_test_utils.run_conv_or_fc",
   "caffe2.quantization.server.utils.choose_quantization_params",
   "collections.namedtuple",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.randn",
   "numpy.round"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.fully_connected_dnnlowp_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.dyndep.InitOpsLibrary",
   "caffe2.python.workspace.GlobalInit"
  ],
  "type": "module"
 },
 "caffe2.quantization.server.fully_connected_dnnlowp_op_test.DNNLowPFullyConnectedOpTest": {
  "lineno": 22,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.quantization.server.fully_connected_dnnlowp_op_test.DNNLowPFullyConnectedOpTest.test_dnnlowp_fully_connected_int": {
  "lineno": 24,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.DataType.FLOAT",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.workspace.InferShapesAndTypes",
   "caffe2.quantization.server.dnnlowp_test_utils.avoid_vpmaddubsw_overflow_fc",
   "caffe2.quantization.server.dnnlowp_test_utils.check_quantized_results_close",
   "caffe2.quantization.server.dnnlowp_test_utils.run_conv_or_fc",
   "caffe2.quantization.server.utils.add_quantization_param_args",
   "caffe2.quantization.server.utils.choose_quantization_params",
   "caffe2.quantization.server.utils.create_int8_bias_tensor_fill",
   "caffe2.quantization.server.utils.create_int8_given_tensor_fill",
   "collections.namedtuple",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand",
   "numpy.random.randn",
   "numpy.round",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.fully_connected_fp16_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.dyndep.InitOpsLibrary",
   "caffe2.python.workspace.GlobalInit"
  ],
  "type": "module"
 },
 "caffe2.quantization.server.fully_connected_fp16_test.FullyConnectedFP16Test": {
  "lineno": 21,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.quantization.server.fully_connected_fp16_test.FullyConnectedFP16Test.test_fully_connected": {
  "lineno": 22,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "collections.namedtuple",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.abs",
   "numpy.float16",
   "numpy.float32",
   "numpy.isclose",
   "numpy.matmul",
   "numpy.ones",
   "numpy.outer",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.fully_connected_fp16_test.mse": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.matmul",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.fully_connected_rowwise_dnnlowp_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.dyndep.InitOpsLibrary",
   "caffe2.python.workspace.GlobalInit"
  ],
  "type": "module"
 },
 "caffe2.quantization.server.fully_connected_rowwise_dnnlowp_op_test.RowWiseDNNLowPFullyConnectedOpTest": {
  "lineno": 22,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.quantization.server.fully_connected_rowwise_dnnlowp_op_test.RowWiseDNNLowPFullyConnectedOpTest.test_rowwise_dnnlowp_fully_connected_int": {
  "lineno": 24,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.quantization.server.dnnlowp_test_utils.avoid_vpmaddubsw_overflow_fc",
   "caffe2.quantization.server.dnnlowp_test_utils.check_quantized_results_close",
   "caffe2.quantization.server.dnnlowp_test_utils.run_conv_or_fc",
   "caffe2.quantization.server.utils.add_quantization_param_args",
   "caffe2.quantization.server.utils.choose_quantization_params",
   "collections.namedtuple",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.randn",
   "numpy.round",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.gather_dnnlowp_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.dyndep.InitOpsLibrary",
   "caffe2.python.workspace.GlobalInit"
  ],
  "type": "module"
 },
 "caffe2.quantization.server.gather_dnnlowp_op_test.DNNLowPGatherOpTest": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.quantization.server.gather_dnnlowp_op_test.DNNLowPGatherOpTest.test_dnnlowp_gather": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.quantization.server.dnnlowp_test_utils.check_quantized_results_close",
   "collections.namedtuple",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.floor",
   "numpy.int32",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.group_norm_dnnlowp_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.dyndep.InitOpsLibrary",
   "caffe2.python.workspace.GlobalInit"
  ],
  "type": "module"
 },
 "caffe2.quantization.server.group_norm_dnnlowp_op_test.DNNLowPOpGroupNormTest": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.quantization.server.group_norm_dnnlowp_op_test.DNNLowPOpGroupNormTest.test_dnnlowp_group_norm": {
  "lineno": 19,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.quantization.server.dnnlowp_test_utils.check_quantized_results_close",
   "caffe2.quantization.server.utils.NCHW2NHWC",
   "caffe2.quantization.server.utils.add_quantization_param_args",
   "caffe2.quantization.server.utils.choose_quantization_params",
   "caffe2.quantization.server.utils.create_int8_bias_tensor_fill",
   "caffe2.quantization.server.utils.create_int8_given_tensor_fill",
   "collections.namedtuple",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.int8_gen_quant_params_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.quantization.server.int8_gen_quant_params_test.TestInt8GenQuantParamsOperator": {
  "lineno": 26,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.quantization.server.int8_gen_quant_params_test.TestInt8GenQuantParamsOperator.test_int8_gen_quant_params_op": {
  "lineno": 27,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.DataType.FLOAT",
   "caffe2.python.core.DataType.STRING",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.HasBlob",
   "caffe2.python.workspace.InferShapesAndTypes",
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.quantization.server.dnnlowp_pybind11.ChooseStaticQuantizationParams",
   "caffe2.quantization.server.dnnlowp_pybind11.CreateInt8QuantSchemeBlob",
   "caffe2.quantization.server.dnnlowp_pybind11.ObserveInt8QuantParamsBlob",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.histogram",
   "numpy.max",
   "numpy.min",
   "numpy.random.rand",
   "numpy.random.seed",
   "numpy.round",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.int8_quant_scheme_blob_fill_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "caffe2.quantization.server.int8_quant_scheme_blob_fill_test.TestInt8QuantSchemeBlobFillOperator": {
  "lineno": 23,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.quantization.server.int8_quant_scheme_blob_fill_test.TestInt8QuantSchemeBlobFillOperator.test_int8_quant_scheme_blob_fill_op": {
  "lineno": 24,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.quantization.server.dnnlowp_pybind11.ObserveInt8QuantSchemeBlob",
   "hypothesis.given"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.lstm_unit_dnnlowp_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.dyndep.InitOpsLibrary",
   "caffe2.python.workspace.GlobalInit"
  ],
  "type": "module"
 },
 "caffe2.quantization.server.lstm_unit_dnnlowp_op_test.DNNLowPLSTMUnitOpTest": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.quantization.server.lstm_unit_dnnlowp_op_test.DNNLowPLSTMUnitOpTest.test_dnnlowp_lstm_unit": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "collections.namedtuple",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.integers",
   "numpy.array",
   "numpy.clip",
   "numpy.float32",
   "numpy.int32",
   "numpy.random.rand",
   "numpy.random.randn",
   "numpy.round",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.observer_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.core.Net",
   "caffe2.python.workspace.CreateNet",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchBlob",
   "caffe2.python.workspace.ResetWorkspace",
   "caffe2.python.workspace.RunNet",
   "caffe2.quantization.server.dnnlowp_pybind11.AddOutputColumnMaxHistogramObserver",
   "caffe2.quantization.server.dnnlowp_pybind11.ObserveHistogramOfOutput",
   "caffe2.quantization.server.dnnlowp_pybind11.ObserveMinMaxOfOutput",
   "numpy.array",
   "numpy.float32"
  ],
  "type": "module"
 },
 "caffe2.quantization.server.pool_dnnlowp_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.dyndep.InitOpsLibrary",
   "caffe2.python.workspace.GlobalInit"
  ],
  "type": "module"
 },
 "caffe2.quantization.server.pool_dnnlowp_op_test.DNNLowPOpPoolTest": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.quantization.server.pool_dnnlowp_op_test.DNNLowPOpPoolTest.test_dnnlowp_average_pool": {
  "lineno": 104,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.quantization.server.dnnlowp_test_utils.check_quantized_results_close",
   "collections.namedtuple",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.round"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.pool_dnnlowp_op_test.DNNLowPOpPoolTest.test_dnnlowp_max_pool": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.quantization.server.dnnlowp_test_utils.check_quantized_results_close",
   "collections.namedtuple",
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.round"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.quantize_dnnlowp_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.dyndep.InitOpsLibrary",
   "caffe2.python.workspace.GlobalInit"
  ],
  "type": "module"
 },
 "caffe2.quantization.server.quantize_dnnlowp_op_test.DNNLowPQuantizeOpTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.quantization.server.quantize_dnnlowp_op_test.DNNLowPQuantizeOpTest.test_dnnlowp_quantize": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchInt8Blob",
   "caffe2.python.workspace.RunNetOnce",
   "caffe2.quantization.server.dnnlowp_pybind11.CreateInt8QuantParamsBlob",
   "caffe2.quantization.server.dnnlowp_pybind11.freeze_quantization_params",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.round",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.relu_dnnlowp_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.dyndep.InitOpsLibrary",
   "caffe2.python.workspace.GlobalInit"
  ],
  "type": "module"
 },
 "caffe2.quantization.server.relu_dnnlowp_op_test.DNNLowPReluOpTest": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.quantization.server.relu_dnnlowp_op_test.DNNLowPReluOpTest.test_dnnlowp_relu": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.quantization.server.dnnlowp_test_utils.check_quantized_results_close",
   "collections.namedtuple",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.round"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.resize_nearest_3d_dnnlowp_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.dyndep.InitOpsLibrary",
   "caffe2.python.workspace.GlobalInit"
  ],
  "type": "module"
 },
 "caffe2.quantization.server.resize_nearest_3d_dnnlowp_op_test.DNNLowPResizeNearest3DOpTest": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.quantization.server.resize_nearest_3d_dnnlowp_op_test.DNNLowPResizeNearest3DOpTest.test_resize_nearest": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchInt8Blob",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.just",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.round",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.resize_nearest_3d_dnnlowp_op_test.DNNLowPResizeNearest3DOpTest.test_resize_nearest.resize_nearest_ref": {
  "lineno": 49,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int32",
   "numpy.meshgrid",
   "numpy.minimum"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.resize_nearest_dnnlowp_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.dyndep.InitOpsLibrary",
   "caffe2.python.workspace.GlobalInit"
  ],
  "type": "module"
 },
 "caffe2.quantization.server.resize_nearest_dnnlowp_op_test.DNNLowPResizeNearestOpTest": {
  "lineno": 14,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.quantization.server.resize_nearest_dnnlowp_op_test.DNNLowPResizeNearestOpTest.test_resize_nearest": {
  "lineno": 15,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.python.workspace.FeedBlob",
   "caffe2.python.workspace.FetchInt8Blob",
   "caffe2.python.workspace.RunNetOnce",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.floats",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.just",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.round",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.resize_nearest_dnnlowp_op_test.DNNLowPResizeNearestOpTest.test_resize_nearest.resize_nearest_ref": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int32",
   "numpy.meshgrid",
   "numpy.minimum"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.sigmoid_dnnlowp_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.dyndep.InitOpsLibrary",
   "caffe2.python.workspace.GlobalInit"
  ],
  "type": "module"
 },
 "caffe2.quantization.server.sigmoid_dnnlowp_op_test.DNNLowPSigmoidOpTest": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.quantization.server.sigmoid_dnnlowp_op_test.DNNLowPSigmoidOpTest.test_dnnlowp_sigmoid": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "collections.namedtuple",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.spatial_batch_norm_dnnlowp_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.dyndep.InitOpsLibrary",
   "caffe2.python.workspace.GlobalInit"
  ],
  "type": "module"
 },
 "caffe2.quantization.server.spatial_batch_norm_dnnlowp_op_test.DNNLowPOpSpatialBNTest": {
  "lineno": 18,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.quantization.server.spatial_batch_norm_dnnlowp_op_test.DNNLowPOpSpatialBNTest.test_dnnlowp_spatial_bn_int": {
  "lineno": 20,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "caffe2.quantization.server.dnnlowp_test_utils.check_quantized_results_close",
   "caffe2.quantization.server.utils.NHWC2NCHW",
   "caffe2.quantization.server.utils.add_quantization_param_args",
   "collections.namedtuple",
   "hypothesis.given",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "numpy.abs",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.round"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.tanh_dnnlowp_op_test": {
  "lineno": null,
  "symbols_in_volume": [
   "caffe2.python.dyndep.InitOpsLibrary",
   "caffe2.python.workspace.GlobalInit"
  ],
  "type": "module"
 },
 "caffe2.quantization.server.tanh_dnnlowp_op_test.DNNLowPTanhOpTest": {
  "lineno": 16,
  "symbols_in_volume": [
   "caffe2.python.hypothesis_test_util.HypothesisTestCase"
  ],
  "type": "class"
 },
 "caffe2.quantization.server.tanh_dnnlowp_op_test.DNNLowPTanhOpTest.test_dnnlowp_tanh": {
  "lineno": 17,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.core.Net",
   "caffe2.python.hypothesis_test_util.gcs_cpu_only",
   "collections.namedtuple",
   "hypothesis.given",
   "hypothesis.settings",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.integers",
   "numpy.float32",
   "numpy.random.rand",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.utils": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.DEBUG",
   "logging.getLogger"
  ],
  "type": "module"
 },
 "caffe2.quantization.server.utils.add_quantization_param_args": {
  "lineno": 427,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.quantization.server.utils.add_quantization_param_args_": {
  "lineno": 400,
  "symbols_in_volume": [
   "caffe2.python.utils.MakeArgument"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.utils.add_version_to_conv_bias": {
  "lineno": 361,
  "symbols_in_volume": [
   "collections.defaultdict",
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.utils.blob_uses": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.quantization.server.utils.choose_quantization_params": {
  "lineno": 409,
  "symbols_in_volume": [
   "caffe2.python.fb.hardcode_scale_zp.QuantizationParam",
   "caffe2.python.fb.hardcode_scale_zp.choose_quantization_params"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.utils.create_int8_bias_tensor_fill": {
  "lineno": 457,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.fb.hardcode_scale_zp.QuantizationParam",
   "caffe2.python.utils.MakeArgument",
   "numpy.around",
   "numpy.int32"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.utils.create_int8_given_tensor_fill": {
  "lineno": 437,
  "symbols_in_volume": [
   "caffe2.python.core.CreateOperator",
   "caffe2.python.utils.MakeArgument",
   "numpy.around",
   "numpy.int32",
   "numpy.maximum",
   "numpy.minimum",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.utils.fuse_bn": {
  "lineno": 170,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.quantization.server.utils.fuse_first_bn": {
  "lineno": 33,
  "symbols_in_volume": [
   "copy.deepcopy",
   "numpy.float32",
   "numpy.sqrt",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.utils.fuse_first_relu": {
  "lineno": 241,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.utils.fuse_first_scale": {
  "lineno": 187,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.utils.fuse_relu": {
  "lineno": 289,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.quantization.server.utils.fuse_scale": {
  "lineno": 229,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.quantization.server.utils.last_producer": {
  "lineno": 303,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.quantization.server.utils.pairwise": {
  "lineno": 16,
  "symbols_in_volume": [
   "itertools.tee"
  ],
  "type": "function"
 },
 "caffe2.quantization.server.utils.swap_concat_relu": {
  "lineno": 352,
  "symbols_in_volume": [],
  "type": "function"
 },
 "caffe2.quantization.server.utils.swap_first_concat_relu": {
  "lineno": 310,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "torch": {
  "lineno": null,
  "symbols_in_volume": [
   "ctypes.CDLL",
   "ctypes.WinDLL",
   "ctypes.WinError",
   "ctypes.c_void_p",
   "ctypes.get_last_error",
   "glob.glob",
   "os",
   "os.add_dll_directory",
   "os.environ",
   "os.getenv",
   "os.path.dirname",
   "os.path.exists",
   "os.path.join",
   "platform.system",
   "sys.base_exec_prefix",
   "sys.exec_prefix",
   "sys.getdlopenflags",
   "sys.platform",
   "sys.setdlopenflags",
   "sys.version_info",
   "textwrap.dedent",
   "torch._C",
   "torch._C._VariableFunctions",
   "torch._C.__file__",
   "torch._C._initExtension",
   "torch._C._init_names",
   "torch._dl",
   "torch._dl.RTLD_GLOBAL",
   "torch._dl.RTLD_LAZY",
   "torch.multiprocessing._atfork.register_after_fork",
   "typing.Set",
   "typing.TYPE_CHECKING",
   "typing.Type"
  ],
  "type": "module"
 },
 "torch.Assert": {
  "lineno": 618,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.BFloat16Storage": {
  "lineno": 452,
  "symbols_in_volume": [
   "torch._C.BFloat16StorageBase"
  ],
  "type": "class"
 },
 "torch.BoolStorage": {
  "lineno": 448,
  "symbols_in_volume": [
   "torch._C.BoolStorageBase"
  ],
  "type": "class"
 },
 "torch.ByteStorage": {
  "lineno": 444,
  "symbols_in_volume": [
   "torch._C.ByteStorageBase"
  ],
  "type": "class"
 },
 "torch.CharStorage": {
  "lineno": 440,
  "symbols_in_volume": [
   "torch._C.CharStorageBase"
  ],
  "type": "class"
 },
 "torch.ComplexDoubleStorage": {
  "lineno": 455,
  "symbols_in_volume": [
   "torch._C.ComplexDoubleStorageBase"
  ],
  "type": "class"
 },
 "torch.ComplexFloatStorage": {
  "lineno": 458,
  "symbols_in_volume": [
   "torch._C.ComplexFloatStorageBase"
  ],
  "type": "class"
 },
 "torch.DoubleStorage": {
  "lineno": 416,
  "symbols_in_volume": [
   "torch._C.DoubleStorageBase"
  ],
  "type": "class"
 },
 "torch.FloatStorage": {
  "lineno": 420,
  "symbols_in_volume": [
   "torch._C.FloatStorageBase"
  ],
  "type": "class"
 },
 "torch.HalfStorage": {
  "lineno": 424,
  "symbols_in_volume": [
   "torch._C.HalfStorageBase"
  ],
  "type": "class"
 },
 "torch.IntStorage": {
  "lineno": 432,
  "symbols_in_volume": [
   "torch._C.IntStorageBase"
  ],
  "type": "class"
 },
 "torch.LongStorage": {
  "lineno": 428,
  "symbols_in_volume": [
   "torch._C.LongStorageBase"
  ],
  "type": "class"
 },
 "torch.QInt32Storage": {
  "lineno": 467,
  "symbols_in_volume": [
   "torch._C.QInt32StorageBase"
  ],
  "type": "class"
 },
 "torch.QInt8Storage": {
  "lineno": 464,
  "symbols_in_volume": [
   "torch._C.QInt8StorageBase"
  ],
  "type": "class"
 },
 "torch.QUInt8Storage": {
  "lineno": 461,
  "symbols_in_volume": [
   "torch._C.QUInt8StorageBase"
  ],
  "type": "class"
 },
 "torch.ShortStorage": {
  "lineno": 436,
  "symbols_in_volume": [
   "torch._C.ShortStorageBase"
  ],
  "type": "class"
 },
 "torch._VF": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.modules"
  ],
  "type": "module"
 },
 "torch._VF.VFModule": {
  "lineno": 18,
  "symbols_in_volume": [
   "types.ModuleType"
  ],
  "type": "class"
 },
 "torch._VF.VFModule.__getattr__": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._VF.VFModule.__init__": {
  "lineno": 21,
  "symbols_in_volume": [
   "torch._C._VariableFunctions"
  ],
  "type": "function"
 },
 "torch.__config__": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.__config__.parallel_info": {
  "lineno": 15,
  "symbols_in_volume": [
   "torch._C._parallel_info"
  ],
  "type": "function"
 },
 "torch.__config__.show": {
  "lineno": 4,
  "symbols_in_volume": [
   "torch._C._show_config"
  ],
  "type": "function"
 },
 "torch.__future__": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.__future__.get_overwrite_module_params_on_conversion": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.__future__.set_overwrite_module_params_on_conversion": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._appdirs": {
  "lineno": null,
  "symbols_in_volume": [
   "platform.java_ver",
   "sys.platform",
   "sys.platform.startswith"
  ],
  "type": "module"
 },
 "torch._appdirs.AppDirs": {
  "lineno": 445,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch._appdirs.AppDirs.__init__": {
  "lineno": 447,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._appdirs.AppDirs.site_config_dir": {
  "lineno": 470,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._appdirs.AppDirs.site_data_dir": {
  "lineno": 460,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._appdirs.AppDirs.user_cache_dir": {
  "lineno": 475,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._appdirs.AppDirs.user_config_dir": {
  "lineno": 465,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._appdirs.AppDirs.user_data_dir": {
  "lineno": 455,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._appdirs.AppDirs.user_log_dir": {
  "lineno": 485,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._appdirs.AppDirs.user_state_dir": {
  "lineno": 480,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._appdirs._get_win_folder_from_registry": {
  "lineno": 493,
  "symbols_in_volume": [
   "winreg.HKEY_CURRENT_USER",
   "winreg.OpenKey",
   "winreg.QueryValueEx"
  ],
  "type": "function"
 },
 "torch._appdirs._get_win_folder_with_ctypes": {
  "lineno": 541,
  "symbols_in_volume": [
   "ctypes.create_unicode_buffer",
   "ctypes.windll.kernel32.GetShortPathNameW",
   "ctypes.windll.shell32.SHGetFolderPathW"
  ],
  "type": "function"
 },
 "torch._appdirs._get_win_folder_with_jna": {
  "lineno": 567,
  "symbols_in_volume": [
   "array.zeros",
   "com.sun.jna.Native.toString",
   "com.sun.jna.platform.win32.Kernel32.INSTANCE",
   "com.sun.jna.platform.win32.Shell32.INSTANCE",
   "com.sun.jna.platform.win32.ShlObj",
   "com.sun.jna.platform.win32.ShlObj.SHGFP_TYPE_CURRENT",
   "com.sun.jna.platform.win32.WinDef.MAX_PATH",
   "win32com.shell.shell",
   "win32com.shell.shell.SHGetFolderPath"
  ],
  "type": "function"
 },
 "torch._appdirs._get_win_folder_with_pywin32": {
  "lineno": 514,
  "symbols_in_volume": [
   "win32api.GetShortPathName",
   "win32com.shell.shell.SHGetFolderPath",
   "win32com.shell.shellcon"
  ],
  "type": "function"
 },
 "torch._appdirs.site_config_dir": {
  "lineno": 240,
  "symbols_in_volume": [
   "os.getenv",
   "os.path.expanduser",
   "os.path.join",
   "os.pathsep",
   "os.pathsep.join",
   "os.sep",
   "os.sep.join"
  ],
  "type": "function"
 },
 "torch._appdirs.site_data_dir": {
  "lineno": 130,
  "symbols_in_volume": [
   "os.getenv",
   "os.path.expanduser",
   "os.path.join",
   "os.path.normpath",
   "os.pathsep",
   "os.pathsep.join",
   "os.sep",
   "os.sep.join"
  ],
  "type": "function"
 },
 "torch._appdirs.user_cache_dir": {
  "lineno": 295,
  "symbols_in_volume": [
   "os.getenv",
   "os.path.expanduser",
   "os.path.join",
   "os.path.normpath"
  ],
  "type": "function"
 },
 "torch._appdirs.user_config_dir": {
  "lineno": 196,
  "symbols_in_volume": [
   "os.getenv",
   "os.path.expanduser",
   "os.path.join"
  ],
  "type": "function"
 },
 "torch._appdirs.user_data_dir": {
  "lineno": 75,
  "symbols_in_volume": [
   "os.getenv",
   "os.path.expanduser",
   "os.path.join",
   "os.path.normpath"
  ],
  "type": "function"
 },
 "torch._appdirs.user_log_dir": {
  "lineno": 394,
  "symbols_in_volume": [
   "os.path.expanduser",
   "os.path.join"
  ],
  "type": "function"
 },
 "torch._appdirs.user_state_dir": {
  "lineno": 352,
  "symbols_in_volume": [
   "os.getenv",
   "os.path.expanduser",
   "os.path.join"
  ],
  "type": "function"
 },
 "torch._classes": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch._classes._ClassNamespace": {
  "lineno": 4,
  "symbols_in_volume": [
   "types.ModuleType"
  ],
  "type": "class"
 },
 "torch._classes._ClassNamespace.__getattr__": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._classes._ClassNamespace.__init__": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._classes._Classes": {
  "lineno": 15,
  "symbols_in_volume": [
   "types.ModuleType"
  ],
  "type": "class"
 },
 "torch._classes._Classes.__getattr__": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._classes._Classes.__init__": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._classes._Classes.load_library": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._classes._Classes.loaded_libraries": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._fx": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch._fx.experimental": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch._fx.experimental.GraphManipulation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch._fx.experimental.GraphManipulation.find_use": {
  "lineno": 9,
  "symbols_in_volume": [
   "torch._fx.node.Node",
   "typing.Any"
  ],
  "type": "function"
 },
 "torch._fx.experimental.GraphManipulation.get_all_users_of": {
  "lineno": 21,
  "symbols_in_volume": [
   "torch._fx.graph_module.GraphModule",
   "typing.List"
  ],
  "type": "function"
 },
 "torch._fx.experimental.GraphManipulation.replace_target_nodes_with": {
  "lineno": 35,
  "symbols_in_volume": [
   "torch._fx.graph.Graph",
   "torch._fx.graph.map_arg",
   "torch._fx.graph_module.GraphModule",
   "torch._fx.node.Node",
   "torch._fx.node.Target",
   "typing.Dict"
  ],
  "type": "function"
 },
 "torch._fx.graph": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch._fx.graph.Graph": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch._fx.graph.Graph.__init__": {
  "lineno": 69,
  "symbols_in_volume": [
   "typing.Dict",
   "typing.List"
  ],
  "type": "function"
 },
 "torch._fx.graph.Graph.__str__": {
  "lineno": 244,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "torch._fx.graph.Graph.__str__.format_arg": {
  "lineno": 247,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._fx.graph.Graph.__str__.format_node": {
  "lineno": 264,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch._fx.graph.Graph._mark_uses": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._fx.graph.Graph._mark_uses.add_use": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._fx.graph.Graph._name": {
  "lineno": 163,
  "symbols_in_volume": [
   "re.sub"
  ],
  "type": "function"
 },
 "torch._fx.graph.Graph._register_name_used": {
  "lineno": 180,
  "symbols_in_volume": [
   "torch",
   "torch.nn",
   "torch.nn.functional"
  ],
  "type": "function"
 },
 "torch._fx.graph.Graph.call_function": {
  "lineno": 124,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Callable",
   "typing.Dict",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch._fx.graph.Graph.call_method": {
  "lineno": 118,
  "symbols_in_volume": [
   "typing.Dict",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch._fx.graph.Graph.call_module": {
  "lineno": 112,
  "symbols_in_volume": [
   "typing.Dict",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch._fx.graph.Graph.create_node": {
  "lineno": 91,
  "symbols_in_volume": [
   "typing.Dict",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch._fx.graph.Graph.get_attr": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._fx.graph.Graph.graph_copy": {
  "lineno": 77,
  "symbols_in_volume": [
   "typing.Dict"
  ],
  "type": "function"
 },
 "torch._fx.graph.Graph.lint": {
  "lineno": 286,
  "symbols_in_volume": [
   "torch.nn.Module",
   "typing.Optional",
   "typing.Set"
  ],
  "type": "function"
 },
 "torch._fx.graph.Graph.lint.check_arg": {
  "lineno": 296,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch._fx.graph.Graph.node_copy": {
  "lineno": 130,
  "symbols_in_volume": [
   "typing.Callable"
  ],
  "type": "function"
 },
 "torch._fx.graph.Graph.nodes": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._fx.graph.Graph.output": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._fx.graph.Graph.placeholder": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._fx.graph.Graph.python_code": {
  "lineno": 197,
  "symbols_in_volume": [
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch._fx.graph._find_module_of_method": {
  "lineno": 28,
  "symbols_in_volume": [
   "torch",
   "torch.nn.functional",
   "typing.Any",
   "typing.Callable"
  ],
  "type": "function"
 },
 "torch._fx.graph._format_args": {
  "lineno": 38,
  "symbols_in_volume": [
   "typing.Dict",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch._fx.graph._format_target": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._fx.graph._is_magic": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._fx.graph._qualified_name": {
  "lineno": 18,
  "symbols_in_volume": [
   "builtins",
   "typing.Any",
   "typing.Callable"
  ],
  "type": "function"
 },
 "torch._fx.graph._shadows_builtin_name": {
  "lineno": 9,
  "symbols_in_volume": [
   "builtins.__dict__",
   "keyword.kwlist"
  ],
  "type": "function"
 },
 "torch._fx.graph.map_arg": {
  "lineno": 55,
  "symbols_in_volume": [
   "typing.Callable"
  ],
  "type": "function"
 },
 "torch._fx.graph.snake_case": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._fx.graph_module": {
  "lineno": null,
  "symbols_in_volume": [
   "linecache.getlines",
   "typing.Dict",
   "typing.List"
  ],
  "type": "module"
 },
 "torch._fx.graph_module.GraphModule": {
  "lineno": 99,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch._fx.graph_module.GraphModule.__copy__": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._fx.graph_module.GraphModule.__deepcopy__": {
  "lineno": 194,
  "symbols_in_volume": [
   "copy.deepcopy",
   "torch.nn.Module"
  ],
  "type": "function"
 },
 "torch._fx.graph_module.GraphModule.__init__": {
  "lineno": 121,
  "symbols_in_volume": [
   "torch.nn.Module",
   "typing.Any",
   "typing.Dict",
   "typing.Union"
  ],
  "type": "function"
 },
 "torch._fx.graph_module.GraphModule.__new__": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._fx.graph_module.GraphModule.__new__.GraphModuleImpl": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch._fx.graph_module.GraphModule.__reduce__": {
  "lineno": 186,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._fx.graph_module.GraphModule.__str__": {
  "lineno": 202,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._fx.graph_module.GraphModule.graph": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._fx.graph_module._assign_attr": {
  "lineno": 87,
  "symbols_in_volume": [
   "torch.nn.Module",
   "typing.Any"
  ],
  "type": "function"
 },
 "torch._fx.graph_module._copy_attr": {
  "lineno": 66,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "function"
 },
 "torch._fx.graph_module._forward_from_src": {
  "lineno": 30,
  "symbols_in_volume": [
   "torch",
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "torch._fx.graph_module.deserialize_graphmodule": {
  "lineno": 38,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "function"
 },
 "torch._fx.graph_module.deserialize_graphmodule.CodeOnlyModule": {
  "lineno": 47,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch._fx.graph_module.deserialize_graphmodule.CodeOnlyModule.__init__": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._fx.graph_module.deserialize_graphmodule.KeepModules": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch._fx.graph_module.deserialize_graphmodule.KeepModules.is_leaf_module": {
  "lineno": 59,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "function"
 },
 "torch._fx.graph_module.exec_with_source": {
  "lineno": 13,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "torch._fx.graph_module.patched_getline": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._fx.node": {
  "lineno": null,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.dtype",
   "typing.Any",
   "typing.Callable",
   "typing.Dict",
   "typing.List",
   "typing.Optional",
   "typing.TYPE_CHECKING",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "module"
 },
 "torch._fx.node.Node": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch._fx.node.Node.__init__": {
  "lineno": 24,
  "symbols_in_volume": [
   "typing.Dict",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch._fx.node.Node.__repr__": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._fx.proxy": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch._fx.proxy.Attribute": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch._fx.proxy.Attribute.__call__": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._fx.proxy.Attribute.__init__": {
  "lineno": 129,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch._fx.proxy.Attribute.node": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._fx.proxy.GraphAppendingTracer": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch._fx.proxy.GraphAppendingTracer.__init__": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._fx.proxy.Proxy": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch._fx.proxy.Proxy.__bool__": {
  "lineno": 116,
  "symbols_in_volume": [
   "typing.NoReturn"
  ],
  "type": "function"
 },
 "torch._fx.proxy.Proxy.__call__": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._fx.proxy.Proxy.__getattr__": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._fx.proxy.Proxy.__init__": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._fx.proxy.Proxy.__iter__": {
  "lineno": 97,
  "symbols_in_volume": [
   "dis.get_instructions",
   "inspect.currentframe",
   "typing.Iterable"
  ],
  "type": "function"
 },
 "torch._fx.proxy.Proxy.__repr__": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._fx.proxy.Proxy.__torch_function__": {
  "lineno": 119,
  "symbols_in_volume": [
   "torch.overrides.is_tensor_method_or_property"
  ],
  "type": "function"
 },
 "torch._fx.proxy.Proxy._no_arg_unpack": {
  "lineno": 113,
  "symbols_in_volume": [
   "typing.NoReturn"
  ],
  "type": "function"
 },
 "torch._fx.proxy.Proxy._no_control_flow": {
  "lineno": 110,
  "symbols_in_volume": [
   "typing.NoReturn"
  ],
  "type": "function"
 },
 "torch._fx.proxy.TraceError": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch._fx.proxy.TracerBase": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch._fx.proxy.TracerBase.create_arg": {
  "lineno": 24,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "torch._fx.proxy.TracerBase.create_node": {
  "lineno": 13,
  "symbols_in_volume": [
   "typing.Callable",
   "typing.Dict",
   "typing.Optional",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "torch._fx.proxy._create_proxy": {
  "lineno": 68,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Dict",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch._fx.proxy._define_reflectable": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._fx.proxy._define_reflectable.impl": {
  "lineno": 160,
  "symbols_in_volume": [
   "operator"
  ],
  "type": "function"
 },
 "torch._fx.proxy.scope": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._fx.proxy.scope.impl": {
  "lineno": 148,
  "symbols_in_volume": [
   "operator"
  ],
  "type": "function"
 },
 "torch._fx.symbolic_trace": {
  "lineno": null,
  "symbols_in_volume": [
   "inspect.CO_VARARGS",
   "inspect.CO_VARKEYWORDS"
  ],
  "type": "module"
 },
 "torch._fx.symbolic_trace.Tracer": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch._fx.symbolic_trace.Tracer.__init__": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._fx.symbolic_trace.Tracer._proxy_placeholder": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._fx.symbolic_trace.Tracer.create_arg": {
  "lineno": 50,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.nn.Parameter",
   "typing.Any",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch._fx.symbolic_trace.Tracer.create_arg.search_for_tensor": {
  "lineno": 69,
  "symbols_in_volume": [
   "torch.nn.Module",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch._fx.symbolic_trace.Tracer.is_leaf_module": {
  "lineno": 102,
  "symbols_in_volume": [
   "torch.nn.Module",
   "torch.nn.Sequential"
  ],
  "type": "function"
 },
 "torch._fx.symbolic_trace.Tracer.trace": {
  "lineno": 122,
  "symbols_in_volume": [
   "inspect.CO_VARARGS",
   "inspect.CO_VARKEYWORDS",
   "torch.nn.Module",
   "torch.nn.Module.__call__",
   "types.FunctionType",
   "typing.Any",
   "typing.List"
  ],
  "type": "function"
 },
 "torch._fx.symbolic_trace.Tracer.trace.module_call_wrapper": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._fx.symbolic_trace._find_module": {
  "lineno": 13,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "function"
 },
 "torch._fx.symbolic_trace._patch_function": {
  "lineno": 19,
  "symbols_in_volume": [
   "types.CodeType",
   "types.FunctionType"
  ],
  "type": "function"
 },
 "torch._fx.symbolic_trace.symbolic_trace": {
  "lineno": 167,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "function"
 },
 "torch._jit_internal": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info",
   "torch.distributed.rpc.is_available",
   "typing.Callable",
   "typing.Dict",
   "typing.List",
   "weakref.WeakKeyDictionary"
  ],
  "type": "module"
 },
 "torch._jit_internal.BroadcastingListCls": {
  "lineno": 739,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch._jit_internal.BroadcastingListCls.__getitem__": {
  "lineno": 740,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._jit_internal.FunctionModifiers": {
  "lineno": 297,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch._jit_internal.SourceContext": {
  "lineno": 832,
  "symbols_in_volume": [
   "torch._C._jit_tree_views.SourceRangeFactory"
  ],
  "type": "class"
 },
 "torch._jit_internal.SourceContext.__init__": {
  "lineno": 833,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._jit_internal._clear_fn_overloads": {
  "lineno": 563,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._jit_internal._copy_to_script_wrapper": {
  "lineno": 499,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._jit_internal._create_named_tuple": {
  "lineno": 862,
  "symbols_in_volume": [
   "collections.namedtuple",
   "typing.List"
  ],
  "type": "function"
 },
 "torch._jit_internal._disable_emit_hooks": {
  "lineno": 868,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "torch._C._jit_get_emit_hooks",
   "torch._C._jit_set_emit_hooks"
  ],
  "type": "function"
 },
 "torch._jit_internal._disable_emit_hooks_decorator": {
  "lineno": 876,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._jit_internal._disable_emit_hooks_decorator.__enter__": {
  "lineno": 877,
  "symbols_in_volume": [
   "torch._C._jit_get_emit_hooks",
   "torch._C._jit_set_emit_hooks"
  ],
  "type": "function"
 },
 "torch._jit_internal._disable_emit_hooks_decorator.__exit__": {
  "lineno": 881,
  "symbols_in_volume": [
   "torch._C._jit_set_emit_hooks"
  ],
  "type": "function"
 },
 "torch._jit_internal._get_fn_overloads": {
  "lineno": 560,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._jit_internal._get_named_tuple_properties": {
  "lineno": 848,
  "symbols_in_volume": [
   "torch._C.TensorType.get",
   "torch.jit.annotations.ann_to_type"
  ],
  "type": "function"
 },
 "torch._jit_internal._get_overloaded_methods": {
  "lineno": 618,
  "symbols_in_volume": [
   "torch._utils_internal.get_source_lines_and_file"
  ],
  "type": "function"
 },
 "torch._jit_internal._is_exception": {
  "lineno": 884,
  "symbols_in_volume": [
   "inspect.isclass"
  ],
  "type": "function"
 },
 "torch._jit_internal._overload": {
  "lineno": 550,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._jit_internal._overload_method": {
  "lineno": 595,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._jit_internal._qualified_name": {
  "lineno": 773,
  "symbols_in_volume": [
   "enum.Enum",
   "torch._C.ScriptFunction"
  ],
  "type": "function"
 },
 "torch._jit_internal._try_get_dispatched_fn": {
  "lineno": 842,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._jit_internal.boolean_dispatch": {
  "lineno": 251,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._jit_internal.boolean_dispatch.fn": {
  "lineno": 257,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._jit_internal.can_compile_class": {
  "lineno": 218,
  "symbols_in_volume": [
   "inspect.isroutine"
  ],
  "type": "function"
 },
 "torch._jit_internal.copy_torchscript_modifier": {
  "lineno": 537,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._jit_internal.createResolutionCallbackForClassMethods": {
  "lineno": 229,
  "symbols_in_volume": [
   "inspect.isroutine"
  ],
  "type": "function"
 },
 "torch._jit_internal.createResolutionCallbackForClassMethods.lookup_in_class": {
  "lineno": 242,
  "symbols_in_volume": [
   "torch._six.builtins"
  ],
  "type": "function"
 },
 "torch._jit_internal.createResolutionCallbackFromClosure": {
  "lineno": 198,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._jit_internal.createResolutionCallbackFromClosure.closure_lookup": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch._jit_internal.createResolutionCallbackFromClosure.closure_lookup.__getattr__": {
  "lineno": 208,
  "symbols_in_volume": [
   "torch._six.builtins"
  ],
  "type": "function"
 },
 "torch._jit_internal.createResolutionCallbackFromEnv": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._jit_internal.createResolutionCallbackFromEnv.lookupInModule": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._jit_internal.createResolutionCallbackFromEnv.parseExpr": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._jit_internal.createResolutionCallbackFromEnv.parseNestedExpr": {
  "lineno": 53,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch._jit_internal.createResolutionCallbackFromFrame": {
  "lineno": 93,
  "symbols_in_volume": [
   "inspect.currentframe"
  ],
  "type": "function"
 },
 "torch._jit_internal.createResolutionCallbackFromFrame.env": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch._jit_internal.createResolutionCallbackFromFrame.env.__getattr__": {
  "lineno": 132,
  "symbols_in_volume": [
   "torch._six.builtins"
  ],
  "type": "function"
 },
 "torch._jit_internal.export": {
  "lineno": 310,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._jit_internal.fake_range": {
  "lineno": 838,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._jit_internal.get_class_name_lineno": {
  "lineno": 566,
  "symbols_in_volume": [
   "inspect.currentframe"
  ],
  "type": "function"
 },
 "torch._jit_internal.get_closure": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._jit_internal.get_static_fn": {
  "lineno": 526,
  "symbols_in_volume": [
   "inspect.getattr_static"
  ],
  "type": "function"
 },
 "torch._jit_internal.get_torchscript_modifier": {
  "lineno": 530,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._jit_internal.ignore": {
  "lineno": 405,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch._jit_internal.ignore.decorator": {
  "lineno": 490,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._jit_internal.is_dict": {
  "lineno": 667,
  "symbols_in_volume": [
   "typing.Dict"
  ],
  "type": "function"
 },
 "torch._jit_internal.is_final": {
  "lineno": 734,
  "symbols_in_volume": [
   "typing_extensions.Final"
  ],
  "type": "function"
 },
 "torch._jit_internal.is_future": {
  "lineno": 713,
  "symbols_in_volume": [
   "torch.futures.Future"
  ],
  "type": "function"
 },
 "torch._jit_internal.is_ignored_fn": {
  "lineno": 518,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._jit_internal.is_list": {
  "lineno": 653,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "torch._jit_internal.is_optional": {
  "lineno": 681,
  "symbols_in_volume": [
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "torch._jit_internal.is_optional.safe_is_subclass": {
  "lineno": 690,
  "symbols_in_volume": [
   "inspect.isclass"
  ],
  "type": "function"
 },
 "torch._jit_internal.is_rref": {
  "lineno": 725,
  "symbols_in_volume": [
   "torch.distributed.rpc.RRef"
  ],
  "type": "function"
 },
 "torch._jit_internal.is_scripting": {
  "lineno": 750,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._jit_internal.is_static_fn": {
  "lineno": 523,
  "symbols_in_volume": [
   "inspect.getattr_static"
  ],
  "type": "function"
 },
 "torch._jit_internal.is_tuple": {
  "lineno": 638,
  "symbols_in_volume": [
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch._jit_internal.module_has_exports": {
  "lineno": 503,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._jit_internal.should_drop": {
  "lineno": 511,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._jit_internal.unused": {
  "lineno": 356,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._linalg_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch._linalg_utils.basis": {
  "lineno": 83,
  "symbols_in_volume": [
   "torch.geqrf",
   "torch.orgqr",
   "torch.qr"
  ],
  "type": "function"
 },
 "torch._linalg_utils.bform": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._linalg_utils.conjugate": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._linalg_utils.get_floating_dtype": {
  "lineno": 21,
  "symbols_in_volume": [
   "torch.float16",
   "torch.float32",
   "torch.float64"
  ],
  "type": "function"
 },
 "torch._linalg_utils.is_sparse": {
  "lineno": 11,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.jit.is_scripting",
   "torch.sparse_coo"
  ],
  "type": "function"
 },
 "torch._linalg_utils.matmul": {
  "lineno": 32,
  "symbols_in_volume": [
   "torch.matmul",
   "torch.sparse.mm"
  ],
  "type": "function"
 },
 "torch._linalg_utils.qform": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._linalg_utils.symeig": {
  "lineno": 94,
  "symbols_in_volume": [
   "torch.flip",
   "torch.symeig"
  ],
  "type": "function"
 },
 "torch._linalg_utils.transjugate": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._linalg_utils.transpose": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._load_global_deps": {
  "lineno": 134,
  "symbols_in_volume": [
   "ctypes.CDLL",
   "ctypes.RTLD_GLOBAL",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.join",
   "platform.system"
  ],
  "type": "function"
 },
 "torch._lobpcg": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch._lobpcg.LOBPCG": {
  "lineno": 648,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch._lobpcg.LOBPCG.__init__": {
  "lineno": 652,
  "symbols_in_volume": [
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch._lobpcg.LOBPCG.__str__": {
  "lineno": 687,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._lobpcg.LOBPCG._get_ortho": {
  "lineno": 1013,
  "symbols_in_volume": [
   "torch.eye",
   "torch.matmul",
   "torch.norm",
   "torch.numel"
  ],
  "type": "function"
 },
 "torch._lobpcg.LOBPCG._get_rayleigh_ritz_transform": {
  "lineno": 892,
  "symbols_in_volume": [
   "torch.cholesky",
   "torch.inverse",
   "torch.matmul"
  ],
  "type": "function"
 },
 "torch._lobpcg.LOBPCG._get_svqb": {
  "lineno": 947,
  "symbols_in_volume": [
   "torch.matmul",
   "torch.numel",
   "torch.where"
  ],
  "type": "function"
 },
 "torch._lobpcg.LOBPCG._update_basic": {
  "lineno": 804,
  "symbols_in_volume": [
   "torch.matmul"
  ],
  "type": "function"
 },
 "torch._lobpcg.LOBPCG._update_ortho": {
  "lineno": 847,
  "symbols_in_volume": [
   "torch.matmul"
  ],
  "type": "function"
 },
 "torch._lobpcg.LOBPCG.call_tracker": {
  "lineno": 791,
  "symbols_in_volume": [
   "torch.jit.unused"
  ],
  "type": "function"
 },
 "torch._lobpcg.LOBPCG.run": {
  "lineno": 772,
  "symbols_in_volume": [
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch._lobpcg.LOBPCG.stop_iteration": {
  "lineno": 762,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._lobpcg.LOBPCG.update": {
  "lineno": 706,
  "symbols_in_volume": [
   "torch.norm"
  ],
  "type": "function"
 },
 "torch._lobpcg.LOBPCG.update_converged_count": {
  "lineno": 735,
  "symbols_in_volume": [
   "torch.norm"
  ],
  "type": "function"
 },
 "torch._lobpcg.LOBPCG.update_residual": {
  "lineno": 729,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._lobpcg.LOBPCGAutogradFunction": {
  "lineno": 262,
  "symbols_in_volume": [
   "torch.autograd.Function"
  ],
  "type": "class"
 },
 "torch._lobpcg.LOBPCGAutogradFunction.backward": {
  "lineno": 298,
  "symbols_in_volume": [
   "torch.complex128",
   "torch.complex64"
  ],
  "type": "function"
 },
 "torch._lobpcg.LOBPCGAutogradFunction.forward": {
  "lineno": 264,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Dict",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch._lobpcg.LOBPCG_call_tracker": {
  "lineno": 1117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._lobpcg._lobpcg": {
  "lineno": 538,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.empty",
   "torch.float32",
   "torch.float64",
   "torch.jit.is_scripting",
   "torch.prod",
   "torch.randn",
   "torch.tensor",
   "typing.Dict",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch._lobpcg._matrix_polynomial_value": {
  "lineno": 105,
  "symbols_in_volume": [
   "torch.eye"
  ],
  "type": "function"
 },
 "torch._lobpcg._matrix_polynomial_value.transition": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._lobpcg._polynomial_coefficients_given_roots": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._lobpcg._polynomial_value": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._lobpcg._symeig_backward": {
  "lineno": 251,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._lobpcg._symeig_backward_complete_eigenspace": {
  "lineno": 16,
  "symbols_in_volume": [
   "torch.diag_embed",
   "torch.matmul"
  ],
  "type": "function"
 },
 "torch._lobpcg._symeig_backward_partial_eigenspace": {
  "lineno": 139,
  "symbols_in_volume": [
   "torch.Generator",
   "torch.cholesky",
   "torch.cholesky_solve",
   "torch.matmul",
   "torch.randn"
  ],
  "type": "function"
 },
 "torch._lobpcg._vector_polynomial_value": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._lobpcg._vector_polynomial_value.transition": {
  "lineno": 130,
  "symbols_in_volume": [
   "torch.addcmul"
  ],
  "type": "function"
 },
 "torch._lobpcg.lobpcg": {
  "lineno": 338,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._jit_internal.is_scripting",
   "torch.jit.is_scripting",
   "typing.Dict",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch._lowrank": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch._lowrank._svd_lowrank": {
  "lineno": 133,
  "symbols_in_volume": [
   "torch.svd"
  ],
  "type": "function"
 },
 "torch._lowrank.get_approximate_basis": {
  "lineno": 14,
  "symbols_in_volume": [
   "torch.randn"
  ],
  "type": "function"
 },
 "torch._lowrank.pca_lowrank": {
  "lineno": 170,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.jit.is_scripting",
   "torch.ones",
   "torch.sparse.mm",
   "torch.sparse.sum",
   "torch.sparse_coo_tensor",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch._lowrank.svd_lowrank": {
  "lineno": 85,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch._namedtensor_internals": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch._namedtensor_internals.build_dim_map": {
  "lineno": 17,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "torch._namedtensor_internals.check_serializing_named_tensor": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._namedtensor_internals.expand_single_ellipsis": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._namedtensor_internals.is_ellipsis": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._namedtensor_internals.namer_api_name": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._namedtensor_internals.replace_ellipsis_by_position": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._namedtensor_internals.resolve_ellipsis": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._namedtensor_internals.single_ellipsis_index": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._namedtensor_internals.unzip_namedshape": {
  "lineno": 24,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "torch._namedtensor_internals.update_names": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._namedtensor_internals.update_names_with_list": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._namedtensor_internals.update_names_with_mapping": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._ops": {
  "lineno": null,
  "symbols_in_volume": [
   "sys"
  ],
  "type": "module"
 },
 "torch._ops._OpNamespace": {
  "lineno": 33,
  "symbols_in_volume": [
   "types.ModuleType"
  ],
  "type": "class"
 },
 "torch._ops._OpNamespace.__getattr__": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._ops._OpNamespace.__init__": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._ops._Ops": {
  "lineno": 69,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.join",
   "types.ModuleType"
  ],
  "type": "class"
 },
 "torch._ops._Ops.__getattr__": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._ops._Ops.__init__": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._ops._Ops.load_library": {
  "lineno": 82,
  "symbols_in_volume": [
   "ctypes.CDLL"
  ],
  "type": "function"
 },
 "torch._ops.dl_open_guard": {
  "lineno": 16,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "ctypes.RTLD_GLOBAL",
   "sys.getdlopenflags",
   "sys.setdlopenflags"
  ],
  "type": "function"
 },
 "torch._package": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch._package._custom_import_pickler": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch._package._custom_import_pickler.CustomImportPickler": {
  "lineno": 5,
  "symbols_in_volume": [
   "pickle._Pickler"
  ],
  "type": "class"
 },
 "torch._package._custom_import_pickler.CustomImportPickler.__init__": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package._custom_import_pickler.CustomImportPickler.save_global": {
  "lineno": 10,
  "symbols_in_volume": [
   "pickle.EXT1",
   "pickle.EXT2",
   "pickle.EXT4",
   "pickle.GLOBAL",
   "pickle.PicklingError",
   "pickle.STACK_GLOBAL",
   "pickle._compat_pickle.REVERSE_IMPORT_MAPPING",
   "pickle._compat_pickle.REVERSE_NAME_MAPPING",
   "pickle._extension_registry.get",
   "pickle._getattribute",
   "pickle.whichmodule",
   "struct.pack"
  ],
  "type": "function"
 },
 "torch._package._importlib": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch._package._importlib._calc___package__": {
  "lineno": 48,
  "symbols_in_volume": [
   "_warnings.warn"
  ],
  "type": "function"
 },
 "torch._package._importlib._normalize_line_endings": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package._importlib._normalize_path": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package._importlib._resolve_name": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package._importlib._sanity_check": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package._mock": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch._package._mock.MockedObject": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch._package._mock.MockedObject.__init__": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package._mock.MockedObject.__repr__": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package._mock.install_method": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package._mock.install_method._not_implemented": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package._mock_zipreader": {
  "lineno": null,
  "symbols_in_volume": [
   "torch.BoolStorage",
   "torch.ByteStorage",
   "torch.CharStorage",
   "torch.DoubleStorage",
   "torch.FloatStorage",
   "torch.IntStorage",
   "torch.LongStorage",
   "torch.ShortStorage",
   "typing.Any",
   "typing.List"
  ],
  "type": "module"
 },
 "torch._package._mock_zipreader.MockZipReader": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch._package._mock_zipreader.MockZipReader.__init__": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package._mock_zipreader.MockZipReader.get_all_records": {
  "lineno": 43,
  "symbols_in_volume": [
   "glob.glob"
  ],
  "type": "function"
 },
 "torch._package._mock_zipreader.MockZipReader.get_record": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package._mock_zipreader.MockZipReader.get_storage_from_record": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package._mock_zipreader._HasStorage": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch._package._mock_zipreader._HasStorage.__init__": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package._mock_zipreader._HasStorage.storage": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package.exporter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch._package.exporter.PackageExporter": {
  "lineno": 18,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Callable",
   "typing.List"
  ],
  "type": "class"
 },
 "torch._package.exporter.PackageExporter.__enter__": {
  "lineno": 454,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package.exporter.PackageExporter.__exit__": {
  "lineno": 457,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package.exporter.PackageExporter.__init__": {
  "lineno": 59,
  "symbols_in_volume": [
   "importlib.import_module",
   "torch._C.PyTorchFileWriter",
   "typing.Any",
   "typing.Dict",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch._package.exporter.PackageExporter._can_implicitly_extern": {
  "lineno": 499,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package.exporter.PackageExporter._create_pickler": {
  "lineno": 308,
  "symbols_in_volume": [
   "importlib.import_module",
   "pickle.Pickler"
  ],
  "type": "function"
 },
 "torch._package.exporter.PackageExporter._filename": {
  "lineno": 494,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package.exporter.PackageExporter._get_source_of_module": {
  "lineno": 249,
  "symbols_in_volume": [
   "linecache.getlines",
   "types.ModuleType"
  ],
  "type": "function"
 },
 "torch._package.exporter.PackageExporter._import_module": {
  "lineno": 295,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package.exporter.PackageExporter._module_exists": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package.exporter.PackageExporter._module_is_already_provided": {
  "lineno": 429,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package.exporter.PackageExporter._persistent_id": {
  "lineno": 435,
  "symbols_in_volume": [
   "torch.is_storage",
   "torch.serialization.location_tag",
   "torch.serialization.normalize_storage_type"
  ],
  "type": "function"
 },
 "torch._package.exporter.PackageExporter._write": {
  "lineno": 460,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package.exporter.PackageExporter._write_dep_graph": {
  "lineno": 171,
  "symbols_in_volume": [
   "tempfile.NamedTemporaryFile",
   "typing.Dict",
   "typing.List"
  ],
  "type": "function"
 },
 "torch._package.exporter.PackageExporter._write_dep_graph.visit": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package.exporter.PackageExporter.close": {
  "lineno": 465,
  "symbols_in_volume": [
   "io.BytesIO",
   "torch.serialization._should_read_directly"
  ],
  "type": "function"
 },
 "torch._package.exporter.PackageExporter.extern_module": {
  "lineno": 383,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package.exporter.PackageExporter.extern_modules": {
  "lineno": 395,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "torch._package.exporter.PackageExporter.mock_module": {
  "lineno": 404,
  "symbols_in_volume": [
   "pathlib.Path"
  ],
  "type": "function"
 },
 "torch._package.exporter.PackageExporter.mock_modules": {
  "lineno": 420,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package.exporter.PackageExporter.require_module": {
  "lineno": 265,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package.exporter.PackageExporter.require_module_if_not_provided": {
  "lineno": 260,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package.exporter.PackageExporter.save_binary": {
  "lineno": 372,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package.exporter.PackageExporter.save_module": {
  "lineno": 283,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package.exporter.PackageExporter.save_pickle": {
  "lineno": 316,
  "symbols_in_volume": [
   "io.BytesIO",
   "pickletools.genops",
   "typing.Any"
  ],
  "type": "function"
 },
 "torch._package.exporter.PackageExporter.save_source_file": {
  "lineno": 76,
  "symbols_in_volume": [
   "pathlib.Path"
  ],
  "type": "function"
 },
 "torch._package.exporter.PackageExporter.save_source_string": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package.exporter.PackageExporter.save_text": {
  "lineno": 362,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package.exporter._is_builtin_or_stdlib_module": {
  "lineno": 508,
  "symbols_in_volume": [
   "distutils.sysconfig.get_python_lib",
   "sys.builtin_module_names",
   "types.ModuleType"
  ],
  "type": "function"
 },
 "torch._package.exporter._read_file": {
  "lineno": 528,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package.find_file_dependencies": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch._package.find_file_dependencies._ExtractModuleReferences": {
  "lineno": 5,
  "symbols_in_volume": [
   "ast.NodeVisitor"
  ],
  "type": "class"
 },
 "torch._package.find_file_dependencies._ExtractModuleReferences.__init__": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package.find_file_dependencies._ExtractModuleReferences._absmodule": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package.find_file_dependencies._ExtractModuleReferences.run": {
  "lineno": 10,
  "symbols_in_volume": [
   "ast.parse",
   "typing.List",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch._package.find_file_dependencies._ExtractModuleReferences.visit_Import": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package.find_file_dependencies._ExtractModuleReferences.visit_ImportFrom": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package.importer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch._package.importer.PackageImporter": {
  "lineno": 15,
  "symbols_in_volume": [
   "types.ModuleType",
   "typing.Dict",
   "typing.Optional"
  ],
  "type": "class"
 },
 "torch._package.importer.PackageImporter.__import__": {
  "lineno": 270,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package.importer.PackageImporter.__init__": {
  "lineno": 34,
  "symbols_in_volume": [
   "builtins.__dict__.copy",
   "torch._C.PyTorchFileReader",
   "typing.Any",
   "typing.Callable"
  ],
  "type": "function"
 },
 "torch._package.importer.PackageImporter._add_extern": {
  "lineno": 346,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package.importer.PackageImporter._add_file": {
  "lineno": 334,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package.importer.PackageImporter._compile_source": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package.importer.PackageImporter._do_find_and_load": {
  "lineno": 178,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package.importer.PackageImporter._find_and_load": {
  "lineno": 204,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package.importer.PackageImporter._gcd_import": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package.importer.PackageImporter._get_or_create_package": {
  "lineno": 319,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "torch._package.importer.PackageImporter._get_package": {
  "lineno": 294,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package.importer.PackageImporter._handle_fromlist": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package.importer.PackageImporter._load_module": {
  "lineno": 153,
  "symbols_in_volume": [
   "importlib.import_module"
  ],
  "type": "function"
 },
 "torch._package.importer.PackageImporter._make_module": {
  "lineno": 138,
  "symbols_in_volume": [
   "importlib.machinery.ModuleSpec",
   "importlib.util.module_from_spec",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch._package.importer.PackageImporter._read_extern": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package.importer.PackageImporter._zipfile_path": {
  "lineno": 313,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package.importer.PackageImporter.get_source": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package.importer.PackageImporter.import_module": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package.importer.PackageImporter.load_binary": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package.importer.PackageImporter.load_pickle": {
  "lineno": 119,
  "symbols_in_volume": [
   "torch.serialization._load",
   "typing.Any"
  ],
  "type": "function"
 },
 "torch._package.importer.PackageImporter.load_text": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package.importer._ExternNode": {
  "lineno": 387,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch._package.importer._ModuleNode": {
  "lineno": 381,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch._package.importer._ModuleNode.__init__": {
  "lineno": 384,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package.importer._PackageNode": {
  "lineno": 376,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch._package.importer._PackageNode.__init__": {
  "lineno": 377,
  "symbols_in_volume": [
   "typing.Dict",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch._package.importer._PathNode": {
  "lineno": 373,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch._package.importer._UnpicklerWrapper": {
  "lineno": 358,
  "symbols_in_volume": [
   "pickle._Unpickler"
  ],
  "type": "class"
 },
 "torch._package.importer._UnpicklerWrapper.__init__": {
  "lineno": 359,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._package.importer._UnpicklerWrapper.find_class": {
  "lineno": 363,
  "symbols_in_volume": [
   "_compat_pickle.IMPORT_MAPPING",
   "_compat_pickle.NAME_MAPPING"
  ],
  "type": "function"
 },
 "torch._six": {
  "lineno": null,
  "symbols_in_volume": [
   "builtins.FileNotFoundError",
   "io.StringIO",
   "math.inf",
   "math.nan",
   "sys.version_info"
  ],
  "type": "module"
 },
 "torch._six.bind_method": {
  "lineno": 75,
  "symbols_in_volume": [
   "types.MethodType"
  ],
  "type": "function"
 },
 "torch._six.get_function_from_type": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._six.istuple": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._six.with_metaclass": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._six.with_metaclass.metaclass": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch._six.with_metaclass.metaclass.__new__": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._six.with_metaclass.metaclass.__prepare__": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._storage_docs": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch._storage_docs.add_docstr_all": {
  "lineno": 22,
  "symbols_in_volume": [
   "torch._C._add_docstr"
  ],
  "type": "function"
 },
 "torch._tensor_docs": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch._tensor_docs.add_docstr_all": {
  "lineno": 8,
  "symbols_in_volume": [
   "torch._C._add_docstr"
  ],
  "type": "function"
 },
 "torch._tensor_str": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch._tensor_str._Formatter": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch._tensor_str._Formatter.__init__": {
  "lineno": 74,
  "symbols_in_volume": [
   "torch.ceil",
   "torch.isfinite",
   "torch.masked_select",
   "torch.no_grad"
  ],
  "type": "function"
 },
 "torch._tensor_str._Formatter.format": {
  "lineno": 137,
  "symbols_in_volume": [
   "math.isinf",
   "math.isnan"
  ],
  "type": "function"
 },
 "torch._tensor_str._Formatter.width": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._tensor_str.__PrinterOptions": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch._tensor_str._add_suffixes": {
  "lineno": 244,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._tensor_str._scalar_str": {
  "lineno": 152,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._tensor_str._str": {
  "lineno": 370,
  "symbols_in_volume": [
   "torch.no_grad"
  ],
  "type": "function"
 },
 "torch._tensor_str._str_intern": {
  "lineno": 277,
  "symbols_in_volume": [
   "torch._C._get_default_device",
   "torch.bool",
   "torch.cdouble",
   "torch.cfloat",
   "torch.cuda.current_device",
   "torch.double",
   "torch.get_default_dtype",
   "torch.int64",
   "torch.per_channel_affine",
   "torch.per_channel_affine_float_qparams",
   "torch.per_channel_symmetric",
   "torch.per_tensor_affine",
   "torch.per_tensor_symmetric",
   "torch.strided"
  ],
  "type": "function"
 },
 "torch._tensor_str._tensor_str": {
  "lineno": 220,
  "symbols_in_volume": [
   "torch.bfloat16",
   "torch.float16"
  ],
  "type": "function"
 },
 "torch._tensor_str._tensor_str_with_formatter": {
  "lineno": 198,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._tensor_str._vector_str": {
  "lineno": 163,
  "symbols_in_volume": [
   "math.floor"
  ],
  "type": "function"
 },
 "torch._tensor_str._vector_str._val_formatter": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._tensor_str.get_summarized_data": {
  "lineno": 260,
  "symbols_in_volume": [
   "torch.cat",
   "torch.stack"
  ],
  "type": "function"
 },
 "torch._tensor_str.set_printoptions": {
  "lineno": 18,
  "symbols_in_volume": [
   "torch._six.inf"
  ],
  "type": "function"
 },
 "torch._torch_docs": {
  "lineno": null,
  "symbols_in_volume": [
   "torch._C._add_docstr"
  ],
  "type": "module"
 },
 "torch._torch_docs.merge_dicts": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._torch_docs.parse_kwargs": {
  "lineno": 9,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "function"
 },
 "torch._utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch._utils.ExceptionWrapper": {
  "lineno": 402,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch._utils.ExceptionWrapper.__init__": {
  "lineno": 404,
  "symbols_in_volume": [
   "sys.exc_info",
   "traceback.format_exception"
  ],
  "type": "function"
 },
 "torch._utils.ExceptionWrapper.reraise": {
  "lineno": 413,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._utils.KeyErrorMessage": {
  "lineno": 396,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch._utils.KeyErrorMessage.__repr__": {
  "lineno": 398,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._utils._accumulate": {
  "lineno": 227,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._utils._cuda": {
  "lineno": 48,
  "symbols_in_volume": [
   "torch._indices",
   "torch._values",
   "torch.cuda",
   "torch.cuda.current_device",
   "torch.cuda.device",
   "torch.cuda.sparse"
  ],
  "type": "function"
 },
 "torch._utils._flatten_dense_tensors": {
  "lineno": 242,
  "symbols_in_volume": [
   "torch.cat"
  ],
  "type": "function"
 },
 "torch._utils._flatten_sparse_tensors": {
  "lineno": 262,
  "symbols_in_volume": [
   "torch._indices",
   "torch._values"
  ],
  "type": "function"
 },
 "torch._utils._get_all_device_indices": {
  "lineno": 451,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._utils._get_async_or_non_blocking": {
  "lineno": 82,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch._utils._get_available_device_type": {
  "lineno": 431,
  "symbols_in_volume": [
   "torch.cuda.is_available"
  ],
  "type": "function"
 },
 "torch._utils._get_current_device_index": {
  "lineno": 446,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._utils._get_device_attr": {
  "lineno": 438,
  "symbols_in_volume": [
   "torch.cuda"
  ],
  "type": "function"
 },
 "torch._utils._get_device_index": {
  "lineno": 461,
  "symbols_in_volume": [
   "torch.device",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch._utils._get_devices_properties": {
  "lineno": 456,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._utils._import_dotted_name": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._utils._rebuild_parameter": {
  "lineno": 208,
  "symbols_in_volume": [
   "torch.nn.Parameter"
  ],
  "type": "function"
 },
 "torch._utils._rebuild_qtensor": {
  "lineno": 182,
  "symbols_in_volume": [
   "torch._empty_affine_quantized",
   "torch._empty_per_channel_affine_quantized",
   "torch.double",
   "torch.float",
   "torch.long",
   "torch.per_channel_affine",
   "torch.per_channel_affine_float_qparams",
   "torch.per_tensor_affine",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch._utils._rebuild_sparse_tensor": {
  "lineno": 166,
  "symbols_in_volume": [
   "torch._sparse_coo_tensor_unsafe",
   "torch.sparse_coo"
  ],
  "type": "function"
 },
 "torch._utils._rebuild_tensor": {
  "lineno": 130,
  "symbols_in_volume": [
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch._utils._rebuild_tensor_v2": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._utils._rebuild_xla_tensor": {
  "lineno": 176,
  "symbols_in_volume": [
   "torch.from_numpy"
  ],
  "type": "function"
 },
 "torch._utils._reorder_tensors_as": {
  "lineno": 324,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "torch._utils._take_tensors": {
  "lineno": 346,
  "symbols_in_volume": [
   "collections.defaultdict",
   "torch._indices",
   "torch._values"
  ],
  "type": "function"
 },
 "torch._utils._type": {
  "lineno": 10,
  "symbols_in_volume": [
   "torch._indices",
   "torch._values"
  ],
  "type": "function"
 },
 "torch._utils._unflatten_dense_tensors": {
  "lineno": 278,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._utils._unflatten_sparse_tensors": {
  "lineno": 300,
  "symbols_in_volume": [
   "torch._indices",
   "torch._values"
  ],
  "type": "function"
 },
 "torch._utils._validate_loaded_sparse_tensors": {
  "lineno": 158,
  "symbols_in_volume": [
   "torch._validate_sparse_coo_tensor_args"
  ],
  "type": "function"
 },
 "torch._utils.annotate": {
  "lineno": 380,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._utils.annotate.dec": {
  "lineno": 381,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._utils_internal": {
  "lineno": null,
  "symbols_in_volume": [
   "os.path.basename",
   "os.path.dirname"
  ],
  "type": "module"
 },
 "torch._utils_internal.get_file_path": {
  "lineno": 17,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "torch._utils_internal.get_file_path_2": {
  "lineno": 21,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "torch._utils_internal.get_source_lines_and_file": {
  "lineno": 40,
  "symbols_in_volume": [
   "inspect.getsourcefile",
   "inspect.getsourcelines"
  ],
  "type": "function"
 },
 "torch._utils_internal.get_writable_path": {
  "lineno": 25,
  "symbols_in_volume": [
   "os.W_OK",
   "os.access",
   "os.path.basename",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "torch._utils_internal.prepare_multiprocessing_environment": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch._utils_internal.resolve_library_path": {
  "lineno": 36,
  "symbols_in_volume": [
   "os.path.realpath"
  ],
  "type": "function"
 },
 "torch._vmap_internals": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.Optional",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "module"
 },
 "torch._vmap_internals._as_tuple": {
  "lineno": 63,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Callable",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch._vmap_internals._check_args_can_be_mapped_with_in_dims": {
  "lineno": 25,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Callable",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch._vmap_internals._check_out_dims_is_int_or_int_tuple": {
  "lineno": 135,
  "symbols_in_volume": [
   "typing.Callable"
  ],
  "type": "function"
 },
 "torch._vmap_internals._create_batched_inputs": {
  "lineno": 72,
  "symbols_in_volume": [
   "torch._add_batch_dim",
   "typing.Callable",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch._vmap_internals._get_name": {
  "lineno": 145,
  "symbols_in_volume": [
   "typing.Callable"
  ],
  "type": "function"
 },
 "torch._vmap_internals._num_outputs": {
  "lineno": 56,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "torch._vmap_internals._unwrap_batched": {
  "lineno": 100,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._remove_batch_dim",
   "typing.Callable",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "torch._vmap_internals._validate_and_get_batch_size": {
  "lineno": 11,
  "symbols_in_volume": [
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch._vmap_internals._validate_outputs": {
  "lineno": 123,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Any",
   "typing.Callable"
  ],
  "type": "function"
 },
 "torch._vmap_internals.vmap": {
  "lineno": 157,
  "symbols_in_volume": [
   "typing.Callable",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch._vmap_internals.vmap.wrapped": {
  "lineno": 256,
  "symbols_in_volume": [
   "functools.wraps",
   "torch._C._vmapmode_decrement_nesting",
   "torch._C._vmapmode_increment_nesting"
  ],
  "type": "function"
 },
 "torch.autograd": {
  "lineno": null,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._C._autograd_init",
   "typing.Optional"
  ],
  "type": "module"
 },
 "torch.autograd._functions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.autograd._functions.tensor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.autograd._functions.tensor.Resize": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.autograd._functions.tensor.Resize.backward": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd._functions.tensor.Resize.forward": {
  "lineno": 27,
  "symbols_in_volume": [
   "functools.reduce"
  ],
  "type": "function"
 },
 "torch.autograd._functions.tensor.Type": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.autograd._functions.tensor.Type.backward": {
  "lineno": 15,
  "symbols_in_volume": [
   "torch.cuda.device"
  ],
  "type": "function"
 },
 "torch.autograd._functions.tensor.Type.forward": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd._functions.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.autograd._functions.utils.check_onnx_broadcast": {
  "lineno": 32,
  "symbols_in_volume": [
   "functools.reduce"
  ],
  "type": "function"
 },
 "torch.autograd._functions.utils.maybe_unexpand": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd._functions.utils.maybe_view": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd._is_checkpoint_valid": {
  "lineno": 221,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd._make_grads": {
  "lineno": 28,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.ones_like",
   "torch.preserve_format",
   "typing.List",
   "typing.Sequence",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.autograd._tensor_or_tensors_to_tuple": {
  "lineno": 60,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.types._TensorOrTensors",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.autograd.anomaly_mode": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.autograd.anomaly_mode.detect_anomaly": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.autograd.anomaly_mode.detect_anomaly.__enter__": {
  "lineno": 76,
  "symbols_in_volume": [
   "torch.set_anomaly_enabled"
  ],
  "type": "function"
 },
 "torch.autograd.anomaly_mode.detect_anomaly.__exit__": {
  "lineno": 79,
  "symbols_in_volume": [
   "torch.set_anomaly_enabled",
   "typing.Any"
  ],
  "type": "function"
 },
 "torch.autograd.anomaly_mode.detect_anomaly.__init__": {
  "lineno": 70,
  "symbols_in_volume": [
   "torch.is_anomaly_enabled",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.autograd.anomaly_mode.set_detect_anomaly": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.autograd.anomaly_mode.set_detect_anomaly.__enter__": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.anomaly_mode.set_detect_anomaly.__exit__": {
  "lineno": 105,
  "symbols_in_volume": [
   "torch.set_anomaly_enabled",
   "typing.Any"
  ],
  "type": "function"
 },
 "torch.autograd.anomaly_mode.set_detect_anomaly.__init__": {
  "lineno": 98,
  "symbols_in_volume": [
   "torch.is_anomaly_enabled",
   "torch.set_anomaly_enabled"
  ],
  "type": "function"
 },
 "torch.autograd.backward": {
  "lineno": 68,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.types._TensorOrTensors",
   "typing.Optional",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.autograd.function": {
  "lineno": null,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._C.Value"
  ],
  "type": "module"
 },
 "torch.autograd.function.BackwardCFunction": {
  "lineno": 84,
  "symbols_in_volume": [
   "torch._C._FunctionBase"
  ],
  "type": "class"
 },
 "torch.autograd.function.BackwardCFunction.apply": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.function.Function": {
  "lineno": 121,
  "symbols_in_volume": [
   "torch._C._FunctionBase",
   "torch._six.with_metaclass"
  ],
  "type": "class"
 },
 "torch.autograd.function.Function.__call__": {
  "lineno": 158,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.function.Function.backward": {
  "lineno": 182,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "torch.autograd.function.Function.forward": {
  "lineno": 167,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "torch.autograd.function.FunctionMeta": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.autograd.function.FunctionMeta.__init__": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.function.InplaceFunction": {
  "lineno": 264,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.autograd.function.InplaceFunction.__init__": {
  "lineno": 266,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.function.NestedIOFunction": {
  "lineno": 364,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.autograd.function.NestedIOFunction._do_backward": {
  "lineno": 376,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.function.NestedIOFunction._do_forward": {
  "lineno": 368,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.function.NestedIOFunction.backward": {
  "lineno": 384,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "torch.autograd.function.NestedIOFunction.backward_extended": {
  "lineno": 416,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "torch.autograd.function.NestedIOFunction.forward": {
  "lineno": 391,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "torch.autograd.function.NestedIOFunction.forward_extended": {
  "lineno": 413,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "torch.autograd.function.NestedIOFunction.mark_dirty": {
  "lineno": 407,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "torch.autograd.function.NestedIOFunction.mark_non_differentiable": {
  "lineno": 410,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "torch.autograd.function.NestedIOFunction.save_for_backward": {
  "lineno": 398,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "torch.autograd.function.NestedIOFunction.saved_tensors": {
  "lineno": 402,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.function._ContextMethodMixin": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.autograd.function._ContextMethodMixin.mark_dirty": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.function._ContextMethodMixin.mark_non_differentiable": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.function._ContextMethodMixin.mark_shared_storage": {
  "lineno": 41,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.autograd.function._ContextMethodMixin.save_for_backward": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.function._ContextMethodMixin.set_materialize_grads": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.function._HookMixin": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.autograd.function._HookMixin._register_hook": {
  "lineno": 75,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "torch.utils.hooks.RemovableHandle"
  ],
  "type": "function"
 },
 "torch.autograd.function._iter_filter": {
  "lineno": 301,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.function._iter_filter._iter": {
  "lineno": 303,
  "symbols_in_volume": [
   "torch.typename"
  ],
  "type": "function"
 },
 "torch.autograd.function._jit_unwrap_structured": {
  "lineno": 295,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.function._nested_map": {
  "lineno": 271,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.function._nested_map._map": {
  "lineno": 272,
  "symbols_in_volume": [
   "torch.typename"
  ],
  "type": "function"
 },
 "torch.autograd.function._unflatten": {
  "lineno": 331,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.function._unflatten.unflatten_helper": {
  "lineno": 334,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.autograd.function.once_differentiable": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.function.once_differentiable.wrapper": {
  "lineno": 207,
  "symbols_in_volume": [
   "functools.wraps",
   "torch.Tensor",
   "torch._C._functions.DelayedError",
   "torch.is_grad_enabled",
   "torch.no_grad"
  ],
  "type": "function"
 },
 "torch.autograd.function.once_differentiable.wrapper.fake_requires_grad": {
  "lineno": 239,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.function.traceable": {
  "lineno": 249,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.functional": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.autograd.functional._as_tuple": {
  "lineno": 6,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.autograd.functional._autograd_grad": {
  "lineno": 126,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.autograd.grad",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.autograd.functional._check_requires_grad": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.functional._fill_in_zeros": {
  "lineno": 149,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.zeros_like",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.autograd.functional._grad_postprocess": {
  "lineno": 65,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.autograd.functional._grad_preprocess": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.functional._tuple_postprocess": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.functional._validate_v": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.functional.hessian": {
  "lineno": 464,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.functional.hessian.ensure_single_output_function": {
  "lineno": 530,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.autograd.functional.hessian.jac_func": {
  "lineno": 543,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.functional.hvp": {
  "lineno": 642,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.zeros_like"
  ],
  "type": "function"
 },
 "torch.autograd.functional.jacobian": {
  "lineno": 367,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.stack",
   "torch.zeros_like",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.autograd.functional.jvp": {
  "lineno": 277,
  "symbols_in_volume": [
   "torch.zeros_like"
  ],
  "type": "function"
 },
 "torch.autograd.functional.vhp": {
  "lineno": 552,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.autograd.functional.vjp": {
  "lineno": 193,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.grad": {
  "lineno": 135,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.types._TensorOrTensors",
   "typing.Optional",
   "typing.Tuple",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.autograd.grad_mode": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Callable",
   "typing.TypeVar"
  ],
  "type": "module"
 },
 "torch.autograd.grad_mode._DecoratorContextManager": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.autograd.grad_mode._DecoratorContextManager.__call__": {
  "lineno": 19,
  "symbols_in_volume": [
   "inspect.isgeneratorfunction",
   "typing.cast"
  ],
  "type": "function"
 },
 "torch.autograd.grad_mode._DecoratorContextManager.__call__.decorate_context": {
  "lineno": 23,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "torch.autograd.grad_mode._DecoratorContextManager.__enter__": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.grad_mode._DecoratorContextManager.__exit__": {
  "lineno": 46,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "torch.autograd.grad_mode._DecoratorContextManager._wrap_generator": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.grad_mode._DecoratorContextManager._wrap_generator.generator_context": {
  "lineno": 31,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "torch.autograd.grad_mode.enable_grad": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.autograd.grad_mode.enable_grad.__enter__": {
  "lineno": 124,
  "symbols_in_volume": [
   "torch._C._set_grad_enabled",
   "torch.is_grad_enabled"
  ],
  "type": "function"
 },
 "torch.autograd.grad_mode.enable_grad.__exit__": {
  "lineno": 128,
  "symbols_in_volume": [
   "torch._C._set_grad_enabled",
   "typing.Any"
  ],
  "type": "function"
 },
 "torch.autograd.grad_mode.no_grad": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.autograd.grad_mode.no_grad.__enter__": {
  "lineno": 85,
  "symbols_in_volume": [
   "torch.is_grad_enabled",
   "torch.set_grad_enabled"
  ],
  "type": "function"
 },
 "torch.autograd.grad_mode.no_grad.__exit__": {
  "lineno": 89,
  "symbols_in_volume": [
   "torch.set_grad_enabled",
   "typing.Any"
  ],
  "type": "function"
 },
 "torch.autograd.grad_mode.no_grad.__init__": {
  "lineno": 80,
  "symbols_in_volume": [
   "torch._jit_internal.is_scripting"
  ],
  "type": "function"
 },
 "torch.autograd.grad_mode.set_grad_enabled": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.autograd.grad_mode.set_grad_enabled.__enter__": {
  "lineno": 170,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.grad_mode.set_grad_enabled.__exit__": {
  "lineno": 173,
  "symbols_in_volume": [
   "torch._C._set_grad_enabled",
   "typing.Any"
  ],
  "type": "function"
 },
 "torch.autograd.grad_mode.set_grad_enabled.__init__": {
  "lineno": 166,
  "symbols_in_volume": [
   "torch._C._set_grad_enabled",
   "torch.is_grad_enabled"
  ],
  "type": "function"
 },
 "torch.autograd.gradcheck": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.autograd.gradcheck._as_tuple": {
  "lineno": 207,
  "symbols_in_volume": [
   "torch._six.istuple"
  ],
  "type": "function"
 },
 "torch.autograd.gradcheck._differentiable_outputs": {
  "lineno": 216,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.gradcheck.get_analytical_jacobian": {
  "lineno": 163,
  "symbols_in_volume": [
   "torch._mkldnn",
   "torch.autograd.grad",
   "torch.legacy_contiguous_format",
   "torch.strided",
   "torch.zeros_like"
  ],
  "type": "function"
 },
 "torch.autograd.gradcheck.get_numerical_jacobian": {
  "lineno": 47,
  "symbols_in_volume": [
   "itertools.product",
   "torch._mkldnn"
  ],
  "type": "function"
 },
 "torch.autograd.gradcheck.get_numerical_jacobian.get_stride": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.gradcheck.get_numerical_jacobian.update_jacobians": {
  "lineno": 67,
  "symbols_in_volume": [
   "torch.real"
  ],
  "type": "function"
 },
 "torch.autograd.gradcheck.get_numerical_jacobian.update_jacobians.compute_gradient": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.gradcheck.get_numerical_jacobian.update_jacobians.compute_gradient.fn_out": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.gradcheck.gradcheck": {
  "lineno": 229,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._C._functions.UndefinedGrad",
   "torch._mkldnn",
   "torch.autograd.grad",
   "torch.complex128",
   "torch.float64",
   "torch.legacy_contiguous_format",
   "torch.ne",
   "torch.overrides.is_tensor_like",
   "torch.sparse_coo",
   "torch.strided",
   "torch.types._TensorOrTensors",
   "torch.zeros_like",
   "typing.Callable",
   "typing.List",
   "typing.Union",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.autograd.gradcheck.gradcheck.checkIfNumericalAnalyticAreClose": {
  "lineno": 369,
  "symbols_in_volume": [
   "torch.allclose"
  ],
  "type": "function"
 },
 "torch.autograd.gradcheck.gradcheck.check_undefined_grad_support": {
  "lineno": 443,
  "symbols_in_volume": [
   "torch.autograd.grad",
   "torch.legacy_contiguous_format",
   "torch.zeros_like"
  ],
  "type": "function"
 },
 "torch.autograd.gradcheck.gradcheck.fail_test": {
  "lineno": 287,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.gradcheck.gradcheck.fn": {
  "lineno": 340,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.gradcheck.gradcheck.not_reentrant_error": {
  "lineno": 393,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.gradcheck.gradcheck.warn_bc_breaking": {
  "lineno": 436,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.autograd.gradcheck.gradgradcheck": {
  "lineno": 484,
  "symbols_in_volume": [
   "torch.types._TensorOrTensors",
   "typing.Callable",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.autograd.gradcheck.gradgradcheck.new_func": {
  "lineno": 564,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.autograd.grad"
  ],
  "type": "function"
 },
 "torch.autograd.gradcheck.gradgradcheck.randn_like": {
  "lineno": 551,
  "symbols_in_volume": [
   "torch.legacy_contiguous_format",
   "torch.testing.make_non_contiguous",
   "torch.testing.randn_like"
  ],
  "type": "function"
 },
 "torch.autograd.gradcheck.iter_tensors": {
  "lineno": 37,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._six.container_abcs.Iterable",
   "torch.overrides.is_tensor_like",
   "typing.Iterable",
   "typing.Union"
  ],
  "type": "function"
 },
 "torch.autograd.gradcheck.make_jacobian": {
  "lineno": 20,
  "symbols_in_volume": [
   "torch._six.container_abcs.Iterable",
   "torch.overrides.is_tensor_like",
   "torch.strided"
  ],
  "type": "function"
 },
 "torch.autograd.gradcheck.zero_gradients": {
  "lineno": 10,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._six.container_abcs.Iterable"
  ],
  "type": "function"
 },
 "torch.autograd.profiler": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "module"
 },
 "torch.autograd.profiler.ContextDecorator": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.autograd.profiler.ContextDecorator.__call__": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.ContextDecorator.__call__.wrapped": {
  "lineno": 26,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "torch.autograd.profiler.ContextDecorator.__enter__": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.ContextDecorator.__exit__": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.EnforceUnique": {
  "lineno": 1083,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.autograd.profiler.EnforceUnique.__init__": {
  "lineno": 1085,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.EnforceUnique.see": {
  "lineno": 1088,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.EventList": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.autograd.profiler.EventList.__init__": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.EventList.__str__": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.EventList.cpu_children_populated": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.EventList.export_chrome_trace": {
  "lineno": 181,
  "symbols_in_volume": [
   "os.SEEK_SET"
  ],
  "type": "function"
 },
 "torch.autograd.profiler.EventList.key_averages": {
  "lineno": 249,
  "symbols_in_volume": [
   "collections.defaultdict",
   "typing.Dict",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.autograd.profiler.EventList.key_averages.get_key": {
  "lineno": 267,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.EventList.populate_cpu_children": {
  "lineno": 47,
  "symbols_in_volume": [
   "itertools.groupby",
   "operator.attrgetter",
   "typing.List"
  ],
  "type": "function"
 },
 "torch.autograd.profiler.EventList.self_cpu_time_total": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.EventList.set_backward_stacktraces": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.EventList.set_backward_stacktraces.bw_parent": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.EventList.table": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.EventList.total_average": {
  "lineno": 284,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.FormattedTimesMixin": {
  "lineno": 697,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.autograd.profiler.FormattedTimesMixin.cpu_time": {
  "lineno": 709,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.FormattedTimesMixin.cuda_time": {
  "lineno": 713,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.FunctionEvent": {
  "lineno": 730,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.autograd.profiler.FunctionEvent.__init__": {
  "lineno": 732,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.autograd.profiler.FunctionEvent.__repr__": {
  "lineno": 820,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.FunctionEvent.append_cpu_child": {
  "lineno": 758,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.FunctionEvent.append_kernel": {
  "lineno": 755,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.FunctionEvent.cpu_time_total": {
  "lineno": 812,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.FunctionEvent.cuda_time_total": {
  "lineno": 803,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.FunctionEvent.key": {
  "lineno": 816,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.FunctionEvent.self_cpu_memory_usage": {
  "lineno": 779,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.FunctionEvent.self_cpu_time_total": {
  "lineno": 795,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.FunctionEvent.self_cuda_memory_usage": {
  "lineno": 787,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.FunctionEvent.self_cuda_time_total": {
  "lineno": 807,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.FunctionEvent.set_cpu_parent": {
  "lineno": 767,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.FunctionEventAvg": {
  "lineno": 844,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.autograd.profiler.FunctionEventAvg.__iadd__": {
  "lineno": 894,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.FunctionEventAvg.__init__": {
  "lineno": 846,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.autograd.profiler.FunctionEventAvg.__repr__": {
  "lineno": 897,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.FunctionEventAvg.add": {
  "lineno": 866,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.Interval": {
  "lineno": 718,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.autograd.profiler.Interval.__init__": {
  "lineno": 719,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.Interval.elapsed_us": {
  "lineno": 723,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.StringTable": {
  "lineno": 917,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "class"
 },
 "torch.autograd.profiler.StringTable.__missing__": {
  "lineno": 918,
  "symbols_in_volume": [
   "torch._C._demangle"
  ],
  "type": "function"
 },
 "torch.autograd.profiler.attr_formatter": {
  "lineno": 693,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.build_table": {
  "lineno": 1163,
  "symbols_in_volume": [
   "torch.cuda.is_available"
  ],
  "type": "function"
 },
 "torch.autograd.profiler.build_table.add_column": {
  "lineno": 1240,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.build_table.append": {
  "lineno": 1265,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.emit_nvtx": {
  "lineno": 539,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.autograd.profiler.emit_nvtx.__enter__": {
  "lineno": 625,
  "symbols_in_volume": [
   "torch.autograd.ProfilerConfig",
   "torch.autograd.ProfilerState.NVTX",
   "torch.autograd._enable_profiler",
   "torch.cuda.synchronize"
  ],
  "type": "function"
 },
 "torch.autograd.profiler.emit_nvtx.__exit__": {
  "lineno": 641,
  "symbols_in_volume": [
   "torch.autograd._disable_profiler",
   "torch.cuda.synchronize"
  ],
  "type": "function"
 },
 "torch.autograd.profiler.emit_nvtx.__init__": {
  "lineno": 620,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.format_memory": {
  "lineno": 679,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.format_time": {
  "lineno": 661,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.format_time_share": {
  "lineno": 672,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.load_nvprof": {
  "lineno": 649,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.parse_event_records": {
  "lineno": 925,
  "symbols_in_volume": [
   "itertools.chain"
  ],
  "type": "function"
 },
 "torch.autograd.profiler.parse_event_records.adjusted_time": {
  "lineno": 965,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.parse_event_records.filter_stack_entry": {
  "lineno": 949,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.parse_event_records.get_record_key": {
  "lineno": 926,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.parse_nvprof_trace": {
  "lineno": 1094,
  "symbols_in_volume": [
   "sqlite3.Row",
   "sqlite3.connect",
   "torch._C._demangle"
  ],
  "type": "function"
 },
 "torch.autograd.profiler.profile": {
  "lineno": 298,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.autograd.profiler.profile.__enter__": {
  "lineno": 378,
  "symbols_in_volume": [
   "torch.autograd.ProfilerConfig",
   "torch.autograd.ProfilerState.CPU",
   "torch.autograd.ProfilerState.CUDA",
   "torch.autograd._enable_profiler"
  ],
  "type": "function"
 },
 "torch.autograd.profiler.profile.__exit__": {
  "lineno": 395,
  "symbols_in_volume": [
   "torch.autograd._disable_profiler"
  ],
  "type": "function"
 },
 "torch.autograd.profiler.profile.__init__": {
  "lineno": 361,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.profile.__repr__": {
  "lineno": 407,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.profile.__str__": {
  "lineno": 412,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.profile._check_finish": {
  "lineno": 418,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.profile.export_chrome_trace": {
  "lineno": 432,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.profile.key_averages": {
  "lineno": 438,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.profile.self_cpu_time_total": {
  "lineno": 450,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.profile.table": {
  "lineno": 423,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.profile.total_average": {
  "lineno": 444,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.autograd.profiler.record_function": {
  "lineno": 460,
  "symbols_in_volume": [
   "contextlib.ContextDecorator"
  ],
  "type": "class"
 },
 "torch.autograd.profiler.record_function.__enter__": {
  "lineno": 502,
  "symbols_in_volume": [
   "torch.ops.profiler._record_function_enter"
  ],
  "type": "function"
 },
 "torch.autograd.profiler.record_function.__exit__": {
  "lineno": 506,
  "symbols_in_volume": [
   "torch.ops.profiler._record_function_exit",
   "typing.Any"
  ],
  "type": "function"
 },
 "torch.autograd.profiler.record_function.__init__": {
  "lineno": 494,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.autograd.profiler.record_function._call_end_callbacks_on_future": {
  "lineno": 510,
  "symbols_in_volume": [
   "torch.futures.Future",
   "torch.ops.profiler._call_end_callbacks_on_jit_fut",
   "typing.Any"
  ],
  "type": "function"
 },
 "torch.autograd.variable": {
  "lineno": null,
  "symbols_in_volume": [
   "torch._C._ImperativeEngine"
  ],
  "type": "module"
 },
 "torch.autograd.variable.Variable": {
  "lineno": 11,
  "symbols_in_volume": [
   "torch._C._LegacyVariableBase",
   "torch._six.with_metaclass"
  ],
  "type": "class"
 },
 "torch.autograd.variable.VariableMeta": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.autograd.variable.VariableMeta.__instancecheck__": {
  "lineno": 6,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.backends": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.backends.ContextProp": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.backends.ContextProp.__get__": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.backends.ContextProp.__init__": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.backends.ContextProp.__set__": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.backends.PropModule": {
  "lineno": 41,
  "symbols_in_volume": [
   "types.ModuleType"
  ],
  "type": "class"
 },
 "torch.backends.PropModule.__getattr__": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.backends.PropModule.__init__": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.backends.__allow_nonbracketed_mutation": {
  "lineno": 16,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "torch.backends.cuda": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.backends.cuda.cuBLASModule": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.backends.cuda.cuBLASModule.__getattr__": {
  "lineno": 87,
  "symbols_in_volume": [
   "torch._C._get_cublas_allow_tf32"
  ],
  "type": "function"
 },
 "torch.backends.cuda.cuBLASModule.__setattr__": {
  "lineno": 91,
  "symbols_in_volume": [
   "torch._C._set_cublas_allow_tf32"
  ],
  "type": "function"
 },
 "torch.backends.cuda.cuFFTPlanCache": {
  "lineno": 29,
  "symbols_in_volume": [
   "torch._cufft_get_plan_cache_max_size",
   "torch._cufft_get_plan_cache_size",
   "torch._cufft_set_plan_cache_max_size"
  ],
  "type": "class"
 },
 "torch.backends.cuda.cuFFTPlanCache.__init__": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.backends.cuda.cuFFTPlanCache.clear": {
  "lineno": 46,
  "symbols_in_volume": [
   "torch._cufft_clear_plan_cache"
  ],
  "type": "function"
 },
 "torch.backends.cuda.cuFFTPlanCacheAttrContextProp": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.backends.cuda.cuFFTPlanCacheAttrContextProp.__get__": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.backends.cuda.cuFFTPlanCacheAttrContextProp.__init__": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.backends.cuda.cuFFTPlanCacheAttrContextProp.__set__": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.backends.cuda.cuFFTPlanCacheManager": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.backends.cuda.cuFFTPlanCacheManager.__getattr__": {
  "lineno": 76,
  "symbols_in_volume": [
   "torch.cuda.current_device"
  ],
  "type": "function"
 },
 "torch.backends.cuda.cuFFTPlanCacheManager.__getitem__": {
  "lineno": 66,
  "symbols_in_volume": [
   "torch.cuda._utils._get_device_index",
   "torch.cuda.device_count"
  ],
  "type": "function"
 },
 "torch.backends.cuda.cuFFTPlanCacheManager.__init__": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.backends.cuda.cuFFTPlanCacheManager.__setattr__": {
  "lineno": 79,
  "symbols_in_volume": [
   "torch.cuda.current_device"
  ],
  "type": "function"
 },
 "torch.backends.cuda.is_built": {
  "lineno": 5,
  "symbols_in_volume": [
   "torch._C.has_cuda"
  ],
  "type": "function"
 },
 "torch.backends.cudnn": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.modules",
   "torch._C._cudnn",
   "torch.double",
   "torch.float",
   "torch.half"
  ],
  "type": "module"
 },
 "torch.backends.cudnn.CudnnModule": {
  "lineno": 119,
  "symbols_in_volume": [
   "torch._C._get_cudnn_allow_tf32",
   "torch._C._get_cudnn_benchmark",
   "torch._C._get_cudnn_deterministic",
   "torch._C._get_cudnn_enabled",
   "torch._C._set_cudnn_allow_tf32",
   "torch._C._set_cudnn_benchmark",
   "torch._C._set_cudnn_deterministic",
   "torch._C._set_cudnn_enabled",
   "torch.backends.ContextProp",
   "torch.backends.PropModule"
  ],
  "type": "class"
 },
 "torch.backends.cudnn.CudnnModule.__init__": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.backends.cudnn._init": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.backends.cudnn.flags": {
  "lineno": 103,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "torch.backends.__allow_nonbracketed_mutation"
  ],
  "type": "function"
 },
 "torch.backends.cudnn.is_acceptable": {
  "lineno": 67,
  "symbols_in_volume": [
   "sys.platform",
   "torch._C._get_cudnn_enabled",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.backends.cudnn.is_available": {
  "lineno": 62,
  "symbols_in_volume": [
   "torch._C.has_cudnn"
  ],
  "type": "function"
 },
 "torch.backends.cudnn.rnn": {
  "lineno": null,
  "symbols_in_volume": [
   "torch._C._cudnn"
  ],
  "type": "module"
 },
 "torch.backends.cudnn.rnn.Unserializable": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.backends.cudnn.rnn.Unserializable.__getstate__": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.backends.cudnn.rnn.Unserializable.__init__": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.backends.cudnn.rnn.Unserializable.__setstate__": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.backends.cudnn.rnn.Unserializable.get": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.backends.cudnn.rnn.get_cudnn_mode": {
  "lineno": 11,
  "symbols_in_volume": [
   "torch._C._cudnn.RNNMode.gru",
   "torch._C._cudnn.RNNMode.lstm",
   "torch._C._cudnn.RNNMode.rnn_relu",
   "torch._C._cudnn.RNNMode.rnn_tanh"
  ],
  "type": "function"
 },
 "torch.backends.cudnn.rnn.init_dropout_state": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.backends.cudnn.set_flags": {
  "lineno": 87,
  "symbols_in_volume": [
   "torch._C._get_cudnn_allow_tf32",
   "torch._C._get_cudnn_benchmark",
   "torch._C._get_cudnn_deterministic",
   "torch._C._get_cudnn_enabled",
   "torch._C._set_cudnn_allow_tf32",
   "torch._C._set_cudnn_benchmark",
   "torch._C._set_cudnn_deterministic",
   "torch._C._set_cudnn_enabled"
  ],
  "type": "function"
 },
 "torch.backends.cudnn.version": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.backends.disable_global_flags": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.backends.flags_frozen": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.backends.mkl": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.backends.mkl.is_available": {
  "lineno": 4,
  "symbols_in_volume": [
   "torch._C.has_mkl"
  ],
  "type": "function"
 },
 "torch.backends.mkldnn": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.modules"
  ],
  "type": "module"
 },
 "torch.backends.mkldnn.MkldnnModule": {
  "lineno": 25,
  "symbols_in_volume": [
   "torch._C._get_mkldnn_enabled",
   "torch._C._set_mkldnn_enabled",
   "torch.backends.ContextProp",
   "torch.backends.PropModule"
  ],
  "type": "class"
 },
 "torch.backends.mkldnn.MkldnnModule.__init__": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.backends.mkldnn.flags": {
  "lineno": 15,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "torch.backends.__allow_nonbracketed_mutation"
  ],
  "type": "function"
 },
 "torch.backends.mkldnn.is_available": {
  "lineno": 6,
  "symbols_in_volume": [
   "torch._C.has_mkldnn"
  ],
  "type": "function"
 },
 "torch.backends.mkldnn.set_flags": {
  "lineno": 10,
  "symbols_in_volume": [
   "torch._C._get_mkldnn_enabled",
   "torch._C._set_mkldnn_enabled"
  ],
  "type": "function"
 },
 "torch.backends.openmp": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.backends.openmp.is_available": {
  "lineno": 4,
  "symbols_in_volume": [
   "torch._C.has_openmp"
  ],
  "type": "function"
 },
 "torch.backends.quantized": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.modules",
   "typing.List"
  ],
  "type": "module"
 },
 "torch.backends.quantized.QuantizedEngine": {
  "lineno": 39,
  "symbols_in_volume": [
   "types.ModuleType"
  ],
  "type": "class"
 },
 "torch.backends.quantized.QuantizedEngine.__getattr__": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.backends.quantized.QuantizedEngine.__init__": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.backends.quantized._QEngineProp": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.backends.quantized._QEngineProp.__get__": {
  "lineno": 25,
  "symbols_in_volume": [
   "torch._C._get_qengine"
  ],
  "type": "function"
 },
 "torch.backends.quantized._QEngineProp.__set__": {
  "lineno": 28,
  "symbols_in_volume": [
   "torch._C._set_qengine"
  ],
  "type": "function"
 },
 "torch.backends.quantized._SupportedQEnginesProp": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.backends.quantized._SupportedQEnginesProp.__get__": {
  "lineno": 32,
  "symbols_in_volume": [
   "torch._C._supported_qengines",
   "typing.List"
  ],
  "type": "function"
 },
 "torch.backends.quantized._SupportedQEnginesProp.__set__": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.backends.quantized._get_qengine_id": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.backends.quantized._get_qengine_str": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.backends.xnnpack": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.modules"
  ],
  "type": "module"
 },
 "torch.backends.xnnpack.XNNPACKEngine": {
  "lineno": 12,
  "symbols_in_volume": [
   "types.ModuleType"
  ],
  "type": "class"
 },
 "torch.backends.xnnpack.XNNPACKEngine.__getattr__": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.backends.xnnpack.XNNPACKEngine.__init__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.backends.xnnpack._XNNPACKEnabled": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.backends.xnnpack._XNNPACKEnabled.__get__": {
  "lineno": 6,
  "symbols_in_volume": [
   "torch._C._is_xnnpack_enabled"
  ],
  "type": "function"
 },
 "torch.backends.xnnpack._XNNPACKEnabled.__set__": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.compiled_with_cxx11_abi": {
  "lineno": 585,
  "symbols_in_volume": [
   "torch._C._GLIBCXX_USE_CXX11_ABI"
  ],
  "type": "function"
 },
 "torch.contrib": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.contrib._tensorboard_vis": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.contrib._tensorboard_vis.dump_tensorboard_summary": {
  "lineno": 20,
  "symbols_in_volume": [
   "tensorflow.core.util.event_pb2.Event",
   "tensorflow.python.summary.writer.writer.FileWriter",
   "time.time"
  ],
  "type": "function"
 },
 "torch.contrib._tensorboard_vis.visualize": {
  "lineno": 27,
  "symbols_in_volume": [
   "functools.partial",
   "tensorflow.core.framework.graph_pb2.GraphDef",
   "torch._C.GraphExecutorState"
  ],
  "type": "function"
 },
 "torch.contrib._tensorboard_vis.visualize_graph_executor": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.contrib._tensorboard_vis.visualize_rec": {
  "lineno": 95,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "torch.contrib._tensorboard_vis.visualize_rec.add_fusion_group": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.contrib._tensorboard_vis.visualize_rec.add_graph_executor": {
  "lineno": 118,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "function"
 },
 "torch.contrib._tensorboard_vis.visualize_rec.add_node": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.contrib._tensorboard_vis.visualize_rec.inline_graph": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.contrib._tensorboard_vis.visualize_rec.name_for": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda": {
  "lineno": null,
  "symbols_in_volume": [
   "threading.Lock",
   "threading.local",
   "torch._C",
   "torch._C.Generator",
   "torch._C._CudaDeviceProperties",
   "torch._C.__dict__",
   "torch._C._cudart",
   "torch._storage_classes.add",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "module"
 },
 "torch.cuda.BFloat16Storage": {
  "lineno": 512,
  "symbols_in_volume": [
   "torch._C.CudaBFloat16StorageBase"
  ],
  "type": "class"
 },
 "torch.cuda.BoolStorage": {
  "lineno": 508,
  "symbols_in_volume": [
   "torch._C.CudaBoolStorageBase"
  ],
  "type": "class"
 },
 "torch.cuda.ByteStorage": {
  "lineno": 500,
  "symbols_in_volume": [
   "torch._C.CudaByteStorageBase"
  ],
  "type": "class"
 },
 "torch.cuda.CharStorage": {
  "lineno": 496,
  "symbols_in_volume": [
   "torch._C.CudaCharStorageBase"
  ],
  "type": "class"
 },
 "torch.cuda.ComplexDoubleStorage": {
  "lineno": 515,
  "symbols_in_volume": [
   "torch._C.CudaComplexDoubleStorageBase"
  ],
  "type": "class"
 },
 "torch.cuda.ComplexFloatStorage": {
  "lineno": 519,
  "symbols_in_volume": [
   "torch._C.CudaComplexFloatStorageBase"
  ],
  "type": "class"
 },
 "torch.cuda.CudaError": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.cuda.CudaError.__init__": {
  "lineno": 200,
  "symbols_in_volume": [
   "torch._C._cudart.cudaError",
   "torch._C._cudart.cudaGetErrorString"
  ],
  "type": "function"
 },
 "torch.cuda.DeferredCudaCallError": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.cuda.DoubleStorage": {
  "lineno": 476,
  "symbols_in_volume": [
   "torch._C.CudaDoubleStorageBase"
  ],
  "type": "class"
 },
 "torch.cuda.FloatStorage": {
  "lineno": 480,
  "symbols_in_volume": [
   "torch._C.CudaFloatStorageBase"
  ],
  "type": "class"
 },
 "torch.cuda.HalfStorage": {
  "lineno": 504,
  "symbols_in_volume": [
   "torch._C.CudaHalfStorageBase"
  ],
  "type": "class"
 },
 "torch.cuda.IntStorage": {
  "lineno": 488,
  "symbols_in_volume": [
   "torch._C.CudaIntStorageBase"
  ],
  "type": "class"
 },
 "torch.cuda.LongStorage": {
  "lineno": 484,
  "symbols_in_volume": [
   "torch._C.CudaLongStorageBase"
  ],
  "type": "class"
 },
 "torch.cuda.ShortStorage": {
  "lineno": 492,
  "symbols_in_volume": [
   "torch._C.CudaShortStorageBase"
  ],
  "type": "class"
 },
 "torch.cuda._CudaBase": {
  "lineno": 465,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.cuda._CudaBase.type": {
  "lineno": 469,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda._check_capability": {
  "lineno": 59,
  "symbols_in_volume": [
   "torch._C._cuda_getCompiledVersion",
   "torch.version.cuda",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.cuda._check_cubins": {
  "lineno": 85,
  "symbols_in_volume": [
   "torch.version.cuda",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.cuda._lazy_call": {
  "lineno": 112,
  "symbols_in_volume": [
   "traceback.format_stack"
  ],
  "type": "function"
 },
 "torch.cuda._lazy_init": {
  "lineno": 140,
  "symbols_in_volume": [
   "sys.version_info",
   "torch._C",
   "torch._C._cuda_init",
   "torch._C._cudart"
  ],
  "type": "function"
 },
 "torch.cuda._lazy_new": {
  "lineno": 457,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda._sleep": {
  "lineno": 55,
  "symbols_in_volume": [
   "torch._C._cuda_sleep"
  ],
  "type": "function"
 },
 "torch.cuda._utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.cuda._utils._dummy_type": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda._utils._dummy_type.init_err": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda._utils._get_device_index": {
  "lineno": 8,
  "symbols_in_volume": [
   "torch._utils._get_device_index",
   "torch.device",
   "torch.types.Device",
   "typing.Union"
  ],
  "type": "function"
 },
 "torch.cuda.amp": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.cuda.amp.autocast_mode": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.cuda.amp.autocast_mode._cast": {
  "lineno": 141,
  "symbols_in_volume": [
   "numpy.ndarray",
   "torch.Tensor",
   "torch._six.container_abcs.Iterable",
   "torch._six.container_abcs.Mapping",
   "torch._six.string_classes",
   "torch.float64"
  ],
  "type": "function"
 },
 "torch.cuda.amp.autocast_mode.autocast": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.cuda.amp.autocast_mode.autocast.__call__": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.amp.autocast_mode.autocast.__call__.decorate_autocast": {
  "lineno": 132,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "torch.cuda.amp.autocast_mode.autocast.__enter__": {
  "lineno": 119,
  "symbols_in_volume": [
   "torch.autocast_increment_nesting",
   "torch.is_autocast_enabled",
   "torch.set_autocast_enabled"
  ],
  "type": "function"
 },
 "torch.cuda.amp.autocast_mode.autocast.__exit__": {
  "lineno": 124,
  "symbols_in_volume": [
   "torch.autocast_decrement_nesting",
   "torch.clear_autocast_cache",
   "torch.set_autocast_enabled"
  ],
  "type": "function"
 },
 "torch.cuda.amp.autocast_mode.autocast.__init__": {
  "lineno": 112,
  "symbols_in_volume": [
   "torch.cuda.is_available",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.cuda.amp.autocast_mode.custom_bwd": {
  "lineno": 220,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.amp.autocast_mode.custom_bwd.decorate_bwd": {
  "lineno": 227,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "torch.cuda.amp.autocast_mode.custom_fwd": {
  "lineno": 171,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "function"
 },
 "torch.cuda.amp.autocast_mode.custom_fwd.decorate_fwd": {
  "lineno": 201,
  "symbols_in_volume": [
   "functools.wraps",
   "torch.is_autocast_enabled"
  ],
  "type": "function"
 },
 "torch.cuda.amp.grad_scaler": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.cuda.amp.grad_scaler.GradScaler": {
  "lineno": 41,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Any",
   "typing.Dict",
   "typing.Optional"
  ],
  "type": "class"
 },
 "torch.cuda.amp.grad_scaler.GradScaler.__getstate__": {
  "lineno": 495,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.amp.grad_scaler.GradScaler.__init__": {
  "lineno": 108,
  "symbols_in_volume": [
   "collections.defaultdict",
   "torch.cuda.is_available",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.cuda.amp.grad_scaler.GradScaler.__setstate__": {
  "lineno": 509,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.amp.grad_scaler.GradScaler._check_inf_per_device": {
  "lineno": 512,
  "symbols_in_volume": [
   "torch.float32",
   "torch.full"
  ],
  "type": "function"
 },
 "torch.cuda.amp.grad_scaler.GradScaler._check_scale_growth_tracker": {
  "lineno": 135,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.cuda.amp.grad_scaler.GradScaler._found_inf_per_device": {
  "lineno": 523,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.amp.grad_scaler.GradScaler._get_growth_tracker": {
  "lineno": 437,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.amp.grad_scaler.GradScaler._get_scale_async": {
  "lineno": 383,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.amp.grad_scaler.GradScaler._lazy_init_scale_growth_tracker": {
  "lineno": 141,
  "symbols_in_volume": [
   "torch.float32",
   "torch.full",
   "torch.int32"
  ],
  "type": "function"
 },
 "torch.cuda.amp.grad_scaler.GradScaler._unscale_grads_": {
  "lineno": 190,
  "symbols_in_volume": [
   "torch._amp_non_finite_check_and_unscale_",
   "torch.float16",
   "torch.no_grad"
  ],
  "type": "function"
 },
 "torch.cuda.amp.grad_scaler.GradScaler.get_backoff_factor": {
  "lineno": 411,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.amp.grad_scaler.GradScaler.get_growth_factor": {
  "lineno": 398,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.amp.grad_scaler.GradScaler.get_growth_interval": {
  "lineno": 424,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.amp.grad_scaler.GradScaler.get_scale": {
  "lineno": 386,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.amp.grad_scaler.GradScaler.is_enabled": {
  "lineno": 443,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.amp.grad_scaler.GradScaler.load_state_dict": {
  "lineno": 471,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.amp.grad_scaler.GradScaler.scale": {
  "lineno": 146,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.List"
  ],
  "type": "function"
 },
 "torch.cuda.amp.grad_scaler.GradScaler.scale.apply_scale": {
  "lineno": 170,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._six.container_abcs.Iterable"
  ],
  "type": "function"
 },
 "torch.cuda.amp.grad_scaler.GradScaler.set_backoff_factor": {
  "lineno": 417,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.amp.grad_scaler.GradScaler.set_growth_factor": {
  "lineno": 404,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.amp.grad_scaler.GradScaler.set_growth_interval": {
  "lineno": 430,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.amp.grad_scaler.GradScaler.state_dict": {
  "lineno": 449,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.amp.grad_scaler.GradScaler.step": {
  "lineno": 270,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.amp.grad_scaler.GradScaler.unscale_": {
  "lineno": 218,
  "symbols_in_volume": [
   "torch.float32",
   "torch.full"
  ],
  "type": "function"
 },
 "torch.cuda.amp.grad_scaler.GradScaler.update": {
  "lineno": 327,
  "symbols_in_volume": [
   "collections.defaultdict",
   "torch._amp_update_scale",
   "torch.cuda.FloatTensor",
   "torch.float32",
   "torch.full"
  ],
  "type": "function"
 },
 "torch.cuda.amp.grad_scaler.OptState": {
  "lineno": 31,
  "symbols_in_volume": [
   "enum.Enum"
  ],
  "type": "class"
 },
 "torch.cuda.amp.grad_scaler._MultiDeviceReplicator": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.cuda.amp.grad_scaler._MultiDeviceReplicator.__init__": {
  "lineno": 13,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.device",
   "typing.Dict"
  ],
  "type": "function"
 },
 "torch.cuda.amp.grad_scaler._MultiDeviceReplicator.get": {
  "lineno": 18,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.cuda.amp.grad_scaler._refresh_per_optimizer_state": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.check_error": {
  "lineno": 205,
  "symbols_in_volume": [
   "torch._C._cudart.cudaError.success"
  ],
  "type": "function"
 },
 "torch.cuda.comm": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.cuda.cudaStatus": {
  "lineno": 195,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.cuda.cudart": {
  "lineno": 190,
  "symbols_in_volume": [
   "torch._C._cudart"
  ],
  "type": "function"
 },
 "torch.cuda.current_blas_handle": {
  "lineno": 424,
  "symbols_in_volume": [
   "torch._C._cuda_getCurrentBlasHandle"
  ],
  "type": "function"
 },
 "torch.cuda.current_device": {
  "lineno": 364,
  "symbols_in_volume": [
   "torch._C._cuda_getDevice"
  ],
  "type": "function"
 },
 "torch.cuda.current_stream": {
  "lineno": 396,
  "symbols_in_volume": [
   "torch._C._cuda_getCurrentStream",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.cuda.default_stream": {
  "lineno": 410,
  "symbols_in_volume": [
   "torch._C._cuda_getDefaultStream",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.cuda.device": {
  "lineno": 210,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.cuda.device.__enter__": {
  "lineno": 222,
  "symbols_in_volume": [
   "torch._C._cuda_getDevice",
   "torch._C._cuda_setDevice"
  ],
  "type": "function"
 },
 "torch.cuda.device.__exit__": {
  "lineno": 230,
  "symbols_in_volume": [
   "torch._C._cuda_setDevice"
  ],
  "type": "function"
 },
 "torch.cuda.device.__init__": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.device_count": {
  "lineno": 338,
  "symbols_in_volume": [
   "torch._C._cuda_getDeviceCount"
  ],
  "type": "function"
 },
 "torch.cuda.device_of": {
  "lineno": 236,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.cuda.device_of.__init__": {
  "lineno": 246,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.error": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.cuda.get_arch_list": {
  "lineno": 345,
  "symbols_in_volume": [
   "torch._C._cuda_getArchFlags",
   "typing.List"
  ],
  "type": "function"
 },
 "torch.cuda.get_device_capability": {
  "lineno": 278,
  "symbols_in_volume": [
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.cuda.get_device_name": {
  "lineno": 266,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.cuda.get_device_properties": {
  "lineno": 295,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.get_gencode_flags": {
  "lineno": 354,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.init": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.ipc_collect": {
  "lineno": 383,
  "symbols_in_volume": [
   "torch._C._cuda_ipc_collect"
  ],
  "type": "function"
 },
 "torch.cuda.is_available": {
  "lineno": 46,
  "symbols_in_volume": [
   "torch._C",
   "torch._C._cuda_getDeviceCount"
  ],
  "type": "function"
 },
 "torch.cuda.is_initialized": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.memory": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.cuda.memory._free_mutex": {
  "lineno": 15,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "torch._C._cuda_lock_mutex",
   "torch._C._cuda_unlock_mutex"
  ],
  "type": "function"
 },
 "torch.cuda.memory._host_allocator": {
  "lineno": 10,
  "symbols_in_volume": [
   "torch._C._cuda_cudaHostAllocator"
  ],
  "type": "function"
 },
 "torch.cuda.memory.caching_allocator_alloc": {
  "lineno": 24,
  "symbols_in_volume": [
   "torch._C._cuda_cudaCachingAllocator_raw_alloc",
   "torch.cuda.current_device",
   "torch.cuda.current_stream",
   "torch.cuda.device",
   "torch.cuda.streams.Stream",
   "torch.types.Device",
   "typing.Union"
  ],
  "type": "function"
 },
 "torch.cuda.memory.caching_allocator_delete": {
  "lineno": 58,
  "symbols_in_volume": [
   "torch._C._cuda_cudaCachingAllocator_raw_delete"
  ],
  "type": "function"
 },
 "torch.cuda.memory.empty_cache": {
  "lineno": 75,
  "symbols_in_volume": [
   "torch._C._cuda_emptyCache"
  ],
  "type": "function"
 },
 "torch.cuda.memory.list_gpu_processes": {
  "lineno": 472,
  "symbols_in_volume": [
   "pynvml.NVMLError_DriverNotLoaded",
   "pynvml.nvmlDeviceGetComputeRunningProcesses",
   "pynvml.nvmlDeviceGetHandleByIndex",
   "pynvml.nvmlInit",
   "torch.types.Device",
   "typing.Union"
  ],
  "type": "function"
 },
 "torch.cuda.memory.max_memory_allocated": {
  "lineno": 282,
  "symbols_in_volume": [
   "torch.types.Device",
   "typing.Union"
  ],
  "type": "function"
 },
 "torch.cuda.memory.max_memory_cached": {
  "lineno": 350,
  "symbols_in_volume": [
   "torch.types.Device",
   "typing.Union",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.cuda.memory.max_memory_reserved": {
  "lineno": 320,
  "symbols_in_volume": [
   "torch.types.Device",
   "typing.Union"
  ],
  "type": "function"
 },
 "torch.cuda.memory.memory_allocated": {
  "lineno": 264,
  "symbols_in_volume": [
   "torch.types.Device",
   "typing.Union"
  ],
  "type": "function"
 },
 "torch.cuda.memory.memory_cached": {
  "lineno": 342,
  "symbols_in_volume": [
   "torch.types.Device",
   "typing.Union",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.cuda.memory.memory_reserved": {
  "lineno": 304,
  "symbols_in_volume": [
   "torch.types.Device",
   "typing.Union"
  ],
  "type": "function"
 },
 "torch.cuda.memory.memory_snapshot": {
  "lineno": 358,
  "symbols_in_volume": [
   "torch._C._cuda_memorySnapshot"
  ],
  "type": "function"
 },
 "torch.cuda.memory.memory_stats": {
  "lineno": 90,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "torch.types.Device",
   "typing.Any",
   "typing.Dict",
   "typing.Union"
  ],
  "type": "function"
 },
 "torch.cuda.memory.memory_stats._recurse_add_to_result": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.memory.memory_stats_as_nested_dict": {
  "lineno": 167,
  "symbols_in_volume": [
   "torch._C._cuda_memoryStats",
   "torch.types.Device",
   "typing.Any",
   "typing.Dict",
   "typing.Union"
  ],
  "type": "function"
 },
 "torch.cuda.memory.memory_summary": {
  "lineno": 371,
  "symbols_in_volume": [
   "torch.types.Device",
   "typing.Union"
  ],
  "type": "function"
 },
 "torch.cuda.memory.memory_summary._format_count": {
  "lineno": 403,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.memory.memory_summary._format_size": {
  "lineno": 392,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.memory.reset_accumulated_memory_stats": {
  "lineno": 173,
  "symbols_in_volume": [
   "torch._C._cuda_resetAccumulatedMemoryStats",
   "torch.types.Device",
   "typing.Union"
  ],
  "type": "function"
 },
 "torch.cuda.memory.reset_max_memory_allocated": {
  "lineno": 212,
  "symbols_in_volume": [
   "torch.types.Device",
   "typing.Union",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.cuda.memory.reset_max_memory_cached": {
  "lineno": 238,
  "symbols_in_volume": [
   "torch.types.Device",
   "typing.Union",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.cuda.memory.reset_peak_memory_stats": {
  "lineno": 193,
  "symbols_in_volume": [
   "torch._C._cuda_resetPeakMemoryStats",
   "torch.types.Device",
   "typing.Union"
  ],
  "type": "function"
 },
 "torch.cuda.nccl": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.cuda.nccl._check_sequence_type": {
  "lineno": 47,
  "symbols_in_volume": [
   "collections.Container",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "torch.cuda.nccl.all_gather": {
  "lineno": 98,
  "symbols_in_volume": [
   "typing.Sequence"
  ],
  "type": "function"
 },
 "torch.cuda.nccl.all_reduce": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.nccl.broadcast": {
  "lineno": 93,
  "symbols_in_volume": [
   "typing.Sequence"
  ],
  "type": "function"
 },
 "torch.cuda.nccl.init_rank": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.nccl.is_available": {
  "lineno": 14,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.cuda.nccl.reduce": {
  "lineno": 62,
  "symbols_in_volume": [
   "typing.Optional",
   "typing.Sequence",
   "typing.Union",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.cuda.nccl.reduce_scatter": {
  "lineno": 104,
  "symbols_in_volume": [
   "typing.Sequence"
  ],
  "type": "function"
 },
 "torch.cuda.nccl.unique_id": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.nccl.version": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.nvtx": {
  "lineno": null,
  "symbols_in_volume": [
   "torch._C._nvtx"
  ],
  "type": "module"
 },
 "torch.cuda.nvtx._NVTXStub": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.cuda.nvtx._NVTXStub._fail": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.nvtx.mark": {
  "lineno": 37,
  "symbols_in_volume": [
   "torch._C._nvtx.markA"
  ],
  "type": "function"
 },
 "torch.cuda.nvtx.range_pop": {
  "lineno": 29,
  "symbols_in_volume": [
   "torch._C._nvtx.rangePop"
  ],
  "type": "function"
 },
 "torch.cuda.nvtx.range_push": {
  "lineno": 18,
  "symbols_in_volume": [
   "torch._C._nvtx.rangePushA"
  ],
  "type": "function"
 },
 "torch.cuda.profiler": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.cuda.profiler.init": {
  "lineno": 17,
  "symbols_in_volume": [
   "tempfile.NamedTemporaryFile"
  ],
  "type": "function"
 },
 "torch.cuda.profiler.profile": {
  "lineno": 42,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "torch.cuda.profiler.start": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.profiler.stop": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.random": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.cuda.random.get_rng_state": {
  "lineno": 12,
  "symbols_in_volume": [
   "torch.cuda.default_generators",
   "torch.device",
   "typing.Union"
  ],
  "type": "function"
 },
 "torch.cuda.random.get_rng_state_all": {
  "lineno": 34,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "torch.cuda.random.initial_seed": {
  "lineno": 153,
  "symbols_in_volume": [
   "torch.cuda.default_generators"
  ],
  "type": "function"
 },
 "torch.cuda.random.manual_seed": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.random.manual_seed.cb": {
  "lineno": 90,
  "symbols_in_volume": [
   "torch.cuda.default_generators"
  ],
  "type": "function"
 },
 "torch.cuda.random.manual_seed_all": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.random.manual_seed_all.cb": {
  "lineno": 108,
  "symbols_in_volume": [
   "torch.cuda.default_generators"
  ],
  "type": "function"
 },
 "torch.cuda.random.seed": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.random.seed.cb": {
  "lineno": 125,
  "symbols_in_volume": [
   "torch.cuda.default_generators"
  ],
  "type": "function"
 },
 "torch.cuda.random.seed_all": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.random.seed_all.cb": {
  "lineno": 138,
  "symbols_in_volume": [
   "torch.cuda.default_generators"
  ],
  "type": "function"
 },
 "torch.cuda.random.set_rng_state": {
  "lineno": 43,
  "symbols_in_volume": [
   "torch.contiguous_format",
   "torch.device",
   "typing.Union"
  ],
  "type": "function"
 },
 "torch.cuda.random.set_rng_state.cb": {
  "lineno": 57,
  "symbols_in_volume": [
   "torch.cuda.default_generators",
   "torch.device",
   "typing.cast"
  ],
  "type": "function"
 },
 "torch.cuda.random.set_rng_state_all": {
  "lineno": 67,
  "symbols_in_volume": [
   "typing.Iterable"
  ],
  "type": "function"
 },
 "torch.cuda.set_device": {
  "lineno": 251,
  "symbols_in_volume": [
   "torch._C._cuda_setDevice"
  ],
  "type": "function"
 },
 "torch.cuda.sparse": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.cuda.stream": {
  "lineno": 303,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "torch._C._cuda_setStream"
  ],
  "type": "function"
 },
 "torch.cuda.streams": {
  "lineno": null,
  "symbols_in_volume": [
   "torch._C",
   "torch._C.__dict__"
  ],
  "type": "module"
 },
 "torch.cuda.streams.Event": {
  "lineno": 113,
  "symbols_in_volume": [
   "torch._C._CudaEventBase"
  ],
  "type": "class"
 },
 "torch.cuda.streams.Event.__new__": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.streams.Event.__repr__": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.streams.Event._as_parameter_": {
  "lineno": 195,
  "symbols_in_volume": [
   "ctypes.c_void_p"
  ],
  "type": "function"
 },
 "torch.cuda.streams.Event.elapsed_time": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.streams.Event.from_ipc_handle": {
  "lineno": 141,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.streams.Event.ipc_handle": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.streams.Event.query": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.streams.Event.record": {
  "lineno": 146,
  "symbols_in_volume": [
   "torch.cuda.current_stream"
  ],
  "type": "function"
 },
 "torch.cuda.streams.Event.synchronize": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.streams.Event.wait": {
  "lineno": 155,
  "symbols_in_volume": [
   "torch.cuda.current_stream"
  ],
  "type": "function"
 },
 "torch.cuda.streams.Stream": {
  "lineno": 12,
  "symbols_in_volume": [
   "torch._C._CudaStreamBase"
  ],
  "type": "class"
 },
 "torch.cuda.streams.Stream.__eq__": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.streams.Stream.__hash__": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.streams.Stream.__new__": {
  "lineno": 31,
  "symbols_in_volume": [
   "torch.cuda.device"
  ],
  "type": "function"
 },
 "torch.cuda.streams.Stream.__repr__": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.streams.Stream._as_parameter_": {
  "lineno": 96,
  "symbols_in_volume": [
   "ctypes.c_void_p"
  ],
  "type": "function"
 },
 "torch.cuda.streams.Stream.query": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.streams.Stream.record_event": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.streams.Stream.synchronize": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.streams.Stream.wait_event": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.streams.Stream.wait_stream": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.cuda.synchronize": {
  "lineno": 370,
  "symbols_in_volume": [
   "torch._C._cuda_synchronize",
   "torch.cuda.device"
  ],
  "type": "function"
 },
 "torch.distributed": {
  "lineno": null,
  "symbols_in_volume": [
   "torch._C._c10d_init"
  ],
  "type": "module"
 },
 "torch.distributed.autograd": {
  "lineno": null,
  "symbols_in_volume": [
   "torch._C._dist_autograd_init"
  ],
  "type": "module"
 },
 "torch.distributed.autograd.context": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.distributed.autograd.context.__enter__": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.autograd.context.__exit__": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.autograd.is_available": {
  "lineno": 6,
  "symbols_in_volume": [
   "torch._C"
  ],
  "type": "function"
 },
 "torch.distributed.constants": {
  "lineno": null,
  "symbols_in_volume": [
   "datetime.timedelta"
  ],
  "type": "module"
 },
 "torch.distributed.distributed_c10d": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributed.distributed_c10d.Backend": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.distributed.distributed_c10d.Backend.__new__": {
  "lineno": 70,
  "symbols_in_volume": [
   "torch._six.string_classes"
  ],
  "type": "function"
 },
 "torch.distributed.distributed_c10d.Backend.register_backend": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.distributed_c10d.GroupMember": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.distributed.distributed_c10d._check_default_pg": {
  "lineno": 204,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.distributed_c10d._check_single_tensor": {
  "lineno": 227,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.distributed.distributed_c10d._check_tensor_list": {
  "lineno": 237,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.distributed.distributed_c10d._get_default_group": {
  "lineno": 280,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.distributed_c10d._get_default_store": {
  "lineno": 291,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.distributed_c10d._get_global_rank": {
  "lineno": 188,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.distributed_c10d._get_group_rank": {
  "lineno": 170,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.distributed_c10d._get_group_size": {
  "lineno": 214,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.distributed_c10d._new_process_group_helper": {
  "lineno": 457,
  "symbols_in_volume": [
   "datetime.timedelta"
  ],
  "type": "function"
 },
 "torch.distributed.distributed_c10d._object_to_tensor": {
  "lineno": 1177,
  "symbols_in_volume": [
   "pickle.dumps",
   "torch.ByteStorage.from_buffer",
   "torch.ByteTensor",
   "torch.LongTensor"
  ],
  "type": "function"
 },
 "torch.distributed.distributed_c10d._rank_not_in_group": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.distributed_c10d._tensor_to_object": {
  "lineno": 1185,
  "symbols_in_volume": [
   "pickle.loads"
  ],
  "type": "function"
 },
 "torch.distributed.distributed_c10d._validate_output_list_for_rank": {
  "lineno": 1508,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.distributed_c10d.all_gather": {
  "lineno": 1406,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.distributed_c10d.all_gather_coalesced": {
  "lineno": 1441,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.distributed_c10d.all_gather_multigpu": {
  "lineno": 1119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.distributed_c10d.all_gather_object": {
  "lineno": 1191,
  "symbols_in_volume": [
   "torch.ByteTensor",
   "torch.empty",
   "torch.uint8",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.distributed.distributed_c10d.all_reduce": {
  "lineno": 922,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.distributed_c10d.all_reduce_coalesced": {
  "lineno": 964,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.distributed_c10d.all_reduce_multigpu": {
  "lineno": 871,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.distributed_c10d.all_to_all": {
  "lineno": 1847,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.distributed_c10d.all_to_all_single": {
  "lineno": 1752,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.distributed_c10d.barrier": {
  "lineno": 1939,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.distributed_c10d.broadcast": {
  "lineno": 828,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.distributed_c10d.broadcast_multigpu": {
  "lineno": 773,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.distributed_c10d.broadcast_object_list": {
  "lineno": 1340,
  "symbols_in_volume": [
   "torch.ByteTensor",
   "torch.LongTensor",
   "torch.cat",
   "torch.sum"
  ],
  "type": "function"
 },
 "torch.distributed.distributed_c10d.destroy_process_group": {
  "lineno": 547,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.distributed_c10d.gather": {
  "lineno": 1521,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.distributed_c10d.gather_object": {
  "lineno": 1258,
  "symbols_in_volume": [
   "torch.ByteTensor",
   "torch.empty",
   "torch.uint8",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.distributed.distributed_c10d.get_backend": {
  "lineno": 303,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.distributed_c10d.get_rank": {
  "lineno": 597,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.distributed_c10d.get_world_size": {
  "lineno": 623,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.distributed_c10d.group": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.distributed.distributed_c10d.init_process_group": {
  "lineno": 327,
  "symbols_in_volume": [
   "datetime.timedelta",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.distributed.distributed_c10d.irecv": {
  "lineno": 671,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.distributed_c10d.is_gloo_available": {
  "lineno": 264,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.distributed_c10d.is_initialized": {
  "lineno": 272,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.distributed_c10d.is_mpi_available": {
  "lineno": 248,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.distributed_c10d.is_nccl_available": {
  "lineno": 256,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.distributed_c10d.isend": {
  "lineno": 641,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.distributed_c10d.new_group": {
  "lineno": 1970,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.distributed_c10d.recv": {
  "lineno": 727,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.distributed_c10d.reduce": {
  "lineno": 1072,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.distributed_c10d.reduce_multigpu": {
  "lineno": 1015,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.distributed_c10d.reduce_op": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.distributed.distributed_c10d.reduce_op.__getattribute__": {
  "lineno": 125,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.distributed.distributed_c10d.reduce_op.__init__": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.distributed_c10d.reduce_scatter": {
  "lineno": 1713,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.distributed_c10d.reduce_scatter_multigpu": {
  "lineno": 1642,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.distributed_c10d.scatter": {
  "lineno": 1576,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.distributed_c10d.send": {
  "lineno": 701,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.is_available": {
  "lineno": 5,
  "symbols_in_volume": [
   "torch._C"
  ],
  "type": "function"
 },
 "torch.distributed.launch": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributed.launch.main": {
  "lineno": 200,
  "symbols_in_volume": [
   "os.environ",
   "os.environ.copy",
   "subprocess.CalledProcessError",
   "subprocess.Popen",
   "sys.executable"
  ],
  "type": "function"
 },
 "torch.distributed.launch.parse_args": {
  "lineno": 146,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "argparse.REMAINDER"
  ],
  "type": "function"
 },
 "torch.distributed.nn": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributed.nn.api": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributed.nn.api.remote_module": {
  "lineno": null,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.distributed.nn.jit.instantiator.instantiate_non_scriptable_remote_module_template",
   "typing.Tuple",
   "typing.TypeVar",
   "typing.Union"
  ],
  "type": "module"
 },
 "torch.distributed.nn.api.remote_module.RemoteModule": {
  "lineno": 313,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.distributed.nn.api.remote_module.RemoteModule.__init__": {
  "lineno": 375,
  "symbols_in_volume": [
   "torch.device",
   "torch.nn.Module",
   "typing.Any",
   "typing.Dict",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.distributed.nn.api.remote_module._RemoteModule": {
  "lineno": 64,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.distributed.nn.api.remote_module._RemoteModule.__init__": {
  "lineno": 65,
  "symbols_in_volume": [
   "torch.device",
   "torch.distributed.nn.jit.instantiator.instantiate_scriptable_remote_module_template",
   "torch.distributed.rpc._is_current_rpc_agent_set",
   "torch.distributed.rpc.rpc_async",
   "torch.distributed.rpc.rpc_sync",
   "torch.jit.export",
   "torch.nn.Module",
   "types.MethodType",
   "typing.Any",
   "typing.Dict",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.distributed.nn.api.remote_module._RemoteModule.add_module": {
  "lineno": 213,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.distributed.nn.api.remote_module._RemoteModule.apply": {
  "lineno": 216,
  "symbols_in_volume": [
   "typing.Callable"
  ],
  "type": "function"
 },
 "torch.distributed.nn.api.remote_module._RemoteModule.bfloat16": {
  "lineno": 237,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.nn.api.remote_module._RemoteModule.buffers": {
  "lineno": 274,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Iterator"
  ],
  "type": "function"
 },
 "torch.distributed.nn.api.remote_module._RemoteModule.children": {
  "lineno": 282,
  "symbols_in_volume": [
   "typing.Iterator"
  ],
  "type": "function"
 },
 "torch.distributed.nn.api.remote_module._RemoteModule.cpu": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.nn.api.remote_module._RemoteModule.cuda": {
  "lineno": 219,
  "symbols_in_volume": [
   "torch.device",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "torch.distributed.nn.api.remote_module._RemoteModule.double": {
  "lineno": 231,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.nn.api.remote_module._RemoteModule.eval": {
  "lineno": 297,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.nn.api.remote_module._RemoteModule.extra_repr": {
  "lineno": 309,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.nn.api.remote_module._RemoteModule.float": {
  "lineno": 228,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.nn.api.remote_module._RemoteModule.half": {
  "lineno": 234,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.nn.api.remote_module._RemoteModule.load_state_dict": {
  "lineno": 257,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Dict",
   "typing.Union"
  ],
  "type": "function"
 },
 "torch.distributed.nn.api.remote_module._RemoteModule.modules": {
  "lineno": 288,
  "symbols_in_volume": [
   "typing.Iterator"
  ],
  "type": "function"
 },
 "torch.distributed.nn.api.remote_module._RemoteModule.named_buffers": {
  "lineno": 277,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Iterator",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.distributed.nn.api.remote_module._RemoteModule.named_children": {
  "lineno": 285,
  "symbols_in_volume": [
   "typing.Iterator",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.distributed.nn.api.remote_module._RemoteModule.named_modules": {
  "lineno": 291,
  "symbols_in_volume": [
   "typing.Optional",
   "typing.Set"
  ],
  "type": "function"
 },
 "torch.distributed.nn.api.remote_module._RemoteModule.named_parameters": {
  "lineno": 269,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Iterator",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.distributed.nn.api.remote_module._RemoteModule.parameters": {
  "lineno": 264,
  "symbols_in_volume": [
   "torch.nn.parameter.Parameter",
   "typing.Iterator"
  ],
  "type": "function"
 },
 "torch.distributed.nn.api.remote_module._RemoteModule.register_backward_hook": {
  "lineno": 243,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.utils.hooks.RemovableHandle",
   "typing.Callable",
   "typing.Union"
  ],
  "type": "function"
 },
 "torch.distributed.nn.api.remote_module._RemoteModule.register_buffer": {
  "lineno": 205,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.distributed.nn.api.remote_module._RemoteModule.register_forward_hook": {
  "lineno": 251,
  "symbols_in_volume": [
   "torch.utils.hooks.RemovableHandle",
   "typing.Callable"
  ],
  "type": "function"
 },
 "torch.distributed.nn.api.remote_module._RemoteModule.register_forward_pre_hook": {
  "lineno": 248,
  "symbols_in_volume": [
   "torch.utils.hooks.RemovableHandle",
   "typing.Callable"
  ],
  "type": "function"
 },
 "torch.distributed.nn.api.remote_module._RemoteModule.register_parameter": {
  "lineno": 210,
  "symbols_in_volume": [
   "torch.nn.parameter.Parameter",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.distributed.nn.api.remote_module._RemoteModule.remote_parameters": {
  "lineno": 192,
  "symbols_in_volume": [
   "torch.distributed.rpc.RRef",
   "torch.distributed.rpc.rpc_sync",
   "torch.nn.parameter.Parameter",
   "typing.List"
  ],
  "type": "function"
 },
 "torch.distributed.nn.api.remote_module._RemoteModule.requires_grad_": {
  "lineno": 300,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.nn.api.remote_module._RemoteModule.share_memory": {
  "lineno": 306,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.nn.api.remote_module._RemoteModule.state_dict": {
  "lineno": 254,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.nn.api.remote_module._RemoteModule.to": {
  "lineno": 240,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.nn.api.remote_module._RemoteModule.train": {
  "lineno": 294,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.nn.api.remote_module._RemoteModule.type": {
  "lineno": 225,
  "symbols_in_volume": [
   "torch.dtype",
   "typing.Union"
  ],
  "type": "function"
 },
 "torch.distributed.nn.api.remote_module._RemoteModule.zero_grad": {
  "lineno": 303,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.nn.api.remote_module._create_module": {
  "lineno": 40,
  "symbols_in_volume": [
   "torch.device",
   "torch.distributed.rpc.RRef",
   "torch.jit.script",
   "torch.nn.Module"
  ],
  "type": "function"
 },
 "torch.distributed.nn.api.remote_module._instantiate_template": {
  "lineno": 36,
  "symbols_in_volume": [
   "torch.distributed.nn.jit.instantiator.instantiate_scriptable_remote_module_template"
  ],
  "type": "function"
 },
 "torch.distributed.nn.api.remote_module._param_rrefs": {
  "lineno": 53,
  "symbols_in_volume": [
   "torch.distributed.rpc.RRef"
  ],
  "type": "function"
 },
 "torch.distributed.nn.api.remote_module._raise_not_supported": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.nn.jit": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributed.nn.jit.instantiator": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger",
   "sys.path.append",
   "tempfile.TemporaryDirectory"
  ],
  "type": "module"
 },
 "torch.distributed.nn.jit.instantiator._do_instantiate_remote_module_template": {
  "lineno": 79,
  "symbols_in_volume": [
   "importlib.import_module",
   "importlib.invalidate_caches",
   "os.path.join",
   "torch.distributed.nn.jit.templates.remote_module_template.REMOTE_MODULE_TEMPLATE.format"
  ],
  "type": "function"
 },
 "torch.distributed.nn.jit.instantiator._write": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.nn.jit.instantiator.get_arg_return_types_from_interface": {
  "lineno": 24,
  "symbols_in_volume": [
   "torch._jit_internal._qualified_name",
   "torch.jit._state._python_cu"
  ],
  "type": "function"
 },
 "torch.distributed.nn.jit.instantiator.instantiate_non_scriptable_remote_module_template": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.nn.jit.instantiator.instantiate_scriptable_remote_module_template": {
  "lineno": 96,
  "symbols_in_volume": [
   "torch._jit_internal._qualified_name"
  ],
  "type": "function"
 },
 "torch.distributed.nn.jit.templates": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributed.nn.jit.templates.remote_module_template": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributed.optim": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributed.optim.functional_adagrad": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributed.optim.functional_adagrad._FunctionalAdagrad": {
  "lineno": 16,
  "symbols_in_volume": [
   "torch.jit.script"
  ],
  "type": "class"
 },
 "torch.distributed.optim.functional_adagrad._FunctionalAdagrad.__init__": {
  "lineno": 18,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.full_like",
   "torch.jit.annotate",
   "torch.tensor",
   "typing.Dict",
   "typing.List"
  ],
  "type": "function"
 },
 "torch.distributed.optim.functional_adagrad._FunctionalAdagrad.step": {
  "lineno": 57,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.no_grad",
   "torch.optim.functional.adagrad",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.distributed.optim.optimizer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributed.optim.optimizer.DistributedOptimizer": {
  "lineno": 128,
  "symbols_in_volume": [
   "torch.optim.Adagrad"
  ],
  "type": "class"
 },
 "torch.distributed.optim.optimizer.DistributedOptimizer.__init__": {
  "lineno": 186,
  "symbols_in_volume": [
   "collections.defaultdict",
   "torch.distributed.rpc.rpc_async"
  ],
  "type": "function"
 },
 "torch.distributed.optim.optimizer.DistributedOptimizer.step": {
  "lineno": 211,
  "symbols_in_volume": [
   "torch.distributed.autograd._is_valid_context",
   "torch.distributed.rpc.rpc_async"
  ],
  "type": "function"
 },
 "torch.distributed.optim.optimizer._LocalOptimizer": {
  "lineno": 60,
  "symbols_in_volume": [
   "threading.Lock"
  ],
  "type": "class"
 },
 "torch.distributed.optim.optimizer._LocalOptimizer.__init__": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.optim.optimizer._LocalOptimizer.step": {
  "lineno": 77,
  "symbols_in_volume": [
   "torch.distributed.autograd.get_gradients"
  ],
  "type": "function"
 },
 "torch.distributed.optim.optimizer._ScriptLocalOptimizer": {
  "lineno": 32,
  "symbols_in_volume": [
   "threading.Lock",
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.distributed.optim.optimizer._ScriptLocalOptimizer.__init__": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.optim.optimizer._ScriptLocalOptimizer.step": {
  "lineno": 46,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.distributed.autograd.get_gradients",
   "torch.jit.export",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.distributed.optim.optimizer._ScriptLocalOptimizerInterface": {
  "lineno": 27,
  "symbols_in_volume": [
   "torch.jit.interface"
  ],
  "type": "class"
 },
 "torch.distributed.optim.optimizer._ScriptLocalOptimizerInterface.step": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.optim.optimizer._local_optimizer_step": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.optim.optimizer._new_local_optimizer": {
  "lineno": 86,
  "symbols_in_volume": [
   "torch.distributed.rpc.RRef"
  ],
  "type": "function"
 },
 "torch.distributed.optim.optimizer._new_script_local_optimizer": {
  "lineno": 97,
  "symbols_in_volume": [
   "torch.distributed.rpc.RRef",
   "torch.jit.script",
   "torch.optim"
  ],
  "type": "function"
 },
 "torch.distributed.optim.optimizer._script_local_optimizer_step": {
  "lineno": 105,
  "symbols_in_volume": [
   "torch.distributed.rpc.RRef",
   "torch.jit.script"
  ],
  "type": "function"
 },
 "torch.distributed.optim.optimizer._wait_for_all": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.rendezvous": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.platform"
  ],
  "type": "module"
 },
 "torch.distributed.rendezvous._env_rendezvous_handler": {
  "lineno": 140,
  "symbols_in_volume": [
   "os.environ.get",
   "urlparse.urlparse"
  ],
  "type": "function"
 },
 "torch.distributed.rendezvous._env_rendezvous_handler._env_error": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.rendezvous._env_rendezvous_handler._error": {
  "lineno": 141,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.rendezvous._file_rendezvous_handler": {
  "lineno": 90,
  "symbols_in_volume": [
   "sys.platform",
   "urlparse.urlparse"
  ],
  "type": "function"
 },
 "torch.distributed.rendezvous._file_rendezvous_handler._error": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.rendezvous._rendezvous_error": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.rendezvous._tcp_rendezvous_handler": {
  "lineno": 117,
  "symbols_in_volume": [
   "urlparse.urlparse"
  ],
  "type": "function"
 },
 "torch.distributed.rendezvous._tcp_rendezvous_handler._error": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.rendezvous.register_rendezvous_handler": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.rendezvous.rendezvous": {
  "lineno": 50,
  "symbols_in_volume": [
   "numbers.Integral",
   "torch._six.string_classes",
   "urlparse.urlparse",
   "urlparse.urlunparse"
  ],
  "type": "function"
 },
 "torch.distributed.rpc": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger",
   "threading.Lock",
   "torch._C._rpc_init"
  ],
  "type": "module"
 },
 "torch.distributed.rpc._get_debug_info": {
  "lineno": 205,
  "symbols_in_volume": [
   "torch.distributed.autograd._get_debug_info"
  ],
  "type": "function"
 },
 "torch.distributed.rpc._init_rpc_backend": {
  "lineno": 178,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.rpc._testing": {
  "lineno": null,
  "symbols_in_volume": [
   "torch._C._faulty_agent_init"
  ],
  "type": "module"
 },
 "torch.distributed.rpc._testing.faulty_agent_backend_registry": {
  "lineno": null,
  "symbols_in_volume": [
   "torch.distributed.rpc.backend_registry.register_backend"
  ],
  "type": "module"
 },
 "torch.distributed.rpc._testing.faulty_agent_backend_registry._faulty_process_group_construct_rpc_backend_options_handler": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.rpc._testing.faulty_agent_backend_registry._faulty_process_group_init_backend_handler": {
  "lineno": 30,
  "symbols_in_volume": [
   "datetime.timedelta",
   "torch.distributed.Backend.GLOO",
   "torch.distributed.destroy_process_group",
   "torch.distributed.distributed_c10d._get_default_group",
   "torch.distributed.init_process_group",
   "torch.distributed.is_initialized",
   "torch.distributed.rpc.constants.DEFAULT_PROCESS_GROUP_TIMEOUT"
  ],
  "type": "function"
 },
 "torch.distributed.rpc._testing.is_available": {
  "lineno": 5,
  "symbols_in_volume": [
   "torch._C"
  ],
  "type": "function"
 },
 "torch.distributed.rpc._validate_rpc_args": {
  "lineno": 160,
  "symbols_in_volume": [
   "numbers.Integral",
   "torch.distributed.Store"
  ],
  "type": "function"
 },
 "torch.distributed.rpc.api": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.defaultdict",
   "inspect.getmembers",
   "logging.getLogger",
   "threading.RLock",
   "typing.Generic",
   "typing.TypeVar"
  ],
  "type": "module"
 },
 "torch.distributed.rpc.api.AllGatherStates": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.distributed.rpc.api.AllGatherStates.__init__": {
  "lineno": 84,
  "symbols_in_volume": [
   "threading.Event"
  ],
  "type": "function"
 },
 "torch.distributed.rpc.api.RRef": {
  "lineno": 363,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.distributed.rpc.api.RRefMeta": {
  "lineno": 359,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.distributed.rpc.api._all_gather": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.rpc.api._broadcast_to_followers": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.rpc.api._gather_to_leader": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.rpc.api._init_rpc_states": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.rpc.api._invoke_rpc": {
  "lineno": 583,
  "symbols_in_volume": [
   "contextlib.suppress",
   "torch._jit_internal._qualified_name",
   "torch.autograd._profiler_enabled",
   "torch.autograd.profiler.record_function",
   "torch.jit.ScriptFunction",
   "torch.jit._builtins._find_builtin"
  ],
  "type": "function"
 },
 "torch.distributed.rpc.api._require_initialized": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.rpc.api._require_initialized.wrapper": {
  "lineno": 71,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "torch.distributed.rpc.api._rref_typeof_on_owner": {
  "lineno": 336,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.rpc.api._rref_typeof_on_user": {
  "lineno": 340,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.rpc.api._to_worker_info": {
  "lineno": 327,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.rpc.api._use_rpc_pickler": {
  "lineno": 57,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "torch.distributed.rpc.api._wait_all_workers": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.rpc.api.get_worker_info": {
  "lineno": 305,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.rpc.api.method_factory": {
  "lineno": 374,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.rpc.api.method_factory.method": {
  "lineno": 375,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.rpc.api.remote": {
  "lineno": 407,
  "symbols_in_volume": [
   "contextlib.suppress",
   "torch._jit_internal._qualified_name",
   "torch.autograd._profiler_enabled",
   "torch.autograd.profiler.record_function",
   "torch.jit.ScriptFunction",
   "torch.jit._builtins._find_builtin"
  ],
  "type": "function"
 },
 "torch.distributed.rpc.api.rpc_async": {
  "lineno": 745,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.rpc.api.rpc_sync": {
  "lineno": 667,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.rpc.api.shutdown": {
  "lineno": 232,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.rpc.backend_registry": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple",
   "enum.Enum"
  ],
  "type": "module"
 },
 "torch.distributed.rpc.backend_registry._backend_type_repr": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.rpc.backend_registry._init_process_group": {
  "lineno": 110,
  "symbols_in_volume": [
   "torch.distributed.ProcessGroupGloo"
  ],
  "type": "function"
 },
 "torch.distributed.rpc.backend_registry._process_group_construct_rpc_backend_options_handler": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.rpc.backend_registry._process_group_init_backend_handler": {
  "lineno": 132,
  "symbols_in_volume": [
   "datetime.timedelta",
   "torch.distributed.Store"
  ],
  "type": "function"
 },
 "torch.distributed.rpc.backend_registry._tensorpipe_construct_rpc_backend_options_handler": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.rpc.backend_registry._tensorpipe_init_backend_handler": {
  "lineno": 186,
  "symbols_in_volume": [
   "torch.distributed.Store"
  ],
  "type": "function"
 },
 "torch.distributed.rpc.backend_registry.backend_registered": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.rpc.backend_registry.construct_rpc_backend_options": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.rpc.backend_registry.init_backend": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.rpc.backend_registry.register_backend": {
  "lineno": 46,
  "symbols_in_volume": [
   "enum.Enum"
  ],
  "type": "function"
 },
 "torch.distributed.rpc.constants": {
  "lineno": null,
  "symbols_in_volume": [
   "datetime.timedelta"
  ],
  "type": "module"
 },
 "torch.distributed.rpc.functions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributed.rpc.functions.async_execution": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.rpc.functions.async_execution.wrapper": {
  "lineno": 160,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "torch.distributed.rpc.init_rpc": {
  "lineno": 40,
  "symbols_in_volume": [
   "torch.distributed.PrefixStore",
   "torch.distributed.autograd._init",
   "torch.distributed.rendezvous"
  ],
  "type": "function"
 },
 "torch.distributed.rpc.internal": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple",
   "threading.local"
  ],
  "type": "module"
 },
 "torch.distributed.rpc.internal.RPCExecMode": {
  "lineno": 20,
  "symbols_in_volume": [
   "enum.Enum"
  ],
  "type": "class"
 },
 "torch.distributed.rpc.internal._InternalRPCPickler": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.distributed.rpc.internal._InternalRPCPickler.__init__": {
  "lineno": 38,
  "symbols_in_volume": [
   "copyreg.dispatch_table.copy",
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.distributed.rpc.internal._InternalRPCPickler._py_rref_receiver": {
  "lineno": 53,
  "symbols_in_volume": [
   "torch.distributed.rpc.PyRRef._deserialize"
  ],
  "type": "function"
 },
 "torch.distributed.rpc.internal._InternalRPCPickler._py_rref_reducer": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.rpc.internal._InternalRPCPickler._rref_reducer": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.rpc.internal._InternalRPCPickler._tensor_receiver": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.rpc.internal._InternalRPCPickler._tensor_reducer": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.rpc.internal._InternalRPCPickler.deserialize": {
  "lineno": 106,
  "symbols_in_volume": [
   "pickle.loads"
  ],
  "type": "function"
 },
 "torch.distributed.rpc.internal._InternalRPCPickler.serialize": {
  "lineno": 64,
  "symbols_in_volume": [
   "io.BytesIO",
   "pickle.Pickler",
   "torch.distributed.rpc.PyRRef",
   "torch.distributed.rpc.RRef"
  ],
  "type": "function"
 },
 "torch.distributed.rpc.internal._build_rpc_profiling_key": {
  "lineno": 180,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.rpc.internal._handle_exception": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.rpc.internal._run_function": {
  "lineno": 153,
  "symbols_in_volume": [
   "traceback.format_exc"
  ],
  "type": "function"
 },
 "torch.distributed.rpc.internal._start_record_function": {
  "lineno": 205,
  "symbols_in_volume": [
   "torch.autograd._RecordFunction",
   "torch.autograd._profiler_enabled",
   "torch.autograd._run_before_callbacks"
  ],
  "type": "function"
 },
 "torch.distributed.rpc.internal.deserialize": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.rpc.internal.serialize": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.rpc.is_available": {
  "lineno": 14,
  "symbols_in_volume": [
   "torch._C"
  ],
  "type": "function"
 },
 "torch.distributed.rpc.options": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributed.rpc.options.TensorPipeRpcBackendOptions": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.distributed.rpc.options.TensorPipeRpcBackendOptions.__init__": {
  "lineno": 29,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "torch.distributed.rpc.rref_proxy": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributed.rpc.rref_proxy.RRefProxy": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.distributed.rpc.rref_proxy.RRefProxy.__getattr__": {
  "lineno": 41,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "function"
 },
 "torch.distributed.rpc.rref_proxy.RRefProxy.__init__": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.rpc.rref_proxy._invoke_rpc": {
  "lineno": 14,
  "symbols_in_volume": [
   "torch._C.ScriptModule"
  ],
  "type": "function"
 },
 "torch.distributed.rpc.rref_proxy._local_invoke": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.rpc.rref_proxy._local_invoke_async_execution": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributed.rpc.server_process_global_profiler": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributed.rpc.server_process_global_profiler._server_process_global_profile": {
  "lineno": 14,
  "symbols_in_volume": [
   "torch.autograd.profiler.profile"
  ],
  "type": "class"
 },
 "torch.distributed.rpc.server_process_global_profiler._server_process_global_profile.__enter__": {
  "lineno": 98,
  "symbols_in_volume": [
   "torch.autograd.ProfilerConfig",
   "torch.autograd.ProfilerState.CPU",
   "torch.autograd.ProfilerState.CUDA"
  ],
  "type": "function"
 },
 "torch.distributed.rpc.server_process_global_profiler._server_process_global_profile.__exit__": {
  "lineno": 123,
  "symbols_in_volume": [
   "itertools.chain",
   "torch.autograd.profiler.EventList",
   "torch.autograd.profiler.parse_event_records"
  ],
  "type": "function"
 },
 "torch.distributed.rpc.server_process_global_profiler._server_process_global_profile.__init__": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributions.bernoulli": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributions.bernoulli.Bernoulli": {
  "lineno": 10,
  "symbols_in_volume": [
   "torch.distributions.constraints.boolean",
   "torch.distributions.constraints.real",
   "torch.distributions.constraints.unit_interval",
   "torch.distributions.exp_family.ExponentialFamily"
  ],
  "type": "class"
 },
 "torch.distributions.bernoulli.Bernoulli.__init__": {
  "lineno": 34,
  "symbols_in_volume": [
   "numbers.Number",
   "torch.Size",
   "torch.distributions.utils.broadcast_all"
  ],
  "type": "function"
 },
 "torch.distributions.bernoulli.Bernoulli._log_normalizer": {
  "lineno": 111,
  "symbols_in_volume": [
   "torch.exp",
   "torch.log"
  ],
  "type": "function"
 },
 "torch.distributions.bernoulli.Bernoulli._natural_params": {
  "lineno": 107,
  "symbols_in_volume": [
   "torch.log"
  ],
  "type": "function"
 },
 "torch.distributions.bernoulli.Bernoulli._new": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.bernoulli.Bernoulli.entropy": {
  "lineno": 97,
  "symbols_in_volume": [
   "torch.nn.functional.binary_cross_entropy_with_logits"
  ],
  "type": "function"
 },
 "torch.distributions.bernoulli.Bernoulli.enumerate_support": {
  "lineno": 100,
  "symbols_in_volume": [
   "torch.arange"
  ],
  "type": "function"
 },
 "torch.distributions.bernoulli.Bernoulli.expand": {
  "lineno": 50,
  "symbols_in_volume": [
   "torch.Size"
  ],
  "type": "function"
 },
 "torch.distributions.bernoulli.Bernoulli.log_prob": {
  "lineno": 91,
  "symbols_in_volume": [
   "torch.distributions.utils.broadcast_all",
   "torch.nn.functional.binary_cross_entropy_with_logits"
  ],
  "type": "function"
 },
 "torch.distributions.bernoulli.Bernoulli.logits": {
  "lineno": 74,
  "symbols_in_volume": [
   "torch.distributions.utils.lazy_property",
   "torch.distributions.utils.probs_to_logits"
  ],
  "type": "function"
 },
 "torch.distributions.bernoulli.Bernoulli.mean": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.bernoulli.Bernoulli.param_shape": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.bernoulli.Bernoulli.probs": {
  "lineno": 78,
  "symbols_in_volume": [
   "torch.distributions.utils.lazy_property",
   "torch.distributions.utils.logits_to_probs"
  ],
  "type": "function"
 },
 "torch.distributions.bernoulli.Bernoulli.sample": {
  "lineno": 86,
  "symbols_in_volume": [
   "torch.Size",
   "torch.bernoulli",
   "torch.no_grad"
  ],
  "type": "function"
 },
 "torch.distributions.bernoulli.Bernoulli.variance": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.beta": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributions.beta.Beta": {
  "lineno": 10,
  "symbols_in_volume": [
   "torch.distributions.constraints.positive",
   "torch.distributions.constraints.unit_interval",
   "torch.distributions.exp_family.ExponentialFamily"
  ],
  "type": "class"
 },
 "torch.distributions.beta.Beta.__init__": {
  "lineno": 30,
  "symbols_in_volume": [
   "numbers.Number",
   "torch.distributions.dirichlet.Dirichlet",
   "torch.distributions.utils.broadcast_all",
   "torch.stack",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.distributions.beta.Beta._log_normalizer": {
  "lineno": 89,
  "symbols_in_volume": [
   "torch.lgamma"
  ],
  "type": "function"
 },
 "torch.distributions.beta.Beta._natural_params": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.beta.Beta.concentration0": {
  "lineno": 77,
  "symbols_in_volume": [
   "numbers.Number",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.distributions.beta.Beta.concentration1": {
  "lineno": 69,
  "symbols_in_volume": [
   "numbers.Number",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.distributions.beta.Beta.entropy": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.beta.Beta.expand": {
  "lineno": 39,
  "symbols_in_volume": [
   "torch.Size"
  ],
  "type": "function"
 },
 "torch.distributions.beta.Beta.log_prob": {
  "lineno": 60,
  "symbols_in_volume": [
   "torch.stack"
  ],
  "type": "function"
 },
 "torch.distributions.beta.Beta.mean": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.beta.Beta.rsample": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.beta.Beta.variance": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.binomial": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributions.binomial.Binomial": {
  "lineno": 13,
  "symbols_in_volume": [
   "torch.distributions.constraints.nonnegative_integer",
   "torch.distributions.constraints.real",
   "torch.distributions.constraints.unit_interval",
   "torch.distributions.distribution.Distribution"
  ],
  "type": "class"
 },
 "torch.distributions.binomial.Binomial.__init__": {
  "lineno": 40,
  "symbols_in_volume": [
   "numbers.Number",
   "torch.Size",
   "torch.distributions.utils.broadcast_all"
  ],
  "type": "function"
 },
 "torch.distributions.binomial.Binomial._new": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.binomial.Binomial.enumerate_support": {
  "lineno": 121,
  "symbols_in_volume": [
   "torch.arange"
  ],
  "type": "function"
 },
 "torch.distributions.binomial.Binomial.expand": {
  "lineno": 59,
  "symbols_in_volume": [
   "torch.Size"
  ],
  "type": "function"
 },
 "torch.distributions.binomial.Binomial.log_prob": {
  "lineno": 105,
  "symbols_in_volume": [
   "torch.abs",
   "torch.exp",
   "torch.lgamma",
   "torch.log1p"
  ],
  "type": "function"
 },
 "torch.distributions.binomial.Binomial.logits": {
  "lineno": 88,
  "symbols_in_volume": [
   "torch.distributions.utils.lazy_property",
   "torch.distributions.utils.probs_to_logits"
  ],
  "type": "function"
 },
 "torch.distributions.binomial.Binomial.mean": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.binomial.Binomial.param_shape": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.binomial.Binomial.probs": {
  "lineno": 92,
  "symbols_in_volume": [
   "torch.distributions.utils.lazy_property",
   "torch.distributions.utils.logits_to_probs"
  ],
  "type": "function"
 },
 "torch.distributions.binomial.Binomial.sample": {
  "lineno": 100,
  "symbols_in_volume": [
   "torch.Size",
   "torch.binomial",
   "torch.no_grad"
  ],
  "type": "function"
 },
 "torch.distributions.binomial.Binomial.support": {
  "lineno": 76,
  "symbols_in_volume": [
   "torch.distributions.constraints.dependent_property",
   "torch.distributions.constraints.integer_interval"
  ],
  "type": "function"
 },
 "torch.distributions.binomial.Binomial.variance": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.binomial._clamp_by_zero": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.categorical": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributions.categorical.Categorical": {
  "lineno": 8,
  "symbols_in_volume": [
   "torch.distributions.constraints.real",
   "torch.distributions.constraints.simplex",
   "torch.distributions.distribution.Distribution"
  ],
  "type": "class"
 },
 "torch.distributions.categorical.Categorical.__init__": {
  "lineno": 44,
  "symbols_in_volume": [
   "torch.Size"
  ],
  "type": "function"
 },
 "torch.distributions.categorical.Categorical._new": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.categorical.Categorical.entropy": {
  "lineno": 118,
  "symbols_in_volume": [
   "torch.clamp",
   "torch.finfo"
  ],
  "type": "function"
 },
 "torch.distributions.categorical.Categorical.enumerate_support": {
  "lineno": 124,
  "symbols_in_volume": [
   "torch.arange",
   "torch.long"
  ],
  "type": "function"
 },
 "torch.distributions.categorical.Categorical.expand": {
  "lineno": 61,
  "symbols_in_volume": [
   "torch.Size"
  ],
  "type": "function"
 },
 "torch.distributions.categorical.Categorical.log_prob": {
  "lineno": 110,
  "symbols_in_volume": [
   "torch.broadcast_tensors"
  ],
  "type": "function"
 },
 "torch.distributions.categorical.Categorical.logits": {
  "lineno": 83,
  "symbols_in_volume": [
   "torch.distributions.utils.lazy_property",
   "torch.distributions.utils.probs_to_logits"
  ],
  "type": "function"
 },
 "torch.distributions.categorical.Categorical.mean": {
  "lineno": 95,
  "symbols_in_volume": [
   "torch._six.nan",
   "torch.full"
  ],
  "type": "function"
 },
 "torch.distributions.categorical.Categorical.param_shape": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.categorical.Categorical.probs": {
  "lineno": 87,
  "symbols_in_volume": [
   "torch.distributions.utils.lazy_property",
   "torch.distributions.utils.logits_to_probs"
  ],
  "type": "function"
 },
 "torch.distributions.categorical.Categorical.sample": {
  "lineno": 103,
  "symbols_in_volume": [
   "torch.Size",
   "torch.multinomial"
  ],
  "type": "function"
 },
 "torch.distributions.categorical.Categorical.support": {
  "lineno": 79,
  "symbols_in_volume": [
   "torch.distributions.constraints.dependent_property",
   "torch.distributions.constraints.integer_interval"
  ],
  "type": "function"
 },
 "torch.distributions.categorical.Categorical.variance": {
  "lineno": 99,
  "symbols_in_volume": [
   "torch._six.nan",
   "torch.full"
  ],
  "type": "function"
 },
 "torch.distributions.cauchy": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributions.cauchy.Cauchy": {
  "lineno": 11,
  "symbols_in_volume": [
   "torch.distributions.constraints.positive",
   "torch.distributions.constraints.real",
   "torch.distributions.distribution.Distribution"
  ],
  "type": "class"
 },
 "torch.distributions.cauchy.Cauchy.__init__": {
  "lineno": 31,
  "symbols_in_volume": [
   "numbers.Number",
   "torch.Size",
   "torch.distributions.utils.broadcast_all"
  ],
  "type": "function"
 },
 "torch.distributions.cauchy.Cauchy.cdf": {
  "lineno": 66,
  "symbols_in_volume": [
   "math.pi",
   "torch.atan"
  ],
  "type": "function"
 },
 "torch.distributions.cauchy.Cauchy.entropy": {
  "lineno": 76,
  "symbols_in_volume": [
   "math.log",
   "math.pi"
  ],
  "type": "function"
 },
 "torch.distributions.cauchy.Cauchy.expand": {
  "lineno": 39,
  "symbols_in_volume": [
   "torch.Size"
  ],
  "type": "function"
 },
 "torch.distributions.cauchy.Cauchy.icdf": {
  "lineno": 71,
  "symbols_in_volume": [
   "math.pi",
   "torch.tan"
  ],
  "type": "function"
 },
 "torch.distributions.cauchy.Cauchy.log_prob": {
  "lineno": 61,
  "symbols_in_volume": [
   "math.log",
   "math.pi"
  ],
  "type": "function"
 },
 "torch.distributions.cauchy.Cauchy.mean": {
  "lineno": 48,
  "symbols_in_volume": [
   "torch._six.nan",
   "torch.full"
  ],
  "type": "function"
 },
 "torch.distributions.cauchy.Cauchy.rsample": {
  "lineno": 56,
  "symbols_in_volume": [
   "torch.Size"
  ],
  "type": "function"
 },
 "torch.distributions.cauchy.Cauchy.variance": {
  "lineno": 52,
  "symbols_in_volume": [
   "torch._six.inf",
   "torch.full"
  ],
  "type": "function"
 },
 "torch.distributions.chi2": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributions.chi2.Chi2": {
  "lineno": 5,
  "symbols_in_volume": [
   "torch.distributions.constraints.positive",
   "torch.distributions.gamma.Gamma"
  ],
  "type": "class"
 },
 "torch.distributions.chi2.Chi2.__init__": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.chi2.Chi2.df": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.chi2.Chi2.expand": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.constraint_registry": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributions.constraint_registry.ConstraintRegistry": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.distributions.constraint_registry.ConstraintRegistry.__call__": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.constraint_registry.ConstraintRegistry.__init__": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.constraint_registry.ConstraintRegistry.register": {
  "lineno": 87,
  "symbols_in_volume": [
   "torch.distributions.constraints.Constraint"
  ],
  "type": "function"
 },
 "torch.distributions.constraint_registry._biject_to_cat": {
  "lineno": 218,
  "symbols_in_volume": [
   "torch.distributions.constraints.cat",
   "torch.distributions.transforms.CatTransform"
  ],
  "type": "function"
 },
 "torch.distributions.constraint_registry._biject_to_simplex": {
  "lineno": 202,
  "symbols_in_volume": [
   "torch.distributions.constraints.simplex",
   "torch.distributions.transforms.StickBreakingTransform"
  ],
  "type": "function"
 },
 "torch.distributions.constraint_registry._biject_to_stack": {
  "lineno": 234,
  "symbols_in_volume": [
   "torch.distributions.constraints.stack",
   "torch.distributions.transforms.StackTransform"
  ],
  "type": "function"
 },
 "torch.distributions.constraint_registry._transform_to_cat": {
  "lineno": 226,
  "symbols_in_volume": [
   "torch.distributions.constraints.cat",
   "torch.distributions.transforms.CatTransform"
  ],
  "type": "function"
 },
 "torch.distributions.constraint_registry._transform_to_greater_than": {
  "lineno": 169,
  "symbols_in_volume": [
   "torch.distributions.constraints.greater_than",
   "torch.distributions.constraints.greater_than_eq",
   "torch.distributions.transforms.AffineTransform",
   "torch.distributions.transforms.ComposeTransform",
   "torch.distributions.transforms.ExpTransform"
  ],
  "type": "function"
 },
 "torch.distributions.constraint_registry._transform_to_interval": {
  "lineno": 185,
  "symbols_in_volume": [
   "numbers.Number",
   "torch.distributions.constraints.half_open_interval",
   "torch.distributions.constraints.interval",
   "torch.distributions.transforms.AffineTransform",
   "torch.distributions.transforms.ComposeTransform",
   "torch.distributions.transforms.SigmoidTransform"
  ],
  "type": "function"
 },
 "torch.distributions.constraint_registry._transform_to_less_than": {
  "lineno": 178,
  "symbols_in_volume": [
   "torch.distributions.constraints.less_than",
   "torch.distributions.transforms.AffineTransform",
   "torch.distributions.transforms.ComposeTransform",
   "torch.distributions.transforms.ExpTransform"
  ],
  "type": "function"
 },
 "torch.distributions.constraint_registry._transform_to_lower_cholesky": {
  "lineno": 213,
  "symbols_in_volume": [
   "torch.distributions.constraints.lower_cholesky",
   "torch.distributions.transforms.LowerCholeskyTransform"
  ],
  "type": "function"
 },
 "torch.distributions.constraint_registry._transform_to_positive": {
  "lineno": 163,
  "symbols_in_volume": [
   "torch.distributions.constraints.positive",
   "torch.distributions.transforms.ExpTransform"
  ],
  "type": "function"
 },
 "torch.distributions.constraint_registry._transform_to_real": {
  "lineno": 155,
  "symbols_in_volume": [
   "torch.distributions.constraints.real",
   "torch.distributions.constraints.real_vector",
   "torch.distributions.transforms.identity_transform"
  ],
  "type": "function"
 },
 "torch.distributions.constraint_registry._transform_to_simplex": {
  "lineno": 207,
  "symbols_in_volume": [
   "torch.distributions.constraints.simplex",
   "torch.distributions.transforms.SoftmaxTransform"
  ],
  "type": "function"
 },
 "torch.distributions.constraint_registry._transform_to_stack": {
  "lineno": 241,
  "symbols_in_volume": [
   "torch.distributions.constraints.stack",
   "torch.distributions.transforms.StackTransform"
  ],
  "type": "function"
 },
 "torch.distributions.constraints": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributions.constraints.Constraint": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.distributions.constraints.Constraint.__repr__": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.constraints.Constraint.check": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.constraints._Boolean": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.distributions.constraints._Boolean.check": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.constraints._Cat": {
  "lineno": 301,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.distributions.constraints._Cat.__init__": {
  "lineno": 307,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.constraints._Cat.check": {
  "lineno": 316,
  "symbols_in_volume": [
   "torch.cat"
  ],
  "type": "function"
 },
 "torch.distributions.constraints._Dependent": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.distributions.constraints._Dependent.check": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.constraints._DependentProperty": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.distributions.constraints._GreaterThan": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.distributions.constraints._GreaterThan.__init__": {
  "lineno": 170,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.constraints._GreaterThan.__repr__": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.constraints._GreaterThan.check": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.constraints._GreaterThanEq": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.distributions.constraints._GreaterThanEq.__init__": {
  "lineno": 186,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.constraints._GreaterThanEq.__repr__": {
  "lineno": 192,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.constraints._GreaterThanEq.check": {
  "lineno": 189,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.constraints._HalfOpenInterval": {
  "lineno": 231,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.distributions.constraints._HalfOpenInterval.__init__": {
  "lineno": 235,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.constraints._HalfOpenInterval.__repr__": {
  "lineno": 242,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.constraints._HalfOpenInterval.check": {
  "lineno": 239,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.constraints._IntegerGreaterThan": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.distributions.constraints._IntegerGreaterThan.__init__": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.constraints._IntegerGreaterThan.__repr__": {
  "lineno": 152,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.constraints._IntegerGreaterThan.check": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.constraints._IntegerInterval": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.distributions.constraints._IntegerInterval.__init__": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.constraints._IntegerInterval.__repr__": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.constraints._IntegerInterval.check": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.constraints._IntegerLessThan": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.distributions.constraints._IntegerLessThan.__init__": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.constraints._IntegerLessThan.__repr__": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.constraints._IntegerLessThan.check": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.constraints._Interval": {
  "lineno": 214,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.distributions.constraints._Interval.__init__": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.constraints._Interval.__repr__": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.constraints._Interval.check": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.constraints._LessThan": {
  "lineno": 198,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.distributions.constraints._LessThan.__init__": {
  "lineno": 202,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.constraints._LessThan.__repr__": {
  "lineno": 208,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.constraints._LessThan.check": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.constraints._LowerCholesky": {
  "lineno": 266,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.distributions.constraints._LowerCholesky.check": {
  "lineno": 270,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.constraints._LowerTriangular": {
  "lineno": 257,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.distributions.constraints._LowerTriangular.check": {
  "lineno": 261,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.constraints._PositiveDefinite": {
  "lineno": 278,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.distributions.constraints._PositiveDefinite.check": {
  "lineno": 282,
  "symbols_in_volume": [
   "torch.stack"
  ],
  "type": "function"
 },
 "torch.distributions.constraints._Real": {
  "lineno": 158,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.distributions.constraints._Real.check": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.constraints._RealVector": {
  "lineno": 292,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.distributions.constraints._RealVector.check": {
  "lineno": 297,
  "symbols_in_volume": [
   "torch.all"
  ],
  "type": "function"
 },
 "torch.distributions.constraints._Simplex": {
  "lineno": 248,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.distributions.constraints._Simplex.check": {
  "lineno": 253,
  "symbols_in_volume": [
   "torch.all"
  ],
  "type": "function"
 },
 "torch.distributions.constraints._Stack": {
  "lineno": 327,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.distributions.constraints._Stack.__init__": {
  "lineno": 333,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.constraints._Stack.check": {
  "lineno": 338,
  "symbols_in_volume": [
   "torch.stack"
  ],
  "type": "function"
 },
 "torch.distributions.constraints.is_dependent": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.continuous_bernoulli": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributions.continuous_bernoulli.ContinuousBernoulli": {
  "lineno": 11,
  "symbols_in_volume": [
   "torch.distributions.constraints.real",
   "torch.distributions.constraints.unit_interval",
   "torch.distributions.exp_family.ExponentialFamily"
  ],
  "type": "class"
 },
 "torch.distributions.continuous_bernoulli.ContinuousBernoulli.__init__": {
  "lineno": 42,
  "symbols_in_volume": [
   "numbers.Number",
   "torch.Size",
   "torch.distributions.utils.broadcast_all",
   "torch.distributions.utils.clamp_probs"
  ],
  "type": "function"
 },
 "torch.distributions.continuous_bernoulli.ContinuousBernoulli._cont_bern_log_norm": {
  "lineno": 91,
  "symbols_in_volume": [
   "math.log",
   "torch.abs",
   "torch.ge",
   "torch.le",
   "torch.log",
   "torch.log1p",
   "torch.ones_like",
   "torch.pow",
   "torch.where",
   "torch.zeros_like"
  ],
  "type": "function"
 },
 "torch.distributions.continuous_bernoulli.ContinuousBernoulli._cut_probs": {
  "lineno": 86,
  "symbols_in_volume": [
   "torch.ones_like",
   "torch.where"
  ],
  "type": "function"
 },
 "torch.distributions.continuous_bernoulli.ContinuousBernoulli._log_normalizer": {
  "lineno": 189,
  "symbols_in_volume": [
   "torch.abs",
   "torch.exp",
   "torch.gt",
   "torch.le",
   "torch.log",
   "torch.max",
   "torch.ones_like",
   "torch.pow",
   "torch.where"
  ],
  "type": "function"
 },
 "torch.distributions.continuous_bernoulli.ContinuousBernoulli._natural_params": {
  "lineno": 185,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.continuous_bernoulli.ContinuousBernoulli._new": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.continuous_bernoulli.ContinuousBernoulli._outside_unstable_region": {
  "lineno": 82,
  "symbols_in_volume": [
   "torch.gt",
   "torch.le",
   "torch.max"
  ],
  "type": "function"
 },
 "torch.distributions.continuous_bernoulli.ContinuousBernoulli.cdf": {
  "lineno": 158,
  "symbols_in_volume": [
   "torch.ge",
   "torch.le",
   "torch.ones_like",
   "torch.pow",
   "torch.where",
   "torch.zeros_like"
  ],
  "type": "function"
 },
 "torch.distributions.continuous_bernoulli.ContinuousBernoulli.entropy": {
  "lineno": 180,
  "symbols_in_volume": [
   "torch.log",
   "torch.log1p"
  ],
  "type": "function"
 },
 "torch.distributions.continuous_bernoulli.ContinuousBernoulli.expand": {
  "lineno": 65,
  "symbols_in_volume": [
   "torch.Size"
  ],
  "type": "function"
 },
 "torch.distributions.continuous_bernoulli.ContinuousBernoulli.icdf": {
  "lineno": 170,
  "symbols_in_volume": [
   "torch.log",
   "torch.log1p",
   "torch.where"
  ],
  "type": "function"
 },
 "torch.distributions.continuous_bernoulli.ContinuousBernoulli.log_prob": {
  "lineno": 152,
  "symbols_in_volume": [
   "torch.distributions.utils.broadcast_all",
   "torch.nn.functional.binary_cross_entropy_with_logits"
  ],
  "type": "function"
 },
 "torch.distributions.continuous_bernoulli.ContinuousBernoulli.logits": {
  "lineno": 129,
  "symbols_in_volume": [
   "torch.distributions.utils.lazy_property",
   "torch.distributions.utils.probs_to_logits"
  ],
  "type": "function"
 },
 "torch.distributions.continuous_bernoulli.ContinuousBernoulli.mean": {
  "lineno": 108,
  "symbols_in_volume": [
   "torch.log",
   "torch.log1p",
   "torch.pow",
   "torch.where"
  ],
  "type": "function"
 },
 "torch.distributions.continuous_bernoulli.ContinuousBernoulli.param_shape": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.continuous_bernoulli.ContinuousBernoulli.probs": {
  "lineno": 133,
  "symbols_in_volume": [
   "torch.distributions.utils.clamp_probs",
   "torch.distributions.utils.lazy_property",
   "torch.distributions.utils.logits_to_probs"
  ],
  "type": "function"
 },
 "torch.distributions.continuous_bernoulli.ContinuousBernoulli.rsample": {
  "lineno": 147,
  "symbols_in_volume": [
   "torch.Size",
   "torch.rand"
  ],
  "type": "function"
 },
 "torch.distributions.continuous_bernoulli.ContinuousBernoulli.sample": {
  "lineno": 141,
  "symbols_in_volume": [
   "torch.Size",
   "torch.no_grad",
   "torch.rand"
  ],
  "type": "function"
 },
 "torch.distributions.continuous_bernoulli.ContinuousBernoulli.stddev": {
  "lineno": 116,
  "symbols_in_volume": [
   "torch.sqrt"
  ],
  "type": "function"
 },
 "torch.distributions.continuous_bernoulli.ContinuousBernoulli.variance": {
  "lineno": 120,
  "symbols_in_volume": [
   "torch.log",
   "torch.log1p",
   "torch.pow",
   "torch.where"
  ],
  "type": "function"
 },
 "torch.distributions.dirichlet": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributions.dirichlet.Dirichlet": {
  "lineno": 29,
  "symbols_in_volume": [
   "torch.distributions.constraints.positive",
   "torch.distributions.constraints.simplex",
   "torch.distributions.exp_family.ExponentialFamily"
  ],
  "type": "class"
 },
 "torch.distributions.dirichlet.Dirichlet.__init__": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.dirichlet.Dirichlet._log_normalizer": {
  "lineno": 94,
  "symbols_in_volume": [
   "torch.lgamma"
  ],
  "type": "function"
 },
 "torch.distributions.dirichlet.Dirichlet._natural_params": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.dirichlet.Dirichlet.entropy": {
  "lineno": 83,
  "symbols_in_volume": [
   "torch.digamma",
   "torch.lgamma"
  ],
  "type": "function"
 },
 "torch.distributions.dirichlet.Dirichlet.expand": {
  "lineno": 54,
  "symbols_in_volume": [
   "torch.Size"
  ],
  "type": "function"
 },
 "torch.distributions.dirichlet.Dirichlet.log_prob": {
  "lineno": 67,
  "symbols_in_volume": [
   "torch.lgamma",
   "torch.log"
  ],
  "type": "function"
 },
 "torch.distributions.dirichlet.Dirichlet.mean": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.dirichlet.Dirichlet.rsample": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.dirichlet.Dirichlet.variance": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.dirichlet._Dirichlet": {
  "lineno": 15,
  "symbols_in_volume": [
   "torch.autograd.Function"
  ],
  "type": "class"
 },
 "torch.distributions.dirichlet._Dirichlet.backward": {
  "lineno": 22,
  "symbols_in_volume": [
   "torch.autograd.function.once_differentiable"
  ],
  "type": "function"
 },
 "torch.distributions.dirichlet._Dirichlet.forward": {
  "lineno": 16,
  "symbols_in_volume": [
   "torch._sample_dirichlet"
  ],
  "type": "function"
 },
 "torch.distributions.dirichlet._Dirichlet_backward": {
  "lineno": 9,
  "symbols_in_volume": [
   "torch._dirichlet_grad"
  ],
  "type": "function"
 },
 "torch.distributions.distribution": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributions.distribution.Distribution": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.distributions.distribution.Distribution.__init__": {
  "lineno": 24,
  "symbols_in_volume": [
   "torch.Size",
   "torch.distributions.constraints.is_dependent",
   "torch.distributions.utils.lazy_property"
  ],
  "type": "function"
 },
 "torch.distributions.distribution.Distribution.__repr__": {
  "lineno": 262,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.distribution.Distribution._extended_shape": {
  "lineno": 209,
  "symbols_in_volume": [
   "torch.Size"
  ],
  "type": "function"
 },
 "torch.distributions.distribution.Distribution._get_checked_instance": {
  "lineno": 255,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.distribution.Distribution._validate_sample": {
  "lineno": 223,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.distributions.distribution.Distribution.arg_constraints": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.distribution.Distribution.batch_shape": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.distribution.Distribution.cdf": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.distribution.Distribution.entropy": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.distribution.Distribution.enumerate_support": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.distribution.Distribution.event_shape": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.distribution.Distribution.expand": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.distribution.Distribution.icdf": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.distribution.Distribution.log_prob": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.distribution.Distribution.mean": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.distribution.Distribution.perplexity": {
  "lineno": 200,
  "symbols_in_volume": [
   "torch.exp"
  ],
  "type": "function"
 },
 "torch.distributions.distribution.Distribution.rsample": {
  "lineno": 121,
  "symbols_in_volume": [
   "torch.Size"
  ],
  "type": "function"
 },
 "torch.distributions.distribution.Distribution.sample": {
  "lineno": 113,
  "symbols_in_volume": [
   "torch.Size",
   "torch.no_grad"
  ],
  "type": "function"
 },
 "torch.distributions.distribution.Distribution.sample_n": {
  "lineno": 129,
  "symbols_in_volume": [
   "torch.Size",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.distributions.distribution.Distribution.set_default_validate_args": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.distribution.Distribution.stddev": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.distribution.Distribution.support": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.distribution.Distribution.variance": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.exp_family": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributions.exp_family.ExponentialFamily": {
  "lineno": 5,
  "symbols_in_volume": [
   "torch.distributions.distribution.Distribution"
  ],
  "type": "class"
 },
 "torch.distributions.exp_family.ExponentialFamily._log_normalizer": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.exp_family.ExponentialFamily._mean_carrier_measure": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.exp_family.ExponentialFamily._natural_params": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.exp_family.ExponentialFamily.entropy": {
  "lineno": 49,
  "symbols_in_volume": [
   "torch.autograd.grad"
  ],
  "type": "function"
 },
 "torch.distributions.exponential": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributions.exponential.Exponential": {
  "lineno": 9,
  "symbols_in_volume": [
   "torch.distributions.constraints.positive",
   "torch.distributions.exp_family.ExponentialFamily"
  ],
  "type": "class"
 },
 "torch.distributions.exponential.Exponential.__init__": {
  "lineno": 39,
  "symbols_in_volume": [
   "numbers.Number",
   "torch.Size",
   "torch.distributions.utils.broadcast_all"
  ],
  "type": "function"
 },
 "torch.distributions.exponential.Exponential._log_normalizer": {
  "lineno": 82,
  "symbols_in_volume": [
   "torch.log"
  ],
  "type": "function"
 },
 "torch.distributions.exponential.Exponential._natural_params": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.exponential.Exponential.cdf": {
  "lineno": 65,
  "symbols_in_volume": [
   "torch.exp"
  ],
  "type": "function"
 },
 "torch.distributions.exponential.Exponential.entropy": {
  "lineno": 75,
  "symbols_in_volume": [
   "torch.log"
  ],
  "type": "function"
 },
 "torch.distributions.exponential.Exponential.expand": {
  "lineno": 44,
  "symbols_in_volume": [
   "torch.Size"
  ],
  "type": "function"
 },
 "torch.distributions.exponential.Exponential.icdf": {
  "lineno": 70,
  "symbols_in_volume": [
   "torch.log"
  ],
  "type": "function"
 },
 "torch.distributions.exponential.Exponential.log_prob": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.exponential.Exponential.mean": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.exponential.Exponential.rsample": {
  "lineno": 52,
  "symbols_in_volume": [
   "torch.Size",
   "torch._C._get_tracing_state",
   "torch.rand"
  ],
  "type": "function"
 },
 "torch.distributions.exponential.Exponential.stddev": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.exponential.Exponential.variance": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.fishersnedecor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributions.fishersnedecor.FisherSnedecor": {
  "lineno": 10,
  "symbols_in_volume": [
   "torch.distributions.constraints.positive",
   "torch.distributions.distribution.Distribution"
  ],
  "type": "class"
 },
 "torch.distributions.fishersnedecor.FisherSnedecor.__init__": {
  "lineno": 28,
  "symbols_in_volume": [
   "numbers.Number",
   "torch.Size",
   "torch.distributions.gamma.Gamma",
   "torch.distributions.utils.broadcast_all"
  ],
  "type": "function"
 },
 "torch.distributions.fishersnedecor.FisherSnedecor.expand": {
  "lineno": 39,
  "symbols_in_volume": [
   "torch.Size"
  ],
  "type": "function"
 },
 "torch.distributions.fishersnedecor.FisherSnedecor.log_prob": {
  "lineno": 74,
  "symbols_in_volume": [
   "torch.log",
   "torch.log1p"
  ],
  "type": "function"
 },
 "torch.distributions.fishersnedecor.FisherSnedecor.mean": {
  "lineno": 50,
  "symbols_in_volume": [
   "torch._six.nan",
   "torch.contiguous_format"
  ],
  "type": "function"
 },
 "torch.distributions.fishersnedecor.FisherSnedecor.rsample": {
  "lineno": 62,
  "symbols_in_volume": [
   "torch.Size",
   "torch.finfo"
  ],
  "type": "function"
 },
 "torch.distributions.fishersnedecor.FisherSnedecor.variance": {
  "lineno": 56,
  "symbols_in_volume": [
   "torch._six.nan",
   "torch.contiguous_format"
  ],
  "type": "function"
 },
 "torch.distributions.gamma": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributions.gamma.Gamma": {
  "lineno": 13,
  "symbols_in_volume": [
   "torch.distributions.constraints.positive",
   "torch.distributions.exp_family.ExponentialFamily"
  ],
  "type": "class"
 },
 "torch.distributions.gamma.Gamma.__init__": {
  "lineno": 42,
  "symbols_in_volume": [
   "numbers.Number",
   "torch.Size",
   "torch.distributions.utils.broadcast_all"
  ],
  "type": "function"
 },
 "torch.distributions.gamma.Gamma._log_normalizer": {
  "lineno": 81,
  "symbols_in_volume": [
   "torch.lgamma",
   "torch.log"
  ],
  "type": "function"
 },
 "torch.distributions.gamma.Gamma._natural_params": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.gamma.Gamma.entropy": {
  "lineno": 73,
  "symbols_in_volume": [
   "torch.digamma",
   "torch.lgamma",
   "torch.log"
  ],
  "type": "function"
 },
 "torch.distributions.gamma.Gamma.expand": {
  "lineno": 50,
  "symbols_in_volume": [
   "torch.Size"
  ],
  "type": "function"
 },
 "torch.distributions.gamma.Gamma.log_prob": {
  "lineno": 65,
  "symbols_in_volume": [
   "torch.as_tensor",
   "torch.lgamma",
   "torch.log"
  ],
  "type": "function"
 },
 "torch.distributions.gamma.Gamma.mean": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.gamma.Gamma.rsample": {
  "lineno": 59,
  "symbols_in_volume": [
   "torch.Size",
   "torch.finfo"
  ],
  "type": "function"
 },
 "torch.distributions.gamma.Gamma.variance": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.gamma._standard_gamma": {
  "lineno": 9,
  "symbols_in_volume": [
   "torch._standard_gamma"
  ],
  "type": "function"
 },
 "torch.distributions.geometric": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributions.geometric.Geometric": {
  "lineno": 10,
  "symbols_in_volume": [
   "torch.distributions.constraints.nonnegative_integer",
   "torch.distributions.constraints.real",
   "torch.distributions.constraints.unit_interval",
   "torch.distributions.distribution.Distribution"
  ],
  "type": "class"
 },
 "torch.distributions.geometric.Geometric.__init__": {
  "lineno": 33,
  "symbols_in_volume": [
   "numbers.Number",
   "torch.Size",
   "torch.distributions.utils.broadcast_all"
  ],
  "type": "function"
 },
 "torch.distributions.geometric.Geometric.entropy": {
  "lineno": 96,
  "symbols_in_volume": [
   "torch.nn.functional.binary_cross_entropy_with_logits"
  ],
  "type": "function"
 },
 "torch.distributions.geometric.Geometric.expand": {
  "lineno": 49,
  "symbols_in_volume": [
   "torch.Size"
  ],
  "type": "function"
 },
 "torch.distributions.geometric.Geometric.log_prob": {
  "lineno": 88,
  "symbols_in_volume": [
   "torch.contiguous_format",
   "torch.distributions.utils.broadcast_all"
  ],
  "type": "function"
 },
 "torch.distributions.geometric.Geometric.logits": {
  "lineno": 68,
  "symbols_in_volume": [
   "torch.distributions.utils.lazy_property",
   "torch.distributions.utils.probs_to_logits"
  ],
  "type": "function"
 },
 "torch.distributions.geometric.Geometric.mean": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.geometric.Geometric.probs": {
  "lineno": 72,
  "symbols_in_volume": [
   "torch.distributions.utils.lazy_property",
   "torch.distributions.utils.logits_to_probs"
  ],
  "type": "function"
 },
 "torch.distributions.geometric.Geometric.sample": {
  "lineno": 76,
  "symbols_in_volume": [
   "torch.Size",
   "torch._C._get_tracing_state",
   "torch.finfo",
   "torch.no_grad",
   "torch.rand"
  ],
  "type": "function"
 },
 "torch.distributions.geometric.Geometric.variance": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.gumbel": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributions.gumbel.Gumbel": {
  "lineno": 13,
  "symbols_in_volume": [
   "torch.distributions.constraints.positive",
   "torch.distributions.constraints.real",
   "torch.distributions.transformed_distribution.TransformedDistribution"
  ],
  "type": "class"
 },
 "torch.distributions.gumbel.Gumbel.__init__": {
  "lineno": 30,
  "symbols_in_volume": [
   "numbers.Number",
   "torch.distributions.transforms.AffineTransform",
   "torch.distributions.transforms.ExpTransform",
   "torch.distributions.uniform.Uniform",
   "torch.distributions.utils.broadcast_all",
   "torch.finfo",
   "torch.full_like",
   "torch.ones_like"
  ],
  "type": "function"
 },
 "torch.distributions.gumbel.Gumbel.entropy": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.gumbel.Gumbel.expand": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.gumbel.Gumbel.log_prob": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.gumbel.Gumbel.mean": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.gumbel.Gumbel.stddev": {
  "lineno": 59,
  "symbols_in_volume": [
   "math.pi",
   "math.sqrt"
  ],
  "type": "function"
 },
 "torch.distributions.gumbel.Gumbel.variance": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.half_cauchy": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributions.half_cauchy.HalfCauchy": {
  "lineno": 11,
  "symbols_in_volume": [
   "torch.distributions.constraints.positive",
   "torch.distributions.transformed_distribution.TransformedDistribution"
  ],
  "type": "class"
 },
 "torch.distributions.half_cauchy.HalfCauchy.__init__": {
  "lineno": 31,
  "symbols_in_volume": [
   "torch.distributions.cauchy.Cauchy",
   "torch.distributions.transforms.AbsTransform"
  ],
  "type": "function"
 },
 "torch.distributions.half_cauchy.HalfCauchy.cdf": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.half_cauchy.HalfCauchy.entropy": {
  "lineno": 65,
  "symbols_in_volume": [
   "math.log"
  ],
  "type": "function"
 },
 "torch.distributions.half_cauchy.HalfCauchy.expand": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.half_cauchy.HalfCauchy.icdf": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.half_cauchy.HalfCauchy.log_prob": {
  "lineno": 52,
  "symbols_in_volume": [
   "math.log",
   "torch._six.inf",
   "torch.as_tensor"
  ],
  "type": "function"
 },
 "torch.distributions.half_cauchy.HalfCauchy.mean": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.half_cauchy.HalfCauchy.scale": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.half_cauchy.HalfCauchy.variance": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.half_normal": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributions.half_normal.HalfNormal": {
  "lineno": 10,
  "symbols_in_volume": [
   "torch.distributions.constraints.positive",
   "torch.distributions.transformed_distribution.TransformedDistribution"
  ],
  "type": "class"
 },
 "torch.distributions.half_normal.HalfNormal.__init__": {
  "lineno": 30,
  "symbols_in_volume": [
   "torch.distributions.normal.Normal",
   "torch.distributions.transforms.AbsTransform"
  ],
  "type": "function"
 },
 "torch.distributions.half_normal.HalfNormal.cdf": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.half_normal.HalfNormal.entropy": {
  "lineno": 62,
  "symbols_in_volume": [
   "math.log"
  ],
  "type": "function"
 },
 "torch.distributions.half_normal.HalfNormal.expand": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.half_normal.HalfNormal.icdf": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.half_normal.HalfNormal.log_prob": {
  "lineno": 51,
  "symbols_in_volume": [
   "math.log",
   "torch._six.inf"
  ],
  "type": "function"
 },
 "torch.distributions.half_normal.HalfNormal.mean": {
  "lineno": 43,
  "symbols_in_volume": [
   "math.pi",
   "math.sqrt"
  ],
  "type": "function"
 },
 "torch.distributions.half_normal.HalfNormal.scale": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.half_normal.HalfNormal.variance": {
  "lineno": 47,
  "symbols_in_volume": [
   "math.pi"
  ],
  "type": "function"
 },
 "torch.distributions.independent": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributions.independent.Independent": {
  "lineno": 7,
  "symbols_in_volume": [
   "torch.distributions.distribution.Distribution"
  ],
  "type": "class"
 },
 "torch.distributions.independent.Independent.__init__": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.independent.Independent.__repr__": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.independent.Independent.entropy": {
  "lineno": 91,
  "symbols_in_volume": [
   "torch.distributions.utils._sum_rightmost"
  ],
  "type": "function"
 },
 "torch.distributions.independent.Independent.enumerate_support": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.independent.Independent.expand": {
  "lineno": 49,
  "symbols_in_volume": [
   "torch.Size"
  ],
  "type": "function"
 },
 "torch.distributions.independent.Independent.has_enumerate_support": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.independent.Independent.has_rsample": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.independent.Independent.log_prob": {
  "lineno": 87,
  "symbols_in_volume": [
   "torch.distributions.utils._sum_rightmost"
  ],
  "type": "function"
 },
 "torch.distributions.independent.Independent.mean": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.independent.Independent.rsample": {
  "lineno": 84,
  "symbols_in_volume": [
   "torch.Size"
  ],
  "type": "function"
 },
 "torch.distributions.independent.Independent.sample": {
  "lineno": 81,
  "symbols_in_volume": [
   "torch.Size"
  ],
  "type": "function"
 },
 "torch.distributions.independent.Independent.support": {
  "lineno": 69,
  "symbols_in_volume": [
   "torch.distributions.constraints.dependent_property"
  ],
  "type": "function"
 },
 "torch.distributions.independent.Independent.variance": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.kl": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributions.kl._Match": {
  "lineno": 78,
  "symbols_in_volume": [
   "functools.total_ordering"
  ],
  "type": "class"
 },
 "torch.distributions.kl._Match.__eq__": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.kl._Match.__init__": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.kl._Match.__le__": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.kl._batch_trace_XXT": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.kl._dispatch_kl": {
  "lineno": 97,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.distributions.kl._infinite_like": {
  "lineno": 117,
  "symbols_in_volume": [
   "torch._six.inf",
   "torch.full_like"
  ],
  "type": "function"
 },
 "torch.distributions.kl._kl_bernoulli_bernoulli": {
  "lineno": 179,
  "symbols_in_volume": [
   "torch._six.inf"
  ],
  "type": "function"
 },
 "torch.distributions.kl._kl_bernoulli_poisson": {
  "lineno": 453,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.kl._kl_beta_beta": {
  "lineno": 190,
  "symbols_in_volume": [
   "torch.digamma"
  ],
  "type": "function"
 },
 "torch.distributions.kl._kl_beta_continuous_bernoulli": {
  "lineno": 458,
  "symbols_in_volume": [
   "torch.log1p"
  ],
  "type": "function"
 },
 "torch.distributions.kl._kl_beta_exponential": {
  "lineno": 468,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.kl._kl_beta_gamma": {
  "lineno": 473,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.kl._kl_beta_infinity": {
  "lineno": 463,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.kl._kl_beta_normal": {
  "lineno": 484,
  "symbols_in_volume": [
   "math.pi.log"
  ],
  "type": "function"
 },
 "torch.distributions.kl._kl_beta_uniform": {
  "lineno": 496,
  "symbols_in_volume": [
   "torch._six.inf"
  ],
  "type": "function"
 },
 "torch.distributions.kl._kl_binomial_binomial": {
  "lineno": 202,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.kl._kl_categorical_categorical": {
  "lineno": 214,
  "symbols_in_volume": [
   "torch._six.inf"
  ],
  "type": "function"
 },
 "torch.distributions.kl._kl_cauchy_cauchy": {
  "lineno": 802,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.kl._kl_continuous_bernoulli_continuous_bernoulli": {
  "lineno": 222,
  "symbols_in_volume": [
   "torch.log1p"
  ],
  "type": "function"
 },
 "torch.distributions.kl._kl_continuous_bernoulli_exponential": {
  "lineno": 510,
  "symbols_in_volume": [
   "torch.log"
  ],
  "type": "function"
 },
 "torch.distributions.kl._kl_continuous_bernoulli_infinity": {
  "lineno": 505,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.kl._kl_continuous_bernoulli_normal": {
  "lineno": 518,
  "symbols_in_volume": [
   "math.log",
   "math.pi",
   "torch.log",
   "torch.square"
  ],
  "type": "function"
 },
 "torch.distributions.kl._kl_continuous_bernoulli_uniform": {
  "lineno": 526,
  "symbols_in_volume": [
   "torch._six.inf",
   "torch.ge",
   "torch.le",
   "torch.max",
   "torch.ones_like",
   "torch.where"
  ],
  "type": "function"
 },
 "torch.distributions.kl._kl_dirichlet_dirichlet": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.kl._kl_expfamily_expfamily": {
  "lineno": 249,
  "symbols_in_volume": [
   "torch.autograd.grad"
  ],
  "type": "function"
 },
 "torch.distributions.kl._kl_exponential_exponential": {
  "lineno": 242,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.kl._kl_exponential_gamma": {
  "lineno": 542,
  "symbols_in_volume": [
   "torch.log"
  ],
  "type": "function"
 },
 "torch.distributions.kl._kl_exponential_gumbel": {
  "lineno": 549,
  "symbols_in_volume": [
   "torch.exp"
  ],
  "type": "function"
 },
 "torch.distributions.kl._kl_exponential_infinity": {
  "lineno": 534,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.kl._kl_exponential_normal": {
  "lineno": 561,
  "symbols_in_volume": [
   "math.pi",
   "torch.log"
  ],
  "type": "function"
 },
 "torch.distributions.kl._kl_gamma_exponential": {
  "lineno": 580,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.kl._kl_gamma_gamma": {
  "lineno": 265,
  "symbols_in_volume": [
   "torch.digamma",
   "torch.lgamma"
  ],
  "type": "function"
 },
 "torch.distributions.kl._kl_gamma_gumbel": {
  "lineno": 585,
  "symbols_in_volume": [
   "torch.exp"
  ],
  "type": "function"
 },
 "torch.distributions.kl._kl_gamma_infinity": {
  "lineno": 572,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.kl._kl_gamma_normal": {
  "lineno": 597,
  "symbols_in_volume": [
   "math.pi",
   "torch.log"
  ],
  "type": "function"
 },
 "torch.distributions.kl._kl_geometric_geometric": {
  "lineno": 285,
  "symbols_in_volume": [
   "torch.log1p"
  ],
  "type": "function"
 },
 "torch.distributions.kl._kl_gumbel_gumbel": {
  "lineno": 274,
  "symbols_in_volume": [
   "torch.exp"
  ],
  "type": "function"
 },
 "torch.distributions.kl._kl_gumbel_infinity": {
  "lineno": 608,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.kl._kl_gumbel_normal": {
  "lineno": 620,
  "symbols_in_volume": [
   "math.pi",
   "math.pi.pow",
   "math.sqrt"
  ],
  "type": "function"
 },
 "torch.distributions.kl._kl_halfnormal_halfnormal": {
  "lineno": 290,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.kl._kl_independent_independent": {
  "lineno": 794,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.kl._kl_laplace_infinity": {
  "lineno": 629,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.kl._kl_laplace_laplace": {
  "lineno": 295,
  "symbols_in_volume": [
   "torch.exp"
  ],
  "type": "function"
 },
 "torch.distributions.kl._kl_laplace_normal": {
  "lineno": 639,
  "symbols_in_volume": [
   "math.pi",
   "torch.log"
  ],
  "type": "function"
 },
 "torch.distributions.kl._kl_lowrankmultivariatenormal_lowrankmultivariatenormal": {
  "lineno": 306,
  "symbols_in_volume": [
   "torch.triangular_solve"
  ],
  "type": "function"
 },
 "torch.distributions.kl._kl_lowrankmultivariatenormal_multivariatenormal": {
  "lineno": 359,
  "symbols_in_volume": [
   "torch._C._infer_size",
   "torch.diag_embed",
   "torch.triangular_solve"
  ],
  "type": "function"
 },
 "torch.distributions.kl._kl_multivariatenormal_lowrankmultivariatenormal": {
  "lineno": 334,
  "symbols_in_volume": [
   "torch.triangular_solve"
  ],
  "type": "function"
 },
 "torch.distributions.kl._kl_multivariatenormal_multivariatenormal": {
  "lineno": 385,
  "symbols_in_volume": [
   "torch._C._infer_size",
   "torch.triangular_solve"
  ],
  "type": "function"
 },
 "torch.distributions.kl._kl_normal_gumbel": {
  "lineno": 660,
  "symbols_in_volume": [
   "math.log",
   "math.pi",
   "torch.exp"
  ],
  "type": "function"
 },
 "torch.distributions.kl._kl_normal_infinity": {
  "lineno": 650,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.kl._kl_normal_normal": {
  "lineno": 404,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.kl._kl_onehotcategorical_onehotcategorical": {
  "lineno": 411,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.kl._kl_pareto_exponential": {
  "lineno": 680,
  "symbols_in_volume": [
   "torch._six.inf"
  ],
  "type": "function"
 },
 "torch.distributions.kl._kl_pareto_gamma": {
  "lineno": 691,
  "symbols_in_volume": [
   "torch._six.inf"
  ],
  "type": "function"
 },
 "torch.distributions.kl._kl_pareto_infinity": {
  "lineno": 673,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.kl._kl_pareto_normal": {
  "lineno": 705,
  "symbols_in_volume": [
   "math.pi",
   "math.sqrt",
   "torch._six.inf"
  ],
  "type": "function"
 },
 "torch.distributions.kl._kl_pareto_pareto": {
  "lineno": 416,
  "symbols_in_volume": [
   "torch._six.inf"
  ],
  "type": "function"
 },
 "torch.distributions.kl._kl_poisson_infinity": {
  "lineno": 718,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.kl._kl_poisson_poisson": {
  "lineno": 428,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.kl._kl_transformed_transformed": {
  "lineno": 433,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.kl._kl_uniform_beta": {
  "lineno": 724,
  "symbols_in_volume": [
   "torch._six.inf",
   "torch.log"
  ],
  "type": "function"
 },
 "torch.distributions.kl._kl_uniform_continuous_bernoulli": {
  "lineno": 736,
  "symbols_in_volume": [
   "torch._six.inf",
   "torch.ge",
   "torch.le",
   "torch.log1p",
   "torch.max",
   "torch.ones_like",
   "torch.where"
  ],
  "type": "function"
 },
 "torch.distributions.kl._kl_uniform_exponetial": {
  "lineno": 744,
  "symbols_in_volume": [
   "torch._six.inf"
  ],
  "type": "function"
 },
 "torch.distributions.kl._kl_uniform_gamma": {
  "lineno": 751,
  "symbols_in_volume": [
   "torch._six.inf"
  ],
  "type": "function"
 },
 "torch.distributions.kl._kl_uniform_gumbel": {
  "lineno": 763,
  "symbols_in_volume": [
   "torch.exp"
  ],
  "type": "function"
 },
 "torch.distributions.kl._kl_uniform_normal": {
  "lineno": 775,
  "symbols_in_volume": [
   "math.pi",
   "math.sqrt"
  ],
  "type": "function"
 },
 "torch.distributions.kl._kl_uniform_pareto": {
  "lineno": 784,
  "symbols_in_volume": [
   "torch._six.inf"
  ],
  "type": "function"
 },
 "torch.distributions.kl._kl_uniform_uniform": {
  "lineno": 445,
  "symbols_in_volume": [
   "torch._six.inf"
  ],
  "type": "function"
 },
 "torch.distributions.kl._x_log_x": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.kl.kl_divergence": {
  "lineno": 141,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.kl.register_kl": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.kl.register_kl.decorator": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.laplace": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributions.laplace.Laplace": {
  "lineno": 8,
  "symbols_in_volume": [
   "torch.distributions.constraints.positive",
   "torch.distributions.constraints.real",
   "torch.distributions.distribution.Distribution"
  ],
  "type": "class"
 },
 "torch.distributions.laplace.Laplace.__init__": {
  "lineno": 38,
  "symbols_in_volume": [
   "numbers.Number",
   "torch.Size",
   "torch.distributions.utils.broadcast_all"
  ],
  "type": "function"
 },
 "torch.distributions.laplace.Laplace.cdf": {
  "lineno": 72,
  "symbols_in_volume": [
   "torch.expm1"
  ],
  "type": "function"
 },
 "torch.distributions.laplace.Laplace.entropy": {
  "lineno": 83,
  "symbols_in_volume": [
   "torch.log"
  ],
  "type": "function"
 },
 "torch.distributions.laplace.Laplace.expand": {
  "lineno": 46,
  "symbols_in_volume": [
   "torch.Size"
  ],
  "type": "function"
 },
 "torch.distributions.laplace.Laplace.icdf": {
  "lineno": 77,
  "symbols_in_volume": [
   "torch.log1p"
  ],
  "type": "function"
 },
 "torch.distributions.laplace.Laplace.log_prob": {
  "lineno": 67,
  "symbols_in_volume": [
   "torch.abs",
   "torch.log"
  ],
  "type": "function"
 },
 "torch.distributions.laplace.Laplace.mean": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.laplace.Laplace.rsample": {
  "lineno": 55,
  "symbols_in_volume": [
   "torch.Size",
   "torch._C._get_tracing_state",
   "torch.finfo",
   "torch.log1p",
   "torch.rand"
  ],
  "type": "function"
 },
 "torch.distributions.laplace.Laplace.stddev": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.laplace.Laplace.variance": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.log_normal": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributions.log_normal.LogNormal": {
  "lineno": 7,
  "symbols_in_volume": [
   "torch.distributions.constraints.positive",
   "torch.distributions.constraints.real",
   "torch.distributions.transformed_distribution.TransformedDistribution"
  ],
  "type": "class"
 },
 "torch.distributions.log_normal.LogNormal.__init__": {
  "lineno": 29,
  "symbols_in_volume": [
   "torch.distributions.normal.Normal",
   "torch.distributions.transforms.ExpTransform"
  ],
  "type": "function"
 },
 "torch.distributions.log_normal.LogNormal.entropy": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.log_normal.LogNormal.expand": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.log_normal.LogNormal.loc": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.log_normal.LogNormal.mean": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.log_normal.LogNormal.scale": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.log_normal.LogNormal.variance": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.logistic_normal": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributions.logistic_normal.LogisticNormal": {
  "lineno": 8,
  "symbols_in_volume": [
   "torch.distributions.constraints.positive",
   "torch.distributions.constraints.real",
   "torch.distributions.constraints.simplex",
   "torch.distributions.transformed_distribution.TransformedDistribution"
  ],
  "type": "class"
 },
 "torch.distributions.logistic_normal.LogisticNormal.__init__": {
  "lineno": 34,
  "symbols_in_volume": [
   "torch.Size",
   "torch.distributions.normal.Normal",
   "torch.distributions.transforms.StickBreakingTransform"
  ],
  "type": "function"
 },
 "torch.distributions.logistic_normal.LogisticNormal.expand": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.logistic_normal.LogisticNormal.loc": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.logistic_normal.LogisticNormal.scale": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.lowrank_multivariate_normal": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal": {
  "lineno": 46,
  "symbols_in_volume": [
   "torch.distributions.constraints.positive",
   "torch.distributions.constraints.real",
   "torch.distributions.distribution.Distribution"
  ],
  "type": "class"
 },
 "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.__init__": {
  "lineno": 82,
  "symbols_in_volume": [
   "torch.broadcast_tensors"
  ],
  "type": "function"
 },
 "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.covariance_matrix": {
  "lineno": 152,
  "symbols_in_volume": [
   "torch.diag_embed",
   "torch.distributions.utils.lazy_property",
   "torch.matmul"
  ],
  "type": "function"
 },
 "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.entropy": {
  "lineno": 194,
  "symbols_in_volume": [
   "math.log",
   "math.pi"
  ],
  "type": "function"
 },
 "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.expand": {
  "lineno": 112,
  "symbols_in_volume": [
   "torch.Size"
  ],
  "type": "function"
 },
 "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.log_prob": {
  "lineno": 181,
  "symbols_in_volume": [
   "math.log",
   "math.pi"
  ],
  "type": "function"
 },
 "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.mean": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.precision_matrix": {
  "lineno": 160,
  "symbols_in_volume": [
   "torch.diag_embed",
   "torch.distributions.utils.lazy_property",
   "torch.matmul",
   "torch.triangular_solve"
  ],
  "type": "function"
 },
 "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.rsample": {
  "lineno": 173,
  "symbols_in_volume": [
   "torch.Size",
   "torch.distributions.multivariate_normal._batch_mv",
   "torch.distributions.utils._standard_normal"
  ],
  "type": "function"
 },
 "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.scale_tril": {
  "lineno": 137,
  "symbols_in_volume": [
   "torch.cholesky",
   "torch.distributions.utils.lazy_property",
   "torch.matmul"
  ],
  "type": "function"
 },
 "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.variance": {
  "lineno": 132,
  "symbols_in_volume": [
   "torch.distributions.utils.lazy_property"
  ],
  "type": "function"
 },
 "torch.distributions.lowrank_multivariate_normal._batch_capacitance_tril": {
  "lineno": 10,
  "symbols_in_volume": [
   "torch.cholesky",
   "torch.matmul"
  ],
  "type": "function"
 },
 "torch.distributions.lowrank_multivariate_normal._batch_lowrank_logdet": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.lowrank_multivariate_normal._batch_lowrank_mahalanobis": {
  "lineno": 32,
  "symbols_in_volume": [
   "torch.distributions.multivariate_normal._batch_mahalanobis",
   "torch.distributions.multivariate_normal._batch_mv"
  ],
  "type": "function"
 },
 "torch.distributions.mixture_same_family": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributions.mixture_same_family.MixtureSameFamily": {
  "lineno": 7,
  "symbols_in_volume": [
   "torch.distributions.distribution.Distribution"
  ],
  "type": "class"
 },
 "torch.distributions.mixture_same_family.MixtureSameFamily.__init__": {
  "lineno": 51,
  "symbols_in_volume": [
   "torch.distributions.Categorical",
   "torch.distributions.distribution.Distribution"
  ],
  "type": "function"
 },
 "torch.distributions.mixture_same_family.MixtureSameFamily.__repr__": {
  "lineno": 188,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.mixture_same_family.MixtureSameFamily._pad": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.mixture_same_family.MixtureSameFamily._pad_mixture_dimensions": {
  "lineno": 178,
  "symbols_in_volume": [
   "torch.Size"
  ],
  "type": "function"
 },
 "torch.distributions.mixture_same_family.MixtureSameFamily.cdf": {
  "lineno": 138,
  "symbols_in_volume": [
   "torch.sum"
  ],
  "type": "function"
 },
 "torch.distributions.mixture_same_family.MixtureSameFamily.component_distribution": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.mixture_same_family.MixtureSameFamily.expand": {
  "lineno": 90,
  "symbols_in_volume": [
   "torch.Size"
  ],
  "type": "function"
 },
 "torch.distributions.mixture_same_family.MixtureSameFamily.log_prob": {
  "lineno": 145,
  "symbols_in_volume": [
   "torch.log_softmax",
   "torch.logsumexp"
  ],
  "type": "function"
 },
 "torch.distributions.mixture_same_family.MixtureSameFamily.mean": {
  "lineno": 121,
  "symbols_in_volume": [
   "torch.sum"
  ],
  "type": "function"
 },
 "torch.distributions.mixture_same_family.MixtureSameFamily.mixture_distribution": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.mixture_same_family.MixtureSameFamily.sample": {
  "lineno": 152,
  "symbols_in_volume": [
   "torch.Size",
   "torch.gather",
   "torch.no_grad"
  ],
  "type": "function"
 },
 "torch.distributions.mixture_same_family.MixtureSameFamily.support": {
  "lineno": 107,
  "symbols_in_volume": [
   "torch.distributions.constraints.dependent_property"
  ],
  "type": "function"
 },
 "torch.distributions.mixture_same_family.MixtureSameFamily.variance": {
  "lineno": 127,
  "symbols_in_volume": [
   "torch.sum"
  ],
  "type": "function"
 },
 "torch.distributions.multinomial": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributions.multinomial.Multinomial": {
  "lineno": 10,
  "symbols_in_volume": [
   "torch.distributions.constraints.real",
   "torch.distributions.constraints.simplex",
   "torch.distributions.distribution.Distribution"
  ],
  "type": "class"
 },
 "torch.distributions.multinomial.Multinomial.__init__": {
  "lineno": 52,
  "symbols_in_volume": [
   "numbers.Number",
   "torch.distributions.Categorical"
  ],
  "type": "function"
 },
 "torch.distributions.multinomial.Multinomial._new": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.multinomial.Multinomial.expand": {
  "lineno": 61,
  "symbols_in_volume": [
   "torch.Size"
  ],
  "type": "function"
 },
 "torch.distributions.multinomial.Multinomial.log_prob": {
  "lineno": 101,
  "symbols_in_volume": [
   "torch._six.inf",
   "torch.contiguous_format",
   "torch.distributions.utils.broadcast_all",
   "torch.lgamma"
  ],
  "type": "function"
 },
 "torch.distributions.multinomial.Multinomial.logits": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.multinomial.Multinomial.mean": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.multinomial.Multinomial.param_shape": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.multinomial.Multinomial.probs": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.multinomial.Multinomial.sample": {
  "lineno": 89,
  "symbols_in_volume": [
   "torch.Size",
   "torch.ones_like"
  ],
  "type": "function"
 },
 "torch.distributions.multinomial.Multinomial.support": {
  "lineno": 73,
  "symbols_in_volume": [
   "torch.distributions.constraints.dependent_property",
   "torch.distributions.constraints.integer_interval"
  ],
  "type": "function"
 },
 "torch.distributions.multinomial.Multinomial.variance": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.multivariate_normal": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributions.multivariate_normal.MultivariateNormal": {
  "lineno": 78,
  "symbols_in_volume": [
   "torch.distributions.constraints.lower_cholesky",
   "torch.distributions.constraints.positive_definite",
   "torch.distributions.constraints.real",
   "torch.distributions.constraints.real_vector",
   "torch.distributions.distribution.Distribution"
  ],
  "type": "class"
 },
 "torch.distributions.multivariate_normal.MultivariateNormal.__init__": {
  "lineno": 119,
  "symbols_in_volume": [
   "torch.broadcast_tensors",
   "torch.cholesky"
  ],
  "type": "function"
 },
 "torch.distributions.multivariate_normal.MultivariateNormal.covariance_matrix": {
  "lineno": 177,
  "symbols_in_volume": [
   "torch.distributions.utils.lazy_property",
   "torch.matmul"
  ],
  "type": "function"
 },
 "torch.distributions.multivariate_normal.MultivariateNormal.entropy": {
  "lineno": 212,
  "symbols_in_volume": [
   "math.log",
   "math.pi"
  ],
  "type": "function"
 },
 "torch.distributions.multivariate_normal.MultivariateNormal.expand": {
  "lineno": 153,
  "symbols_in_volume": [
   "torch.Size"
  ],
  "type": "function"
 },
 "torch.distributions.multivariate_normal.MultivariateNormal.log_prob": {
  "lineno": 204,
  "symbols_in_volume": [
   "math.log",
   "math.pi"
  ],
  "type": "function"
 },
 "torch.distributions.multivariate_normal.MultivariateNormal.mean": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.multivariate_normal.MultivariateNormal.precision_matrix": {
  "lineno": 183,
  "symbols_in_volume": [
   "torch.cholesky_solve",
   "torch.distributions.utils.lazy_property",
   "torch.eye"
  ],
  "type": "function"
 },
 "torch.distributions.multivariate_normal.MultivariateNormal.rsample": {
  "lineno": 199,
  "symbols_in_volume": [
   "torch.Size",
   "torch.distributions.utils._standard_normal"
  ],
  "type": "function"
 },
 "torch.distributions.multivariate_normal.MultivariateNormal.scale_tril": {
  "lineno": 172,
  "symbols_in_volume": [
   "torch.distributions.utils.lazy_property"
  ],
  "type": "function"
 },
 "torch.distributions.multivariate_normal.MultivariateNormal.variance": {
  "lineno": 194,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.multivariate_normal._batch_mahalanobis": {
  "lineno": 23,
  "symbols_in_volume": [
   "torch.triangular_solve"
  ],
  "type": "function"
 },
 "torch.distributions.multivariate_normal._batch_mv": {
  "lineno": 9,
  "symbols_in_volume": [
   "torch.matmul"
  ],
  "type": "function"
 },
 "torch.distributions.multivariate_normal._precision_to_scale_tril": {
  "lineno": 69,
  "symbols_in_volume": [
   "torch.cholesky",
   "torch.eye",
   "torch.flip",
   "torch.transpose",
   "torch.triangular_solve"
  ],
  "type": "function"
 },
 "torch.distributions.negative_binomial": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributions.negative_binomial.NegativeBinomial": {
  "lineno": 8,
  "symbols_in_volume": [
   "torch.distributions.constraints.greater_than_eq",
   "torch.distributions.constraints.half_open_interval",
   "torch.distributions.constraints.nonnegative_integer",
   "torch.distributions.constraints.real",
   "torch.distributions.distribution.Distribution"
  ],
  "type": "class"
 },
 "torch.distributions.negative_binomial.NegativeBinomial.__init__": {
  "lineno": 27,
  "symbols_in_volume": [
   "torch.distributions.utils.broadcast_all"
  ],
  "type": "function"
 },
 "torch.distributions.negative_binomial.NegativeBinomial._gamma": {
  "lineno": 78,
  "symbols_in_volume": [
   "torch.distributions.Gamma",
   "torch.distributions.utils.lazy_property",
   "torch.exp"
  ],
  "type": "function"
 },
 "torch.distributions.negative_binomial.NegativeBinomial._new": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.negative_binomial.NegativeBinomial.expand": {
  "lineno": 41,
  "symbols_in_volume": [
   "torch.Size"
  ],
  "type": "function"
 },
 "torch.distributions.negative_binomial.NegativeBinomial.log_prob": {
  "lineno": 88,
  "symbols_in_volume": [
   "torch.lgamma",
   "torch.nn.functional.logsigmoid"
  ],
  "type": "function"
 },
 "torch.distributions.negative_binomial.NegativeBinomial.logits": {
  "lineno": 66,
  "symbols_in_volume": [
   "torch.distributions.utils.lazy_property",
   "torch.distributions.utils.probs_to_logits"
  ],
  "type": "function"
 },
 "torch.distributions.negative_binomial.NegativeBinomial.mean": {
  "lineno": 58,
  "symbols_in_volume": [
   "torch.exp"
  ],
  "type": "function"
 },
 "torch.distributions.negative_binomial.NegativeBinomial.param_shape": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.negative_binomial.NegativeBinomial.probs": {
  "lineno": 70,
  "symbols_in_volume": [
   "torch.distributions.utils.lazy_property",
   "torch.distributions.utils.logits_to_probs"
  ],
  "type": "function"
 },
 "torch.distributions.negative_binomial.NegativeBinomial.sample": {
  "lineno": 83,
  "symbols_in_volume": [
   "torch.Size",
   "torch.no_grad",
   "torch.poisson"
  ],
  "type": "function"
 },
 "torch.distributions.negative_binomial.NegativeBinomial.variance": {
  "lineno": 62,
  "symbols_in_volume": [
   "torch.sigmoid"
  ],
  "type": "function"
 },
 "torch.distributions.normal": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributions.normal.Normal": {
  "lineno": 10,
  "symbols_in_volume": [
   "torch.distributions.constraints.positive",
   "torch.distributions.constraints.real",
   "torch.distributions.exp_family.ExponentialFamily"
  ],
  "type": "class"
 },
 "torch.distributions.normal.Normal.__init__": {
  "lineno": 43,
  "symbols_in_volume": [
   "numbers.Number",
   "torch.Size",
   "torch.distributions.utils.broadcast_all"
  ],
  "type": "function"
 },
 "torch.distributions.normal.Normal._log_normalizer": {
  "lineno": 95,
  "symbols_in_volume": [
   "math.pi",
   "torch.log"
  ],
  "type": "function"
 },
 "torch.distributions.normal.Normal._natural_params": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.normal.Normal.cdf": {
  "lineno": 78,
  "symbols_in_volume": [
   "math.sqrt",
   "torch.erf"
  ],
  "type": "function"
 },
 "torch.distributions.normal.Normal.entropy": {
  "lineno": 88,
  "symbols_in_volume": [
   "math.log",
   "math.pi",
   "torch.log"
  ],
  "type": "function"
 },
 "torch.distributions.normal.Normal.expand": {
  "lineno": 51,
  "symbols_in_volume": [
   "torch.Size"
  ],
  "type": "function"
 },
 "torch.distributions.normal.Normal.icdf": {
  "lineno": 83,
  "symbols_in_volume": [
   "math.sqrt",
   "torch.erfinv"
  ],
  "type": "function"
 },
 "torch.distributions.normal.Normal.log_prob": {
  "lineno": 70,
  "symbols_in_volume": [
   "math.log",
   "math.pi",
   "math.sqrt",
   "numbers.Number"
  ],
  "type": "function"
 },
 "torch.distributions.normal.Normal.mean": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.normal.Normal.rsample": {
  "lineno": 65,
  "symbols_in_volume": [
   "torch.Size",
   "torch.distributions.utils._standard_normal"
  ],
  "type": "function"
 },
 "torch.distributions.normal.Normal.sample": {
  "lineno": 60,
  "symbols_in_volume": [
   "torch.Size",
   "torch.no_grad",
   "torch.normal"
  ],
  "type": "function"
 },
 "torch.distributions.normal.Normal.stddev": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.normal.Normal.variance": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.one_hot_categorical": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributions.one_hot_categorical.OneHotCategorical": {
  "lineno": 7,
  "symbols_in_volume": [
   "torch.distributions.constraints.real",
   "torch.distributions.constraints.simplex",
   "torch.distributions.distribution.Distribution"
  ],
  "type": "class"
 },
 "torch.distributions.one_hot_categorical.OneHotCategorical.__init__": {
  "lineno": 35,
  "symbols_in_volume": [
   "torch.distributions.categorical.Categorical"
  ],
  "type": "function"
 },
 "torch.distributions.one_hot_categorical.OneHotCategorical._new": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.one_hot_categorical.OneHotCategorical._param": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.one_hot_categorical.OneHotCategorical.entropy": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.one_hot_categorical.OneHotCategorical.enumerate_support": {
  "lineno": 92,
  "symbols_in_volume": [
   "torch.eye"
  ],
  "type": "function"
 },
 "torch.distributions.one_hot_categorical.OneHotCategorical.expand": {
  "lineno": 41,
  "symbols_in_volume": [
   "torch.Size"
  ],
  "type": "function"
 },
 "torch.distributions.one_hot_categorical.OneHotCategorical.log_prob": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.one_hot_categorical.OneHotCategorical.logits": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.one_hot_categorical.OneHotCategorical.mean": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.one_hot_categorical.OneHotCategorical.param_shape": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.one_hot_categorical.OneHotCategorical.probs": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.one_hot_categorical.OneHotCategorical.sample": {
  "lineno": 76,
  "symbols_in_volume": [
   "torch.Size",
   "torch.nn.functional.one_hot"
  ],
  "type": "function"
 },
 "torch.distributions.one_hot_categorical.OneHotCategorical.variance": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.pareto": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributions.pareto.Pareto": {
  "lineno": 8,
  "symbols_in_volume": [
   "torch.distributions.constraints.positive",
   "torch.distributions.transformed_distribution.TransformedDistribution"
  ],
  "type": "class"
 },
 "torch.distributions.pareto.Pareto.__init__": {
  "lineno": 24,
  "symbols_in_volume": [
   "torch.distributions.exponential.Exponential",
   "torch.distributions.transforms.AffineTransform",
   "torch.distributions.transforms.ExpTransform",
   "torch.distributions.utils.broadcast_all"
  ],
  "type": "function"
 },
 "torch.distributions.pareto.Pareto.entropy": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.pareto.Pareto.expand": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.pareto.Pareto.mean": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.pareto.Pareto.support": {
  "lineno": 48,
  "symbols_in_volume": [
   "torch.distributions.constraints.dependent_property",
   "torch.distributions.constraints.greater_than"
  ],
  "type": "function"
 },
 "torch.distributions.pareto.Pareto.variance": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.poisson": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributions.poisson.Poisson": {
  "lineno": 9,
  "symbols_in_volume": [
   "torch.distributions.constraints.nonnegative_integer",
   "torch.distributions.constraints.positive",
   "torch.distributions.exp_family.ExponentialFamily"
  ],
  "type": "class"
 },
 "torch.distributions.poisson.Poisson.__init__": {
  "lineno": 38,
  "symbols_in_volume": [
   "numbers.Number",
   "torch.Size",
   "torch.distributions.utils.broadcast_all"
  ],
  "type": "function"
 },
 "torch.distributions.poisson.Poisson._log_normalizer": {
  "lineno": 69,
  "symbols_in_volume": [
   "torch.exp"
  ],
  "type": "function"
 },
 "torch.distributions.poisson.Poisson._natural_params": {
  "lineno": 65,
  "symbols_in_volume": [
   "torch.log"
  ],
  "type": "function"
 },
 "torch.distributions.poisson.Poisson.expand": {
  "lineno": 46,
  "symbols_in_volume": [
   "torch.Size"
  ],
  "type": "function"
 },
 "torch.distributions.poisson.Poisson.log_prob": {
  "lineno": 59,
  "symbols_in_volume": [
   "torch.distributions.utils.broadcast_all"
  ],
  "type": "function"
 },
 "torch.distributions.poisson.Poisson.mean": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.poisson.Poisson.sample": {
  "lineno": 54,
  "symbols_in_volume": [
   "torch.Size",
   "torch.no_grad",
   "torch.poisson"
  ],
  "type": "function"
 },
 "torch.distributions.poisson.Poisson.variance": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.relaxed_bernoulli": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli": {
  "lineno": 10,
  "symbols_in_volume": [
   "torch.distributions.constraints.real",
   "torch.distributions.constraints.unit_interval",
   "torch.distributions.distribution.Distribution"
  ],
  "type": "class"
 },
 "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.__init__": {
  "lineno": 33,
  "symbols_in_volume": [
   "numbers.Number",
   "torch.Size",
   "torch.distributions.utils.broadcast_all"
  ],
  "type": "function"
 },
 "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli._new": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.expand": {
  "lineno": 50,
  "symbols_in_volume": [
   "torch.Size"
  ],
  "type": "function"
 },
 "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.log_prob": {
  "lineno": 85,
  "symbols_in_volume": [
   "torch.distributions.utils.broadcast_all"
  ],
  "type": "function"
 },
 "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.logits": {
  "lineno": 67,
  "symbols_in_volume": [
   "torch.distributions.utils.lazy_property",
   "torch.distributions.utils.probs_to_logits"
  ],
  "type": "function"
 },
 "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.param_shape": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.probs": {
  "lineno": 71,
  "symbols_in_volume": [
   "torch.distributions.utils.lazy_property",
   "torch.distributions.utils.logits_to_probs"
  ],
  "type": "function"
 },
 "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.rsample": {
  "lineno": 79,
  "symbols_in_volume": [
   "torch.Size",
   "torch.distributions.utils.clamp_probs",
   "torch.rand"
  ],
  "type": "function"
 },
 "torch.distributions.relaxed_bernoulli.RelaxedBernoulli": {
  "lineno": 93,
  "symbols_in_volume": [
   "torch.distributions.constraints.real",
   "torch.distributions.constraints.unit_interval",
   "torch.distributions.transformed_distribution.TransformedDistribution"
  ],
  "type": "class"
 },
 "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.__init__": {
  "lineno": 117,
  "symbols_in_volume": [
   "torch.distributions.transforms.SigmoidTransform"
  ],
  "type": "function"
 },
 "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.expand": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.logits": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.probs": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.temperature": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.relaxed_categorical": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributions.relaxed_categorical.ExpRelaxedCategorical": {
  "lineno": 10,
  "symbols_in_volume": [
   "torch.distributions.constraints.real",
   "torch.distributions.constraints.simplex",
   "torch.distributions.distribution.Distribution"
  ],
  "type": "class"
 },
 "torch.distributions.relaxed_categorical.ExpRelaxedCategorical.__init__": {
  "lineno": 37,
  "symbols_in_volume": [
   "torch.distributions.categorical.Categorical"
  ],
  "type": "function"
 },
 "torch.distributions.relaxed_categorical.ExpRelaxedCategorical._new": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.relaxed_categorical.ExpRelaxedCategorical.expand": {
  "lineno": 44,
  "symbols_in_volume": [
   "torch.Size"
  ],
  "type": "function"
 },
 "torch.distributions.relaxed_categorical.ExpRelaxedCategorical.log_prob": {
  "lineno": 75,
  "symbols_in_volume": [
   "torch.distributions.utils.broadcast_all",
   "torch.full_like"
  ],
  "type": "function"
 },
 "torch.distributions.relaxed_categorical.ExpRelaxedCategorical.logits": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.relaxed_categorical.ExpRelaxedCategorical.param_shape": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.relaxed_categorical.ExpRelaxedCategorical.probs": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.relaxed_categorical.ExpRelaxedCategorical.rsample": {
  "lineno": 68,
  "symbols_in_volume": [
   "torch.Size",
   "torch.distributions.utils.clamp_probs",
   "torch.rand"
  ],
  "type": "function"
 },
 "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical": {
  "lineno": 87,
  "symbols_in_volume": [
   "torch.distributions.constraints.real",
   "torch.distributions.constraints.simplex",
   "torch.distributions.transformed_distribution.TransformedDistribution"
  ],
  "type": "class"
 },
 "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.__init__": {
  "lineno": 111,
  "symbols_in_volume": [
   "torch.distributions.transforms.ExpTransform"
  ],
  "type": "function"
 },
 "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.expand": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.logits": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.probs": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.temperature": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.studentT": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributions.studentT.StudentT": {
  "lineno": 10,
  "symbols_in_volume": [
   "torch.distributions.constraints.positive",
   "torch.distributions.constraints.real",
   "torch.distributions.distribution.Distribution"
  ],
  "type": "class"
 },
 "torch.distributions.studentT.StudentT.__init__": {
  "lineno": 44,
  "symbols_in_volume": [
   "torch.distributions.Chi2",
   "torch.distributions.utils.broadcast_all"
  ],
  "type": "function"
 },
 "torch.distributions.studentT.StudentT.entropy": {
  "lineno": 86,
  "symbols_in_volume": [
   "math.lgamma",
   "torch.digamma",
   "torch.lgamma"
  ],
  "type": "function"
 },
 "torch.distributions.studentT.StudentT.expand": {
  "lineno": 50,
  "symbols_in_volume": [
   "torch.Size"
  ],
  "type": "function"
 },
 "torch.distributions.studentT.StudentT.log_prob": {
  "lineno": 75,
  "symbols_in_volume": [
   "math.log",
   "math.pi",
   "torch.lgamma",
   "torch.log1p"
  ],
  "type": "function"
 },
 "torch.distributions.studentT.StudentT.mean": {
  "lineno": 30,
  "symbols_in_volume": [
   "torch._six.nan",
   "torch.contiguous_format"
  ],
  "type": "function"
 },
 "torch.distributions.studentT.StudentT.rsample": {
  "lineno": 61,
  "symbols_in_volume": [
   "torch.Size",
   "torch.distributions.utils._standard_normal",
   "torch.rsqrt"
  ],
  "type": "function"
 },
 "torch.distributions.studentT.StudentT.variance": {
  "lineno": 36,
  "symbols_in_volume": [
   "torch._six.inf",
   "torch._six.nan",
   "torch.contiguous_format"
  ],
  "type": "function"
 },
 "torch.distributions.transformed_distribution": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributions.transformed_distribution.TransformedDistribution": {
  "lineno": 8,
  "symbols_in_volume": [
   "torch.distributions.distribution.Distribution"
  ],
  "type": "class"
 },
 "torch.distributions.transformed_distribution.TransformedDistribution.__init__": {
  "lineno": 43,
  "symbols_in_volume": [
   "torch.distributions.transforms.Transform"
  ],
  "type": "function"
 },
 "torch.distributions.transformed_distribution.TransformedDistribution._monotonize_cdf": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transformed_distribution.TransformedDistribution.cdf": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transformed_distribution.TransformedDistribution.expand": {
  "lineno": 59,
  "symbols_in_volume": [
   "torch.Size"
  ],
  "type": "function"
 },
 "torch.distributions.transformed_distribution.TransformedDistribution.has_rsample": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transformed_distribution.TransformedDistribution.icdf": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transformed_distribution.TransformedDistribution.log_prob": {
  "lineno": 102,
  "symbols_in_volume": [
   "torch.distributions.utils._sum_rightmost"
  ],
  "type": "function"
 },
 "torch.distributions.transformed_distribution.TransformedDistribution.rsample": {
  "lineno": 90,
  "symbols_in_volume": [
   "torch.Size"
  ],
  "type": "function"
 },
 "torch.distributions.transformed_distribution.TransformedDistribution.sample": {
  "lineno": 77,
  "symbols_in_volume": [
   "torch.Size",
   "torch.no_grad"
  ],
  "type": "function"
 },
 "torch.distributions.transformed_distribution.TransformedDistribution.support": {
  "lineno": 69,
  "symbols_in_volume": [
   "torch.distributions.constraints.dependent_property"
  ],
  "type": "function"
 },
 "torch.distributions.transforms": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributions.transforms.AbsTransform": {
  "lineno": 438,
  "symbols_in_volume": [
   "torch.distributions.constraints.positive",
   "torch.distributions.constraints.real"
  ],
  "type": "class"
 },
 "torch.distributions.transforms.AbsTransform.__eq__": {
  "lineno": 445,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.AbsTransform._call": {
  "lineno": 448,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.AbsTransform._inverse": {
  "lineno": 451,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.AffineTransform": {
  "lineno": 455,
  "symbols_in_volume": [
   "torch.distributions.constraints.real"
  ],
  "type": "class"
 },
 "torch.distributions.transforms.AffineTransform.__eq__": {
  "lineno": 481,
  "symbols_in_volume": [
   "numbers.Number"
  ],
  "type": "function"
 },
 "torch.distributions.transforms.AffineTransform.__init__": {
  "lineno": 470,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.AffineTransform._call": {
  "lineno": 507,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.AffineTransform._inverse": {
  "lineno": 510,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.AffineTransform.log_abs_det_jacobian": {
  "lineno": 513,
  "symbols_in_volume": [
   "math.log",
   "numbers.Number",
   "torch.abs",
   "torch.full_like"
  ],
  "type": "function"
 },
 "torch.distributions.transforms.AffineTransform.sign": {
  "lineno": 501,
  "symbols_in_volume": [
   "numbers.Number"
  ],
  "type": "function"
 },
 "torch.distributions.transforms.AffineTransform.with_cache": {
  "lineno": 476,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.CatTransform": {
  "lineno": 621,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.distributions.transforms.CatTransform.__init__": {
  "lineno": 634,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.CatTransform._call": {
  "lineno": 655,
  "symbols_in_volume": [
   "torch.cat"
  ],
  "type": "function"
 },
 "torch.distributions.transforms.CatTransform._inverse": {
  "lineno": 666,
  "symbols_in_volume": [
   "torch.cat"
  ],
  "type": "function"
 },
 "torch.distributions.transforms.CatTransform.bijective": {
  "lineno": 691,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.CatTransform.codomain": {
  "lineno": 700,
  "symbols_in_volume": [
   "torch.distributions.constraints.cat",
   "torch.distributions.constraints.dependent_property"
  ],
  "type": "function"
 },
 "torch.distributions.transforms.CatTransform.domain": {
  "lineno": 695,
  "symbols_in_volume": [
   "torch.distributions.constraints.cat",
   "torch.distributions.constraints.dependent_property"
  ],
  "type": "function"
 },
 "torch.distributions.transforms.CatTransform.length": {
  "lineno": 646,
  "symbols_in_volume": [
   "torch.distributions.utils.lazy_property"
  ],
  "type": "function"
 },
 "torch.distributions.transforms.CatTransform.log_abs_det_jacobian": {
  "lineno": 677,
  "symbols_in_volume": [
   "torch.cat"
  ],
  "type": "function"
 },
 "torch.distributions.transforms.CatTransform.with_cache": {
  "lineno": 650,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.ComposeTransform": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.distributions.transforms.ComposeTransform.__call__": {
  "lineno": 289,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.ComposeTransform.__eq__": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.ComposeTransform.__init__": {
  "lineno": 235,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.ComposeTransform.__repr__": {
  "lineno": 308,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.ComposeTransform.bijective": {
  "lineno": 258,
  "symbols_in_volume": [
   "torch.distributions.utils.lazy_property"
  ],
  "type": "function"
 },
 "torch.distributions.transforms.ComposeTransform.codomain": {
  "lineno": 252,
  "symbols_in_volume": [
   "torch.distributions.constraints.dependent_property",
   "torch.distributions.constraints.real"
  ],
  "type": "function"
 },
 "torch.distributions.transforms.ComposeTransform.domain": {
  "lineno": 246,
  "symbols_in_volume": [
   "torch.distributions.constraints.dependent_property",
   "torch.distributions.constraints.real"
  ],
  "type": "function"
 },
 "torch.distributions.transforms.ComposeTransform.event_dim": {
  "lineno": 269,
  "symbols_in_volume": [
   "torch.distributions.utils.lazy_property"
  ],
  "type": "function"
 },
 "torch.distributions.transforms.ComposeTransform.inv": {
  "lineno": 273,
  "symbols_in_volume": [
   "weakref.ref"
  ],
  "type": "function"
 },
 "torch.distributions.transforms.ComposeTransform.log_abs_det_jacobian": {
  "lineno": 294,
  "symbols_in_volume": [
   "torch.distributions.utils._sum_rightmost",
   "torch.zeros_like"
  ],
  "type": "function"
 },
 "torch.distributions.transforms.ComposeTransform.sign": {
  "lineno": 262,
  "symbols_in_volume": [
   "torch.distributions.utils.lazy_property"
  ],
  "type": "function"
 },
 "torch.distributions.transforms.ComposeTransform.with_cache": {
  "lineno": 284,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.ExpTransform": {
  "lineno": 318,
  "symbols_in_volume": [
   "torch.distributions.constraints.positive",
   "torch.distributions.constraints.real"
  ],
  "type": "class"
 },
 "torch.distributions.transforms.ExpTransform.__eq__": {
  "lineno": 327,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.ExpTransform._call": {
  "lineno": 330,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.ExpTransform._inverse": {
  "lineno": 333,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.ExpTransform.log_abs_det_jacobian": {
  "lineno": 336,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.LowerCholeskyTransform": {
  "lineno": 599,
  "symbols_in_volume": [
   "torch.distributions.constraints.lower_cholesky",
   "torch.distributions.constraints.real"
  ],
  "type": "class"
 },
 "torch.distributions.transforms.LowerCholeskyTransform.__eq__": {
  "lineno": 611,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.LowerCholeskyTransform._call": {
  "lineno": 614,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.LowerCholeskyTransform._inverse": {
  "lineno": 617,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.PowerTransform": {
  "lineno": 340,
  "symbols_in_volume": [
   "torch.distributions.constraints.positive"
  ],
  "type": "class"
 },
 "torch.distributions.transforms.PowerTransform.__eq__": {
  "lineno": 358,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.PowerTransform.__init__": {
  "lineno": 349,
  "symbols_in_volume": [
   "torch.distributions.utils.broadcast_all"
  ],
  "type": "function"
 },
 "torch.distributions.transforms.PowerTransform._call": {
  "lineno": 363,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.PowerTransform._inverse": {
  "lineno": 366,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.PowerTransform.log_abs_det_jacobian": {
  "lineno": 369,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.PowerTransform.with_cache": {
  "lineno": 353,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.SigmoidTransform": {
  "lineno": 378,
  "symbols_in_volume": [
   "torch.distributions.constraints.real",
   "torch.distributions.constraints.unit_interval"
  ],
  "type": "class"
 },
 "torch.distributions.transforms.SigmoidTransform.__eq__": {
  "lineno": 387,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.SigmoidTransform._call": {
  "lineno": 390,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.SigmoidTransform._inverse": {
  "lineno": 393,
  "symbols_in_volume": [
   "torch.finfo"
  ],
  "type": "function"
 },
 "torch.distributions.transforms.SigmoidTransform.log_abs_det_jacobian": {
  "lineno": 398,
  "symbols_in_volume": [
   "torch.nn.functional.softplus"
  ],
  "type": "function"
 },
 "torch.distributions.transforms.SoftmaxTransform": {
  "lineno": 527,
  "symbols_in_volume": [
   "torch.distributions.constraints.real",
   "torch.distributions.constraints.simplex"
  ],
  "type": "class"
 },
 "torch.distributions.transforms.SoftmaxTransform.__eq__": {
  "lineno": 540,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.SoftmaxTransform._call": {
  "lineno": 543,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.SoftmaxTransform._inverse": {
  "lineno": 548,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.StackTransform": {
  "lineno": 706,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.distributions.transforms.StackTransform.__init__": {
  "lineno": 717,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.StackTransform._call": {
  "lineno": 733,
  "symbols_in_volume": [
   "torch.stack"
  ],
  "type": "function"
 },
 "torch.distributions.transforms.StackTransform._inverse": {
  "lineno": 741,
  "symbols_in_volume": [
   "torch.stack"
  ],
  "type": "function"
 },
 "torch.distributions.transforms.StackTransform._slice": {
  "lineno": 730,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.StackTransform.bijective": {
  "lineno": 761,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.StackTransform.codomain": {
  "lineno": 769,
  "symbols_in_volume": [
   "torch.distributions.constraints.dependent_property",
   "torch.distributions.constraints.stack"
  ],
  "type": "function"
 },
 "torch.distributions.transforms.StackTransform.domain": {
  "lineno": 765,
  "symbols_in_volume": [
   "torch.distributions.constraints.dependent_property",
   "torch.distributions.constraints.stack"
  ],
  "type": "function"
 },
 "torch.distributions.transforms.StackTransform.log_abs_det_jacobian": {
  "lineno": 749,
  "symbols_in_volume": [
   "torch.stack"
  ],
  "type": "function"
 },
 "torch.distributions.transforms.StackTransform.with_cache": {
  "lineno": 725,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.StickBreakingTransform": {
  "lineno": 553,
  "symbols_in_volume": [
   "torch.distributions.constraints.real",
   "torch.distributions.constraints.simplex"
  ],
  "type": "class"
 },
 "torch.distributions.transforms.StickBreakingTransform.__eq__": {
  "lineno": 571,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.StickBreakingTransform._call": {
  "lineno": 574,
  "symbols_in_volume": [
   "torch.nn.functional.pad"
  ],
  "type": "function"
 },
 "torch.distributions.transforms.StickBreakingTransform._inverse": {
  "lineno": 581,
  "symbols_in_volume": [
   "torch.clamp",
   "torch.finfo"
  ],
  "type": "function"
 },
 "torch.distributions.transforms.StickBreakingTransform.log_abs_det_jacobian": {
  "lineno": 591,
  "symbols_in_volume": [
   "torch.nn.functional.logsigmoid"
  ],
  "type": "function"
 },
 "torch.distributions.transforms.TanhTransform": {
  "lineno": 402,
  "symbols_in_volume": [
   "torch.distributions.constraints.interval",
   "torch.distributions.constraints.real"
  ],
  "type": "class"
 },
 "torch.distributions.transforms.TanhTransform.__eq__": {
  "lineno": 421,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.TanhTransform._call": {
  "lineno": 424,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.TanhTransform._inverse": {
  "lineno": 427,
  "symbols_in_volume": [
   "torch.atanh"
  ],
  "type": "function"
 },
 "torch.distributions.transforms.TanhTransform.log_abs_det_jacobian": {
  "lineno": 432,
  "symbols_in_volume": [
   "math.log",
   "torch.nn.functional.softplus"
  ],
  "type": "function"
 },
 "torch.distributions.transforms.Transform": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.distributions.transforms.Transform.__call__": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.Transform.__eq__": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.Transform.__init__": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.Transform.__ne__": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.Transform.__repr__": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.Transform._call": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.Transform._inv_call": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.Transform._inverse": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.Transform.inv": {
  "lineno": 93,
  "symbols_in_volume": [
   "weakref.ref"
  ],
  "type": "function"
 },
 "torch.distributions.transforms.Transform.log_abs_det_jacobian": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.Transform.sign": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms.Transform.with_cache": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms._InverseTransform": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.distributions.transforms._InverseTransform.__call__": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms._InverseTransform.__eq__": {
  "lineno": 213,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms._InverseTransform.__init__": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms._InverseTransform.bijective": {
  "lineno": 194,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms._InverseTransform.codomain": {
  "lineno": 190,
  "symbols_in_volume": [
   "torch.distributions.constraints.dependent_property"
  ],
  "type": "function"
 },
 "torch.distributions.transforms._InverseTransform.domain": {
  "lineno": 186,
  "symbols_in_volume": [
   "torch.distributions.constraints.dependent_property"
  ],
  "type": "function"
 },
 "torch.distributions.transforms._InverseTransform.event_dim": {
  "lineno": 202,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms._InverseTransform.inv": {
  "lineno": 206,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms._InverseTransform.log_abs_det_jacobian": {
  "lineno": 221,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms._InverseTransform.sign": {
  "lineno": 198,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms._InverseTransform.with_cache": {
  "lineno": 210,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.transforms._clipped_sigmoid": {
  "lineno": 373,
  "symbols_in_volume": [
   "torch.clamp",
   "torch.finfo",
   "torch.sigmoid"
  ],
  "type": "function"
 },
 "torch.distributions.uniform": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributions.uniform.Uniform": {
  "lineno": 9,
  "symbols_in_volume": [
   "torch.distributions.constraints.dependent",
   "torch.distributions.distribution.Distribution"
  ],
  "type": "class"
 },
 "torch.distributions.uniform.Uniform.__init__": {
  "lineno": 40,
  "symbols_in_volume": [
   "numbers.Number",
   "torch.Size",
   "torch.distributions.utils.broadcast_all",
   "torch.lt"
  ],
  "type": "function"
 },
 "torch.distributions.uniform.Uniform.cdf": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.uniform.Uniform.entropy": {
  "lineno": 89,
  "symbols_in_volume": [
   "torch.log"
  ],
  "type": "function"
 },
 "torch.distributions.uniform.Uniform.expand": {
  "lineno": 52,
  "symbols_in_volume": [
   "torch.Size"
  ],
  "type": "function"
 },
 "torch.distributions.uniform.Uniform.icdf": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.uniform.Uniform.log_prob": {
  "lineno": 70,
  "symbols_in_volume": [
   "torch.log"
  ],
  "type": "function"
 },
 "torch.distributions.uniform.Uniform.mean": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.uniform.Uniform.rsample": {
  "lineno": 65,
  "symbols_in_volume": [
   "torch.Size",
   "torch.rand"
  ],
  "type": "function"
 },
 "torch.distributions.uniform.Uniform.stddev": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.uniform.Uniform.support": {
  "lineno": 61,
  "symbols_in_volume": [
   "torch.distributions.constraints.dependent_property",
   "torch.distributions.constraints.interval"
  ],
  "type": "function"
 },
 "torch.distributions.uniform.Uniform.variance": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributions.utils._standard_normal": {
  "lineno": 36,
  "symbols_in_volume": [
   "torch._C._get_tracing_state",
   "torch.empty",
   "torch.normal",
   "torch.ones",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.distributions.utils._sum_rightmost": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.utils.broadcast_all": {
  "lineno": 7,
  "symbols_in_volume": [
   "numbers.Number",
   "torch.Tensor",
   "torch.broadcast_tensors",
   "torch.get_default_dtype",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.distributions.utils.clamp_probs": {
  "lineno": 70,
  "symbols_in_volume": [
   "torch.finfo"
  ],
  "type": "function"
 },
 "torch.distributions.utils.lazy_property": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.distributions.utils.lazy_property.__get__": {
  "lineno": 99,
  "symbols_in_volume": [
   "torch.enable_grad"
  ],
  "type": "function"
 },
 "torch.distributions.utils.lazy_property.__init__": {
  "lineno": 95,
  "symbols_in_volume": [
   "functools.update_wrapper"
  ],
  "type": "function"
 },
 "torch.distributions.utils.logits_to_probs": {
  "lineno": 58,
  "symbols_in_volume": [
   "torch.nn.functional.softmax",
   "torch.sigmoid"
  ],
  "type": "function"
 },
 "torch.distributions.utils.probs_to_logits": {
  "lineno": 75,
  "symbols_in_volume": [
   "torch.log",
   "torch.log1p"
  ],
  "type": "function"
 },
 "torch.distributions.von_mises": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributions.von_mises.VonMises": {
  "lineno": 68,
  "symbols_in_volume": [
   "torch.distributions.constraints.positive",
   "torch.distributions.constraints.real",
   "torch.distributions.distribution.Distribution"
  ],
  "type": "class"
 },
 "torch.distributions.von_mises.VonMises.__init__": {
  "lineno": 88,
  "symbols_in_volume": [
   "torch.Size",
   "torch.distributions.utils.broadcast_all"
  ],
  "type": "function"
 },
 "torch.distributions.von_mises.VonMises.expand": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.von_mises.VonMises.log_prob": {
  "lineno": 100,
  "symbols_in_volume": [
   "math.log",
   "math.pi",
   "torch.cos"
  ],
  "type": "function"
 },
 "torch.distributions.von_mises.VonMises.mean": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.von_mises.VonMises.sample": {
  "lineno": 105,
  "symbols_in_volume": [
   "torch.Size",
   "torch.empty",
   "torch.no_grad"
  ],
  "type": "function"
 },
 "torch.distributions.von_mises.VonMises.variance": {
  "lineno": 132,
  "symbols_in_volume": [
   "torch.distributions.utils.lazy_property"
  ],
  "type": "function"
 },
 "torch.distributions.von_mises._eval_poly": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.distributions.von_mises._log_modified_bessel_fn": {
  "lineno": 29,
  "symbols_in_volume": [
   "torch.where"
  ],
  "type": "function"
 },
 "torch.distributions.von_mises._rejection_sample": {
  "lineno": 52,
  "symbols_in_volume": [
   "math.pi",
   "torch.bool",
   "torch.cos",
   "torch.jit._script_if_tracing",
   "torch.rand",
   "torch.where",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.distributions.weibull": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.distributions.weibull.Weibull": {
  "lineno": 10,
  "symbols_in_volume": [
   "torch.distributions.constraints.positive",
   "torch.distributions.transformed_distribution.TransformedDistribution"
  ],
  "type": "class"
 },
 "torch.distributions.weibull.Weibull.__init__": {
  "lineno": 27,
  "symbols_in_volume": [
   "torch.distributions.exponential.Exponential",
   "torch.distributions.transforms.AffineTransform",
   "torch.distributions.transforms.PowerTransform",
   "torch.distributions.utils.broadcast_all",
   "torch.ones_like"
  ],
  "type": "function"
 },
 "torch.distributions.weibull.Weibull.entropy": {
  "lineno": 60,
  "symbols_in_volume": [
   "torch.distributions.gumbel.euler_constant",
   "torch.log"
  ],
  "type": "function"
 },
 "torch.distributions.weibull.Weibull.expand": {
  "lineno": 37,
  "symbols_in_volume": [
   "torch.distributions.transforms.AffineTransform",
   "torch.distributions.transforms.PowerTransform"
  ],
  "type": "function"
 },
 "torch.distributions.weibull.Weibull.mean": {
  "lineno": 51,
  "symbols_in_volume": [
   "torch.exp",
   "torch.lgamma"
  ],
  "type": "function"
 },
 "torch.distributions.weibull.Weibull.variance": {
  "lineno": 55,
  "symbols_in_volume": [
   "torch.exp",
   "torch.lgamma"
  ],
  "type": "function"
 },
 "torch.fft": {
  "lineno": null,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._C._add_docstr",
   "torch._C._fft.fft_fft",
   "torch._C._fft.fft_fftn",
   "torch._C._fft.fft_hfft",
   "torch._C._fft.fft_ifft",
   "torch._C._fft.fft_ifftn",
   "torch._C._fft.fft_ihfft",
   "torch._C._fft.fft_irfft",
   "torch._C._fft.fft_irfftn",
   "torch._C._fft.fft_rfft",
   "torch._C._fft.fft_rfftn"
  ],
  "type": "module"
 },
 "torch.for_onnx": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.functional": {
  "lineno": null,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.types._size",
   "torch.unique_dim",
   "typing.Any",
   "typing.Sequence",
   "typing.TYPE_CHECKING",
   "typing.Tuple"
  ],
  "type": "module"
 },
 "torch.functional._check_list_size": {
  "lineno": 1461,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.functional._consecutive_return_counts": {
  "lineno": 814,
  "symbols_in_volume": [
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.functional._consecutive_return_inverse": {
  "lineno": 836,
  "symbols_in_volume": [
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.functional._consecutive_return_output": {
  "lineno": 825,
  "symbols_in_volume": [
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.functional._index_tensor_with_indices_list": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.functional._indices_product": {
  "lineno": 131,
  "symbols_in_volume": [
   "torch.jit.annotate"
  ],
  "type": "function"
 },
 "torch.functional._lu_impl": {
  "lineno": 1381,
  "symbols_in_volume": [
   "torch._lu_with_info"
  ],
  "type": "function"
 },
 "torch.functional._lu_no_infos": {
  "lineno": 1483,
  "symbols_in_volume": [
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.functional._lu_with_infos": {
  "lineno": 1468,
  "symbols_in_volume": [
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.functional._meshgrid": {
  "lineno": 356,
  "symbols_in_volume": [
   "torch._VF.meshgrid",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.functional._return_counts": {
  "lineno": 749,
  "symbols_in_volume": [
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.functional._return_inverse": {
  "lineno": 771,
  "symbols_in_volume": [
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.functional._return_output": {
  "lineno": 760,
  "symbols_in_volume": [
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.functional._unique_consecutive_impl": {
  "lineno": 687,
  "symbols_in_volume": [
   "torch._VF.unique_consecutive",
   "torch.jit.is_scripting",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.functional._unique_impl": {
  "lineno": 602,
  "symbols_in_volume": [
   "torch._VF.unique_dim",
   "torch._unique2",
   "torch.jit.is_scripting",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.functional.align_tensors": {
  "lineno": 1511,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.functional.atleast_1d": {
  "lineno": 1061,
  "symbols_in_volume": [
   "torch._VF.atleast_1d",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.functional.atleast_2d": {
  "lineno": 1095,
  "symbols_in_volume": [
   "torch._VF.atleast_2d",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.functional.atleast_3d": {
  "lineno": 1130,
  "symbols_in_volume": [
   "torch._VF.atleast_3d",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.functional.block_diag": {
  "lineno": 971,
  "symbols_in_volume": [
   "torch._C._VariableFunctions.block_diag"
  ],
  "type": "function"
 },
 "torch.functional.broadcast_tensors": {
  "lineno": 42,
  "symbols_in_volume": [
   "torch._VF.broadcast_tensors",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.functional.cartesian_prod": {
  "lineno": 938,
  "symbols_in_volume": [
   "torch._VF.cartesian_prod",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.functional.cdist": {
  "lineno": 1006,
  "symbols_in_volume": [
   "torch._VF.cdist",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.functional.chain_matmul": {
  "lineno": 1346,
  "symbols_in_volume": [
   "torch._VF.chain_matmul",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.functional.einsum": {
  "lineno": 261,
  "symbols_in_volume": [
   "torch._VF.einsum",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.functional.istft": {
  "lineno": 518,
  "symbols_in_volume": [
   "torch._VF.istft",
   "torch.jit.is_scripting",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.functional.lu_unpack": {
  "lineno": 151,
  "symbols_in_volume": [
   "torch.as_tensor",
   "torch.contiguous_format",
   "torch.eye",
   "torch.jit.is_scripting",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.functional.meshgrid": {
  "lineno": 352,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.functional.norm": {
  "lineno": 1211,
  "symbols_in_volume": [
   "torch._VF.frobenius_norm",
   "torch._VF.norm",
   "torch._VF.nuclear_norm",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.functional.split": {
  "lineno": 74,
  "symbols_in_volume": [
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.functional.stft": {
  "lineno": 394,
  "symbols_in_volume": [
   "torch._VF.stft",
   "torch.jit.is_scripting",
   "torch.nn.functional.pad",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.functional.tensordot": {
  "lineno": 879,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._VF.tensordot",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.futures": {
  "lineno": null,
  "symbols_in_volume": [
   "torch._six.PY37",
   "typing.TypeVar"
  ],
  "type": "module"
 },
 "torch.futures.Future": {
  "lineno": 19,
  "symbols_in_volume": [
   "torch._C.Future",
   "typing.Generic"
  ],
  "type": "class"
 },
 "torch.futures.Future.done": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.futures.Future.set_result": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.futures.Future.then": {
  "lineno": 45,
  "symbols_in_volume": [
   "typing.cast"
  ],
  "type": "function"
 },
 "torch.futures.Future.wait": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.futures._PyFutureMeta": {
  "lineno": 16,
  "symbols_in_volume": [
   "torch._C.Future",
   "typing.Generic"
  ],
  "type": "class"
 },
 "torch.futures.collect_all": {
  "lineno": 115,
  "symbols_in_volume": [
   "torch._C.Future",
   "torch._C._collect_all",
   "typing.List",
   "typing.cast"
  ],
  "type": "function"
 },
 "torch.futures.wait_all": {
  "lineno": 149,
  "symbols_in_volume": [
   "torch._C.Future",
   "torch._C._collect_all",
   "typing.List",
   "typing.cast"
  ],
  "type": "function"
 },
 "torch.hub": {
  "lineno": null,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "module"
 },
 "torch.hub._check_dependencies": {
  "lineno": 196,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.hub._check_module_exists": {
  "lineno": 157,
  "symbols_in_volume": [
   "imp.find_module",
   "sys.path",
   "sys.path_importer_cache.get",
   "sys.version_info"
  ],
  "type": "function"
 },
 "torch.hub._download_url_to_file": {
  "lineno": 467,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.hub._get_cache_or_reload": {
  "lineno": 112,
  "symbols_in_volume": [
   "os.makedirs",
   "os.path.exists",
   "os.path.join",
   "shutil.move",
   "sys.stderr.write",
   "zipfile.ZipFile"
  ],
  "type": "function"
 },
 "torch.hub._get_torch_home": {
  "lineno": 94,
  "symbols_in_volume": [
   "os.getenv",
   "os.path.expanduser",
   "os.path.join"
  ],
  "type": "function"
 },
 "torch.hub._git_archive_link": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.hub._is_legacy_zip_format": {
  "lineno": 476,
  "symbols_in_volume": [
   "zipfile.ZipFile",
   "zipfile.is_zipfile"
  ],
  "type": "function"
 },
 "torch.hub._legacy_zip_load": {
  "lineno": 482,
  "symbols_in_volume": [
   "os.path.join",
   "torch.load",
   "warnings.warn",
   "zipfile.ZipFile"
  ],
  "type": "function"
 },
 "torch.hub._load_attr_from_module": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.hub._load_entry_from_hubconf": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.hub._load_local": {
  "lineno": 374,
  "symbols_in_volume": [
   "os.path.join",
   "sys.path.insert",
   "sys.path.remove"
  ],
  "type": "function"
 },
 "torch.hub._parse_repo_info": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.hub._remove_if_exists": {
  "lineno": 75,
  "symbols_in_volume": [
   "os.path.exists",
   "os.path.isfile",
   "os.remove",
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "torch.hub.download_url_to_file": {
  "lineno": 406,
  "symbols_in_volume": [
   "hashlib.sha256",
   "os.path.dirname",
   "os.path.exists",
   "os.path.expanduser",
   "os.remove",
   "shutil.move",
   "tempfile.NamedTemporaryFile",
   "tqdm.tqdm",
   "urllib.request.Request",
   "urllib.request.urlopen"
  ],
  "type": "function"
 },
 "torch.hub.get_dir": {
  "lineno": 223,
  "symbols_in_volume": [
   "os.getenv",
   "os.path.join",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.hub.help": {
  "lineno": 283,
  "symbols_in_volume": [
   "sys.path.insert",
   "sys.path.remove"
  ],
  "type": "function"
 },
 "torch.hub.import_module": {
  "lineno": 65,
  "symbols_in_volume": [
   "importlib.abc.Loader"
  ],
  "type": "function"
 },
 "torch.hub.list": {
  "lineno": 253,
  "symbols_in_volume": [
   "sys.path.insert",
   "sys.path.remove"
  ],
  "type": "function"
 },
 "torch.hub.load": {
  "lineno": 314,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.hub.load_state_dict_from_url": {
  "lineno": 498,
  "symbols_in_volume": [
   "errno.EEXIST",
   "os.getenv",
   "os.makedirs",
   "os.path.basename",
   "os.path.exists",
   "os.path.join",
   "sys.stderr.write",
   "torch.load",
   "urllib.parse.urlparse",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.hub.set_dir": {
  "lineno": 242,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.hub.tqdm": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.hub.tqdm.__enter__": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.hub.tqdm.__exit__": {
  "lineno": 45,
  "symbols_in_volume": [
   "sys.stderr.write"
  ],
  "type": "function"
 },
 "torch.hub.tqdm.__init__": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.hub.tqdm.update": {
  "lineno": 31,
  "symbols_in_volume": [
   "sys.stderr.flush",
   "sys.stderr.write"
  ],
  "type": "function"
 },
 "torch.is_deterministic": {
  "lineno": 402,
  "symbols_in_volume": [
   "torch._C._get_deterministic"
  ],
  "type": "function"
 },
 "torch.is_storage": {
  "lineno": 265,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.is_tensor": {
  "lineno": 251,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit": {
  "lineno": null,
  "symbols_in_volume": [
   "torch.jit._async.fork",
   "torch.jit._async.wait",
   "torch.utils.set_module"
  ],
  "type": "module"
 },
 "torch.jit._async": {
  "lineno": null,
  "symbols_in_volume": [
   "torch._jit_internal.Future",
   "torch.jit._builtins._register_builtin",
   "torch.utils.set_module"
  ],
  "type": "module"
 },
 "torch.jit._async.fork": {
  "lineno": 19,
  "symbols_in_volume": [
   "torch._C.fork"
  ],
  "type": "function"
 },
 "torch.jit._async.wait": {
  "lineno": 83,
  "symbols_in_volume": [
   "torch._C.wait"
  ],
  "type": "function"
 },
 "torch.jit._builtins": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "math.acos",
   "math.acosh",
   "math.asin",
   "math.asinh",
   "math.atan",
   "math.atan2",
   "math.atanh",
   "math.ceil",
   "math.copysign",
   "math.cos",
   "math.cosh",
   "math.degrees",
   "math.erf",
   "math.erfc",
   "math.exp",
   "math.expm1",
   "math.fabs",
   "math.factorial",
   "math.floor",
   "math.fmod",
   "math.frexp",
   "math.gamma",
   "math.isinf",
   "math.isnan",
   "math.ldexp",
   "math.lgamma",
   "math.log",
   "math.log10",
   "math.log1p",
   "math.modf",
   "math.pow",
   "math.radians",
   "math.sin",
   "math.sinh",
   "math.sqrt",
   "math.tan",
   "math.tanh",
   "torch",
   "torch._C._fft",
   "torch._C._get_tracing_state",
   "torch._C._infer_size",
   "torch._C._linalg",
   "torch._C._nn",
   "torch._VF.cdist",
   "torch._VF.frobenius_norm",
   "torch._VF.istft",
   "torch._VF.norm",
   "torch._VF.nuclear_norm",
   "torch._VF.stft",
   "torch._VF.unique_consecutive",
   "torch._VF.unique_dim",
   "torch.autograd.backward",
   "torch.autograd.grad",
   "torch.backends.cudnn.is_acceptable",
   "torch.nn.functional._no_grad_embedding_renorm_",
   "torch.nn.functional.assert_int_or_pair",
   "torch.nn.init._no_grad_fill_",
   "torch.nn.init._no_grad_normal_",
   "torch.nn.init._no_grad_uniform_",
   "torch.nn.init._no_grad_zero_",
   "typing.Dict",
   "typing.Optional",
   "warnings.warn"
  ],
  "type": "module"
 },
 "torch.jit._builtins._find_builtin": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._builtins._gen_torch_functional_registered_ops": {
  "lineno": 95,
  "symbols_in_volume": [
   "torch.functional"
  ],
  "type": "function"
 },
 "torch.jit._builtins._get_builtin_table": {
  "lineno": 109,
  "symbols_in_volume": [
   "math.gcd",
   "math.isfinite",
   "math.remainder",
   "torch._six.PY37",
   "torch.distributed.autograd.backward",
   "torch.distributed.autograd.get_gradients",
   "torch.distributed.autograd.is_available"
  ],
  "type": "function"
 },
 "torch.jit._builtins._get_builtin_table.register_all": {
  "lineno": 115,
  "symbols_in_volume": [
   "torch.no_grad"
  ],
  "type": "function"
 },
 "torch.jit._builtins._is_special_functional_bound_op": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._builtins._register_builtin": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._freeze": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.jit._freeze.freeze": {
  "lineno": 13,
  "symbols_in_volume": [
   "torch._C._freeze_module",
   "torch.jit._script.RecursiveScriptModule",
   "torch.jit._script.RecursiveScriptModule._finalize_scriptmodule",
   "torch.jit._script.ScriptModule",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.jit._fuser": {
  "lineno": null,
  "symbols_in_volume": [
   "torch._C._last_executed_optimized_graph"
  ],
  "type": "module"
 },
 "torch.jit._fuser._graph_for": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._fuser.fuser": {
  "lineno": 18,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "torch._C._jit_can_fuse_on_cpu",
   "torch._C._jit_can_fuse_on_gpu",
   "torch._C._jit_nvfuser_enabled",
   "torch._C._jit_override_can_fuse_on_cpu",
   "torch._C._jit_override_can_fuse_on_gpu",
   "torch._C._jit_set_nvfuser_enabled",
   "torch._C._jit_set_profiling_executor",
   "torch._C._jit_set_profiling_mode",
   "torch._C._jit_set_texpr_fuser_enabled",
   "torch._C._jit_texpr_fuser_enabled"
  ],
  "type": "function"
 },
 "torch.jit._fuser.optimized_execution": {
  "lineno": 5,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "torch._C._get_graph_executor_optimize",
   "torch._C._set_graph_executor_optimize"
  ],
  "type": "function"
 },
 "torch.jit._logging": {
  "lineno": null,
  "symbols_in_volume": [
   "torch._C.AggregationType",
   "torch._C.LockingLogger",
   "torch._C.NoopLogger",
   "torch._C._logging_set_logger",
   "torch.ops.prim.AddStatValue",
   "torch.ops.prim.TimePoint"
  ],
  "type": "module"
 },
 "torch.jit._pickle": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.jit._pickle.build_boollist": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._pickle.build_doublelist": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._pickle.build_intlist": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._pickle.build_tensor_from_id": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._pickle.build_tensorlist": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._pickle.restore_type_tag": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._recursive": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple",
   "torch.device",
   "torch.dtype",
   "torch.layout"
  ],
  "type": "module"
 },
 "torch.jit._recursive.ConcreteTypeStore": {
  "lineno": 261,
  "symbols_in_volume": [
   "torch._C.ConcreteModuleType",
   "torch.nn.Module",
   "typing.Dict",
   "typing.List",
   "typing.Set",
   "typing.Type"
  ],
  "type": "class"
 },
 "torch.jit._recursive.ConcreteTypeStore.__init__": {
  "lineno": 265,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._recursive.ConcreteTypeStore.get_or_create_concrete_type": {
  "lineno": 271,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._recursive.SourceContext": {
  "lineno": 89,
  "symbols_in_volume": [
   "torch._C._jit_tree_views.SourceRangeFactory"
  ],
  "type": "class"
 },
 "torch.jit._recursive.SourceContext.__init__": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._recursive._check_no_signature": {
  "lineno": 520,
  "symbols_in_volume": [
   "inspect.ismethod",
   "torch._jit_internal._qualified_name",
   "torch._jit_internal.fake_range",
   "torch.jit.annotations.get_signature"
  ],
  "type": "function"
 },
 "torch.jit._recursive._get_valid_constant": {
  "lineno": 74,
  "symbols_in_volume": [
   "textwrap.dedent",
   "torch.typename"
  ],
  "type": "function"
 },
 "torch.jit._recursive.add_python_attr_to_scripted_model": {
  "lineno": 483,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._recursive.check_module_initialized": {
  "lineno": 538,
  "symbols_in_volume": [
   "torch.nn.Module",
   "torch.typename"
  ],
  "type": "function"
 },
 "torch.jit._recursive.compile_unbound_method": {
  "lineno": 673,
  "symbols_in_volume": [
   "torch._jit_internal._disable_emit_hooks",
   "torch._jit_internal.is_ignored_fn"
  ],
  "type": "function"
 },
 "torch.jit._recursive.create_methods_and_properties_from_stubs": {
  "lineno": 296,
  "symbols_in_volume": [
   "torch.jit.frontend.get_default_args"
  ],
  "type": "function"
 },
 "torch.jit._recursive.create_script_module": {
  "lineno": 337,
  "symbols_in_volume": [
   "torch.jit.RecursiveScriptModule"
  ],
  "type": "function"
 },
 "torch.jit._recursive.create_script_module_impl": {
  "lineno": 354,
  "symbols_in_volume": [
   "functools.wraps",
   "torch._C._create_module_with_type",
   "torch._C._run_emit_module_hook",
   "torch._jit_internal.FunctionModifiers.COPY_TO_SCRIPT_WRAPPER",
   "torch._jit_internal.get_torchscript_modifier",
   "torch.jit.RecursiveScriptModule._construct",
   "torch.nn.ModuleDict",
   "torch.nn.ModuleList",
   "torch.nn.Sequential"
  ],
  "type": "function"
 },
 "torch.jit._recursive.create_script_module_impl.init_fn": {
  "lineno": 367,
  "symbols_in_volume": [
   "inspect.ismethod",
   "torch._C.InterfaceType",
   "torch._jit_internal.is_ignored_fn",
   "torch.jit.Attribute",
   "torch.jit.ScriptModule",
   "torch.nn.Module"
  ],
  "type": "function"
 },
 "torch.jit._recursive.get_module_concrete_type": {
  "lineno": 307,
  "symbols_in_volume": [
   "torch.jit.ScriptModule",
   "torch.nn.Module"
  ],
  "type": "function"
 },
 "torch.jit._recursive.get_overload_annotations": {
  "lineno": 487,
  "symbols_in_volume": [
   "torch._jit_internal._get_overloaded_methods"
  ],
  "type": "function"
 },
 "torch.jit._recursive.get_overload_name_mapping": {
  "lineno": 507,
  "symbols_in_volume": [
   "typing.Dict",
   "typing.List"
  ],
  "type": "function"
 },
 "torch.jit._recursive.get_property_stubs": {
  "lineno": 595,
  "symbols_in_volume": [
   "torch._jit_internal.createResolutionCallbackFromClosure",
   "torch.jit.frontend.get_class_properties"
  ],
  "type": "function"
 },
 "torch.jit._recursive.infer_concrete_type_builder": {
  "lineno": 94,
  "symbols_in_volume": [
   "inspect.isfunction",
   "torch.Tensor",
   "torch._C.ConcreteModuleType.from_jit_type",
   "torch._C.ConcreteModuleTypeBuilder",
   "torch._C._jit_try_infer_type",
   "torch._jit_internal.is_final",
   "torch.jit.ScriptFunction",
   "torch.jit._builtins._find_builtin",
   "torch.jit.script",
   "torch.nn.ModuleDict",
   "torch.nn.ModuleList",
   "torch.nn.Sequential",
   "torch.typename",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.jit._recursive.infer_concrete_type_builder.infer_type": {
  "lineno": 109,
  "symbols_in_volume": [
   "torch._C._jit_try_infer_type",
   "torch._jit_internal.fake_range",
   "torch.jit.Attribute",
   "torch.jit.annotations.ann_to_type",
   "torch.nn.Module.__annotations__"
  ],
  "type": "function"
 },
 "torch.jit._recursive.infer_methods_to_compile": {
  "lineno": 544,
  "symbols_in_volume": [
   "torch._jit_internal.FunctionModifiers.EXPORT",
   "torch._jit_internal.get_torchscript_modifier",
   "torch._jit_internal.is_ignored_fn",
   "torch._six.get_function_from_type",
   "torch.nn.Module",
   "typing.List",
   "typing.Set"
  ],
  "type": "function"
 },
 "torch.jit._recursive.infer_methods_to_compile.ignore_overloaded": {
  "lineno": 574,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._recursive.interface_script": {
  "lineno": 616,
  "symbols_in_volume": [
   "torch.jit.ScriptModule"
  ],
  "type": "function"
 },
 "torch.jit._recursive.interface_script.infer_interface_methods_to_compile": {
  "lineno": 630,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._recursive.lazy_bind": {
  "lineno": 683,
  "symbols_in_volume": [
   "torch._jit_internal.copy_torchscript_modifier"
  ],
  "type": "function"
 },
 "torch.jit._recursive.lazy_bind.lazy_binding_method": {
  "lineno": 690,
  "symbols_in_volume": [
   "torch._six.bind_method",
   "torch.jit.RecursiveScriptModule",
   "torch.jit.RecursiveScriptModule._construct"
  ],
  "type": "function"
 },
 "torch.jit._recursive.lazy_bind.lazy_binding_method.init_fn": {
  "lineno": 691,
  "symbols_in_volume": [
   "torch._jit_internal.is_ignored_fn"
  ],
  "type": "function"
 },
 "torch.jit._recursive.make_stub": {
  "lineno": 35,
  "symbols_in_volume": [
   "torch._jit_internal.createResolutionCallbackFromClosure",
   "torch.jit.frontend.get_jit_def"
  ],
  "type": "function"
 },
 "torch.jit._recursive.make_stub_from_method": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._recursive.make_stubs_for_overloads": {
  "lineno": 526,
  "symbols_in_volume": [
   "torch._C._replace_overloaded_method_decl",
   "torch._jit_internal.createResolutionCallbackFromClosure",
   "torch.jit.frontend.get_jit_def"
  ],
  "type": "function"
 },
 "torch.jit._recursive.make_stubs_from_exported_methods": {
  "lineno": 55,
  "symbols_in_volume": [
   "torch._jit_internal.FunctionModifiers.EXPORT",
   "torch._jit_internal.get_torchscript_modifier"
  ],
  "type": "function"
 },
 "torch.jit._recursive.script_model_defines_attr": {
  "lineno": 474,
  "symbols_in_volume": [
   "torch._six.get_function_from_type",
   "torch.jit.RecursiveScriptModule"
  ],
  "type": "function"
 },
 "torch.jit._recursive.try_compile_fn": {
  "lineno": 642,
  "symbols_in_volume": [
   "inspect.isfunction",
   "inspect.ismethod",
   "torch._jit_internal.createResolutionCallbackFromClosure",
   "torch._jit_internal.is_ignored_fn",
   "torch.jit.script",
   "torch.nn.Module"
  ],
  "type": "function"
 },
 "torch.jit._recursive.wrap_cpp_module": {
  "lineno": 663,
  "symbols_in_volume": [
   "torch.jit.RecursiveScriptModule._construct"
  ],
  "type": "function"
 },
 "torch.jit._recursive.wrap_cpp_module.init_fn": {
  "lineno": 667,
  "symbols_in_volume": [
   "torch._C.ConcreteModuleType.from_jit_type",
   "torch._C.ModuleDict"
  ],
  "type": "function"
 },
 "torch.jit._script": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple",
   "torch._C.ScriptFunction",
   "torch._C.ScriptFunction.graph_for",
   "torch._C.ScriptMethod.graph_for",
   "torch._jit_internal.is_scripting",
   "torch.jit._builtins._register_builtin",
   "torch.jit._fuser._graph_for",
   "torch.jit._state._enabled",
   "torch.nn.Module",
   "torch.utils.set_module"
  ],
  "type": "module"
 },
 "torch.jit._script.Attribute": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script.CompilationUnit": {
  "lineno": 1059,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.jit._script.CompilationUnit.__getattr__": {
  "lineno": 1070,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script.CompilationUnit.__init__": {
  "lineno": 1060,
  "symbols_in_volume": [
   "torch._C.CompilationUnit"
  ],
  "type": "function"
 },
 "torch.jit._script.CompilationUnit.define": {
  "lineno": 1065,
  "symbols_in_volume": [
   "torch._jit_internal.createResolutionCallbackFromFrame"
  ],
  "type": "function"
 },
 "torch.jit._script.ConstMap": {
  "lineno": 256,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.jit._script.ConstMap.__getattr__": {
  "lineno": 260,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script.ConstMap.__init__": {
  "lineno": 257,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script.OrderedDictWrapper": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.jit._script.OrderedDictWrapper.__contains__": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script.OrderedDictWrapper.__delitem__": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script.OrderedDictWrapper.__getitem__": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script.OrderedDictWrapper.__init__": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script.OrderedDictWrapper.__len__": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script.OrderedDictWrapper.__setitem__": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script.OrderedDictWrapper.items": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script.OrderedDictWrapper.keys": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script.OrderedDictWrapper.values": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script.OrderedModuleDict": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.jit._script.OrderedModuleDict.__contains__": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script.OrderedModuleDict.__getitem__": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script.OrderedModuleDict.__init__": {
  "lineno": 120,
  "symbols_in_volume": [
   "torch._C.ModuleDict"
  ],
  "type": "function"
 },
 "torch.jit._script.OrderedModuleDict.__setitem__": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script.OrderedModuleDict.items": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script.RecursiveScriptModule": {
  "lineno": 740,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.jit._script.RecursiveScriptModule.__bool__": {
  "lineno": 639,
  "symbols_in_volume": [
   "torch._six.get_function_from_type"
  ],
  "type": "function"
 },
 "torch.jit._script.RecursiveScriptModule.__contains__": {
  "lineno": 623,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script.RecursiveScriptModule.__copy__": {
  "lineno": 596,
  "symbols_in_volume": [
   "copy.copy",
   "torch.jit._recursive.wrap_cpp_module"
  ],
  "type": "function"
 },
 "torch.jit._script.RecursiveScriptModule.__deepcopy__": {
  "lineno": 599,
  "symbols_in_volume": [
   "copy.deepcopy",
   "torch.jit._recursive.wrap_cpp_module"
  ],
  "type": "function"
 },
 "torch.jit._script.RecursiveScriptModule.__dir__": {
  "lineno": 628,
  "symbols_in_volume": [
   "torch._six.get_function_from_type"
  ],
  "type": "function"
 },
 "torch.jit._script.RecursiveScriptModule.__getattr__": {
  "lineno": 536,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script.RecursiveScriptModule.__getitem__": {
  "lineno": 617,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script.RecursiveScriptModule.__getstate__": {
  "lineno": 589,
  "symbols_in_volume": [
   "pickle.PickleError"
  ],
  "type": "function"
 },
 "torch.jit._script.RecursiveScriptModule.__init__": {
  "lineno": 741,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script.RecursiveScriptModule.__iter__": {
  "lineno": 614,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script.RecursiveScriptModule.__len__": {
  "lineno": 620,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script.RecursiveScriptModule.__setattr__": {
  "lineno": 560,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script.RecursiveScriptModule._construct": {
  "lineno": 373,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script.RecursiveScriptModule._finalize_scriptmodule": {
  "lineno": 395,
  "symbols_in_volume": [
   "torch._C.BufferDict",
   "torch._C.ParameterDict"
  ],
  "type": "function"
 },
 "torch.jit._script.RecursiveScriptModule._reconstruct": {
  "lineno": 408,
  "symbols_in_volume": [
   "torch._C.BufferDict",
   "torch._C.ConcreteModuleType.from_jit_type",
   "torch._C.ModuleDict",
   "torch._C.ParameterDict",
   "torch._C.ScriptMethod",
   "torch.jit._recursive.wrap_cpp_module"
  ],
  "type": "function"
 },
 "torch.jit._script.RecursiveScriptModule._replicate_for_data_parallel": {
  "lineno": 647,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script.RecursiveScriptModule._replicate_for_data_parallel.init_fn": {
  "lineno": 650,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script.RecursiveScriptModule._save_for_lite_interpreter": {
  "lineno": 489,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script.RecursiveScriptModule._save_to_buffer_for_lite_interpreter": {
  "lineno": 503,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script.RecursiveScriptModule.code": {
  "lineno": 457,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script.RecursiveScriptModule.code_with_constants": {
  "lineno": 466,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script.RecursiveScriptModule.define": {
  "lineno": 524,
  "symbols_in_volume": [
   "torch._jit_internal.createResolutionCallbackFromFrame"
  ],
  "type": "function"
 },
 "torch.jit._script.RecursiveScriptModule.extra_repr": {
  "lineno": 512,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script.RecursiveScriptModule.forward_magic_method": {
  "lineno": 606,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script.RecursiveScriptModule.get_debug_state": {
  "lineno": 509,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script.RecursiveScriptModule.graph": {
  "lineno": 440,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script.RecursiveScriptModule.graph_for": {
  "lineno": 515,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script.RecursiveScriptModule.inlined_graph": {
  "lineno": 448,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script.RecursiveScriptModule.original_name": {
  "lineno": 518,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script.RecursiveScriptModule.save": {
  "lineno": 481,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script.RecursiveScriptModule.save_to_buffer": {
  "lineno": 506,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script.ScriptMeta": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.jit._script.ScriptMeta.__init__": {
  "lineno": 169,
  "symbols_in_volume": [
   "torch.jit._recursive.ScriptMethodStub",
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "torch.jit._script.ScriptMeta.__init__.init_then_script": {
  "lineno": 193,
  "symbols_in_volume": [
   "functools.wraps",
   "torch.jit._recursive.create_script_module"
  ],
  "type": "function"
 },
 "torch.jit._script.ScriptMeta.__init__.init_then_script.make_stubs": {
  "lineno": 201,
  "symbols_in_volume": [
   "torch.jit._recursive.infer_methods_to_compile"
  ],
  "type": "function"
 },
 "torch.jit._script.ScriptModule": {
  "lineno": 736,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.jit._script.ScriptModule.__getattr__": {
  "lineno": 286,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script.ScriptModule.__init__": {
  "lineno": 737,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script.ScriptModule.__setattr__": {
  "lineno": 291,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script.ScriptModule._replicate_for_data_parallel": {
  "lineno": 333,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script.ScriptModule.define": {
  "lineno": 311,
  "symbols_in_volume": [
   "torch._C._parse_source_def",
   "torch._jit_internal.createResolutionCallbackFromFrame",
   "torch.jit._recursive.ScriptMethodStub"
  ],
  "type": "function"
 },
 "torch.jit._script.ScriptWarning": {
  "lineno": 232,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.jit._script._CachedForward": {
  "lineno": 227,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.jit._script._CachedForward.__get__": {
  "lineno": 228,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script._check_directly_compile_overloaded": {
  "lineno": 1009,
  "symbols_in_volume": [
   "torch._jit_internal._get_fn_overloads",
   "torch._jit_internal._qualified_name",
   "torch.jit._state._try_get_jit_cached_overloads"
  ],
  "type": "function"
 },
 "torch.jit._script._check_overload_defaults": {
  "lineno": 952,
  "symbols_in_volume": [
   "torch.jit.frontend.FrontendError"
  ],
  "type": "function"
 },
 "torch.jit._script._compile_and_register_class": {
  "lineno": 61,
  "symbols_in_volume": [
   "torch._C._jit_script_class_compile",
   "torch.jit._state._add_script_class",
   "torch.jit.frontend.get_default_args_for_class",
   "torch.jit.frontend.get_jit_class_def"
  ],
  "type": "function"
 },
 "torch.jit._script._compile_function_with_overload": {
  "lineno": 963,
  "symbols_in_volume": [
   "inspect.ismethod",
   "torch._C._jit_script_compile_overload",
   "torch._jit_internal.createResolutionCallbackFromClosure",
   "torch.jit.annotations.get_signature",
   "torch.jit.frontend.get_default_args",
   "torch.jit.frontend.get_jit_def"
  ],
  "type": "function"
 },
 "torch.jit._script._get_methods": {
  "lineno": 673,
  "symbols_in_volume": [
   "inspect.getmembers",
   "inspect.isfunction",
   "inspect.ismethod"
  ],
  "type": "function"
 },
 "torch.jit._script._get_overloads": {
  "lineno": 986,
  "symbols_in_volume": [
   "torch._jit_internal._clear_fn_overloads",
   "torch._jit_internal._get_fn_overloads",
   "torch._jit_internal._qualified_name",
   "torch.jit._state._set_jit_overload_cache",
   "torch.jit._state._try_get_jit_cached_overloads"
  ],
  "type": "function"
 },
 "torch.jit._script._is_new_style_class": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script._make_fail": {
  "lineno": 718,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script._make_fail.fail": {
  "lineno": 719,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script._recursive_compile_class": {
  "lineno": 1050,
  "symbols_in_volume": [
   "torch._C.CallStack",
   "torch._jit_internal._qualified_name",
   "torch._jit_internal.createResolutionCallbackForClassMethods"
  ],
  "type": "function"
 },
 "torch.jit._script._unwrap_optional": {
  "lineno": 1077,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._script.interface": {
  "lineno": 1019,
  "symbols_in_volume": [
   "inspect.isclass",
   "torch._C._jit_script_interface_compile",
   "torch._jit_internal._qualified_name",
   "torch._jit_internal.createResolutionCallbackFromFrame",
   "torch.jit.frontend.get_jit_class_def",
   "torch.nn.Module"
  ],
  "type": "function"
 },
 "torch.jit._script.script": {
  "lineno": 745,
  "symbols_in_volume": [
   "inspect.isclass",
   "torch._C._jit_script_compile",
   "torch._jit_internal._qualified_name",
   "torch._jit_internal.createResolutionCallbackFromClosure",
   "torch._jit_internal.createResolutionCallbackFromFrame",
   "torch.jit._recursive.create_script_module",
   "torch.jit._recursive.infer_methods_to_compile",
   "torch.jit._state._enabled",
   "torch.jit._state._set_jit_function_cache",
   "torch.jit._state._try_get_jit_cached_function",
   "torch.jit.frontend.get_default_args",
   "torch.jit.frontend.get_jit_def",
   "torch.nn.Module",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.jit._script.script_method": {
  "lineno": 236,
  "symbols_in_volume": [
   "torch._jit_internal.createResolutionCallbackFromFrame",
   "torch.jit._recursive.ScriptMethodStub",
   "torch.jit._state._enabled",
   "torch.jit.frontend.get_jit_def"
  ],
  "type": "function"
 },
 "torch.jit._serialization": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.jit._serialization.load": {
  "lineno": 87,
  "symbols_in_volume": [
   "os.path.exists",
   "os.path.isdir",
   "pathlib.Path",
   "torch._C.CompilationUnit",
   "torch._C.import_ir_module",
   "torch._C.import_ir_module_from_buffer",
   "torch._six.string_classes",
   "torch.jit._recursive.wrap_cpp_module"
  ],
  "type": "function"
 },
 "torch.jit._serialization.save": {
  "lineno": 19,
  "symbols_in_volume": [
   "pathlib.Path"
  ],
  "type": "function"
 },
 "torch.jit._serialization.validate_map_location": {
  "lineno": 171,
  "symbols_in_volume": [
   "torch.device",
   "torch.serialization.validate_cuda_device"
  ],
  "type": "function"
 },
 "torch.jit._state": {
  "lineno": null,
  "symbols_in_volume": [
   "torch._C.CompilationUnit",
   "weakref.WeakKeyDictionary"
  ],
  "type": "module"
 },
 "torch.jit._state.EnabledProxy": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.jit._state.EnabledProxy.__bool__": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._state.EnabledProxy.__init__": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._state.EnabledProxy.parse_env": {
  "lineno": 23,
  "symbols_in_volume": [
   "os.environ.get"
  ],
  "type": "function"
 },
 "torch.jit._state._add_script_class": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._state._get_script_class": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._state._set_jit_function_cache": {
  "lineno": 105,
  "symbols_in_volume": [
   "torch.jit.ScriptFunction"
  ],
  "type": "function"
 },
 "torch.jit._state._set_jit_overload_cache": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._state._try_get_jit_cached_function": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._state._try_get_jit_cached_overloads": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._state.disable": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._state.enable": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._trace": {
  "lineno": null,
  "symbols_in_volume": [
   "os.environ.get",
   "torch._C._jit_flatten",
   "torch._C._jit_unflatten",
   "torch._C._tracer_warn_use_python",
   "typing.Any",
   "typing.Dict",
   "typing.Optional"
  ],
  "type": "module"
 },
 "torch.jit._trace.ONNXTracedModule": {
  "lineno": 73,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.jit._trace.ONNXTracedModule.__init__": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._trace.ONNXTracedModule.forward": {
  "lineno": 92,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._C._create_graph_by_tracing"
  ],
  "type": "function"
 },
 "torch.jit._trace.ONNXTracedModule.forward.wrapper": {
  "lineno": 102,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.preserve_format",
   "typing.List"
  ],
  "type": "function"
 },
 "torch.jit._trace.TopLevelTracedModule": {
  "lineno": 1072,
  "symbols_in_volume": [
   "torch.jit._script._CachedForward"
  ],
  "type": "class"
 },
 "torch.jit._trace.TopLevelTracedModule._reconstruct": {
  "lineno": 1075,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._trace.TracedModule": {
  "lineno": 982,
  "symbols_in_volume": [
   "torch.jit._script.ScriptModule"
  ],
  "type": "class"
 },
 "torch.jit._trace.TracedModule.__getattr__": {
  "lineno": 1055,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._trace.TracedModule.__init__": {
  "lineno": 985,
  "symbols_in_volume": [
   "torch._C._jit_is_script_object",
   "torch._jit_internal._qualified_name",
   "torch.jit._recursive.create_script_module",
   "torch.nn.Module"
  ],
  "type": "function"
 },
 "torch.jit._trace.TracedModule.__init__.QualnameWrapper": {
  "lineno": 998,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.jit._trace.TracedModule.__init__.check_unique": {
  "lineno": 1007,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._trace.TracedModule.__setattr__": {
  "lineno": 1060,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._trace.TracedModule._get_name": {
  "lineno": 1065,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._trace.TracedModule.extra_repr": {
  "lineno": 1068,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._trace.TracedModule.forward": {
  "lineno": 1052,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._trace.TracerWarning": {
  "lineno": 522,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.jit._trace.TracerWarning.ignore_lib_warnings": {
  "lineno": 523,
  "symbols_in_volume": [
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "torch.jit._trace.TracingCheckError": {
  "lineno": 288,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.jit._trace.TracingCheckError.__init__": {
  "lineno": 289,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._trace._check_trace": {
  "lineno": 307,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._C.CompilationUnit",
   "torch.jit.trace",
   "torch.jit.trace_module",
   "torch.no_grad"
  ],
  "type": "function"
 },
 "torch.jit._trace._check_trace.compare_outputs": {
  "lineno": 478,
  "symbols_in_volume": [
   "torch.testing._get_default_tolerance",
   "torch.testing.assert_allclose",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.jit._trace._check_trace.graph_diagnostic_info": {
  "lineno": 352,
  "symbols_in_volume": [
   "difflib.ndiff",
   "re.sub",
   "torch._C._jit_pass_canonicalize",
   "torch._C._jit_pass_erase_shape_information",
   "torch._C._jit_pass_inline",
   "torch.testing.assert_allclose"
  ],
  "type": "function"
 },
 "torch.jit._trace._check_trace.maybe_warn_nondeterministic": {
  "lineno": 455,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.jit._trace._check_trace.run_mod_and_filter_tensor_outputs": {
  "lineno": 439,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.jit._trace._check_trace.wrap_retval": {
  "lineno": 436,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._trace._clone_inputs": {
  "lineno": 141,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.autograd.function._nested_map"
  ],
  "type": "function"
 },
 "torch.jit._trace._clone_inputs.clone_input": {
  "lineno": 142,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.preserve_format"
  ],
  "type": "function"
 },
 "torch.jit._trace._create_interpreter_name_lookup_fn": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._trace._create_interpreter_name_lookup_fn._get_interpreter_name_for_var": {
  "lineno": 32,
  "symbols_in_volume": [
   "inspect.currentframe",
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.jit._trace._get_trace_graph": {
  "lineno": 1111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._trace._script_if_tracing": {
  "lineno": 1085,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._trace._script_if_tracing.wrapper": {
  "lineno": 1096,
  "symbols_in_volume": [
   "functools.wraps",
   "torch.jit._script.script"
  ],
  "type": "function"
 },
 "torch.jit._trace._time": {
  "lineno": 169,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "torch.cuda.Event",
   "torch.cuda.current_stream",
   "torch.cuda.is_available"
  ],
  "type": "function"
 },
 "torch.jit._trace._unique_state_dict": {
  "lineno": 55,
  "symbols_in_volume": [
   "typing.Set"
  ],
  "type": "function"
 },
 "torch.jit._trace._verify_equal": {
  "lineno": 278,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._trace.indent": {
  "lineno": 284,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._trace.is_tracing": {
  "lineno": 974,
  "symbols_in_volume": [
   "torch._C._is_tracing"
  ],
  "type": "function"
 },
 "torch.jit._trace.make_module": {
  "lineno": 546,
  "symbols_in_volume": [
   "torch._jit_internal.module_has_exports",
   "torch.jit._recursive.create_script_module",
   "torch.jit._recursive.make_stubs_from_exported_methods",
   "torch.jit._script.ScriptModule"
  ],
  "type": "function"
 },
 "torch.jit._trace.make_tuple": {
  "lineno": 537,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.jit._trace.trace": {
  "lineno": 570,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._C._create_function_from_trace",
   "torch._jit_internal._qualified_name",
   "torch.jit.ScriptModule",
   "torch.jit._state._enabled",
   "torch.jit._state._python_cu",
   "torch.nn.Module",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.jit._trace.trace_module": {
  "lineno": 813,
  "symbols_in_volume": [
   "torch.jit._state._enabled",
   "torch.jit._state._python_cu",
   "torch.jit._trace._trace_module_map",
   "torch.nn.Module",
   "typing.Any",
   "typing.Dict",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.jit._trace.trace_module.register_submods": {
  "lineno": 918,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit._trace.verify": {
  "lineno": 186,
  "symbols_in_volume": [
   "copy.deepcopy",
   "torch._C.CompiledFunction",
   "torch.nn.Module",
   "torch.random.fork_rng",
   "torch.sum"
  ],
  "type": "function"
 },
 "torch.jit._trace.verify.run_fwd_bwd": {
  "lineno": 233,
  "symbols_in_volume": [
   "torch.autograd.grad",
   "torch.preserve_format",
   "torch.sum"
  ],
  "type": "function"
 },
 "torch.jit._trace.wrap_check_inputs": {
  "lineno": 563,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit.annotate": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit.annotations": {
  "lineno": null,
  "symbols_in_volume": [
   "torch.distributed.rpc.is_available"
  ],
  "type": "module"
 },
 "torch.jit.annotations.EvalEnv": {
  "lineno": 38,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "class"
 },
 "torch.jit.annotations.EvalEnv.__getitem__": {
  "lineno": 55,
  "symbols_in_volume": [
   "torch._six.builtins"
  ],
  "type": "function"
 },
 "torch.jit.annotations.EvalEnv.__init__": {
  "lineno": 50,
  "symbols_in_volume": [
   "torch.distributed.rpc.is_available"
  ],
  "type": "function"
 },
 "torch.jit.annotations.Module": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.jit.annotations.Module.__getattr__": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit.annotations.Module.__init__": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit.annotations.ann_to_type": {
  "lineno": 339,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit.annotations.check_fn": {
  "lineno": 121,
  "symbols_in_volume": [
   "ast.ClassDef",
   "ast.FunctionDef",
   "ast.parse",
   "textwrap.dedent",
   "torch._utils_internal.get_source_lines_and_file",
   "torch.jit.frontend.FrontendError"
  ],
  "type": "function"
 },
 "torch.jit.annotations.get_enum_value_type": {
  "lineno": 258,
  "symbols_in_volume": [
   "enum.Enum",
   "torch._C.unify_type_list",
   "typing.Type"
  ],
  "type": "function"
 },
 "torch.jit.annotations.get_param_names": {
  "lineno": 106,
  "symbols_in_volume": [
   "inspect.getfullargspec",
   "inspect.unwrap"
  ],
  "type": "function"
 },
 "torch.jit.annotations.get_signature": {
  "lineno": 62,
  "symbols_in_volume": [
   "textwrap.dedent",
   "torch._utils_internal.get_source_lines_and_file"
  ],
  "type": "function"
 },
 "torch.jit.annotations.get_type_line": {
  "lineno": 164,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "function"
 },
 "torch.jit.annotations.get_type_line.get_parameter_type": {
  "lineno": 207,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit.annotations.is_function_or_method": {
  "lineno": 88,
  "symbols_in_volume": [
   "inspect.isfunction",
   "inspect.ismethod"
  ],
  "type": "function"
 },
 "torch.jit.annotations.is_vararg": {
  "lineno": 94,
  "symbols_in_volume": [
   "inspect.getfullargspec"
  ],
  "type": "function"
 },
 "torch.jit.annotations.parse_type_line": {
  "lineno": 138,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit.annotations.split_type_line": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit.annotations.try_ann_to_type": {
  "lineno": 273,
  "symbols_in_volume": [
   "enum.Enum",
   "inspect.isclass",
   "torch.Tensor",
   "torch._C.AnyType.get",
   "torch._C.BoolType.get",
   "torch._C.ClassType",
   "torch._C.DeviceObjType.get",
   "torch._C.DictType",
   "torch._C.EnumType",
   "torch._C.FloatType.get",
   "torch._C.FutureType",
   "torch._C.IntType.get",
   "torch._C.InterfaceType",
   "torch._C.ListType",
   "torch._C.NoneType.get",
   "torch._C.OptionalType",
   "torch._C.RRefType",
   "torch._C.StringType.get",
   "torch._C.TensorType.get",
   "torch._C.TupleType",
   "torch._C._resolve_type_from_object",
   "torch._jit_internal.can_compile_class",
   "torch.device",
   "torch.distributed.rpc.is_available",
   "torch.dtype",
   "torch.jit._script._recursive_compile_class",
   "torch.nn.Module"
  ],
  "type": "function"
 },
 "torch.jit.annotations.try_ann_to_type.fake_rcb": {
  "lineno": 334,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit.annotations.try_real_annotations": {
  "lineno": 235,
  "symbols_in_volume": [
   "inspect.signature"
  ],
  "type": "function"
 },
 "torch.jit.annotations.try_real_annotations.as_ann": {
  "lineno": 246,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit.export_opnames": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit.frontend": {
  "lineno": null,
  "symbols_in_volume": [
   "ast.AnnAssign",
   "ast.Assert",
   "ast.AsyncFor",
   "ast.AsyncFunctionDef",
   "ast.AsyncWith",
   "ast.Break",
   "ast.ClassDef",
   "ast.Continue",
   "ast.Delete",
   "ast.For",
   "ast.FunctionDef",
   "ast.Global",
   "ast.Import",
   "ast.ImportFrom",
   "ast.Nonlocal",
   "ast.Raise",
   "ast.Try",
   "ast.With",
   "string.ascii_lowercase",
   "string.ascii_uppercase",
   "string.digits",
   "sys.version_info"
  ],
  "type": "module"
 },
 "torch.jit.frontend.Builder": {
  "lineno": 224,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.jit.frontend.Builder.__call__": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit.frontend.ExprBuilder": {
  "lineno": 472,
  "symbols_in_volume": [
   "ast.Add",
   "ast.And",
   "ast.BitAnd",
   "ast.BitOr",
   "ast.BitXor",
   "ast.Div",
   "ast.Eq",
   "ast.FloorDiv",
   "ast.Gt",
   "ast.GtE",
   "ast.In",
   "ast.Invert",
   "ast.Is",
   "ast.IsNot",
   "ast.LShift",
   "ast.Lt",
   "ast.LtE",
   "ast.MatMult",
   "ast.Mod",
   "ast.Mult",
   "ast.Not",
   "ast.NotEq",
   "ast.NotIn",
   "ast.Or",
   "ast.Pow",
   "ast.RShift",
   "ast.Sub",
   "ast.USub"
  ],
  "type": "class"
 },
 "torch.jit.frontend.ExprBuilder.build_Attribute": {
  "lineno": 514,
  "symbols_in_volume": [
   "string.whitespace",
   "torch._C._jit_tree_views.Ident",
   "torch._C._jit_tree_views.Select"
  ],
  "type": "function"
 },
 "torch.jit.frontend.ExprBuilder.build_Attribute.get_char": {
  "lineno": 521,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit.frontend.ExprBuilder.build_BinOp": {
  "lineno": 578,
  "symbols_in_volume": [
   "ast.Div",
   "torch._C._jit_tree_views.BinOp"
  ],
  "type": "function"
 },
 "torch.jit.frontend.ExprBuilder.build_BoolOp": {
  "lineno": 605,
  "symbols_in_volume": [
   "torch._C._jit_tree_views.BinOp"
  ],
  "type": "function"
 },
 "torch.jit.frontend.ExprBuilder.build_Call": {
  "lineno": 531,
  "symbols_in_volume": [
   "torch._C._jit_tree_views.Apply",
   "torch._C._jit_tree_views.Attribute",
   "torch._C._jit_tree_views.Ident",
   "torch._C._jit_tree_views.Starred"
  ],
  "type": "function"
 },
 "torch.jit.frontend.ExprBuilder.build_Compare": {
  "lineno": 626,
  "symbols_in_volume": [
   "ast.NotIn",
   "torch._C._jit_tree_views.BinOp",
   "torch._C._jit_tree_views.UnaryOp"
  ],
  "type": "function"
 },
 "torch.jit.frontend.ExprBuilder.build_Constant": {
  "lineno": 732,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit.frontend.ExprBuilder.build_Dict": {
  "lineno": 721,
  "symbols_in_volume": [
   "torch._C._jit_tree_views.DictLiteral"
  ],
  "type": "function"
 },
 "torch.jit.frontend.ExprBuilder.build_Ellipsis": {
  "lineno": 547,
  "symbols_in_volume": [
   "torch._C._jit_tree_views.Dots"
  ],
  "type": "function"
 },
 "torch.jit.frontend.ExprBuilder.build_IfExp": {
  "lineno": 620,
  "symbols_in_volume": [
   "torch._C._jit_tree_views.TernaryIf"
  ],
  "type": "function"
 },
 "torch.jit.frontend.ExprBuilder.build_JoinedStr": {
  "lineno": 755,
  "symbols_in_volume": [
   "ast.FormattedValue",
   "ast.Str",
   "torch._C._jit_tree_views.Apply",
   "torch._C._jit_tree_views.Ident",
   "torch._C._jit_tree_views.Select",
   "torch._C._jit_tree_views.StringLiteral"
  ],
  "type": "function"
 },
 "torch.jit.frontend.ExprBuilder.build_List": {
  "lineno": 711,
  "symbols_in_volume": [
   "torch._C._jit_tree_views.ListLiteral"
  ],
  "type": "function"
 },
 "torch.jit.frontend.ExprBuilder.build_ListComp": {
  "lineno": 776,
  "symbols_in_volume": [
   "torch._C._jit_tree_views.ListComp"
  ],
  "type": "function"
 },
 "torch.jit.frontend.ExprBuilder.build_Name": {
  "lineno": 552,
  "symbols_in_volume": [
   "torch._C._jit_tree_views.FalseLiteral",
   "torch._C._jit_tree_views.Ident",
   "torch._C._jit_tree_views.NoneLiteral",
   "torch._C._jit_tree_views.TrueLiteral",
   "torch._C._jit_tree_views.Var"
  ],
  "type": "function"
 },
 "torch.jit.frontend.ExprBuilder.build_NameConstant": {
  "lineno": 566,
  "symbols_in_volume": [
   "torch._C._jit_tree_views.FalseLiteral",
   "torch._C._jit_tree_views.NoneLiteral",
   "torch._C._jit_tree_views.TrueLiteral"
  ],
  "type": "function"
 },
 "torch.jit.frontend.ExprBuilder.build_Num": {
  "lineno": 726,
  "symbols_in_volume": [
   "torch._C._jit_tree_views.Const"
  ],
  "type": "function"
 },
 "torch.jit.frontend.ExprBuilder.build_Starred": {
  "lineno": 791,
  "symbols_in_volume": [
   "torch._C._jit_tree_views.Starred"
  ],
  "type": "function"
 },
 "torch.jit.frontend.ExprBuilder.build_Str": {
  "lineno": 749,
  "symbols_in_volume": [
   "torch._C._jit_tree_views.StringLiteral"
  ],
  "type": "function"
 },
 "torch.jit.frontend.ExprBuilder.build_Subscript": {
  "lineno": 651,
  "symbols_in_volume": [
   "ast.ExtSlice",
   "ast.Index",
   "ast.Slice",
   "ast.Tuple",
   "sys.version_info",
   "torch._C._jit_tree_views.Subscript"
  ],
  "type": "function"
 },
 "torch.jit.frontend.ExprBuilder.build_Subscript.build_ExtSlice": {
  "lineno": 667,
  "symbols_in_volume": [
   "ast.Ellipsis",
   "ast.Index",
   "ast.Slice",
   "torch._C._jit_tree_views.Dots"
  ],
  "type": "function"
 },
 "torch.jit.frontend.ExprBuilder.build_Subscript.build_Index": {
  "lineno": 659,
  "symbols_in_volume": [
   "ast.List",
   "ast.Tuple"
  ],
  "type": "function"
 },
 "torch.jit.frontend.ExprBuilder.build_Subscript.build_SliceExpr": {
  "lineno": 653,
  "symbols_in_volume": [
   "torch._C._jit_tree_views.SliceExpr"
  ],
  "type": "function"
 },
 "torch.jit.frontend.ExprBuilder.build_Tuple": {
  "lineno": 716,
  "symbols_in_volume": [
   "torch._C._jit_tree_views.TupleLiteral"
  ],
  "type": "function"
 },
 "torch.jit.frontend.ExprBuilder.build_UnaryOp": {
  "lineno": 595,
  "symbols_in_volume": [
   "torch._C._jit_tree_views.UnaryOp"
  ],
  "type": "function"
 },
 "torch.jit.frontend.FrontendError": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.jit.frontend.FrontendError.__init__": {
  "lineno": 88,
  "symbols_in_volume": [
   "torch._C.ErrorReport"
  ],
  "type": "function"
 },
 "torch.jit.frontend.FrontendError.__str__": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit.frontend.FrontendTypeError": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.jit.frontend.NotSupportedError": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.jit.frontend.StmtBuilder": {
  "lineno": 346,
  "symbols_in_volume": [
   "ast.Add",
   "ast.Div",
   "ast.Mod",
   "ast.Mult",
   "ast.Sub"
  ],
  "type": "class"
 },
 "torch.jit.frontend.StmtBuilder.build_AnnAssign": {
  "lineno": 371,
  "symbols_in_volume": [
   "torch._C._jit_tree_views.Assign"
  ],
  "type": "function"
 },
 "torch.jit.frontend.StmtBuilder.build_Assert": {
  "lineno": 400,
  "symbols_in_volume": [
   "torch._C._jit_tree_views.Assert"
  ],
  "type": "function"
 },
 "torch.jit.frontend.StmtBuilder.build_Assign": {
  "lineno": 365,
  "symbols_in_volume": [
   "torch._C._jit_tree_views.Assign"
  ],
  "type": "function"
 },
 "torch.jit.frontend.StmtBuilder.build_AugAssign": {
  "lineno": 407,
  "symbols_in_volume": [
   "torch._C._jit_tree_views.AugAssign"
  ],
  "type": "function"
 },
 "torch.jit.frontend.StmtBuilder.build_Break": {
  "lineno": 457,
  "symbols_in_volume": [
   "torch._C._jit_tree_views.Break"
  ],
  "type": "function"
 },
 "torch.jit.frontend.StmtBuilder.build_Continue": {
  "lineno": 462,
  "symbols_in_volume": [
   "torch._C._jit_tree_views.Continue"
  ],
  "type": "function"
 },
 "torch.jit.frontend.StmtBuilder.build_Delete": {
  "lineno": 380,
  "symbols_in_volume": [
   "torch._C._jit_tree_views.Delete"
  ],
  "type": "function"
 },
 "torch.jit.frontend.StmtBuilder.build_Expr": {
  "lineno": 355,
  "symbols_in_volume": [
   "torch._C._jit_tree_views.ExprStmt"
  ],
  "type": "function"
 },
 "torch.jit.frontend.StmtBuilder.build_For": {
  "lineno": 430,
  "symbols_in_volume": [
   "torch._C._jit_tree_views.For"
  ],
  "type": "function"
 },
 "torch.jit.frontend.StmtBuilder.build_If": {
  "lineno": 437,
  "symbols_in_volume": [
   "torch._C._jit_tree_views.If"
  ],
  "type": "function"
 },
 "torch.jit.frontend.StmtBuilder.build_Pass": {
  "lineno": 452,
  "symbols_in_volume": [
   "torch._C._jit_tree_views.Pass"
  ],
  "type": "function"
 },
 "torch.jit.frontend.StmtBuilder.build_Print": {
  "lineno": 444,
  "symbols_in_volume": [
   "torch._C._jit_tree_views.Apply",
   "torch._C._jit_tree_views.ExprStmt",
   "torch._C._jit_tree_views.Ident",
   "torch._C._jit_tree_views.Var"
  ],
  "type": "function"
 },
 "torch.jit.frontend.StmtBuilder.build_Raise": {
  "lineno": 394,
  "symbols_in_volume": [
   "torch._C._jit_tree_views.Raise"
  ],
  "type": "function"
 },
 "torch.jit.frontend.StmtBuilder.build_Return": {
  "lineno": 389,
  "symbols_in_volume": [
   "torch._C._jit_tree_views.Return"
  ],
  "type": "function"
 },
 "torch.jit.frontend.StmtBuilder.build_While": {
  "lineno": 420,
  "symbols_in_volume": [
   "torch._C._jit_tree_views.While"
  ],
  "type": "function"
 },
 "torch.jit.frontend.StmtBuilder.build_With": {
  "lineno": 467,
  "symbols_in_volume": [
   "torch._C._jit_tree_views.With"
  ],
  "type": "function"
 },
 "torch.jit.frontend.UnsupportedNodeError": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.jit.frontend.UnsupportedNodeError.__init__": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit.frontend.WithItemBuilder": {
  "lineno": 334,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.jit.frontend.WithItemBuilder.build_withitem": {
  "lineno": 335,
  "symbols_in_volume": [
   "ast.With",
   "torch._C._jit_tree_views.WithItem"
  ],
  "type": "function"
 },
 "torch.jit.frontend.build_class_def": {
  "lineno": 232,
  "symbols_in_volume": [
   "torch._C._jit_tree_views.ClassDef",
   "torch._C._jit_tree_views.Ident",
   "torch._C._jit_tree_views.Stmt"
  ],
  "type": "function"
 },
 "torch.jit.frontend.build_def": {
  "lineno": 238,
  "symbols_in_volume": [
   "torch._C._jit_tree_views.Decl",
   "torch._C._jit_tree_views.Def",
   "torch._C._jit_tree_views.Ident",
   "torch._C.merge_type_from_type_comment",
   "torch._C.parse_type_comment"
  ],
  "type": "function"
 },
 "torch.jit.frontend.build_param": {
  "lineno": 283,
  "symbols_in_volume": [
   "torch._C._jit_tree_views.EmptyTypeAnnotation",
   "torch._C._jit_tree_views.Ident",
   "torch._C._jit_tree_views.Param",
   "torch._C._jit_tree_views.Var"
  ],
  "type": "function"
 },
 "torch.jit.frontend.build_param_list": {
  "lineno": 262,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit.frontend.build_stmts": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit.frontend.build_withitems": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit.frontend.find_before": {
  "lineno": 800,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit.frontend.get_class_properties": {
  "lineno": 131,
  "symbols_in_volume": [
   "inspect.getmembers",
   "torch._C._jit_tree_views.Ident",
   "torch._C._jit_tree_views.Property",
   "torch._jit_internal.should_drop"
  ],
  "type": "function"
 },
 "torch.jit.frontend.get_default_args": {
  "lineno": 296,
  "symbols_in_volume": [
   "inspect.Parameter.empty",
   "inspect.signature"
  ],
  "type": "function"
 },
 "torch.jit.frontend.get_default_args_for_class": {
  "lineno": 308,
  "symbols_in_volume": [
   "inspect.getmembers",
   "inspect.isfunction",
   "inspect.ismethod",
   "torch._jit_internal.is_static_fn"
  ],
  "type": "function"
 },
 "torch.jit.frontend.get_jit_class_def": {
  "lineno": 158,
  "symbols_in_volume": [
   "ast.parse",
   "inspect.getmembers",
   "inspect.isfunction",
   "inspect.ismethod",
   "textwrap.dedent",
   "torch._C.ErrorReport.call_stack",
   "torch._jit_internal.SourceContext",
   "torch._jit_internal.is_static_fn",
   "torch._utils_internal.get_source_lines_and_file"
  ],
  "type": "function"
 },
 "torch.jit.frontend.get_jit_def": {
  "lineno": 182,
  "symbols_in_volume": [
   "ast.FunctionDef",
   "ast.parse",
   "textwrap.dedent",
   "torch._C.ErrorReport.call_stack",
   "torch._jit_internal.SourceContext",
   "torch._jit_internal.should_drop",
   "torch._utils_internal.get_source_lines_and_file",
   "torch.jit.annotations.get_type_line"
  ],
  "type": "function"
 },
 "torch.jit.frontend.is_reserved_name": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit.mobile": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.jit.mobile.LiteScriptModule": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.jit.mobile.LiteScriptModule.__call__": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit.mobile.LiteScriptModule.__init__": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit.mobile.LiteScriptModule.find_method": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit.mobile.LiteScriptModule.forward": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit.mobile.LiteScriptModule.run_method": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit.mobile._load_for_lite_interpreter": {
  "lineno": 8,
  "symbols_in_volume": [
   "os.path.exists",
   "os.path.isdir",
   "pathlib.Path",
   "torch._C._load_for_lite_interpreter",
   "torch._C._load_for_lite_interpreter_from_buffer",
   "torch.jit._serialization.validate_map_location"
  ],
  "type": "function"
 },
 "torch.jit.quantized": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.jit.quantized.QuantizedGRU": {
  "lineno": 431,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.jit.quantized.QuantizedGRU.forward": {
  "lineno": 484,
  "symbols_in_volume": [
   "torch.nn.utils.rnn.PackedSequence"
  ],
  "type": "function"
 },
 "torch.jit.quantized.QuantizedGRU.forward_impl": {
  "lineno": 434,
  "symbols_in_volume": [
   "torch.jit.script_method",
   "torch.quantized_gru",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.jit.quantized.QuantizedGRU.forward_packed": {
  "lineno": 472,
  "symbols_in_volume": [
   "torch.jit.script_method",
   "torch.nn.utils.rnn.PackedSequence"
  ],
  "type": "function"
 },
 "torch.jit.quantized.QuantizedGRU.forward_tensor": {
  "lineno": 461,
  "symbols_in_volume": [
   "torch.jit.script_method"
  ],
  "type": "function"
 },
 "torch.jit.quantized.QuantizedGRUCell": {
  "lineno": 220,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.jit.quantized.QuantizedGRUCell.__init__": {
  "lineno": 221,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit.quantized.QuantizedGRUCell.forward": {
  "lineno": 224,
  "symbols_in_volume": [
   "torch._VF.quantized_gru_cell",
   "torch.jit.script_method",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.jit.quantized.QuantizedLSTM": {
  "lineno": 351,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.jit.quantized.QuantizedLSTM.__init__": {
  "lineno": 354,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit.quantized.QuantizedLSTM.check_forward_args": {
  "lineno": 413,
  "symbols_in_volume": [
   "torch.jit.script_method"
  ],
  "type": "function"
 },
 "torch.jit.quantized.QuantizedLSTM.forward": {
  "lineno": 424,
  "symbols_in_volume": [
   "torch.nn.utils.rnn.PackedSequence"
  ],
  "type": "function"
 },
 "torch.jit.quantized.QuantizedLSTM.forward_impl": {
  "lineno": 357,
  "symbols_in_volume": [
   "torch.jit.script_method",
   "torch.quantized_lstm",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.jit.quantized.QuantizedLSTM.forward_packed": {
  "lineno": 393,
  "symbols_in_volume": [
   "torch.jit.script_method",
   "torch.nn.utils.rnn.PackedSequence"
  ],
  "type": "function"
 },
 "torch.jit.quantized.QuantizedLSTM.forward_tensor": {
  "lineno": 381,
  "symbols_in_volume": [
   "torch.jit.script_method"
  ],
  "type": "function"
 },
 "torch.jit.quantized.QuantizedLSTM.permute_hidden": {
  "lineno": 406,
  "symbols_in_volume": [
   "torch.jit.script_method"
  ],
  "type": "function"
 },
 "torch.jit.quantized.QuantizedLSTMCell": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.jit.quantized.QuantizedLSTMCell.__init__": {
  "lineno": 200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit.quantized.QuantizedLSTMCell.forward": {
  "lineno": 203,
  "symbols_in_volume": [
   "torch._VF.quantized_lstm_cell",
   "torch.jit.script_method",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.jit.quantized.QuantizedLinear": {
  "lineno": 11,
  "symbols_in_volume": [
   "torch.jit.ScriptModule"
  ],
  "type": "class"
 },
 "torch.jit.quantized.QuantizedLinear.__init__": {
  "lineno": 14,
  "symbols_in_volume": [
   "torch.contiguous_format",
   "torch.fbgemm_linear_quantize_weight",
   "torch.fbgemm_pack_quantized_matrix",
   "torch.nn.Parameter"
  ],
  "type": "function"
 },
 "torch.jit.quantized.QuantizedLinear._pack": {
  "lineno": 35,
  "symbols_in_volume": [
   "torch.jit.annotate",
   "torch.jit.script_method",
   "torch.uint8",
   "torch.zeros",
   "typing.List"
  ],
  "type": "function"
 },
 "torch.jit.quantized.QuantizedLinear._unpack": {
  "lineno": 30,
  "symbols_in_volume": [
   "torch.fbgemm_pack_quantized_matrix",
   "torch.jit.script_method"
  ],
  "type": "function"
 },
 "torch.jit.quantized.QuantizedLinear.extra_repr": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit.quantized.QuantizedLinear.forward": {
  "lineno": 40,
  "symbols_in_volume": [
   "torch.fbgemm_linear_int8_weight_fp32_activation",
   "torch.jit.script_method"
  ],
  "type": "function"
 },
 "torch.jit.quantized.QuantizedLinearFP16": {
  "lineno": 53,
  "symbols_in_volume": [
   "torch.jit.ScriptModule"
  ],
  "type": "class"
 },
 "torch.jit.quantized.QuantizedLinearFP16.__init__": {
  "lineno": 55,
  "symbols_in_volume": [
   "torch.contiguous_format",
   "torch.fbgemm_pack_gemm_matrix_fp16",
   "torch.nn.Parameter"
  ],
  "type": "function"
 },
 "torch.jit.quantized.QuantizedLinearFP16._pack": {
  "lineno": 72,
  "symbols_in_volume": [
   "torch.jit.annotate",
   "torch.jit.script_method",
   "torch.uint8",
   "torch.zeros",
   "typing.List"
  ],
  "type": "function"
 },
 "torch.jit.quantized.QuantizedLinearFP16._unpack": {
  "lineno": 66,
  "symbols_in_volume": [
   "torch.fbgemm_pack_gemm_matrix_fp16",
   "torch.jit.script_method"
  ],
  "type": "function"
 },
 "torch.jit.quantized.QuantizedLinearFP16.extra_repr": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit.quantized.QuantizedLinearFP16.forward": {
  "lineno": 77,
  "symbols_in_volume": [
   "torch.fbgemm_linear_fp16_weight_fp32_activation",
   "torch.jit.script_method"
  ],
  "type": "function"
 },
 "torch.jit.quantized.QuantizedRNNBase": {
  "lineno": 244,
  "symbols_in_volume": [
   "torch.jit.ScriptModule"
  ],
  "type": "class"
 },
 "torch.jit.quantized.QuantizedRNNBase.__init__": {
  "lineno": 248,
  "symbols_in_volume": [
   "torch.float16",
   "torch.int8",
   "torch.ops.quantized.linear_prepack_fp16",
   "torch.ops.quantized.make_quantized_cell_params",
   "torch.ops.quantized.make_quantized_cell_params_fp16"
  ],
  "type": "function"
 },
 "torch.jit.quantized.QuantizedRNNBase.__init__.get_weight_bias": {
  "lineno": 279,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit.quantized.QuantizedRNNBase.check_forward_args": {
  "lineno": 336,
  "symbols_in_volume": [
   "torch.jit.script_method"
  ],
  "type": "function"
 },
 "torch.jit.quantized.QuantizedRNNBase.check_hidden_size": {
  "lineno": 330,
  "symbols_in_volume": [
   "torch.jit.script_method"
  ],
  "type": "function"
 },
 "torch.jit.quantized.QuantizedRNNBase.check_input": {
  "lineno": 305,
  "symbols_in_volume": [
   "torch.jit.script_method"
  ],
  "type": "function"
 },
 "torch.jit.quantized.QuantizedRNNBase.get_expected_hidden_size": {
  "lineno": 318,
  "symbols_in_volume": [
   "torch.jit.script_method"
  ],
  "type": "function"
 },
 "torch.jit.quantized.QuantizedRNNBase.permute_hidden": {
  "lineno": 343,
  "symbols_in_volume": [
   "torch.jit.script_method"
  ],
  "type": "function"
 },
 "torch.jit.quantized.QuantizedRNNCell": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.jit.quantized.QuantizedRNNCell.__init__": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit.quantized.QuantizedRNNCell.forward": {
  "lineno": 171,
  "symbols_in_volume": [
   "torch._VF.quantized_rnn_relu_cell",
   "torch._VF.quantized_rnn_tanh_cell",
   "torch.jit.script_method",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.jit.quantized.QuantizedRNNCellBase": {
  "lineno": 88,
  "symbols_in_volume": [
   "torch.jit.ScriptModule"
  ],
  "type": "class"
 },
 "torch.jit.quantized.QuantizedRNNCellBase.__init__": {
  "lineno": 92,
  "symbols_in_volume": [
   "torch.contiguous_format",
   "torch.fbgemm_linear_quantize_weight",
   "torch.fbgemm_pack_quantized_matrix",
   "torch.nn.Parameter"
  ],
  "type": "function"
 },
 "torch.jit.quantized.QuantizedRNNCellBase._pack": {
  "lineno": 155,
  "symbols_in_volume": [
   "torch.jit.annotate",
   "torch.jit.script_method",
   "torch.uint8",
   "torch.zeros",
   "typing.List"
  ],
  "type": "function"
 },
 "torch.jit.quantized.QuantizedRNNCellBase._unpack": {
  "lineno": 149,
  "symbols_in_volume": [
   "torch.fbgemm_pack_quantized_matrix",
   "torch.jit.script_method"
  ],
  "type": "function"
 },
 "torch.jit.quantized.QuantizedRNNCellBase.check_forward_hidden": {
  "lineno": 132,
  "symbols_in_volume": [
   "torch.jit.script_method"
  ],
  "type": "function"
 },
 "torch.jit.quantized.QuantizedRNNCellBase.check_forward_input": {
  "lineno": 125,
  "symbols_in_volume": [
   "torch.jit.script_method"
  ],
  "type": "function"
 },
 "torch.jit.quantized.QuantizedRNNCellBase.extra_repr": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit.quantized.apply_permutation": {
  "lineno": 239,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit.quantized.quantize_linear_modules": {
  "lineno": 512,
  "symbols_in_volume": [
   "torch.float16",
   "torch.int8",
   "torch.nn.Linear",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.jit.quantized.quantize_rnn_cell_modules": {
  "lineno": 491,
  "symbols_in_volume": [
   "torch.nn.GRUCell",
   "torch.nn.LSTMCell",
   "torch.nn.RNNCell",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.jit.quantized.quantize_rnn_modules": {
  "lineno": 537,
  "symbols_in_volume": [
   "torch.float16",
   "torch.int8",
   "torch.nn.GRU",
   "torch.nn.LSTM",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.jit.supported_ops": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.jit.supported_ops._emit_arg": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit.supported_ops._emit_args": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit.supported_ops._emit_ret": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit.supported_ops._emit_rets": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit.supported_ops._emit_schema": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit.supported_ops._emit_type": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit.supported_ops._get_builtins_helper": {
  "lineno": 109,
  "symbols_in_volume": [
   "inspect.getmodule"
  ],
  "type": "function"
 },
 "torch.jit.supported_ops._get_global_builtins": {
  "lineno": 181,
  "symbols_in_volume": [
   "textwrap.indent"
  ],
  "type": "function"
 },
 "torch.jit.supported_ops._get_math_builtins": {
  "lineno": 157,
  "symbols_in_volume": [
   "inspect.getmodule",
   "torch.jit._builtins._find_builtin"
  ],
  "type": "function"
 },
 "torch.jit.supported_ops._get_nn_functional_ops": {
  "lineno": 67,
  "symbols_in_volume": [
   "inspect.getmodule",
   "inspect.isfunction",
   "torch.jit._builtins._find_builtin"
  ],
  "type": "function"
 },
 "torch.jit.supported_ops._get_tensor_ops": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit.supported_ops._get_tensor_ops.is_tensor_method": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit.supported_ops._get_torchscript_builtins": {
  "lineno": 138,
  "symbols_in_volume": [
   "inspect.getmodule",
   "torch.jit._builtins._find_builtin"
  ],
  "type": "function"
 },
 "torch.jit.supported_ops._hidden": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit.supported_ops._is_math_fn": {
  "lineno": 130,
  "symbols_in_volume": [
   "inspect.getmodule"
  ],
  "type": "function"
 },
 "torch.jit.supported_ops._list_supported_ops": {
  "lineno": 297,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit.supported_ops._list_supported_ops.emit_block": {
  "lineno": 298,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit.unsupported_tensor_ops": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.jit.unsupported_tensor_ops._gen_unsupported_methods_properties": {
  "lineno": 9,
  "symbols_in_volume": [
   "textwrap.dedent",
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "torch.jit.unsupported_tensor_ops._list_unsupported_tensor_ops": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.jit.unsupported_tensor_ops.execWrapper": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.linalg": {
  "lineno": null,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._C._add_docstr",
   "torch._C._linalg.linalg_det",
   "torch._C._linalg.linalg_norm"
  ],
  "type": "module"
 },
 "torch.manager_path": {
  "lineno": 489,
  "symbols_in_volume": [
   "os.path.exists",
   "platform.system"
  ],
  "type": "function"
 },
 "torch.multiprocessing": {
  "lineno": null,
  "symbols_in_volume": [
   "multiprocessing.__all__",
   "sys.platform",
   "sys.version_info",
   "torch._C._multiprocessing_init"
  ],
  "type": "module"
 },
 "torch.multiprocessing._atfork": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.platform",
   "sys.version_info"
  ],
  "type": "module"
 },
 "torch.multiprocessing._atfork._register": {
  "lineno": 15,
  "symbols_in_volume": [
   "os.register_at_fork"
  ],
  "type": "function"
 },
 "torch.multiprocessing._atfork._register.wrapper": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.multiprocessing._atfork.register_after_fork": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.multiprocessing.get_all_sharing_strategies": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.multiprocessing.get_sharing_strategy": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.multiprocessing.pool": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.multiprocessing.pool.Pool": {
  "lineno": 17,
  "symbols_in_volume": [
   "multiprocessing.pool.Pool"
  ],
  "type": "class"
 },
 "torch.multiprocessing.pool.Pool._repopulate_pool": {
  "lineno": 28,
  "symbols_in_volume": [
   "multiprocessing.util.debug"
  ],
  "type": "function"
 },
 "torch.multiprocessing.pool.Pool._setup_queues": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.multiprocessing.pool.clean_worker": {
  "lineno": 8,
  "symbols_in_volume": [
   "gc.collect",
   "multiprocessing.pool.worker"
  ],
  "type": "function"
 },
 "torch.multiprocessing.queue": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.multiprocessing.queue.ConnectionWrapper": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.multiprocessing.queue.ConnectionWrapper.__getattr__": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.multiprocessing.queue.ConnectionWrapper.__init__": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.multiprocessing.queue.ConnectionWrapper.recv": {
  "lineno": 20,
  "symbols_in_volume": [
   "pickle.loads"
  ],
  "type": "function"
 },
 "torch.multiprocessing.queue.ConnectionWrapper.send": {
  "lineno": 15,
  "symbols_in_volume": [
   "io.BytesIO",
   "multiprocessing.reduction.ForkingPickler",
   "pickle.HIGHEST_PROTOCOL"
  ],
  "type": "function"
 },
 "torch.multiprocessing.queue.Queue": {
  "lineno": 31,
  "symbols_in_volume": [
   "multiprocessing.queues.Queue"
  ],
  "type": "class"
 },
 "torch.multiprocessing.queue.Queue.__init__": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.multiprocessing.queue.SimpleQueue": {
  "lineno": 41,
  "symbols_in_volume": [
   "multiprocessing.queues.SimpleQueue"
  ],
  "type": "class"
 },
 "torch.multiprocessing.queue.SimpleQueue._make_methods": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.multiprocessing.reductions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.multiprocessing.reductions.SharedCache": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.multiprocessing.reductions.SharedCache.__init__": {
  "lineno": 42,
  "symbols_in_volume": [
   "multiprocessing.util.register_after_fork"
  ],
  "type": "function"
 },
 "torch.multiprocessing.reductions.SharedCache.__setitem__": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.multiprocessing.reductions.SharedCache._after_fork": {
  "lineno": 52,
  "symbols_in_volume": [
   "threading.Lock"
  ],
  "type": "function"
 },
 "torch.multiprocessing.reductions.SharedCache.free_dead_references": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.multiprocessing.reductions.StorageWeakRef": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.multiprocessing.reductions.StorageWeakRef.__del__": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.multiprocessing.reductions.StorageWeakRef.__init__": {
  "lineno": 26,
  "symbols_in_volume": [
   "torch.Storage._free_weak_ref"
  ],
  "type": "function"
 },
 "torch.multiprocessing.reductions.StorageWeakRef.expired": {
  "lineno": 32,
  "symbols_in_volume": [
   "torch.Storage._expired"
  ],
  "type": "function"
 },
 "torch.multiprocessing.reductions.fd_id": {
  "lineno": 266,
  "symbols_in_volume": [
   "os.fstat"
  ],
  "type": "function"
 },
 "torch.multiprocessing.reductions.init_reductions": {
  "lineno": 331,
  "symbols_in_volume": [
   "multiprocessing.reduction.ForkingPickler.register",
   "torch.Tensor",
   "torch._storage_classes",
   "torch._tensor_classes",
   "torch.cuda.Event",
   "torch.nn.parameter.Parameter"
  ],
  "type": "function"
 },
 "torch.multiprocessing.reductions.rebuild_cuda_tensor": {
  "lineno": 99,
  "symbols_in_volume": [
   "torch._utils._rebuild_tensor",
   "torch.cuda._lazy_init",
   "torch.nn.parameter.Parameter"
  ],
  "type": "function"
 },
 "torch.multiprocessing.reductions.rebuild_event": {
  "lineno": 77,
  "symbols_in_volume": [
   "torch.cuda.Event.from_ipc_handle"
  ],
  "type": "function"
 },
 "torch.multiprocessing.reductions.rebuild_storage_empty": {
  "lineno": 303,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.multiprocessing.reductions.rebuild_storage_fd": {
  "lineno": 281,
  "symbols_in_volume": [
   "os.close"
  ],
  "type": "function"
 },
 "torch.multiprocessing.reductions.rebuild_storage_filename": {
  "lineno": 294,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.multiprocessing.reductions.rebuild_tensor": {
  "lineno": 86,
  "symbols_in_volume": [
   "torch._utils._rebuild_tensor",
   "torch.nn.parameter.Parameter"
  ],
  "type": "function"
 },
 "torch.multiprocessing.reductions.reduce_event": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.multiprocessing.reductions.reduce_storage": {
  "lineno": 307,
  "symbols_in_volume": [
   "multiprocessing.reduction.DupFd"
  ],
  "type": "function"
 },
 "torch.multiprocessing.reductions.reduce_tensor": {
  "lineno": 130,
  "symbols_in_volume": [
   "torch._namedtensor_internals.check_serializing_named_tensor",
   "torch.utils.hooks.warn_if_has_hooks"
  ],
  "type": "function"
 },
 "torch.multiprocessing.reductions.storage_from_cache": {
  "lineno": 274,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.multiprocessing.set_sharing_strategy": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.multiprocessing.spawn": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "torch.multiprocessing.spawn.ProcessContext": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.multiprocessing.spawn.ProcessContext.__init__": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.multiprocessing.spawn.ProcessContext.join": {
  "lineno": 57,
  "symbols_in_volume": [
   "multiprocessing.connection.wait",
   "signal.Signals"
  ],
  "type": "function"
 },
 "torch.multiprocessing.spawn.ProcessContext.pids": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.multiprocessing.spawn.SpawnContext": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.multiprocessing.spawn.SpawnContext.__init__": {
  "lineno": 122,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.multiprocessing.spawn._python_version_check": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.multiprocessing.spawn._wrap": {
  "lineno": 11,
  "symbols_in_volume": [
   "signal.SIGINT",
   "sys.exit",
   "traceback.format_exc"
  ],
  "type": "function"
 },
 "torch.multiprocessing.spawn.spawn": {
  "lineno": 161,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.multiprocessing.spawn.start_processes": {
  "lineno": 136,
  "symbols_in_volume": [
   "multiprocessing.get_context"
  ],
  "type": "function"
 },
 "torch.nn": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn._reduction": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn._reduction.get_enum": {
  "lineno": 7,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.nn._reduction.legacy_get_enum": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn._reduction.legacy_get_string": {
  "lineno": 28,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.nn.backends": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.backends.thnn": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.backends.thnn._get_thnn_function_backend": {
  "lineno": 3,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.common_types": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.Tuple",
   "typing.TypeVar",
   "typing.Union"
  ],
  "type": "module"
 },
 "torch.nn.cpp": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.cpp.ModuleWrapper": {
  "lineno": 49,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.nn.cpp.ModuleWrapper.__init__": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.cpp.ModuleWrapper.__repr__": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.cpp.ModuleWrapper._apply": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.cpp.ModuleWrapper.training": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.cpp.OrderedDictWrapper": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.cpp.OrderedDictWrapper.__contains__": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.cpp.OrderedDictWrapper.__getitem__": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.cpp.OrderedDictWrapper.__init__": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.cpp.OrderedDictWrapper.__iter__": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.cpp.OrderedDictWrapper.__len__": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.cpp.OrderedDictWrapper.cpp_dict": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.cpp.OrderedDictWrapper.items": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.cpp.OrderedDictWrapper.keys": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.cpp.OrderedDictWrapper.values": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.functional": {
  "lineno": null,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._C._add_docstr",
   "torch._C._nn.avg_pool2d",
   "torch._C._nn.avg_pool3d",
   "torch._C._nn.elu_",
   "torch._C._nn.hardtanh_",
   "torch._C._nn.leaky_relu_",
   "torch._C._nn.log_sigmoid",
   "torch._C._nn.one_hot",
   "torch._C._nn.softplus",
   "torch._C._nn.softshrink",
   "torch._VF.threshold_",
   "torch.adaptive_avg_pool1d",
   "torch.avg_pool1d",
   "torch.celu_",
   "torch.channel_shuffle",
   "torch.conv1d",
   "torch.conv2d",
   "torch.conv3d",
   "torch.conv_tbc",
   "torch.conv_transpose1d",
   "torch.conv_transpose2d",
   "torch.conv_transpose3d",
   "torch.cosine_similarity",
   "torch.pdist",
   "torch.pixel_shuffle",
   "torch.relu_",
   "torch.rrelu_",
   "torch.selu_"
  ],
  "type": "module"
 },
 "torch.nn.functional._adaptive_max_pool1d": {
  "lineno": 807,
  "symbols_in_volume": [
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional._adaptive_max_pool2d": {
  "lineno": 847,
  "symbols_in_volume": [
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional._adaptive_max_pool3d": {
  "lineno": 887,
  "symbols_in_volume": [
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional._fractional_max_pool2d": {
  "lineno": 408,
  "symbols_in_volume": [
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional._fractional_max_pool3d": {
  "lineno": 487,
  "symbols_in_volume": [
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional._get_softmax_dim": {
  "lineno": 1439,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.nn.functional._max_pool1d": {
  "lineno": 531,
  "symbols_in_volume": [
   "torch.jit.annotate",
   "torch.jit.is_scripting",
   "torch.max_pool1d"
  ],
  "type": "function"
 },
 "torch.nn.functional._max_pool2d": {
  "lineno": 574,
  "symbols_in_volume": [
   "torch.jit.annotate",
   "torch.jit.is_scripting",
   "torch.max_pool2d"
  ],
  "type": "function"
 },
 "torch.nn.functional._max_pool3d": {
  "lineno": 618,
  "symbols_in_volume": [
   "torch.jit.annotate",
   "torch.jit.is_scripting",
   "torch.max_pool3d"
  ],
  "type": "function"
 },
 "torch.nn.functional._no_grad_embedding_renorm_": {
  "lineno": 1768,
  "symbols_in_volume": [
   "torch.embedding_renorm_",
   "torch.no_grad"
  ],
  "type": "function"
 },
 "torch.nn.functional._pad": {
  "lineno": 3486,
  "symbols_in_volume": [
   "torch._C._nn.reflection_pad1d",
   "torch._C._nn.reflection_pad2d",
   "torch._C._nn.replication_pad1d",
   "torch._C._nn.replication_pad2d",
   "torch._C._nn.replication_pad3d",
   "torch._VF.constant_pad_nd",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional._pad_circular": {
  "lineno": 3866,
  "symbols_in_volume": [
   "torch.empty"
  ],
  "type": "function"
 },
 "torch.nn.functional._threshold": {
  "lineno": 1096,
  "symbols_in_volume": [
   "torch._VF.threshold",
   "torch._VF.threshold_",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional._unpool_output_size": {
  "lineno": 641,
  "symbols_in_volume": [
   "torch.jit.annotate"
  ],
  "type": "function"
 },
 "torch.nn.functional._verify_batch_size": {
  "lineno": 2022,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.functional.adaptive_avg_pool2d": {
  "lineno": 919,
  "symbols_in_volume": [
   "torch._C._nn.adaptive_avg_pool2d",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.adaptive_avg_pool3d": {
  "lineno": 939,
  "symbols_in_volume": [
   "torch._C._nn.adaptive_avg_pool3d",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.adaptive_max_pool1d_with_indices": {
  "lineno": 788,
  "symbols_in_volume": [
   "torch.adaptive_max_pool1d",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.adaptive_max_pool2d_with_indices": {
  "lineno": 826,
  "symbols_in_volume": [
   "torch._C._nn.adaptive_max_pool2d",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.adaptive_max_pool3d_with_indices": {
  "lineno": 866,
  "symbols_in_volume": [
   "torch._C._nn.adaptive_max_pool3d",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.affine_grid": {
  "lineno": 3394,
  "symbols_in_volume": [
   "torch.affine_grid_generator",
   "torch.jit.is_scripting",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.nn.functional.alpha_dropout": {
  "lineno": 986,
  "symbols_in_volume": [
   "torch._VF.alpha_dropout",
   "torch._VF.alpha_dropout_",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.assert_int_or_pair": {
  "lineno": 3795,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.functional.batch_norm": {
  "lineno": 2040,
  "symbols_in_volume": [
   "torch.backends.cudnn.enabled",
   "torch.batch_norm",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.bilinear": {
  "lineno": 1699,
  "symbols_in_volume": [
   "torch.bilinear"
  ],
  "type": "function"
 },
 "torch.nn.functional.binary_cross_entropy": {
  "lineno": 2471,
  "symbols_in_volume": [
   "torch._C._infer_size",
   "torch._C._nn.binary_cross_entropy",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.binary_cross_entropy_with_logits": {
  "lineno": 2529,
  "symbols_in_volume": [
   "torch.binary_cross_entropy_with_logits",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.celu": {
  "lineno": 1266,
  "symbols_in_volume": [
   "torch.celu",
   "torch.celu_",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.cosine_embedding_loss": {
  "lineno": 2779,
  "symbols_in_volume": [
   "torch.cosine_embedding_loss",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.cross_entropy": {
  "lineno": 2416,
  "symbols_in_volume": [
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.ctc_loss": {
  "lineno": 2147,
  "symbols_in_volume": [
   "torch.ctc_loss"
  ],
  "type": "function"
 },
 "torch.nn.functional.dropout": {
  "lineno": 960,
  "symbols_in_volume": [
   "torch._VF.dropout",
   "torch._VF.dropout_",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.dropout2d": {
  "lineno": 1004,
  "symbols_in_volume": [
   "torch._VF.feature_dropout",
   "torch._VF.feature_dropout_",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.dropout3d": {
  "lineno": 1032,
  "symbols_in_volume": [
   "torch._VF.feature_dropout",
   "torch._VF.feature_dropout_",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.elu": {
  "lineno": 1213,
  "symbols_in_volume": [
   "torch._C._nn.elu",
   "torch._C._nn.elu_",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.embedding": {
  "lineno": 1774,
  "symbols_in_volume": [
   "torch.embedding"
  ],
  "type": "function"
 },
 "torch.nn.functional.embedding_bag": {
  "lineno": 1855,
  "symbols_in_volume": [
   "torch.arange",
   "torch.embedding_bag",
   "torch.jit.is_scripting",
   "torch.long",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.nn.functional.feature_alpha_dropout": {
  "lineno": 1062,
  "symbols_in_volume": [
   "torch._VF.feature_alpha_dropout",
   "torch._VF.feature_alpha_dropout_",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.fold": {
  "lineno": 3836,
  "symbols_in_volume": [
   "torch._C._nn.col2im",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.fractional_max_pool2d_with_indices": {
  "lineno": 355,
  "symbols_in_volume": [
   "torch._C._nn.fractional_max_pool2d",
   "torch.jit.is_scripting",
   "torch.rand"
  ],
  "type": "function"
 },
 "torch.nn.functional.fractional_max_pool3d_with_indices": {
  "lineno": 432,
  "symbols_in_volume": [
   "torch._C._nn.fractional_max_pool3d",
   "torch.jit.is_scripting",
   "torch.rand"
  ],
  "type": "function"
 },
 "torch.nn.functional.gelu": {
  "lineno": 1370,
  "symbols_in_volume": [
   "torch._C._nn.gelu",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.glu": {
  "lineno": 1147,
  "symbols_in_volume": [
   "torch._C._nn.glu",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.grid_sample": {
  "lineno": 3269,
  "symbols_in_volume": [
   "torch.grid_sampler",
   "torch.jit.is_scripting",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.nn.functional.group_norm": {
  "lineno": 2098,
  "symbols_in_volume": [
   "torch.backends.cudnn.enabled",
   "torch.group_norm",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.gumbel_softmax": {
  "lineno": 1518,
  "symbols_in_volume": [
   "torch.empty_like",
   "torch.jit.is_scripting",
   "torch.legacy_contiguous_format",
   "torch.zeros_like",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.nn.functional.hardshrink": {
  "lineno": 1386,
  "symbols_in_volume": [
   "torch.hardshrink",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.hardsigmoid": {
  "lineno": 1643,
  "symbols_in_volume": [
   "torch._C._nn.hardsigmoid",
   "torch._C._nn.hardsigmoid_",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.hardswish": {
  "lineno": 1743,
  "symbols_in_volume": [
   "torch._C._nn.hardswish",
   "torch._C._nn.hardswish_",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.hardtanh": {
  "lineno": 1173,
  "symbols_in_volume": [
   "torch._C._nn.hardtanh",
   "torch._C._nn.hardtanh_",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.hinge_embedding_loss": {
  "lineno": 2686,
  "symbols_in_volume": [
   "torch.hinge_embedding_loss",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.instance_norm": {
  "lineno": 2062,
  "symbols_in_volume": [
   "torch.backends.cudnn.enabled",
   "torch.instance_norm",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.interpolate": {
  "lineno": 2975,
  "symbols_in_volume": [
   "math.floor",
   "torch._C._get_tracing_state",
   "torch._C._nn.upsample_bicubic2d",
   "torch._C._nn.upsample_bilinear2d",
   "torch._C._nn.upsample_linear1d",
   "torch._C._nn.upsample_nearest1d",
   "torch._C._nn.upsample_nearest2d",
   "torch._C._nn.upsample_nearest3d",
   "torch._C._nn.upsample_trilinear3d",
   "torch.float32",
   "torch.floor",
   "torch.jit.is_scripting",
   "torch.tensor",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.nn.functional.kl_div": {
  "lineno": 2348,
  "symbols_in_volume": [
   "torch.jit.is_scripting",
   "torch.kl_div",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.nn.functional.l1_loss": {
  "lineno": 2610,
  "symbols_in_volume": [
   "torch._C._nn.l1_loss",
   "torch.broadcast_tensors",
   "torch.jit.is_scripting",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.nn.functional.layer_norm": {
  "lineno": 2084,
  "symbols_in_volume": [
   "torch.backends.cudnn.enabled",
   "torch.jit.is_scripting",
   "torch.layer_norm"
  ],
  "type": "function"
 },
 "torch.nn.functional.leaky_relu": {
  "lineno": 1292,
  "symbols_in_volume": [
   "torch._C._nn.leaky_relu",
   "torch._C._nn.leaky_relu_",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.linear": {
  "lineno": 1669,
  "symbols_in_volume": [
   "torch.addmm",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.local_response_norm": {
  "lineno": 2115,
  "symbols_in_volume": [
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.log_softmax": {
  "lineno": 1581,
  "symbols_in_volume": [
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.lp_pool1d": {
  "lineno": 767,
  "symbols_in_volume": [
   "torch.abs",
   "torch.jit.is_scripting",
   "torch.sign"
  ],
  "type": "function"
 },
 "torch.nn.functional.lp_pool2d": {
  "lineno": 745,
  "symbols_in_volume": [
   "torch.abs",
   "torch.jit.is_scripting",
   "torch.sign"
  ],
  "type": "function"
 },
 "torch.nn.functional.margin_ranking_loss": {
  "lineno": 2663,
  "symbols_in_volume": [
   "torch.jit.is_scripting",
   "torch.margin_ranking_loss"
  ],
  "type": "function"
 },
 "torch.nn.functional.max_pool1d_with_indices": {
  "lineno": 511,
  "symbols_in_volume": [
   "torch.jit.annotate",
   "torch.jit.is_scripting",
   "torch.max_pool1d_with_indices"
  ],
  "type": "function"
 },
 "torch.nn.functional.max_pool2d_with_indices": {
  "lineno": 555,
  "symbols_in_volume": [
   "torch._C._nn.max_pool2d_with_indices",
   "torch.jit.annotate",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.max_pool3d_with_indices": {
  "lineno": 598,
  "symbols_in_volume": [
   "torch._C._nn.max_pool3d_with_indices",
   "torch.jit.annotate",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.max_unpool1d": {
  "lineno": 670,
  "symbols_in_volume": [
   "torch._C._nn.max_unpool2d",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.max_unpool2d": {
  "lineno": 698,
  "symbols_in_volume": [
   "torch._C._nn.max_unpool2d",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.max_unpool3d": {
  "lineno": 721,
  "symbols_in_volume": [
   "torch._C._nn.max_unpool3d",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.mse_loss": {
  "lineno": 2637,
  "symbols_in_volume": [
   "torch._C._nn.mse_loss",
   "torch.broadcast_tensors",
   "torch.jit.is_scripting",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.nn.functional.multi_head_attention_forward": {
  "lineno": 4041,
  "symbols_in_volume": [
   "torch.bmm",
   "torch.bool",
   "torch.cat",
   "torch.equal",
   "torch.float16",
   "torch.float32",
   "torch.float64",
   "torch.jit._unwrap_optional",
   "torch.jit.is_scripting",
   "torch.uint8",
   "torch.zeros",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.nn.functional.multi_margin_loss": {
  "lineno": 2799,
  "symbols_in_volume": [
   "torch._C._nn.multi_margin_loss",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.multilabel_margin_loss": {
  "lineno": 2706,
  "symbols_in_volume": [
   "torch._C._nn.multilabel_margin_loss",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.multilabel_soft_margin_loss": {
  "lineno": 2744,
  "symbols_in_volume": [
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.nll_loss": {
  "lineno": 2204,
  "symbols_in_volume": [
   "torch._C._nn.nll_loss",
   "torch._C._nn.nll_loss2d",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.normalize": {
  "lineno": 3763,
  "symbols_in_volume": [
   "torch.div",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.pairwise_distance": {
  "lineno": 3599,
  "symbols_in_volume": [
   "torch.pairwise_distance"
  ],
  "type": "function"
 },
 "torch.nn.functional.poisson_nll_loss": {
  "lineno": 2297,
  "symbols_in_volume": [
   "torch.jit.is_scripting",
   "torch.poisson_nll_loss"
  ],
  "type": "function"
 },
 "torch.nn.functional.prelu": {
  "lineno": 1320,
  "symbols_in_volume": [
   "torch.jit.is_scripting",
   "torch.prelu"
  ],
  "type": "function"
 },
 "torch.nn.functional.relu": {
  "lineno": 1124,
  "symbols_in_volume": [
   "torch.jit.is_scripting",
   "torch.relu",
   "torch.relu_"
  ],
  "type": "function"
 },
 "torch.nn.functional.relu6": {
  "lineno": 1199,
  "symbols_in_volume": [
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.rrelu": {
  "lineno": 1336,
  "symbols_in_volume": [
   "torch.jit.is_scripting",
   "torch.rrelu",
   "torch.rrelu_"
  ],
  "type": "function"
 },
 "torch.nn.functional.selu": {
  "lineno": 1238,
  "symbols_in_volume": [
   "torch.jit.is_scripting",
   "torch.selu",
   "torch.selu_"
  ],
  "type": "function"
 },
 "torch.nn.functional.sigmoid": {
  "lineno": 1632,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.nn.functional.silu": {
  "lineno": 1719,
  "symbols_in_volume": [
   "torch._C._nn.silu",
   "torch._C._nn.silu_",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.smooth_l1_loss": {
  "lineno": 2585,
  "symbols_in_volume": [
   "torch._C._nn.smooth_l1_loss",
   "torch.broadcast_tensors",
   "torch.jit.is_scripting",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.nn.functional.soft_margin_loss": {
  "lineno": 2725,
  "symbols_in_volume": [
   "torch._C._nn.soft_margin_loss",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.softmax": {
  "lineno": 1479,
  "symbols_in_volume": [
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.softmin": {
  "lineno": 1450,
  "symbols_in_volume": [
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.softsign": {
  "lineno": 1414,
  "symbols_in_volume": [
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.tanh": {
  "lineno": 1620,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.nn.functional.tanhshrink": {
  "lineno": 1401,
  "symbols_in_volume": [
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.triplet_margin_loss": {
  "lineno": 3706,
  "symbols_in_volume": [
   "torch.jit.is_scripting",
   "torch.triplet_margin_loss"
  ],
  "type": "function"
 },
 "torch.nn.functional.triplet_margin_with_distance_loss": {
  "lineno": 3727,
  "symbols_in_volume": [
   "torch.clamp",
   "torch.jit.is_scripting",
   "torch.min"
  ],
  "type": "function"
 },
 "torch.nn.functional.unfold": {
  "lineno": 3800,
  "symbols_in_volume": [
   "torch._C._nn.im2col",
   "torch.jit.is_scripting"
  ],
  "type": "function"
 },
 "torch.nn.functional.upsample": {
  "lineno": 2893,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.nn.functional.upsample_bilinear": {
  "lineno": 3231,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.nn.functional.upsample_nearest": {
  "lineno": 3186,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.nn.grad": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.grad._grad_input_padding": {
  "lineno": 8,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.nn.grad._grad_input_padding.dim_size": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.grad.conv1d_input": {
  "lineno": 40,
  "symbols_in_volume": [
   "torch.conv_transpose1d"
  ],
  "type": "function"
 },
 "torch.nn.grad.conv1d_weight": {
  "lineno": 81,
  "symbols_in_volume": [
   "torch.conv1d"
  ],
  "type": "function"
 },
 "torch.nn.grad.conv2d_input": {
  "lineno": 129,
  "symbols_in_volume": [
   "torch.conv_transpose2d"
  ],
  "type": "function"
 },
 "torch.nn.grad.conv2d_weight": {
  "lineno": 170,
  "symbols_in_volume": [
   "torch.conv2d"
  ],
  "type": "function"
 },
 "torch.nn.grad.conv3d_input": {
  "lineno": 222,
  "symbols_in_volume": [
   "torch.conv_transpose3d"
  ],
  "type": "function"
 },
 "torch.nn.grad.conv3d_weight": {
  "lineno": 263,
  "symbols_in_volume": [
   "torch.conv3d"
  ],
  "type": "function"
 },
 "torch.nn.init": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.init._calculate_correct_fan": {
  "lineno": 342,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.init._calculate_fan_in_and_fan_out": {
  "lineno": 271,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.init._make_deprecate": {
  "lineno": 494,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.init._make_deprecate.deprecated_init": {
  "lineno": 498,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.nn.init._no_grad_fill_": {
  "lineno": 57,
  "symbols_in_volume": [
   "torch.no_grad"
  ],
  "type": "function"
 },
 "torch.nn.init._no_grad_normal_": {
  "lineno": 17,
  "symbols_in_volume": [
   "torch.no_grad"
  ],
  "type": "function"
 },
 "torch.nn.init._no_grad_trunc_normal_": {
  "lineno": 22,
  "symbols_in_volume": [
   "math.sqrt",
   "torch.no_grad",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.nn.init._no_grad_trunc_normal_.norm_cdf": {
  "lineno": 24,
  "symbols_in_volume": [
   "math.erf",
   "math.sqrt"
  ],
  "type": "function"
 },
 "torch.nn.init._no_grad_uniform_": {
  "lineno": 12,
  "symbols_in_volume": [
   "torch.no_grad"
  ],
  "type": "function"
 },
 "torch.nn.init._no_grad_zero_": {
  "lineno": 62,
  "symbols_in_volume": [
   "torch.no_grad"
  ],
  "type": "function"
 },
 "torch.nn.init.calculate_gain": {
  "lineno": 67,
  "symbols_in_volume": [
   "math.sqrt"
  ],
  "type": "function"
 },
 "torch.nn.init.constant_": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.init.dirac_": {
  "lineno": 228,
  "symbols_in_volume": [
   "torch.no_grad"
  ],
  "type": "function"
 },
 "torch.nn.init.eye_": {
  "lineno": 208,
  "symbols_in_volume": [
   "torch.eye",
   "torch.no_grad"
  ],
  "type": "function"
 },
 "torch.nn.init.kaiming_normal_": {
  "lineno": 387,
  "symbols_in_volume": [
   "math.sqrt",
   "torch.no_grad"
  ],
  "type": "function"
 },
 "torch.nn.init.kaiming_uniform_": {
  "lineno": 352,
  "symbols_in_volume": [
   "math.sqrt",
   "torch.no_grad"
  ],
  "type": "function"
 },
 "torch.nn.init.normal_": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.init.ones_": {
  "lineno": 180,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.init.orthogonal_": {
  "lineno": 421,
  "symbols_in_volume": [
   "torch.diag",
   "torch.no_grad",
   "torch.qr"
  ],
  "type": "function"
 },
 "torch.nn.init.sparse_": {
  "lineno": 462,
  "symbols_in_volume": [
   "math.ceil",
   "torch.no_grad",
   "torch.randperm"
  ],
  "type": "function"
 },
 "torch.nn.init.trunc_normal_": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.init.uniform_": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.init.xavier_normal_": {
  "lineno": 315,
  "symbols_in_volume": [
   "math.sqrt"
  ],
  "type": "function"
 },
 "torch.nn.init.xavier_uniform_": {
  "lineno": 287,
  "symbols_in_volume": [
   "math.sqrt"
  ],
  "type": "function"
 },
 "torch.nn.init.zeros_": {
  "lineno": 194,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.intrinsic": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.intrinsic.modules": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.intrinsic.modules.fused": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.intrinsic.modules.fused.BNReLU2d": {
  "lineno": 95,
  "symbols_in_volume": [
   "torch.nn.Sequential"
  ],
  "type": "class"
 },
 "torch.nn.intrinsic.modules.fused.BNReLU2d.__init__": {
  "lineno": 98,
  "symbols_in_volume": [
   "torch.nn.BatchNorm2d",
   "torch.nn.ReLU"
  ],
  "type": "function"
 },
 "torch.nn.intrinsic.modules.fused.BNReLU3d": {
  "lineno": 104,
  "symbols_in_volume": [
   "torch.nn.Sequential"
  ],
  "type": "class"
 },
 "torch.nn.intrinsic.modules.fused.BNReLU3d.__init__": {
  "lineno": 107,
  "symbols_in_volume": [
   "torch.nn.BatchNorm3d",
   "torch.nn.ReLU"
  ],
  "type": "function"
 },
 "torch.nn.intrinsic.modules.fused.ConvBn1d": {
  "lineno": 40,
  "symbols_in_volume": [
   "torch.nn.Sequential"
  ],
  "type": "class"
 },
 "torch.nn.intrinsic.modules.fused.ConvBn1d.__init__": {
  "lineno": 43,
  "symbols_in_volume": [
   "torch.nn.BatchNorm1d",
   "torch.nn.Conv1d"
  ],
  "type": "function"
 },
 "torch.nn.intrinsic.modules.fused.ConvBn2d": {
  "lineno": 49,
  "symbols_in_volume": [
   "torch.nn.Sequential"
  ],
  "type": "class"
 },
 "torch.nn.intrinsic.modules.fused.ConvBn2d.__init__": {
  "lineno": 52,
  "symbols_in_volume": [
   "torch.nn.BatchNorm2d",
   "torch.nn.Conv2d"
  ],
  "type": "function"
 },
 "torch.nn.intrinsic.modules.fused.ConvBn3d": {
  "lineno": 76,
  "symbols_in_volume": [
   "torch.nn.Sequential"
  ],
  "type": "class"
 },
 "torch.nn.intrinsic.modules.fused.ConvBn3d.__init__": {
  "lineno": 79,
  "symbols_in_volume": [
   "torch.nn.BatchNorm3d",
   "torch.nn.Conv3d"
  ],
  "type": "function"
 },
 "torch.nn.intrinsic.modules.fused.ConvBnReLU1d": {
  "lineno": 58,
  "symbols_in_volume": [
   "torch.nn.Sequential"
  ],
  "type": "class"
 },
 "torch.nn.intrinsic.modules.fused.ConvBnReLU1d.__init__": {
  "lineno": 61,
  "symbols_in_volume": [
   "torch.nn.BatchNorm1d",
   "torch.nn.Conv1d",
   "torch.nn.ReLU"
  ],
  "type": "function"
 },
 "torch.nn.intrinsic.modules.fused.ConvBnReLU2d": {
  "lineno": 67,
  "symbols_in_volume": [
   "torch.nn.Sequential"
  ],
  "type": "class"
 },
 "torch.nn.intrinsic.modules.fused.ConvBnReLU2d.__init__": {
  "lineno": 70,
  "symbols_in_volume": [
   "torch.nn.BatchNorm2d",
   "torch.nn.Conv2d",
   "torch.nn.ReLU"
  ],
  "type": "function"
 },
 "torch.nn.intrinsic.modules.fused.ConvBnReLU3d": {
  "lineno": 85,
  "symbols_in_volume": [
   "torch.nn.Sequential"
  ],
  "type": "class"
 },
 "torch.nn.intrinsic.modules.fused.ConvBnReLU3d.__init__": {
  "lineno": 88,
  "symbols_in_volume": [
   "torch.nn.BatchNorm3d",
   "torch.nn.Conv3d",
   "torch.nn.ReLU"
  ],
  "type": "function"
 },
 "torch.nn.intrinsic.modules.fused.ConvReLU1d": {
  "lineno": 4,
  "symbols_in_volume": [
   "torch.nn.Sequential"
  ],
  "type": "class"
 },
 "torch.nn.intrinsic.modules.fused.ConvReLU1d.__init__": {
  "lineno": 7,
  "symbols_in_volume": [
   "torch.nn.Conv1d",
   "torch.nn.ReLU"
  ],
  "type": "function"
 },
 "torch.nn.intrinsic.modules.fused.ConvReLU2d": {
  "lineno": 13,
  "symbols_in_volume": [
   "torch.nn.Sequential"
  ],
  "type": "class"
 },
 "torch.nn.intrinsic.modules.fused.ConvReLU2d.__init__": {
  "lineno": 16,
  "symbols_in_volume": [
   "torch.nn.Conv2d",
   "torch.nn.ReLU"
  ],
  "type": "function"
 },
 "torch.nn.intrinsic.modules.fused.ConvReLU3d": {
  "lineno": 22,
  "symbols_in_volume": [
   "torch.nn.Sequential"
  ],
  "type": "class"
 },
 "torch.nn.intrinsic.modules.fused.ConvReLU3d.__init__": {
  "lineno": 25,
  "symbols_in_volume": [
   "torch.nn.Conv3d",
   "torch.nn.ReLU"
  ],
  "type": "function"
 },
 "torch.nn.intrinsic.modules.fused.LinearReLU": {
  "lineno": 31,
  "symbols_in_volume": [
   "torch.nn.Sequential"
  ],
  "type": "class"
 },
 "torch.nn.intrinsic.modules.fused.LinearReLU.__init__": {
  "lineno": 34,
  "symbols_in_volume": [
   "torch.nn.Linear",
   "torch.nn.ReLU"
  ],
  "type": "function"
 },
 "torch.nn.intrinsic.qat": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.intrinsic.qat.modules": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.intrinsic.qat.modules.conv_fused": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.intrinsic.qat.modules.conv_fused.ConvBn2d": {
  "lineno": 193,
  "symbols_in_volume": [
   "torch.nn.Conv2d",
   "torch.nn.intrinsic.ConvBn2d"
  ],
  "type": "class"
 },
 "torch.nn.intrinsic.qat.modules.conv_fused.ConvBn2d.__init__": {
  "lineno": 214,
  "symbols_in_volume": [
   "torch.nn.modules.utils._pair"
  ],
  "type": "function"
 },
 "torch.nn.intrinsic.qat.modules.conv_fused.ConvBnReLU2d": {
  "lineno": 236,
  "symbols_in_volume": [
   "torch.nn.intrinsic.ConvBnReLU2d"
  ],
  "type": "class"
 },
 "torch.nn.intrinsic.qat.modules.conv_fused.ConvBnReLU2d.__init__": {
  "lineno": 256,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.intrinsic.qat.modules.conv_fused.ConvBnReLU2d.forward": {
  "lineno": 276,
  "symbols_in_volume": [
   "torch.nn.functional.relu"
  ],
  "type": "function"
 },
 "torch.nn.intrinsic.qat.modules.conv_fused.ConvBnReLU2d.from_float": {
  "lineno": 279,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.intrinsic.qat.modules.conv_fused.ConvReLU2d": {
  "lineno": 283,
  "symbols_in_volume": [
   "torch.nn.intrinsic.ConvReLU2d",
   "torch.nn.qat.Conv2d"
  ],
  "type": "class"
 },
 "torch.nn.intrinsic.qat.modules.conv_fused.ConvReLU2d.__init__": {
  "lineno": 298,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.intrinsic.qat.modules.conv_fused.ConvReLU2d.forward": {
  "lineno": 310,
  "symbols_in_volume": [
   "torch.nn.functional.relu"
  ],
  "type": "function"
 },
 "torch.nn.intrinsic.qat.modules.conv_fused.ConvReLU2d.from_float": {
  "lineno": 314,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.intrinsic.qat.modules.conv_fused._ConvBnNd": {
  "lineno": 11,
  "symbols_in_volume": [
   "torch.nn.modules.conv._ConvNd"
  ],
  "type": "class"
 },
 "torch.nn.intrinsic.qat.modules.conv_fused._ConvBnNd.__init__": {
  "lineno": 15,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.nn.BatchNorm2d",
   "torch.nn.modules.conv._ConvNd.__init__",
   "torch.nn.parameter.Parameter"
  ],
  "type": "function"
 },
 "torch.nn.intrinsic.qat.modules.conv_fused._ConvBnNd._forward": {
  "lineno": 80,
  "symbols_in_volume": [
   "torch.sqrt"
  ],
  "type": "function"
 },
 "torch.nn.intrinsic.qat.modules.conv_fused._ConvBnNd._load_from_state_dict": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.intrinsic.qat.modules.conv_fused._ConvBnNd.extra_repr": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.intrinsic.qat.modules.conv_fused._ConvBnNd.forward": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.intrinsic.qat.modules.conv_fused._ConvBnNd.freeze_bn_stats": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.intrinsic.qat.modules.conv_fused._ConvBnNd.from_float": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.intrinsic.qat.modules.conv_fused._ConvBnNd.reset_bn_parameters": {
  "lineno": 57,
  "symbols_in_volume": [
   "math.sqrt",
   "torch.nn.init._calculate_fan_in_and_fan_out",
   "torch.nn.init.uniform_",
   "torch.nn.init.zeros_"
  ],
  "type": "function"
 },
 "torch.nn.intrinsic.qat.modules.conv_fused._ConvBnNd.reset_parameters": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.intrinsic.qat.modules.conv_fused._ConvBnNd.reset_running_stats": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.intrinsic.qat.modules.conv_fused._ConvBnNd.train": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.intrinsic.qat.modules.conv_fused._ConvBnNd.update_bn_stats": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.intrinsic.qat.modules.conv_fused.freeze_bn_stats": {
  "lineno": 322,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.intrinsic.qat.modules.conv_fused.update_bn_stats": {
  "lineno": 318,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.intrinsic.qat.modules.linear_relu": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.intrinsic.qat.modules.linear_relu.LinearReLU": {
  "lineno": 5,
  "symbols_in_volume": [
   "torch.nn.qat.Linear"
  ],
  "type": "class"
 },
 "torch.nn.intrinsic.qat.modules.linear_relu.LinearReLU.__init__": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.intrinsic.qat.modules.linear_relu.LinearReLU.forward": {
  "lineno": 33,
  "symbols_in_volume": [
   "torch.nn.functional.linear",
   "torch.nn.functional.relu"
  ],
  "type": "function"
 },
 "torch.nn.intrinsic.qat.modules.linear_relu.LinearReLU.from_float": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.intrinsic.quantized": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.intrinsic.quantized.modules": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.intrinsic.quantized.modules.bn_relu": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.intrinsic.quantized.modules.bn_relu.BNReLU2d": {
  "lineno": 8,
  "symbols_in_volume": [
   "torch.nn.intrinsic.BNReLU2d",
   "torch.nn.quantized.BatchNorm2d"
  ],
  "type": "class"
 },
 "torch.nn.intrinsic.quantized.modules.bn_relu.BNReLU2d.__init__": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.intrinsic.quantized.modules.bn_relu.BNReLU2d._get_name": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.intrinsic.quantized.modules.bn_relu.BNReLU2d.forward": {
  "lineno": 23,
  "symbols_in_volume": [
   "torch.ops.quantized.batch_norm2d_relu"
  ],
  "type": "function"
 },
 "torch.nn.intrinsic.quantized.modules.bn_relu.BNReLU2d.from_float": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.intrinsic.quantized.modules.bn_relu.BNReLU3d": {
  "lineno": 41,
  "symbols_in_volume": [
   "torch.nn.intrinsic.BNReLU3d",
   "torch.nn.quantized.BatchNorm3d"
  ],
  "type": "class"
 },
 "torch.nn.intrinsic.quantized.modules.bn_relu.BNReLU3d.__init__": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.intrinsic.quantized.modules.bn_relu.BNReLU3d._get_name": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.intrinsic.quantized.modules.bn_relu.BNReLU3d.forward": {
  "lineno": 56,
  "symbols_in_volume": [
   "torch.ops.quantized.batch_norm3d_relu"
  ],
  "type": "function"
 },
 "torch.nn.intrinsic.quantized.modules.bn_relu.BNReLU3d.from_float": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.intrinsic.quantized.modules.conv_relu": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.intrinsic.quantized.modules.conv_relu.ConvReLU1d": {
  "lineno": 9,
  "symbols_in_volume": [
   "torch.nn.intrinsic.ConvReLU1d",
   "torch.nn.quantized.Conv1d"
  ],
  "type": "class"
 },
 "torch.nn.intrinsic.quantized.modules.conv_relu.ConvReLU1d.__init__": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.intrinsic.quantized.modules.conv_relu.ConvReLU1d._get_name": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.intrinsic.quantized.modules.conv_relu.ConvReLU1d.forward": {
  "lineno": 29,
  "symbols_in_volume": [
   "torch.ops.quantized.conv1d_relu"
  ],
  "type": "function"
 },
 "torch.nn.intrinsic.quantized.modules.conv_relu.ConvReLU1d.from_float": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.intrinsic.quantized.modules.conv_relu.ConvReLU2d": {
  "lineno": 44,
  "symbols_in_volume": [
   "torch.nn.intrinsic.ConvReLU2d",
   "torch.nn.quantized.Conv2d"
  ],
  "type": "class"
 },
 "torch.nn.intrinsic.quantized.modules.conv_relu.ConvReLU2d.__init__": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.intrinsic.quantized.modules.conv_relu.ConvReLU2d._get_name": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.intrinsic.quantized.modules.conv_relu.ConvReLU2d.forward": {
  "lineno": 64,
  "symbols_in_volume": [
   "torch.ops.quantized.conv2d_relu"
  ],
  "type": "function"
 },
 "torch.nn.intrinsic.quantized.modules.conv_relu.ConvReLU2d.from_float": {
  "lineno": 75,
  "symbols_in_volume": [
   "torch.nn.intrinsic.qat.ConvBnReLU2d",
   "torch.nn.utils.fuse_conv_bn_weights"
  ],
  "type": "function"
 },
 "torch.nn.intrinsic.quantized.modules.conv_relu.ConvReLU3d": {
  "lineno": 84,
  "symbols_in_volume": [
   "torch.nn.intrinsic.ConvReLU3d",
   "torch.nn.quantized.Conv3d"
  ],
  "type": "class"
 },
 "torch.nn.intrinsic.quantized.modules.conv_relu.ConvReLU3d.__init__": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.intrinsic.quantized.modules.conv_relu.ConvReLU3d._get_name": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.intrinsic.quantized.modules.conv_relu.ConvReLU3d.forward": {
  "lineno": 103,
  "symbols_in_volume": [
   "torch.ops.quantized.conv3d_relu"
  ],
  "type": "function"
 },
 "torch.nn.intrinsic.quantized.modules.conv_relu.ConvReLU3d.from_float": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.intrinsic.quantized.modules.linear_relu": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.intrinsic.quantized.modules.linear_relu.LinearReLU": {
  "lineno": 5,
  "symbols_in_volume": [
   "torch.nn.intrinsic.LinearReLU",
   "torch.nn.quantized.Linear"
  ],
  "type": "class"
 },
 "torch.nn.intrinsic.quantized.modules.linear_relu.LinearReLU.__init__": {
  "lineno": 24,
  "symbols_in_volume": [
   "torch.qint8"
  ],
  "type": "function"
 },
 "torch.nn.intrinsic.quantized.modules.linear_relu.LinearReLU._get_name": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.intrinsic.quantized.modules.linear_relu.LinearReLU.forward": {
  "lineno": 27,
  "symbols_in_volume": [
   "torch.ops.quantized.linear_relu"
  ],
  "type": "function"
 },
 "torch.nn.intrinsic.quantized.modules.linear_relu.LinearReLU.from_float": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.modules._functions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.modules._functions.CrossMapLRN2d": {
  "lineno": 107,
  "symbols_in_volume": [
   "torch.autograd.function.Function"
  ],
  "type": "class"
 },
 "torch.nn.modules._functions.CrossMapLRN2d.backward": {
  "lineno": 165,
  "symbols_in_volume": [
   "torch.mul",
   "torch.pow",
   "torch.sum"
  ],
  "type": "function"
 },
 "torch.nn.modules._functions.CrossMapLRN2d.forward": {
  "lineno": 109,
  "symbols_in_volume": [
   "torch.pow"
  ],
  "type": "function"
 },
 "torch.nn.modules._functions.SyncBatchNorm": {
  "lineno": 6,
  "symbols_in_volume": [
   "torch.autograd.function.Function"
  ],
  "type": "class"
 },
 "torch.nn.modules._functions.SyncBatchNorm.backward": {
  "lineno": 55,
  "symbols_in_volume": [
   "torch.batch_norm_backward_elemt",
   "torch.batch_norm_backward_reduce",
   "torch.cat",
   "torch.distributed.ReduceOp.SUM",
   "torch.distributed.all_reduce",
   "torch.split"
  ],
  "type": "function"
 },
 "torch.nn.modules._functions.SyncBatchNorm.forward": {
  "lineno": 8,
  "symbols_in_volume": [
   "torch.batch_norm_elemt",
   "torch.batch_norm_gather_stats_with_counts",
   "torch.batch_norm_stats",
   "torch.cat",
   "torch.distributed.all_gather",
   "torch.empty",
   "torch.empty_like",
   "torch.split",
   "torch.stack"
  ],
  "type": "function"
 },
 "torch.nn.modules.activation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.modules.activation.CELU": {
  "lineno": 484,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.activation.CELU.__init__": {
  "lineno": 516,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.activation.CELU.extra_repr": {
  "lineno": 524,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.activation.CELU.forward": {
  "lineno": 521,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.activation.ELU": {
  "lineno": 441,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.activation.ELU.__init__": {
  "lineno": 471,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.activation.ELU.extra_repr": {
  "lineno": 479,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.activation.ELU.forward": {
  "lineno": 476,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.activation.GELU": {
  "lineno": 606,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.activation.GELU.forward": {
  "lineno": 626,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.activation.GLU": {
  "lineno": 573,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.activation.GLU.__init__": {
  "lineno": 595,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.activation.GLU.extra_repr": {
  "lineno": 602,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.activation.GLU.forward": {
  "lineno": 599,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.activation.Hardshrink": {
  "lineno": 630,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.activation.Hardshrink.__init__": {
  "lineno": 660,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.activation.Hardshrink.extra_repr": {
  "lineno": 667,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.activation.Hardshrink.forward": {
  "lineno": 664,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.activation.Hardsigmoid": {
  "lineno": 302,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.activation.Hardsigmoid.__init__": {
  "lineno": 330,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.activation.Hardsigmoid.forward": {
  "lineno": 334,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.activation.Hardswish": {
  "lineno": 400,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.activation.Hardswish.__init__": {
  "lineno": 433,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.activation.Hardswish.forward": {
  "lineno": 437,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.activation.Hardtanh": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.activation.Hardtanh.__init__": {
  "lineno": 215,
  "symbols_in_volume": [
   "typing.Optional",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.nn.modules.activation.Hardtanh.extra_repr": {
  "lineno": 239,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.activation.Hardtanh.forward": {
  "lineno": 236,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.activation.LeakyReLU": {
  "lineno": 671,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.activation.LeakyReLU.__init__": {
  "lineno": 708,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.activation.LeakyReLU.extra_repr": {
  "lineno": 716,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.activation.LeakyReLU.forward": {
  "lineno": 713,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.activation.LogSigmoid": {
  "lineno": 721,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.activation.LogSigmoid.forward": {
  "lineno": 741,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.activation.LogSoftmax": {
  "lineno": 1231,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "class"
 },
 "torch.nn.modules.activation.LogSoftmax.__init__": {
  "lineno": 1259,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.activation.LogSoftmax.__setstate__": {
  "lineno": 1263,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.activation.LogSoftmax.extra_repr": {
  "lineno": 1271,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.activation.LogSoftmax.forward": {
  "lineno": 1268,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.activation.MultiheadAttention": {
  "lineno": 831,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Optional"
  ],
  "type": "class"
 },
 "torch.nn.modules.activation.MultiheadAttention.__init__": {
  "lineno": 862,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.empty",
   "torch.nn.parameter.Parameter"
  ],
  "type": "function"
 },
 "torch.nn.modules.activation.MultiheadAttention.__setstate__": {
  "lineno": 917,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.activation.MultiheadAttention._reset_parameters": {
  "lineno": 901,
  "symbols_in_volume": [
   "torch.nn.init.constant_",
   "torch.nn.init.xavier_normal_",
   "torch.nn.init.xavier_uniform_"
  ],
  "type": "function"
 },
 "torch.nn.modules.activation.MultiheadAttention.forward": {
  "lineno": 924,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.activation.PReLU": {
  "lineno": 988,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.activation.PReLU.__init__": {
  "lineno": 1040,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.nn.parameter.Parameter"
  ],
  "type": "function"
 },
 "torch.nn.modules.activation.PReLU.extra_repr": {
  "lineno": 1048,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.activation.PReLU.forward": {
  "lineno": 1045,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.activation.RReLU": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.activation.RReLU.__init__": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.activation.RReLU.extra_repr": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.activation.RReLU.forward": {
  "lineno": 165,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.activation.ReLU": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.activation.ReLU.__init__": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.activation.ReLU.extra_repr": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.activation.ReLU.forward": {
  "lineno": 101,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.activation.ReLU6": {
  "lineno": 246,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.activation.ReLU6.__init__": {
  "lineno": 269,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.activation.ReLU6.extra_repr": {
  "lineno": 272,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.activation.SELU": {
  "lineno": 529,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.activation.SELU.__init__": {
  "lineno": 561,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.activation.SELU.extra_repr": {
  "lineno": 568,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.activation.SELU.forward": {
  "lineno": 565,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.activation.SiLU": {
  "lineno": 361,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.activation.SiLU.__init__": {
  "lineno": 389,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.activation.SiLU.extra_repr": {
  "lineno": 396,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.activation.SiLU.forward": {
  "lineno": 393,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.activation.Sigmoid": {
  "lineno": 277,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.activation.Sigmoid.forward": {
  "lineno": 298,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.sigmoid"
  ],
  "type": "function"
 },
 "torch.nn.modules.activation.Softmax": {
  "lineno": 1147,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "class"
 },
 "torch.nn.modules.activation.Softmax.__init__": {
  "lineno": 1188,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.activation.Softmax.__setstate__": {
  "lineno": 1192,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.activation.Softmax.extra_repr": {
  "lineno": 1200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.activation.Softmax.forward": {
  "lineno": 1197,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.activation.Softmax2d": {
  "lineno": 1204,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.activation.Softmax2d.forward": {
  "lineno": 1226,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.activation.Softmin": {
  "lineno": 1100,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "class"
 },
 "torch.nn.modules.activation.Softmin.__init__": {
  "lineno": 1132,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.activation.Softmin.__setstate__": {
  "lineno": 1136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.activation.Softmin.extra_repr": {
  "lineno": 1144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.activation.Softmin.forward": {
  "lineno": 1141,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.activation.Softplus": {
  "lineno": 745,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.activation.Softplus.__init__": {
  "lineno": 778,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.activation.Softplus.extra_repr": {
  "lineno": 786,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.activation.Softplus.forward": {
  "lineno": 783,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.activation.Softshrink": {
  "lineno": 790,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.activation.Softshrink.__init__": {
  "lineno": 820,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.activation.Softshrink.extra_repr": {
  "lineno": 827,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.activation.Softshrink.forward": {
  "lineno": 824,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.activation.Softsign": {
  "lineno": 1052,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.activation.Softsign.forward": {
  "lineno": 1072,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.activation.Tanh": {
  "lineno": 338,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.activation.Tanh.forward": {
  "lineno": 358,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.tanh"
  ],
  "type": "function"
 },
 "torch.nn.modules.activation.Tanhshrink": {
  "lineno": 1076,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.activation.Tanhshrink.forward": {
  "lineno": 1096,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.activation.Threshold": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.activation.Threshold.__init__": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.activation.Threshold.extra_repr": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.activation.Threshold.forward": {
  "lineno": 56,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.adaptive": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "module"
 },
 "torch.nn.modules.adaptive.AdaptiveLogSoftmaxWithLoss": {
  "lineno": 18,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "class"
 },
 "torch.nn.modules.adaptive.AdaptiveLogSoftmaxWithLoss.__init__": {
  "lineno": 112,
  "symbols_in_volume": [
   "typing.Sequence"
  ],
  "type": "function"
 },
 "torch.nn.modules.adaptive.AdaptiveLogSoftmaxWithLoss._get_full_log_prob": {
  "lineno": 220,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.adaptive.AdaptiveLogSoftmaxWithLoss.forward": {
  "lineno": 165,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.adaptive.AdaptiveLogSoftmaxWithLoss.log_prob": {
  "lineno": 238,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.adaptive.AdaptiveLogSoftmaxWithLoss.predict": {
  "lineno": 258,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.argmax"
  ],
  "type": "function"
 },
 "torch.nn.modules.adaptive.AdaptiveLogSoftmaxWithLoss.reset_parameters": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.batchnorm": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.modules.batchnorm.BatchNorm1d": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.batchnorm.BatchNorm1d._check_input_dim": {
  "lineno": 206,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.batchnorm.BatchNorm2d": {
  "lineno": 212,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.batchnorm.BatchNorm2d._check_input_dim": {
  "lineno": 279,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.batchnorm.BatchNorm3d": {
  "lineno": 285,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.batchnorm.BatchNorm3d._check_input_dim": {
  "lineno": 353,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.batchnorm.SyncBatchNorm": {
  "lineno": 359,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.batchnorm.SyncBatchNorm.__init__": {
  "lineno": 449,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.batchnorm.SyncBatchNorm._check_input_dim": {
  "lineno": 464,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.batchnorm.SyncBatchNorm._specify_ddp_gpu_num": {
  "lineno": 469,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.batchnorm.SyncBatchNorm.convert_sync_batchnorm": {
  "lineno": 536,
  "symbols_in_volume": [
   "torch.nn.SyncBatchNorm",
   "torch.nn.modules.batchnorm._BatchNorm",
   "torch.no_grad"
  ],
  "type": "function"
 },
 "torch.nn.modules.batchnorm.SyncBatchNorm.forward": {
  "lineno": 474,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.distributed.get_world_size",
   "torch.distributed.group.WORLD"
  ],
  "type": "function"
 },
 "torch.nn.modules.batchnorm._BatchNorm": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.batchnorm._BatchNorm.__init__": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.batchnorm._BatchNorm.forward": {
  "lineno": 97,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.batchnorm._NormBase": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.batchnorm._NormBase.__init__": {
  "lineno": 25,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.long",
   "torch.nn.parameter.Parameter",
   "torch.ones",
   "torch.tensor",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.nn.modules.batchnorm._NormBase._check_input_dim": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.batchnorm._NormBase._load_from_state_dict": {
  "lineno": 74,
  "symbols_in_volume": [
   "torch.long",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.batchnorm._NormBase.extra_repr": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.batchnorm._NormBase.reset_parameters": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.batchnorm._NormBase.reset_running_stats": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.channelshuffle": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.modules.channelshuffle.ChannelShuffle": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.channelshuffle.ChannelShuffle.__init__": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.channelshuffle.ChannelShuffle.extra_repr": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.channelshuffle.ChannelShuffle.forward": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.container": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.TypeVar"
  ],
  "type": "module"
 },
 "torch.nn.modules.container.Container": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.container.Container.__init__": {
  "lineno": 19,
  "symbols_in_volume": [
   "typing.Any",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.nn.modules.container.ModuleDict": {
  "lineno": 235,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.container.ModuleDict.__contains__": {
  "lineno": 302,
  "symbols_in_volume": [
   "torch._jit_internal._copy_to_script_wrapper"
  ],
  "type": "function"
 },
 "torch.nn.modules.container.ModuleDict.__delitem__": {
  "lineno": 291,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.container.ModuleDict.__getitem__": {
  "lineno": 284,
  "symbols_in_volume": [
   "torch._jit_internal._copy_to_script_wrapper"
  ],
  "type": "function"
 },
 "torch.nn.modules.container.ModuleDict.__init__": {
  "lineno": 279,
  "symbols_in_volume": [
   "typing.Mapping",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.container.ModuleDict.__iter__": {
  "lineno": 298,
  "symbols_in_volume": [
   "torch._jit_internal._copy_to_script_wrapper",
   "typing.Iterator"
  ],
  "type": "function"
 },
 "torch.nn.modules.container.ModuleDict.__len__": {
  "lineno": 294,
  "symbols_in_volume": [
   "torch._jit_internal._copy_to_script_wrapper"
  ],
  "type": "function"
 },
 "torch.nn.modules.container.ModuleDict.__setitem__": {
  "lineno": 288,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.container.ModuleDict.clear": {
  "lineno": 306,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.container.ModuleDict.forward": {
  "lineno": 371,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.container.ModuleDict.items": {
  "lineno": 327,
  "symbols_in_volume": [
   "torch._jit_internal._copy_to_script_wrapper",
   "typing.Iterable",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.nn.modules.container.ModuleDict.keys": {
  "lineno": 321,
  "symbols_in_volume": [
   "torch._jit_internal._copy_to_script_wrapper",
   "typing.Iterable"
  ],
  "type": "function"
 },
 "torch.nn.modules.container.ModuleDict.pop": {
  "lineno": 311,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.container.ModuleDict.update": {
  "lineno": 339,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "torch._six.container_abcs.Iterable",
   "torch._six.container_abcs.Mapping",
   "typing.Mapping"
  ],
  "type": "function"
 },
 "torch.nn.modules.container.ModuleDict.values": {
  "lineno": 333,
  "symbols_in_volume": [
   "torch._jit_internal._copy_to_script_wrapper",
   "typing.Iterable"
  ],
  "type": "function"
 },
 "torch.nn.modules.container.ModuleList": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.container.ModuleList.__delitem__": {
  "lineno": 170,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "typing.Union"
  ],
  "type": "function"
 },
 "torch.nn.modules.container.ModuleList.__dir__": {
  "lineno": 191,
  "symbols_in_volume": [
   "torch._jit_internal._copy_to_script_wrapper"
  ],
  "type": "function"
 },
 "torch.nn.modules.container.ModuleList.__getitem__": {
  "lineno": 159,
  "symbols_in_volume": [
   "torch._jit_internal._copy_to_script_wrapper"
  ],
  "type": "function"
 },
 "torch.nn.modules.container.ModuleList.__iadd__": {
  "lineno": 188,
  "symbols_in_volume": [
   "typing.Iterable"
  ],
  "type": "function"
 },
 "torch.nn.modules.container.ModuleList.__init__": {
  "lineno": 145,
  "symbols_in_volume": [
   "typing.Iterable",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.container.ModuleList.__iter__": {
  "lineno": 184,
  "symbols_in_volume": [
   "torch._jit_internal._copy_to_script_wrapper",
   "typing.Iterator"
  ],
  "type": "function"
 },
 "torch.nn.modules.container.ModuleList.__len__": {
  "lineno": 180,
  "symbols_in_volume": [
   "torch._jit_internal._copy_to_script_wrapper"
  ],
  "type": "function"
 },
 "torch.nn.modules.container.ModuleList.__setitem__": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.container.ModuleList._get_abs_string_index": {
  "lineno": 150,
  "symbols_in_volume": [
   "operator.index"
  ],
  "type": "function"
 },
 "torch.nn.modules.container.ModuleList.append": {
  "lineno": 208,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.container.ModuleList.extend": {
  "lineno": 217,
  "symbols_in_volume": [
   "torch._six.container_abcs.Iterable",
   "typing.Iterable"
  ],
  "type": "function"
 },
 "torch.nn.modules.container.ModuleList.forward": {
  "lineno": 231,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.container.ModuleList.insert": {
  "lineno": 197,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.container.ParameterDict": {
  "lineno": 497,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.container.ParameterDict.__call__": {
  "lineno": 641,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.container.ParameterDict.__contains__": {
  "lineno": 561,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.container.ParameterDict.__delitem__": {
  "lineno": 547,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.container.ParameterDict.__getitem__": {
  "lineno": 541,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.container.ParameterDict.__init__": {
  "lineno": 535,
  "symbols_in_volume": [
   "typing.Mapping",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.container.ParameterDict.__iter__": {
  "lineno": 558,
  "symbols_in_volume": [
   "typing.Iterator"
  ],
  "type": "function"
 },
 "torch.nn.modules.container.ParameterDict.__len__": {
  "lineno": 555,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.container.ParameterDict.__setattr__": {
  "lineno": 550,
  "symbols_in_volume": [
   "torch.nn.Parameter",
   "typing.Any",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.nn.modules.container.ParameterDict.__setitem__": {
  "lineno": 544,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.container.ParameterDict._replicate_for_data_parallel": {
  "lineno": 644,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.nn.modules.container.ParameterDict.clear": {
  "lineno": 564,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.container.ParameterDict.extra_repr": {
  "lineno": 630,
  "symbols_in_volume": [
   "torch.typename"
  ],
  "type": "function"
 },
 "torch.nn.modules.container.ParameterDict.items": {
  "lineno": 584,
  "symbols_in_volume": [
   "typing.Iterable",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.nn.modules.container.ParameterDict.keys": {
  "lineno": 579,
  "symbols_in_volume": [
   "typing.Iterable"
  ],
  "type": "function"
 },
 "torch.nn.modules.container.ParameterDict.pop": {
  "lineno": 569,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.container.ParameterDict.update": {
  "lineno": 594,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "torch._six.container_abcs.Iterable",
   "torch._six.container_abcs.Mapping",
   "typing.Mapping"
  ],
  "type": "function"
 },
 "torch.nn.modules.container.ParameterDict.values": {
  "lineno": 589,
  "symbols_in_volume": [
   "typing.Iterable"
  ],
  "type": "function"
 },
 "torch.nn.modules.container.ParameterList": {
  "lineno": 375,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.container.ParameterList.__call__": {
  "lineno": 486,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.container.ParameterList.__dir__": {
  "lineno": 447,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.container.ParameterList.__getitem__": {
  "lineno": 422,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.container.ParameterList.__iadd__": {
  "lineno": 444,
  "symbols_in_volume": [
   "typing.Iterable"
  ],
  "type": "function"
 },
 "torch.nn.modules.container.ParameterList.__init__": {
  "lineno": 399,
  "symbols_in_volume": [
   "typing.Iterable",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.container.ParameterList.__iter__": {
  "lineno": 441,
  "symbols_in_volume": [
   "typing.Iterator"
  ],
  "type": "function"
 },
 "torch.nn.modules.container.ParameterList.__len__": {
  "lineno": 438,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.container.ParameterList.__setattr__": {
  "lineno": 433,
  "symbols_in_volume": [
   "torch.nn.Parameter",
   "typing.Any",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.nn.modules.container.ParameterList.__setitem__": {
  "lineno": 429,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.container.ParameterList._get_abs_string_index": {
  "lineno": 405,
  "symbols_in_volume": [
   "operator.index"
  ],
  "type": "function"
 },
 "torch.nn.modules.container.ParameterList._replicate_for_data_parallel": {
  "lineno": 489,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.nn.modules.container.ParameterList.append": {
  "lineno": 452,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.container.ParameterList.extend": {
  "lineno": 461,
  "symbols_in_volume": [
   "torch._six.container_abcs.Iterable",
   "typing.Iterable"
  ],
  "type": "function"
 },
 "torch.nn.modules.container.ParameterList.extra_repr": {
  "lineno": 475,
  "symbols_in_volume": [
   "torch.typename"
  ],
  "type": "function"
 },
 "torch.nn.modules.container.Sequential": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.container.Sequential.__delitem__": {
  "lineno": 89,
  "symbols_in_volume": [
   "typing.Union"
  ],
  "type": "function"
 },
 "torch.nn.modules.container.Sequential.__dir__": {
  "lineno": 101,
  "symbols_in_volume": [
   "torch._jit_internal._copy_to_script_wrapper"
  ],
  "type": "function"
 },
 "torch.nn.modules.container.Sequential.__getitem__": {
  "lineno": 78,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "torch._jit_internal._copy_to_script_wrapper"
  ],
  "type": "function"
 },
 "torch.nn.modules.container.Sequential.__init__": {
  "lineno": 60,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "typing.Any"
  ],
  "type": "function"
 },
 "torch.nn.modules.container.Sequential.__iter__": {
  "lineno": 107,
  "symbols_in_volume": [
   "torch._jit_internal._copy_to_script_wrapper",
   "typing.Iterator"
  ],
  "type": "function"
 },
 "torch.nn.modules.container.Sequential.__len__": {
  "lineno": 97,
  "symbols_in_volume": [
   "torch._jit_internal._copy_to_script_wrapper"
  ],
  "type": "function"
 },
 "torch.nn.modules.container.Sequential.__setitem__": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.container.Sequential._get_item_by_idx": {
  "lineno": 69,
  "symbols_in_volume": [
   "itertools.islice",
   "operator.index"
  ],
  "type": "function"
 },
 "torch.nn.modules.container.Sequential.forward": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.conv": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.modules.conv.Conv1d": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.conv.Conv1d.__init__": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.conv.Conv1d.forward": {
  "lineno": 253,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.conv.Conv2d": {
  "lineno": 262,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.conv.Conv2d.__init__": {
  "lineno": 394,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.conv.Conv2d._conv_forward": {
  "lineno": 414,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.conv.Conv2d.forward": {
  "lineno": 422,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.conv.Conv3d": {
  "lineno": 425,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.conv.Conv3d.__init__": {
  "lineno": 547,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.conv.Conv3d.forward": {
  "lineno": 567,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.conv.ConvTranspose1d": {
  "lineno": 630,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.conv.ConvTranspose1d.__init__": {
  "lineno": 733,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.conv.ConvTranspose1d.forward": {
  "lineno": 755,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.conv.ConvTranspose2d": {
  "lineno": 766,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.conv.ConvTranspose2d.__init__": {
  "lineno": 898,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.conv.ConvTranspose2d.forward": {
  "lineno": 920,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.conv.ConvTranspose3d": {
  "lineno": 932,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.conv.ConvTranspose3d.__init__": {
  "lineno": 1060,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.conv.ConvTranspose3d.forward": {
  "lineno": 1082,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.conv._ConvNd": {
  "lineno": 17,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "torch.nn.modules.conv._ConvNd.__init__": {
  "lineno": 37,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.nn.parameter.Parameter",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.conv._ConvNd.__setstate__": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.conv._ConvNd.extra_repr": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.conv._ConvNd.reset_parameters": {
  "lineno": 85,
  "symbols_in_volume": [
   "math.sqrt"
  ],
  "type": "function"
 },
 "torch.nn.modules.conv._ConvTransposeMixin": {
  "lineno": 1109,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.conv._ConvTransposeMixin.__init__": {
  "lineno": 1110,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.nn.modules.conv._ConvTransposeNd": {
  "lineno": 576,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.conv._ConvTransposeNd.__init__": {
  "lineno": 577,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.conv._ConvTransposeNd._output_padding": {
  "lineno": 590,
  "symbols_in_volume": [
   "torch.jit.annotate",
   "typing.List"
  ],
  "type": "function"
 },
 "torch.nn.modules.distance": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.modules.distance.CosineSimilarity": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.distance.CosineSimilarity.__init__": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.distance.CosineSimilarity.forward": {
  "lineno": 74,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.distance.PairwiseDistance": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.distance.PairwiseDistance.__init__": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.distance.PairwiseDistance.forward": {
  "lineno": 41,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.dropout": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.modules.dropout.AlphaDropout": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.dropout.AlphaDropout.forward": {
  "lineno": 183,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.dropout.Dropout": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.dropout.Dropout.forward": {
  "lineno": 57,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.dropout.Dropout2d": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.dropout.Dropout2d.forward": {
  "lineno": 99,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.dropout.Dropout3d": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.dropout.Dropout3d.forward": {
  "lineno": 141,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.dropout.FeatureAlphaDropout": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.dropout.FeatureAlphaDropout.forward": {
  "lineno": 232,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.dropout._DropoutNd": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.dropout._DropoutNd.__init__": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.dropout._DropoutNd.extra_repr": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.flatten": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.modules.flatten.Flatten": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.flatten.Flatten.__init__": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.flatten.Flatten.extra_repr": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.flatten.Flatten.forward": {
  "lineno": 39,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.flatten.Unflatten": {
  "lineno": 48,
  "symbols_in_volume": [
   "torch.Size",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "class"
 },
 "torch.nn.modules.flatten.Unflatten.__init__": {
  "lineno": 100,
  "symbols_in_volume": [
   "torch.Size",
   "typing.Union"
  ],
  "type": "function"
 },
 "torch.nn.modules.flatten.Unflatten._require_tuple_int": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.flatten.Unflatten._require_tuple_tuple": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.flatten.Unflatten.extra_repr": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.flatten.Unflatten.forward": {
  "lineno": 132,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.fold": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.modules.fold.Fold": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.fold.Fold.__init__": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.fold.Fold.extra_repr": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.fold.Fold.forward": {
  "lineno": 143,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.fold.Unfold": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.fold.Unfold.__init__": {
  "lineno": 280,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.fold.Unfold.extra_repr": {
  "lineno": 297,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.fold.Unfold.forward": {
  "lineno": 293,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.instancenorm": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.modules.instancenorm.InstanceNorm1d": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.instancenorm.InstanceNorm1d._check_input_dim": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.instancenorm.InstanceNorm2d": {
  "lineno": 141,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.instancenorm.InstanceNorm2d._check_input_dim": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.instancenorm.InstanceNorm3d": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.instancenorm.InstanceNorm3d._check_input_dim": {
  "lineno": 283,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.instancenorm._InstanceNorm": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.instancenorm._InstanceNorm.__init__": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.instancenorm._InstanceNorm._check_input_dim": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.instancenorm._InstanceNorm._load_from_state_dict": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.instancenorm._InstanceNorm.forward": {
  "lineno": 52,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.linear": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.modules.linear.Bilinear": {
  "lineno": 110,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "class"
 },
 "torch.nn.modules.linear.Bilinear.__init__": {
  "lineno": 154,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.nn.parameter.Parameter"
  ],
  "type": "function"
 },
 "torch.nn.modules.linear.Bilinear.extra_repr": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.linear.Bilinear.forward": {
  "lineno": 173,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.linear.Bilinear.reset_parameters": {
  "lineno": 167,
  "symbols_in_volume": [
   "math.sqrt"
  ],
  "type": "function"
 },
 "torch.nn.modules.linear.Identity": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.linear.Identity.__init__": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.linear.Identity.forward": {
  "lineno": 30,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.linear.Linear": {
  "lineno": 34,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "class"
 },
 "torch.nn.modules.linear.Linear.__init__": {
  "lineno": 74,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.nn.parameter.Parameter"
  ],
  "type": "function"
 },
 "torch.nn.modules.linear.Linear.extra_repr": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.linear.Linear.forward": {
  "lineno": 92,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.linear.Linear.reset_parameters": {
  "lineno": 85,
  "symbols_in_volume": [
   "math.sqrt"
  ],
  "type": "function"
 },
 "torch.nn.modules.linear._LinearWithBias": {
  "lineno": 103,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "class"
 },
 "torch.nn.modules.linear._LinearWithBias.__init__": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.loss": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.modules.loss.BCELoss": {
  "lineno": 449,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.loss.BCELoss.__init__": {
  "lineno": 526,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.loss.BCELoss.forward": {
  "lineno": 529,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.loss.BCEWithLogitsLoss": {
  "lineno": 533,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.loss.BCEWithLogitsLoss.__init__": {
  "lineno": 622,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.loss.BCEWithLogitsLoss.forward": {
  "lineno": 628,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.loss.CTCLoss": {
  "lineno": 1376,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.loss.CTCLoss.__init__": {
  "lineno": 1495,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.loss.CTCLoss.forward": {
  "lineno": 1500,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.loss.CosineEmbeddingLoss": {
  "lineno": 1012,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.loss.CosineEmbeddingLoss.__init__": {
  "lineno": 1051,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.loss.CosineEmbeddingLoss.forward": {
  "lineno": 1055,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.loss.CrossEntropyLoss": {
  "lineno": 866,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.loss.CrossEntropyLoss.__init__": {
  "lineno": 955,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.loss.CrossEntropyLoss.forward": {
  "lineno": 960,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.loss.HingeEmbeddingLoss": {
  "lineno": 635,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.loss.HingeEmbeddingLoss.__init__": {
  "lineno": 687,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.loss.HingeEmbeddingLoss.forward": {
  "lineno": 691,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.loss.KLDivLoss": {
  "lineno": 299,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.loss.KLDivLoss.__init__": {
  "lineno": 375,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.loss.KLDivLoss.forward": {
  "lineno": 379,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.loss.L1Loss": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.loss.L1Loss.__init__": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.loss.L1Loss.forward": {
  "lineno": 93,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.loss.MSELoss": {
  "lineno": 383,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.loss.MSELoss.__init__": {
  "lineno": 442,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.loss.MSELoss.forward": {
  "lineno": 445,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.loss.MarginRankingLoss": {
  "lineno": 1059,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.loss.MarginRankingLoss.__init__": {
  "lineno": 1108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.loss.MarginRankingLoss.forward": {
  "lineno": 1112,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.loss.MultiLabelMarginLoss": {
  "lineno": 695,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.loss.MultiLabelMarginLoss.__init__": {
  "lineno": 752,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.loss.MultiLabelMarginLoss.forward": {
  "lineno": 755,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.loss.MultiLabelSoftMarginLoss": {
  "lineno": 965,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.loss.MultiLabelSoftMarginLoss.__init__": {
  "lineno": 1005,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.loss.MultiLabelSoftMarginLoss.forward": {
  "lineno": 1008,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.loss.MultiMarginLoss": {
  "lineno": 1116,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.loss.MultiMarginLoss.__init__": {
  "lineno": 1166,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.loss.MultiMarginLoss.forward": {
  "lineno": 1175,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.loss.NLLLoss": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.loss.NLLLoss.__init__": {
  "lineno": 207,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.loss.NLLLoss.forward": {
  "lineno": 212,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.loss.NLLLoss2d": {
  "lineno": 216,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.loss.NLLLoss2d.__init__": {
  "lineno": 217,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Optional",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.nn.modules.loss.PoissonNLLLoss": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.loss.PoissonNLLLoss.__init__": {
  "lineno": 287,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.loss.PoissonNLLLoss.forward": {
  "lineno": 294,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.loss.SmoothL1Loss": {
  "lineno": 759,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.loss.SmoothL1Loss.__init__": {
  "lineno": 817,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.loss.SmoothL1Loss.forward": {
  "lineno": 821,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.loss.SoftMarginLoss": {
  "lineno": 825,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.loss.SoftMarginLoss.__init__": {
  "lineno": 859,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.loss.SoftMarginLoss.forward": {
  "lineno": 862,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.loss.TripletMarginLoss": {
  "lineno": 1180,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.loss.TripletMarginLoss.__init__": {
  "lineno": 1249,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.loss.TripletMarginLoss.forward": {
  "lineno": 1257,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.loss.TripletMarginWithDistanceLoss": {
  "lineno": 1262,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.loss.TripletMarginWithDistanceLoss.__init__": {
  "lineno": 1363,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Callable",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.loss.TripletMarginWithDistanceLoss.forward": {
  "lineno": 1370,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.loss._Loss": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.loss._Loss.__init__": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.loss._WeightedLoss": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.loss._WeightedLoss.__init__": {
  "lineno": 24,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.module": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "torch.Tensor",
   "typing.Tuple",
   "typing.TypeVar",
   "typing.Union"
  ],
  "type": "module"
 },
 "torch.nn.modules.module.Module": {
  "lineno": 178,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Any",
   "typing.Callable",
   "typing.Mapping",
   "typing.TypeVar"
  ],
  "type": "class"
 },
 "torch.nn.modules.module.Module.__delattr__": {
  "lineno": 828,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.module.Module.__dir__": {
  "lineno": 1382,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.module.Module.__getattr__": {
  "lineno": 765,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Union"
  ],
  "type": "function"
 },
 "torch.nn.modules.module.Module.__init__": {
  "lineno": 223,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "torch._C._log_api_usage_once"
  ],
  "type": "function"
 },
 "torch.nn.modules.module.Module.__repr__": {
  "lineno": 1357,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.module.Module.__setattr__": {
  "lineno": 781,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.typename",
   "typing.Union"
  ],
  "type": "function"
 },
 "torch.nn.modules.module.Module.__setattr__.remove_from": {
  "lineno": 782,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.module.Module.__setstate__": {
  "lineno": 753,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "torch.nn.modules.module.Module._apply": {
  "lineno": 357,
  "symbols_in_volume": [
   "torch.no_grad"
  ],
  "type": "function"
 },
 "torch.nn.modules.module.Module._apply.compute_should_use_set_data": {
  "lineno": 361,
  "symbols_in_volume": [
   "torch.__future__.get_overwrite_module_params_on_conversion",
   "torch._has_compatible_shallow_copy_type"
  ],
  "type": "function"
 },
 "torch.nn.modules.module.Module._call_impl": {
  "lineno": 715,
  "symbols_in_volume": [
   "functools.partial",
   "functools.update_wrapper",
   "itertools.chain",
   "torch.Tensor",
   "torch._C._get_tracing_state"
  ],
  "type": "function"
 },
 "torch.nn.modules.module.Module._get_name": {
  "lineno": 1345,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.module.Module._load_from_state_dict": {
  "lineno": 924,
  "symbols_in_volume": [
   "itertools.chain",
   "torch.no_grad"
  ],
  "type": "function"
 },
 "torch.nn.modules.module.Module._named_members": {
  "lineno": 1055,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.module.Module._register_load_state_dict_pre_hook": {
  "lineno": 914,
  "symbols_in_volume": [
   "torch.utils.hooks.RemovableHandle"
  ],
  "type": "function"
 },
 "torch.nn.modules.module.Module._register_state_dict_hook": {
  "lineno": 839,
  "symbols_in_volume": [
   "torch.utils.hooks.RemovableHandle"
  ],
  "type": "function"
 },
 "torch.nn.modules.module.Module._replicate_for_data_parallel": {
  "lineno": 1395,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "torch.nn.modules.module.Module._save_to_state_dict": {
  "lineno": 850,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.module.Module._slow_forward": {
  "lineno": 696,
  "symbols_in_volume": [
   "torch._C.ScriptMethod",
   "torch._C._get_tracing_state",
   "torch.jit._trace._trace_module_map"
  ],
  "type": "function"
 },
 "torch.nn.modules.module.Module.add_module": {
  "lineno": 333,
  "symbols_in_volume": [
   "torch._six.string_classes",
   "torch.typename",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.module.Module.apply": {
  "lineno": 406,
  "symbols_in_volume": [
   "typing.Callable"
  ],
  "type": "function"
 },
 "torch.nn.modules.module.Module.bfloat16": {
  "lineno": 508,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.module.Module.buffers": {
  "lineno": 1118,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Iterator"
  ],
  "type": "function"
 },
 "torch.nn.modules.module.Module.children": {
  "lineno": 1166,
  "symbols_in_volume": [
   "typing.Iterator"
  ],
  "type": "function"
 },
 "torch.nn.modules.module.Module.cpu": {
  "lineno": 465,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.module.Module.cuda": {
  "lineno": 449,
  "symbols_in_volume": [
   "torch.device",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "torch.nn.modules.module.Module.double": {
  "lineno": 492,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.module.Module.eval": {
  "lineno": 1280,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.module.Module.extra_repr": {
  "lineno": 1348,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.module.Module.float": {
  "lineno": 484,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.module.Module.half": {
  "lineno": 500,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.module.Module.load_state_dict": {
  "lineno": 1000,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Dict",
   "typing.Union"
  ],
  "type": "function"
 },
 "torch.nn.modules.module.Module.load_state_dict.load": {
  "lineno": 1029,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.module.Module.modules": {
  "lineno": 1195,
  "symbols_in_volume": [
   "typing.Iterator"
  ],
  "type": "function"
 },
 "torch.nn.modules.module.Module.named_buffers": {
  "lineno": 1140,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Iterator",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.nn.modules.module.Module.named_children": {
  "lineno": 1175,
  "symbols_in_volume": [
   "typing.Iterator",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.nn.modules.module.Module.named_modules": {
  "lineno": 1222,
  "symbols_in_volume": [
   "typing.Optional",
   "typing.Set"
  ],
  "type": "function"
 },
 "torch.nn.modules.module.Module.named_parameters": {
  "lineno": 1092,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Iterator",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.nn.modules.module.Module.parameters": {
  "lineno": 1068,
  "symbols_in_volume": [
   "typing.Iterator"
  ],
  "type": "function"
 },
 "torch.nn.modules.module.Module.register_backward_hook": {
  "lineno": 614,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.utils.hooks.RemovableHandle",
   "typing.Callable",
   "typing.Union"
  ],
  "type": "function"
 },
 "torch.nn.modules.module.Module.register_buffer": {
  "lineno": 242,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._six.string_classes",
   "torch.jit.ScriptModule",
   "torch.typename",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.module.Module.register_forward_hook": {
  "lineno": 673,
  "symbols_in_volume": [
   "torch.utils.hooks.RemovableHandle",
   "typing.Callable"
  ],
  "type": "function"
 },
 "torch.nn.modules.module.Module.register_forward_pre_hook": {
  "lineno": 650,
  "symbols_in_volume": [
   "torch.utils.hooks.RemovableHandle",
   "typing.Callable"
  ],
  "type": "function"
 },
 "torch.nn.modules.module.Module.register_parameter": {
  "lineno": 294,
  "symbols_in_volume": [
   "torch._six.string_classes",
   "torch.typename",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.module.Module.requires_grad_": {
  "lineno": 1295,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.module.Module.share_memory": {
  "lineno": 1342,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.module.Module.state_dict": {
  "lineno": 884,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "torch.nn.modules.module.Module.to": {
  "lineno": 529,
  "symbols_in_volume": [
   "torch._C._nn._parse_to",
   "torch.device",
   "torch.dtype",
   "torch.dtype.is_floating_point"
  ],
  "type": "function"
 },
 "torch.nn.modules.module.Module.to.convert": {
  "lineno": 607,
  "symbols_in_volume": [
   "torch.device",
   "torch.dtype"
  ],
  "type": "function"
 },
 "torch.nn.modules.module.Module.train": {
  "lineno": 1260,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.module.Module.type": {
  "lineno": 473,
  "symbols_in_volume": [
   "torch.dtype",
   "typing.Union"
  ],
  "type": "function"
 },
 "torch.nn.modules.module.Module.zero_grad": {
  "lineno": 1316,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.nn.modules.module.ModuleAttributeError": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.module._IncompatibleKeys": {
  "lineno": 20,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "class"
 },
 "torch.nn.modules.module._IncompatibleKeys.__repr__": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.module._addindent": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.module._forward_unimplemented": {
  "lineno": 164,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "torch.nn.modules.module.register_module_backward_hook": {
  "lineno": 120,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.utils.hooks.RemovableHandle",
   "typing.Callable",
   "typing.Union"
  ],
  "type": "function"
 },
 "torch.nn.modules.module.register_module_forward_hook": {
  "lineno": 89,
  "symbols_in_volume": [
   "torch.utils.hooks.RemovableHandle",
   "typing.Callable"
  ],
  "type": "function"
 },
 "torch.nn.modules.module.register_module_forward_pre_hook": {
  "lineno": 57,
  "symbols_in_volume": [
   "torch.utils.hooks.RemovableHandle",
   "typing.Callable"
  ],
  "type": "function"
 },
 "torch.nn.modules.normalization": {
  "lineno": null,
  "symbols_in_volume": [
   "torch.Size",
   "typing.List",
   "typing.Union"
  ],
  "type": "module"
 },
 "torch.nn.modules.normalization.CrossMapLRN2d": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.normalization.CrossMapLRN2d.__init__": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.normalization.CrossMapLRN2d.extra_repr": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.normalization.CrossMapLRN2d.forward": {
  "lineno": 75,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.normalization.GroupNorm": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.normalization.GroupNorm.__init__": {
  "lineno": 225,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.nn.parameter.Parameter"
  ],
  "type": "function"
 },
 "torch.nn.modules.normalization.GroupNorm.extra_repr": {
  "lineno": 248,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.normalization.GroupNorm.forward": {
  "lineno": 244,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.normalization.GroupNorm.reset_parameters": {
  "lineno": 239,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.normalization.LayerNorm": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.normalization.LayerNorm.__init__": {
  "lineno": 148,
  "symbols_in_volume": [
   "numbers.Integral",
   "torch.Tensor",
   "torch.nn.parameter.Parameter"
  ],
  "type": "function"
 },
 "torch.nn.modules.normalization.LayerNorm.extra_repr": {
  "lineno": 172,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.normalization.LayerNorm.forward": {
  "lineno": 168,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.normalization.LayerNorm.reset_parameters": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.normalization.LocalResponseNorm": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.normalization.LocalResponseNorm.__init__": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.normalization.LocalResponseNorm.extra_repr": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.normalization.LocalResponseNorm.forward": {
  "lineno": 54,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.padding": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.modules.padding.ConstantPad1d": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.padding.ConstantPad1d.__init__": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.padding.ConstantPad2d": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.padding.ConstantPad2d.__init__": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.padding.ConstantPad3d": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.padding.ConstantPad3d.__init__": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.padding.ReflectionPad1d": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.padding.ReflectionPad1d.__init__": {
  "lineno": 211,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.padding.ReflectionPad2d": {
  "lineno": 216,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.padding.ReflectionPad2d.__init__": {
  "lineno": 262,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.padding.ReplicationPad1d": {
  "lineno": 277,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.padding.ReplicationPad1d.__init__": {
  "lineno": 312,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.padding.ReplicationPad2d": {
  "lineno": 317,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.padding.ReplicationPad2d.__init__": {
  "lineno": 363,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.padding.ReplicationPad3d": {
  "lineno": 368,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.padding.ReplicationPad3d.__init__": {
  "lineno": 402,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.padding.ZeroPad2d": {
  "lineno": 407,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.padding.ZeroPad2d.__init__": {
  "lineno": 453,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.padding._ConstantPadNd": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.padding._ConstantPadNd.__init__": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.padding._ConstantPadNd.extra_repr": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.padding._ConstantPadNd.forward": {
  "lineno": 20,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.padding._ReflectionPadNd": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.padding._ReflectionPadNd.extra_repr": {
  "lineno": 172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.padding._ReflectionPadNd.forward": {
  "lineno": 169,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.padding._ReplicationPadNd": {
  "lineno": 267,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.padding._ReplicationPadNd.extra_repr": {
  "lineno": 273,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.padding._ReplicationPadNd.forward": {
  "lineno": 270,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.pixelshuffle": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.modules.pixelshuffle.PixelShuffle": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.pixelshuffle.PixelShuffle.__init__": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.pixelshuffle.PixelShuffle.extra_repr": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.pixelshuffle.PixelShuffle.forward": {
  "lineno": 45,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.pooling": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.modules.pooling.AdaptiveAvgPool1d": {
  "lineno": 1053,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.pooling.AdaptiveAvgPool1d.forward": {
  "lineno": 1072,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.pooling.AdaptiveAvgPool2d": {
  "lineno": 1076,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.pooling.AdaptiveAvgPool2d.forward": {
  "lineno": 1106,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.pooling.AdaptiveAvgPool3d": {
  "lineno": 1110,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.pooling.AdaptiveAvgPool3d.forward": {
  "lineno": 1140,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.pooling.AdaptiveMaxPool1d": {
  "lineno": 944,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.pooling.AdaptiveMaxPool1d.forward": {
  "lineno": 965,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.pooling.AdaptiveMaxPool2d": {
  "lineno": 969,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.pooling.AdaptiveMaxPool2d.forward": {
  "lineno": 1001,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.pooling.AdaptiveMaxPool3d": {
  "lineno": 1005,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.pooling.AdaptiveMaxPool3d.forward": {
  "lineno": 1038,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.pooling.AvgPool1d": {
  "lineno": 461,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.pooling.AvgPool1d.__init__": {
  "lineno": 509,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.pooling.AvgPool1d.forward": {
  "lineno": 518,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.pooling.AvgPool2d": {
  "lineno": 524,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.pooling.AvgPool2d.__init__": {
  "lineno": 583,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.pooling.AvgPool2d.forward": {
  "lineno": 593,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.pooling.AvgPool3d": {
  "lineno": 598,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.pooling.AvgPool3d.__init__": {
  "lineno": 664,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.pooling.AvgPool3d.__setstate__": {
  "lineno": 678,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.pooling.AvgPool3d.forward": {
  "lineno": 674,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.pooling.FractionalMaxPool2d": {
  "lineno": 685,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.pooling.FractionalMaxPool2d.__init__": {
  "lineno": 723,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.pooling.FractionalMaxPool2d.forward": {
  "lineno": 742,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.pooling.FractionalMaxPool3d": {
  "lineno": 749,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.pooling.FractionalMaxPool3d.__init__": {
  "lineno": 786,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.pooling.FractionalMaxPool3d.forward": {
  "lineno": 805,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.pooling.LPPool1d": {
  "lineno": 831,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.pooling.LPPool1d.forward": {
  "lineno": 868,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.pooling.LPPool2d": {
  "lineno": 873,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.pooling.LPPool2d.forward": {
  "lineno": 923,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.pooling.MaxPool1d": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.pooling.MaxPool1d.forward": {
  "lineno": 82,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.pooling.MaxPool2d": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.pooling.MaxPool2d.forward": {
  "lineno": 152,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.pooling.MaxPool3d": {
  "lineno": 158,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.pooling.MaxPool3d.forward": {
  "lineno": 226,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.pooling.MaxUnpool1d": {
  "lineno": 240,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.pooling.MaxUnpool1d.__init__": {
  "lineno": 298,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.pooling.MaxUnpool1d.forward": {
  "lineno": 304,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.pooling.MaxUnpool2d": {
  "lineno": 309,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.pooling.MaxUnpool2d.__init__": {
  "lineno": 375,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.pooling.MaxUnpool2d.forward": {
  "lineno": 381,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.pooling.MaxUnpool3d": {
  "lineno": 386,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.pooling.MaxUnpool3d.__init__": {
  "lineno": 441,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.pooling.MaxUnpool3d.forward": {
  "lineno": 447,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.pooling._AdaptiveAvgPoolNd": {
  "lineno": 1042,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.pooling._AdaptiveAvgPoolNd.__init__": {
  "lineno": 1045,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.pooling._AdaptiveAvgPoolNd.extra_repr": {
  "lineno": 1049,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.pooling._AdaptiveMaxPoolNd": {
  "lineno": 928,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.pooling._AdaptiveMaxPoolNd.__init__": {
  "lineno": 932,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.pooling._AdaptiveMaxPoolNd.extra_repr": {
  "lineno": 937,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.pooling._AvgPoolNd": {
  "lineno": 452,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.pooling._AvgPoolNd.extra_repr": {
  "lineno": 455,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.pooling._LPPoolNd": {
  "lineno": 812,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.pooling._LPPoolNd.__init__": {
  "lineno": 818,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.pooling._LPPoolNd.extra_repr": {
  "lineno": 826,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.pooling._MaxPoolNd": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.pooling._MaxPoolNd.__init__": {
  "lineno": 17,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.pooling._MaxPoolNd.extra_repr": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.pooling._MaxUnpoolNd": {
  "lineno": 232,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.pooling._MaxUnpoolNd.extra_repr": {
  "lineno": 234,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.rnn": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.modules.rnn.GRU": {
  "lineno": 596,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.rnn.GRU.__init__": {
  "lineno": 701,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.rnn.GRU.forward": {
  "lineno": 714,
  "symbols_in_volume": [
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.nn.modules.rnn.GRUCell": {
  "lineno": 978,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.rnn.GRUCell.__init__": {
  "lineno": 1040,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.rnn.GRUCell.forward": {
  "lineno": 1043,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.zeros",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.rnn.LSTM": {
  "lineno": 419,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.rnn.LSTM.__init__": {
  "lineno": 526,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.rnn.LSTM.check_forward_args": {
  "lineno": 529,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.nn.modules.rnn.LSTM.forward": {
  "lineno": 555,
  "symbols_in_volume": [
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.nn.modules.rnn.LSTM.permute_hidden": {
  "lineno": 538,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.nn.modules.rnn.LSTMCell": {
  "lineno": 900,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.rnn.LSTMCell.__init__": {
  "lineno": 961,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.rnn.LSTMCell.forward": {
  "lineno": 964,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.zeros",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.nn.modules.rnn.RNN": {
  "lineno": 297,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.rnn.RNN.__init__": {
  "lineno": 396,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.rnn.RNNBase": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.rnn.RNNBase.__init__": {
  "lineno": 38,
  "symbols_in_volume": [
   "numbers.Number",
   "torch.Tensor",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.nn.modules.rnn.RNNBase.__setattr__": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.rnn.RNNBase.__setstate__": {
  "lineno": 260,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.rnn.RNNBase._apply": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.rnn.RNNBase._replicate_for_data_parallel": {
  "lineno": 288,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.rnn.RNNBase.all_weights": {
  "lineno": 284,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "torch.nn.modules.rnn.RNNBase.check_forward_args": {
  "lineno": 198,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.rnn.RNNBase.check_hidden_size": {
  "lineno": 193,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.nn.modules.rnn.RNNBase.check_input": {
  "lineno": 171,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.rnn.RNNBase.extra_repr": {
  "lineno": 246,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.rnn.RNNBase.flatten_parameters": {
  "lineno": 110,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._cudnn_rnn_flatten_weight",
   "torch._use_cudnn_rnn_flatten_weight",
   "torch.backends.cudnn.is_acceptable",
   "torch.backends.cudnn.rnn.get_cudnn_mode",
   "torch.cuda.device_of",
   "torch.no_grad"
  ],
  "type": "function"
 },
 "torch.nn.modules.rnn.RNNBase.forward": {
  "lineno": 209,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.zeros",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.nn.modules.rnn.RNNBase.get_expected_hidden_size": {
  "lineno": 182,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.nn.modules.rnn.RNNBase.permute_hidden": {
  "lineno": 204,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.rnn.RNNBase.reset_parameters": {
  "lineno": 166,
  "symbols_in_volume": [
   "math.sqrt"
  ],
  "type": "function"
 },
 "torch.nn.modules.rnn.RNNCell": {
  "lineno": 812,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.rnn.RNNCell.__init__": {
  "lineno": 872,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.rnn.RNNCell.forward": {
  "lineno": 876,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.zeros",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.rnn.RNNCellBase": {
  "lineno": 755,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "class"
 },
 "torch.nn.modules.rnn.RNNCellBase.__init__": {
  "lineno": 766,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.rnn.RNNCellBase.check_forward_hidden": {
  "lineno": 795,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.rnn.RNNCellBase.check_forward_input": {
  "lineno": 789,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.rnn.RNNCellBase.extra_repr": {
  "lineno": 781,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.rnn.RNNCellBase.reset_parameters": {
  "lineno": 806,
  "symbols_in_volume": [
   "math.sqrt"
  ],
  "type": "function"
 },
 "torch.nn.modules.rnn.apply_permutation": {
  "lineno": 20,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.sparse": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.modules.sparse.Embedding": {
  "lineno": 12,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "class"
 },
 "torch.nn.modules.sparse.Embedding.__init__": {
  "lineno": 92,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.nn.parameter.Parameter",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.sparse.Embedding.extra_repr": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.sparse.Embedding.forward": {
  "lineno": 123,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.sparse.Embedding.from_pretrained": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.sparse.Embedding.reset_parameters": {
  "lineno": 117,
  "symbols_in_volume": [
   "torch.no_grad"
  ],
  "type": "function"
 },
 "torch.nn.modules.sparse.EmbeddingBag": {
  "lineno": 185,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "class"
 },
 "torch.nn.modules.sparse.EmbeddingBag.__init__": {
  "lineno": 278,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.nn.parameter.Parameter",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.sparse.EmbeddingBag.extra_repr": {
  "lineno": 308,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.sparse.EmbeddingBag.forward": {
  "lineno": 302,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.sparse.EmbeddingBag.from_pretrained": {
  "lineno": 319,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.sparse.EmbeddingBag.reset_parameters": {
  "lineno": 299,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.transformer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.modules.transformer.Transformer": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.transformer.Transformer.__init__": {
  "lineno": 45,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.transformer.Transformer._reset_parameters": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.transformer.Transformer.forward": {
  "lineno": 69,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.transformer.Transformer.generate_square_subsequent_mask": {
  "lineno": 129,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.ones",
   "torch.triu"
  ],
  "type": "function"
 },
 "torch.nn.modules.transformer.TransformerDecoder": {
  "lineno": 189,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.transformer.TransformerDecoder.__init__": {
  "lineno": 206,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.transformer.TransformerDecoder.forward": {
  "lineno": 212,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.transformer.TransformerDecoderLayer": {
  "lineno": 303,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.transformer.TransformerDecoderLayer.__init__": {
  "lineno": 325,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.transformer.TransformerDecoderLayer.__setstate__": {
  "lineno": 343,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.transformer.TransformerDecoderLayer.forward": {
  "lineno": 348,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.transformer.TransformerEncoder": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.transformer.TransformerEncoder.__init__": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.transformer.TransformerEncoder.forward": {
  "lineno": 167,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.transformer.TransformerEncoderLayer": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.transformer.TransformerEncoderLayer.__init__": {
  "lineno": 262,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.transformer.TransformerEncoderLayer.__setstate__": {
  "lineno": 277,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.transformer.TransformerEncoderLayer.forward": {
  "lineno": 282,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.transformer._get_activation_fn": {
  "lineno": 381,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.transformer._get_clones": {
  "lineno": 377,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "torch.nn.modules.upsampling": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.modules.upsampling.Upsample": {
  "lineno": 9,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "class"
 },
 "torch.nn.modules.upsampling.Upsample.__init__": {
  "lineno": 128,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.upsampling.Upsample.extra_repr": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.upsampling.Upsample.forward": {
  "lineno": 140,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.modules.upsampling.UpsamplingBilinear2d": {
  "lineno": 197,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.upsampling.UpsamplingBilinear2d.__init__": {
  "lineno": 239,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.upsampling.UpsamplingNearest2d": {
  "lineno": 152,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.modules.upsampling.UpsamplingNearest2d.__init__": {
  "lineno": 193,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.modules.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.modules.utils._list_with_default": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.utils._ntuple": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.modules.utils._ntuple.parse": {
  "lineno": 8,
  "symbols_in_volume": [
   "itertools.repeat",
   "torch._six.container_abcs.Iterable"
  ],
  "type": "function"
 },
 "torch.nn.modules.utils._reverse_repeat_tuple": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.parallel": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.parallel.DistributedDataParallelCPU": {
  "lineno": 10,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.nn.parallel._functions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.parallel._functions.Broadcast": {
  "lineno": 9,
  "symbols_in_volume": [
   "torch.autograd.Function"
  ],
  "type": "class"
 },
 "torch.nn.parallel._functions.Broadcast.backward": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.parallel._functions.Broadcast.forward": {
  "lineno": 11,
  "symbols_in_volume": [
   "torch._utils._get_device_index"
  ],
  "type": "function"
 },
 "torch.nn.parallel._functions.Gather": {
  "lineno": 51,
  "symbols_in_volume": [
   "torch.autograd.Function"
  ],
  "type": "class"
 },
 "torch.nn.parallel._functions.Gather.backward": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.parallel._functions.Gather.forward": {
  "lineno": 53,
  "symbols_in_volume": [
   "torch._utils._get_device_index",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.nn.parallel._functions.ReduceAddCoalesced": {
  "lineno": 36,
  "symbols_in_volume": [
   "torch.autograd.Function"
  ],
  "type": "class"
 },
 "torch.nn.parallel._functions.ReduceAddCoalesced.backward": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.parallel._functions.ReduceAddCoalesced.forward": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.parallel._functions.Scatter": {
  "lineno": 81,
  "symbols_in_volume": [
   "torch.autograd.Function"
  ],
  "type": "class"
 },
 "torch.nn.parallel._functions.Scatter.backward": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.parallel._functions.Scatter.forward": {
  "lineno": 83,
  "symbols_in_volume": [
   "torch._utils._get_device_index",
   "torch.cuda.current_stream",
   "torch.cuda.device",
   "torch.cuda.is_available"
  ],
  "type": "function"
 },
 "torch.nn.parallel._functions._get_stream": {
  "lineno": 111,
  "symbols_in_volume": [
   "torch.cuda.Stream",
   "torch.cuda.device_count"
  ],
  "type": "function"
 },
 "torch.nn.parallel.comm": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.parallel.comm.broadcast": {
  "lineno": 8,
  "symbols_in_volume": [
   "torch._C._broadcast",
   "torch._C._broadcast_out",
   "torch._utils._get_device_index"
  ],
  "type": "function"
 },
 "torch.nn.parallel.comm.broadcast_coalesced": {
  "lineno": 40,
  "symbols_in_volume": [
   "torch._C._broadcast_coalesced",
   "torch._utils._get_device_index"
  ],
  "type": "function"
 },
 "torch.nn.parallel.comm.gather": {
  "lineno": 198,
  "symbols_in_volume": [
   "torch._C._gather",
   "torch._C._gather_out",
   "torch._utils._get_device_index",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.nn.parallel.comm.reduce_add": {
  "lineno": 59,
  "symbols_in_volume": [
   "torch._utils._get_device_index",
   "torch.cuda.nccl.is_available",
   "torch.cuda.nccl.reduce",
   "torch.device",
   "torch.empty_like"
  ],
  "type": "function"
 },
 "torch.nn.parallel.comm.reduce_add_coalesced": {
  "lineno": 105,
  "symbols_in_volume": [
   "torch._utils._flatten_dense_tensors",
   "torch._utils._reorder_tensors_as",
   "torch._utils._take_tensors",
   "torch._utils._unflatten_dense_tensors"
  ],
  "type": "function"
 },
 "torch.nn.parallel.comm.scatter": {
  "lineno": 150,
  "symbols_in_volume": [
   "torch._C._scatter",
   "torch._C._scatter_out",
   "torch._utils._get_device_index"
  ],
  "type": "function"
 },
 "torch.nn.parallel.data_parallel": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.parallel.data_parallel.DataParallel": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.parallel.data_parallel.DataParallel.__init__": {
  "lineno": 121,
  "symbols_in_volume": [
   "torch._utils._get_all_device_indices",
   "torch._utils._get_available_device_type",
   "torch._utils._get_device_index",
   "torch.device"
  ],
  "type": "function"
 },
 "torch.nn.parallel.data_parallel.DataParallel.forward": {
  "lineno": 147,
  "symbols_in_volume": [
   "itertools.chain"
  ],
  "type": "function"
 },
 "torch.nn.parallel.data_parallel.DataParallel.gather": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.parallel.data_parallel.DataParallel.parallel_apply": {
  "lineno": 170,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.parallel.data_parallel.DataParallel.replicate": {
  "lineno": 164,
  "symbols_in_volume": [
   "torch.is_grad_enabled"
  ],
  "type": "function"
 },
 "torch.nn.parallel.data_parallel.DataParallel.scatter": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.parallel.data_parallel._check_balance": {
  "lineno": 16,
  "symbols_in_volume": [
   "torch._utils._get_device_index",
   "torch._utils._get_devices_properties"
  ],
  "type": "function"
 },
 "torch.nn.parallel.data_parallel._check_balance.warn_imbalance": {
  "lineno": 25,
  "symbols_in_volume": [
   "operator.itemgetter",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.nn.parallel.data_parallel.data_parallel": {
  "lineno": 177,
  "symbols_in_volume": [
   "itertools.chain",
   "torch._utils._get_all_device_indices",
   "torch._utils._get_available_device_type",
   "torch._utils._get_device_index",
   "torch.device"
  ],
  "type": "function"
 },
 "torch.nn.parallel.distributed": {
  "lineno": null,
  "symbols_in_volume": [
   "torch.distributed.is_available"
  ],
  "type": "module"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel.__getstate__": {
  "lineno": 537,
  "symbols_in_volume": [
   "copy.copy"
  ],
  "type": "function"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel.__init__": {
  "lineno": 334,
  "symbols_in_volume": [
   "torch._utils._get_all_device_indices",
   "torch._utils._get_device_index",
   "torch.distributed.distributed_c10d._get_default_group",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel.__setstate__": {
  "lineno": 544,
  "symbols_in_volume": [
   "torch.distributed.distributed_c10d._get_default_group"
  ],
  "type": "function"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel._check_and_sync_module_buffers": {
  "lineno": 682,
  "symbols_in_volume": [
   "torch.distributed.get_rank"
  ],
  "type": "function"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel._check_comm_hook": {
  "lineno": 1071,
  "symbols_in_volume": [
   "inspect._empty",
   "inspect.signature",
   "torch._C.Future",
   "torch.distributed._GradBucket",
   "torch.futures.Future"
  ],
  "type": "function"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel._check_default_group": {
  "lineno": 552,
  "symbols_in_volume": [
   "torch.distributed.distributed_c10d._get_default_group"
  ],
  "type": "function"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel._check_global_requires_backward_grad_sync": {
  "lineno": 669,
  "symbols_in_volume": [
   "torch.distributed.all_reduce",
   "torch.ones",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel._ddp_init_helper": {
  "lineno": 422,
  "symbols_in_volume": [
   "torch.distributed.Reducer",
   "torch.distributed._DEFAULT_FIRST_BUCKET_BYTES",
   "torch.distributed._compute_bucket_assignment_by_size",
   "torch.no_grad",
   "torch.strided",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel._ddp_init_helper.parameters": {
  "lineno": 433,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel._ddp_init_helper.parameters.model_parameters": {
  "lineno": 434,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel._ddp_init_helper.produces_sparse_gradient": {
  "lineno": 499,
  "symbols_in_volume": [
   "torch.nn.Embedding",
   "torch.nn.EmbeddingBag"
  ],
  "type": "function"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel._distributed_broadcast_coalesced": {
  "lineno": 975,
  "symbols_in_volume": [
   "torch.distributed._broadcast_coalesced"
  ],
  "type": "function"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel._find_common_rank": {
  "lineno": 989,
  "symbols_in_volume": [
   "torch.distributed.all_reduce",
   "torch.distributed.distributed_c10d.ReduceOp.MAX",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel._match_all_reduce_for_bwd_pass": {
  "lineno": 702,
  "symbols_in_volume": [
   "torch.zeros_like"
  ],
  "type": "function"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel._match_unused_params_allreduce": {
  "lineno": 723,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel._passing_sync_batchnorm_handle": {
  "lineno": 1063,
  "symbols_in_volume": [
   "torch.nn.modules.SyncBatchNorm"
  ],
  "type": "function"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel._register_comm_hook": {
  "lineno": 888,
  "symbols_in_volume": [
   "torch.distributed._register_comm_hook"
  ],
  "type": "function"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel._schedule_shadow_all_reduce_for_fwd_pass": {
  "lineno": 660,
  "symbols_in_volume": [
   "torch.distributed.all_reduce",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel._sync_final_model": {
  "lineno": 692,
  "symbols_in_volume": [
   "torch.distributed.get_rank"
  ],
  "type": "function"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel._sync_params": {
  "lineno": 1003,
  "symbols_in_volume": [
   "torch.distributed.get_rank",
   "torch.no_grad"
  ],
  "type": "function"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel._sync_params_and_buffers": {
  "lineno": 414,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel.forward": {
  "lineno": 590,
  "symbols_in_volume": [
   "logging.info",
   "torch.distributed.all_reduce",
   "torch.is_grad_enabled",
   "torch.ones"
  ],
  "type": "function"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel.gather": {
  "lineno": 648,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel.join": {
  "lineno": 727,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "torch.distributed.get_rank",
   "warnings.simplefilter",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel.no_sync": {
  "lineno": 567,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel.parallel_apply": {
  "lineno": 645,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel.scatter": {
  "lineno": 642,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel.train": {
  "lineno": 651,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel.will_sync_module_buffers": {
  "lineno": 982,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.parallel.distributed._dump_DDP_relevant_env_vars": {
  "lineno": 36,
  "symbols_in_volume": [
   "os.environ"
  ],
  "type": "function"
 },
 "torch.nn.parallel.distributed._find_tensors": {
  "lineno": 24,
  "symbols_in_volume": [
   "itertools.chain",
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.parallel.parallel_apply": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.parallel.parallel_apply.get_a_var": {
  "lineno": 8,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.parallel.parallel_apply.parallel_apply": {
  "lineno": 23,
  "symbols_in_volume": [
   "threading.Lock",
   "threading.Thread",
   "torch._utils.ExceptionWrapper",
   "torch.cuda._utils._get_device_index",
   "torch.is_autocast_enabled",
   "torch.is_grad_enabled"
  ],
  "type": "function"
 },
 "torch.nn.parallel.parallel_apply.parallel_apply._worker": {
  "lineno": 52,
  "symbols_in_volume": [
   "torch._utils.ExceptionWrapper",
   "torch.cuda.amp.autocast",
   "torch.cuda.device",
   "torch.set_grad_enabled"
  ],
  "type": "function"
 },
 "torch.nn.parallel.replicate": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.parallel.replicate._broadcast_coalesced_reshape": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.parallel.replicate._init_script_module": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.parallel.replicate._is_jit_enabled": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.parallel.replicate._is_script_method": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.parallel.replicate._is_script_module": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.parallel.replicate._replicatable_module": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.parallel.replicate._replicatable_module.descendant_modules": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.parallel.replicate.replicate": {
  "lineno": 78,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "torch._utils._get_device_index"
  ],
  "type": "function"
 },
 "torch.nn.parallel.scatter_gather": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.parallel.scatter_gather.gather": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.parallel.scatter_gather.gather.gather_map": {
  "lineno": 52,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.parallel.scatter_gather.scatter": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.parallel.scatter_gather.scatter.scatter_map": {
  "lineno": 11,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.parallel.scatter_gather.scatter_kwargs": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.parameter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.parameter.Parameter": {
  "lineno": 6,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._C._disabled_torch_function_impl"
  ],
  "type": "class"
 },
 "torch.nn.parameter.Parameter.__deepcopy__": {
  "lineno": 28,
  "symbols_in_volume": [
   "torch.preserve_format"
  ],
  "type": "function"
 },
 "torch.nn.parameter.Parameter.__new__": {
  "lineno": 23,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.Tensor._make_subclass"
  ],
  "type": "function"
 },
 "torch.nn.parameter.Parameter.__reduce_ex__": {
  "lineno": 39,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "torch._utils._rebuild_parameter"
  ],
  "type": "function"
 },
 "torch.nn.parameter.Parameter.__repr__": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.qat": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.qat.modules": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.qat.modules.conv": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.qat.modules.conv.Conv2d": {
  "lineno": 4,
  "symbols_in_volume": [
   "torch.nn.Conv2d"
  ],
  "type": "class"
 },
 "torch.nn.qat.modules.conv.Conv2d.__init__": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.qat.modules.conv.Conv2d.forward": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.qat.modules.conv.Conv2d.from_float": {
  "lineno": 34,
  "symbols_in_volume": [
   "torch.nn.intrinsic.ConvReLU2d"
  ],
  "type": "function"
 },
 "torch.nn.qat.modules.linear": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.qat.modules.linear.Linear": {
  "lineno": 5,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "class"
 },
 "torch.nn.qat.modules.linear.Linear.__init__": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.qat.modules.linear.Linear.forward": {
  "lineno": 29,
  "symbols_in_volume": [
   "torch.nn.functional.linear"
  ],
  "type": "function"
 },
 "torch.nn.qat.modules.linear.Linear.from_float": {
  "lineno": 32,
  "symbols_in_volume": [
   "torch.nn.intrinsic.LinearReLU"
  ],
  "type": "function"
 },
 "torch.nn.quantized": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.quantized.dynamic": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.quantized.dynamic.modules": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.quantized.dynamic.modules.linear": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.quantized.dynamic.modules.linear.Linear": {
  "lineno": 6,
  "symbols_in_volume": [
   "torch.nn.quantized.Linear"
  ],
  "type": "class"
 },
 "torch.nn.quantized.dynamic.modules.linear.Linear.__init__": {
  "lineno": 33,
  "symbols_in_volume": [
   "torch.qint8"
  ],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.linear.Linear._get_name": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.linear.Linear._load_from_state_dict": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.linear.Linear.extra_repr": {
  "lineno": 60,
  "symbols_in_volume": [
   "torch.qint8"
  ],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.linear.Linear.forward": {
  "lineno": 41,
  "symbols_in_volume": [
   "torch.float16",
   "torch.ops.quantized.linear_dynamic",
   "torch.ops.quantized.linear_dynamic_fp16",
   "torch.qint8"
  ],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.linear.Linear.from_float": {
  "lineno": 75,
  "symbols_in_volume": [
   "torch.float16",
   "torch.nn.quantized.modules.utils._quantize_weight",
   "torch.qint8",
   "torch.quantization.qconfig.default_dynamic_qconfig.weight"
  ],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.quantized.dynamic.modules.rnn.GRUCell": {
  "lineno": 690,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.quantized.dynamic.modules.rnn.GRUCell.__init__": {
  "lineno": 708,
  "symbols_in_volume": [
   "torch.qint8"
  ],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.GRUCell._get_name": {
  "lineno": 711,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.GRUCell.forward": {
  "lineno": 714,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._jit_internal.Optional",
   "torch.ops.quantized.quantized_gru_cell_dynamic",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.GRUCell.from_float": {
  "lineno": 725,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.LSTM": {
  "lineno": 312,
  "symbols_in_volume": [
   "torch.nn.LSTM"
  ],
  "type": "class"
 },
 "torch.nn.quantized.dynamic.modules.rnn.LSTM.__init__": {
  "lineno": 330,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.LSTM._get_name": {
  "lineno": 333,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.LSTM.check_forward_args": {
  "lineno": 406,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._jit_internal.Optional",
   "torch._jit_internal.Tuple"
  ],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.LSTM.forward": {
  "lineno": 417,
  "symbols_in_volume": [
   "torch.jit.ignore",
   "torch.nn.utils.rnn.PackedSequence"
  ],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.LSTM.forward_impl": {
  "lineno": 336,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._jit_internal.Optional",
   "torch._jit_internal.Tuple",
   "torch.quantized_lstm",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.LSTM.forward_packed": {
  "lineno": 382,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._jit_internal.Optional",
   "torch._jit_internal.Tuple",
   "torch.jit.export",
   "torch.nn.utils.rnn.PackedSequence"
  ],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.LSTM.forward_tensor": {
  "lineno": 368,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._jit_internal.Optional",
   "torch._jit_internal.Tuple",
   "torch.jit.export"
  ],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.LSTM.from_float": {
  "lineno": 424,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.LSTM.permute_hidden": {
  "lineno": 398,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._jit_internal.Optional",
   "torch._jit_internal.Tuple"
  ],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.LSTMCell": {
  "lineno": 649,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.quantized.dynamic.modules.rnn.LSTMCell.__init__": {
  "lineno": 668,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.LSTMCell._get_name": {
  "lineno": 671,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.LSTMCell.forward": {
  "lineno": 674,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._jit_internal.Optional",
   "torch._jit_internal.Tuple",
   "torch.ops.quantized.quantized_lstm_cell_dynamic",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.LSTMCell.from_float": {
  "lineno": 686,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.PackedParameter": {
  "lineno": 14,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.nn.quantized.dynamic.modules.rnn.PackedParameter.__init__": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.PackedParameter._load_from_state_dict": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.PackedParameter._save_to_state_dict": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.RNNBase": {
  "lineno": 29,
  "symbols_in_volume": [
   "torch.nn.Module",
   "torch.nn.RNNBase"
  ],
  "type": "class"
 },
 "torch.nn.quantized.dynamic.modules.rnn.RNNBase.__init__": {
  "lineno": 35,
  "symbols_in_volume": [
   "numbers.Number",
   "torch.float",
   "torch.nn.ModuleList",
   "torch.ops.quantized.linear_prepack",
   "torch.ops.quantized.linear_prepack_fp16",
   "torch.ops.quantized.make_quantized_cell_params_dynamic",
   "torch.ops.quantized.make_quantized_cell_params_fp16",
   "torch.qint8",
   "torch.quantize_per_tensor",
   "torch.randn",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.RNNBase.__repr__": {
  "lineno": 121,
  "symbols_in_volume": [
   "torch.nn.ModuleList",
   "torch.nn.modules.module._addindent"
  ],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.RNNBase._get_name": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.RNNBase._load_from_state_dict": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.RNNBase._weight_bias": {
  "lineno": 284,
  "symbols_in_volume": [
   "torch._jit_internal.Dict"
  ],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.RNNBase.check_forward_args": {
  "lineno": 180,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._jit_internal.Optional"
  ],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.RNNBase.check_hidden_size": {
  "lineno": 172,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._jit_internal.Tuple"
  ],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.RNNBase.check_input": {
  "lineno": 151,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._jit_internal.Optional"
  ],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.RNNBase.extra_repr": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.RNNBase.from_float": {
  "lineno": 198,
  "symbols_in_volume": [
   "torch.float16",
   "torch.nn.GRU",
   "torch.nn.LSTM",
   "torch.nn.ModuleList",
   "torch.ops.quantized.linear_prepack_fp16",
   "torch.ops.quantized.make_quantized_cell_params_dynamic",
   "torch.ops.quantized.make_quantized_cell_params_fp16",
   "torch.qint8",
   "torch.quantization.qconfig.default_dynamic_qconfig.weight"
  ],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.RNNBase.from_float.quantize_and_pack": {
  "lineno": 251,
  "symbols_in_volume": [
   "torch.nn.quantized.modules.utils._quantize_weight",
   "torch.ops.quantized.linear_prepack"
  ],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.RNNBase.from_float.retrieve_weight_bias": {
  "lineno": 240,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.RNNBase.get_bias": {
  "lineno": 309,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.RNNBase.get_expected_hidden_size": {
  "lineno": 162,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._jit_internal.Optional",
   "torch._jit_internal.Tuple"
  ],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.RNNBase.get_weight": {
  "lineno": 306,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.RNNBase.permute_hidden": {
  "lineno": 186,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._jit_internal.Optional"
  ],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.RNNCell": {
  "lineno": 598,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.quantized.dynamic.modules.rnn.RNNCell.__init__": {
  "lineno": 616,
  "symbols_in_volume": [
   "torch.qint8"
  ],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.RNNCell._get_name": {
  "lineno": 620,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.RNNCell.forward": {
  "lineno": 623,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._jit_internal.Optional",
   "torch.ops.quantized.quantized_rnn_relu_cell_dynamic",
   "torch.ops.quantized.quantized_rnn_tanh_cell_dynamic",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.RNNCell.from_float": {
  "lineno": 644,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.RNNCellBase": {
  "lineno": 430,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.nn.quantized.dynamic.modules.rnn.RNNCellBase.__init__": {
  "lineno": 434,
  "symbols_in_volume": [
   "torch.float",
   "torch.ops.quantized.linear_prepack",
   "torch.ops.quantized.linear_prepack_fp16",
   "torch.qint8",
   "torch.quantize_per_tensor",
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.RNNCellBase._get_name": {
  "lineno": 474,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.RNNCellBase._load_from_state_dict": {
  "lineno": 591,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.RNNCellBase._save_to_state_dict": {
  "lineno": 585,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.RNNCellBase._weight_bias": {
  "lineno": 568,
  "symbols_in_volume": [
   "torch._jit_internal.Dict"
  ],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.RNNCellBase.check_forward_hidden": {
  "lineno": 491,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.RNNCellBase.check_forward_input": {
  "lineno": 485,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.RNNCellBase.extra_repr": {
  "lineno": 477,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.RNNCellBase.from_float": {
  "lineno": 502,
  "symbols_in_volume": [
   "torch._jit_internal.Union",
   "torch.float16",
   "torch.nn.GRUCell",
   "torch.nn.LSTMCell",
   "torch.nn.RNNCell",
   "torch.qint8",
   "torch.quantization.qconfig.default_dynamic_qconfig.weight"
  ],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.RNNCellBase.from_float.process_weights": {
  "lineno": 540,
  "symbols_in_volume": [
   "torch.nn.quantized.modules.utils._quantize_weight",
   "torch.ops.quantized.linear_prepack",
   "torch.ops.quantized.linear_prepack_fp16",
   "torch.qint8"
  ],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.RNNCellBase.get_bias": {
  "lineno": 582,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.RNNCellBase.get_weight": {
  "lineno": 579,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.dynamic.modules.rnn.apply_permutation": {
  "lineno": 11,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.quantized.functional": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.quantized.functional.adaptive_avg_pool2d": {
  "lineno": 76,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.jit.annotations.BroadcastingList2",
   "torch.nn.functional.adaptive_avg_pool2d"
  ],
  "type": "function"
 },
 "torch.nn.quantized.functional.adaptive_avg_pool3d": {
  "lineno": 93,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.jit.annotations.BroadcastingList2",
   "torch.nn.functional.adaptive_avg_pool3d"
  ],
  "type": "function"
 },
 "torch.nn.quantized.functional.avg_pool2d": {
  "lineno": 14,
  "symbols_in_volume": [
   "torch.nn.functional.avg_pool2d"
  ],
  "type": "function"
 },
 "torch.nn.quantized.functional.avg_pool3d": {
  "lineno": 46,
  "symbols_in_volume": [
   "torch.nn.functional.avg_pool3d"
  ],
  "type": "function"
 },
 "torch.nn.quantized.functional.celu": {
  "lineno": 397,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.ops.quantized.celu",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.quantized.functional.clamp": {
  "lineno": 519,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.clamp"
  ],
  "type": "function"
 },
 "torch.nn.quantized.functional.conv1d": {
  "lineno": 111,
  "symbols_in_volume": [
   "torch.nn.quantized.modules.utils._pair_from_first",
   "torch.ops.quantized.conv1d",
   "torch.ops.quantized.conv1d_prepack",
   "torch.qint8",
   "torch.quint8"
  ],
  "type": "function"
 },
 "torch.nn.quantized.functional.conv2d": {
  "lineno": 170,
  "symbols_in_volume": [
   "torch.nn.modules.utils._pair",
   "torch.ops.quantized.conv2d",
   "torch.ops.quantized.conv2d_prepack",
   "torch.qint8",
   "torch.quint8"
  ],
  "type": "function"
 },
 "torch.nn.quantized.functional.conv3d": {
  "lineno": 229,
  "symbols_in_volume": [
   "torch.nn.modules.utils._triple",
   "torch.ops.quantized.conv3d",
   "torch.ops.quantized.conv3d_prepack",
   "torch.qint8",
   "torch.quint8"
  ],
  "type": "function"
 },
 "torch.nn.quantized.functional.elu": {
  "lineno": 499,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.ops.quantized.elu"
  ],
  "type": "function"
 },
 "torch.nn.quantized.functional.hardsigmoid": {
  "lineno": 512,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._C._nn.hardsigmoid"
  ],
  "type": "function"
 },
 "torch.nn.quantized.functional.hardswish": {
  "lineno": 468,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._ops.ops.quantized.hardswish"
  ],
  "type": "function"
 },
 "torch.nn.quantized.functional.hardtanh": {
  "lineno": 459,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._C._nn.hardtanh",
   "torch._C._nn.hardtanh_"
  ],
  "type": "function"
 },
 "torch.nn.quantized.functional.interpolate": {
  "lineno": 289,
  "symbols_in_volume": [
   "torch.nn.functional.interpolate"
  ],
  "type": "function"
 },
 "torch.nn.quantized.functional.leaky_relu": {
  "lineno": 430,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._C._nn.leaky_relu",
   "torch._C._nn.leaky_relu_",
   "torch._empty_affine_quantized"
  ],
  "type": "function"
 },
 "torch.nn.quantized.functional.linear": {
  "lineno": 330,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.ops.quantized.linear",
   "torch.ops.quantized.linear_prepack",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.quantized.functional.max_pool1d": {
  "lineno": 365,
  "symbols_in_volume": [
   "torch.jit.annotate",
   "torch.nn.functional.max_pool1d",
   "typing.List"
  ],
  "type": "function"
 },
 "torch.nn.quantized.functional.max_pool2d": {
  "lineno": 381,
  "symbols_in_volume": [
   "torch.jit.annotate",
   "torch.nn.functional.max_pool2d",
   "typing.List"
  ],
  "type": "function"
 },
 "torch.nn.quantized.functional.relu": {
  "lineno": 413,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.relu",
   "torch.relu_"
  ],
  "type": "function"
 },
 "torch.nn.quantized.functional.threshold": {
  "lineno": 480,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._ops.ops.quantized.threshold"
  ],
  "type": "function"
 },
 "torch.nn.quantized.functional.upsample": {
  "lineno": 534,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.nn.quantized.functional.upsample_bilinear": {
  "lineno": 587,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.nn.quantized.functional.upsample_nearest": {
  "lineno": 609,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.quantized.modules.DeQuantize": {
  "lineno": 61,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.nn.quantized.modules.DeQuantize.__init__": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.DeQuantize.forward": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.DeQuantize.from_float": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.Quantize": {
  "lineno": 17,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.nn.quantized.modules.Quantize.__init__": {
  "lineno": 41,
  "symbols_in_volume": [
   "torch.long",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.Quantize.extra_repr": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.Quantize.forward": {
  "lineno": 47,
  "symbols_in_volume": [
   "torch.quantize_per_tensor"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.Quantize.from_float": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.activation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.quantized.modules.activation.ELU": {
  "lineno": 103,
  "symbols_in_volume": [
   "torch.nn.ELU"
  ],
  "type": "class"
 },
 "torch.nn.quantized.modules.activation.ELU.__init__": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.activation.ELU._get_name": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.activation.ELU.forward": {
  "lineno": 116,
  "symbols_in_volume": [
   "torch.nn.quantized.functional.elu"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.activation.ELU.from_float": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.activation.Hardswish": {
  "lineno": 79,
  "symbols_in_volume": [
   "torch.nn.Hardswish"
  ],
  "type": "class"
 },
 "torch.nn.quantized.modules.activation.Hardswish.__init__": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.activation.Hardswish._get_name": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.activation.Hardswish.forward": {
  "lineno": 91,
  "symbols_in_volume": [
   "torch.nn.quantized.functional.hardswish"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.activation.Hardswish.from_float": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.activation.ReLU": {
  "lineno": 4,
  "symbols_in_volume": [
   "torch.nn.ReLU"
  ],
  "type": "class"
 },
 "torch.nn.quantized.modules.activation.ReLU.__init__": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.activation.ReLU._get_name": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.activation.ReLU.forward": {
  "lineno": 31,
  "symbols_in_volume": [
   "torch.nn.quantized.functional.relu"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.activation.ReLU.from_float": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.activation.ReLU6": {
  "lineno": 42,
  "symbols_in_volume": [
   "torch.nn.ReLU"
  ],
  "type": "class"
 },
 "torch.nn.quantized.modules.activation.ReLU6.__init__": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.activation.ReLU6._get_name": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.activation.ReLU6.forward": {
  "lineno": 69,
  "symbols_in_volume": [
   "torch.ops.quantized.relu6"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.activation.ReLU6.from_float": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.batchnorm": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.quantized.modules.batchnorm.BatchNorm2d": {
  "lineno": 5,
  "symbols_in_volume": [
   "torch.nn.BatchNorm2d"
  ],
  "type": "class"
 },
 "torch.nn.quantized.modules.batchnorm.BatchNorm2d.__init__": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.batchnorm.BatchNorm2d._get_name": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.batchnorm.BatchNorm2d.forward": {
  "lineno": 15,
  "symbols_in_volume": [
   "torch.ops.quantized.batch_norm2d"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.batchnorm.BatchNorm2d.from_float": {
  "lineno": 22,
  "symbols_in_volume": [
   "torch.nn.intrinsic.BNReLU2d"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.batchnorm.BatchNorm3d": {
  "lineno": 39,
  "symbols_in_volume": [
   "torch.nn.BatchNorm3d"
  ],
  "type": "class"
 },
 "torch.nn.quantized.modules.batchnorm.BatchNorm3d.__init__": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.batchnorm.BatchNorm3d._get_name": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.batchnorm.BatchNorm3d.forward": {
  "lineno": 49,
  "symbols_in_volume": [
   "torch.ops.quantized.batch_norm3d"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.batchnorm.BatchNorm3d.from_float": {
  "lineno": 56,
  "symbols_in_volume": [
   "torch.nn.intrinsic.BNReLU3d"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.conv": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.quantized.modules.conv.Conv1d": {
  "lineno": 167,
  "symbols_in_volume": [
   "torch.nn.Conv1d"
  ],
  "type": "class"
 },
 "torch.nn.quantized.modules.conv.Conv1d.__init__": {
  "lineno": 202,
  "symbols_in_volume": [
   "torch.nn.modules.utils._single",
   "torch.nn.quantized.modules.utils._pair_from_first"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.conv.Conv1d._get_name": {
  "lineno": 214,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.conv.Conv1d._weight_bias": {
  "lineno": 222,
  "symbols_in_volume": [
   "torch.ops.quantized.conv1d_unpack"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.conv.Conv1d.bias": {
  "lineno": 229,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.conv.Conv1d.forward": {
  "lineno": 232,
  "symbols_in_volume": [
   "torch._ops.ops.quantized.conv1d"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.conv.Conv1d.from_float": {
  "lineno": 239,
  "symbols_in_volume": [
   "torch.nn.intrinsic.ConvReLU1d"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.conv.Conv1d.set_weight_bias": {
  "lineno": 217,
  "symbols_in_volume": [
   "torch.ops.quantized.conv1d_prepack"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.conv.Conv1d.weight": {
  "lineno": 226,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.conv.Conv2d": {
  "lineno": 260,
  "symbols_in_volume": [
   "torch.nn.Conv2d"
  ],
  "type": "class"
 },
 "torch.nn.quantized.modules.conv.Conv2d.__init__": {
  "lineno": 298,
  "symbols_in_volume": [
   "torch.nn.modules.utils._pair"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.conv.Conv2d._get_name": {
  "lineno": 309,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.conv.Conv2d._weight_bias": {
  "lineno": 317,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.conv.Conv2d.bias": {
  "lineno": 323,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.conv.Conv2d.forward": {
  "lineno": 326,
  "symbols_in_volume": [
   "torch._ops.ops.quantized.conv2d"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.conv.Conv2d.from_float": {
  "lineno": 334,
  "symbols_in_volume": [
   "torch.nn.intrinsic.ConvReLU2d",
   "torch.nn.intrinsic.qat.ConvBn2d",
   "torch.nn.utils.fuse_conv_bn_weights"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.conv.Conv2d.set_weight_bias": {
  "lineno": 312,
  "symbols_in_volume": [
   "torch.ops.quantized.conv2d_prepack"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.conv.Conv2d.weight": {
  "lineno": 320,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.conv.Conv3d": {
  "lineno": 371,
  "symbols_in_volume": [
   "torch.nn.Conv3d"
  ],
  "type": "class"
 },
 "torch.nn.quantized.modules.conv.Conv3d.__init__": {
  "lineno": 409,
  "symbols_in_volume": [
   "torch.nn.modules.utils._triple"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.conv.Conv3d._get_name": {
  "lineno": 420,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.conv.Conv3d._weight_bias": {
  "lineno": 428,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.conv.Conv3d.bias": {
  "lineno": 434,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.conv.Conv3d.forward": {
  "lineno": 437,
  "symbols_in_volume": [
   "torch._ops.ops.quantized.conv3d"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.conv.Conv3d.from_float": {
  "lineno": 445,
  "symbols_in_volume": [
   "torch.nn.intrinsic.ConvReLU3d"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.conv.Conv3d.set_weight_bias": {
  "lineno": 423,
  "symbols_in_volume": [
   "torch.ops.quantized.conv3d_prepack"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.conv.Conv3d.weight": {
  "lineno": 431,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.conv.ConvTranspose1d": {
  "lineno": 517,
  "symbols_in_volume": [
   "torch.nn.ConvTranspose1d"
  ],
  "type": "class"
 },
 "torch.nn.quantized.modules.conv.ConvTranspose1d.__init__": {
  "lineno": 560,
  "symbols_in_volume": [
   "torch.nn.modules.utils._pair"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.conv.ConvTranspose1d._get_name": {
  "lineno": 573,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.conv.ConvTranspose1d._weight_bias": {
  "lineno": 582,
  "symbols_in_volume": [
   "torch.ops.quantized.conv_transpose1d_unpack"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.conv.ConvTranspose1d.bias": {
  "lineno": 590,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.conv.ConvTranspose1d.forward": {
  "lineno": 594,
  "symbols_in_volume": [
   "torch.ops.quantized.conv_transpose1d"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.conv.ConvTranspose1d.set_weight_bias": {
  "lineno": 576,
  "symbols_in_volume": [
   "torch.ops.quantized.conv_transpose1d_prepack"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.conv.ConvTranspose1d.weight": {
  "lineno": 586,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.conv.ConvTranspose2d": {
  "lineno": 603,
  "symbols_in_volume": [
   "torch.nn.ConvTranspose2d"
  ],
  "type": "class"
 },
 "torch.nn.quantized.modules.conv.ConvTranspose2d.__init__": {
  "lineno": 646,
  "symbols_in_volume": [
   "torch.nn.modules.utils._pair"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.conv.ConvTranspose2d._get_name": {
  "lineno": 659,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.conv.ConvTranspose2d._weight_bias": {
  "lineno": 668,
  "symbols_in_volume": [
   "torch.ops.quantized.conv2d_unpack"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.conv.ConvTranspose2d.bias": {
  "lineno": 676,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.conv.ConvTranspose2d.forward": {
  "lineno": 680,
  "symbols_in_volume": [
   "torch._ops.ops.quantized.conv_transpose2d"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.conv.ConvTranspose2d.set_weight_bias": {
  "lineno": 662,
  "symbols_in_volume": [
   "torch.ops.quantized.conv_transpose2d_prepack"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.conv.ConvTranspose2d.weight": {
  "lineno": 672,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.conv._ConvNd": {
  "lineno": 17,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.nn.quantized.modules.conv._ConvNd.__getstate__": {
  "lineno": 92,
  "symbols_in_volume": [
   "torch.jit.export"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.conv._ConvNd.__init__": {
  "lineno": 19,
  "symbols_in_volume": [
   "torch._empty_affine_quantized",
   "torch.float",
   "torch.qint8",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.conv._ConvNd.__setstate__": {
  "lineno": 130,
  "symbols_in_volume": [
   "torch.jit.export"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.conv._ConvNd._load_from_state_dict": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.conv._ConvNd._save_to_state_dict": {
  "lineno": 84,
  "symbols_in_volume": [
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.conv._ConvNd.extra_repr": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.conv._ConvNd.get_qconv": {
  "lineno": 147,
  "symbols_in_volume": [
   "torch.nn.quantized.modules.utils._quantize_weight",
   "torch.qint8"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.conv._ConvTransposeNd": {
  "lineno": 469,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.quantized.modules.conv._ConvTransposeNd.__init__": {
  "lineno": 470,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.conv._ConvTransposeNd._input_padding": {
  "lineno": 481,
  "symbols_in_volume": [
   "torch.jit.annotate",
   "typing.List"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.conv._ConvTransposeNd.from_float": {
  "lineno": 489,
  "symbols_in_volume": [
   "torch.nn.quantized.modules.utils._quantize_weight",
   "torch.qint8"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.embedding_ops": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.quantized.modules.embedding_ops.Embedding": {
  "lineno": 69,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.nn.quantized.modules.embedding_ops.Embedding.__init__": {
  "lineno": 92,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._empty_per_channel_affine_quantized",
   "torch._jit_internal.Optional",
   "torch.float",
   "torch.ones",
   "torch.quint8",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.embedding_ops.Embedding.__repr__": {
  "lineno": 119,
  "symbols_in_volume": [
   "torch.nn.quantized.modules.utils.hide_packed_params_repr"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.embedding_ops.Embedding._get_name": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.embedding_ops.Embedding.extra_repr": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.embedding_ops.Embedding.forward": {
  "lineno": 113,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.ops.quantized.embedding_byte"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.embedding_ops.Embedding.from_float": {
  "lineno": 136,
  "symbols_in_volume": [
   "torch.nn.Embedding",
   "torch.nn.Embedding.__name__",
   "torch.nn.quantized.modules.utils._quantize_weight",
   "torch.quantization.qconfig.float_qparams_dynamic_qconfig.weight",
   "torch.quint8"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.embedding_ops.Embedding.set_weight": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.embedding_ops.Embedding.weight": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.embedding_ops.EmbeddingBag": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.quantized.modules.embedding_ops.EmbeddingBag.__init__": {
  "lineno": 191,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._jit_internal.Optional",
   "torch.quint8"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.embedding_ops.EmbeddingBag._get_name": {
  "lineno": 207,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.embedding_ops.EmbeddingBag.forward": {
  "lineno": 201,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._jit_internal.Optional",
   "torch.ops.quantized.embedding_bag_byte"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.embedding_ops.EmbeddingBag.from_float": {
  "lineno": 210,
  "symbols_in_volume": [
   "torch.nn.EmbeddingBag",
   "torch.nn.EmbeddingBag.__name__",
   "torch.nn.quantized.modules.utils._quantize_weight",
   "torch.quantization.qconfig.float_qparams_dynamic_qconfig.weight",
   "torch.quint8"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.embedding_ops.EmbeddingPackedParams": {
  "lineno": 8,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.nn.quantized.modules.embedding_ops.EmbeddingPackedParams.__init__": {
  "lineno": 11,
  "symbols_in_volume": [
   "torch._empty_per_channel_affine_quantized",
   "torch.float",
   "torch.ones",
   "torch.quint8",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.embedding_ops.EmbeddingPackedParams.__repr__": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.embedding_ops.EmbeddingPackedParams._load_from_state_dict": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.embedding_ops.EmbeddingPackedParams._save_to_state_dict": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.embedding_ops.EmbeddingPackedParams._weight": {
  "lineno": 33,
  "symbols_in_volume": [
   "torch.jit.export",
   "torch.ops.quantized.embedding_bag_unpack",
   "torch.quint8"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.embedding_ops.EmbeddingPackedParams.forward": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.embedding_ops.EmbeddingPackedParams.set_weight": {
  "lineno": 24,
  "symbols_in_volume": [
   "torch.jit.export",
   "torch.ops.quantized.embedding_bag_prepack",
   "torch.quint8"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.functional_modules": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.quantized.modules.functional_modules.FloatFunctional": {
  "lineno": 8,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.nn.quantized.modules.functional_modules.FloatFunctional.__init__": {
  "lineno": 34,
  "symbols_in_volume": [
   "torch.nn.Identity"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.functional_modules.FloatFunctional.add": {
  "lineno": 43,
  "symbols_in_volume": [
   "torch.add"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.functional_modules.FloatFunctional.add_relu": {
  "lineno": 78,
  "symbols_in_volume": [
   "torch.add",
   "torch.nn.functional.relu"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.functional_modules.FloatFunctional.add_scalar": {
  "lineno": 50,
  "symbols_in_volume": [
   "torch.add"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.functional_modules.FloatFunctional.cat": {
  "lineno": 71,
  "symbols_in_volume": [
   "torch.cat"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.functional_modules.FloatFunctional.forward": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.functional_modules.FloatFunctional.mul": {
  "lineno": 57,
  "symbols_in_volume": [
   "torch.mul"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.functional_modules.FloatFunctional.mul_scalar": {
  "lineno": 64,
  "symbols_in_volume": [
   "torch.mul"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.functional_modules.QFunctional": {
  "lineno": 86,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.nn.quantized.modules.functional_modules.QFunctional.__init__": {
  "lineno": 112,
  "symbols_in_volume": [
   "torch.nn.Identity"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.functional_modules.QFunctional._get_name": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.functional_modules.QFunctional._load_from_state_dict": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.functional_modules.QFunctional._save_to_state_dict": {
  "lineno": 118,
  "symbols_in_volume": [
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.functional_modules.QFunctional.add": {
  "lineno": 144,
  "symbols_in_volume": [
   "torch._ops.ops.quantized.add"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.functional_modules.QFunctional.add_relu": {
  "lineno": 179,
  "symbols_in_volume": [
   "torch._ops.ops.quantized.add_relu"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.functional_modules.QFunctional.add_scalar": {
  "lineno": 151,
  "symbols_in_volume": [
   "torch._ops.ops.quantized.add_scalar"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.functional_modules.QFunctional.cat": {
  "lineno": 172,
  "symbols_in_volume": [
   "torch._ops.ops.quantized.cat"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.functional_modules.QFunctional.extra_repr": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.functional_modules.QFunctional.forward": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.functional_modules.QFunctional.from_float": {
  "lineno": 185,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.functional_modules.QFunctional.mul": {
  "lineno": 158,
  "symbols_in_volume": [
   "torch._ops.ops.quantized.mul"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.functional_modules.QFunctional.mul_scalar": {
  "lineno": 165,
  "symbols_in_volume": [
   "torch._ops.ops.quantized.mul_scalar"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.linear": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.quantized.modules.linear.Linear": {
  "lineno": 100,
  "symbols_in_volume": [
   "torch.nn.Linear",
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.nn.quantized.modules.linear.Linear.__init__": {
  "lineno": 129,
  "symbols_in_volume": [
   "torch._empty_affine_quantized",
   "torch.float",
   "torch.float16",
   "torch.qint8",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.linear.Linear.__repr__": {
  "lineno": 162,
  "symbols_in_volume": [
   "torch.nn.quantized.modules.utils.hide_packed_params_repr"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.linear.Linear._get_name": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.linear.Linear._load_from_state_dict": {
  "lineno": 206,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.linear.Linear._save_to_state_dict": {
  "lineno": 198,
  "symbols_in_volume": [
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.linear.Linear._weight_bias": {
  "lineno": 227,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.linear.Linear.bias": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.linear.Linear.extra_repr": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.linear.Linear.forward": {
  "lineno": 165,
  "symbols_in_volume": [
   "torch.ops.quantized.linear"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.linear.Linear.from_float": {
  "lineno": 239,
  "symbols_in_volume": [
   "torch.nn.intrinsic.LinearReLU",
   "torch.nn.quantized.modules.utils._quantize_weight",
   "torch.qint8"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.linear.Linear.set_weight_bias": {
  "lineno": 236,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.linear.Linear.weight": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.linear.LinearPackedParams": {
  "lineno": 8,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.nn.quantized.modules.linear.LinearPackedParams.__getstate__": {
  "lineno": 85,
  "symbols_in_volume": [
   "torch.jit.export"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.linear.LinearPackedParams.__init__": {
  "lineno": 11,
  "symbols_in_volume": [
   "torch._empty_affine_quantized",
   "torch.float",
   "torch.float16",
   "torch.qint8",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.linear.LinearPackedParams.__repr__": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.linear.LinearPackedParams.__setstate__": {
  "lineno": 90,
  "symbols_in_volume": [
   "torch.jit.export"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.linear.LinearPackedParams._load_from_state_dict": {
  "lineno": 63,
  "symbols_in_volume": [
   "torch.qint8"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.linear.LinearPackedParams._save_to_state_dict": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.linear.LinearPackedParams._weight_bias": {
  "lineno": 30,
  "symbols_in_volume": [
   "torch.float16",
   "torch.jit.export",
   "torch.ops.quantized.linear_unpack",
   "torch.ops.quantized.linear_unpack_fp16",
   "torch.qint8"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.linear.LinearPackedParams.forward": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.linear.LinearPackedParams.set_weight_bias": {
  "lineno": 20,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.float16",
   "torch.jit.export",
   "torch.ops.quantized.linear_prepack",
   "torch.ops.quantized.linear_prepack_fp16",
   "torch.qint8",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.normalization": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.quantized.modules.normalization.GroupNorm": {
  "lineno": 39,
  "symbols_in_volume": [
   "torch.nn.GroupNorm"
  ],
  "type": "class"
 },
 "torch.nn.quantized.modules.normalization.GroupNorm.__init__": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.normalization.GroupNorm._get_name": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.normalization.GroupNorm.forward": {
  "lineno": 56,
  "symbols_in_volume": [
   "torch.ops.quantized.group_norm"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.normalization.GroupNorm.from_float": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.normalization.InstanceNorm1d": {
  "lineno": 73,
  "symbols_in_volume": [
   "torch.nn.InstanceNorm1d"
  ],
  "type": "class"
 },
 "torch.nn.quantized.modules.normalization.InstanceNorm1d.__init__": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.normalization.InstanceNorm1d._get_name": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.normalization.InstanceNorm1d.forward": {
  "lineno": 91,
  "symbols_in_volume": [
   "torch.ops.quantized.instance_norm"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.normalization.InstanceNorm1d.from_float": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.normalization.InstanceNorm2d": {
  "lineno": 108,
  "symbols_in_volume": [
   "torch.nn.InstanceNorm2d"
  ],
  "type": "class"
 },
 "torch.nn.quantized.modules.normalization.InstanceNorm2d.__init__": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.normalization.InstanceNorm2d._get_name": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.normalization.InstanceNorm2d.forward": {
  "lineno": 126,
  "symbols_in_volume": [
   "torch.ops.quantized.instance_norm"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.normalization.InstanceNorm2d.from_float": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.normalization.InstanceNorm3d": {
  "lineno": 143,
  "symbols_in_volume": [
   "torch.nn.InstanceNorm3d"
  ],
  "type": "class"
 },
 "torch.nn.quantized.modules.normalization.InstanceNorm3d.__init__": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.normalization.InstanceNorm3d._get_name": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.normalization.InstanceNorm3d.forward": {
  "lineno": 161,
  "symbols_in_volume": [
   "torch.ops.quantized.instance_norm"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.normalization.InstanceNorm3d.from_float": {
  "lineno": 169,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.normalization.LayerNorm": {
  "lineno": 4,
  "symbols_in_volume": [
   "torch.nn.LayerNorm"
  ],
  "type": "class"
 },
 "torch.nn.quantized.modules.normalization.LayerNorm.__init__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.normalization.LayerNorm._get_name": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.normalization.LayerNorm.forward": {
  "lineno": 22,
  "symbols_in_volume": [
   "torch.ops.quantized.layer_norm"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.normalization.LayerNorm.from_float": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.quantized.modules.utils._ntuple_from_first": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.quantized.modules.utils._ntuple_from_first.parse": {
  "lineno": 28,
  "symbols_in_volume": [
   "itertools.repeat",
   "torch._six.container_abcs.Sequence"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.utils._quantize_weight": {
  "lineno": 6,
  "symbols_in_volume": [
   "torch.double",
   "torch.float",
   "torch.int64",
   "torch.per_channel_affine",
   "torch.per_channel_affine_float_qparams",
   "torch.per_channel_symmetric",
   "torch.per_tensor_affine",
   "torch.per_tensor_symmetric",
   "torch.qint8",
   "torch.quantize_per_channel",
   "torch.quantize_per_tensor",
   "torch.quint8"
  ],
  "type": "function"
 },
 "torch.nn.quantized.modules.utils.hide_packed_params_repr": {
  "lineno": 36,
  "symbols_in_volume": [
   "torch.nn.modules.module._addindent"
  ],
  "type": "function"
 },
 "torch.nn.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.utils.clip_grad": {
  "lineno": null,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Iterable",
   "typing.Union"
  ],
  "type": "module"
 },
 "torch.nn.utils.clip_grad.clip_grad_norm": {
  "lineno": 44,
  "symbols_in_volume": [
   "torch.Tensor",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.nn.utils.clip_grad.clip_grad_norm_": {
  "lineno": 9,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._six.inf",
   "torch.norm",
   "torch.stack",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.nn.utils.clip_grad.clip_grad_value_": {
  "lineno": 56,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.utils.convert_parameters": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.utils.convert_parameters._check_param_device": {
  "lineno": 57,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.utils.convert_parameters.parameters_to_vector": {
  "lineno": 5,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.cat",
   "typing.Iterable"
  ],
  "type": "function"
 },
 "torch.nn.utils.convert_parameters.vector_to_parameters": {
  "lineno": 27,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.typename",
   "typing.Iterable"
  ],
  "type": "function"
 },
 "torch.nn.utils.fusion": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.utils.fusion.fuse_conv_bn_eval": {
  "lineno": 6,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "torch.nn.utils.fusion.fuse_conv_bn_weights": {
  "lineno": 16,
  "symbols_in_volume": [
   "torch.nn.Parameter",
   "torch.rsqrt"
  ],
  "type": "function"
 },
 "torch.nn.utils.memory_format": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.utils.memory_format.convert_conv2d_weight_memory_format": {
  "lineno": 3,
  "symbols_in_volume": [
   "torch.nn.Conv2d",
   "torch.nn.ConvTranspose2d"
  ],
  "type": "function"
 },
 "torch.nn.utils.prune": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.nn.utils.prune.BasePruningMethod": {
  "lineno": 11,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "torch.nn.utils.prune.BasePruningMethod.__call__": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.prune.BasePruningMethod.__init__": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.prune.BasePruningMethod.apply": {
  "lineno": 77,
  "symbols_in_volume": [
   "torch.contiguous_format",
   "torch.ones_like"
  ],
  "type": "function"
 },
 "torch.nn.utils.prune.BasePruningMethod.apply._get_composite_method": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.prune.BasePruningMethod.apply_mask": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.prune.BasePruningMethod.compute_mask": {
  "lineno": 34,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "torch.nn.utils.prune.BasePruningMethod.prune": {
  "lineno": 193,
  "symbols_in_volume": [
   "torch.ones_like"
  ],
  "type": "function"
 },
 "torch.nn.utils.prune.BasePruningMethod.remove": {
  "lineno": 212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.prune.CustomFromMask": {
  "lineno": 764,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.utils.prune.CustomFromMask.__init__": {
  "lineno": 768,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.prune.CustomFromMask.apply": {
  "lineno": 776,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.prune.CustomFromMask.compute_mask": {
  "lineno": 771,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.prune.Identity": {
  "lineno": 394,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.utils.prune.Identity.apply": {
  "lineno": 405,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.prune.Identity.compute_mask": {
  "lineno": 401,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.prune.L1Unstructured": {
  "lineno": 478,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.utils.prune.L1Unstructured.__init__": {
  "lineno": 491,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.prune.L1Unstructured.apply": {
  "lineno": 520,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.prune.L1Unstructured.compute_mask": {
  "lineno": 496,
  "symbols_in_volume": [
   "torch.abs",
   "torch.contiguous_format",
   "torch.topk"
  ],
  "type": "function"
 },
 "torch.nn.utils.prune.LnStructured": {
  "lineno": 643,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.utils.prune.LnStructured.__init__": {
  "lineno": 660,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.prune.LnStructured.apply": {
  "lineno": 740,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.prune.LnStructured.compute_mask": {
  "lineno": 667,
  "symbols_in_volume": [
   "torch.topk"
  ],
  "type": "function"
 },
 "torch.nn.utils.prune.LnStructured.compute_mask.make_mask": {
  "lineno": 719,
  "symbols_in_volume": [
   "torch.zeros_like"
  ],
  "type": "function"
 },
 "torch.nn.utils.prune.PruningContainer": {
  "lineno": 242,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.utils.prune.PruningContainer.__getitem__": {
  "lineno": 292,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.prune.PruningContainer.__init__": {
  "lineno": 251,
  "symbols_in_volume": [
   "collections.abc.Iterable",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.nn.utils.prune.PruningContainer.__iter__": {
  "lineno": 289,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.prune.PruningContainer.__len__": {
  "lineno": 286,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.prune.PruningContainer.add_pruning_method": {
  "lineno": 263,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.prune.PruningContainer.compute_mask": {
  "lineno": 295,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.prune.PruningContainer.compute_mask._combine_masks": {
  "lineno": 322,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.prune.RandomStructured": {
  "lineno": 538,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.utils.prune.RandomStructured.__init__": {
  "lineno": 552,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.prune.RandomStructured.apply": {
  "lineno": 621,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.prune.RandomStructured.compute_mask": {
  "lineno": 558,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.prune.RandomStructured.compute_mask.make_mask": {
  "lineno": 598,
  "symbols_in_volume": [
   "torch.kthvalue",
   "torch.rand",
   "torch.zeros_like"
  ],
  "type": "function"
 },
 "torch.nn.utils.prune.RandomUnstructured": {
  "lineno": 419,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.utils.prune.RandomUnstructured.__init__": {
  "lineno": 433,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.prune.RandomUnstructured.apply": {
  "lineno": 458,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.prune.RandomUnstructured.compute_mask": {
  "lineno": 438,
  "symbols_in_volume": [
   "torch.contiguous_format",
   "torch.rand_like",
   "torch.topk"
  ],
  "type": "function"
 },
 "torch.nn.utils.prune._compute_norm": {
  "lineno": 1269,
  "symbols_in_volume": [
   "torch.norm"
  ],
  "type": "function"
 },
 "torch.nn.utils.prune._compute_nparams_toprune": {
  "lineno": 1233,
  "symbols_in_volume": [
   "numbers.Integral"
  ],
  "type": "function"
 },
 "torch.nn.utils.prune._validate_pruning_amount": {
  "lineno": 1191,
  "symbols_in_volume": [
   "numbers.Integral"
  ],
  "type": "function"
 },
 "torch.nn.utils.prune._validate_pruning_amount_init": {
  "lineno": 1156,
  "symbols_in_volume": [
   "numbers.Integral",
   "numbers.Real"
  ],
  "type": "function"
 },
 "torch.nn.utils.prune._validate_pruning_dim": {
  "lineno": 1257,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.prune._validate_structured_pruning": {
  "lineno": 1214,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.prune.custom_from_mask": {
  "lineno": 1067,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.prune.global_unstructured": {
  "lineno": 962,
  "symbols_in_volume": [
   "collections.abc.Iterable",
   "torch.nn.utils.parameters_to_vector",
   "torch.ones_like"
  ],
  "type": "function"
 },
 "torch.nn.utils.prune.identity": {
  "lineno": 792,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.prune.is_pruned": {
  "lineno": 1130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.prune.l1_unstructured": {
  "lineno": 856,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.prune.ln_structured": {
  "lineno": 926,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.prune.random_structured": {
  "lineno": 889,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.prune.random_unstructured": {
  "lineno": 823,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.prune.remove": {
  "lineno": 1099,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.rnn": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple",
   "torch.Tensor"
  ],
  "type": "module"
 },
 "torch.nn.utils.rnn.PackedSequence": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.utils.rnn.PackedSequence.__new__": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.rnn.PackedSequence.byte": {
  "lineno": 111,
  "symbols_in_volume": [
   "torch.uint8"
  ],
  "type": "function"
 },
 "torch.nn.utils.rnn.PackedSequence.char": {
  "lineno": 108,
  "symbols_in_volume": [
   "torch.int8"
  ],
  "type": "function"
 },
 "torch.nn.utils.rnn.PackedSequence.cpu": {
  "lineno": 83,
  "symbols_in_volume": [
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.nn.utils.rnn.PackedSequence.cuda": {
  "lineno": 76,
  "symbols_in_volume": [
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.nn.utils.rnn.PackedSequence.double": {
  "lineno": 90,
  "symbols_in_volume": [
   "torch.double"
  ],
  "type": "function"
 },
 "torch.nn.utils.rnn.PackedSequence.float": {
  "lineno": 93,
  "symbols_in_volume": [
   "torch.float"
  ],
  "type": "function"
 },
 "torch.nn.utils.rnn.PackedSequence.half": {
  "lineno": 96,
  "symbols_in_volume": [
   "torch.half"
  ],
  "type": "function"
 },
 "torch.nn.utils.rnn.PackedSequence.int": {
  "lineno": 102,
  "symbols_in_volume": [
   "torch.int"
  ],
  "type": "function"
 },
 "torch.nn.utils.rnn.PackedSequence.is_cuda": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.rnn.PackedSequence.is_pinned": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.rnn.PackedSequence.long": {
  "lineno": 99,
  "symbols_in_volume": [
   "torch.long"
  ],
  "type": "function"
 },
 "torch.nn.utils.rnn.PackedSequence.pin_memory": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.rnn.PackedSequence.short": {
  "lineno": 105,
  "symbols_in_volume": [
   "torch.short"
  ],
  "type": "function"
 },
 "torch.nn.utils.rnn.PackedSequence.to": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.rnn._packed_sequence_init": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.rnn._packed_sequence_init_args": {
  "lineno": 152,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.rnn.bind": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.rnn.invert_permutation": {
  "lineno": 186,
  "symbols_in_volume": [
   "torch.arange",
   "torch.empty_like",
   "torch.legacy_contiguous_format"
  ],
  "type": "function"
 },
 "torch.nn.utils.rnn.pack_padded_sequence": {
  "lineno": 196,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._C._get_tracing_state",
   "torch.as_tensor",
   "torch.int64",
   "torch.sort",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.nn.utils.rnn.pack_sequence": {
  "lineno": 378,
  "symbols_in_volume": [
   "torch.as_tensor"
  ],
  "type": "function"
 },
 "torch.nn.utils.rnn.pad_packed_sequence": {
  "lineno": 248,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.rnn.pad_sequence": {
  "lineno": 318,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.spectral_norm": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.TypeVar"
  ],
  "type": "module"
 },
 "torch.nn.utils.spectral_norm.SpectralNorm": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.utils.spectral_norm.SpectralNorm.__call__": {
  "lineno": 104,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "torch.nn.utils.spectral_norm.SpectralNorm.__init__": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.spectral_norm.SpectralNorm._solve_v_and_rescale": {
  "lineno": 107,
  "symbols_in_volume": [
   "torch.chain_matmul",
   "torch.dot",
   "torch.mv"
  ],
  "type": "function"
 },
 "torch.nn.utils.spectral_norm.SpectralNorm.apply": {
  "lineno": 114,
  "symbols_in_volume": [
   "torch.nn.functional.normalize",
   "torch.no_grad"
  ],
  "type": "function"
 },
 "torch.nn.utils.spectral_norm.SpectralNorm.compute_weight": {
  "lineno": 43,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.contiguous_format",
   "torch.dot",
   "torch.mv",
   "torch.nn.functional.normalize",
   "torch.no_grad"
  ],
  "type": "function"
 },
 "torch.nn.utils.spectral_norm.SpectralNorm.remove": {
  "lineno": 95,
  "symbols_in_volume": [
   "torch.nn.Parameter",
   "torch.no_grad"
  ],
  "type": "function"
 },
 "torch.nn.utils.spectral_norm.SpectralNorm.reshape_weight_to_matrix": {
  "lineno": 34,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.nn.utils.spectral_norm.SpectralNormLoadStateDictPreHook": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.utils.spectral_norm.SpectralNormLoadStateDictPreHook.__call__": {
  "lineno": 164,
  "symbols_in_volume": [
   "torch.no_grad"
  ],
  "type": "function"
 },
 "torch.nn.utils.spectral_norm.SpectralNormLoadStateDictPreHook.__init__": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.spectral_norm.SpectralNormStateDictHook": {
  "lineno": 197,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.utils.spectral_norm.SpectralNormStateDictHook.__call__": {
  "lineno": 202,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.spectral_norm.SpectralNormStateDictHook.__init__": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.spectral_norm.remove_spectral_norm": {
  "lineno": 270,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.spectral_norm.spectral_norm": {
  "lineno": 213,
  "symbols_in_volume": [
   "torch.nn.ConvTranspose1d",
   "torch.nn.ConvTranspose2d",
   "torch.nn.ConvTranspose3d",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.nn.utils.weight_norm": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.TypeVar"
  ],
  "type": "module"
 },
 "torch.nn.utils.weight_norm.WeightNorm": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.nn.utils.weight_norm.WeightNorm.__call__": {
  "lineno": 60,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "torch.nn.utils.weight_norm.WeightNorm.__init__": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.weight_norm.WeightNorm.apply": {
  "lineno": 26,
  "symbols_in_volume": [
   "torch.nn.parameter.Parameter",
   "torch.norm_except_dim"
  ],
  "type": "function"
 },
 "torch.nn.utils.weight_norm.WeightNorm.compute_weight": {
  "lineno": 21,
  "symbols_in_volume": [
   "torch._weight_norm",
   "typing.Any"
  ],
  "type": "function"
 },
 "torch.nn.utils.weight_norm.WeightNorm.remove": {
  "lineno": 53,
  "symbols_in_volume": [
   "torch.nn.parameter.Parameter"
  ],
  "type": "function"
 },
 "torch.nn.utils.weight_norm.remove_weight_norm": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.nn.utils.weight_norm.weight_norm": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx": {
  "lineno": null,
  "symbols_in_volume": [
   "torch._C._onnx.IR_VERSION",
   "torch._C._onnx.OperatorExportTypes",
   "torch._C._onnx.PRODUCER_VERSION",
   "torch._C._onnx.PYTORCH_ONNX_CAFFE2_BUNDLE",
   "torch._C._onnx.TensorProtoDataType",
   "torch._C._onnx.TrainingMode"
  ],
  "type": "module"
 },
 "torch.onnx.ExportTypes": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.onnx._export": {
  "lineno": 26,
  "symbols_in_volume": [
   "torch.onnx.utils._export"
  ],
  "type": "function"
 },
 "torch.onnx._export_to_pretty_string": {
  "lineno": 238,
  "symbols_in_volume": [
   "torch.onnx.utils._export_to_pretty_string"
  ],
  "type": "function"
 },
 "torch.onnx._optimize_trace": {
  "lineno": 243,
  "symbols_in_volume": [
   "torch.onnx.utils._optimize_graph"
  ],
  "type": "function"
 },
 "torch.onnx._run_symbolic_function": {
  "lineno": 261,
  "symbols_in_volume": [
   "torch.onnx.utils._run_symbolic_function"
  ],
  "type": "function"
 },
 "torch.onnx._run_symbolic_method": {
  "lineno": 266,
  "symbols_in_volume": [
   "torch.onnx.utils._run_symbolic_method"
  ],
  "type": "function"
 },
 "torch.onnx.export": {
  "lineno": 32,
  "symbols_in_volume": [
   "torch.onnx.utils.export"
  ],
  "type": "function"
 },
 "torch.onnx.export_to_pretty_string": {
  "lineno": 233,
  "symbols_in_volume": [
   "torch.onnx.utils.export_to_pretty_string"
  ],
  "type": "function"
 },
 "torch.onnx.is_in_onnx_export": {
  "lineno": 271,
  "symbols_in_volume": [
   "torch.onnx.utils.is_in_onnx_export"
  ],
  "type": "function"
 },
 "torch.onnx.operators": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.onnx.operators.reshape_from_tensor_shape": {
  "lineno": 19,
  "symbols_in_volume": [
   "torch._reshape_from_tensor"
  ],
  "type": "function"
 },
 "torch.onnx.operators.shape_as_tensor": {
  "lineno": 15,
  "symbols_in_volume": [
   "torch._shape_as_tensor"
  ],
  "type": "function"
 },
 "torch.onnx.register_custom_op_symbolic": {
  "lineno": 282,
  "symbols_in_volume": [
   "torch.onnx.utils.register_custom_op_symbolic"
  ],
  "type": "function"
 },
 "torch.onnx.select_model_mode_for_export": {
  "lineno": 248,
  "symbols_in_volume": [
   "torch.onnx.utils.select_model_mode_for_export"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_caffe2": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.onnx.symbolic_caffe2._empty_affine_quantized": {
  "lineno": 138,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_caffe2._permute_helper": {
  "lineno": 23,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._quantized_ops.add"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_caffe2.add": {
  "lineno": 101,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._quantized_ops.add",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_caffe2.avg_pool2d": {
  "lineno": 177,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._quantized_ops",
   "torch.onnx.symbolic_helper._quantized_ops.add",
   "torch.onnx.symbolic_helper.parse_args",
   "torch.onnx.symbolic_opset9.avg_pool2d"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_caffe2.cat": {
  "lineno": 232,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._parse_arg",
   "torch.onnx.symbolic_helper._quantized_ops",
   "torch.onnx.symbolic_helper._quantized_ops.add",
   "torch.onnx.symbolic_helper._unpack_list",
   "torch.onnx.symbolic_opset9.cat"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_caffe2.conv2d": {
  "lineno": 67,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._quantized_ops.add",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_caffe2.conv2d_relu": {
  "lineno": 84,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._quantized_ops.add",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_caffe2.conv_prepack": {
  "lineno": 59,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._quantized_ops.add"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_caffe2.dequantize": {
  "lineno": 134,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_caffe2.linear": {
  "lineno": 49,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._quantized_ops.add",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_caffe2.linear_prepack": {
  "lineno": 41,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._quantized_ops.add"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_caffe2.max_pool2d": {
  "lineno": 158,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._quantized_ops",
   "torch.onnx.symbolic_helper._quantized_ops.add",
   "torch.onnx.symbolic_helper.parse_args",
   "torch.onnx.symbolic_opset9.max_pool2d"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_caffe2.nchw2nhwc": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_caffe2.nhwc2nchw": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_caffe2.quantize_per_tensor": {
  "lineno": 124,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._quantized_ops.add",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_caffe2.register_quantized_ops": {
  "lineno": 7,
  "symbols_in_volume": [
   "importlib.import_module",
   "inspect.getmembers",
   "inspect.isfunction",
   "torch.onnx.symbolic_registry._symbolic_versions",
   "torch.onnx.symbolic_registry.is_registered_op",
   "torch.onnx.symbolic_registry.register_op",
   "torch.onnx.symbolic_registry.register_version"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_caffe2.relu": {
  "lineno": 111,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._quantized_ops",
   "torch.onnx.symbolic_helper._quantized_ops.add",
   "torch.onnx.symbolic_helper.parse_args",
   "torch.onnx.symbolic_opset9.relu"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_caffe2.reshape": {
  "lineno": 196,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._quantized_ops",
   "torch.onnx.symbolic_helper._quantized_ops.add",
   "torch.onnx.symbolic_opset9.reshape"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_caffe2.sigmoid": {
  "lineno": 248,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._quantized_ops",
   "torch.onnx.symbolic_helper._quantized_ops.add",
   "torch.onnx.symbolic_helper.parse_args",
   "torch.onnx.symbolic_opset9.sigmoid"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_caffe2.slice": {
  "lineno": 209,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._parse_arg",
   "torch.onnx.symbolic_helper._quantized_ops",
   "torch.onnx.symbolic_helper._quantized_ops.add",
   "torch.onnx.symbolic_helper.parse_args",
   "torch.onnx.symbolic_opset9.slice"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_caffe2.upsample_nearest2d": {
  "lineno": 142,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._parse_arg",
   "torch.onnx.symbolic_helper._quantized_ops",
   "torch.onnx.symbolic_helper._quantized_ops.add",
   "torch.onnx.symbolic_opset9.upsample_nearest2d"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_helper": {
  "lineno": null,
  "symbols_in_volume": [
   "torch.bool",
   "torch.complex128",
   "torch.complex32",
   "torch.complex64",
   "torch.double",
   "torch.float",
   "torch.half",
   "torch.int",
   "torch.int64",
   "torch.int8",
   "torch.onnx.TensorProtoDataType.BOOL",
   "torch.onnx.TensorProtoDataType.COMPLEX128",
   "torch.onnx.TensorProtoDataType.COMPLEX64",
   "torch.onnx.TensorProtoDataType.DOUBLE",
   "torch.onnx.TensorProtoDataType.FLOAT",
   "torch.onnx.TensorProtoDataType.FLOAT16",
   "torch.onnx.TensorProtoDataType.INT16",
   "torch.onnx.TensorProtoDataType.INT32",
   "torch.onnx.TensorProtoDataType.INT64",
   "torch.onnx.TensorProtoDataType.INT8",
   "torch.onnx.TensorProtoDataType.UINT8",
   "torch.onnx.TensorProtoDataType.UNDEFINED",
   "torch.short",
   "torch.uint8"
  ],
  "type": "module"
 },
 "torch.onnx.symbolic_helper._arange_cast_helper": {
  "lineno": 369,
  "symbols_in_volume": [
   "torch.get_default_dtype",
   "torch.int64"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_helper._arange_cast_helper._is_all_integral": {
  "lineno": 370,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_helper._avgpool_helper": {
  "lineno": 426,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_helper._block_list_in_opset": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_helper._block_list_in_opset.symbolic_fn": {
  "lineno": 200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_helper._cast_func_template": {
  "lineno": 580,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_helper._flatten_helper": {
  "lineno": 448,
  "symbols_in_volume": [
   "torch.long",
   "torch.onnx.symbolic_opset9._reshape_from_tensor",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_helper._get_const": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_helper._get_interpolate_attributes": {
  "lineno": 308,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_helper._if_scalar_type_as": {
  "lineno": 149,
  "symbols_in_volume": [
   "torch._C.Value"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_helper._index_fill_reshape_helper": {
  "lineno": 403,
  "symbols_in_volume": [
   "torch.onnx.symbolic_opset11.scatter",
   "torch.onnx.symbolic_opset9.expand"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_helper._interpolate_get_scales": {
  "lineno": 318,
  "symbols_in_volume": [
   "torch._C.ListType",
   "torch.float32",
   "torch.ones"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_helper._interpolate_get_scales_and_mode": {
  "lineno": 330,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_helper._interpolate_get_scales_if_available": {
  "lineno": 296,
  "symbols_in_volume": [
   "torch.float32",
   "torch.ones",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_helper._interpolate_size_to_scales": {
  "lineno": 278,
  "symbols_in_volume": [
   "sys.maxsize",
   "torch.float32",
   "torch.ones",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_helper._interpolate_warning": {
  "lineno": 264,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_helper._is_fp": {
  "lineno": 225,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_helper._is_none": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_helper._is_packed_list": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_helper._is_split_static": {
  "lineno": 460,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_helper._is_tensor": {
  "lineno": 174,
  "symbols_in_volume": [
   "torch._C.TensorType.get"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_helper._is_tensor_list": {
  "lineno": 177,
  "symbols_in_volume": [
   "torch._C.ListType",
   "torch._C.TensorType"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_helper._is_value": {
  "lineno": 171,
  "symbols_in_volume": [
   "torch._C.Value"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_helper._maybe_get_const": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_helper._maybe_get_scalar": {
  "lineno": 96,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_helper._onnx_opset_unsupported": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_helper._onnx_opset_unsupported_detailed": {
  "lineno": 194,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_helper._onnx_unsupported": {
  "lineno": 185,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_helper._parse_arg": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_helper._scalar": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_helper._scatter_helper": {
  "lineno": 361,
  "symbols_in_volume": [
   "torch.onnx.symbolic_opset11.scatter"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_helper._set_onnx_shape_inference": {
  "lineno": 521,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_helper._set_operator_export_type": {
  "lineno": 511,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_helper._set_opset_version": {
  "lineno": 500,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_helper._set_training_mode": {
  "lineno": 516,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_helper._size_helper": {
  "lineno": 397,
  "symbols_in_volume": [
   "torch.onnx.symbolic_opset9.select",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_helper._slice_helper": {
  "lineno": 216,
  "symbols_in_volume": [
   "torch.onnx.symbolic_opset10._slice",
   "torch.onnx.symbolic_opset9._slice"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_helper._sort_helper": {
  "lineno": 236,
  "symbols_in_volume": [
   "torch.int64",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_helper._topk_helper": {
  "lineno": 249,
  "symbols_in_volume": [
   "torch.int64",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_helper._try_get_scalar_type": {
  "lineno": 207,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_helper._unimplemented": {
  "lineno": 181,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_helper._unpack_list": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_helper._unsqueeze_helper": {
  "lineno": 274,
  "symbols_in_volume": [
   "torch.onnx.symbolic_opset9.unsqueeze"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_helper.assert_training_mode": {
  "lineno": 434,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_helper.parse_args": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_helper.parse_args.decorator": {
  "lineno": 122,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_helper.parse_args.decorator.wrapper": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset10": {
  "lineno": null,
  "symbols_in_volume": [
   "torch.nn.modules.utils._pair",
   "torch.nn.modules.utils._single",
   "torch.nn.modules.utils._triple"
  ],
  "type": "module"
 },
 "torch.onnx.symbolic_opset10.__interpolate": {
  "lineno": 131,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._interpolate_get_scales_and_mode"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset10._avg_pool": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset10._avg_pool.symbolic_fn": {
  "lineno": 86,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._avgpool_helper",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset10._interpolate": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset10._interpolate.symbolic_fn": {
  "lineno": 112,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._get_interpolate_attributes",
   "torch.onnx.symbolic_helper._interpolate_size_to_scales",
   "torch.onnx.symbolic_helper._interpolate_warning",
   "torch.onnx.symbolic_helper._maybe_get_scalar",
   "torch.onnx.symbolic_helper._unimplemented"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset10._max_pool": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset10._max_pool.symbolic_fn": {
  "lineno": 34,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._slice_helper",
   "torch.onnx.symbolic_helper.parse_args",
   "torch.onnx.symbolic_opset9.sub"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset10._slice": {
  "lineno": 137,
  "symbols_in_volume": [
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset10.embedding_bag": {
  "lineno": 196,
  "symbols_in_volume": [
   "sys.maxsize",
   "torch.onnx.symbolic_helper._is_none",
   "torch.onnx.symbolic_helper._onnx_unsupported",
   "torch.onnx.symbolic_helper._training_mode",
   "torch.onnx.symbolic_helper.parse_args",
   "torch.onnx.symbolic_opset9.select",
   "torch.tensor",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset10.fake_quantize_per_tensor_affine": {
  "lineno": 251,
  "symbols_in_volume": [
   "torch.int8",
   "torch.onnx.symbolic_helper.parse_args",
   "torch.tensor",
   "torch.uint8"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset10.flip": {
  "lineno": 184,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._slice_helper",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset10.fmod": {
  "lineno": 192,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset10.slice": {
  "lineno": 160,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._parse_arg",
   "torch.onnx.symbolic_helper._slice_helper"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset10.sort": {
  "lineno": 23,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._sort_helper",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset10.topk": {
  "lineno": 28,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._topk_helper",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11": {
  "lineno": null,
  "symbols_in_volume": [
   "torch.nn.modules.utils._pair",
   "torch.nn.modules.utils._single",
   "torch.nn.modules.utils._triple"
  ],
  "type": "module"
 },
 "torch.onnx.symbolic_opset11.__getitem_": {
  "lineno": 280,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._is_tensor_list",
   "torch.onnx.symbolic_opset9.__getitem_"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11.__interpolate": {
  "lineno": 155,
  "symbols_in_volume": [
   "torch.float32",
   "torch.onnx.symbolic_helper._interpolate_get_scales",
   "torch.onnx.symbolic_helper._is_none",
   "torch.onnx.symbolic_helper._is_packed_list",
   "torch.onnx.symbolic_helper._maybe_get_const",
   "torch.onnx.symbolic_helper._slice_helper",
   "torch.onnx.symbolic_helper._unimplemented",
   "torch.onnx.symbolic_helper.cast_pytorch_to_onnx",
   "torch.tensor",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11.__lshift_": {
  "lineno": 605,
  "symbols_in_volume": [
   "torch.float32",
   "torch.onnx.symbolic_helper._is_fp",
   "torch.onnx.symbolic_helper.cast_pytorch_to_onnx",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11.__rshift_": {
  "lineno": 586,
  "symbols_in_volume": [
   "torch.float32",
   "torch.onnx.symbolic_helper._is_fp",
   "torch.onnx.symbolic_helper.cast_pytorch_to_onnx",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11._avg_pool": {
  "lineno": 338,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11._avg_pool.symbolic_fn": {
  "lineno": 339,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._avgpool_helper",
   "torch.onnx.symbolic_helper.parse_args",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11._dim_arange": {
  "lineno": 521,
  "symbols_in_volume": [
   "torch.onnx.OperatorExportTypes.ONNX_ATEN_FALLBACK",
   "torch.onnx.symbolic_helper._operator_export_type",
   "torch.onnx.symbolic_helper.parse_args",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11._get_im2col_indices_along_dim": {
  "lineno": 624,
  "symbols_in_volume": [
   "numpy.arange",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11._get_im2col_output_shape": {
  "lineno": 659,
  "symbols_in_volume": [
   "torch.onnx.symbolic_opset9.size",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11._get_im2col_padded_input": {
  "lineno": 651,
  "symbols_in_volume": [
   "torch.LongTensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11._interpolate": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11._interpolate.symbolic_fn": {
  "lineno": 112,
  "symbols_in_volume": [
   "torch.float32",
   "torch.onnx.symbolic_helper._get_interpolate_attributes",
   "torch.onnx.symbolic_helper._maybe_get_scalar",
   "torch.onnx.symbolic_helper._slice_helper",
   "torch.onnx.symbolic_helper.cast_pytorch_to_onnx",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11._len": {
  "lineno": 274,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._is_tensor_list"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11._prepare_onnx_paddings": {
  "lineno": 424,
  "symbols_in_volume": [
   "torch.int64",
   "torch.onnx.symbolic_helper.cast_pytorch_to_onnx",
   "torch.onnx.symbolic_opset10.flip",
   "torch.onnx.symbolic_opset9.size",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11._unique2": {
  "lineno": 332,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11.add": {
  "lineno": 293,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._is_tensor_list",
   "torch.onnx.symbolic_helper._is_value",
   "torch.onnx.symbolic_helper._unimplemented",
   "torch.onnx.symbolic_helper._unpack_list",
   "torch.onnx.symbolic_opset9.add"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11.append": {
  "lineno": 289,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11.arange": {
  "lineno": 485,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._arange_cast_helper",
   "torch.onnx.symbolic_helper.scalar_type_to_pytorch_type",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11.arange._get_arange_dtype": {
  "lineno": 486,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._maybe_get_const"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11.cat": {
  "lineno": 314,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._get_const",
   "torch.onnx.symbolic_helper._is_packed_list",
   "torch.onnx.symbolic_opset9.cat"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11.clamp": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11.clamp._cast_if_not_none": {
  "lineno": 35,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._is_none",
   "torch.onnx.symbolic_helper.cast_pytorch_to_onnx"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11.clamp_max": {
  "lineno": 52,
  "symbols_in_volume": [
   "torch.onnx.symbolic_opset9.unused"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11.clamp_min": {
  "lineno": 47,
  "symbols_in_volume": [
   "torch.onnx.symbolic_opset9.unused"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11.constant_pad_nd": {
  "lineno": 448,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._if_scalar_type_as",
   "torch.onnx.symbolic_helper._maybe_get_scalar"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11.cumsum": {
  "lineno": 241,
  "symbols_in_volume": [
   "torch.int",
   "torch.onnx.symbolic_helper._get_const",
   "torch.onnx.symbolic_helper.parse_args",
   "torch.onnx.symbolic_helper.scalar_type_to_onnx",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11.det": {
  "lineno": 476,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11.embedding_bag": {
  "lineno": 747,
  "symbols_in_volume": [
   "sys.maxsize",
   "torch._C._jit_pass_fixup_onnx_loop_node_inputs",
   "torch.onnx.symbolic_helper._is_none",
   "torch.onnx.symbolic_helper._onnx_unsupported",
   "torch.onnx.symbolic_helper._size_helper",
   "torch.onnx.symbolic_helper._slice_helper",
   "torch.onnx.symbolic_helper._training_mode",
   "torch.onnx.symbolic_helper.parse_args",
   "torch.onnx.utils._add_block",
   "torch.onnx.utils._add_input_to_block",
   "torch.onnx.utils._add_output_to_block",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11.flatten": {
  "lineno": 725,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._flatten_helper",
   "torch.onnx.symbolic_helper._unimplemented",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11.gather": {
  "lineno": 215,
  "symbols_in_volume": [
   "torch.onnx.OperatorExportTypes.ONNX_ATEN_FALLBACK",
   "torch.onnx.symbolic_helper._maybe_get_const",
   "torch.onnx.symbolic_helper._operator_export_type",
   "torch.onnx.symbolic_helper._unimplemented",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11.hardtanh": {
  "lineno": 20,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.cast_pytorch_to_onnx",
   "torch.onnx.symbolic_helper.parse_args",
   "torch.onnx.symbolic_helper.scalar_type_to_onnx.index",
   "torch.onnx.symbolic_helper.scalar_type_to_pytorch_type",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11.im2col": {
  "lineno": 671,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.parse_args",
   "torch.onnx.symbolic_opset9.size",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11.index_copy": {
  "lineno": 578,
  "symbols_in_volume": [
   "torch.onnx.OperatorExportTypes.ONNX_ATEN_FALLBACK",
   "torch.onnx.symbolic_helper._index_fill_reshape_helper",
   "torch.onnx.symbolic_helper._operator_export_type",
   "torch.onnx.symbolic_helper._parse_arg"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11.index_fill": {
  "lineno": 567,
  "symbols_in_volume": [
   "torch.onnx.OperatorExportTypes.ONNX_ATEN_FALLBACK",
   "torch.onnx.symbolic_helper._if_scalar_type_as",
   "torch.onnx.symbolic_helper._index_fill_reshape_helper",
   "torch.onnx.symbolic_helper._maybe_get_scalar",
   "torch.onnx.symbolic_helper._operator_export_type",
   "torch.onnx.symbolic_helper._parse_arg",
   "torch.onnx.symbolic_opset9.expand"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11.index_put": {
  "lineno": 63,
  "symbols_in_volume": [
   "sys.maxsize",
   "torch.onnx.OperatorExportTypes.ONNX_ATEN_FALLBACK",
   "torch.onnx.symbolic_helper._operator_export_type",
   "torch.onnx.symbolic_helper._parse_arg",
   "torch.onnx.symbolic_helper._slice_helper",
   "torch.onnx.symbolic_helper._unpack_list",
   "torch.onnx.symbolic_helper.cast_pytorch_to_onnx",
   "torch.onnx.symbolic_helper.scalar_type_to_onnx.index",
   "torch.onnx.symbolic_helper.scalar_type_to_pytorch_type",
   "torch.onnx.symbolic_opset9.add",
   "torch.onnx.symbolic_opset9.expand",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11.insert": {
  "lineno": 306,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11.logdet": {
  "lineno": 480,
  "symbols_in_volume": [
   "torch.onnx.symbolic_opset9.log"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11.masked_scatter": {
  "lineno": 259,
  "symbols_in_volume": [
   "torch.LongTensor",
   "torch.onnx.symbolic_helper._slice_helper",
   "torch.onnx.symbolic_opset9.expand_as",
   "torch.onnx.symbolic_opset9.nonzero",
   "torch.onnx.symbolic_opset9.size",
   "torch.onnx.symbolic_opset9.view"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11.masked_select": {
  "lineno": 253,
  "symbols_in_volume": [
   "torch.onnx.symbolic_opset9.expand_as",
   "torch.onnx.symbolic_opset9.nonzero"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11.mm": {
  "lineno": 563,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11.narrow": {
  "lineno": 719,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._slice_helper"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11.pixel_shuffle": {
  "lineno": 103,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._unimplemented",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11.pop": {
  "lineno": 310,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11.reflection_pad": {
  "lineno": 456,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11.replication_pad": {
  "lineno": 462,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11.round": {
  "lineno": 378,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11.scatter": {
  "lineno": 224,
  "symbols_in_volume": [
   "torch.onnx.OperatorExportTypes.ONNX_ATEN_FALLBACK",
   "torch.onnx.symbolic_helper._is_value",
   "torch.onnx.symbolic_helper._maybe_get_scalar",
   "torch.onnx.symbolic_helper._operator_export_type",
   "torch.onnx.symbolic_helper.cast_pytorch_to_onnx",
   "torch.onnx.symbolic_helper.parse_args",
   "torch.onnx.symbolic_opset9.expand_as"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11.select": {
  "lineno": 58,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11.size": {
  "lineno": 530,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._size_helper"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11.sort": {
  "lineno": 373,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._sort_helper",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11.split": {
  "lineno": 382,
  "symbols_in_volume": [
   "torch.long",
   "torch.onnx.symbolic_helper._is_packed_list",
   "torch.onnx.symbolic_helper._is_split_static",
   "torch.onnx.symbolic_helper._unpack_list",
   "torch.onnx.symbolic_helper.parse_args",
   "torch.onnx.symbolic_opset9.split",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11.split_with_sizes": {
  "lineno": 405,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11.squeeze": {
  "lineno": 536,
  "symbols_in_volume": [
   "torch.int64",
   "torch.ones",
   "torch.onnx.symbolic_helper._get_const",
   "torch.onnx.symbolic_helper._size_helper",
   "torch.onnx.symbolic_opset9.size",
   "torch.onnx.utils._add_block",
   "torch.onnx.utils._add_output_to_block",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11.stack": {
  "lineno": 323,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._get_const",
   "torch.onnx.symbolic_helper._is_packed_list",
   "torch.onnx.symbolic_opset9.stack"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11.topk": {
  "lineno": 368,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._topk_helper",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11.unbind": {
  "lineno": 410,
  "symbols_in_volume": [
   "torch.long",
   "torch.onnx.symbolic_helper.parse_args",
   "torch.onnx.symbolic_opset9.unbind",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11.unique_dim": {
  "lineno": 362,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset11.unsqueeze": {
  "lineno": 558,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset12": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.onnx.symbolic_opset12.argmax": {
  "lineno": 65,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._is_none",
   "torch.onnx.symbolic_helper._parse_arg",
   "torch.onnx.symbolic_opset9.reshape",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset12.argmin": {
  "lineno": 76,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._is_none",
   "torch.onnx.symbolic_helper._parse_arg",
   "torch.onnx.symbolic_opset9.reshape",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset12.celu": {
  "lineno": 54,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._maybe_get_const",
   "torch.onnx.symbolic_helper.cast_pytorch_to_onnx"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset12.dropout": {
  "lineno": 18,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._training_mode",
   "torch.onnx.symbolic_helper.assert_training_mode",
   "torch.onnx.symbolic_helper.parse_args",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset12.einsum": {
  "lineno": 12,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._unpack_list",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset12.ge": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset12.le": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset12.nll_loss": {
  "lineno": 31,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._maybe_get_const"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset12.nll_loss2d": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset12.pow": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset7": {
  "lineno": null,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._block_list_in_opset"
  ],
  "type": "module"
 },
 "torch.onnx.symbolic_opset7.max": {
  "lineno": 28,
  "symbols_in_volume": [
   "torch.onnx.symbolic_opset9.max",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset7.min": {
  "lineno": 37,
  "symbols_in_volume": [
   "torch.onnx.symbolic_opset9.min",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset8": {
  "lineno": null,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._block_list_in_opset"
  ],
  "type": "module"
 },
 "torch.onnx.symbolic_opset8.__interpolate": {
  "lineno": 77,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._interpolate_get_scales_and_mode",
   "torch.onnx.symbolic_helper._is_none",
   "torch.onnx.symbolic_helper._is_value",
   "torch.onnx.symbolic_helper._maybe_get_const",
   "torch.onnx.symbolic_helper._unimplemented"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset8._cast_to_type": {
  "lineno": 115,
  "symbols_in_volume": [
   "torch.onnx.symbolic_opset9"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset8._comparison_operator": {
  "lineno": 121,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._if_scalar_type_as",
   "torch.onnx.symbolic_helper._maybe_get_scalar"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset8._constant_fill": {
  "lineno": 209,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._cast_func_template",
   "torch.onnx.symbolic_helper.cast_pytorch_to_onnx",
   "torch.onnx.symbolic_helper.scalar_type_to_onnx",
   "torch.onnx.symbolic_helper.scalar_type_to_pytorch_type.is_floating_point"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset8._interpolate": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset8._interpolate.symbolic_fn": {
  "lineno": 52,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._get_interpolate_attributes",
   "torch.onnx.symbolic_helper._interpolate_warning",
   "torch.onnx.symbolic_helper._is_value",
   "torch.onnx.symbolic_helper._maybe_get_const",
   "torch.onnx.symbolic_helper._maybe_get_scalar",
   "torch.onnx.symbolic_helper._unimplemented"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset8._try_cast_integer_to_float": {
  "lineno": 96,
  "symbols_in_volume": [
   "torch.onnx.symbolic_opset9._cast_Float",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset8.addmm": {
  "lineno": 174,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._scalar",
   "torch.onnx.symbolic_helper._try_get_scalar_type",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset8.bmm": {
  "lineno": 138,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._try_get_scalar_type"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset8.empty": {
  "lineno": 219,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset8.empty_like": {
  "lineno": 224,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset8.flatten": {
  "lineno": 185,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._get_const",
   "torch.onnx.symbolic_helper._try_get_scalar_type",
   "torch.onnx.symbolic_opset9.flatten"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset8.full": {
  "lineno": 251,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._get_const",
   "torch.onnx.symbolic_helper._is_value",
   "torch.onnx.symbolic_helper._maybe_get_const",
   "torch.onnx.symbolic_opset9.add",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset8.full_like": {
  "lineno": 261,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset8.gt": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset8.lt": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset8.matmul": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset8.mm": {
  "lineno": 162,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._try_get_scalar_type"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset8.ones": {
  "lineno": 240,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset8.ones_like": {
  "lineno": 245,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset8.prelu": {
  "lineno": 150,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._try_get_scalar_type"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset8.repeat": {
  "lineno": 267,
  "symbols_in_volume": [
   "torch.LongTensor",
   "torch.onnx.symbolic_helper._is_packed_list",
   "torch.onnx.symbolic_helper._is_value",
   "torch.onnx.symbolic_helper._maybe_get_const",
   "torch.onnx.symbolic_helper._unpack_list",
   "torch.onnx.symbolic_opset9.view",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset8.zeros": {
  "lineno": 228,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset8.zeros_like": {
  "lineno": 234,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9": {
  "lineno": null,
  "symbols_in_volume": [
   "functools.partial",
   "torch.nn.modules.utils._pair",
   "torch.nn.modules.utils._single",
   "torch.nn.modules.utils._triple",
   "torch.onnx.symbolic_helper._cast_func_template",
   "torch.onnx.symbolic_helper.cast_pytorch_to_onnx.items",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "module"
 },
 "torch.onnx.symbolic_opset9.__and_": {
  "lineno": 1039,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.__getitem_": {
  "lineno": 2556,
  "symbols_in_volume": [
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.__interpolate": {
  "lineno": 960,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._interpolate_get_scales_and_mode"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.__lshift_": {
  "lineno": 1065,
  "symbols_in_volume": [
   "torch.float32",
   "torch.onnx.symbolic_helper._is_fp",
   "torch.onnx.symbolic_helper.cast_pytorch_to_onnx",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.__or_": {
  "lineno": 1044,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.__rshift_": {
  "lineno": 1049,
  "symbols_in_volume": [
   "torch.float32",
   "torch.onnx.symbolic_helper._is_fp",
   "torch.onnx.symbolic_helper.cast_pytorch_to_onnx",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9._adaptive_pool": {
  "lineno": 828,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9._adaptive_pool.symbolic_fn": {
  "lineno": 829,
  "symbols_in_volume": [
   "torch.onnx.OperatorExportTypes.ONNX_ATEN_FALLBACK",
   "torch.onnx.symbolic_helper._onnx_unsupported",
   "torch.onnx.symbolic_helper._operator_export_type",
   "torch.onnx.symbolic_helper._parse_arg",
   "torch.onnx.symbolic_helper._unimplemented"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9._avg_pool": {
  "lineno": 795,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9._avg_pool.symbolic_fn": {
  "lineno": 796,
  "symbols_in_volume": [
   "numpy.add",
   "torch.onnx.symbolic_helper._avgpool_helper",
   "torch.onnx.symbolic_helper._unimplemented",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9._convert_padding_node": {
  "lineno": 895,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._get_const",
   "torch.onnx.symbolic_helper._is_packed_list",
   "torch.onnx.symbolic_helper._is_value",
   "torch.onnx.symbolic_helper._maybe_get_const",
   "torch.onnx.symbolic_helper._onnx_opset_unsupported_detailed",
   "torch.onnx.symbolic_helper._unpack_list"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9._convolution": {
  "lineno": 1119,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._is_none",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9._dim_arange": {
  "lineno": 2000,
  "symbols_in_volume": [
   "torch.onnx.OperatorExportTypes.ONNX_ATEN_FALLBACK",
   "torch.onnx.symbolic_helper._operator_export_type",
   "torch.onnx.symbolic_helper.parse_args",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9._generic_rnn": {
  "lineno": 1798,
  "symbols_in_volume": [
   "torch.LongTensor",
   "torch.onnx.symbolic_helper._unimplemented",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9._generic_rnn.reform_weights": {
  "lineno": 1848,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._slice_helper"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9._generic_rnn.retrieve_state": {
  "lineno": 1871,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._slice_helper"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9._generic_rnn.transform_weights": {
  "lineno": 1861,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9._generic_rnn.transform_weights_no_bias": {
  "lineno": 1852,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9._interpolate": {
  "lineno": 939,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9._interpolate.symbolic_fn": {
  "lineno": 940,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._get_interpolate_attributes",
   "torch.onnx.symbolic_helper._interpolate_size_to_scales",
   "torch.onnx.symbolic_helper._interpolate_warning",
   "torch.onnx.symbolic_helper._maybe_get_scalar",
   "torch.onnx.symbolic_helper._unimplemented"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9._kl_div_log_target_impl": {
  "lineno": 2567,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9._kl_div_non_log_target_impl": {
  "lineno": 2574,
  "symbols_in_volume": [
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9._len": {
  "lineno": 622,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9._list": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9._lstm_full": {
  "lineno": 1952,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._unpack_list",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9._lstm_packed": {
  "lineno": 1959,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._unpack_list",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9._max_pool": {
  "lineno": 737,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9._max_pool.symbolic_fn": {
  "lineno": 738,
  "symbols_in_volume": [
   "numpy.add",
   "torch.onnx.symbolic_helper._slice_helper",
   "torch.onnx.symbolic_helper._unimplemented",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9._maybe_cast_reduce_op_input": {
  "lineno": 270,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._is_fp"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9._one_hidden_rnn": {
  "lineno": 1973,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9._one_hidden_rnn._rnn_full": {
  "lineno": 1974,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._unpack_list",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9._one_hidden_rnn._rnn_packed": {
  "lineno": 1980,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._unpack_list",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9._one_hidden_rnn.symbolic": {
  "lineno": 1986,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._is_tensor_list"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9._pack_padded_sequence": {
  "lineno": 2023,
  "symbols_in_volume": [
   "torch._C.TensorType.get",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9._pad_packed_sequence": {
  "lineno": 2040,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9._prepare_onnx_paddings": {
  "lineno": 884,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9._reduce_op_symbolic": {
  "lineno": 280,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9._reduce_op_symbolic.symbolic": {
  "lineno": 281,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._get_const"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9._reduce_with_dtype": {
  "lineno": 309,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9._reduce_with_dtype.reduce": {
  "lineno": 312,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9._reduce_with_dtype.reduce.reduce_dim": {
  "lineno": 322,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._unimplemented",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9._reduce_with_dtype.reduce.reduce_nodim": {
  "lineno": 314,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._unimplemented",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9._reshape_from_tensor": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9._sample_dirichlet": {
  "lineno": 346,
  "symbols_in_volume": [
   "torch.onnx.OperatorExportTypes.ONNX_ATEN_FALLBACK",
   "torch.onnx.symbolic_helper._is_none",
   "torch.onnx.symbolic_helper._onnx_unsupported",
   "torch.onnx.symbolic_helper._operator_export_type",
   "torch.onnx.symbolic_helper._unimplemented"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9._shape_as_tensor": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9._slice": {
  "lineno": 263,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9._standard_gamma": {
  "lineno": 356,
  "symbols_in_volume": [
   "torch.onnx.OperatorExportTypes.ONNX_ATEN_FALLBACK",
   "torch.onnx.symbolic_helper._is_none",
   "torch.onnx.symbolic_helper._onnx_unsupported",
   "torch.onnx.symbolic_helper._operator_export_type",
   "torch.onnx.symbolic_helper._unimplemented"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9._std": {
  "lineno": 2218,
  "symbols_in_volume": [
   "numpy.prod",
   "torch.float",
   "torch.onnx.symbolic_helper._unimplemented",
   "torch.onnx.symbolic_helper.parse_args",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9._unique": {
  "lineno": 1503,
  "symbols_in_volume": [
   "torch.onnx.OperatorExportTypes.ONNX_ATEN_FALLBACK",
   "torch.onnx.symbolic_helper._onnx_unsupported",
   "torch.onnx.symbolic_helper._operator_export_type",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9._unique2": {
  "lineno": 1512,
  "symbols_in_volume": [
   "torch.onnx.OperatorExportTypes.ONNX_ATEN_FALLBACK",
   "torch.onnx.symbolic_helper._onnx_opset_unsupported",
   "torch.onnx.symbolic_helper._operator_export_type",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9._unsupported_dropout": {
  "lineno": 1463,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9._unsupported_dropout.feature_dropout": {
  "lineno": 1464,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._unimplemented",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9._weight_norm": {
  "lineno": 2524,
  "symbols_in_volume": [
   "torch.onnx.OperatorExportTypes.ONNX_ATEN_FALLBACK",
   "torch.onnx.symbolic_helper._operator_export_type",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.abs": {
  "lineno": 1365,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.acos": {
  "lineno": 247,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.add": {
  "lineno": 80,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._is_tensor_list",
   "torch.onnx.symbolic_helper._is_value",
   "torch.onnx.symbolic_helper._maybe_get_scalar",
   "torch.onnx.symbolic_helper._onnx_opset_unsupported_detailed",
   "torch.onnx.symbolic_helper._scalar",
   "torch.onnx.symbolic_helper._unimplemented"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.addmm": {
  "lineno": 210,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._scalar",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.alias": {
  "lineno": 1693,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.arange": {
  "lineno": 2259,
  "symbols_in_volume": [
   "torch.onnx.OperatorExportTypes.ONNX_ATEN_FALLBACK",
   "torch.onnx.symbolic_helper._operator_export_type",
   "torch.onnx.symbolic_helper.scalar_type_to_onnx"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.arange._get_arange_dtype": {
  "lineno": 2263,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._is_value",
   "torch.onnx.symbolic_helper._maybe_get_const"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.argmax": {
  "lineno": 2141,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._is_none",
   "torch.onnx.symbolic_helper._parse_arg",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.argmin": {
  "lineno": 2151,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._is_none",
   "torch.onnx.symbolic_helper._parse_arg",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.as_strided": {
  "lineno": 2602,
  "symbols_in_volume": [
   "torch.arange",
   "torch.int64",
   "torch.long",
   "torch.onnx.symbolic_helper._is_value",
   "torch.onnx.symbolic_helper._maybe_get_const",
   "torch.onnx.symbolic_helper.parse_args",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.asin": {
  "lineno": 243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.atan": {
  "lineno": 251,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.baddbmm": {
  "lineno": 2451,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.cast_pytorch_to_onnx"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.batch_norm": {
  "lineno": 1183,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._is_none",
   "torch.onnx.symbolic_helper._training_mode",
   "torch.onnx.symbolic_helper.assert_training_mode",
   "torch.onnx.symbolic_helper.parse_args",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.bitwise_not": {
  "lineno": 965,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._unimplemented",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.bmm": {
  "lineno": 202,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.cat": {
  "lineno": 179,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._unpack_list",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.ceil": {
  "lineno": 614,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.clamp": {
  "lineno": 1390,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._is_none",
   "torch.onnx.symbolic_helper._parse_arg"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.clamp_max": {
  "lineno": 1408,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.clamp_min": {
  "lineno": 1403,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.clone": {
  "lineno": 1361,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.constant_pad_nd": {
  "lineno": 905,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._get_const",
   "torch.onnx.symbolic_helper._onnx_opset_unsupported_detailed"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.contiguous": {
  "lineno": 2016,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.conv1d": {
  "lineno": 1153,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.conv2d": {
  "lineno": 1158,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.conv3d": {
  "lineno": 1163,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.conv_tbc": {
  "lineno": 1495,
  "symbols_in_volume": [
   "torch.onnx.OperatorExportTypes.ONNX_ATEN_FALLBACK",
   "torch.onnx.symbolic_helper._onnx_unsupported",
   "torch.onnx.symbolic_helper._operator_export_type",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.conv_transpose1d": {
  "lineno": 1168,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.conv_transpose2d": {
  "lineno": 1173,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.conv_transpose3d": {
  "lineno": 1178,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.cos": {
  "lineno": 235,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.cosine_similarity": {
  "lineno": 1352,
  "symbols_in_volume": [
   "torch.onnx.OperatorExportTypes.ONNX_ATEN_FALLBACK",
   "torch.onnx.symbolic_helper._onnx_unsupported",
   "torch.onnx.symbolic_helper._operator_export_type",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.cumsum": {
  "lineno": 336,
  "symbols_in_volume": [
   "torch.onnx.OperatorExportTypes.ONNX_ATEN_FALLBACK",
   "torch.onnx.symbolic_helper._onnx_opset_unsupported",
   "torch.onnx.symbolic_helper._operator_export_type",
   "torch.onnx.symbolic_helper._unimplemented",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.detach": {
  "lineno": 2011,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.dim": {
  "lineno": 2549,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.div": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.dropout": {
  "lineno": 1451,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._training_mode",
   "torch.onnx.symbolic_helper.assert_training_mode",
   "torch.onnx.symbolic_helper.parse_args",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.elu": {
  "lineno": 1276,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._scalar",
   "torch.onnx.symbolic_helper._unimplemented",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.embedding": {
  "lineno": 391,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.embedding_bag": {
  "lineno": 395,
  "symbols_in_volume": [
   "torch.onnx.OperatorExportTypes.ONNX_ATEN_FALLBACK",
   "torch.onnx.symbolic_helper._is_none",
   "torch.onnx.symbolic_helper._onnx_unsupported",
   "torch.onnx.symbolic_helper._operator_export_type",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.empty": {
  "lineno": 1527,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.empty_like": {
  "lineno": 1532,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.eq": {
  "lineno": 996,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.erf": {
  "lineno": 2101,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.exp": {
  "lineno": 1447,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.expand": {
  "lineno": 370,
  "symbols_in_volume": [
   "torch.LongTensor",
   "torch.onnx.symbolic_helper._is_packed_list",
   "torch.onnx.symbolic_helper._is_value",
   "torch.onnx.symbolic_helper._maybe_get_const",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.expand_as": {
  "lineno": 386,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.eye": {
  "lineno": 1648,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.flatten": {
  "lineno": 2106,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._flatten_helper",
   "torch.onnx.symbolic_helper._unimplemented",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.floor": {
  "lineno": 618,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.floor_divide": {
  "lineno": 109,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._is_fp",
   "torch.onnx.symbolic_helper.cast_pytorch_to_onnx"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.floordiv": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.frobenius_norm": {
  "lineno": 2431,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.full": {
  "lineno": 1614,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._get_const",
   "torch.onnx.symbolic_helper._is_value",
   "torch.onnx.symbolic_helper._maybe_get_const",
   "torch.onnx.symbolic_helper.scalar_type_to_pytorch_type",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.full_like": {
  "lineno": 1627,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._get_const",
   "torch.onnx.symbolic_helper._is_value",
   "torch.onnx.symbolic_helper._maybe_get_const",
   "torch.onnx.symbolic_helper.scalar_type_to_pytorch_type",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.gather": {
  "lineno": 2204,
  "symbols_in_volume": [
   "torch.LongTensor",
   "torch.onnx.symbolic_helper._maybe_get_const",
   "torch.onnx.symbolic_helper._unimplemented",
   "torch.onnx.symbolic_helper.cast_pytorch_to_onnx",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.ge": {
  "lineno": 1029,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.gelu": {
  "lineno": 2480,
  "symbols_in_volume": [
   "torch.float",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.get_pool_ceil_padding": {
  "lineno": 714,
  "symbols_in_volume": [
   "math.ceil"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.glu": {
  "lineno": 643,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.group_norm": {
  "lineno": 2487,
  "symbols_in_volume": [
   "torch.LongTensor",
   "torch.onnx.OperatorExportTypes.ONNX_ATEN_FALLBACK",
   "torch.onnx.symbolic_helper._operator_export_type",
   "torch.onnx.symbolic_helper.parse_args",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.gt": {
  "lineno": 1005,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.gt_impl": {
  "lineno": 1009,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.cast_pytorch_to_onnx"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.hardtanh": {
  "lineno": 1688,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.index": {
  "lineno": 2319,
  "symbols_in_volume": [
   "torch.LongTensor",
   "torch.onnx.OperatorExportTypes.ONNX_ATEN_FALLBACK",
   "torch.onnx.symbolic_helper._export_onnx_opset_version",
   "torch.onnx.symbolic_helper._is_none",
   "torch.onnx.symbolic_helper._is_packed_list",
   "torch.onnx.symbolic_helper._operator_export_type",
   "torch.onnx.symbolic_helper._unpack_list",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.index.try_mask_to_index": {
  "lineno": 2328,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._export_onnx_opset_version",
   "torch.onnx.symbolic_helper._is_none",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.index_copy": {
  "lineno": 1329,
  "symbols_in_volume": [
   "torch.onnx.OperatorExportTypes.ONNX_ATEN_FALLBACK",
   "torch.onnx.symbolic_helper._index_fill_reshape_helper",
   "torch.onnx.symbolic_helper._operator_export_type",
   "torch.onnx.symbolic_helper._parse_arg"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.index_fill": {
  "lineno": 1317,
  "symbols_in_volume": [
   "torch.onnx.OperatorExportTypes.ONNX_ATEN_FALLBACK",
   "torch.onnx.symbolic_helper._if_scalar_type_as",
   "torch.onnx.symbolic_helper._index_fill_reshape_helper",
   "torch.onnx.symbolic_helper._maybe_get_scalar",
   "torch.onnx.symbolic_helper._operator_export_type",
   "torch.onnx.symbolic_helper._parse_arg"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.index_put": {
  "lineno": 1308,
  "symbols_in_volume": [
   "torch.onnx.OperatorExportTypes.ONNX_ATEN_FALLBACK",
   "torch.onnx.symbolic_helper._onnx_opset_unsupported",
   "torch.onnx.symbolic_helper._operator_export_type",
   "torch.onnx.symbolic_helper._unpack_list"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.index_select": {
  "lineno": 1290,
  "symbols_in_volume": [
   "torch.LongTensor",
   "torch.onnx.symbolic_helper._is_value",
   "torch.onnx.symbolic_helper._maybe_get_scalar",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.instance_norm": {
  "lineno": 1241,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._is_none",
   "torch.onnx.symbolic_helper.parse_args",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.isnan": {
  "lineno": 2130,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.kl_div": {
  "lineno": 2584,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._onnx_unsupported",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.layer_norm": {
  "lineno": 1214,
  "symbols_in_volume": [
   "torch.onnx.OperatorExportTypes.ONNX_ATEN_FALLBACK",
   "torch.onnx.symbolic_helper._is_none",
   "torch.onnx.symbolic_helper._operator_export_type",
   "torch.onnx.symbolic_helper.parse_args",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.le": {
  "lineno": 1034,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.leaky_relu": {
  "lineno": 636,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._get_const",
   "torch.onnx.symbolic_helper._scalar"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.log": {
  "lineno": 1369,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.log1p": {
  "lineno": 1373,
  "symbols_in_volume": [
   "torch.ones",
   "torch.onnx.symbolic_helper._if_scalar_type_as"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.log2": {
  "lineno": 2188,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.log_sigmoid": {
  "lineno": 2095,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.log_softmax": {
  "lineno": 1092,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._unimplemented",
   "torch.onnx.symbolic_helper.parse_args",
   "torch.onnx.symbolic_helper.scalar_type_to_onnx"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.logsumexp": {
  "lineno": 2254,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.lstm": {
  "lineno": 1966,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._is_tensor_list"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.lt": {
  "lineno": 1017,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.lt_impl": {
  "lineno": 1021,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.cast_pytorch_to_onnx"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.masked_fill": {
  "lineno": 2313,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._if_scalar_type_as",
   "torch.onnx.symbolic_helper._maybe_get_scalar"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.matmul": {
  "lineno": 206,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.max": {
  "lineno": 1415,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._get_const"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.meshgrid": {
  "lineno": 2459,
  "symbols_in_volume": [
   "torch.LongTensor",
   "torch.int64",
   "torch.ones",
   "torch.onnx.symbolic_helper._unpack_list"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.min": {
  "lineno": 1431,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._get_const"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.mm": {
  "lineno": 195,
  "symbols_in_volume": [
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.mul": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.multinomial": {
  "lineno": 2438,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._is_none",
   "torch.onnx.symbolic_helper._unimplemented",
   "torch.onnx.symbolic_helper.cast_pytorch_to_onnx",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.narrow": {
  "lineno": 2136,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._slice_helper",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.ne": {
  "lineno": 1000,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.neg": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.new_empty": {
  "lineno": 1537,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.cast_pytorch_to_onnx",
   "torch.onnx.symbolic_helper.scalar_type_to_onnx.index"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.new_full": {
  "lineno": 1641,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.cast_pytorch_to_onnx",
   "torch.onnx.symbolic_helper.scalar_type_to_onnx.index"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.new_zeros": {
  "lineno": 1590,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.cast_pytorch_to_onnx",
   "torch.onnx.symbolic_helper.scalar_type_to_onnx.index"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.nonzero": {
  "lineno": 2125,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.norm": {
  "lineno": 1484,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.numel": {
  "lineno": 1726,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.one_hot": {
  "lineno": 2197,
  "symbols_in_volume": [
   "torch.LongTensor",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.ones": {
  "lineno": 1597,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.parse_args",
   "torch.onnx.symbolic_helper.scalar_type_to_pytorch_type",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.ones_like": {
  "lineno": 1605,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.parse_args",
   "torch.onnx.symbolic_helper.scalar_type_to_pytorch_type",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.overload_by_arg_count": {
  "lineno": 296,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.overload_by_arg_count.wrapper": {
  "lineno": 297,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.permute": {
  "lineno": 453,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.pixel_shuffle": {
  "lineno": 1784,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._unimplemented",
   "torch.onnx.symbolic_helper.parse_args",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.pow": {
  "lineno": 1377,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._is_fp",
   "torch.onnx.symbolic_helper.cast_pytorch_to_onnx"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.prelu": {
  "lineno": 602,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.prim_ConstantChunk": {
  "lineno": 487,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.prim_ConstantSplit": {
  "lineno": 474,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.prim_shape": {
  "lineno": 2193,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.rand": {
  "lineno": 2063,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._get_const",
   "torch.onnx.symbolic_helper._is_packed_list",
   "torch.onnx.symbolic_helper.scalar_type_to_onnx",
   "torch.onnx.symbolic_helper.scalar_type_to_pytorch_type",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.rand_like": {
  "lineno": 2082,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._get_const",
   "torch.onnx.symbolic_helper.scalar_type_to_onnx"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.randn": {
  "lineno": 2051,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._get_const",
   "torch.onnx.symbolic_helper._is_packed_list",
   "torch.onnx.symbolic_helper.scalar_type_to_onnx",
   "torch.onnx.symbolic_helper.scalar_type_to_pytorch_type",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.randn_like": {
  "lineno": 2075,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._get_const",
   "torch.onnx.symbolic_helper.scalar_type_to_onnx"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.reciprocal": {
  "lineno": 175,
  "symbols_in_volume": [
   "torch.ones"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.reflection_pad": {
  "lineno": 917,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.relu": {
  "lineno": 610,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.remainder": {
  "lineno": 2472,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._is_fp"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.repeat": {
  "lineno": 1777,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.replication_pad": {
  "lineno": 924,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.reshape": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.reshape_as": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.rrelu": {
  "lineno": 2089,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.rsqrt": {
  "lineno": 223,
  "symbols_in_volume": [
   "torch.ones",
   "torch.onnx.symbolic_helper._if_scalar_type_as"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.rsub": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.scalar_tensor": {
  "lineno": 1544,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._get_const",
   "torch.onnx.symbolic_helper.scalar_type_to_onnx"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.scatter": {
  "lineno": 2161,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._is_value",
   "torch.onnx.symbolic_helper._maybe_get_scalar",
   "torch.onnx.symbolic_helper.cast_pytorch_to_onnx",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.scatter_add": {
  "lineno": 2175,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._scatter_helper",
   "torch.onnx.symbolic_helper._unimplemented",
   "torch.onnx.symbolic_helper.cast_pytorch_to_onnx",
   "torch.onnx.symbolic_helper.parse_args",
   "torch.onnx.symbolic_helper.scalar_type_to_onnx.index",
   "torch.onnx.symbolic_helper.scalar_type_to_pytorch_type",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.select": {
  "lineno": 549,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._is_value",
   "torch.onnx.symbolic_helper._maybe_get_scalar",
   "torch.onnx.symbolic_helper._slice_helper",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.selu": {
  "lineno": 1286,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.sigmoid": {
  "lineno": 255,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.sign": {
  "lineno": 259,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.sin": {
  "lineno": 231,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.size": {
  "lineno": 422,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._maybe_get_const",
   "torch.onnx.symbolic_helper._size_helper",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.slice": {
  "lineno": 1654,
  "symbols_in_volume": [
   "torch.onnx.OperatorExportTypes.ONNX",
   "torch.onnx.symbolic_helper._operator_export_type",
   "torch.onnx.symbolic_helper._parse_arg",
   "torch.onnx.symbolic_helper._slice_helper"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.softmax": {
  "lineno": 651,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._get_const",
   "torch.onnx.symbolic_helper.parse_args",
   "torch.onnx.symbolic_helper.scalar_type_to_onnx"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.softplus": {
  "lineno": 707,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._unimplemented",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.sort": {
  "lineno": 1716,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._unimplemented",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.split": {
  "lineno": 505,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._get_const",
   "torch.onnx.symbolic_helper._is_split_static",
   "torch.onnx.symbolic_helper._onnx_opset_unsupported_detailed",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.split_with_sizes": {
  "lineno": 527,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._is_split_static",
   "torch.onnx.symbolic_helper._onnx_opset_unsupported_detailed",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.sqrt": {
  "lineno": 219,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.squeeze": {
  "lineno": 563,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._get_const",
   "torch.onnx.symbolic_helper._unimplemented",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.stack": {
  "lineno": 185,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._unpack_list",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.std": {
  "lineno": 2247,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.sub": {
  "lineno": 90,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._maybe_get_scalar",
   "torch.onnx.symbolic_helper._scalar",
   "torch.onnx.symbolic_helper._unimplemented"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.t": {
  "lineno": 366,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.take": {
  "lineno": 2560,
  "symbols_in_volume": [
   "torch.int64",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.tan": {
  "lineno": 239,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.tanh": {
  "lineno": 227,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.tensor": {
  "lineno": 1552,
  "symbols_in_volume": [
   "torch.LongTensor",
   "torch.onnx.symbolic_helper._get_const",
   "torch.onnx.symbolic_helper._is_packed_list",
   "torch.onnx.symbolic_helper._unpack_list",
   "torch.onnx.symbolic_helper.cast_pytorch_to_onnx",
   "torch.onnx.symbolic_helper.scalar_type_to_onnx",
   "torch.onnx.symbolic_helper.scalar_type_to_onnx.index"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.threshold": {
  "lineno": 626,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._scalar",
   "torch.onnx.symbolic_helper._unimplemented",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.to": {
  "lineno": 1741,
  "symbols_in_volume": [
   "torch._C.ListType.ofInts",
   "torch.onnx.symbolic_helper._get_const",
   "torch.onnx.symbolic_helper._is_value",
   "torch.onnx.symbolic_helper._maybe_get_const",
   "torch.onnx.symbolic_helper.cast_pytorch_to_onnx",
   "torch.onnx.symbolic_helper.scalar_type_to_onnx"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.topk": {
  "lineno": 1731,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._unimplemented",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.transpose": {
  "lineno": 433,
  "symbols_in_volume": [
   "torch.onnx.OperatorExportTypes.ONNX_ATEN_FALLBACK",
   "torch.onnx.symbolic_helper._operator_export_type",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.true_divide": {
  "lineno": 144,
  "symbols_in_volume": [
   "torch.double",
   "torch.float",
   "torch.get_default_dtype",
   "torch.onnx.symbolic_helper._is_fp",
   "torch.onnx.symbolic_helper.cast_pytorch_to_onnx"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.type_as": {
  "lineno": 1337,
  "symbols_in_volume": [
   "torch.onnx.OperatorExportTypes.ONNX_ATEN_FALLBACK",
   "torch.onnx.symbolic_helper._operator_export_type",
   "torch.onnx.symbolic_helper.cast_pytorch_to_onnx"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.unbind": {
  "lineno": 538,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._onnx_opset_unsupported_detailed",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.unfold": {
  "lineno": 1257,
  "symbols_in_volume": [
   "torch.onnx.OperatorExportTypes.ONNX_ATEN_FALLBACK",
   "torch.onnx.symbolic_helper._operator_export_type",
   "torch.onnx.symbolic_helper._slice_helper",
   "torch.onnx.symbolic_helper._unimplemented",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.unsafe_chunk": {
  "lineno": 492,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._onnx_opset_unsupported_detailed",
   "torch.onnx.symbolic_helper.parse_args"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.unsafe_split": {
  "lineno": 523,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.unsafe_split_with_sizes": {
  "lineno": 534,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.unsqueeze": {
  "lineno": 1697,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._unimplemented",
   "torch.onnx.symbolic_helper.parse_args",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.unused": {
  "lineno": 58,
  "symbols_in_volume": [
   "torch._C.OptionalType.ofTensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.view": {
  "lineno": 460,
  "symbols_in_volume": [
   "torch.LongTensor",
   "torch.onnx.symbolic_helper._is_value",
   "torch.onnx.symbolic_helper._maybe_get_const"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.view_as": {
  "lineno": 469,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.where": {
  "lineno": 1081,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.cast_pytorch_to_onnx",
   "torch.onnx.symbolic_helper.parse_args",
   "torch.onnx.symbolic_opset9.nonzero",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.wrap_logical_op_with_cast_to": {
  "lineno": 972,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.wrap_logical_op_with_cast_to.decorator": {
  "lineno": 973,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.wrap_logical_op_with_cast_to.decorator.wrap_with_cast": {
  "lineno": 974,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.cast_pytorch_to_onnx"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.wrap_logical_op_with_cast_to_and_from": {
  "lineno": 980,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.wrap_logical_op_with_cast_to_and_from.decorator": {
  "lineno": 981,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.wrap_logical_op_with_cast_to_and_from.decorator.wrap_with_cast": {
  "lineno": 982,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.wrap_logical_op_with_negation": {
  "lineno": 990,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.wrap_logical_op_with_negation.wrap_with_not": {
  "lineno": 991,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.zeros": {
  "lineno": 1572,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.parse_args",
   "torch.onnx.symbolic_helper.scalar_type_to_pytorch_type",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_opset9.zeros_like": {
  "lineno": 1581,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper.parse_args",
   "torch.onnx.symbolic_helper.scalar_type_to_pytorch_type",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_registry": {
  "lineno": null,
  "symbols_in_volume": [
   "importlib.import_module",
   "torch.onnx.symbolic_helper._onnx_stable_opsets"
  ],
  "type": "module"
 },
 "torch.onnx.symbolic_registry.get_op_supported_version": {
  "lineno": 91,
  "symbols_in_volume": [
   "torch.onnx.symbolic_helper._onnx_stable_opsets"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_registry.get_ops_in_version": {
  "lineno": 67,
  "symbols_in_volume": [
   "inspect.getmembers"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_registry.get_registered_op": {
  "lineno": 100,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_registry.is_registered_op": {
  "lineno": 85,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_registry.is_registered_version": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_registry.register_op": {
  "lineno": 76,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_registry.register_ops_helper": {
  "lineno": 27,
  "symbols_in_volume": [
   "inspect.isfunction"
  ],
  "type": "function"
 },
 "torch.onnx.symbolic_registry.register_ops_in_version": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.symbolic_registry.register_version": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.utils": {
  "lineno": null,
  "symbols_in_volume": [
   "re.compile",
   "torch._C.Block.op",
   "torch._C.Graph.at",
   "torch._C.Graph.constant",
   "torch._C.Graph.op",
   "torch._C.Node.__getitem__"
  ],
  "type": "module"
 },
 "torch.onnx.utils._add_attribute": {
  "lineno": 740,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.onnx.utils._add_block": {
  "lineno": 860,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.utils._add_input_to_block": {
  "lineno": 864,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.utils._add_output_to_block": {
  "lineno": 868,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.utils._block_op": {
  "lineno": 841,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.utils._create_jit_graph": {
  "lineno": 352,
  "symbols_in_volume": [
   "torch._C._freeze_module",
   "torch._C._jit_pass_lower_graph",
   "torch._C._jit_pass_onnx_function_substitution",
   "torch._C._propagate_and_assign_input_shapes",
   "torch.jit.ScriptFunction",
   "torch.jit.ScriptModule",
   "torch.jit._flatten",
   "torch.jit._unique_state_dict"
  ],
  "type": "function"
 },
 "torch.onnx.utils._decide_add_node_names": {
  "lineno": 292,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.utils._decide_constant_folding": {
  "lineno": 296,
  "symbols_in_volume": [
   "torch.onnx.TrainingMode.EVAL",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.onnx.utils._decide_external_data_format": {
  "lineno": 308,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.utils._decide_keep_init_as_input": {
  "lineno": 263,
  "symbols_in_volume": [
   "torch.onnx.OperatorExportTypes.ONNX",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.onnx.utils._export": {
  "lineno": 579,
  "symbols_in_volume": [
   "os.makedirs",
   "os.path.exists",
   "os.path.isdir",
   "os.path.join",
   "torch._C._check_onnx_proto",
   "torch.nn.DataParallel",
   "torch.onnx.ExportTypes.COMPRESSED_ZIP_ARCHIVE",
   "torch.onnx.ExportTypes.DIRECTORY",
   "torch.onnx.ExportTypes.PROTOBUF_FILE",
   "torch.onnx.ExportTypes.ZIP_ARCHIVE",
   "torch.onnx.ONNX_ARCHIVE_MODEL_PROTO_NAME",
   "torch.onnx.OperatorExportTypes.ONNX",
   "torch.onnx.OperatorExportTypes.ONNX_ATEN_FALLBACK",
   "torch.onnx.PYTORCH_ONNX_CAFFE2_BUNDLE",
   "torch.onnx.symbolic_helper._default_onnx_opset_version",
   "torch.onnx.symbolic_helper._set_onnx_shape_inference",
   "torch.onnx.symbolic_helper._set_operator_export_type",
   "torch.onnx.symbolic_helper._set_opset_version",
   "torch.serialization._open_file_like",
   "zipfile.ZIP_DEFLATED",
   "zipfile.ZIP_STORED",
   "zipfile.ZipFile"
  ],
  "type": "function"
 },
 "torch.onnx.utils._export_to_pretty_string": {
  "lineno": 492,
  "symbols_in_volume": [
   "torch.onnx.ExportTypes.PROTOBUF_FILE",
   "torch.onnx.OperatorExportTypes.ONNX",
   "torch.onnx.symbolic_helper._default_onnx_opset_version",
   "torch.onnx.symbolic_helper._set_operator_export_type",
   "torch.onnx.symbolic_helper._set_opset_version"
  ],
  "type": "function"
 },
 "torch.onnx.utils._find_missing_ops_onnx_export": {
  "lineno": 522,
  "symbols_in_volume": [
   "torch.onnx.OperatorExportTypes.ONNX_FALLTHROUGH",
   "torch.onnx.TrainingMode.EVAL",
   "torch.onnx.symbolic_helper._default_onnx_opset_version",
   "torch.onnx.symbolic_helper._set_opset_version"
  ],
  "type": "function"
 },
 "torch.onnx.utils._find_symbolic_in_registry": {
  "lineno": 882,
  "symbols_in_volume": [
   "torch.onnx.OperatorExportTypes.ONNX_FALLTHROUGH",
   "torch.onnx.symbolic_helper._export_onnx_opset_version",
   "torch.onnx.symbolic_registry.get_registered_op",
   "torch.onnx.symbolic_registry.is_registered_op"
  ],
  "type": "function"
 },
 "torch.onnx.utils._graph_at": {
  "lineno": 1019,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.utils._graph_constant": {
  "lineno": 1028,
  "symbols_in_volume": [
   "numbers.Number",
   "torch.CharTensor",
   "torch.DoubleTensor",
   "torch.FloatTensor",
   "torch.HalfTensor",
   "torch.IntTensor",
   "torch.LongTensor",
   "torch.ShortTensor"
  ],
  "type": "function"
 },
 "torch.onnx.utils._graph_op": {
  "lineno": 786,
  "symbols_in_volume": [
   "torch._C._jit_pass_onnx_node_shape_type_inference",
   "torch.onnx.symbolic_helper._export_onnx_opset_version",
   "torch.onnx.symbolic_helper._onnx_shape_inference"
  ],
  "type": "function"
 },
 "torch.onnx.utils._graph_op.const_if_tensor": {
  "lineno": 820,
  "symbols_in_volume": [
   "torch._C.Value"
  ],
  "type": "function"
 },
 "torch.onnx.utils._is_constant_tensor_list": {
  "lineno": 94,
  "symbols_in_volume": [
   "torch._C.ListType",
   "torch._C.ListType.ofTensors",
   "torch._C.OptionalType.ofTensor"
  ],
  "type": "function"
 },
 "torch.onnx.utils._is_onnx_list": {
  "lineno": 732,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._six.container_abcs.Iterable",
   "torch._six.string_classes"
  ],
  "type": "function"
 },
 "torch.onnx.utils._model_to_graph": {
  "lineno": 393,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._C._jit_decay_packed_param_input_types",
   "torch._C._jit_flatten",
   "torch._C._jit_pass_dce_allow_deleting_nodes_with_side_effects",
   "torch._C._jit_pass_filter_non_tensor_arguments",
   "torch._C._jit_pass_onnx_assign_output_shape",
   "torch._C._jit_pass_onnx_cast_all_constant_to_floating",
   "torch._C._jit_pass_onnx_constant_fold",
   "torch._C._jit_pass_onnx_eliminate_unused_items",
   "torch._C._jit_pass_onnx_eval_peephole",
   "torch.jit.ScriptFunction",
   "torch.jit.ScriptModule",
   "torch.jit._flatten",
   "torch.onnx.OperatorExportTypes.ONNX",
   "torch.onnx.TrainingMode.EVAL",
   "torch.onnx.TrainingMode.PRESERVE",
   "torch.onnx.constant_folding_opset_versions",
   "torch.onnx.symbolic_helper._export_onnx_opset_version",
   "torch.onnx.symbolic_helper._onnx_shape_inference"
  ],
  "type": "function"
 },
 "torch.onnx.utils._newNode": {
  "lineno": 769,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.utils._node_getitem": {
  "lineno": 1059,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.utils._optimize_graph": {
  "lineno": 123,
  "symbols_in_volume": [
   "torch._C._jit_pass_canonicalize",
   "torch._C._jit_pass_canonicalize_graph_fuser_ops",
   "torch._C._jit_pass_constant_propagation",
   "torch._C._jit_pass_custom_pattern_based_rewrite_graph",
   "torch._C._jit_pass_dce",
   "torch._C._jit_pass_dce_allow_deleting_nodes_with_side_effects",
   "torch._C._jit_pass_erase_number_types",
   "torch._C._jit_pass_fuse_addmm",
   "torch._C._jit_pass_inline",
   "torch._C._jit_pass_inline_fork_wait",
   "torch._C._jit_pass_lint",
   "torch._C._jit_pass_lower_all_tuples",
   "torch._C._jit_pass_onnx",
   "torch._C._jit_pass_onnx_graph_shape_type_inference",
   "torch._C._jit_pass_onnx_peephole",
   "torch._C._jit_pass_onnx_prepare_inplace_ops_for_onnx",
   "torch._C._jit_pass_onnx_preprocess",
   "torch._C._jit_pass_onnx_preprocess_caffe2",
   "torch._C._jit_pass_onnx_quantization_insert_permutes",
   "torch._C._jit_pass_onnx_remove_inplace_ops_for_onnx",
   "torch._C._jit_pass_onnx_remove_print",
   "torch._C._jit_pass_onnx_scalar_type_analysis",
   "torch._C._jit_pass_onnx_set_dynamic_input_shape",
   "torch._C._jit_pass_onnx_unpack_quantized_weights",
   "torch._C._jit_pass_peephole",
   "torch._C._jit_pass_prepare_division_for_onnx",
   "torch._C._jit_pass_remove_inplace_ops",
   "torch.onnx.OperatorExportTypes.ONNX_ATEN_FALLBACK",
   "torch.onnx.OperatorExportTypes.RAW",
   "torch.onnx.symbolic_helper._export_onnx_opset_version",
   "torch.onnx.symbolic_helper._onnx_shape_inference",
   "torch.onnx.symbolic_helper._quantized_ops.clear"
  ],
  "type": "function"
 },
 "torch.onnx.utils._resolve_args_by_export_type": {
  "lineno": 252,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.onnx.utils._run_symbolic_function": {
  "lineno": 891,
  "symbols_in_volume": [
   "torch._C.ListType.ofFloats",
   "torch._C.ListType.ofInts",
   "torch._C._jit_pass_fixup_onnx_controlflow_node",
   "torch._C._jit_pass_onnx_block",
   "torch._C._jit_pass_onnx_node_shape_type_inference",
   "torch.onnx.OperatorExportTypes.ONNX",
   "torch.onnx.OperatorExportTypes.ONNX_ATEN",
   "torch.onnx.OperatorExportTypes.ONNX_ATEN_FALLBACK",
   "torch.onnx.OperatorExportTypes.ONNX_FALLTHROUGH",
   "torch.onnx.symbolic_caffe2.register_quantized_ops",
   "torch.onnx.symbolic_helper._export_onnx_opset_version",
   "torch.onnx.symbolic_helper._onnx_shape_inference",
   "torch.onnx.symbolic_registry.is_registered_op",
   "torch.onnx.symbolic_registry.is_registered_version",
   "torch.onnx.symbolic_registry.register_version",
   "torch.stack",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.onnx.utils._run_symbolic_method": {
  "lineno": 717,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.utils._scalar": {
  "lineno": 763,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.utils._set_input_and_output_names": {
  "lineno": 700,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.utils._set_input_and_output_names.set_names": {
  "lineno": 701,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.utils._split_tensor_list_constants": {
  "lineno": 105,
  "symbols_in_volume": [
   "torch._C.ListType.ofTensors"
  ],
  "type": "function"
 },
 "torch.onnx.utils._trace": {
  "lineno": 320,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.jit._get_trace_graph"
  ],
  "type": "function"
 },
 "torch.onnx.utils._trace_and_get_graph_from_model": {
  "lineno": 335,
  "symbols_in_volume": [
   "torch.jit._get_trace_graph",
   "torch.jit._unique_state_dict"
  ],
  "type": "function"
 },
 "torch.onnx.utils._validate_dynamic_axes": {
  "lineno": 1090,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.onnx.utils.export": {
  "lineno": 70,
  "symbols_in_volume": [
   "torch.onnx.OperatorExportTypes.ATEN",
   "torch.onnx.OperatorExportTypes.ONNX",
   "torch.onnx.OperatorExportTypes.ONNX_ATEN_FALLBACK",
   "torch.onnx.OperatorExportTypes.RAW",
   "torch.onnx.PYTORCH_ONNX_CAFFE2_BUNDLE"
  ],
  "type": "function"
 },
 "torch.onnx.utils.export_to_pretty_string": {
  "lineno": 469,
  "symbols_in_volume": [
   "torch.onnx.ExportTypes.PROTOBUF_FILE",
   "torch.onnx.OperatorExportTypes.ATEN",
   "torch.onnx.OperatorExportTypes.ONNX",
   "torch.onnx.OperatorExportTypes.RAW"
  ],
  "type": "function"
 },
 "torch.onnx.utils.is_in_onnx_export": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.onnx.utils.register_custom_op_symbolic": {
  "lineno": 1070,
  "symbols_in_volume": [
   "re.match",
   "torch.onnx.symbolic_helper._export_onnx_opset_version",
   "torch.onnx.symbolic_helper._onnx_stable_opsets",
   "torch.onnx.symbolic_registry.register_op"
  ],
  "type": "function"
 },
 "torch.onnx.utils.select_model_mode_for_export": {
  "lineno": 32,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "torch.jit.ScriptFunction",
   "torch.onnx.TrainingMode.EVAL",
   "torch.onnx.TrainingMode.PRESERVE",
   "torch.onnx.TrainingMode.TRAINING",
   "torch.onnx.symbolic_helper._export_onnx_opset_version",
   "torch.onnx.symbolic_helper._set_training_mode",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.onnx.utils.warn_on_static_input_change": {
  "lineno": 233,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.optim": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.optim._multi_tensor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.optim._multi_tensor.adadelta": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.optim._multi_tensor.adadelta.Adadelta": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.optim._multi_tensor.adadelta.Adadelta.__init__": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim._multi_tensor.adadelta.Adadelta.step": {
  "lineno": 36,
  "symbols_in_volume": [
   "torch._foreach_add",
   "torch._foreach_add_",
   "torch._foreach_addcmul_",
   "torch._foreach_div_",
   "torch._foreach_mul_",
   "torch._foreach_sqrt_",
   "torch.enable_grad",
   "torch.no_grad",
   "torch.preserve_format",
   "torch.zeros_like"
  ],
  "type": "function"
 },
 "torch.optim._multi_tensor.adam": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.optim._multi_tensor.adam.Adam": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.optim._multi_tensor.adam.Adam.__init__": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim._multi_tensor.adam.Adam.__setstate__": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim._multi_tensor.adam.Adam.step": {
  "lineno": 54,
  "symbols_in_volume": [
   "math.sqrt",
   "torch._foreach_add",
   "torch._foreach_add_",
   "torch._foreach_addcmul_",
   "torch._foreach_div_scalar_list_",
   "torch._foreach_mul_",
   "torch._foreach_sqrt",
   "torch.enable_grad",
   "torch.max",
   "torch.no_grad",
   "torch.preserve_format",
   "torch.zeros_like"
  ],
  "type": "function"
 },
 "torch.optim._multi_tensor.adamax": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.optim._multi_tensor.adamax.Adamax": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.optim._multi_tensor.adamax.Adamax.__init__": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim._multi_tensor.adamax.Adamax.step": {
  "lineno": 39,
  "symbols_in_volume": [
   "torch._foreach_add_",
   "torch._foreach_mul_",
   "torch.cat",
   "torch.enable_grad",
   "torch.max",
   "torch.no_grad",
   "torch.preserve_format",
   "torch.zeros_like"
  ],
  "type": "function"
 },
 "torch.optim._multi_tensor.adamw": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.optim._multi_tensor.adamw.AdamW": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.optim._multi_tensor.adamw.AdamW.__init__": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim._multi_tensor.adamw.AdamW.__setstate__": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim._multi_tensor.adamw.AdamW.step": {
  "lineno": 54,
  "symbols_in_volume": [
   "math.sqrt",
   "torch._foreach_add",
   "torch._foreach_add_",
   "torch._foreach_addcmul_",
   "torch._foreach_div_scalar_list_",
   "torch._foreach_mul_",
   "torch._foreach_sqrt",
   "torch.enable_grad",
   "torch.max",
   "torch.no_grad",
   "torch.preserve_format",
   "torch.zeros_like"
  ],
  "type": "function"
 },
 "torch.optim._multi_tensor.asgd": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.optim._multi_tensor.asgd.ASGD": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.optim._multi_tensor.asgd.ASGD.__init__": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim._multi_tensor.asgd.ASGD.step": {
  "lineno": 35,
  "symbols_in_volume": [
   "math.pow",
   "torch._foreach_add_",
   "torch._foreach_mul_",
   "torch.enable_grad",
   "torch.no_grad",
   "torch.preserve_format",
   "torch.zeros_like"
  ],
  "type": "function"
 },
 "torch.optim._multi_tensor.rmsprop": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.optim._multi_tensor.rmsprop.RMSprop": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.optim._multi_tensor.rmsprop.RMSprop.__init__": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim._multi_tensor.rmsprop.RMSprop.__setstate__": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim._multi_tensor.rmsprop.RMSprop.step": {
  "lineno": 55,
  "symbols_in_volume": [
   "torch._foreach_add_",
   "torch._foreach_addcdiv_",
   "torch._foreach_addcmul",
   "torch._foreach_addcmul_",
   "torch._foreach_mul_",
   "torch._foreach_sqrt",
   "torch._foreach_sqrt_",
   "torch.enable_grad",
   "torch.no_grad",
   "torch.preserve_format",
   "torch.zeros_like"
  ],
  "type": "function"
 },
 "torch.optim._multi_tensor.rprop": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.optim._multi_tensor.rprop.Rprop": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.optim._multi_tensor.rprop.Rprop.__init__": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim._multi_tensor.rprop.Rprop.step": {
  "lineno": 28,
  "symbols_in_volume": [
   "torch._foreach_addcmul_",
   "torch._foreach_mul",
   "torch._foreach_mul_",
   "torch.enable_grad",
   "torch.no_grad",
   "torch.preserve_format",
   "torch.zeros_like"
  ],
  "type": "function"
 },
 "torch.optim._multi_tensor.sgd": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.optim._multi_tensor.sgd.SGD": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.optim._multi_tensor.sgd.SGD.__init__": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim._multi_tensor.sgd.SGD.__setstate__": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim._multi_tensor.sgd.SGD.step": {
  "lineno": 75,
  "symbols_in_volume": [
   "torch._foreach_add",
   "torch._foreach_add_",
   "torch._foreach_mul_",
   "torch.clone",
   "torch.enable_grad",
   "torch.no_grad"
  ],
  "type": "function"
 },
 "torch.optim.adadelta": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.optim.adadelta.Adadelta": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.optim.adadelta.Adadelta.__init__": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.adadelta.Adadelta.step": {
  "lineno": 38,
  "symbols_in_volume": [
   "torch.enable_grad",
   "torch.no_grad",
   "torch.preserve_format",
   "torch.zeros_like"
  ],
  "type": "function"
 },
 "torch.optim.adagrad": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.optim.adagrad.Adagrad": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.optim.adagrad.Adagrad.__init__": {
  "lineno": 25,
  "symbols_in_volume": [
   "torch.full_like",
   "torch.preserve_format"
  ],
  "type": "function"
 },
 "torch.optim.adagrad.Adagrad.share_memory": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.adagrad.Adagrad.step": {
  "lineno": 53,
  "symbols_in_volume": [
   "torch.enable_grad",
   "torch.no_grad"
  ],
  "type": "function"
 },
 "torch.optim.adam": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.optim.adam.Adam": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.optim.adam.Adam.__init__": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.adam.Adam.__setstate__": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.adam.Adam.step": {
  "lineno": 55,
  "symbols_in_volume": [
   "torch.enable_grad",
   "torch.no_grad",
   "torch.preserve_format",
   "torch.zeros_like"
  ],
  "type": "function"
 },
 "torch.optim.adamax": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.optim.adamax.Adamax": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.optim.adamax.Adamax.__init__": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.adamax.Adamax.step": {
  "lineno": 39,
  "symbols_in_volume": [
   "torch.amax",
   "torch.cat",
   "torch.enable_grad",
   "torch.no_grad",
   "torch.preserve_format",
   "torch.zeros_like"
  ],
  "type": "function"
 },
 "torch.optim.adamw": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.optim.adamw.AdamW": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.optim.adamw.AdamW.__init__": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.adamw.AdamW.__setstate__": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.adamw.AdamW.step": {
  "lineno": 54,
  "symbols_in_volume": [
   "math.sqrt",
   "torch.enable_grad",
   "torch.maximum",
   "torch.no_grad",
   "torch.preserve_format",
   "torch.zeros_like"
  ],
  "type": "function"
 },
 "torch.optim.asgd": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.optim.asgd.ASGD": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.optim.asgd.ASGD.__init__": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.asgd.ASGD.step": {
  "lineno": 35,
  "symbols_in_volume": [
   "math.pow",
   "torch.enable_grad",
   "torch.no_grad",
   "torch.preserve_format",
   "torch.zeros_like"
  ],
  "type": "function"
 },
 "torch.optim.functional": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.optim.functional._make_sparse": {
  "lineno": 9,
  "symbols_in_volume": [
   "torch.empty_like",
   "torch.sparse_coo_tensor"
  ],
  "type": "function"
 },
 "torch.optim.functional.adagrad": {
  "lineno": 16,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.List"
  ],
  "type": "function"
 },
 "torch.optim.functional.adam": {
  "lineno": 53,
  "symbols_in_volume": [
   "math.sqrt",
   "torch.Tensor",
   "torch.maximum",
   "typing.List"
  ],
  "type": "function"
 },
 "torch.optim.lbfgs": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.optim.lbfgs.LBFGS": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.optim.lbfgs.LBFGS.__init__": {
  "lineno": 214,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.lbfgs.LBFGS._add_grad": {
  "lineno": 259,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.lbfgs.LBFGS._clone_param": {
  "lineno": 268,
  "symbols_in_volume": [
   "torch.contiguous_format"
  ],
  "type": "function"
 },
 "torch.optim.lbfgs.LBFGS._directional_evaluate": {
  "lineno": 275,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.lbfgs.LBFGS._gather_flat_grad": {
  "lineno": 247,
  "symbols_in_volume": [
   "torch.cat"
  ],
  "type": "function"
 },
 "torch.optim.lbfgs.LBFGS._numel": {
  "lineno": 242,
  "symbols_in_volume": [
   "functools.reduce"
  ],
  "type": "function"
 },
 "torch.optim.lbfgs.LBFGS._set_param": {
  "lineno": 271,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.lbfgs.LBFGS.step": {
  "lineno": 282,
  "symbols_in_volume": [
   "torch.contiguous_format",
   "torch.enable_grad",
   "torch.mul",
   "torch.no_grad"
  ],
  "type": "function"
 },
 "torch.optim.lbfgs.LBFGS.step.obj_func": {
  "lineno": 422,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.lbfgs._cubic_interpolate": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.lbfgs._strong_wolfe": {
  "lineno": 34,
  "symbols_in_volume": [
   "torch.contiguous_format"
  ],
  "type": "function"
 },
 "torch.optim.lr_scheduler": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.optim.lr_scheduler.CosineAnnealingLR": {
  "lineno": 461,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.optim.lr_scheduler.CosineAnnealingLR.__init__": {
  "lineno": 501,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.lr_scheduler.CosineAnnealingLR._get_closed_form_lr": {
  "lineno": 523,
  "symbols_in_volume": [
   "math.cos",
   "math.pi"
  ],
  "type": "function"
 },
 "torch.optim.lr_scheduler.CosineAnnealingLR.get_lr": {
  "lineno": 506,
  "symbols_in_volume": [
   "math.cos",
   "math.pi",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts": {
  "lineno": 926,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.__init__": {
  "lineno": 955,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.get_lr": {
  "lineno": 969,
  "symbols_in_volume": [
   "math.cos",
   "math.pi",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.step": {
  "lineno": 977,
  "symbols_in_volume": [
   "math.floor",
   "math.log"
  ],
  "type": "function"
 },
 "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.step._enable_get_lr_call": {
  "lineno": 1027,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.step._enable_get_lr_call.__enter__": {
  "lineno": 1032,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.step._enable_get_lr_call.__exit__": {
  "lineno": 1036,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.step._enable_get_lr_call.__init__": {
  "lineno": 1029,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.lr_scheduler.CyclicLR": {
  "lineno": 700,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.optim.lr_scheduler.CyclicLR.__init__": {
  "lineno": 794,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.lr_scheduler.CyclicLR._exp_range_scale_fn": {
  "lineno": 880,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.lr_scheduler.CyclicLR._format_param": {
  "lineno": 864,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.lr_scheduler.CyclicLR._triangular2_scale_fn": {
  "lineno": 877,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.lr_scheduler.CyclicLR._triangular_scale_fn": {
  "lineno": 874,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.lr_scheduler.CyclicLR.get_lr": {
  "lineno": 883,
  "symbols_in_volume": [
   "math.floor",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.optim.lr_scheduler.ExponentialLR": {
  "lineno": 430,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.optim.lr_scheduler.ExponentialLR.__init__": {
  "lineno": 442,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.lr_scheduler.ExponentialLR._get_closed_form_lr": {
  "lineno": 456,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.lr_scheduler.ExponentialLR.get_lr": {
  "lineno": 446,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.optim.lr_scheduler.LambdaLR": {
  "lineno": 171,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.optim.lr_scheduler.LambdaLR.__init__": {
  "lineno": 195,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.lr_scheduler.LambdaLR.get_lr": {
  "lineno": 245,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.optim.lr_scheduler.LambdaLR.load_state_dict": {
  "lineno": 226,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.optim.lr_scheduler.LambdaLR.state_dict": {
  "lineno": 207,
  "symbols_in_volume": [
   "types.FunctionType",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.optim.lr_scheduler.MultiStepLR": {
  "lineno": 382,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.optim.lr_scheduler.MultiStepLR.__init__": {
  "lineno": 409,
  "symbols_in_volume": [
   "collections.Counter"
  ],
  "type": "function"
 },
 "torch.optim.lr_scheduler.MultiStepLR._get_closed_form_lr": {
  "lineno": 424,
  "symbols_in_volume": [
   "bisect.bisect_right"
  ],
  "type": "function"
 },
 "torch.optim.lr_scheduler.MultiStepLR.get_lr": {
  "lineno": 414,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.optim.lr_scheduler.MultiplicativeLR": {
  "lineno": 254,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.optim.lr_scheduler.MultiplicativeLR.__init__": {
  "lineno": 276,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.lr_scheduler.MultiplicativeLR.get_lr": {
  "lineno": 322,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.optim.lr_scheduler.MultiplicativeLR.load_state_dict": {
  "lineno": 305,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.lr_scheduler.MultiplicativeLR.state_dict": {
  "lineno": 288,
  "symbols_in_volume": [
   "types.FunctionType"
  ],
  "type": "function"
 },
 "torch.optim.lr_scheduler.OneCycleLR": {
  "lineno": 1049,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.optim.lr_scheduler.OneCycleLR.__init__": {
  "lineno": 1141,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.lr_scheduler.OneCycleLR._annealing_cos": {
  "lineno": 1229,
  "symbols_in_volume": [
   "math.cos",
   "math.pi"
  ],
  "type": "function"
 },
 "torch.optim.lr_scheduler.OneCycleLR._annealing_linear": {
  "lineno": 1234,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.lr_scheduler.OneCycleLR._format_param": {
  "lineno": 1219,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.lr_scheduler.OneCycleLR.get_lr": {
  "lineno": 1238,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.optim.lr_scheduler.ReduceLROnPlateau": {
  "lineno": 529,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.optim.lr_scheduler.ReduceLROnPlateau.__init__": {
  "lineno": 578,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.lr_scheduler.ReduceLROnPlateau._init_is_better": {
  "lineno": 677,
  "symbols_in_volume": [
   "torch._six.inf"
  ],
  "type": "function"
 },
 "torch.optim.lr_scheduler.ReduceLROnPlateau._reduce_lr": {
  "lineno": 648,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.lr_scheduler.ReduceLROnPlateau._reset": {
  "lineno": 616,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.lr_scheduler.ReduceLROnPlateau.in_cooldown": {
  "lineno": 658,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.lr_scheduler.ReduceLROnPlateau.is_better": {
  "lineno": 662,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.lr_scheduler.ReduceLROnPlateau.load_state_dict": {
  "lineno": 695,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.lr_scheduler.ReduceLROnPlateau.state_dict": {
  "lineno": 692,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.lr_scheduler.ReduceLROnPlateau.step": {
  "lineno": 622,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.optim.lr_scheduler.StepLR": {
  "lineno": 334,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.optim.lr_scheduler.StepLR.__init__": {
  "lineno": 362,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.lr_scheduler.StepLR._get_closed_form_lr": {
  "lineno": 377,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.lr_scheduler.StepLR.get_lr": {
  "lineno": 367,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.optim.lr_scheduler._LRScheduler": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.optim.lr_scheduler._LRScheduler.__init__": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.lr_scheduler._LRScheduler.__init__.with_counter": {
  "lineno": 49,
  "symbols_in_volume": [
   "weakref.ref"
  ],
  "type": "function"
 },
 "torch.optim.lr_scheduler._LRScheduler.__init__.with_counter.wrapper": {
  "lineno": 62,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "torch.optim.lr_scheduler._LRScheduler.get_last_lr": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.lr_scheduler._LRScheduler.get_lr": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.lr_scheduler._LRScheduler.load_state_dict": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.lr_scheduler._LRScheduler.print_lr": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.lr_scheduler._LRScheduler.state_dict": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.lr_scheduler._LRScheduler.step": {
  "lineno": 119,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.optim.lr_scheduler._LRScheduler.step._enable_get_lr_call": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.optim.lr_scheduler._LRScheduler.step._enable_get_lr_call.__enter__": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.lr_scheduler._LRScheduler.step._enable_get_lr_call.__exit__": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.lr_scheduler._LRScheduler.step._enable_get_lr_call.__init__": {
  "lineno": 141,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.optimizer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.optim.optimizer.Optimizer": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.optim.optimizer.Optimizer.__getstate__": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.optimizer.Optimizer.__init__": {
  "lineno": 33,
  "symbols_in_volume": [
   "collections.defaultdict",
   "torch.Tensor",
   "torch._C._log_api_usage_once",
   "torch.typename"
  ],
  "type": "function"
 },
 "torch.optim.optimizer.Optimizer.__repr__": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.optimizer.Optimizer.__setstate__": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.optimizer.Optimizer.add_param_group": {
  "lineno": 207,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.typename",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.optim.optimizer.Optimizer.load_state_dict": {
  "lineno": 105,
  "symbols_in_volume": [
   "collections.defaultdict",
   "copy.deepcopy",
   "itertools.chain.from_iterable"
  ],
  "type": "function"
 },
 "torch.optim.optimizer.Optimizer.load_state_dict.cast": {
  "lineno": 132,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._six.container_abcs.Iterable"
  ],
  "type": "function"
 },
 "torch.optim.optimizer.Optimizer.load_state_dict.update_group": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.optimizer.Optimizer.state_dict": {
  "lineno": 75,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.optim.optimizer.Optimizer.state_dict.pack_group": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.optimizer.Optimizer.step": {
  "lineno": 194,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.optimizer.Optimizer.zero_grad": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.optimizer._RequiredParameter": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.optim.optimizer._RequiredParameter.__repr__": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.rmsprop": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.optim.rmsprop.RMSprop": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.optim.rmsprop.RMSprop.__init__": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.rmsprop.RMSprop.__setstate__": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.rmsprop.RMSprop.step": {
  "lineno": 55,
  "symbols_in_volume": [
   "torch.enable_grad",
   "torch.no_grad",
   "torch.preserve_format",
   "torch.zeros_like"
  ],
  "type": "function"
 },
 "torch.optim.rprop": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.optim.rprop.Rprop": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.optim.rprop.Rprop.__init__": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.rprop.Rprop.step": {
  "lineno": 28,
  "symbols_in_volume": [
   "torch.enable_grad",
   "torch.no_grad",
   "torch.preserve_format",
   "torch.zeros_like"
  ],
  "type": "function"
 },
 "torch.optim.sgd": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.optim.sgd.SGD": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.optim.sgd.SGD.__init__": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.sgd.SGD.__setstate__": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.sgd.SGD.step": {
  "lineno": 75,
  "symbols_in_volume": [
   "torch.clone",
   "torch.enable_grad",
   "torch.no_grad"
  ],
  "type": "function"
 },
 "torch.optim.sparse_adam": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.optim.sparse_adam.SparseAdam": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.optim.sparse_adam.SparseAdam.__init__": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.sparse_adam.SparseAdam.step": {
  "lineno": 51,
  "symbols_in_volume": [
   "math.sqrt",
   "torch.enable_grad",
   "torch.no_grad",
   "torch.preserve_format",
   "torch.zeros_like"
  ],
  "type": "function"
 },
 "torch.optim.sparse_adam.SparseAdam.step.make_sparse": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.swa_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.optim.swa_utils.AveragedModel": {
  "lineno": 8,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.optim.swa_utils.AveragedModel.__init__": {
  "lineno": 87,
  "symbols_in_volume": [
   "copy.deepcopy",
   "torch.long",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.optim.swa_utils.AveragedModel.__init__.avg_fn": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.swa_utils.AveragedModel.forward": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.swa_utils.AveragedModel.update_parameters": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.swa_utils.SWALR": {
  "lineno": 169,
  "symbols_in_volume": [
   "torch.optim.lr_scheduler._LRScheduler"
  ],
  "type": "class"
 },
 "torch.optim.swa_utils.SWALR.__init__": {
  "lineno": 211,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.swa_utils.SWALR._cosine_anneal": {
  "lineno": 245,
  "symbols_in_volume": [
   "math.cos",
   "math.pi"
  ],
  "type": "function"
 },
 "torch.optim.swa_utils.SWALR._format_param": {
  "lineno": 229,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.swa_utils.SWALR._get_initial_lr": {
  "lineno": 249,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.swa_utils.SWALR._linear_anneal": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.swa_utils.SWALR.get_lr": {
  "lineno": 255,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.optim.swa_utils.update_bn": {
  "lineno": 115,
  "symbols_in_volume": [
   "torch.nn.modules.batchnorm._BatchNorm",
   "torch.ones_like",
   "torch.zeros_like"
  ],
  "type": "function"
 },
 "torch.overrides": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.overrides._get_overloaded_args": {
  "lineno": 958,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Iterable",
   "typing.List"
  ],
  "type": "function"
 },
 "torch.overrides.get_ignored_functions": {
  "lineno": 31,
  "symbols_in_volume": [
   "functools.lru_cache",
   "torch.Tensor",
   "torch.align_tensors",
   "torch.arange",
   "torch.as_strided",
   "torch.as_tensor",
   "torch.autocast_decrement_nesting",
   "torch.autocast_increment_nesting",
   "torch.bartlett_window",
   "torch.blackman_window",
   "torch.can_cast",
   "torch.clear_autocast_cache",
   "torch.cpp",
   "torch.cudnn_affine_grid_generator",
   "torch.cudnn_batch_norm",
   "torch.cudnn_convolution",
   "torch.cudnn_convolution_transpose",
   "torch.cudnn_grid_sampler",
   "torch.cudnn_is_acceptable",
   "torch.default_generator",
   "torch.device",
   "torch.dtype",
   "torch.empty",
   "torch.empty_meta",
   "torch.empty_quantized",
   "torch.empty_strided",
   "torch.enable_grad",
   "torch.eye",
   "torch.finfo",
   "torch.fork",
   "torch.from_file",
   "torch.from_numpy",
   "torch.full",
   "torch.get_default_dtype",
   "torch.get_device",
   "torch.get_num_interop_threads",
   "torch.get_num_threads",
   "torch.get_rng_state",
   "torch.hamming_window",
   "torch.hann_window",
   "torch.has_cuda",
   "torch.has_cudnn",
   "torch.has_lapack",
   "torch.has_mkl",
   "torch.has_mkldnn",
   "torch.has_openmp",
   "torch.iinfo",
   "torch.import_ir_module",
   "torch.import_ir_module_from_buffer",
   "torch.init_num_threads",
   "torch.initial_seed",
   "torch.is_anomaly_enabled",
   "torch.is_autocast_enabled",
   "torch.is_deterministic",
   "torch.is_grad_enabled",
   "torch.is_storage",
   "torch.is_tensor",
   "torch.is_vulkan_available",
   "torch.kaiser_window",
   "torch.layout",
   "torch.linspace",
   "torch.load",
   "torch.logspace",
   "torch.manual_seed",
   "torch.memory_format",
   "torch.merge_type_from_type_comment",
   "torch.mkldnn_adaptive_avg_pool2d",
   "torch.mkldnn_convolution",
   "torch.mkldnn_convolution_backward_weights",
   "torch.mkldnn_max_pool2d",
   "torch.mkldnn_max_pool3d",
   "torch.nn.functional.assert_int_or_pair",
   "torch.nn.functional.boolean_dispatch",
   "torch.nn.functional.handle_torch_function",
   "torch.nn.functional.hardsigmoid",
   "torch.nn.functional.hardswish",
   "torch.nn.functional.has_torch_function",
   "torch.nn.functional.sigmoid",
   "torch.nn.functional.tanh",
   "torch.nn.functional.upsample",
   "torch.nn.functional.upsample_bilinear",
   "torch.nn.functional.upsample_nearest",
   "torch.no_grad",
   "torch.normal",
   "torch.ones",
   "torch.parse_ir",
   "torch.parse_schema",
   "torch.parse_type_comment",
   "torch.promote_types",
   "torch.qscheme",
   "torch.rand",
   "torch.randint",
   "torch.randn",
   "torch.randperm",
   "torch.range",
   "torch.result_type",
   "torch.save",
   "torch.scalar_tensor",
   "torch.seed",
   "torch.set_anomaly_enabled",
   "torch.set_autocast_enabled",
   "torch.set_default_tensor_type",
   "torch.set_deterministic",
   "torch.set_flush_denormal",
   "torch.set_grad_enabled",
   "torch.set_num_interop_threads",
   "torch.set_num_threads",
   "torch.set_printoptions",
   "torch.set_rng_state",
   "torch.sparse_coo_tensor",
   "torch.tensor",
   "torch.tril_indices",
   "torch.triu_indices",
   "torch.typename",
   "torch.unify_type_list",
   "torch.vander",
   "torch.wait",
   "torch.zeros",
   "typing.Callable",
   "typing.Set"
  ],
  "type": "function"
 },
 "torch.overrides.get_overridable_functions": {
  "lineno": 1090,
  "symbols_in_volume": [
   "__future__._Feature",
   "collections.defaultdict",
   "functools.lru_cache",
   "torch",
   "torch.Tensor",
   "torch._C._VariableFunctions",
   "torch.__all__",
   "torch.functional",
   "torch.functional.__all__",
   "torch.nn.functional",
   "types.ModuleType",
   "typing.Any",
   "typing.Callable",
   "typing.Dict",
   "typing.List"
  ],
  "type": "function"
 },
 "torch.overrides.get_tensor_methods": {
  "lineno": 1150,
  "symbols_in_volume": [
   "functools.lru_cache",
   "torch.Tensor",
   "typing.Callable",
   "typing.Set"
  ],
  "type": "function"
 },
 "torch.overrides.get_testing_overrides": {
  "lineno": 184,
  "symbols_in_volume": [
   "functools.lru_cache",
   "torch.Tensor",
   "torch.abs",
   "torch.absolute",
   "torch.acos",
   "torch.acosh",
   "torch.adaptive_avg_pool1d",
   "torch.adaptive_max_pool1d",
   "torch.add",
   "torch.addbmm",
   "torch.addcdiv",
   "torch.addcmul",
   "torch.addmm",
   "torch.addmv",
   "torch.addr",
   "torch.affine_grid_generator",
   "torch.all",
   "torch.allclose",
   "torch.alpha_dropout",
   "torch.amax",
   "torch.amin",
   "torch.angle",
   "torch.any",
   "torch.arccos",
   "torch.arccosh",
   "torch.arcsin",
   "torch.arcsinh",
   "torch.arctan",
   "torch.arctanh",
   "torch.argmax",
   "torch.argmin",
   "torch.argsort",
   "torch.asin",
   "torch.asinh",
   "torch.atan",
   "torch.atan2",
   "torch.atanh",
   "torch.atleast_1d",
   "torch.atleast_2d",
   "torch.atleast_3d",
   "torch.avg_pool1d",
   "torch.baddbmm",
   "torch.batch_norm",
   "torch.batch_norm_backward_elemt",
   "torch.batch_norm_backward_reduce",
   "torch.batch_norm_elemt",
   "torch.batch_norm_gather_stats",
   "torch.batch_norm_gather_stats_with_counts",
   "torch.batch_norm_stats",
   "torch.batch_norm_update_stats",
   "torch.bernoulli",
   "torch.bilinear",
   "torch.binary_cross_entropy_with_logits",
   "torch.bincount",
   "torch.binomial",
   "torch.bitwise_and",
   "torch.bitwise_not",
   "torch.bitwise_or",
   "torch.bitwise_xor",
   "torch.block_diag",
   "torch.bmm",
   "torch.broadcast_tensors",
   "torch.bucketize",
   "torch.cartesian_prod",
   "torch.cat",
   "torch.cdist",
   "torch.ceil",
   "torch.celu",
   "torch.chain_matmul",
   "torch.channel_shuffle",
   "torch.cholesky",
   "torch.cholesky_inverse",
   "torch.cholesky_solve",
   "torch.choose_qparams_optimized",
   "torch.chunk",
   "torch.clamp",
   "torch.clamp_max",
   "torch.clamp_min",
   "torch.clip",
   "torch.clone",
   "torch.combinations",
   "torch.complex",
   "torch.conj",
   "torch.constant_pad_nd",
   "torch.contiguous_format",
   "torch.conv1d",
   "torch.conv2d",
   "torch.conv3d",
   "torch.conv_tbc",
   "torch.conv_transpose1d",
   "torch.conv_transpose2d",
   "torch.conv_transpose3d",
   "torch.convolution",
   "torch.cos",
   "torch.cosh",
   "torch.cosine_embedding_loss",
   "torch.cosine_similarity",
   "torch.count_nonzero",
   "torch.cross",
   "torch.ctc_loss",
   "torch.cummax",
   "torch.cummin",
   "torch.cumprod",
   "torch.cumsum",
   "torch.deg2rad",
   "torch.dequantize",
   "torch.det",
   "torch.detach",
   "torch.diag",
   "torch.diag_embed",
   "torch.diagflat",
   "torch.diagonal",
   "torch.digamma",
   "torch.dist",
   "torch.div",
   "torch.divide",
   "torch.dot",
   "torch.dropout",
   "torch.dsmm",
   "torch.dstack",
   "torch.eig",
   "torch.einsum",
   "torch.embedding",
   "torch.embedding_bag",
   "torch.empty_like",
   "torch.eq",
   "torch.equal",
   "torch.erf",
   "torch.erfc",
   "torch.erfinv",
   "torch.exp",
   "torch.exp2",
   "torch.expm1",
   "torch.fake_quantize_per_channel_affine",
   "torch.fake_quantize_per_tensor_affine",
   "torch.fbgemm_linear_fp16_weight",
   "torch.fbgemm_linear_fp16_weight_fp32_activation",
   "torch.fbgemm_linear_int8_weight",
   "torch.fbgemm_linear_int8_weight_fp32_activation",
   "torch.fbgemm_linear_quantize_weight",
   "torch.fbgemm_pack_gemm_matrix_fp16",
   "torch.fbgemm_pack_quantized_matrix",
   "torch.feature_alpha_dropout",
   "torch.feature_dropout",
   "torch.fft",
   "torch.fix",
   "torch.flatten",
   "torch.flip",
   "torch.fliplr",
   "torch.flipud",
   "torch.floor",
   "torch.floor_divide",
   "torch.fmod",
   "torch.frac",
   "torch.frobenius_norm",
   "torch.full_like",
   "torch.functional.lu_unpack",
   "torch.gather",
   "torch.gcd",
   "torch.ge",
   "torch.geqrf",
   "torch.ger",
   "torch.greater",
   "torch.greater_equal",
   "torch.grid_sampler",
   "torch.grid_sampler_2d",
   "torch.grid_sampler_3d",
   "torch.group_norm",
   "torch.gru",
   "torch.gru_cell",
   "torch.gt",
   "torch.hardshrink",
   "torch.heaviside",
   "torch.hinge_embedding_loss",
   "torch.histc",
   "torch.hsmm",
   "torch.hspmm",
   "torch.hstack",
   "torch.hypot",
   "torch.i0",
   "torch.ifft",
   "torch.imag",
   "torch.index_add",
   "torch.index_copy",
   "torch.index_fill",
   "torch.index_put",
   "torch.index_select",
   "torch.instance_norm",
   "torch.int_repr",
   "torch.inverse",
   "torch.irfft",
   "torch.is_complex",
   "torch.is_distributed",
   "torch.is_floating_point",
   "torch.is_nonzero",
   "torch.is_same_size",
   "torch.is_signed",
   "torch.isclose",
   "torch.isfinite",
   "torch.isinf",
   "torch.isnan",
   "torch.isneginf",
   "torch.isposinf",
   "torch.isreal",
   "torch.istft",
   "torch.kl_div",
   "torch.kthvalue",
   "torch.layer_norm",
   "torch.lcm",
   "torch.le",
   "torch.lerp",
   "torch.less",
   "torch.less_equal",
   "torch.lgamma",
   "torch.linalg.det",
   "torch.lobpcg",
   "torch.log",
   "torch.log10",
   "torch.log1p",
   "torch.log2",
   "torch.log_softmax",
   "torch.logaddexp",
   "torch.logaddexp2",
   "torch.logcumsumexp",
   "torch.logdet",
   "torch.logical_and",
   "torch.logical_not",
   "torch.logical_or",
   "torch.logical_xor",
   "torch.logit",
   "torch.logsumexp",
   "torch.lstm",
   "torch.lstm_cell",
   "torch.lstsq",
   "torch.lt",
   "torch.lu",
   "torch.lu_solve",
   "torch.margin_ranking_loss",
   "torch.masked_fill",
   "torch.masked_scatter",
   "torch.masked_select",
   "torch.matmul",
   "torch.matrix_exp",
   "torch.matrix_power",
   "torch.matrix_rank",
   "torch.max",
   "torch.max_pool1d",
   "torch.max_pool1d_with_indices",
   "torch.max_pool2d",
   "torch.max_pool3d",
   "torch.maximum",
   "torch.mean",
   "torch.median",
   "torch.meshgrid",
   "torch.min",
   "torch.minimum",
   "torch.miopen_batch_norm",
   "torch.miopen_convolution",
   "torch.miopen_convolution_transpose",
   "torch.miopen_depthwise_convolution",
   "torch.miopen_rnn",
   "torch.mm",
   "torch.mode",
   "torch.movedim",
   "torch.mul",
   "torch.multinomial",
   "torch.multiply",
   "torch.mv",
   "torch.mvlgamma",
   "torch.nanquantile",
   "torch.nansum",
   "torch.narrow",
   "torch.native_batch_norm",
   "torch.native_group_norm",
   "torch.native_layer_norm",
   "torch.native_norm",
   "torch.ne",
   "torch.neg",
   "torch.negative",
   "torch.nextafter",
   "torch.nn.functional.adaptive_avg_pool2d",
   "torch.nn.functional.adaptive_avg_pool3d",
   "torch.nn.functional.adaptive_max_pool1d",
   "torch.nn.functional.adaptive_max_pool1d_with_indices",
   "torch.nn.functional.adaptive_max_pool2d",
   "torch.nn.functional.adaptive_max_pool2d_with_indices",
   "torch.nn.functional.adaptive_max_pool3d",
   "torch.nn.functional.adaptive_max_pool3d_with_indices",
   "torch.nn.functional.affine_grid",
   "torch.nn.functional.alpha_dropout",
   "torch.nn.functional.avg_pool2d",
   "torch.nn.functional.avg_pool3d",
   "torch.nn.functional.batch_norm",
   "torch.nn.functional.bilinear",
   "torch.nn.functional.binary_cross_entropy",
   "torch.nn.functional.binary_cross_entropy_with_logits",
   "torch.nn.functional.celu",
   "torch.nn.functional.cosine_embedding_loss",
   "torch.nn.functional.cross_entropy",
   "torch.nn.functional.ctc_loss",
   "torch.nn.functional.dropout",
   "torch.nn.functional.dropout2d",
   "torch.nn.functional.dropout3d",
   "torch.nn.functional.elu",
   "torch.nn.functional.embedding",
   "torch.nn.functional.embedding_bag",
   "torch.nn.functional.feature_alpha_dropout",
   "torch.nn.functional.fold",
   "torch.nn.functional.fractional_max_pool2d",
   "torch.nn.functional.fractional_max_pool2d_with_indices",
   "torch.nn.functional.fractional_max_pool3d",
   "torch.nn.functional.fractional_max_pool3d_with_indices",
   "torch.nn.functional.gelu",
   "torch.nn.functional.glu",
   "torch.nn.functional.grid_sample",
   "torch.nn.functional.group_norm",
   "torch.nn.functional.gumbel_softmax",
   "torch.nn.functional.hardshrink",
   "torch.nn.functional.hardtanh",
   "torch.nn.functional.hinge_embedding_loss",
   "torch.nn.functional.instance_norm",
   "torch.nn.functional.interpolate",
   "torch.nn.functional.kl_div",
   "torch.nn.functional.l1_loss",
   "torch.nn.functional.layer_norm",
   "torch.nn.functional.leaky_relu",
   "torch.nn.functional.linear",
   "torch.nn.functional.local_response_norm",
   "torch.nn.functional.log_softmax",
   "torch.nn.functional.logsigmoid",
   "torch.nn.functional.lp_pool1d",
   "torch.nn.functional.lp_pool2d",
   "torch.nn.functional.margin_ranking_loss",
   "torch.nn.functional.max_pool1d",
   "torch.nn.functional.max_pool1d_with_indices",
   "torch.nn.functional.max_pool2d",
   "torch.nn.functional.max_pool2d_with_indices",
   "torch.nn.functional.max_pool3d",
   "torch.nn.functional.max_pool3d_with_indices",
   "torch.nn.functional.max_unpool1d",
   "torch.nn.functional.max_unpool2d",
   "torch.nn.functional.max_unpool3d",
   "torch.nn.functional.mse_loss",
   "torch.nn.functional.multi_head_attention_forward",
   "torch.nn.functional.multi_margin_loss",
   "torch.nn.functional.multilabel_margin_loss",
   "torch.nn.functional.multilabel_soft_margin_loss",
   "torch.nn.functional.nll_loss",
   "torch.nn.functional.normalize",
   "torch.nn.functional.one_hot",
   "torch.nn.functional.pad",
   "torch.nn.functional.pairwise_distance",
   "torch.nn.functional.poisson_nll_loss",
   "torch.nn.functional.prelu",
   "torch.nn.functional.relu",
   "torch.nn.functional.relu6",
   "torch.nn.functional.rrelu",
   "torch.nn.functional.selu",
   "torch.nn.functional.silu",
   "torch.nn.functional.smooth_l1_loss",
   "torch.nn.functional.soft_margin_loss",
   "torch.nn.functional.softmax",
   "torch.nn.functional.softmin",
   "torch.nn.functional.softplus",
   "torch.nn.functional.softshrink",
   "torch.nn.functional.softsign",
   "torch.nn.functional.tanhshrink",
   "torch.nn.functional.threshold",
   "torch.nn.functional.triplet_margin_loss",
   "torch.nn.functional.triplet_margin_with_distance_loss",
   "torch.nn.functional.unfold",
   "torch.nonzero",
   "torch.norm",
   "torch.norm_except_dim",
   "torch.not_equal",
   "torch.nuclear_norm",
   "torch.numel",
   "torch.ones_like",
   "torch.orgqr",
   "torch.ormqr",
   "torch.outer",
   "torch.pairwise_distance",
   "torch.pca_lowrank",
   "torch.pdist",
   "torch.pinverse",
   "torch.pixel_shuffle",
   "torch.poisson",
   "torch.poisson_nll_loss",
   "torch.polar",
   "torch.polygamma",
   "torch.pow",
   "torch.prelu",
   "torch.preserve_format",
   "torch.prod",
   "torch.q_per_channel_axis",
   "torch.q_per_channel_scales",
   "torch.q_per_channel_zero_points",
   "torch.q_scale",
   "torch.q_zero_point",
   "torch.qr",
   "torch.quantile",
   "torch.quantize_per_channel",
   "torch.quantize_per_tensor",
   "torch.quantized_batch_norm",
   "torch.quantized_gru_cell",
   "torch.quantized_lstm_cell",
   "torch.quantized_max_pool1d",
   "torch.quantized_max_pool2d",
   "torch.quantized_rnn_relu_cell",
   "torch.quantized_rnn_tanh_cell",
   "torch.rad2deg",
   "torch.rand_like",
   "torch.randint_like",
   "torch.randn_like",
   "torch.real",
   "torch.reciprocal",
   "torch.relu",
   "torch.remainder",
   "torch.renorm",
   "torch.repeat_interleave",
   "torch.reshape",
   "torch.rfft",
   "torch.rnn_relu",
   "torch.rnn_relu_cell",
   "torch.rnn_tanh",
   "torch.rnn_tanh_cell",
   "torch.roll",
   "torch.rot90",
   "torch.round",
   "torch.rrelu",
   "torch.rsqrt",
   "torch.rsub",
   "torch.saddmm",
   "torch.scatter",
   "torch.scatter_add",
   "torch.searchsorted",
   "torch.select",
   "torch.selu",
   "torch.sgn",
   "torch.sigmoid",
   "torch.sign",
   "torch.signbit",
   "torch.sin",
   "torch.sinh",
   "torch.slogdet",
   "torch.smm",
   "torch.softmax",
   "torch.solve",
   "torch.sort",
   "torch.split",
   "torch.split_with_sizes",
   "torch.spmm",
   "torch.sqrt",
   "torch.square",
   "torch.squeeze",
   "torch.sspaddmm",
   "torch.stack",
   "torch.std",
   "torch.std_mean",
   "torch.stft",
   "torch.strided",
   "torch.sub",
   "torch.subtract",
   "torch.sum",
   "torch.svd",
   "torch.svd_lowrank",
   "torch.symeig",
   "torch.t",
   "torch.take",
   "torch.tan",
   "torch.tanh",
   "torch.tensordot",
   "torch.threshold",
   "torch.topk",
   "torch.trace",
   "torch.transpose",
   "torch.trapz",
   "torch.triangular_solve",
   "torch.tril",
   "torch.triplet_margin_loss",
   "torch.triu",
   "torch.true_divide",
   "torch.trunc",
   "torch.unbind",
   "torch.unique",
   "torch.unique_consecutive",
   "torch.unsafe_chunk",
   "torch.unsafe_split",
   "torch.unsafe_split_with_sizes",
   "torch.unsqueeze",
   "torch.var",
   "torch.var_mean",
   "torch.vdot",
   "torch.view_as_complex",
   "torch.view_as_real",
   "torch.vstack",
   "torch.where",
   "torch.zeros_like",
   "typing.Callable",
   "typing.Dict"
  ],
  "type": "function"
 },
 "torch.overrides.handle_torch_function": {
  "lineno": 1021,
  "symbols_in_volume": [
   "types",
   "typing.Any",
   "typing.Callable",
   "typing.Iterable"
  ],
  "type": "function"
 },
 "torch.overrides.has_torch_function": {
  "lineno": 1070,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._C._disabled_torch_function_impl",
   "torch._C._is_torch_function_enabled",
   "typing.Any",
   "typing.Iterable"
  ],
  "type": "function"
 },
 "torch.overrides.is_tensor_like": {
  "lineno": 1174,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.overrides.is_tensor_method_or_property": {
  "lineno": 1157,
  "symbols_in_volume": [
   "typing.Callable"
  ],
  "type": "function"
 },
 "torch.quantization": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.quantization._correct_bias": {
  "lineno": null,
  "symbols_in_volume": [
   "torch.nn.Conv2d",
   "torch.nn.Linear",
   "torch.nn.quantized.Conv2d",
   "torch.nn.quantized.Linear"
  ],
  "type": "module"
 },
 "torch.quantization._correct_bias.MeanShadowLogger": {
  "lineno": 35,
  "symbols_in_volume": [
   "torch.quantization._numeric_suite.Logger"
  ],
  "type": "class"
 },
 "torch.quantization._correct_bias.MeanShadowLogger.__init__": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization._correct_bias.MeanShadowLogger.clear": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization._correct_bias.MeanShadowLogger.forward": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization._correct_bias.bias_correction": {
  "lineno": 76,
  "symbols_in_volume": [
   "torch.mean",
   "torch.quantization._numeric_suite.get_logger_dict",
   "torch.quantization._numeric_suite.prepare_model_with_stubs"
  ],
  "type": "function"
 },
 "torch.quantization._correct_bias.get_module": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization._correct_bias.get_param": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization._correct_bias.parent_child_names": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization._equalize": {
  "lineno": null,
  "symbols_in_volume": [
   "torch.nn.Conv2d",
   "torch.nn.Linear"
  ],
  "type": "module"
 },
 "torch.quantization._equalize.channel_range": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization._equalize.converged": {
  "lineno": 118,
  "symbols_in_volume": [
   "torch.norm",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.quantization._equalize.cross_layer_equalization": {
  "lineno": 36,
  "symbols_in_volume": [
   "torch.nn.Parameter",
   "torch.reciprocal",
   "torch.reshape",
   "torch.sqrt"
  ],
  "type": "function"
 },
 "torch.quantization._equalize.equalize": {
  "lineno": 79,
  "symbols_in_volume": [
   "copy.deepcopy",
   "torch.nn.Module",
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "torch.quantization._equalize.max_over_ndim": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization._equalize.min_over_ndim": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization._learnable_fake_quantize": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.quantization._learnable_fake_quantize._LearnableFakeQuantize": {
  "lineno": 191,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.quantization._learnable_fake_quantize._LearnableFakeQuantize.__init__": {
  "lineno": 215,
  "symbols_in_volume": [
   "torch.iinfo",
   "torch.log2",
   "torch.nn.parameter.Parameter",
   "torch.tensor",
   "torch.uint8"
  ],
  "type": "function"
 },
 "torch.quantization._learnable_fake_quantize._LearnableFakeQuantize._load_from_state_dict": {
  "lineno": 345,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization._learnable_fake_quantize._LearnableFakeQuantize._save_to_state_dict": {
  "lineno": 339,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization._learnable_fake_quantize._LearnableFakeQuantize.calculate_qparams": {
  "lineno": 297,
  "symbols_in_volume": [
   "torch.jit.export"
  ],
  "type": "function"
 },
 "torch.quantization._learnable_fake_quantize._LearnableFakeQuantize.enable_param_learning": {
  "lineno": 247,
  "symbols_in_volume": [
   "torch.jit.export"
  ],
  "type": "function"
 },
 "torch.quantization._learnable_fake_quantize._LearnableFakeQuantize.enable_static_estimate": {
  "lineno": 257,
  "symbols_in_volume": [
   "torch.jit.export"
  ],
  "type": "function"
 },
 "torch.quantization._learnable_fake_quantize._LearnableFakeQuantize.enable_static_observation": {
  "lineno": 266,
  "symbols_in_volume": [
   "torch.jit.export"
  ],
  "type": "function"
 },
 "torch.quantization._learnable_fake_quantize._LearnableFakeQuantize.forward": {
  "lineno": 301,
  "symbols_in_volume": [
   "torch.fake_quantize_per_channel_affine",
   "torch.fake_quantize_per_tensor_affine",
   "torch.per_channel_affine",
   "torch.per_channel_symmetric"
  ],
  "type": "function"
 },
 "torch.quantization._learnable_fake_quantize._LearnableFakeQuantize.observe_quant_params": {
  "lineno": 292,
  "symbols_in_volume": [
   "torch.jit.export"
  ],
  "type": "function"
 },
 "torch.quantization._learnable_fake_quantize._LearnableFakeQuantize.toggle_fake_quant": {
  "lineno": 287,
  "symbols_in_volume": [
   "torch.jit.export"
  ],
  "type": "function"
 },
 "torch.quantization._learnable_fake_quantize._LearnableFakeQuantize.toggle_observer_update": {
  "lineno": 275,
  "symbols_in_volume": [
   "torch.jit.export"
  ],
  "type": "function"
 },
 "torch.quantization._learnable_fake_quantize._LearnableFakeQuantize.toggle_qparam_learning": {
  "lineno": 280,
  "symbols_in_volume": [
   "torch.jit.export"
  ],
  "type": "function"
 },
 "torch.quantization._learnable_fake_quantize._LearnableFakeQuantizePerChannelOp": {
  "lineno": 141,
  "symbols_in_volume": [
   "torch.autograd.Function"
  ],
  "type": "class"
 },
 "torch.quantization._learnable_fake_quantize._LearnableFakeQuantizePerChannelOp.backward": {
  "lineno": 156,
  "symbols_in_volume": [
   "torch.float32",
   "torch.int64"
  ],
  "type": "function"
 },
 "torch.quantization._learnable_fake_quantize._LearnableFakeQuantizePerChannelOp.forward": {
  "lineno": 146,
  "symbols_in_volume": [
   "torch.fake_quantize_per_channel_affine",
   "torch.float32",
   "torch.int64"
  ],
  "type": "function"
 },
 "torch.quantization._learnable_fake_quantize._LearnableFakeQuantizePerTensorOp": {
  "lineno": 99,
  "symbols_in_volume": [
   "torch.autograd.Function"
  ],
  "type": "class"
 },
 "torch.quantization._learnable_fake_quantize._LearnableFakeQuantizePerTensorOp.backward": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization._learnable_fake_quantize._LearnableFakeQuantizePerTensorOp.forward": {
  "lineno": 108,
  "symbols_in_volume": [
   "torch.fake_quantize_per_tensor_affine"
  ],
  "type": "function"
 },
 "torch.quantization._learnable_fake_quantize._calculate_X_grad": {
  "lineno": 23,
  "symbols_in_volume": [
   "torch.zeros_like"
  ],
  "type": "function"
 },
 "torch.quantization._learnable_fake_quantize._calculate_scale_grad": {
  "lineno": 41,
  "symbols_in_volume": [
   "torch.ones"
  ],
  "type": "function"
 },
 "torch.quantization._learnable_fake_quantize._calculate_zero_point_grad": {
  "lineno": 72,
  "symbols_in_volume": [
   "torch.ones"
  ],
  "type": "function"
 },
 "torch.quantization._learnable_fake_quantize._quantize": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization._learnable_fake_quantize._quantize_vectorized": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization._numeric_suite": {
  "lineno": null,
  "symbols_in_volume": [
   "torch.nn.LSTM",
   "torch.nn.quantized.Linear",
   "torch.nn.quantized.dynamic.LSTM",
   "torch.nn.quantized.dynamic.Linear"
  ],
  "type": "module"
 },
 "torch.quantization._numeric_suite.Logger": {
  "lineno": 150,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.quantization._numeric_suite.Logger.__init__": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization._numeric_suite.Logger.forward": {
  "lineno": 158,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization._numeric_suite.OutputLogger": {
  "lineno": 188,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.quantization._numeric_suite.OutputLogger.__init__": {
  "lineno": 192,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization._numeric_suite.OutputLogger.forward": {
  "lineno": 196,
  "symbols_in_volume": [
   "torch.cat"
  ],
  "type": "function"
 },
 "torch.quantization._numeric_suite.Shadow": {
  "lineno": 218,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.quantization._numeric_suite.Shadow.__init__": {
  "lineno": 230,
  "symbols_in_volume": [
   "torch.nn.quantized.DeQuantize"
  ],
  "type": "function"
 },
 "torch.quantization._numeric_suite.Shadow.add": {
  "lineno": 245,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization._numeric_suite.Shadow.add_relu": {
  "lineno": 282,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization._numeric_suite.Shadow.add_scalar": {
  "lineno": 253,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization._numeric_suite.Shadow.cat": {
  "lineno": 275,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization._numeric_suite.Shadow.forward": {
  "lineno": 237,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization._numeric_suite.Shadow.mul": {
  "lineno": 260,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization._numeric_suite.Shadow.mul_scalar": {
  "lineno": 268,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization._numeric_suite.ShadowLogger": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.quantization._numeric_suite.ShadowLogger.__init__": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization._numeric_suite.ShadowLogger.forward": {
  "lineno": 172,
  "symbols_in_volume": [
   "torch.cat"
  ],
  "type": "function"
 },
 "torch.quantization._numeric_suite._convert_tuple_to_list": {
  "lineno": 204,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization._numeric_suite._dequantize_tensor_list": {
  "lineno": 208,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization._numeric_suite._find_match": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization._numeric_suite._get_logger_dict_helper": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization._numeric_suite._get_logger_dict_helper.get_prefix": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization._numeric_suite.compare_model_outputs": {
  "lineno": 422,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization._numeric_suite.compare_model_stub": {
  "lineno": 329,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization._numeric_suite.compare_weights": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization._numeric_suite.get_logger_dict": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization._numeric_suite.get_matching_activations": {
  "lineno": 368,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization._numeric_suite.prepare_model_outputs": {
  "lineno": 392,
  "symbols_in_volume": [
   "torch.quantization.QConfig",
   "torch.quantization.prepare"
  ],
  "type": "function"
 },
 "torch.quantization._numeric_suite.prepare_model_with_stubs": {
  "lineno": 291,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.custom_module_class_mappings": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.quantization.custom_module_class_mappings.get_observed_custom_module_class": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.custom_module_class_mappings.get_quantized_custom_module_class": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.custom_module_class_mappings.is_custom_module_class": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.custom_module_class_mappings.is_observed_custom_module": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.custom_module_class_mappings.mark_observed_custom_module": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.custom_module_class_mappings.register_observed_custom_module_mapping": {
  "lineno": 3,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.custom_module_class_mappings.register_quantized_custom_module_mapping": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.default_eval_fn": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.default_mappings": {
  "lineno": null,
  "symbols_in_volume": [
   "torch._ops.ops.quantized.elu",
   "torch._ops.ops.quantized.hardswish",
   "torch._ops.ops.quantized.instance_norm",
   "torch._ops.ops.quantized.layer_norm",
   "torch.nn.BatchNorm2d",
   "torch.nn.BatchNorm3d",
   "torch.nn.Conv1d",
   "torch.nn.Conv2d",
   "torch.nn.Conv3d",
   "torch.nn.ConvTranspose1d",
   "torch.nn.ConvTranspose2d",
   "torch.nn.ELU",
   "torch.nn.Embedding",
   "torch.nn.EmbeddingBag",
   "torch.nn.GRUCell",
   "torch.nn.GroupNorm",
   "torch.nn.Hardswish",
   "torch.nn.InstanceNorm1d",
   "torch.nn.InstanceNorm2d",
   "torch.nn.InstanceNorm3d",
   "torch.nn.LSTM",
   "torch.nn.LSTMCell",
   "torch.nn.LayerNorm",
   "torch.nn.Linear",
   "torch.nn.RNNCell",
   "torch.nn.ReLU",
   "torch.nn.ReLU6",
   "torch.nn.Sequential",
   "torch.nn.functional.elu",
   "torch.nn.functional.hardswish",
   "torch.nn.functional.instance_norm",
   "torch.nn.functional.layer_norm",
   "torch.nn.intrinsic.BNReLU2d",
   "torch.nn.intrinsic.BNReLU3d",
   "torch.nn.intrinsic.ConvBn2d",
   "torch.nn.intrinsic.ConvBnReLU2d",
   "torch.nn.intrinsic.ConvReLU1d",
   "torch.nn.intrinsic.ConvReLU2d",
   "torch.nn.intrinsic.ConvReLU3d",
   "torch.nn.intrinsic.LinearReLU",
   "torch.nn.intrinsic.qat.ConvBn2d",
   "torch.nn.intrinsic.qat.ConvBnReLU2d",
   "torch.nn.intrinsic.qat.ConvReLU2d",
   "torch.nn.intrinsic.qat.LinearReLU",
   "torch.nn.intrinsic.quantized.BNReLU2d",
   "torch.nn.intrinsic.quantized.BNReLU3d",
   "torch.nn.intrinsic.quantized.ConvReLU1d",
   "torch.nn.intrinsic.quantized.ConvReLU2d",
   "torch.nn.intrinsic.quantized.ConvReLU3d",
   "torch.nn.intrinsic.quantized.LinearReLU",
   "torch.nn.qat.Conv2d",
   "torch.nn.qat.Linear",
   "torch.nn.quantized.BatchNorm2d",
   "torch.nn.quantized.BatchNorm3d",
   "torch.nn.quantized.Conv1d",
   "torch.nn.quantized.Conv2d",
   "torch.nn.quantized.Conv3d",
   "torch.nn.quantized.ConvTranspose1d",
   "torch.nn.quantized.ConvTranspose2d",
   "torch.nn.quantized.DeQuantize",
   "torch.nn.quantized.ELU",
   "torch.nn.quantized.Embedding",
   "torch.nn.quantized.EmbeddingBag",
   "torch.nn.quantized.FloatFunctional",
   "torch.nn.quantized.GroupNorm",
   "torch.nn.quantized.Hardswish",
   "torch.nn.quantized.InstanceNorm1d",
   "torch.nn.quantized.InstanceNorm2d",
   "torch.nn.quantized.InstanceNorm3d",
   "torch.nn.quantized.LayerNorm",
   "torch.nn.quantized.Linear",
   "torch.nn.quantized.QFunctional",
   "torch.nn.quantized.Quantize",
   "torch.nn.quantized.ReLU",
   "torch.nn.quantized.ReLU6",
   "torch.nn.quantized.dynamic.GRUCell",
   "torch.nn.quantized.dynamic.LSTM",
   "torch.nn.quantized.dynamic.LSTMCell",
   "torch.nn.quantized.dynamic.Linear",
   "torch.nn.quantized.dynamic.RNNCell"
  ],
  "type": "module"
 },
 "torch.quantization.fake_quantize": {
  "lineno": null,
  "symbols_in_volume": [
   "torch.per_channel_symmetric",
   "torch.per_tensor_affine",
   "torch.per_tensor_symmetric",
   "torch.qint8",
   "torch.quint8"
  ],
  "type": "module"
 },
 "torch.quantization.fake_quantize.FakeQuantize": {
  "lineno": 6,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.quantization.fake_quantize.FakeQuantize.__init__": {
  "lineno": 44,
  "symbols_in_volume": [
   "torch.iinfo",
   "torch.tensor",
   "torch.uint8"
  ],
  "type": "function"
 },
 "torch.quantization.fake_quantize.FakeQuantize._load_from_state_dict": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fake_quantize.FakeQuantize._save_to_state_dict": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fake_quantize.FakeQuantize.calculate_qparams": {
  "lineno": 83,
  "symbols_in_volume": [
   "torch.jit.export"
  ],
  "type": "function"
 },
 "torch.quantization.fake_quantize.FakeQuantize.disable_fake_quant": {
  "lineno": 70,
  "symbols_in_volume": [
   "torch.jit.export"
  ],
  "type": "function"
 },
 "torch.quantization.fake_quantize.FakeQuantize.disable_observer": {
  "lineno": 79,
  "symbols_in_volume": [
   "torch.jit.export"
  ],
  "type": "function"
 },
 "torch.quantization.fake_quantize.FakeQuantize.enable_fake_quant": {
  "lineno": 65,
  "symbols_in_volume": [
   "torch.jit.export"
  ],
  "type": "function"
 },
 "torch.quantization.fake_quantize.FakeQuantize.enable_observer": {
  "lineno": 74,
  "symbols_in_volume": [
   "torch.jit.export"
  ],
  "type": "function"
 },
 "torch.quantization.fake_quantize.FakeQuantize.extra_repr": {
  "lineno": 109,
  "symbols_in_volume": [
   "torch.jit.export"
  ],
  "type": "function"
 },
 "torch.quantization.fake_quantize.FakeQuantize.forward": {
  "lineno": 87,
  "symbols_in_volume": [
   "torch.fake_quantize_per_channel_affine",
   "torch.fake_quantize_per_tensor_affine",
   "torch.per_channel_affine",
   "torch.per_channel_symmetric"
  ],
  "type": "function"
 },
 "torch.quantization.fake_quantize._is_fake_quant_script_module": {
  "lineno": 159,
  "symbols_in_volume": [
   "re.sub",
   "torch.jit.RecursiveScriptModule"
  ],
  "type": "function"
 },
 "torch.quantization.fake_quantize.disable_fake_quant": {
  "lineno": 169,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fake_quantize.disable_observer": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fake_quantize.enable_fake_quant": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fake_quantize.enable_observer": {
  "lineno": 181,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fuse_modules": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.quantization.fuse_modules._fuse_modules": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fuse_modules._get_module": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fuse_modules._set_module": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fuse_modules.fuse_known_modules": {
  "lineno": 31,
  "symbols_in_volume": [
   "torch.nn.Identity",
   "torch.nn.Module",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.quantization.fuse_modules.fuse_modules": {
  "lineno": 80,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "torch.quantization.fuser_method_mappings": {
  "lineno": null,
  "symbols_in_volume": [
   "torch.nn.BatchNorm1d",
   "torch.nn.BatchNorm2d",
   "torch.nn.BatchNorm3d",
   "torch.nn.Conv1d",
   "torch.nn.Conv2d",
   "torch.nn.Conv3d",
   "torch.nn.Linear",
   "torch.nn.ReLU",
   "torch.nn.Sequential",
   "torch.nn.intrinsic.BNReLU2d",
   "torch.nn.intrinsic.BNReLU3d",
   "torch.nn.intrinsic.ConvReLU1d",
   "torch.nn.intrinsic.ConvReLU2d",
   "torch.nn.intrinsic.ConvReLU3d",
   "torch.nn.intrinsic.LinearReLU",
   "typing.Callable",
   "typing.Dict",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "module"
 },
 "torch.quantization.fuser_method_mappings.fuse_conv_bn": {
  "lineno": 6,
  "symbols_in_volume": [
   "torch.nn.Conv3d",
   "torch.nn.intrinsic.ConvBn2d",
   "torch.nn.intrinsic.ConvBn3d",
   "torch.nn.utils.fuse_conv_bn_eval"
  ],
  "type": "function"
 },
 "torch.quantization.fuser_method_mappings.fuse_conv_bn_relu": {
  "lineno": 33,
  "symbols_in_volume": [
   "torch.nn.Conv1d",
   "torch.nn.Conv2d",
   "torch.nn.Conv3d",
   "torch.nn.Sequential",
   "torch.nn.intrinsic.ConvBnReLU2d",
   "torch.nn.intrinsic.ConvBnReLU3d",
   "torch.nn.intrinsic.ConvReLU1d",
   "torch.nn.intrinsic.ConvReLU2d",
   "torch.nn.intrinsic.ConvReLU3d",
   "torch.nn.utils.fusion.fuse_conv_bn_eval",
   "typing.Optional",
   "typing.Type"
  ],
  "type": "function"
 },
 "torch.quantization.fuser_method_mappings.get_fuser_method": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fuser_method_mappings.register_fuser_method": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.quantization.fx.fuse": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.quantization.fx.fuse.Fuser": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.quantization.fx.fuse.Fuser._find_matches": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.fuse.Fuser._find_matches.apply_match": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.fuse.Fuser.fuse": {
  "lineno": 19,
  "symbols_in_volume": [
   "copy.deepcopy",
   "torch._fx.GraphModule",
   "torch._fx.graph.Graph"
  ],
  "type": "function"
 },
 "torch.quantization.fx.fuse.Fuser.fuse.load_arg": {
  "lineno": 32,
  "symbols_in_volume": [
   "torch._fx.graph.map_arg"
  ],
  "type": "function"
 },
 "torch.quantization.fx.fusion_patterns": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.quantization.fx.fusion_patterns.ConvBNReLUFusion": {
  "lineno": 12,
  "symbols_in_volume": [
   "torch.nn.BatchNorm2d",
   "torch.nn.Conv1d",
   "torch.nn.Conv2d",
   "torch.nn.Conv3d",
   "torch.nn.ReLU",
   "torch.nn.functional.relu"
  ],
  "type": "class"
 },
 "torch.quantization.fx.fusion_patterns.ConvBNReLUFusion.__init__": {
  "lineno": 22,
  "symbols_in_volume": [
   "torch.nn.BatchNorm1d",
   "torch.nn.BatchNorm2d",
   "torch.nn.BatchNorm3d",
   "torch.nn.ReLU",
   "torch.nn.functional.relu"
  ],
  "type": "function"
 },
 "torch.quantization.fx.fusion_patterns.ConvBNReLUFusion.fuse": {
  "lineno": 39,
  "symbols_in_volume": [
   "torch.nn.Identity",
   "torch.nn.ReLU"
  ],
  "type": "function"
 },
 "torch.quantization.fx.fusion_patterns.ModuleReLUFusion": {
  "lineno": 75,
  "symbols_in_volume": [
   "torch.nn.BatchNorm1d",
   "torch.nn.BatchNorm2d",
   "torch.nn.BatchNorm3d",
   "torch.nn.Linear",
   "torch.nn.ReLU",
   "torch.nn.functional.relu"
  ],
  "type": "class"
 },
 "torch.quantization.fx.fusion_patterns.ModuleReLUFusion.__init__": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.fusion_patterns.ModuleReLUFusion.fuse": {
  "lineno": 92,
  "symbols_in_volume": [
   "torch.nn.ReLU"
  ],
  "type": "function"
 },
 "torch.quantization.fx.pattern_utils": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "module"
 },
 "torch.quantization.fx.pattern_utils.get_dynamic_quant_patterns": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.pattern_utils.get_fusion_patterns": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.pattern_utils.get_quant_patterns": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.pattern_utils.is_match": {
  "lineno": 51,
  "symbols_in_volume": [
   "sys.maxsize",
   "torch.nn.Module"
  ],
  "type": "function"
 },
 "torch.quantization.fx.pattern_utils.register_dynamic_quant_pattern": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.pattern_utils.register_dynamic_quant_pattern.insert": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.pattern_utils.register_fusion_pattern": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.pattern_utils.register_fusion_pattern.insert": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.pattern_utils.register_quant_pattern": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.pattern_utils.register_quant_pattern.insert": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.quantization_patterns": {
  "lineno": null,
  "symbols_in_volume": [
   "torch._ops.ops.quantized.hardswish",
   "torch._ops.ops.quantized.instance_norm"
  ],
  "type": "module"
 },
 "torch.quantization.fx.quantization_patterns.Add": {
  "lineno": 51,
  "symbols_in_volume": [
   "operator.add",
   "torch.nn.ReLU",
   "torch.nn.functional.relu"
  ],
  "type": "class"
 },
 "torch.quantization.fx.quantization_patterns.Add.__init__": {
  "lineno": 55,
  "symbols_in_volume": [
   "operator.add",
   "torch._fx.graph.Node",
   "torch.nn.ReLU",
   "torch.nn.functional.relu"
  ],
  "type": "function"
 },
 "torch.quantization.fx.quantization_patterns.Add.convert": {
  "lineno": 66,
  "symbols_in_volume": [
   "torch.ops.quantized.add",
   "torch.ops.quantized.add_relu"
  ],
  "type": "function"
 },
 "torch.quantization.fx.quantization_patterns.BatchNorm": {
  "lineno": 318,
  "symbols_in_volume": [
   "torch.nn.BatchNorm2d",
   "torch.nn.BatchNorm3d",
   "torch.nn.intrinsic.BNReLU2d",
   "torch.nn.intrinsic.BNReLU3d"
  ],
  "type": "class"
 },
 "torch.quantization.fx.quantization_patterns.BatchNorm.__init__": {
  "lineno": 323,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.quantization_patterns.BatchNorm.convert": {
  "lineno": 329,
  "symbols_in_volume": [
   "torch.nn.intrinsic.BNReLU2d",
   "torch.nn.intrinsic.BNReLU3d"
  ],
  "type": "function"
 },
 "torch.quantization.fx.quantization_patterns.Cat": {
  "lineno": 127,
  "symbols_in_volume": [
   "torch.cat"
  ],
  "type": "class"
 },
 "torch.quantization.fx.quantization_patterns.Cat.convert": {
  "lineno": 129,
  "symbols_in_volume": [
   "torch.ops.quantized.cat"
  ],
  "type": "function"
 },
 "torch.quantization.fx.quantization_patterns.ConvRelu": {
  "lineno": 143,
  "symbols_in_volume": [
   "torch.nn.Conv1d",
   "torch.nn.Conv2d",
   "torch.nn.Conv3d",
   "torch.nn.ReLU",
   "torch.nn.functional.conv2d",
   "torch.nn.functional.relu",
   "torch.nn.intrinsic.ConvReLU1d",
   "torch.nn.intrinsic.ConvReLU2d",
   "torch.nn.intrinsic.ConvReLU3d",
   "torch.nn.intrinsic.qat.ConvBn2d",
   "torch.nn.intrinsic.qat.ConvBnReLU2d",
   "torch.nn.intrinsic.qat.ConvReLU2d",
   "torch.nn.qat.Conv2d"
  ],
  "type": "class"
 },
 "torch.quantization.fx.quantization_patterns.ConvRelu.__init__": {
  "lineno": 160,
  "symbols_in_volume": [
   "torch.nn.ReLU",
   "torch.nn.functional.relu"
  ],
  "type": "function"
 },
 "torch.quantization.fx.quantization_patterns.ConvRelu.convert": {
  "lineno": 171,
  "symbols_in_volume": [
   "torch.nn.functional.conv2d",
   "torch.nn.intrinsic.ConvReLU1d",
   "torch.nn.intrinsic.ConvReLU2d",
   "torch.nn.intrinsic.ConvReLU3d",
   "torch.ops.quantized.conv2d",
   "torch.ops.quantized.conv2d_prepack"
  ],
  "type": "function"
 },
 "torch.quantization.fx.quantization_patterns.CopyNode": {
  "lineno": 418,
  "symbols_in_volume": [
   "operator.floordiv",
   "operator.getitem",
   "torch._C._nn.avg_pool2d",
   "torch._C._nn.avg_pool3d",
   "torch.adaptive_avg_pool1d",
   "torch.avg_pool1d",
   "torch.chunk",
   "torch.clamp",
   "torch.flatten",
   "torch.max",
   "torch.mean",
   "torch.min",
   "torch.nn.AdaptiveAvgPool1d",
   "torch.nn.AdaptiveAvgPool2d",
   "torch.nn.AdaptiveAvgPool3d",
   "torch.nn.AvgPool1d",
   "torch.nn.AvgPool2d",
   "torch.nn.AvgPool3d",
   "torch.nn.Dropout",
   "torch.nn.Hardsigmoid",
   "torch.nn.Hardtanh",
   "torch.nn.LeakyReLU",
   "torch.nn.MaxPool1d",
   "torch.nn.MaxPool2d",
   "torch.nn.MaxPool3d",
   "torch.nn.ReLU",
   "torch.nn.ReLU6",
   "torch.nn.Sigmoid",
   "torch.nn.Tanh",
   "torch.nn.functional.adaptive_avg_pool2d",
   "torch.nn.functional.adaptive_avg_pool3d",
   "torch.nn.functional.dropout",
   "torch.nn.functional.hardsigmoid",
   "torch.nn.functional.hardtanh",
   "torch.nn.functional.hardtanh_",
   "torch.nn.functional.interpolate",
   "torch.nn.functional.leaky_relu",
   "torch.nn.functional.max_pool1d",
   "torch.nn.functional.max_pool2d",
   "torch.nn.functional.max_pool3d",
   "torch.nn.functional.relu",
   "torch.nn.functional.relu6",
   "torch.repeat_interleave",
   "torch.sigmoid",
   "torch.sort",
   "torch.squeeze",
   "torch.stack",
   "torch.tanh",
   "torch.transpose",
   "torch.unsqueeze"
  ],
  "type": "class"
 },
 "torch.quantization.fx.quantization_patterns.CopyNode.convert": {
  "lineno": 499,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.quantization_patterns.CustomModuleQuantizeHandler": {
  "lineno": 513,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.quantization.fx.quantization_patterns.CustomModuleQuantizeHandler.convert": {
  "lineno": 514,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.quantization_patterns.DefaultNode": {
  "lineno": 353,
  "symbols_in_volume": [
   "torch.nn.ELU",
   "torch.nn.Hardswish",
   "torch.nn.InstanceNorm1d",
   "torch.nn.InstanceNorm2d",
   "torch.nn.InstanceNorm3d",
   "torch.nn.LayerNorm",
   "torch.nn.functional.hardswish",
   "torch.nn.functional.instance_norm",
   "torch.nn.functional.layer_norm"
  ],
  "type": "class"
 },
 "torch.quantization.fx.quantization_patterns.DefaultNode.convert": {
  "lineno": 365,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.quantization_patterns.DefaultQuant": {
  "lineno": 504,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.quantization.fx.quantization_patterns.DefaultQuant.convert": {
  "lineno": 505,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.quantization_patterns.DynamicLinear": {
  "lineno": 536,
  "symbols_in_volume": [
   "torch.nn.Linear",
   "torch.nn.functional.linear"
  ],
  "type": "class"
 },
 "torch.quantization.fx.quantization_patterns.DynamicLinear.__init__": {
  "lineno": 539,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "torch.quantization.fx.quantization_patterns.DynamicLinear.convert": {
  "lineno": 546,
  "symbols_in_volume": [
   "torch.float16",
   "torch.nn.functional.linear",
   "torch.nn.quantized.dynamic.Linear.from_float",
   "torch.ops.quantized.linear_dynamic",
   "torch.ops.quantized.linear_prepack",
   "torch.ops.quantized.linear_prepack_fp16"
  ],
  "type": "function"
 },
 "torch.quantization.fx.quantization_patterns.ELU": {
  "lineno": 402,
  "symbols_in_volume": [
   "torch.nn.functional.elu"
  ],
  "type": "class"
 },
 "torch.quantization.fx.quantization_patterns.ELU.convert": {
  "lineno": 404,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.quantization_patterns.LinearReLU": {
  "lineno": 228,
  "symbols_in_volume": [
   "torch.nn.Linear",
   "torch.nn.ReLU",
   "torch.nn.functional.linear",
   "torch.nn.functional.relu",
   "torch.nn.intrinsic.LinearReLU",
   "torch.nn.intrinsic.qat.LinearReLU",
   "torch.nn.qat.Linear"
  ],
  "type": "class"
 },
 "torch.quantization.fx.quantization_patterns.LinearReLU.__init__": {
  "lineno": 239,
  "symbols_in_volume": [
   "torch.nn.ReLU",
   "torch.nn.functional.relu"
  ],
  "type": "function"
 },
 "torch.quantization.fx.quantization_patterns.LinearReLU.convert": {
  "lineno": 250,
  "symbols_in_volume": [
   "torch.nn.Linear",
   "torch.nn.functional.linear",
   "torch.nn.intrinsic.LinearReLU",
   "torch.nn.intrinsic.qat.LinearReLU",
   "torch.nn.intrinsic.quantized.LinearReLU",
   "torch.nn.qat.Linear",
   "torch.nn.quantized.Linear",
   "torch.ops.quantized.linear",
   "torch.ops.quantized.linear_prepack"
  ],
  "type": "function"
 },
 "torch.quantization.fx.quantization_patterns.Mul": {
  "lineno": 90,
  "symbols_in_volume": [
   "operator.mul",
   "torch.nn.ReLU",
   "torch.nn.functional.relu"
  ],
  "type": "class"
 },
 "torch.quantization.fx.quantization_patterns.Mul.__init__": {
  "lineno": 94,
  "symbols_in_volume": [
   "operator.mul",
   "torch._fx.graph.Node",
   "torch.nn.ReLU",
   "torch.nn.functional.relu"
  ],
  "type": "function"
 },
 "torch.quantization.fx.quantization_patterns.Mul.convert": {
  "lineno": 105,
  "symbols_in_volume": [
   "torch.ops.quantized.mul",
   "torch.ops.quantized.mul_relu"
  ],
  "type": "function"
 },
 "torch.quantization.fx.quantization_patterns.QuantizeHandler": {
  "lineno": 32,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "torch.quantization.fx.quantization_patterns.QuantizeHandler.__init__": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.quantization_patterns.QuantizeHandler.convert": {
  "lineno": 44,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "torch.quantization.fx.quantize": {
  "lineno": null,
  "symbols_in_volume": [
   "torch._ops.ops.quantized.conv2d_prepack",
   "torch._ops.ops.quantized.linear_prepack",
   "torch._ops.ops.quantized.linear_prepack_fp16",
   "torch.nn.functional.conv2d",
   "torch.nn.functional.linear"
  ],
  "type": "module"
 },
 "torch.quantization.fx.quantize.Quantizer": {
  "lineno": 202,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.quantization.fx.quantize.Quantizer.__init__": {
  "lineno": 203,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.quantize.Quantizer._convert": {
  "lineno": 468,
  "symbols_in_volume": [
   "copy.deepcopy",
   "torch._fx.GraphModule",
   "torch._fx.graph.Graph",
   "torch._fx.graph.map_arg",
   "torch.float16"
  ],
  "type": "function"
 },
 "torch.quantization.fx.quantize.Quantizer._convert.is_quantized": {
  "lineno": 546,
  "symbols_in_volume": [
   "torch._fx.graph.Node"
  ],
  "type": "function"
 },
 "torch.quantization.fx.quantize.Quantizer._convert.load_arg": {
  "lineno": 627,
  "symbols_in_volume": [
   "torch._fx.graph.map_arg"
  ],
  "type": "function"
 },
 "torch.quantization.fx.quantize.Quantizer._convert.load_arg.load_arg_impl": {
  "lineno": 529,
  "symbols_in_volume": [
   "torch._fx.graph.map_arg"
  ],
  "type": "function"
 },
 "torch.quantization.fx.quantize.Quantizer._convert.load_non_quantized": {
  "lineno": 489,
  "symbols_in_volume": [
   "torch._fx.Proxy"
  ],
  "type": "function"
 },
 "torch.quantization.fx.quantize.Quantizer._convert.load_quantized": {
  "lineno": 498,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.quantize.Quantizer._convert.load_x": {
  "lineno": 508,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.quantize.Quantizer._find_matches": {
  "lineno": 704,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.quantize.Quantizer._find_matches.record_match": {
  "lineno": 728,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.quantize.Quantizer._find_quants": {
  "lineno": 761,
  "symbols_in_volume": [
   "torch._fx.graph.map_arg"
  ],
  "type": "function"
 },
 "torch.quantization.fx.quantize.Quantizer._find_quants.visit": {
  "lineno": 775,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.quantize.Quantizer._find_quants.visit.visit_arg": {
  "lineno": 776,
  "symbols_in_volume": [
   "torch._fx.graph.Node"
  ],
  "type": "function"
 },
 "torch.quantization.fx.quantize.Quantizer._fold_weight": {
  "lineno": 652,
  "symbols_in_volume": [
   "torch._fx.GraphModule",
   "torch._fx.graph.Graph"
  ],
  "type": "function"
 },
 "torch.quantization.fx.quantize.Quantizer._fold_weight.load_arg": {
  "lineno": 673,
  "symbols_in_volume": [
   "torch._fx.graph.map_arg"
  ],
  "type": "function"
 },
 "torch.quantization.fx.quantize.Quantizer._generate_qconfig_map": {
  "lineno": 234,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.quantize.Quantizer._generate_qconfig_map.get_function_qconfig": {
  "lineno": 244,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.quantize.Quantizer._generate_qconfig_map.get_module_name_qconfig": {
  "lineno": 256,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.quantize.Quantizer._generate_qconfig_map.get_module_name_regex_qconfig": {
  "lineno": 248,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "torch.quantization.fx.quantize.Quantizer._generate_qconfig_map.get_module_type_qconfig": {
  "lineno": 240,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.quantize.Quantizer._generate_qconfig_map.get_qconfig": {
  "lineno": 270,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.quantize.Quantizer._prepare": {
  "lineno": 301,
  "symbols_in_volume": [
   "copy.deepcopy",
   "torch._fx.GraphModule",
   "torch._fx.graph.Graph",
   "torch.quantization.propagate_qconfig_"
  ],
  "type": "function"
 },
 "torch.quantization.fx.quantize.Quantizer._prepare.insert_observer": {
  "lineno": 352,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.quantize.Quantizer._prepare.is_observed": {
  "lineno": 385,
  "symbols_in_volume": [
   "torch._fx.graph.Node"
  ],
  "type": "function"
 },
 "torch.quantization.fx.quantize.Quantizer._prepare.load_arg": {
  "lineno": 336,
  "symbols_in_volume": [
   "torch._fx.graph.map_arg"
  ],
  "type": "function"
 },
 "torch.quantization.fx.quantize.Quantizer._qat_swap_modules": {
  "lineno": 231,
  "symbols_in_volume": [
   "torch.quantization.convert"
  ],
  "type": "function"
 },
 "torch.quantization.fx.quantize.Quantizer._run_weight_observers": {
  "lineno": 449,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.quantize.Quantizer.convert": {
  "lineno": 698,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.quantize.Quantizer.prepare": {
  "lineno": 443,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.quantize.Quantizer.prepare_dynamic": {
  "lineno": 446,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.quantize.Quantizer.restore_state": {
  "lineno": 431,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.quantize.Quantizer.save_state": {
  "lineno": 426,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.quantize.assert_and_get_unique_device": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.quantize.collect_producer_nodes": {
  "lineno": 68,
  "symbols_in_volume": [
   "torch._fx.graph.Node"
  ],
  "type": "function"
 },
 "torch.quantization.fx.quantize.convert_dict_to_ordered_dict": {
  "lineno": 178,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.quantize.convert_dict_to_ordered_dict._convert_to_ordered_dict": {
  "lineno": 182,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "torch.quantization.fx.quantize.get_flattened_qconfig_dict": {
  "lineno": 141,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.quantize.get_flattened_qconfig_dict.flatten_key": {
  "lineno": 169,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.quantize.get_new_attr_name_with_prefix": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.quantize.get_new_attr_name_with_prefix.get_new_attr_name": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.quantize.get_new_attr_name_with_prefix.get_new_attr_name.get_attr_name": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.quantize.graph_module_from_producer_nodes": {
  "lineno": 95,
  "symbols_in_volume": [
   "torch._fx.GraphModule",
   "torch._fx.graph.Graph"
  ],
  "type": "function"
 },
 "torch.quantization.fx.quantize.graph_module_from_producer_nodes.load_arg": {
  "lineno": 110,
  "symbols_in_volume": [
   "torch._fx.graph.map_arg"
  ],
  "type": "function"
 },
 "torch.quantization.fx.quantize.is_activation_post_process": {
  "lineno": 133,
  "symbols_in_volume": [
   "torch.quantization.FakeQuantize",
   "torch.quantization.ObserverBase"
  ],
  "type": "function"
 },
 "torch.quantization.fx.quantize.is_submodule_of_fake_quant": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.quantization.fx.utils._parent_name": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.utils.get_per_tensor_qparams": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.utils.get_quantize_op_and_qparams": {
  "lineno": 95,
  "symbols_in_volume": [
   "torch.quantize_per_channel",
   "torch.quantize_per_tensor"
  ],
  "type": "function"
 },
 "torch.quantization.fx.utils.graph_pretty_str": {
  "lineno": 12,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "function"
 },
 "torch.quantization.fx.utils.is_per_channel": {
  "lineno": 82,
  "symbols_in_volume": [
   "torch.per_channel_affine",
   "torch.per_channel_affine_float_qparams",
   "torch.per_channel_symmetric"
  ],
  "type": "function"
 },
 "torch.quantization.fx.utils.is_per_tensor": {
  "lineno": 78,
  "symbols_in_volume": [
   "torch.per_tensor_affine",
   "torch.per_tensor_symmetric"
  ],
  "type": "function"
 },
 "torch.quantization.fx.utils.quantize_node": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.utils.quantize_node.get_next_qparams_idx": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.fx.utils.quantize_node.module_has_qparams_attr_with_index": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.observer": {
  "lineno": null,
  "symbols_in_volume": [
   "abc.ABCMeta",
   "torch.per_channel_affine_float_qparams",
   "torch.per_channel_symmetric",
   "torch.per_tensor_symmetric",
   "torch.qint8",
   "torch.quint8"
  ],
  "type": "module"
 },
 "torch.quantization.observer.HistogramObserver": {
  "lineno": 734,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.quantization.observer.HistogramObserver.__init__": {
  "lineno": 759,
  "symbols_in_volume": [
   "torch.iinfo",
   "torch.per_tensor_affine",
   "torch.quint8",
   "torch.tensor",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.quantization.observer.HistogramObserver._adjust_min_max": {
  "lineno": 899,
  "symbols_in_volume": [
   "torch.ceil",
   "torch.int",
   "torch.jit.ignore",
   "torch.round"
  ],
  "type": "function"
 },
 "torch.quantization.observer.HistogramObserver._combine_histograms": {
  "lineno": 917,
  "symbols_in_volume": [
   "torch.cumsum",
   "torch.double",
   "torch.float",
   "torch.jit.ignore",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.quantization.observer.HistogramObserver._load_from_state_dict": {
  "lineno": 1007,
  "symbols_in_volume": [
   "torch.Size",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.quantization.observer.HistogramObserver._non_linear_param_search": {
  "lineno": 772,
  "symbols_in_volume": [
   "torch.cumsum",
   "torch.jit.ignore"
  ],
  "type": "function"
 },
 "torch.quantization.observer.HistogramObserver._non_linear_param_search._compute_quantization_error": {
  "lineno": 798,
  "symbols_in_volume": [
   "torch.arange",
   "torch.clamp",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.quantization.observer.HistogramObserver._non_linear_param_search._get_norm": {
  "lineno": 781,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.observer.HistogramObserver._save_to_state_dict": {
  "lineno": 1002,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.observer.HistogramObserver.calculate_qparams": {
  "lineno": 983,
  "symbols_in_volume": [
   "torch.jit.export",
   "torch.tensor",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.quantization.observer.HistogramObserver.forward": {
  "lineno": 940,
  "symbols_in_volume": [
   "torch._aminmax",
   "torch.histc",
   "torch.max",
   "torch.min"
  ],
  "type": "function"
 },
 "torch.quantization.observer.MinMaxDynamicQuantObserver": {
  "lineno": 480,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.quantization.observer.MinMaxDynamicQuantObserver.calculate_qparams": {
  "lineno": 500,
  "symbols_in_volume": [
   "torch.double",
   "torch.float",
   "torch.isinf",
   "torch.jit.export",
   "torch.max",
   "torch.min",
   "torch.qint8",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.quantization.observer.MinMaxObserver": {
  "lineno": 302,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.quantization.observer.MinMaxObserver.__init__": {
  "lineno": 366,
  "symbols_in_volume": [
   "torch.per_tensor_affine",
   "torch.per_tensor_symmetric",
   "torch.quint8",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.quantization.observer.MinMaxObserver.calculate_qparams": {
  "lineno": 399,
  "symbols_in_volume": [
   "torch.jit.export"
  ],
  "type": "function"
 },
 "torch.quantization.observer.MinMaxObserver.extra_repr": {
  "lineno": 404,
  "symbols_in_volume": [
   "torch.jit.export"
  ],
  "type": "function"
 },
 "torch.quantization.observer.MinMaxObserver.forward": {
  "lineno": 388,
  "symbols_in_volume": [
   "torch._aminmax",
   "torch.max",
   "torch.min"
  ],
  "type": "function"
 },
 "torch.quantization.observer.MovingAverageMinMaxObserver": {
  "lineno": 409,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.quantization.observer.MovingAverageMinMaxObserver.__init__": {
  "lineno": 452,
  "symbols_in_volume": [
   "torch.per_tensor_affine",
   "torch.quint8"
  ],
  "type": "function"
 },
 "torch.quantization.observer.MovingAverageMinMaxObserver.forward": {
  "lineno": 462,
  "symbols_in_volume": [
   "torch._aminmax"
  ],
  "type": "function"
 },
 "torch.quantization.observer.MovingAveragePerChannelMinMaxObserver": {
  "lineno": 675,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.quantization.observer.MovingAveragePerChannelMinMaxObserver.__init__": {
  "lineno": 702,
  "symbols_in_volume": [
   "torch.per_channel_affine",
   "torch.quint8"
  ],
  "type": "function"
 },
 "torch.quantization.observer.MovingAveragePerChannelMinMaxObserver.forward": {
  "lineno": 710,
  "symbols_in_volume": [
   "torch._aminmax",
   "torch.flatten"
  ],
  "type": "function"
 },
 "torch.quantization.observer.NoopObserver": {
  "lineno": 1088,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.quantization.observer.NoopObserver.__init__": {
  "lineno": 1101,
  "symbols_in_volume": [
   "torch.float16"
  ],
  "type": "function"
 },
 "torch.quantization.observer.NoopObserver.calculate_qparams": {
  "lineno": 1109,
  "symbols_in_volume": [
   "torch.jit.export"
  ],
  "type": "function"
 },
 "torch.quantization.observer.NoopObserver.forward": {
  "lineno": 1106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.observer.ObserverBase": {
  "lineno": 44,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.quantization.observer.ObserverBase.__init__": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.observer.ObserverBase.calculate_qparams": {
  "lineno": 64,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "torch.quantization.observer.ObserverBase.forward": {
  "lineno": 60,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "torch.quantization.observer.PerChannelMinMaxObserver": {
  "lineno": 555,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.quantization.observer.PerChannelMinMaxObserver.__init__": {
  "lineno": 581,
  "symbols_in_volume": [
   "torch.per_channel_affine",
   "torch.per_channel_symmetric",
   "torch.quint8",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.quantization.observer.PerChannelMinMaxObserver._forward": {
  "lineno": 604,
  "symbols_in_volume": [
   "torch._aminmax",
   "torch.flatten",
   "torch.max",
   "torch.min"
  ],
  "type": "function"
 },
 "torch.quantization.observer.PerChannelMinMaxObserver._load_from_state_dict": {
  "lineno": 637,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.jit.export",
   "torch.jit.is_scripting",
   "typing.Dict",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "torch.quantization.observer.PerChannelMinMaxObserver._load_from_state_dict_script": {
  "lineno": 668,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.jit.export",
   "typing.Dict",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "torch.quantization.observer.PerChannelMinMaxObserver.calculate_qparams": {
  "lineno": 630,
  "symbols_in_volume": [
   "torch.jit.export"
  ],
  "type": "function"
 },
 "torch.quantization.observer.PerChannelMinMaxObserver.extra_repr": {
  "lineno": 634,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.observer.PerChannelMinMaxObserver.forward": {
  "lineno": 601,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.observer.PlaceholderObserver": {
  "lineno": 1033,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.quantization.observer.PlaceholderObserver.__init__": {
  "lineno": 1046,
  "symbols_in_volume": [
   "torch.float16"
  ],
  "type": "function"
 },
 "torch.quantization.observer.PlaceholderObserver.calculate_qparams": {
  "lineno": 1054,
  "symbols_in_volume": [
   "torch.jit.export"
  ],
  "type": "function"
 },
 "torch.quantization.observer.PlaceholderObserver.forward": {
  "lineno": 1051,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.observer.RecordingObserver": {
  "lineno": 1060,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.List",
   "typing.Optional"
  ],
  "type": "class"
 },
 "torch.quantization.observer.RecordingObserver.__init__": {
  "lineno": 1071,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.observer.RecordingObserver.calculate_qparams": {
  "lineno": 1079,
  "symbols_in_volume": [
   "torch.jit.export"
  ],
  "type": "function"
 },
 "torch.quantization.observer.RecordingObserver.forward": {
  "lineno": 1075,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.observer.RecordingObserver.get_tensor_value": {
  "lineno": 1083,
  "symbols_in_volume": [
   "torch.jit.export"
  ],
  "type": "function"
 },
 "torch.quantization.observer._ObserverBase": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.quantization.observer._ObserverBase.__init__": {
  "lineno": 114,
  "symbols_in_volume": [
   "torch.finfo",
   "torch.float32",
   "torch.per_channel_affine",
   "torch.per_channel_affine_float_qparams",
   "torch.per_channel_symmetric",
   "torch.per_tensor_affine",
   "torch.per_tensor_symmetric",
   "torch.qint8",
   "torch.quint8",
   "torch.tensor",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.quantization.observer._ObserverBase._calculate_qmin_qmax": {
  "lineno": 178,
  "symbols_in_volume": [
   "torch.jit.export",
   "torch.qint8"
  ],
  "type": "function"
 },
 "torch.quantization.observer._ObserverBase._calculate_qparams": {
  "lineno": 218,
  "symbols_in_volume": [
   "torch.all",
   "torch.clamp",
   "torch.float32",
   "torch.int64",
   "torch.jit.export",
   "torch.max",
   "torch.min",
   "torch.ones",
   "torch.ones_like",
   "torch.per_channel_affine_float_qparams",
   "torch.per_channel_symmetric",
   "torch.per_tensor_symmetric",
   "torch.quint8",
   "torch.round",
   "torch.tensor",
   "torch.where",
   "torch.zeros",
   "torch.zeros_like",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.quantization.observer._ObserverBase._load_from_state_dict": {
  "lineno": 144,
  "symbols_in_volume": [
   "torch.finfo",
   "torch.float32",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.quantization.observer._ObserverBase._validate_qmin_qmax": {
  "lineno": 157,
  "symbols_in_volume": [
   "torch.jit.export"
  ],
  "type": "function"
 },
 "torch.quantization.observer._is_activation_post_process": {
  "lineno": 1123,
  "symbols_in_volume": [
   "torch.quantization.FakeQuantize",
   "torch.quantization.ObserverBase"
  ],
  "type": "function"
 },
 "torch.quantization.observer._is_observer_script_module": {
  "lineno": 1113,
  "symbols_in_volume": [
   "re.sub",
   "torch.jit.RecursiveScriptModule"
  ],
  "type": "function"
 },
 "torch.quantization.observer._is_per_channel_script_obs_instance": {
  "lineno": 1128,
  "symbols_in_volume": [
   "torch.jit.RecursiveScriptModule"
  ],
  "type": "function"
 },
 "torch.quantization.observer._with_args": {
  "lineno": 11,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "function"
 },
 "torch.quantization.observer._with_args._PartialWrapper": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.quantization.observer._with_args._PartialWrapper.__call__": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.observer._with_args._PartialWrapper.__init__": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.observer._with_args._PartialWrapper.__repr__": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.observer.get_observer_state_dict": {
  "lineno": 1134,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "torch.jit.RecursiveScriptModule"
  ],
  "type": "function"
 },
 "torch.quantization.observer.load_observer_state_dict": {
  "lineno": 1152,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.qconfig": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.quantization.qconfig.QConfig": {
  "lineno": 6,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "class"
 },
 "torch.quantization.qconfig.QConfig.__new__": {
  "lineno": 23,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "function"
 },
 "torch.quantization.qconfig.QConfigDynamic": {
  "lineno": 40,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "class"
 },
 "torch.quantization.qconfig.QConfigDynamic.__new__": {
  "lineno": 56,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "function"
 },
 "torch.quantization.qconfig.get_default_qat_qconfig": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.qconfig.get_default_qconfig": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.quant_type": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.quantization.quant_type.QuantType": {
  "lineno": 6,
  "symbols_in_volume": [
   "enum.IntEnum"
  ],
  "type": "class"
 },
 "torch.quantization.quantization_mappings": {
  "lineno": null,
  "symbols_in_volume": [
   "torch._ops.ops.quantized.elu",
   "torch._ops.ops.quantized.hardswish",
   "torch._ops.ops.quantized.instance_norm",
   "torch._ops.ops.quantized.layer_norm",
   "torch.nn.BatchNorm2d",
   "torch.nn.BatchNorm3d",
   "torch.nn.Conv1d",
   "torch.nn.Conv2d",
   "torch.nn.Conv3d",
   "torch.nn.ConvTranspose1d",
   "torch.nn.ConvTranspose2d",
   "torch.nn.ELU",
   "torch.nn.Embedding",
   "torch.nn.EmbeddingBag",
   "torch.nn.GRUCell",
   "torch.nn.GroupNorm",
   "torch.nn.Hardswish",
   "torch.nn.InstanceNorm1d",
   "torch.nn.InstanceNorm2d",
   "torch.nn.InstanceNorm3d",
   "torch.nn.LSTM",
   "torch.nn.LSTMCell",
   "torch.nn.LayerNorm",
   "torch.nn.Linear",
   "torch.nn.RNNCell",
   "torch.nn.ReLU",
   "torch.nn.ReLU6",
   "torch.nn.Sequential",
   "torch.nn.functional.elu",
   "torch.nn.functional.hardswish",
   "torch.nn.functional.instance_norm",
   "torch.nn.functional.layer_norm",
   "torch.nn.intrinsic.BNReLU2d",
   "torch.nn.intrinsic.BNReLU3d",
   "torch.nn.intrinsic.ConvBn2d",
   "torch.nn.intrinsic.ConvBnReLU2d",
   "torch.nn.intrinsic.ConvReLU1d",
   "torch.nn.intrinsic.ConvReLU2d",
   "torch.nn.intrinsic.ConvReLU3d",
   "torch.nn.intrinsic.LinearReLU",
   "torch.nn.intrinsic.qat.ConvBn2d",
   "torch.nn.intrinsic.qat.ConvBnReLU2d",
   "torch.nn.intrinsic.qat.ConvReLU2d",
   "torch.nn.intrinsic.qat.LinearReLU",
   "torch.nn.intrinsic.quantized.BNReLU2d",
   "torch.nn.intrinsic.quantized.BNReLU3d",
   "torch.nn.intrinsic.quantized.ConvReLU1d",
   "torch.nn.intrinsic.quantized.ConvReLU2d",
   "torch.nn.intrinsic.quantized.ConvReLU3d",
   "torch.nn.intrinsic.quantized.LinearReLU",
   "torch.nn.qat.Conv2d",
   "torch.nn.qat.Linear",
   "torch.nn.quantized.BatchNorm2d",
   "torch.nn.quantized.BatchNorm3d",
   "torch.nn.quantized.Conv1d",
   "torch.nn.quantized.Conv2d",
   "torch.nn.quantized.Conv3d",
   "torch.nn.quantized.ConvTranspose1d",
   "torch.nn.quantized.ConvTranspose2d",
   "torch.nn.quantized.DeQuantize",
   "torch.nn.quantized.ELU",
   "torch.nn.quantized.Embedding",
   "torch.nn.quantized.EmbeddingBag",
   "torch.nn.quantized.FloatFunctional",
   "torch.nn.quantized.GroupNorm",
   "torch.nn.quantized.Hardswish",
   "torch.nn.quantized.InstanceNorm1d",
   "torch.nn.quantized.InstanceNorm2d",
   "torch.nn.quantized.InstanceNorm3d",
   "torch.nn.quantized.LayerNorm",
   "torch.nn.quantized.Linear",
   "torch.nn.quantized.QFunctional",
   "torch.nn.quantized.Quantize",
   "torch.nn.quantized.ReLU",
   "torch.nn.quantized.ReLU6",
   "torch.nn.quantized.dynamic.GRUCell",
   "torch.nn.quantized.dynamic.LSTM",
   "torch.nn.quantized.dynamic.LSTMCell",
   "torch.nn.quantized.dynamic.Linear",
   "torch.nn.quantized.dynamic.RNNCell"
  ],
  "type": "module"
 },
 "torch.quantization.quantization_mappings.get_compare_output_module_list": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.quantization_mappings.get_dynamic_quant_module_mappings": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.quantization_mappings.get_qat_module_mappings": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.quantization_mappings.get_qconfig_propagation_list": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.quantization_mappings.get_quantized_operator": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.quantization_mappings.get_static_quant_module_class": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.quantization_mappings.get_static_quant_module_mappings": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.quantization_mappings.register_dynamic_quant_module_class": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.quantization_mappings.register_qat_module_mapping": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.quantization_mappings.register_quantized_operator_mapping": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.quantization_mappings.register_static_quant_module_mapping": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.quantize": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.quantization.quantize._convert": {
  "lineno": 419,
  "symbols_in_volume": [
   "copy.deepcopy",
   "torch.nn.intrinsic.BNReLU2d",
   "torch.nn.intrinsic.BNReLU3d",
   "torch.nn.intrinsic.ConvBn1d",
   "torch.nn.intrinsic.ConvBn2d",
   "torch.nn.intrinsic.ConvBnReLU1d",
   "torch.nn.intrinsic.ConvBnReLU2d",
   "torch.nn.intrinsic.ConvReLU1d",
   "torch.nn.intrinsic.ConvReLU2d",
   "torch.nn.intrinsic.ConvReLU3d",
   "torch.nn.intrinsic.LinearReLU",
   "torch.nn.intrinsic.qat.ConvBn2d",
   "torch.nn.intrinsic.qat.ConvBnReLU2d"
  ],
  "type": "function"
 },
 "torch.quantization.quantize._observer_forward_hook": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.quantize._observer_forward_pre_hook": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.quantize._propagate_qconfig_helper": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.quantize._remove_qconfig": {
  "lineno": 235,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.quantize.add_observer_": {
  "lineno": 96,
  "symbols_in_volume": [
   "torch.nn.Sequential",
   "torch.nn.quantized.FloatFunctional",
   "torch.nn.quantized.QFunctional"
  ],
  "type": "function"
 },
 "torch.quantization.quantize.add_observer_.get_activation_post_process": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.quantize.add_observer_.insert_activation_post_process": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.quantize.add_observer_.needs_observation": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.quantize.add_quant_dequant": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.quantize.convert": {
  "lineno": 398,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "torch.quantization.quantize.get_observer_dict": {
  "lineno": 509,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.quantize.get_observer_dict.get_prefix": {
  "lineno": 517,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.quantize.get_unique_devices_": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.quantize.prepare": {
  "lineno": 201,
  "symbols_in_volume": [
   "copy.deepcopy",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.quantization.quantize.prepare_qat": {
  "lineno": 352,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "torch.quantization.quantize.propagate_qconfig_": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.quantize.quantize": {
  "lineno": 248,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "torch.quantization.quantize.quantize_dynamic": {
  "lineno": 275,
  "symbols_in_volume": [
   "copy.deepcopy",
   "itertools.repeat",
   "torch.float16",
   "torch.nn.EmbeddingBag",
   "torch.nn.GRU",
   "torch.nn.GRUCell",
   "torch.nn.LSTM",
   "torch.nn.LSTMCell",
   "torch.nn.Linear",
   "torch.nn.RNNCell",
   "torch.qint8",
   "torch.quint8"
  ],
  "type": "function"
 },
 "torch.quantization.quantize.quantize_qat": {
  "lineno": 377,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "torch.quantization.quantize.register_activation_post_process_hook": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.quantize.swap_module": {
  "lineno": 466,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.quantize_fx": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.quantization.quantize_fx._check_is_graph_module": {
  "lineno": 6,
  "symbols_in_volume": [
   "torch._fx.GraphModule"
  ],
  "type": "function"
 },
 "torch.quantization.quantize_fx._convert_fx": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.quantize_fx._prepare_fx": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.quantize_fx._quantize_fx": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.quantize_fx.convert_dynamic_fx": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.quantize_fx.convert_fx": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.quantize_fx.fuse_fx": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.quantize_fx.prepare_dynamic_fx": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.quantize_fx.prepare_fx": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.quantize_fx.prepare_qat_fx": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.quantize_fx.prepare_static_fx": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.quantize_fx.quantize_dynamic_fx": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.quantize_fx.quantize_static_fx": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.quantize_jit": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.quantization.quantize_jit._check_forward_method": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.quantize_jit._check_is_script_module": {
  "lineno": 7,
  "symbols_in_volume": [
   "torch.jit.ScriptModule"
  ],
  "type": "function"
 },
 "torch.quantization.quantize_jit._convert_jit": {
  "lineno": 70,
  "symbols_in_volume": [
   "torch._C._jit_pass_insert_quant_dequant",
   "torch._C._jit_pass_quant_finalize",
   "torch.jit._recursive.wrap_cpp_module"
  ],
  "type": "function"
 },
 "torch.quantization.quantize_jit._prepare_jit": {
  "lineno": 46,
  "symbols_in_volume": [
   "torch._C._jit_pass_insert_observers",
   "torch.jit._recursive.wrap_cpp_module"
  ],
  "type": "function"
 },
 "torch.quantization.quantize_jit._quantize_jit": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.quantize_jit.convert_dynamic_jit": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.quantize_jit.convert_jit": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.quantize_jit.fuse_conv_bn_jit": {
  "lineno": 31,
  "symbols_in_volume": [
   "torch._C._jit_pass_fold_convbn",
   "torch.jit._recursive.wrap_cpp_module"
  ],
  "type": "function"
 },
 "torch.quantization.quantize_jit.prepare_dynamic_jit": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.quantize_jit.prepare_jit": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.quantize_jit.quantize_dynamic_jit": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.quantize_jit.quantize_jit": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.quantize_jit.script_qconfig": {
  "lineno": 15,
  "symbols_in_volume": [
   "torch.jit.script"
  ],
  "type": "function"
 },
 "torch.quantization.quantize_jit.script_qconfig_dict": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.stubs": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.quantization.stubs.DeQuantStub": {
  "lineno": 21,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.quantization.stubs.DeQuantStub.__init__": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.stubs.DeQuantStub.forward": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.stubs.QuantStub": {
  "lineno": 4,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.quantization.stubs.QuantStub.__init__": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.stubs.QuantStub.forward": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.stubs.QuantWrapper": {
  "lineno": 32,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.quantization.stubs.QuantWrapper.__init__": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quantization.stubs.QuantWrapper.forward": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quasirandom": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.quasirandom.SobolEngine": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.quasirandom.SobolEngine.__init__": {
  "lineno": 46,
  "symbols_in_volume": [
   "torch.Generator",
   "torch._sobol_engine_initialize_state_",
   "torch._sobol_engine_scramble_",
   "torch.arange",
   "torch.contiguous_format",
   "torch.device",
   "torch.long",
   "torch.mv",
   "torch.pow",
   "torch.randint",
   "torch.zeros",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.quasirandom.SobolEngine.__repr__": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.quasirandom.SobolEngine.draw": {
  "lineno": 79,
  "symbols_in_volume": [
   "torch._sobol_engine_draw",
   "torch.float32"
  ],
  "type": "function"
 },
 "torch.quasirandom.SobolEngine.fast_forward": {
  "lineno": 109,
  "symbols_in_volume": [
   "torch._sobol_engine_ff_"
  ],
  "type": "function"
 },
 "torch.quasirandom.SobolEngine.reset": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.random": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.random.fork_rng": {
  "lineno": 64,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "torch.cuda.device_count",
   "torch.cuda.get_rng_state",
   "torch.cuda.set_rng_state",
   "torch.get_rng_state",
   "torch.set_rng_state",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.random.get_rng_state": {
  "lineno": 17,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._C.default_generator.get_state"
  ],
  "type": "function"
 },
 "torch.random.initial_seed": {
  "lineno": 54,
  "symbols_in_volume": [
   "torch._C.default_generator.initial_seed"
  ],
  "type": "function"
 },
 "torch.random.manual_seed": {
  "lineno": 22,
  "symbols_in_volume": [
   "torch._C.Generator",
   "torch._C.default_generator.manual_seed",
   "torch.cuda._is_in_bad_fork",
   "torch.cuda.manual_seed_all"
  ],
  "type": "function"
 },
 "torch.random.seed": {
  "lineno": 41,
  "symbols_in_volume": [
   "torch._C.default_generator.seed",
   "torch.cuda._is_in_bad_fork",
   "torch.cuda.manual_seed_all"
  ],
  "type": "function"
 },
 "torch.random.set_rng_state": {
  "lineno": 8,
  "symbols_in_volume": [
   "torch._C.default_generator.set_state"
  ],
  "type": "function"
 },
 "torch.serialization": {
  "lineno": null,
  "symbols_in_volume": [
   "copyreg.pickle",
   "struct.Struct",
   "torch.layout"
  ],
  "type": "module"
 },
 "torch.serialization.SourceChangeWarning": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.serialization._check_dill_version": {
  "lineno": 314,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.serialization._check_seekable": {
  "lineno": 296,
  "symbols_in_volume": [
   "io.UnsupportedOperation"
  ],
  "type": "function"
 },
 "torch.serialization._check_seekable.raise_err_msg": {
  "lineno": 298,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.serialization._cpu_deserialize": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.serialization._cpu_tag": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.serialization._cuda_deserialize": {
  "lineno": 149,
  "symbols_in_volume": [
   "torch.cuda",
   "torch.cuda.device"
  ],
  "type": "function"
 },
 "torch.serialization._cuda_tag": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.serialization._get_layout": {
  "lineno": 600,
  "symbols_in_volume": [
   "torch.__dict__.values",
   "torch.layout"
  ],
  "type": "function"
 },
 "torch.serialization._get_restore_location": {
  "lineno": 802,
  "symbols_in_volume": [
   "torch.device"
  ],
  "type": "function"
 },
 "torch.serialization._get_restore_location.restore_location": {
  "lineno": 816,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.serialization._is_compressed_file": {
  "lineno": 272,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.serialization._is_path": {
  "lineno": 193,
  "symbols_in_volume": [
   "pathlib.Path",
   "sys.version_info"
  ],
  "type": "function"
 },
 "torch.serialization._is_torchscript_zip": {
  "lineno": 860,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.serialization._is_zipfile": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.serialization._legacy_load": {
  "lineno": 615,
  "symbols_in_volume": [
   "sys.version_info",
   "tarfile.TarError",
   "torch._utils._validate_loaded_sparse_tensors",
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "torch.serialization._legacy_load._check_container_source": {
  "lineno": 620,
  "symbols_in_volume": [
   "difflib.unified_diff",
   "torch._utils_internal.get_source_lines_and_file",
   "torch.typename",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.serialization._legacy_load.legacy_load": {
  "lineno": 660,
  "symbols_in_volume": [
   "contextlib.closing",
   "os.path.join",
   "struct.unpack",
   "tarfile.PAX_FORMAT",
   "tarfile.open",
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "torch.serialization._legacy_load.legacy_load.persistent_load": {
  "lineno": 663,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.serialization._legacy_load.persistent_load": {
  "lineno": 714,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.serialization._legacy_save": {
  "lineno": 377,
  "symbols_in_volume": [
   "sys.byteorder"
  ],
  "type": "function"
 },
 "torch.serialization._legacy_save.persistent_id": {
  "lineno": 382,
  "symbols_in_volume": [
   "torch._utils_internal.get_source_lines_and_file",
   "torch.is_storage",
   "torch.nn.Module",
   "torch.types.Storage",
   "typing.Any",
   "typing.Optional",
   "typing.Tuple",
   "typing.cast",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.serialization._load": {
  "lineno": 824,
  "symbols_in_volume": [
   "io.BytesIO",
   "torch._utils._validate_loaded_sparse_tensors"
  ],
  "type": "function"
 },
 "torch.serialization._load.load_tensor": {
  "lineno": 829,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.serialization._load.persistent_load": {
  "lineno": 836,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.serialization._maybe_decode_ascii": {
  "lineno": 790,
  "symbols_in_volume": [
   "typing.Union"
  ],
  "type": "function"
 },
 "torch.serialization._open_buffer_reader": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.serialization._open_buffer_reader.__init__": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.serialization._open_buffer_writer": {
  "lineno": 223,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.serialization._open_buffer_writer.__exit__": {
  "lineno": 224,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.serialization._open_file": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.serialization._open_file.__exit__": {
  "lineno": 213,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.serialization._open_file.__init__": {
  "lineno": 210,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.serialization._open_file_like": {
  "lineno": 228,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.serialization._open_zipfile_reader": {
  "lineno": 240,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.serialization._open_zipfile_reader.__init__": {
  "lineno": 241,
  "symbols_in_volume": [
   "torch._C.PyTorchFileReader"
  ],
  "type": "function"
 },
 "torch.serialization._open_zipfile_writer": {
  "lineno": 263,
  "symbols_in_volume": [
   "typing.Type"
  ],
  "type": "function"
 },
 "torch.serialization._open_zipfile_writer_buffer": {
  "lineno": 253,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.serialization._open_zipfile_writer_buffer.__exit__": {
  "lineno": 258,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.serialization._open_zipfile_writer_buffer.__init__": {
  "lineno": 254,
  "symbols_in_volume": [
   "torch._C.PyTorchFileWriter"
  ],
  "type": "function"
 },
 "torch.serialization._open_zipfile_writer_file": {
  "lineno": 245,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.serialization._open_zipfile_writer_file.__exit__": {
  "lineno": 249,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.serialization._open_zipfile_writer_file.__init__": {
  "lineno": 246,
  "symbols_in_volume": [
   "torch._C.PyTorchFileWriter"
  ],
  "type": "function"
 },
 "torch.serialization._opener": {
  "lineno": 198,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.serialization._opener.__enter__": {
  "lineno": 202,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.serialization._opener.__exit__": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.serialization._opener.__init__": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.serialization._save": {
  "lineno": 450,
  "symbols_in_volume": [
   "io.BytesIO"
  ],
  "type": "function"
 },
 "torch.serialization._save.persistent_id": {
  "lineno": 453,
  "symbols_in_volume": [
   "torch.is_storage"
  ],
  "type": "function"
 },
 "torch.serialization._should_read_directly": {
  "lineno": 280,
  "symbols_in_volume": [
   "io.UnsupportedOperation"
  ],
  "type": "function"
 },
 "torch.serialization.check_module_version_greater_or_equal": {
  "lineno": 75,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.serialization.default_restore_location": {
  "lineno": 173,
  "symbols_in_volume": [
   "torch.typename"
  ],
  "type": "function"
 },
 "torch.serialization.load": {
  "lineno": 496,
  "symbols_in_volume": [
   "pickle",
   "torch.jit.load",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.serialization.location_tag": {
  "lineno": 164,
  "symbols_in_volume": [
   "torch.typename",
   "torch.types.Storage"
  ],
  "type": "function"
 },
 "torch.serialization.mkdtemp": {
  "lineno": 35,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "shutil.rmtree",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "torch.serialization.normalize_storage_type": {
  "lineno": 183,
  "symbols_in_volume": [
   "torch"
  ],
  "type": "function"
 },
 "torch.serialization.register_package": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.serialization.save": {
  "lineno": 333,
  "symbols_in_volume": [
   "os.PathLike",
   "pickle",
   "typing.BinaryIO",
   "typing.Union"
  ],
  "type": "function"
 },
 "torch.serialization.storage_to_tensor_type": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.serialization.validate_cuda_device": {
  "lineno": 131,
  "symbols_in_volume": [
   "torch.cuda._utils._get_device_index",
   "torch.cuda.device_count",
   "torch.cuda.is_available"
  ],
  "type": "function"
 },
 "torch.set_default_dtype": {
  "lineno": 298,
  "symbols_in_volume": [
   "torch._C._set_default_dtype"
  ],
  "type": "function"
 },
 "torch.set_default_tensor_type": {
  "lineno": 274,
  "symbols_in_volume": [
   "torch._C._set_default_tensor_type"
  ],
  "type": "function"
 },
 "torch.set_deterministic": {
  "lineno": 328,
  "symbols_in_volume": [
   "torch._C._set_deterministic"
  ],
  "type": "function"
 },
 "torch.sparse": {
  "lineno": null,
  "symbols_in_volume": [
   "torch.types._dtype",
   "typing.List",
   "typing.Optional",
   "typing.TYPE_CHECKING",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "module"
 },
 "torch.sparse.addmm": {
  "lineno": 27,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._sparse_addmm"
  ],
  "type": "function"
 },
 "torch.sparse.log_softmax": {
  "lineno": 182,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._sparse_log_softmax",
   "torch.types._dtype",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.sparse.mm": {
  "lineno": 45,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._sparse_mm"
  ],
  "type": "function"
 },
 "torch.sparse.softmax": {
  "lineno": 155,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._sparse_softmax",
   "torch.types._dtype",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.sparse.sum": {
  "lineno": 87,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._sparse_sum",
   "torch.types._dtype",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.storage": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.storage._StorageBase": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.storage._StorageBase.__copy__": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.storage._StorageBase.__deepcopy__": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.storage._StorageBase.__iter__": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.storage._StorageBase.__reduce__": {
  "lineno": 32,
  "symbols_in_volume": [
   "io.BytesIO",
   "torch.save"
  ],
  "type": "function"
 },
 "torch.storage._StorageBase.__repr__": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.storage._StorageBase.__sizeof__": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.storage._StorageBase.__str__": {
  "lineno": 11,
  "symbols_in_volume": [
   "torch.typename"
  ],
  "type": "function"
 },
 "torch.storage._StorageBase._new_shared": {
  "lineno": 128,
  "symbols_in_volume": [
   "torch.multiprocessing.get_sharing_strategy"
  ],
  "type": "function"
 },
 "torch.storage._StorageBase.bfloat16": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.storage._StorageBase.bool": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.storage._StorageBase.byte": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.storage._StorageBase.char": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.storage._StorageBase.clone": {
  "lineno": 40,
  "symbols_in_volume": [
   "torch.cuda.device"
  ],
  "type": "function"
 },
 "torch.storage._StorageBase.complex_double": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.storage._StorageBase.complex_float": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.storage._StorageBase.cpu": {
  "lineno": 50,
  "symbols_in_volume": [
   "torch"
  ],
  "type": "function"
 },
 "torch.storage._StorageBase.double": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.storage._StorageBase.float": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.storage._StorageBase.half": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.storage._StorageBase.int": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.storage._StorageBase.long": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.storage._StorageBase.pin_memory": {
  "lineno": 102,
  "symbols_in_volume": [
   "torch.cuda._host_allocator"
  ],
  "type": "function"
 },
 "torch.storage._StorageBase.share_memory_": {
  "lineno": 110,
  "symbols_in_volume": [
   "torch.multiprocessing.get_sharing_strategy"
  ],
  "type": "function"
 },
 "torch.storage._StorageBase.short": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.storage._StorageBase.tolist": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.storage._load_from_bytes": {
  "lineno": 140,
  "symbols_in_volume": [
   "io.BytesIO",
   "torch.load"
  ],
  "type": "function"
 },
 "torch.tensor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.tensor.Tensor": {
  "lineno": 40,
  "symbols_in_volume": [
   "torch._C._TensorBase",
   "torch._C._TensorBase.__idiv__",
   "torch._C._TensorBase.abs",
   "torch._C._TensorBase.detach",
   "torch._C._TensorBase.detach_",
   "torch._C._TensorBase.eq",
   "torch._C._TensorBase.ge",
   "torch._C._TensorBase.gt",
   "torch._C._TensorBase.le",
   "torch._C._TensorBase.lt",
   "torch._C._TensorBase.ne",
   "torch._C._TensorBase.neg",
   "torch._C._TensorBase.pow",
   "torch._C._add_docstr"
  ],
  "type": "class"
 },
 "torch.tensor.Tensor.__array__": {
  "lineno": 624,
  "symbols_in_volume": [
   "torch.overrides.handle_torch_function",
   "torch.overrides.has_torch_function"
  ],
  "type": "function"
 },
 "torch.tensor.Tensor.__array_wrap__": {
  "lineno": 636,
  "symbols_in_volume": [
   "torch.from_numpy",
   "torch.overrides.handle_torch_function",
   "torch.overrides.has_torch_function"
  ],
  "type": "function"
 },
 "torch.tensor.Tensor.__contains__": {
  "lineno": 646,
  "symbols_in_volume": [
   "numbers.Number",
   "torch.Tensor",
   "torch.overrides.handle_torch_function",
   "torch.overrides.has_torch_function"
  ],
  "type": "function"
 },
 "torch.tensor.Tensor.__cuda_array_interface__": {
  "lineno": 666,
  "symbols_in_volume": [
   "torch.complex128",
   "torch.complex64",
   "torch.float16",
   "torch.float32",
   "torch.float64",
   "torch.int16",
   "torch.int32",
   "torch.int64",
   "torch.int8",
   "torch.overrides.handle_torch_function",
   "torch.overrides.has_torch_function",
   "torch.uint8"
  ],
  "type": "function"
 },
 "torch.tensor.Tensor.__deepcopy__": {
  "lineno": 41,
  "symbols_in_volume": [
   "torch._utils._rebuild_qtensor",
   "torch.no_grad",
   "torch.overrides.handle_torch_function",
   "torch.overrides.has_torch_function",
   "torch.per_channel_affine",
   "torch.per_channel_affine_float_qparams",
   "torch.per_tensor_affine",
   "torch.qscheme",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "torch.tensor.Tensor.__dir__": {
  "lineno": 603,
  "symbols_in_volume": [
   "torch.overrides.handle_torch_function",
   "torch.overrides.has_torch_function",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.tensor.Tensor.__floordiv__": {
  "lineno": 549,
  "symbols_in_volume": [
   "torch.floor_divide"
  ],
  "type": "function"
 },
 "torch.tensor.Tensor.__format__": {
  "lineno": 528,
  "symbols_in_volume": [
   "torch.overrides.handle_torch_function",
   "torch.overrides.has_torch_function"
  ],
  "type": "function"
 },
 "torch.tensor.Tensor.__hash__": {
  "lineno": 596,
  "symbols_in_volume": [
   "torch.overrides.handle_torch_function",
   "torch.overrides.has_torch_function"
  ],
  "type": "function"
 },
 "torch.tensor.Tensor.__ipow__": {
  "lineno": 537,
  "symbols_in_volume": [
   "torch.overrides.handle_torch_function",
   "torch.overrides.has_torch_function"
  ],
  "type": "function"
 },
 "torch.tensor.Tensor.__iter__": {
  "lineno": 576,
  "symbols_in_volume": [
   "torch._C._get_tracing_state",
   "torch.overrides.handle_torch_function",
   "torch.overrides.has_torch_function",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.tensor.Tensor.__len__": {
  "lineno": 567,
  "symbols_in_volume": [
   "torch.overrides.handle_torch_function",
   "torch.overrides.has_torch_function"
  ],
  "type": "function"
 },
 "torch.tensor.Tensor.__rdiv__": {
  "lineno": 513,
  "symbols_in_volume": [
   "torch.get_default_dtype",
   "torch.overrides.handle_torch_function",
   "torch.overrides.has_torch_function"
  ],
  "type": "function"
 },
 "torch.tensor.Tensor.__reduce_ex__": {
  "lineno": 83,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "torch._namedtensor_internals.check_serializing_named_tensor",
   "torch._utils._rebuild_qtensor",
   "torch._utils._rebuild_sparse_tensor",
   "torch._utils._rebuild_tensor_v2",
   "torch._utils._rebuild_xla_tensor",
   "torch.overrides.handle_torch_function",
   "torch.overrides.has_torch_function",
   "torch.per_channel_affine",
   "torch.per_channel_affine_float_qparams",
   "torch.per_tensor_affine",
   "torch.qscheme",
   "torch.sparse_coo",
   "torch.utils.hooks.warn_if_has_hooks",
   "typing.Any",
   "typing.Dict",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "torch.tensor.Tensor.__repr__": {
  "lineno": 173,
  "symbols_in_volume": [
   "torch._tensor_str._str",
   "torch.overrides.handle_torch_function",
   "torch.overrides.has_torch_function"
  ],
  "type": "function"
 },
 "torch.tensor.Tensor.__reversed__": {
  "lineno": 372,
  "symbols_in_volume": [
   "torch.overrides.handle_torch_function",
   "torch.overrides.has_torch_function"
  ],
  "type": "function"
 },
 "torch.tensor.Tensor.__rfloordiv__": {
  "lineno": 553,
  "symbols_in_volume": [
   "torch.floor_divide"
  ],
  "type": "function"
 },
 "torch.tensor.Tensor.__rpow__": {
  "lineno": 544,
  "symbols_in_volume": [
   "torch.result_type",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.tensor.Tensor.__rsub__": {
  "lineno": 506,
  "symbols_in_volume": [
   "torch._C._VariableFunctions.rsub",
   "torch.overrides.handle_torch_function",
   "torch.overrides.has_torch_function"
  ],
  "type": "function"
 },
 "torch.tensor.Tensor.__setstate__": {
  "lineno": 152,
  "symbols_in_volume": [
   "torch.overrides.handle_torch_function",
   "torch.overrides.has_torch_function"
  ],
  "type": "function"
 },
 "torch.tensor.Tensor.__torch_function__": {
  "lineno": 973,
  "symbols_in_volume": [
   "torch._C.DisableTorchFunction"
  ],
  "type": "function"
 },
 "torch.tensor.Tensor._update_names": {
  "lineno": 921,
  "symbols_in_volume": [
   "torch.overrides.handle_torch_function",
   "torch.overrides.has_torch_function"
  ],
  "type": "function"
 },
 "torch.tensor.Tensor.align_to": {
  "lineno": 777,
  "symbols_in_volume": [
   "torch._namedtensor_internals.is_ellipsis",
   "torch._namedtensor_internals.single_ellipsis_index",
   "torch.overrides.handle_torch_function",
   "torch.overrides.has_torch_function"
  ],
  "type": "function"
 },
 "torch.tensor.Tensor.backward": {
  "lineno": 181,
  "symbols_in_volume": [
   "torch.autograd.backward",
   "torch.overrides.handle_torch_function",
   "torch.overrides.has_torch_function"
  ],
  "type": "function"
 },
 "torch.tensor.Tensor.grad": {
  "lineno": 964,
  "symbols_in_volume": [
   "torch.overrides.handle_torch_function",
   "torch.overrides.has_torch_function"
  ],
  "type": "function"
 },
 "torch.tensor.Tensor.is_shared": {
  "lineno": 348,
  "symbols_in_volume": [
   "torch.overrides.handle_torch_function",
   "torch.overrides.has_torch_function"
  ],
  "type": "function"
 },
 "torch.tensor.Tensor.istft": {
  "lineno": 425,
  "symbols_in_volume": [
   "torch.istft",
   "torch.overrides.handle_torch_function",
   "torch.overrides.has_torch_function",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.tensor.Tensor.lu": {
  "lineno": 391,
  "symbols_in_volume": [
   "torch._lu_with_info",
   "torch.overrides.handle_torch_function",
   "torch.overrides.has_torch_function"
  ],
  "type": "function"
 },
 "torch.tensor.Tensor.norm": {
  "lineno": 383,
  "symbols_in_volume": [
   "torch.norm",
   "torch.overrides.handle_torch_function",
   "torch.overrides.has_torch_function"
  ],
  "type": "function"
 },
 "torch.tensor.Tensor.refine_names": {
  "lineno": 731,
  "symbols_in_volume": [
   "torch._namedtensor_internals.resolve_ellipsis",
   "torch.overrides.handle_torch_function",
   "torch.overrides.has_torch_function"
  ],
  "type": "function"
 },
 "torch.tensor.Tensor.register_hook": {
  "lineno": 223,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "torch.overrides.handle_torch_function",
   "torch.overrides.has_torch_function",
   "torch.utils.hooks.RemovableHandle"
  ],
  "type": "function"
 },
 "torch.tensor.Tensor.reinforce": {
  "lineno": 267,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.tensor.Tensor.reinforce.trim": {
  "lineno": 268,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.tensor.Tensor.rename": {
  "lineno": 879,
  "symbols_in_volume": [
   "torch._namedtensor_internals.update_names",
   "torch.overrides.handle_torch_function",
   "torch.overrides.has_torch_function"
  ],
  "type": "function"
 },
 "torch.tensor.Tensor.rename_": {
  "lineno": 864,
  "symbols_in_volume": [
   "torch._namedtensor_internals.update_names",
   "torch.overrides.handle_torch_function",
   "torch.overrides.has_torch_function"
  ],
  "type": "function"
 },
 "torch.tensor.Tensor.resize": {
  "lineno": 442,
  "symbols_in_volume": [
   "torch.autograd._functions.Resize.apply",
   "torch.overrides.handle_torch_function",
   "torch.overrides.has_torch_function",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.tensor.Tensor.resize_as": {
  "lineno": 451,
  "symbols_in_volume": [
   "torch.autograd._functions.Resize.apply",
   "torch.overrides.handle_torch_function",
   "torch.overrides.has_torch_function",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.tensor.Tensor.retain_grad": {
  "lineno": 319,
  "symbols_in_volume": [
   "torch.overrides.handle_torch_function",
   "torch.overrides.has_torch_function",
   "weakref.ref"
  ],
  "type": "function"
 },
 "torch.tensor.Tensor.retain_grad.retain_grad_hook": {
  "lineno": 333,
  "symbols_in_volume": [
   "torch.contiguous_format"
  ],
  "type": "function"
 },
 "torch.tensor.Tensor.share_memory_": {
  "lineno": 359,
  "symbols_in_volume": [
   "torch.overrides.handle_torch_function",
   "torch.overrides.has_torch_function"
  ],
  "type": "function"
 },
 "torch.tensor.Tensor.split": {
  "lineno": 460,
  "symbols_in_volume": [
   "torch.overrides.handle_torch_function",
   "torch.overrides.has_torch_function"
  ],
  "type": "function"
 },
 "torch.tensor.Tensor.stft": {
  "lineno": 404,
  "symbols_in_volume": [
   "torch.overrides.handle_torch_function",
   "torch.overrides.has_torch_function",
   "torch.stft",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.tensor.Tensor.unflatten": {
  "lineno": 824,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "torch._namedtensor_internals.unzip_namedshape",
   "torch.overrides.handle_torch_function",
   "torch.overrides.has_torch_function"
  ],
  "type": "function"
 },
 "torch.tensor.Tensor.unique": {
  "lineno": 478,
  "symbols_in_volume": [
   "torch.overrides.handle_torch_function",
   "torch.overrides.has_torch_function",
   "torch.unique"
  ],
  "type": "function"
 },
 "torch.tensor.Tensor.unique_consecutive": {
  "lineno": 492,
  "symbols_in_volume": [
   "torch.overrides.handle_torch_function",
   "torch.overrides.has_torch_function",
   "torch.unique_consecutive"
  ],
  "type": "function"
 },
 "torch.tensor._convert": {
  "lineno": 1001,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.tensor._wrap_type_error_to_not_implemented": {
  "lineno": 16,
  "symbols_in_volume": [
   "functools.WRAPPER_ASSIGNMENTS"
  ],
  "type": "function"
 },
 "torch.tensor._wrap_type_error_to_not_implemented.wrapped": {
  "lineno": 21,
  "symbols_in_volume": [
   "functools.wraps",
   "torch.overrides.handle_torch_function",
   "torch.overrides.has_torch_function"
  ],
  "type": "function"
 },
 "torch.testing": {
  "lineno": null,
  "symbols_in_volume": [
   "torch._C.FileCheck",
   "torch.cdouble",
   "torch.cfloat",
   "torch.float32",
   "torch.float64",
   "torch.half",
   "torch.int16",
   "torch.int32",
   "torch.int64",
   "torch.int8",
   "torch.rand_like",
   "torch.randn_like",
   "torch.uint8",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "module"
 },
 "torch.testing._compare_scalars_internal": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._compare_scalars_internal._helper": {
  "lineno": 157,
  "symbols_in_volume": [
   "math.isinf"
  ],
  "type": "function"
 },
 "torch.testing._compare_tensors_internal": {
  "lineno": 69,
  "symbols_in_volume": [
   "math.inf",
   "torch.Tensor",
   "torch.abs",
   "torch.allclose",
   "torch.argmax",
   "torch.bool",
   "torch.float64",
   "torch.isclose",
   "torch.isnan",
   "torch.long",
   "torch.sum",
   "typing.Optional",
   "typing.cast"
  ],
  "type": "function"
 },
 "torch.testing._dispatch_dtypes": {
  "lineno": 264,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._dispatch_dtypes.__add__": {
  "lineno": 265,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._get_default_tolerance": {
  "lineno": 361,
  "symbols_in_volume": [
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.testing._internal": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.testing._internal.autocast_test_lists": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.testing._internal.autocast_test_lists.AutocastTestLists": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.autocast_test_lists.AutocastTestLists.__init__": {
  "lineno": 22,
  "symbols_in_volume": [
   "torch._C._nn",
   "torch.bool",
   "torch.float",
   "torch.float16",
   "torch.float32",
   "torch.half",
   "torch.int",
   "torch.long",
   "torch.nn._reduction.get_enum",
   "torch.ones",
   "torch.rand",
   "torch.randn",
   "torch.tensor",
   "torch.testing._internal.common_utils.TEST_WITH_ROCM",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.testing._internal.autocast_test_lists.AutocastTestLists._rnn_cell_args": {
  "lineno": 6,
  "symbols_in_volume": [
   "torch.float32",
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.testing._internal.codegen": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.testing._internal.codegen.random_topo_test": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.random.randint",
   "numpy.random.seed",
   "torch._C._jit_override_can_fuse_on_cpu",
   "torch._C._jit_override_can_fuse_on_gpu",
   "torch._C._jit_set_nvfuser_enabled",
   "torch._C._jit_set_profiling_executor",
   "torch._C._jit_set_profiling_mode",
   "torch.float"
  ],
  "type": "module"
 },
 "torch.testing._internal.codegen.random_topo_test.WrongResultException": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.codegen.random_topo_test.get_broadcast_compatible_shape": {
  "lineno": 42,
  "symbols_in_volume": [
   "numpy.random.choice",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "torch.testing._internal.codegen.random_topo_test.parse_args": {
  "lineno": 338,
  "symbols_in_volume": [
   "argparse.ArgumentParser"
  ],
  "type": "function"
 },
 "torch.testing._internal.codegen.random_topo_test.prepareInputTensorsToRandomTopoTest": {
  "lineno": 193,
  "symbols_in_volume": [
   "numpy.random.choice",
   "numpy.random.randint",
   "numpy.random.seed",
   "torch.arange",
   "torch.manual_seed",
   "torch.randn",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.testing._internal.codegen.random_topo_test.random_topology_test": {
  "lineno": 57,
  "symbols_in_volume": [
   "numpy.random.choice",
   "numpy.random.randint",
   "numpy.random.random",
   "numpy.random.seed",
   "torch.add",
   "torch.mul",
   "torch.relu",
   "torch.sigmoid",
   "torch.sub",
   "typing.Dict"
  ],
  "type": "function"
 },
 "torch.testing._internal.codegen.random_topo_test.random_topology_test.get_root": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.codegen.random_topo_test.reproString": {
  "lineno": 250,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.codegen.random_topo_test.runDefaultTestWithSeed": {
  "lineno": 273,
  "symbols_in_volume": [
   "torch.jit.trace"
  ],
  "type": "function"
 },
 "torch.testing._internal.codegen.random_topo_test.runTest": {
  "lineno": 293,
  "symbols_in_volume": [
   "torch.float16",
   "torch.float32",
   "torch.jit.trace"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_cuda": {
  "lineno": null,
  "symbols_in_volume": [
   "torch.backends.cudnn.is_acceptable",
   "torch.backends.cudnn.version",
   "torch.cuda.device_count",
   "torch.cuda.has_magma",
   "torch.cuda.is_available",
   "torch.device",
   "torch.ones",
   "torch.tensor",
   "torch.testing._internal.common_utils.TEST_NUMBA"
  ],
  "type": "module"
 },
 "torch.testing._internal.common_cuda._get_torch_cuda_version": {
  "lineno": 145,
  "symbols_in_volume": [
   "torch.version.cuda"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_cuda.initialize_cuda_context_rng": {
  "lineno": 35,
  "symbols_in_volume": [
   "torch.cuda.device_count",
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_cuda.tf32_is_not_fp32": {
  "lineno": 48,
  "symbols_in_volume": [
   "torch.cuda.current_device",
   "torch.cuda.get_device_properties",
   "torch.cuda.is_available",
   "torch.version.cuda",
   "torch.version.cuda.split"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_cuda.tf32_off": {
  "lineno": 58,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "torch.backends.cuda.matmul.allow_tf32",
   "torch.backends.cudnn.flags"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_cuda.tf32_on": {
  "lineno": 69,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "torch.backends.cuda.matmul.allow_tf32",
   "torch.backends.cudnn.flags"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_cuda.tf32_on_and_off": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_cuda.tf32_on_and_off.with_tf32_disabled": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_cuda.tf32_on_and_off.with_tf32_enabled": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_cuda.tf32_on_and_off.wrapper": {
  "lineno": 106,
  "symbols_in_volume": [
   "inspect.signature"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_cuda.tf32_on_and_off.wrapper.wrapped": {
  "lineno": 119,
  "symbols_in_volume": [
   "functools.wraps",
   "torch.complex64",
   "torch.float32"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_cuda.with_tf32_off": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_cuda.with_tf32_off.wrapped": {
  "lineno": 137,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_device_type": {
  "lineno": null,
  "symbols_in_volume": [
   "os.environ.get",
   "os.getenv",
   "runpy.run_path",
   "torch.cuda.is_available",
   "typing.Any",
   "typing.List"
  ],
  "type": "module"
 },
 "torch.testing._internal.common_device_type.CPUTestBase": {
  "lineno": 317,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.common_device_type.CUDATestBase": {
  "lineno": 321,
  "symbols_in_volume": [
   "typing.Any",
   "typing.ClassVar"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_device_type.CUDATestBase.get_all_devices": {
  "lineno": 338,
  "symbols_in_volume": [
   "torch.cuda.device_count"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.CUDATestBase.get_primary_device": {
  "lineno": 334,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.CUDATestBase.has_cudnn": {
  "lineno": 331,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.CUDATestBase.setUpClass": {
  "lineno": 348,
  "symbols_in_volume": [
   "torch.backends.cudnn.is_acceptable",
   "torch.backends.cudnn.version",
   "torch.cuda.current_device",
   "torch.cuda.has_magma",
   "torch.ones"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.DeviceTypeTestBase": {
  "lineno": 187,
  "symbols_in_volume": [
   "threading.local",
   "torch.testing._internal.common_utils.TestCase",
   "torch.testing._internal.common_utils.TestCase._precision"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_device_type.DeviceTypeTestBase._get_dtypes": {
  "lineno": 219,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.DeviceTypeTestBase._get_precision_override": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.DeviceTypeTestBase.get_all_devices": {
  "lineno": 213,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.DeviceTypeTestBase.get_primary_device": {
  "lineno": 204,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.DeviceTypeTestBase.instantiate_test": {
  "lineno": 231,
  "symbols_in_volume": [
   "torch.testing._internal.common_utils.TEST_WITH_ROCM",
   "torch.testing.get_all_dtypes"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.DeviceTypeTestBase.instantiate_test.instantiate_test_helper": {
  "lineno": 234,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.DeviceTypeTestBase.instantiate_test.instantiate_test_helper.instantiated_test": {
  "lineno": 257,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.DeviceTypeTestBase.instantiate_test.instantiate_test_helper.test_wrapper": {
  "lineno": 245,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.DeviceTypeTestBase.precision": {
  "lineno": 198,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_device_type._construct_test_name": {
  "lineno": 172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_device_type._has_sufficient_memory": {
  "lineno": 535,
  "symbols_in_volume": [
   "gc.collect",
   "psutil.virtual_memory",
   "torch.cuda.get_device_properties",
   "torch.cuda.is_available",
   "torch.testing._internal.common_utils.TEST_WITH_ASAN",
   "torch.testing._internal.common_utils.TEST_WITH_TSAN",
   "torch.testing._internal.common_utils.TEST_WITH_UBSAN",
   "unittest.SkipTest"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.deviceCountAtLeast": {
  "lineno": 624,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.common_device_type.deviceCountAtLeast.__call__": {
  "lineno": 629,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.deviceCountAtLeast.__call__.multi_fn": {
  "lineno": 633,
  "symbols_in_volume": [
   "functools.wraps",
   "unittest.SkipTest"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.deviceCountAtLeast.__init__": {
  "lineno": 626,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.dtypes": {
  "lineno": 696,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.common_device_type.dtypes.__call__": {
  "lineno": 714,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.dtypes.__init__": {
  "lineno": 700,
  "symbols_in_volume": [
   "torch.dtype"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.dtypesIfCPU": {
  "lineno": 723,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.common_device_type.dtypesIfCPU.__init__": {
  "lineno": 725,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.dtypesIfCUDA": {
  "lineno": 730,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.common_device_type.dtypesIfCUDA.__init__": {
  "lineno": 732,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.expectedAlertNondeterministic": {
  "lineno": 747,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.common_device_type.expectedAlertNondeterministic.__call__": {
  "lineno": 753,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.expectedAlertNondeterministic.__call__.efail_fn": {
  "lineno": 754,
  "symbols_in_volume": [
   "functools.wraps",
   "torch.is_deterministic",
   "torch.set_deterministic"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.expectedAlertNondeterministic.__call__.efail_fn_no_device": {
  "lineno": 781,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.expectedAlertNondeterministic.__init__": {
  "lineno": 748,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.expectedFailure": {
  "lineno": 581,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.common_device_type.expectedFailure.__call__": {
  "lineno": 586,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.expectedFailure.__call__.efail_fn": {
  "lineno": 588,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.expectedFailure.__init__": {
  "lineno": 583,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.expectedFailureCUDA": {
  "lineno": 744,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.instantiate_device_type_tests": {
  "lineno": 398,
  "symbols_in_volume": [
   "copy.deepcopy",
   "inspect.isfunction",
   "inspect.signature",
   "typing.Any"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.largeCUDATensorTest": {
  "lineno": 527,
  "symbols_in_volume": [
   "torch.cuda.get_device_properties",
   "torch.cuda.is_available",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.largeTensorTest": {
  "lineno": 560,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.largeTensorTest.inner": {
  "lineno": 569,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.largeTensorTest.inner.dep_fn": {
  "lineno": 570,
  "symbols_in_volume": [
   "functools.wraps",
   "unittest.SkipTest"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.onlyCPU": {
  "lineno": 736,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.onlyCUDA": {
  "lineno": 740,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.onlyOn": {
  "lineno": 602,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.common_device_type.onlyOn.__call__": {
  "lineno": 607,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.onlyOn.__call__.only_fn": {
  "lineno": 609,
  "symbols_in_volume": [
   "functools.wraps",
   "unittest.SkipTest"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.onlyOn.__init__": {
  "lineno": 604,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.onlyOnCPUAndCUDA": {
  "lineno": 644,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.onlyOnCPUAndCUDA.only_fn": {
  "lineno": 645,
  "symbols_in_volume": [
   "functools.wraps",
   "unittest.SkipTest"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.ops": {
  "lineno": 475,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.common_device_type.ops.__call__": {
  "lineno": 480,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.ops.__init__": {
  "lineno": 476,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.precisionOverride": {
  "lineno": 672,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.common_device_type.precisionOverride.__call__": {
  "lineno": 681,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.precisionOverride.__init__": {
  "lineno": 674,
  "symbols_in_volume": [
   "torch.dtype"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.skipCPUIf": {
  "lineno": 513,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.common_device_type.skipCPUIf.__init__": {
  "lineno": 515,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.skipCPUIfNoLapack": {
  "lineno": 791,
  "symbols_in_volume": [
   "torch._C.has_lapack"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.skipCPUIfNoMkl": {
  "lineno": 796,
  "symbols_in_volume": [
   "torch.testing._internal.common_utils.TEST_MKL"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.skipCUDAIf": {
  "lineno": 520,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.common_device_type.skipCUDAIf.__init__": {
  "lineno": 522,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.skipCUDAIfCudnnVersionLessThan": {
  "lineno": 815,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.skipCUDAIfCudnnVersionLessThan.dec_fn": {
  "lineno": 817,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.skipCUDAIfCudnnVersionLessThan.dec_fn.wrap_fn": {
  "lineno": 818,
  "symbols_in_volume": [
   "functools.wraps",
   "unittest.SkipTest"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.skipCUDAIfNoCudnn": {
  "lineno": 834,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.skipCUDAIfNoMagma": {
  "lineno": 801,
  "symbols_in_volume": [
   "torch.testing._internal.common_utils.skipCUDANonDefaultStreamIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.skipCUDAIfNotRocm": {
  "lineno": 810,
  "symbols_in_volume": [
   "torch.testing._internal.common_utils.TEST_WITH_ROCM"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.skipCUDAIfRocm": {
  "lineno": 806,
  "symbols_in_volume": [
   "torch.testing._internal.common_utils.TEST_WITH_ROCM"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.skipIf": {
  "lineno": 493,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.common_device_type.skipIf.__call__": {
  "lineno": 500,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.skipIf.__call__.dep_fn": {
  "lineno": 502,
  "symbols_in_volume": [
   "functools.wraps",
   "unittest.SkipTest"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_device_type.skipIf.__init__": {
  "lineno": 495,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_distributed": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.testing._internal.common_distributed.MultiProcessTestCase": {
  "lineno": 251,
  "symbols_in_volume": [
   "torch.testing._internal.common_utils.TestCase"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_distributed.MultiProcessTestCase.__init__": {
  "lineno": 281,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_distributed.MultiProcessTestCase._check_no_test_errors": {
  "lineno": 389,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_distributed.MultiProcessTestCase._check_return_codes": {
  "lineno": 398,
  "symbols_in_volume": [
   "unittest.SkipTest"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_distributed.MultiProcessTestCase._current_test_name": {
  "lineno": 305,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_distributed.MultiProcessTestCase._fork_processes": {
  "lineno": 325,
  "symbols_in_volume": [
   "torch.multiprocessing.get_context"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_distributed.MultiProcessTestCase._join_processes": {
  "lineno": 345,
  "symbols_in_volume": [
   "time.sleep",
   "time.time",
   "torch.multiprocessing.active_children"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_distributed.MultiProcessTestCase._run": {
  "lineno": 333,
  "symbols_in_volume": [
   "sys.exit"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_distributed.MultiProcessTestCase._spawn_processes": {
  "lineno": 329,
  "symbols_in_volume": [
   "torch.multiprocessing.get_context"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_distributed.MultiProcessTestCase._start_processes": {
  "lineno": 309,
  "symbols_in_volume": [
   "multiprocessing.Manager"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_distributed.MultiProcessTestCase.is_master": {
  "lineno": 442,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_distributed.MultiProcessTestCase.join_or_run": {
  "lineno": 263,
  "symbols_in_volume": [
   "types.MethodType"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_distributed.MultiProcessTestCase.join_or_run.wrapper": {
  "lineno": 264,
  "symbols_in_volume": [
   "functools.wraps",
   "logging.error",
   "sys.exit",
   "traceback.format_exc"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_distributed.MultiProcessTestCase.setUp": {
  "lineno": 286,
  "symbols_in_volume": [
   "tempfile.NamedTemporaryFile"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_distributed.MultiProcessTestCase.tearDown": {
  "lineno": 295,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_distributed.MultiProcessTestCase.world_size": {
  "lineno": 259,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_distributed.TestSkip": {
  "lineno": 21,
  "symbols_in_volume": [
   "typing.NamedTuple"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_distributed.cleanup_temp_dir": {
  "lineno": 237,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_distributed.create_device": {
  "lineno": 167,
  "symbols_in_volume": [
   "sys.platform",
   "torch.distributed.ProcessGroupGloo.create_device"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_distributed.get_timeout": {
  "lineno": 174,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_distributed.initialize_temp_directories": {
  "lineno": 221,
  "symbols_in_volume": [
   "os.environ",
   "os.mkdir",
   "os.path.join",
   "tempfile.TemporaryDirectory",
   "torch.testing._internal.common_utils.FILE_SCHEMA"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_distributed.require_n_gpus_for_nccl_backend": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_distributed.require_n_gpus_for_nccl_backend.decorator": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_distributed.require_n_gpus_for_nccl_backend.decorator.wrapper": {
  "lineno": 76,
  "symbols_in_volume": [
   "functools.wraps",
   "sys.exit",
   "torch.cuda.device_count"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_distributed.requires_gloo": {
  "lineno": 101,
  "symbols_in_volume": [
   "torch.distributed.is_gloo_available",
   "unittest.skipUnless"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_distributed.requires_mpi": {
  "lineno": 127,
  "symbols_in_volume": [
   "torch.distributed.is_mpi_available",
   "unittest.skipUnless"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_distributed.requires_nccl": {
  "lineno": 120,
  "symbols_in_volume": [
   "torch.distributed.is_nccl_available",
   "unittest.skipUnless"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_distributed.requires_nccl_version": {
  "lineno": 107,
  "symbols_in_volume": [
   "torch.cuda.nccl.version",
   "torch.distributed.is_nccl_available",
   "unittest.skip",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_distributed.simple_sparse_reduce_tests": {
  "lineno": 178,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_distributed.simple_sparse_reduce_tests.compute_sum": {
  "lineno": 196,
  "symbols_in_volume": [
   "functools.reduce"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_distributed.simple_sparse_reduce_tests.generate": {
  "lineno": 184,
  "symbols_in_volume": [
   "torch.arange",
   "torch.cat",
   "torch.ones",
   "torch.reshape",
   "torch.sparse_coo_tensor",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_distributed.skip_if_lt_x_gpu": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_distributed.skip_if_lt_x_gpu.decorator": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_distributed.skip_if_lt_x_gpu.decorator.wrapper": {
  "lineno": 90,
  "symbols_in_volume": [
   "functools.wraps",
   "sys.exit",
   "torch.cuda.device_count",
   "torch.cuda.is_available"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_distributed.skip_if_no_gpu": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_distributed.skip_if_no_gpu.wrapper": {
  "lineno": 37,
  "symbols_in_volume": [
   "functools.wraps",
   "os.environ",
   "sys.exit",
   "torch.cuda.device_count",
   "torch.cuda.is_available"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_distributed.skip_if_not_multigpu": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_distributed.skip_if_not_multigpu.wrapper": {
  "lineno": 64,
  "symbols_in_volume": [
   "functools.wraps",
   "sys.exit",
   "torch.cuda.device_count",
   "torch.cuda.is_available"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_distributed.skip_if_rocm": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_distributed.skip_if_rocm.wrapper": {
  "lineno": 149,
  "symbols_in_volume": [
   "functools.wraps",
   "sys.exit",
   "torch.testing._internal.common_utils.TEST_WITH_ROCM"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_distributed.skip_if_rocm_single_process": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_distributed.skip_if_rocm_single_process.wrapper": {
  "lineno": 137,
  "symbols_in_volume": [
   "functools.wraps",
   "torch.testing._internal.common_utils.TEST_WITH_ROCM",
   "unittest.SkipTest"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_distributed.skip_if_small_worldsize": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_distributed.skip_if_small_worldsize.wrapper": {
  "lineno": 52,
  "symbols_in_volume": [
   "functools.wraps",
   "os.environ",
   "sys.exit"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_distributed.skip_if_win32": {
  "lineno": 157,
  "symbols_in_volume": [
   "sys.platform",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_methods_invocations": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple",
   "numpy.arccos",
   "numpy.arccosh",
   "numpy.arcsin",
   "numpy.arcsinh",
   "numpy.arctan",
   "numpy.arctanh",
   "numpy.cos",
   "numpy.cosh",
   "numpy.exp2",
   "numpy.log",
   "numpy.log10",
   "numpy.log1p",
   "numpy.log2",
   "numpy.negative",
   "numpy.sin",
   "numpy.sinh",
   "numpy.tan",
   "numpy.tanh",
   "torch.bfloat16",
   "torch.cdouble",
   "torch.cfloat",
   "torch.complex64",
   "torch.double",
   "torch.float",
   "torch.float16",
   "torch.float32",
   "torch.float64",
   "torch.half",
   "torch.int",
   "torch.long",
   "torch.short",
   "torch.testing._internal.common_device_type.precisionOverride",
   "torch.testing._internal.common_utils.IS_MACOS",
   "torch.testing._internal.common_utils.IS_WINDOWS",
   "torch.testing._internal.common_utils.TEST_WITH_ROCM",
   "torch.testing.all_types_and_complex_and",
   "torch.testing.floating_and_complex_types",
   "torch.testing.floating_and_complex_types_and",
   "torch.testing.floating_types",
   "torch.testing.floating_types_and",
   "typing.Any",
   "typing.Dict",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "module"
 },
 "torch.testing._internal.common_methods_invocations.NoArgsClass": {
  "lineno": 469,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.common_methods_invocations.NoArgsClass.__iter__": {
  "lineno": 470,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_methods_invocations.NoArgsClass.__len__": {
  "lineno": 477,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_methods_invocations.NoArgsClass.__next__": {
  "lineno": 473,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_methods_invocations.OpInfo": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.common_methods_invocations.OpInfo.__call__": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_methods_invocations.OpInfo.__init__": {
  "lineno": 57,
  "symbols_in_volume": [
   "torch",
   "torch.Tensor",
   "torch.testing._dispatch_dtypes",
   "torch.testing.floating_types"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_methods_invocations.OpInfo.get_inplace": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_methods_invocations.OpInfo.get_method": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_methods_invocations.OpInfo.get_op": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_methods_invocations.OpInfo.sample_inputs": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_methods_invocations.OpInfo.should_skip": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_methods_invocations.OpInfo.supports_dtype": {
  "lineno": 134,
  "symbols_in_volume": [
   "torch.testing._internal.common_utils.TEST_WITH_ROCM"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_methods_invocations.SampleInput": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.common_methods_invocations.SampleInput.__init__": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_methods_invocations.SkipInfo": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.common_methods_invocations.SkipInfo.__init__": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_methods_invocations.UnaryUfuncInfo": {
  "lineno": 152,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.common_methods_invocations.UnaryUfuncInfo.__init__": {
  "lineno": 165,
  "symbols_in_volume": [
   "torch.bfloat16",
   "torch.half",
   "torch.testing.floating_and_complex_types_and",
   "torch.testing.floating_types",
   "torch.testing.floating_types_and"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_methods_invocations.UnaryUfuncInfo.sample_inputs": {
  "lineno": 194,
  "symbols_in_volume": [
   "torch.testing._internal.common_utils.make_tensor"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_methods_invocations._compare_large_trilu_indices": {
  "lineno": 1475,
  "symbols_in_volume": [
   "torch.cuda.empty_cache",
   "torch.long",
   "torch.ones",
   "torch.tril_indices",
   "torch.triu_indices"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_methods_invocations._compare_trilu_indices": {
  "lineno": 1448,
  "symbols_in_volume": [
   "torch.empty",
   "torch.long",
   "torch.ones",
   "torch.tril_indices",
   "torch.triu_indices"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_methods_invocations.bernoulli_scalar": {
  "lineno": 429,
  "symbols_in_volume": [
   "torch.bool",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_methods_invocations.create_input": {
  "lineno": 1406,
  "symbols_in_volume": [
   "torch.double"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_methods_invocations.create_input.map_arg": {
  "lineno": 1410,
  "symbols_in_volume": [
   "torch.Size",
   "torch.Tensor",
   "torch.autograd.Variable",
   "torch.cdouble",
   "torch.cfloat",
   "torch.float",
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_methods_invocations.create_input.map_arg.maybe_non_contig": {
  "lineno": 1411,
  "symbols_in_volume": [
   "torch.testing.make_non_contiguous"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_methods_invocations.dont_convert": {
  "lineno": 465,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.common_methods_invocations.exclude_tensor_method": {
  "lineno": 1654,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_methods_invocations.gather_variable": {
  "lineno": 416,
  "symbols_in_volume": [
   "torch.LongTensor",
   "torch.randperm"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_methods_invocations.ident": {
  "lineno": 482,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_methods_invocations.index_perm_variable": {
  "lineno": 408,
  "symbols_in_volume": [
   "functools.reduce",
   "operator.mul",
   "torch.randperm"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_methods_invocations.index_variable": {
  "lineno": 401,
  "symbols_in_volume": [
   "torch.rand"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_methods_invocations.mask_not_all_zeros": {
  "lineno": 433,
  "symbols_in_volume": [
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_methods_invocations.method_tests": {
  "lineno": 500,
  "symbols_in_volume": [
   "operator.itemgetter",
   "torch.BoolTensor",
   "torch.LongTensor",
   "torch.Size",
   "torch._six.inf",
   "torch.bool",
   "torch.empty",
   "torch.float64",
   "torch.int64",
   "torch.rand",
   "torch.randn",
   "torch.tensor",
   "torch.testing._internal.common_device_type.expectedAlertNondeterministic",
   "torch.testing._internal.common_device_type.expectedFailureCUDA",
   "torch.testing._internal.common_device_type.skipCPUIfNoLapack",
   "torch.testing._internal.common_device_type.skipCUDAIfNoMagma",
   "torch.testing._internal.common_utils.make_nonzero_det",
   "torch.testing._internal.common_utils.prod_single_zero",
   "torch.testing._internal.common_utils.random_fullrank_matrix_distinct_singular_value",
   "torch.testing._internal.common_utils.random_square_matrix_of_rank",
   "torch.testing._internal.common_utils.random_symmetric_matrix",
   "torch.testing._internal.common_utils.random_symmetric_pd_matrix",
   "torch.testing._internal.common_utils.random_symmetric_psd_matrix",
   "torch.testing._internal.common_utils.set_rng_seed"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_methods_invocations.normal_scalar_clamp": {
  "lineno": 447,
  "symbols_in_volume": [
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_methods_invocations.prod_zeros": {
  "lineno": 453,
  "symbols_in_volume": [
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_methods_invocations.run_additional_tri_tests": {
  "lineno": 1573,
  "symbols_in_volume": [
   "torch.long",
   "torch.ones",
   "torch.sparse_coo",
   "torch.strided",
   "torch.tril_indices",
   "torch.triu_indices"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_methods_invocations.uniform_scalar": {
  "lineno": 441,
  "symbols_in_volume": [
   "torch.rand"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_methods_invocations.unpack_variables": {
  "lineno": 1597,
  "symbols_in_volume": [
   "torch._six.istuple"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn": {
  "lineno": null,
  "symbols_in_volume": [
   "math.pi.log",
   "math.sqrt",
   "sys.version_info",
   "tempfile.NamedTemporaryFile",
   "tempfile.TemporaryFile",
   "torch.DoubleTensor",
   "torch.Tensor",
   "torch.abs",
   "torch.arange",
   "torch.clamp",
   "torch.empty",
   "torch.erf",
   "torch.exp",
   "torch.flatten",
   "torch.float",
   "torch.float64",
   "torch.int",
   "torch.log",
   "torch.long",
   "torch.mm",
   "torch.nn.AvgPool2d",
   "torch.nn.AvgPool3d",
   "torch.nn.Conv1d",
   "torch.nn.Conv2d",
   "torch.nn.Conv3d",
   "torch.nn.ConvTranspose1d",
   "torch.nn.ConvTranspose2d",
   "torch.nn.Embedding",
   "torch.nn.EmbeddingBag",
   "torch.nn.Fold",
   "torch.nn.Unfold",
   "torch.nn.functional.interpolate",
   "torch.nn.functional.log_softmax",
   "torch.nn.functional.pad",
   "torch.nn.functional.softmax",
   "torch.ones",
   "torch.rand",
   "torch.randint",
   "torch.randn",
   "torch.randperm",
   "torch.sigmoid",
   "torch.tensor",
   "torch.testing._internal.common_device_type.expectedAlertNondeterministic",
   "torch.testing._internal.common_utils.TEST_WITH_ROCM",
   "torch.where",
   "torch.zeros"
  ],
  "type": "module"
 },
 "torch.testing._internal.common_nn.CriterionTest": {
  "lineno": 5094,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.common_nn.CriterionTest.__call__": {
  "lineno": 5110,
  "symbols_in_volume": [
   "copy.deepcopy",
   "torch.autograd.gradcheck.gradcheck",
   "torch.autograd.gradcheck.gradgradcheck"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.CriterionTest.__call__.apply_fn": {
  "lineno": 5138,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_nn.CriterionTest.__init__": {
  "lineno": 5099,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_nn.CriterionTest._get_target": {
  "lineno": 5196,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_nn.CriterionTest.constructor_args": {
  "lineno": 5199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_nn.CriterionTest.extra_args": {
  "lineno": 5203,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_nn.CriterionTest.test_cuda": {
  "lineno": 5146,
  "symbols_in_volume": [
   "torch.bfloat16",
   "torch.half",
   "torch.testing._internal.common_cuda.TEST_CUDA",
   "torch.testing._internal.common_utils.to_gpu",
   "unittest.SkipTest"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.CriterionTest.test_cuda.convert_dtype": {
  "lineno": 5147,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.InputVariableMixin": {
  "lineno": 4928,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.common_nn.InputVariableMixin._get_input": {
  "lineno": 4929,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_nn.InputVariableMixin._get_input.map_variables": {
  "lineno": 4932,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.ModuleTest": {
  "lineno": 4755,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.common_nn.ModuleTest.__call__": {
  "lineno": 4768,
  "symbols_in_volume": [
   "copy.deepcopy",
   "torch.load",
   "torch.save"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.ModuleTest.__init__": {
  "lineno": 4757,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_nn.ModuleTest.noncontiguize": {
  "lineno": 4794,
  "symbols_in_volume": [
   "torch.empty_like",
   "torch.stack"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.ModuleTest.test_cuda": {
  "lineno": 4848,
  "symbols_in_volume": [
   "torch.autograd.grad",
   "torch.cuda.FloatTensor",
   "torch.randn_like",
   "torch.testing._internal.common_cuda.TEST_CUDA",
   "torch.testing._internal.common_utils.to_gpu",
   "unittest.SkipTest"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.ModuleTest.test_noncontig": {
  "lineno": 4815,
  "symbols_in_volume": [
   "copy.deepcopy",
   "itertools.product",
   "torch.Tensor",
   "torch.testing._internal.common_utils.freeze_rng_state"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.NNTestCase": {
  "lineno": 4579,
  "symbols_in_volume": [
   "torch.testing._internal.common_utils.TestCase"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_nn.NNTestCase._analytical_jacobian": {
  "lineno": 4607,
  "symbols_in_volume": [
   "torch.autograd.gradcheck.iter_tensors",
   "torch.cat",
   "torch.types._TensorOrTensors",
   "torch.zeros",
   "torch.zeros_like"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.NNTestCase._flatten_tensors": {
  "lineno": 4589,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.NNTestCase._jacobian": {
  "lineno": 4581,
  "symbols_in_volume": [
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.NNTestCase._numerical_jacobian": {
  "lineno": 4649,
  "symbols_in_volume": [
   "torch.autograd.gradcheck.get_numerical_jacobian",
   "torch.cat",
   "torch.types._TensorOrTensors"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.NNTestCase._numerical_jacobian.fw": {
  "lineno": 4650,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_nn.NNTestCase._zero_grad_input": {
  "lineno": 4598,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.NNTestCase.check_jacobian": {
  "lineno": 4661,
  "symbols_in_volume": [
   "torch.autograd.gradcheck.iter_tensors",
   "torch.types._TensorOrTensors"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.NewModuleTest": {
  "lineno": 4943,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.common_nn.NewModuleTest.__init__": {
  "lineno": 4944,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_nn.NewModuleTest._do_test": {
  "lineno": 4954,
  "symbols_in_volume": [
   "copy.deepcopy",
   "torch.DoubleTensor",
   "torch.FloatTensor",
   "torch.LongTensor",
   "torch.backends.cudnn.flags",
   "torch.cuda.DoubleTensor",
   "torch.cuda.FloatTensor",
   "torch.cuda.HalfTensor",
   "torch.cuda.device",
   "torch.cuda.device_count",
   "torch.get_num_threads",
   "torch.set_num_threads",
   "torch.testing._internal.common_cuda.TEST_CUDA",
   "torch.testing._internal.common_utils._assertGradAndGradgradChecks",
   "torch.testing._internal.common_utils.freeze_rng_state"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.NewModuleTest._do_test.assert_module_parameters_are": {
  "lineno": 4997,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_nn.NewModuleTest._get_target": {
  "lineno": 5086,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_nn.NewModuleTest.constructor_args": {
  "lineno": 5089,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_nn.TestBase": {
  "lineno": 4677,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.common_nn.TestBase.__call__": {
  "lineno": 4751,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_nn.TestBase.__init__": {
  "lineno": 4681,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_nn.TestBase._get_arg": {
  "lineno": 4721,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_nn.TestBase._get_arg.map_tensor_sizes": {
  "lineno": 4736,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.TestBase._get_input": {
  "lineno": 4748,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_nn.TestBase._unpack": {
  "lineno": 4705,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.testing._internal.common_utils.is_iterable"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.TestBase.constructor_args": {
  "lineno": 4713,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_nn.TestBase.extra_args": {
  "lineno": 4717,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_nn.TestBase.get_name": {
  "lineno": 4696,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_nn._multilabelmarginloss_reference": {
  "lineno": 3720,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_nn._multimarginloss_reference": {
  "lineno": 3783,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_nn._rand_tensor_non_equal": {
  "lineno": 359,
  "symbols_in_volume": [
   "functools.reduce",
   "operator.mul",
   "torch.randperm"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.bce_with_logistic_legacy_enum_test": {
  "lineno": 451,
  "symbols_in_volume": [
   "torch.autograd.Variable",
   "torch.nn.Sigmoid",
   "torch.nn.functional.binary_cross_entropy_with_logits",
   "torch.rand",
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.bce_with_logistic_no_reduce_scalar_test": {
  "lineno": 485,
  "symbols_in_volume": [
   "torch.nn.Sigmoid",
   "torch.nn.functional.binary_cross_entropy_with_logits",
   "torch.rand",
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.bce_with_logistic_no_reduce_test": {
  "lineno": 468,
  "symbols_in_volume": [
   "torch.autograd.Variable",
   "torch.nn.Sigmoid",
   "torch.nn.functional.binary_cross_entropy_with_logits",
   "torch.rand",
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.bceloss_no_reduce_scalar_test": {
  "lineno": 400,
  "symbols_in_volume": [
   "torch.nn.functional.binary_cross_entropy",
   "torch.rand",
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.bceloss_no_reduce_test": {
  "lineno": 385,
  "symbols_in_volume": [
   "torch.autograd.Variable",
   "torch.nn.functional.binary_cross_entropy",
   "torch.rand",
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.bceloss_weights_no_reduce_scalar_test": {
  "lineno": 433,
  "symbols_in_volume": [
   "torch.nn.functional.binary_cross_entropy",
   "torch.rand",
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.bceloss_weights_no_reduce_test": {
  "lineno": 414,
  "symbols_in_volume": [
   "torch.autograd.Variable",
   "torch.nn.functional.binary_cross_entropy",
   "torch.rand",
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.cosineembeddingloss_reference": {
  "lineno": 3817,
  "symbols_in_volume": [
   "torch.where"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.cosineembeddingloss_reference._cos": {
  "lineno": 3818,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_nn.ctcloss_reference": {
  "lineno": 3859,
  "symbols_in_volume": [
   "torch.as_tensor",
   "torch.cat",
   "torch.long",
   "torch.where"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.fractional_max_pool2d_test": {
  "lineno": 1164,
  "symbols_in_volume": [
   "torch.DoubleTensor",
   "torch.nn.FractionalMaxPool2d",
   "torch.testing._internal.common_device_type.expectedAlertNondeterministic"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.fractional_max_pool3d_test": {
  "lineno": 1200,
  "symbols_in_volume": [
   "torch.DoubleTensor",
   "torch.nn.FractionalMaxPool3d",
   "torch.testing._internal.common_device_type.expectedAlertNondeterministic"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.get_reduction": {
  "lineno": 36,
  "symbols_in_volume": [
   "torch.nn.functional._Reduction.legacy_get_string"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.get_weight": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_nn.hingeembeddingloss_margin_no_reduce_test": {
  "lineno": 989,
  "symbols_in_volume": [
   "torch.autograd.Variable",
   "torch.nn.functional.hinge_embedding_loss",
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.hingeembeddingloss_no_reduce_test": {
  "lineno": 973,
  "symbols_in_volume": [
   "torch.autograd.Variable",
   "torch.nn.functional.hinge_embedding_loss",
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.hingeembeddingloss_reference": {
  "lineno": 3762,
  "symbols_in_volume": [
   "torch.where"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.kldivloss_log_target_reference": {
  "lineno": 3645,
  "symbols_in_volume": [
   "torch.exp"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.kldivloss_no_reduce_log_target_test": {
  "lineno": 559,
  "symbols_in_volume": [
   "torch.nn.functional.kl_div",
   "torch.rand",
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.kldivloss_no_reduce_scalar_log_target_test": {
  "lineno": 574,
  "symbols_in_volume": [
   "torch.nn.functional.kl_div",
   "torch.rand",
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.kldivloss_no_reduce_scalar_test": {
  "lineno": 531,
  "symbols_in_volume": [
   "torch.nn.functional.kl_div",
   "torch.rand",
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.kldivloss_no_reduce_test": {
  "lineno": 516,
  "symbols_in_volume": [
   "torch.nn.functional.kl_div",
   "torch.rand",
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.kldivloss_reference": {
  "lineno": 3633,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_nn.kldivloss_with_log_target_no_reduce_test": {
  "lineno": 545,
  "symbols_in_volume": [
   "torch.nn.functional.kl_div",
   "torch.rand"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.kldivloss_with_target_no_reduce_test": {
  "lineno": 502,
  "symbols_in_volume": [
   "torch.nn.functional.kl_div",
   "torch.rand"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.l1loss_no_reduce_scalar_test": {
  "lineno": 601,
  "symbols_in_volume": [
   "torch.nn.functional.l1_loss",
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.l1loss_no_reduce_test": {
  "lineno": 588,
  "symbols_in_volume": [
   "torch.nn.functional.l1_loss",
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.marginrankingloss_reference": {
  "lineno": 3849,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_nn.mseloss_no_reduce_scalar_test": {
  "lineno": 628,
  "symbols_in_volume": [
   "torch.nn.functional.mse_loss",
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.mseloss_no_reduce_test": {
  "lineno": 614,
  "symbols_in_volume": [
   "torch.nn.functional.mse_loss",
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.multilabelmarginloss_0d_no_reduce_test": {
  "lineno": 905,
  "symbols_in_volume": [
   "torch.nn.functional.multilabel_margin_loss",
   "torch.randn",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.multilabelmarginloss_1d_no_reduce_test": {
  "lineno": 922,
  "symbols_in_volume": [
   "torch.autograd.Variable",
   "torch.nn.functional.multilabel_margin_loss",
   "torch.rand",
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.multilabelmarginloss_index_neg_test": {
  "lineno": 939,
  "symbols_in_volume": [
   "torch.autograd.Variable",
   "torch.clamp",
   "torch.nn.functional.multilabel_margin_loss",
   "torch.rand",
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.multilabelmarginloss_no_reduce_test": {
  "lineno": 956,
  "symbols_in_volume": [
   "torch.autograd.Variable",
   "torch.nn.functional.multilabel_margin_loss",
   "torch.rand",
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.multilabelmarginloss_reference": {
  "lineno": 3736,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_nn.multilabelsoftmarginloss_no_reduce_test": {
  "lineno": 1020,
  "symbols_in_volume": [
   "torch.nn.functional.multilabel_soft_margin_loss",
   "torch.rand",
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.multilabelsoftmarginloss_weights_no_reduce_test": {
  "lineno": 1036,
  "symbols_in_volume": [
   "torch.nn.functional.multilabel_soft_margin_loss",
   "torch.rand",
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.multimarginloss_1d_input_0d_target_no_reduce_test": {
  "lineno": 1090,
  "symbols_in_volume": [
   "torch.nn.functional.multi_margin_loss",
   "torch.rand",
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.multimarginloss_1d_no_reduce_test": {
  "lineno": 1073,
  "symbols_in_volume": [
   "torch.nn.functional.multi_margin_loss",
   "torch.rand",
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.multimarginloss_margin_no_reduce_test": {
  "lineno": 1124,
  "symbols_in_volume": [
   "torch.nn.functional.multi_margin_loss",
   "torch.rand",
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.multimarginloss_no_reduce_test": {
  "lineno": 1056,
  "symbols_in_volume": [
   "torch.nn.functional.multi_margin_loss",
   "torch.rand",
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.multimarginloss_p_no_reduce_test": {
  "lineno": 1107,
  "symbols_in_volume": [
   "torch.nn.functional.multi_margin_loss",
   "torch.rand",
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.multimarginloss_reference": {
  "lineno": 3794,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_nn.multimarginloss_weights_no_reduce_test": {
  "lineno": 1143,
  "symbols_in_volume": [
   "torch.nn.functional.multi_margin_loss",
   "torch.rand",
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.nllloss2d_no_reduce_ignore_index_test": {
  "lineno": 755,
  "symbols_in_volume": [
   "torch.autograd.Variable",
   "torch.nn.functional.nll_loss",
   "torch.rand"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.nllloss2d_no_reduce_test": {
  "lineno": 739,
  "symbols_in_volume": [
   "torch.autograd.Variable",
   "torch.nn.functional.nll_loss",
   "torch.rand"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.nllloss2d_no_reduce_weights_test": {
  "lineno": 771,
  "symbols_in_volume": [
   "torch.autograd.Variable",
   "torch.nn.functional.nll_loss",
   "torch.rand"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.nllloss2d_no_reduce_weights_test.kwargs": {
  "lineno": 775,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_nn.nlllossNd_no_reduce_ignore_index_test": {
  "lineno": 808,
  "symbols_in_volume": [
   "torch.autograd.Variable",
   "torch.nn.functional.nll_loss",
   "torch.rand"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.nlllossNd_no_reduce_test": {
  "lineno": 792,
  "symbols_in_volume": [
   "torch.autograd.Variable",
   "torch.nn.functional.nll_loss",
   "torch.rand"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.nlllossNd_no_reduce_weights_test": {
  "lineno": 824,
  "symbols_in_volume": [
   "torch.autograd.Variable",
   "torch.nn.functional.nll_loss",
   "torch.rand"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.nlllossNd_no_reduce_weights_test.kwargs": {
  "lineno": 828,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_nn.nlllossNd_reference": {
  "lineno": 3656,
  "symbols_in_volume": [
   "itertools.product",
   "torch.ones",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.nllloss_no_reduce_ignore_index_test": {
  "lineno": 658,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.autograd.Variable",
   "torch.nn.functional.nll_loss",
   "torch.rand"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.nllloss_no_reduce_test": {
  "lineno": 642,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.autograd.Variable",
   "torch.nn.functional.nll_loss",
   "torch.rand"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.nllloss_no_reduce_weights_ignore_index_neg_test": {
  "lineno": 717,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.autograd.Variable",
   "torch.nn.functional.nll_loss",
   "torch.rand"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.nllloss_no_reduce_weights_ignore_index_neg_test.kwargs": {
  "lineno": 721,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_nn.nllloss_no_reduce_weights_ignore_index_test": {
  "lineno": 695,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.autograd.Variable",
   "torch.nn.functional.nll_loss",
   "torch.rand"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.nllloss_no_reduce_weights_ignore_index_test.kwargs": {
  "lineno": 699,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_nn.nllloss_no_reduce_weights_test": {
  "lineno": 674,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.autograd.Variable",
   "torch.nn.functional.nll_loss",
   "torch.rand"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.nllloss_no_reduce_weights_test.kwargs": {
  "lineno": 678,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_nn.nllloss_reference": {
  "lineno": 3682,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_nn.nllloss_reference.nll_loss_helper": {
  "lineno": 3685,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_nn.padding1d_circular": {
  "lineno": 3896,
  "symbols_in_volume": [
   "torch.cat"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.padding2d_circular": {
  "lineno": 3909,
  "symbols_in_volume": [
   "torch.cat"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.padding3d_circular": {
  "lineno": 3925,
  "symbols_in_volume": [
   "torch.cat"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.poissonnllloss_no_reduce_test": {
  "lineno": 371,
  "symbols_in_volume": [
   "torch.nn.functional.poisson_nll_loss",
   "torch.rand",
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.smoothl1loss_beta_test": {
  "lineno": 875,
  "symbols_in_volume": [
   "torch.nn.functional.smooth_l1_loss",
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.smoothl1loss_no_reduce_scalar_test": {
  "lineno": 860,
  "symbols_in_volume": [
   "torch.nn.functional.smooth_l1_loss",
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.smoothl1loss_no_reduce_test": {
  "lineno": 845,
  "symbols_in_volume": [
   "torch.nn.functional.smooth_l1_loss",
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.smoothl1loss_reference": {
  "lineno": 3704,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_nn.smoothl1loss_zero_beta_test": {
  "lineno": 890,
  "symbols_in_volume": [
   "torch.nn.functional.smooth_l1_loss",
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.softmarginloss_no_reduce_test": {
  "lineno": 1005,
  "symbols_in_volume": [
   "torch.nn.functional.soft_margin_loss",
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.softmarginloss_reference": {
  "lineno": 3773,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_nn.tripletmarginloss_reference": {
  "lineno": 3833,
  "symbols_in_volume": [
   "torch.clamp",
   "torch.min",
   "torch.pairwise_distance"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_nn.wrap_functional": {
  "lineno": 364,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_nn.wrap_functional.FunctionalModule": {
  "lineno": 365,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_nn.wrap_functional.FunctionalModule.forward": {
  "lineno": 366,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization": {
  "lineno": null,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss",
   "unittest.skipIf"
  ],
  "type": "module"
 },
 "torch.testing._internal.common_quantization.ActivationsTestModel": {
  "lineno": 932,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_quantization.ActivationsTestModel.__init__": {
  "lineno": 933,
  "symbols_in_volume": [
   "torch.float",
   "torch.nn.ELU",
   "torch.nn.Hardswish",
   "torch.quantization.DeQuantStub",
   "torch.quantization.QuantStub",
   "torch.quantization.get_default_qconfig"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.ActivationsTestModel.forward": {
  "lineno": 941,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.AnnotatedConvBnModel": {
  "lineno": 861,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_quantization.AnnotatedConvBnModel.__init__": {
  "lineno": 862,
  "symbols_in_volume": [
   "torch.float",
   "torch.nn.BatchNorm2d",
   "torch.nn.Conv2d",
   "torch.quantization.DeQuantStub",
   "torch.quantization.QuantStub",
   "torch.quantization.default_qconfig"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.AnnotatedConvBnModel.forward": {
  "lineno": 870,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.AnnotatedConvBnReLUModel": {
  "lineno": 877,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_quantization.AnnotatedConvBnReLUModel.__init__": {
  "lineno": 878,
  "symbols_in_volume": [
   "torch.float",
   "torch.nn.BatchNorm2d",
   "torch.nn.Conv2d",
   "torch.nn.ReLU",
   "torch.quantization.DeQuantStub",
   "torch.quantization.QuantStub",
   "torch.quantization.get_default_qconfig"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.AnnotatedConvBnReLUModel.forward": {
  "lineno": 887,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.AnnotatedConvBnReLUModel.fuse_model": {
  "lineno": 895,
  "symbols_in_volume": [
   "torch.quantization.fuse_modules"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.AnnotatedConvModel": {
  "lineno": 822,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_quantization.AnnotatedConvModel.__init__": {
  "lineno": 823,
  "symbols_in_volume": [
   "torch.float",
   "torch.nn.Conv2d",
   "torch.quantization.DeQuantStub",
   "torch.quantization.QuantStub",
   "torch.quantization.get_default_qconfig"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.AnnotatedConvModel.forward": {
  "lineno": 830,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.AnnotatedConvTransposeModel": {
  "lineno": 836,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_quantization.AnnotatedConvTransposeModel.__init__": {
  "lineno": 837,
  "symbols_in_volume": [
   "torch.float",
   "torch.nn.ConvTranspose2d",
   "torch.quantization.DeQuantStub",
   "torch.quantization.QuantStub",
   "torch.quantization.get_default_qconfig"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.AnnotatedConvTransposeModel.forward": {
  "lineno": 844,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.AnnotatedCustomConfigNestedModel": {
  "lineno": 1026,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_quantization.AnnotatedCustomConfigNestedModel.__init__": {
  "lineno": 1027,
  "symbols_in_volume": [
   "torch.float",
   "torch.nn.Linear",
   "torch.per_tensor_affine",
   "torch.quantization.QConfig",
   "torch.quantization.QuantWrapper",
   "torch.quantization.default_observer.with_args",
   "torch.quantization.default_qconfig",
   "torch.quantization.default_weight_observer",
   "torch.quint8"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.AnnotatedCustomConfigNestedModel.forward": {
  "lineno": 1046,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.AnnotatedNestedModel": {
  "lineno": 992,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_quantization.AnnotatedNestedModel.__init__": {
  "lineno": 993,
  "symbols_in_volume": [
   "torch.float",
   "torch.nn.Linear",
   "torch.quantization.QuantWrapper",
   "torch.quantization.default_per_channel_qconfig",
   "torch.quantization.default_qconfig"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.AnnotatedNestedModel.forward": {
  "lineno": 1005,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.AnnotatedSingleLayerLinearModel": {
  "lineno": 744,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_quantization.AnnotatedSingleLayerLinearModel.__init__": {
  "lineno": 745,
  "symbols_in_volume": [
   "torch.float",
   "torch.nn.Linear",
   "torch.quantization.QuantWrapper",
   "torch.quantization.get_default_qconfig"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.AnnotatedSingleLayerLinearModel.forward": {
  "lineno": 750,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.AnnotatedSkipQuantModel": {
  "lineno": 1105,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_quantization.AnnotatedSkipQuantModel.__init__": {
  "lineno": 1109,
  "symbols_in_volume": [
   "torch.float",
   "torch.nn.Linear",
   "torch.quantization.QuantWrapper",
   "torch.quantization.get_default_qconfig"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.AnnotatedSkipQuantModel.forward": {
  "lineno": 1117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.AnnotatedSkipQuantModel.fuse_modules": {
  "lineno": 1120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.AnnotatedSubNestedModel": {
  "lineno": 1011,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_quantization.AnnotatedSubNestedModel.__init__": {
  "lineno": 1012,
  "symbols_in_volume": [
   "torch.float",
   "torch.nn.Linear",
   "torch.quantization.QuantWrapper",
   "torch.quantization.default_qconfig"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.AnnotatedSubNestedModel.forward": {
  "lineno": 1020,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.AnnotatedTwoLayerLinearModel": {
  "lineno": 920,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_quantization.AnnotatedTwoLayerLinearModel.__init__": {
  "lineno": 921,
  "symbols_in_volume": [
   "torch.float",
   "torch.nn.Linear",
   "torch.quantization.QuantWrapper",
   "torch.quantization.get_default_qconfig"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.AnnotatedTwoLayerLinearModel.forward": {
  "lineno": 927,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.AverageMeter": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.common_quantization.AverageMeter.__init__": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.AverageMeter.__str__": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.AverageMeter.reset": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.AverageMeter.update": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.ConvBNReLU": {
  "lineno": 1244,
  "symbols_in_volume": [
   "torch.nn.Sequential"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_quantization.ConvBNReLU.__init__": {
  "lineno": 1245,
  "symbols_in_volume": [
   "torch.nn.BatchNorm2d",
   "torch.nn.Conv2d",
   "torch.nn.ReLU"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.ConvBnModel": {
  "lineno": 850,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_quantization.ConvBnModel.__init__": {
  "lineno": 851,
  "symbols_in_volume": [
   "torch.float",
   "torch.nn.BatchNorm2d",
   "torch.nn.Conv2d"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.ConvBnModel.forward": {
  "lineno": 856,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.ConvModel": {
  "lineno": 804,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_quantization.ConvModel.__init__": {
  "lineno": 805,
  "symbols_in_volume": [
   "torch.float",
   "torch.nn.Conv2d"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.ConvModel.forward": {
  "lineno": 809,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.ConvTransposeModel": {
  "lineno": 813,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_quantization.ConvTransposeModel.__init__": {
  "lineno": 814,
  "symbols_in_volume": [
   "torch.float",
   "torch.nn.ConvTranspose2d"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.ConvTransposeModel.forward": {
  "lineno": 818,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.DummyObserver": {
  "lineno": 1299,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_quantization.DummyObserver.calculate_qparams": {
  "lineno": 1300,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.DummyObserver.forward": {
  "lineno": 1303,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.EmbeddingBagModule": {
  "lineno": 1418,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_quantization.EmbeddingBagModule.__init__": {
  "lineno": 1419,
  "symbols_in_volume": [
   "torch.nn.EmbeddingBag"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.EmbeddingBagModule.forward": {
  "lineno": 1424,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.EmbeddingModule": {
  "lineno": 1427,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_quantization.EmbeddingModule.__init__": {
  "lineno": 1428,
  "symbols_in_volume": [
   "torch.nn.Embedding"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.EmbeddingModule.forward": {
  "lineno": 1432,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.EmbeddingWithLinear": {
  "lineno": 1435,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_quantization.EmbeddingWithLinear.__init__": {
  "lineno": 1436,
  "symbols_in_volume": [
   "torch.nn.Embedding",
   "torch.nn.Linear",
   "torch.quantization.default_qconfig",
   "torch.quantization.float_qparams_dynamic_qconfig"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.EmbeddingWithLinear.forward": {
  "lineno": 1443,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.InnerModule": {
  "lineno": 1067,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_quantization.InnerModule.__init__": {
  "lineno": 1068,
  "symbols_in_volume": [
   "torch.float",
   "torch.nn.Linear",
   "torch.nn.ReLU"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.InnerModule.forward": {
  "lineno": 1075,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.InnerModule.fuse_modules": {
  "lineno": 1078,
  "symbols_in_volume": [
   "torch.nn.Linear",
   "torch.nn.ReLU",
   "torch.quantization.fuse_modules"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.LSTMwithHiddenDynamicModel": {
  "lineno": 794,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_quantization.LSTMwithHiddenDynamicModel.__init__": {
  "lineno": 795,
  "symbols_in_volume": [
   "torch.float",
   "torch.nn.LSTM",
   "torch.quantization.get_default_qconfig"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.LSTMwithHiddenDynamicModel.forward": {
  "lineno": 800,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.LinearModelWithSubmodule": {
  "lineno": 909,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_quantization.LinearModelWithSubmodule.__init__": {
  "lineno": 910,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.LinearModelWithSubmodule.forward": {
  "lineno": 915,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.LinearReluModel": {
  "lineno": 948,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_quantization.LinearReluModel.__init__": {
  "lineno": 949,
  "symbols_in_volume": [
   "torch.float",
   "torch.nn.Linear",
   "torch.nn.ReLU"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.LinearReluModel.forward": {
  "lineno": 954,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.ManualConvLinearQATModel": {
  "lineno": 1155,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_quantization.ManualConvLinearQATModel.__init__": {
  "lineno": 1159,
  "symbols_in_volume": [
   "torch.float",
   "torch.nn.Conv2d",
   "torch.nn.Linear",
   "torch.quantization.DeQuantStub",
   "torch.quantization.QuantStub",
   "torch.quantization.get_default_qat_qconfig"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.ManualConvLinearQATModel.forward": {
  "lineno": 1168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.ManualLinearQATModel": {
  "lineno": 1138,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_quantization.ManualLinearQATModel.__init__": {
  "lineno": 1141,
  "symbols_in_volume": [
   "torch.float",
   "torch.nn.Linear",
   "torch.quantization.DeQuantStub",
   "torch.quantization.QuantStub",
   "torch.quantization.get_default_qat_qconfig"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.ManualLinearQATModel.forward": {
  "lineno": 1149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.ModelForFusion": {
  "lineno": 1198,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_quantization.ModelForFusion.__init__": {
  "lineno": 1199,
  "symbols_in_volume": [
   "torch.float",
   "torch.nn.BatchNorm1d",
   "torch.nn.BatchNorm2d",
   "torch.nn.BatchNorm3d",
   "torch.nn.Conv1d",
   "torch.nn.Conv2d",
   "torch.nn.Conv3d",
   "torch.nn.Linear",
   "torch.nn.ReLU",
   "torch.quantization.DeQuantStub",
   "torch.quantization.QuantStub"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.ModelForFusion.forward": {
  "lineno": 1221,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.ModelForFusionWithBias": {
  "lineno": 1278,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_quantization.ModelForFusionWithBias.__init__": {
  "lineno": 1279,
  "symbols_in_volume": [
   "torch.float",
   "torch.nn.BatchNorm2d",
   "torch.nn.Conv2d",
   "torch.nn.ReLU",
   "torch.quantization.DeQuantStub",
   "torch.quantization.QuantStub"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.ModelForFusionWithBias.forward": {
  "lineno": 1289,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.ModelMultipleOps": {
  "lineno": 1353,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_quantization.ModelMultipleOps.__init__": {
  "lineno": 1354,
  "symbols_in_volume": [
   "torch.nn.AdaptiveAvgPool2d",
   "torch.nn.BatchNorm2d",
   "torch.nn.Conv2d",
   "torch.nn.Identity",
   "torch.nn.Linear",
   "torch.nn.ReLU",
   "torch.nn.quantized.FloatFunctional"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.ModelMultipleOps.forward": {
  "lineno": 1369,
  "symbols_in_volume": [
   "torch.nn.functional.max_pool2d"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.ModelMultipleOpsNoAvgPool": {
  "lineno": 1388,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_quantization.ModelMultipleOpsNoAvgPool.__init__": {
  "lineno": 1389,
  "symbols_in_volume": [
   "torch.nn.BatchNorm2d",
   "torch.nn.Conv2d",
   "torch.nn.Linear",
   "torch.nn.MaxPool2d",
   "torch.nn.ReLU",
   "torch.nn.quantized.FloatFunctional"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.ModelMultipleOpsNoAvgPool.forward": {
  "lineno": 1403,
  "symbols_in_volume": [
   "torch.nn.functional.max_pool2d"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.ModelWithFunctionals": {
  "lineno": 1307,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_quantization.ModelWithFunctionals.__init__": {
  "lineno": 1308,
  "symbols_in_volume": [
   "torch.nn.quantized.FloatFunctional"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.ModelWithFunctionals.forward": {
  "lineno": 1318,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.ModelWithSequentialFusion": {
  "lineno": 1252,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_quantization.ModelWithSequentialFusion.__init__": {
  "lineno": 1253,
  "symbols_in_volume": [
   "torch.nn.Conv2d",
   "torch.nn.Linear",
   "torch.nn.ReLU",
   "torch.nn.Sequential",
   "torch.quantization.DeQuantStub",
   "torch.quantization.QuantStub"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.ModelWithSequentialFusion.forward": {
  "lineno": 1267,
  "symbols_in_volume": [
   "torch.reshape"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.NestedModel": {
  "lineno": 979,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_quantization.NestedModel.__init__": {
  "lineno": 980,
  "symbols_in_volume": [
   "torch.float",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.NestedModel.forward": {
  "lineno": 986,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.NodeSpec": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.common_quantization.NodeSpec.__eq__": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.NodeSpec.__hash__": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.NodeSpec.__init__": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.NodeSpec.__repr__": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.NodeSpec.call_function": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.NodeSpec.call_method": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.NodeSpec.call_module": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.NormalizationTestModel": {
  "lineno": 958,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_quantization.NormalizationTestModel.__init__": {
  "lineno": 959,
  "symbols_in_volume": [
   "torch.float",
   "torch.nn.GroupNorm",
   "torch.nn.InstanceNorm1d",
   "torch.nn.InstanceNorm2d",
   "torch.nn.InstanceNorm3d",
   "torch.nn.LayerNorm",
   "torch.nn.Linear",
   "torch.quantization.QuantStub"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.NormalizationTestModel.forward": {
  "lineno": 969,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.QuantStubModel": {
  "lineno": 1123,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_quantization.QuantStubModel.__init__": {
  "lineno": 1126,
  "symbols_in_volume": [
   "torch.float",
   "torch.nn.Linear",
   "torch.quantization.DeQuantStub",
   "torch.quantization.QuantStub",
   "torch.quantization.get_default_qconfig"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.QuantStubModel.forward": {
  "lineno": 1133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.QuantSubModel": {
  "lineno": 1052,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_quantization.QuantSubModel.__init__": {
  "lineno": 1053,
  "symbols_in_volume": [
   "torch.float",
   "torch.nn.Linear",
   "torch.quantization.QuantWrapper",
   "torch.quantization.default_qconfig"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.QuantSubModel.forward": {
  "lineno": 1061,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.QuantizationTestCase": {
  "lineno": 290,
  "symbols_in_volume": [
   "torch.testing._internal.common_utils.TestCase"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_quantization.QuantizationTestCase._checkModuleCorrectnessAgainstOrig": {
  "lineno": 476,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.QuantizationTestCase._checkScriptable": {
  "lineno": 462,
  "symbols_in_volume": [
   "io.BytesIO",
   "torch.jit.load",
   "torch.jit.save"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.QuantizationTestCase.checkDynamicQuantizedLSTM": {
  "lineno": 431,
  "symbols_in_volume": [
   "torch.float16",
   "torch.qint8"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.QuantizationTestCase.checkDynamicQuantizedLinear": {
  "lineno": 391,
  "symbols_in_volume": [
   "torch.nn.quantized.dynamic.Linear"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.QuantizationTestCase.checkDynamicQuantizedModule": {
  "lineno": 443,
  "symbols_in_volume": [
   "torch.float16",
   "torch.qint8"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.QuantizationTestCase.checkEmbeddingSerialization": {
  "lineno": 672,
  "symbols_in_volume": [
   "io.BytesIO",
   "torch._C.ScriptObject",
   "torch.load",
   "torch.nn.Embedding",
   "torch.nn.EmbeddingBag",
   "torch.nn.quantized.Embedding",
   "torch.nn.quantized.Embedding.from_float",
   "torch.nn.quantized.EmbeddingBag",
   "torch.nn.quantized.EmbeddingBag.from_float",
   "torch.ops.quantized.embedding_bag_unpack",
   "torch.quantization.float_qparams_dynamic_qconfig",
   "torch.save"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.QuantizationTestCase.checkGraphModeFxOp": {
  "lineno": 604,
  "symbols_in_volume": [
   "torch._fx.symbolic_trace",
   "torch.backends.quantized.engine",
   "torch.quantization.QuantType.DYNAMIC",
   "torch.quantization.QuantType.QAT",
   "torch.quantization.convert",
   "torch.quantization.convert_dynamic_fx",
   "torch.quantization.convert_fx",
   "torch.quantization.get_default_qat_qconfig",
   "torch.quantization.get_default_qconfig",
   "torch.quantization.prepare_dynamic_fx",
   "torch.quantization.prepare_fx"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.QuantizationTestCase.checkGraphModeOp": {
  "lineno": 483,
  "symbols_in_volume": [
   "copy.deepcopy",
   "torch.backends.quantized.engine",
   "torch.quantization.default_dynamic_qconfig",
   "torch.quantization.get_default_qconfig",
   "torch.quantization.quantize_dynamic_jit",
   "torch.quantization.quantize_jit",
   "torch.testing.FileCheck"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.QuantizationTestCase.checkGraphModuleNodes": {
  "lineno": 527,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.QuantizationTestCase.checkHasPrepModules": {
  "lineno": 336,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.QuantizationTestCase.checkLinear": {
  "lineno": 440,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.QuantizationTestCase.checkNoPrepModules": {
  "lineno": 320,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.QuantizationTestCase.checkNoQconfig": {
  "lineno": 328,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.QuantizationTestCase.checkObservers": {
  "lineno": 345,
  "symbols_in_volume": [
   "torch.nn.Sequential",
   "torch.quantization.is_custom_module_class",
   "torch.quantization.is_observed_custom_module",
   "torch.quantization.quantization_mappings.get_qat_module_mappings",
   "torch.quantization.quantization_mappings.get_qconfig_propagation_list"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.QuantizationTestCase.checkObservers.is_leaf_module": {
  "lineno": 353,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.QuantizationTestCase.checkQuantDequant": {
  "lineno": 373,
  "symbols_in_volume": [
   "torch.nn.quantized.DeQuantize",
   "torch.nn.quantized.Quantize"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.QuantizationTestCase.checkQuantizedLinear": {
  "lineno": 388,
  "symbols_in_volume": [
   "torch.nn.quantized.Linear"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.QuantizationTestCase.checkScriptable": {
  "lineno": 453,
  "symbols_in_volume": [
   "torch.jit.script",
   "torch.jit.trace"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.QuantizationTestCase.checkWrappedQuantizedLinear": {
  "lineno": 380,
  "symbols_in_volume": [
   "torch.nn.quantized.Linear"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.QuantizationTestCase.check_eager_serialization": {
  "lineno": 398,
  "symbols_in_volume": [
   "io.BytesIO",
   "torch.load",
   "torch.save"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.QuantizationTestCase.check_eager_serialization.check_outputs": {
  "lineno": 409,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.QuantizationTestCase.check_weight_bias_api": {
  "lineno": 425,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.QuantizationTestCase.printGraphModule": {
  "lineno": 591,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.QuantizationTestCase.setUp": {
  "lineno": 291,
  "symbols_in_volume": [
   "torch.float",
   "torch.long",
   "torch.quantization.QuantType.DYNAMIC",
   "torch.quantization.QuantType.QAT",
   "torch.quantization.QuantType.STATIC",
   "torch.rand",
   "torch.randint"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.RNNCellDynamicModel": {
  "lineno": 777,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_quantization.RNNCellDynamicModel.__init__": {
  "lineno": 778,
  "symbols_in_volume": [
   "torch.float",
   "torch.nn.GRUCell",
   "torch.nn.LSTMCell",
   "torch.nn.RNNCell",
   "torch.quantization.default_dynamic_qconfig"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.RNNCellDynamicModel.forward": {
  "lineno": 790,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.RNNDynamicModel": {
  "lineno": 764,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_quantization.RNNDynamicModel.__init__": {
  "lineno": 765,
  "symbols_in_volume": [
   "torch.float",
   "torch.nn.GRU",
   "torch.nn.LSTM",
   "torch.quantization.default_dynamic_qconfig"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.RNNDynamicModel.forward": {
  "lineno": 773,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.ResNetBase": {
  "lineno": 1329,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_quantization.ResNetBase.__init__": {
  "lineno": 1330,
  "symbols_in_volume": [
   "torch.nn.AdaptiveAvgPool2d",
   "torch.nn.BatchNorm2d",
   "torch.nn.Conv2d",
   "torch.nn.Identity",
   "torch.nn.ReLU",
   "torch.nn.quantized.FloatFunctional"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.ResNetBase.forward": {
  "lineno": 1343,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.SingleLayerLinearDynamicModel": {
  "lineno": 754,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_quantization.SingleLayerLinearDynamicModel.__init__": {
  "lineno": 755,
  "symbols_in_volume": [
   "torch.float",
   "torch.nn.Linear",
   "torch.quantization.get_default_qconfig"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.SingleLayerLinearDynamicModel.forward": {
  "lineno": 760,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.SingleLayerLinearModel": {
  "lineno": 735,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_quantization.SingleLayerLinearModel.__init__": {
  "lineno": 736,
  "symbols_in_volume": [
   "torch.float",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.SingleLayerLinearModel.forward": {
  "lineno": 740,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.SkipQuantModel": {
  "lineno": 1090,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_quantization.SkipQuantModel.__init__": {
  "lineno": 1094,
  "symbols_in_volume": [
   "torch.float",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.SkipQuantModel.forward": {
  "lineno": 1099,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.SkipQuantModel.fuse_modules": {
  "lineno": 1102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.SubModelForFusion": {
  "lineno": 1177,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_quantization.SubModelForFusion.__init__": {
  "lineno": 1178,
  "symbols_in_volume": [
   "torch.float",
   "torch.nn.BatchNorm2d",
   "torch.nn.Conv2d"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.SubModelForFusion.forward": {
  "lineno": 1183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.SubModelWithoutFusion": {
  "lineno": 1189,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_quantization.SubModelWithoutFusion.__init__": {
  "lineno": 1190,
  "symbols_in_volume": [
   "torch.float",
   "torch.nn.Conv2d",
   "torch.nn.ReLU"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.SubModelWithoutFusion.forward": {
  "lineno": 1195,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.TwoLayerLinearModel": {
  "lineno": 898,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_quantization.TwoLayerLinearModel.__init__": {
  "lineno": 899,
  "symbols_in_volume": [
   "torch.float",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.TwoLayerLinearModel.forward": {
  "lineno": 904,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization._make_conv_test_input": {
  "lineno": 199,
  "symbols_in_volume": [
   "torch.float",
   "torch.qint8",
   "torch.quantize_per_channel",
   "torch.quantize_per_tensor",
   "torch.quint8",
   "torch.randint",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.accuracy": {
  "lineno": 138,
  "symbols_in_volume": [
   "torch.no_grad"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.convert_dynamic": {
  "lineno": 193,
  "symbols_in_volume": [
   "torch.quantization.convert",
   "torch.quantization.quantization_mappings.get_dynamic_quant_module_mappings"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.ddp_cleanup": {
  "lineno": 179,
  "symbols_in_volume": [
   "torch.distributed.destroy_process_group"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.ddp_setup": {
  "lineno": 172,
  "symbols_in_volume": [
   "os.environ",
   "torch.distributed.init_process_group"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.get_script_module": {
  "lineno": 275,
  "symbols_in_volume": [
   "torch.jit.script",
   "torch.jit.trace"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.lengths_to_offsets": {
  "lineno": 278,
  "symbols_in_volume": [
   "numpy.cumsum",
   "numpy.int64",
   "numpy.zeros",
   "torch.from_numpy"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.prepare_dynamic": {
  "lineno": 196,
  "symbols_in_volume": [
   "torch.quantization.propagate_qconfig_"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.run_ddp": {
  "lineno": 182,
  "symbols_in_volume": [
   "torch.nn.parallel.DistributedDataParallel",
   "torch.optim.SGD"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.skipIfNoFBGEMM": {
  "lineno": 252,
  "symbols_in_volume": [
   "torch.backends.quantized.supported_engines"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.skipIfNoFBGEMM.wrapper": {
  "lineno": 260,
  "symbols_in_volume": [
   "functools.wraps",
   "torch.backends.quantized.supported_engines",
   "unittest.SkipTest"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.test_only_eval_fn": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.test_only_train_fn": {
  "lineno": 93,
  "symbols_in_volume": [
   "torch.max",
   "torch.optim.Adam"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantization.train_one_epoch": {
  "lineno": 154,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantized": {
  "lineno": null,
  "symbols_in_volume": [
   "torch.backends.quantized.supported_engines",
   "torch.testing._internal.common_utils.IS_MACOS",
   "torch.testing._internal.common_utils.IS_PPC",
   "torch.testing._internal.common_utils.IS_WINDOWS",
   "torch.testing._internal.common_utils.TEST_WITH_ASAN",
   "torch.testing._internal.common_utils.TEST_WITH_TSAN",
   "torch.testing._internal.common_utils.TEST_WITH_UBSAN"
  ],
  "type": "module"
 },
 "torch.testing._internal.common_quantized._calculate_dynamic_per_channel_qparams": {
  "lineno": 79,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.float32",
   "numpy.float64",
   "numpy.int64",
   "numpy.zeros",
   "torch.Tensor",
   "torch.iinfo"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantized._calculate_dynamic_qparams": {
  "lineno": 49,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.float32",
   "torch.Tensor",
   "torch.qint8"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantized._conv_output_shape": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.floor"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantized._dequantize": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.float"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantized._quantize": {
  "lineno": 24,
  "symbols_in_volume": [
   "numpy.clip",
   "numpy.iinfo",
   "numpy.int64",
   "numpy.round",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantized._requantize": {
  "lineno": 42,
  "symbols_in_volume": [
   "numpy.clip",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantized.override_qengines": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantized.override_qengines.test_fn": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_quantized.override_quantized_engine": {
  "lineno": 105,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "torch.backends.quantized.engine"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantized.qengine_is_fbgemm": {
  "lineno": 125,
  "symbols_in_volume": [
   "torch.backends.quantized.engine"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_quantized.qengine_is_qnnpack": {
  "lineno": 127,
  "symbols_in_volume": [
   "torch.backends.quantized.engine"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils": {
  "lineno": null,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "hypothesis.HealthCheck.too_slow",
   "hypothesis.Verbosity.normal",
   "hypothesis.Verbosity.verbose",
   "hypothesis.settings.load_profile",
   "hypothesis.settings.register_profile",
   "numpy.bool",
   "numpy.complex128",
   "numpy.complex64",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.uint8",
   "os.environ.get",
   "os.getenv",
   "platform.machine",
   "sys.argv",
   "sys.platform",
   "torch._C.ScriptFunction.__call__",
   "torch._C.ScriptMethod.__call__",
   "torch.backends.disable_global_flags",
   "torch.backends.mkl.is_available",
   "torch.bfloat16",
   "torch.bool",
   "torch.complex128",
   "torch.complex64",
   "torch.double",
   "torch.float",
   "torch.float16",
   "torch.float32",
   "torch.float64",
   "torch.half",
   "torch.int16",
   "torch.int32",
   "torch.int64",
   "torch.int8",
   "torch.manual_seed",
   "torch.testing._internal.expecttest.ACCEPT",
   "torch.uint8",
   "typing.Any",
   "typing.Dict",
   "typing.Optional"
  ],
  "type": "module"
 },
 "torch.testing._internal.common_utils.BytesIOContext": {
  "lineno": 1799,
  "symbols_in_volume": [
   "io.BytesIO"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_utils.BytesIOContext.__enter__": {
  "lineno": 1800,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_utils.BytesIOContext.__exit__": {
  "lineno": 1803,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_utils.CudaMemoryLeakCheck": {
  "lineno": 636,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.common_utils.CudaMemoryLeakCheck.__enter__": {
  "lineno": 654,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_utils.CudaMemoryLeakCheck.__exit__": {
  "lineno": 657,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_utils.CudaMemoryLeakCheck.__init__": {
  "lineno": 637,
  "symbols_in_volume": [
   "torch.testing._internal.common_cuda.initialize_cuda_context_rng"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.CudaMemoryLeakCheck.get_cuda_memory_usage": {
  "lineno": 646,
  "symbols_in_volume": [
   "gc.collect",
   "torch.cuda.device_count",
   "torch.cuda.memory_allocated"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.CudaNonDefaultStream": {
  "lineno": 615,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.common_utils.CudaNonDefaultStream.__enter__": {
  "lineno": 616,
  "symbols_in_volume": [
   "torch._C._cuda_setDevice",
   "torch._C._cuda_setStream",
   "torch.cuda.Stream",
   "torch.cuda.current_device",
   "torch.cuda.current_stream",
   "torch.cuda.device_count"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.CudaNonDefaultStream.__exit__": {
  "lineno": 628,
  "symbols_in_volume": [
   "torch._C._cuda_setDevice",
   "torch._C._cuda_setStream",
   "torch.cuda.current_device",
   "torch.cuda.device_count"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.ProfilingMode": {
  "lineno": 63,
  "symbols_in_volume": [
   "enum.Enum"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_utils.TemporaryFileName": {
  "lineno": 312,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "tempfile.NamedTemporaryFile"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.TestCase": {
  "lineno": 766,
  "symbols_in_volume": [
   "sys.version_info",
   "torch.bfloat16",
   "torch.complex128",
   "torch.complex32",
   "torch.complex64",
   "torch.float16",
   "torch.float32",
   "torch.float64",
   "torch.testing._internal.expecttest.TestCase",
   "unittest.TestCase.assertNotRegexpMatches",
   "unittest.TestCase.assertRaisesRegexp",
   "unittest.TestCase.assertRegexpMatches"
  ],
  "type": "class"
 },
 "torch.testing._internal.common_utils.TestCase.__init__": {
  "lineno": 784,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_utils.TestCase._compareScalars": {
  "lineno": 1028,
  "symbols_in_volume": [
   "torch.complex64",
   "torch.float32",
   "torch.testing._compare_return_type",
   "torch.testing._compare_scalars_internal",
   "typing.Optional",
   "typing.cast"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.TestCase._compareTensors": {
  "lineno": 982,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.testing._compare_return_type",
   "torch.testing._compare_tensors_internal",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.TestCase._getDefaultRtolAndAtol": {
  "lineno": 964,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_utils.TestCase.assertEqual": {
  "lineno": 1050,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "numbers.Number",
   "numpy.bool_",
   "torch.Tensor",
   "torch._six.string_classes",
   "torch.int32",
   "torch.per_channel_affine",
   "torch.per_tensor_affine",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.TestCase.assertEqualIgnoreType": {
  "lineno": 1043,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_utils.TestCase.assertEqualTypeString": {
  "lineno": 1182,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_utils.TestCase.assertExpected": {
  "lineno": 1241,
  "symbols_in_volume": [
   "__main__.__file__",
   "errno.ENOENT",
   "os.path.dirname",
   "os.path.join",
   "os.path.realpath",
   "re.sub",
   "sys.modules.__file__",
   "torch.onnx.producer_version",
   "torch.testing._internal.expecttest.ACCEPT"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.TestCase.assertExpected.accept_output": {
  "lineno": 1278,
  "symbols_in_volume": [
   "re.sub"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.TestCase.assertExpected.remove_prefix": {
  "lineno": 1255,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_utils.TestCase.assertExpectedRaises": {
  "lineno": 1197,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_utils.TestCase.assertExpectedStripMangled": {
  "lineno": 1321,
  "symbols_in_volume": [
   "re.sub"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.TestCase.assertLeaksNoCudaTensors": {
  "lineno": 800,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_utils.TestCase.assertNotEqual": {
  "lineno": 1177,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.TestCase.assertNotWarn": {
  "lineno": 1210,
  "symbols_in_volume": [
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.TestCase.assertObjectIn": {
  "lineno": 1188,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Iterable"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.TestCase.compare_with_numpy": {
  "lineno": 921,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ndarray",
   "torch.Tensor",
   "torch.bfloat16",
   "torch.from_numpy",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.TestCase.enforceNonDefaultStream": {
  "lineno": 804,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_utils.TestCase.genSparseTensor": {
  "lineno": 844,
  "symbols_in_volume": [
   "torch.Size",
   "torch.cat",
   "torch.long",
   "torch.rand",
   "torch.randn",
   "torch.randn_like",
   "torch.sparse_coo_tensor",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.TestCase.maybeWarnsRegex": {
  "lineno": 1219,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "warnings.catch_warnings",
   "warnings.filterwarnings",
   "warnings.formatwarning",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.TestCase.precision": {
  "lineno": 777,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_utils.TestCase.runWithPytorchAPIUsageStderr": {
  "lineno": 1326,
  "symbols_in_volume": [
   "os.environ.copy",
   "subprocess.PIPE",
   "subprocess.Popen",
   "sys.executable"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.TestCase.safeCoalesce": {
  "lineno": 876,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.stack",
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.TestCase.safeToDense": {
  "lineno": 872,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_utils.TestCase.setUp": {
  "lineno": 834,
  "symbols_in_volume": [
   "unittest.SkipTest"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.TestCase.wrap_method_with_cuda_policy": {
  "lineno": 817,
  "symbols_in_volume": [
   "types.MethodType"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.TestCase.wrap_method_with_cuda_policy.wrapper": {
  "lineno": 824,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.TestCase.wrap_with_cuda_memory_check": {
  "lineno": 830,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_utils.TestCase.wrap_with_cuda_policy": {
  "lineno": 807,
  "symbols_in_volume": [
   "torch.testing._internal.common_cuda.TEST_CUDA"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils._assertGradAndGradgradChecks": {
  "lineno": 1806,
  "symbols_in_volume": [
   "torch.autograd.gradcheck",
   "torch.autograd.gradcheck.gradgradcheck"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils._check_module_exists": {
  "lineno": 318,
  "symbols_in_volume": [
   "importlib.util.find_spec"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils._get_test_report_path": {
  "lineno": 135,
  "symbols_in_volume": [
   "os.environ.get",
   "os.path.join"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils._test_function": {
  "lineno": 458,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_utils._test_function.run_test_function": {
  "lineno": 459,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_utils.check_disabled": {
  "lineno": 711,
  "symbols_in_volume": [
   "os.getenv",
   "typing.Dict",
   "unittest.SkipTest"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.check_disabled.read_and_process": {
  "lineno": 716,
  "symbols_in_volume": [
   "json.loads",
   "urllib.request.urlopen"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.check_test_defined_in_running_script": {
  "lineno": 1779,
  "symbols_in_volume": [
   "inspect.getfile",
   "os.path.abspath",
   "os.path.realpath"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.chunk_list": {
  "lineno": 245,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_utils.cppProfilingFlagsToProfilingMode": {
  "lineno": 68,
  "symbols_in_volume": [
   "torch._C._jit_set_profiling_executor",
   "torch._C._jit_set_profiling_mode"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.discover_test_cases_recursively": {
  "lineno": 234,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.do_test_dtypes": {
  "lineno": 1678,
  "symbols_in_volume": [
   "torch.float16",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.do_test_empty_full": {
  "lineno": 1687,
  "symbols_in_volume": [
   "torch.Size",
   "torch.empty",
   "torch.empty_like",
   "torch.float16",
   "torch.full",
   "torch.full_like",
   "torch.get_default_dtype",
   "torch.sparse_coo",
   "torch.strided"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.do_test_empty_full.check_value": {
  "lineno": 1690,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_utils.do_test_empty_full.get_int64_dtype": {
  "lineno": 1701,
  "symbols_in_volume": [
   "operator.attrgetter",
   "torch",
   "torch.int64"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.download_file": {
  "lineno": 1350,
  "symbols_in_volume": [
   "os.path.basename",
   "os.path.dirname",
   "os.path.exists",
   "os.path.join",
   "torch._utils_internal.get_writable_path",
   "unittest.SkipTest",
   "urllib.error.URLError",
   "urllib.parse.urlsplit",
   "urllib.request.urlopen",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.enable_profiling_mode": {
  "lineno": 94,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "torch._C._jit_set_profiling_executor",
   "torch._C._jit_set_profiling_mode"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.enable_profiling_mode_for_profiling_tests": {
  "lineno": 82,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "torch._C._jit_set_profiling_executor",
   "torch._C._jit_set_profiling_mode"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.find_free_port": {
  "lineno": 1371,
  "symbols_in_volume": [
   "socket.AF_INET",
   "socket.SOCK_STREAM",
   "socket.SOL_SOCKET",
   "socket.SO_REUSEADDR",
   "socket.socket"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.freeze_rng_state": {
  "lineno": 583,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "torch.cuda.get_rng_state",
   "torch.cuda.is_available",
   "torch.cuda.set_rng_state",
   "torch.get_rng_state",
   "torch.set_rng_state"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.get_comparison_dtype": {
  "lineno": 749,
  "symbols_in_volume": [
   "torch.bfloat16",
   "torch.float16",
   "torch.float32",
   "torch.promote_types"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.get_cpu_type": {
  "lineno": 538,
  "symbols_in_volume": [
   "torch"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.get_function_arglist": {
  "lineno": 572,
  "symbols_in_volume": [
   "inspect.getfullargspec"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.get_gpu_type": {
  "lineno": 544,
  "symbols_in_volume": [
   "torch.cuda"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.get_test_names": {
  "lineno": 242,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_utils.is_iterable": {
  "lineno": 608,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_utils.iter_indices": {
  "lineno": 600,
  "symbols_in_volume": [
   "itertools.product"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.load_tests": {
  "lineno": 1789,
  "symbols_in_volume": [
   "unittest.TestSuite"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.make_nonzero_det": {
  "lineno": 1522,
  "symbols_in_volume": [
   "torch.diag_embed",
   "torch.matmul"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.make_tensor": {
  "lineno": 1432,
  "symbols_in_volume": [
   "math.ceil",
   "math.floor",
   "torch.Tensor",
   "torch.bfloat16",
   "torch.bool",
   "torch.cfloat",
   "torch.complex",
   "torch.device",
   "torch.double",
   "torch.dtype",
   "torch.float",
   "torch.float32",
   "torch.half",
   "torch.rand",
   "torch.randint",
   "torch.testing.complex_types",
   "torch.testing.floating_types_and",
   "torch.testing.integral_types",
   "torch.uint8"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.num_profiled_runs": {
  "lineno": 104,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "torch._C._jit_set_num_profiled_runs"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.prod_single_zero": {
  "lineno": 1480,
  "symbols_in_volume": [
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.prof_callable": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_utils.prof_func_call": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_utils.prof_meth_call": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_utils.random_fullrank_matrix_distinct_singular_value": {
  "lineno": 1540,
  "symbols_in_volume": [
   "torch._C.has_lapack",
   "torch.arange",
   "torch.double",
   "torch.ones",
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.random_lowrank_matrix": {
  "lineno": 1585,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_utils.random_matrix": {
  "lineno": 1554,
  "symbols_in_volume": [
   "torch._C.has_lapack",
   "torch.double",
   "torch.ones",
   "torch.randn",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.random_sparse_matrix": {
  "lineno": 1594,
  "symbols_in_volume": [
   "random.shuffle",
   "torch.double",
   "torch.randn",
   "torch.sparse_coo_tensor",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.random_sparse_pd_matrix": {
  "lineno": 1621,
  "symbols_in_volume": [
   "math.cos",
   "math.pi",
   "math.sin",
   "random.randint",
   "random.uniform",
   "torch",
   "torch.double",
   "torch.sparse_coo_tensor",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.random_sparse_pd_matrix.multiply": {
  "lineno": 1642,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_utils.random_square_matrix_of_rank": {
  "lineno": 1486,
  "symbols_in_volume": [
   "torch.diag",
   "torch.double",
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.random_symmetric_matrix": {
  "lineno": 1498,
  "symbols_in_volume": [
   "torch.double",
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.random_symmetric_pd_matrix": {
  "lineno": 1513,
  "symbols_in_volume": [
   "torch.double",
   "torch.eye",
   "torch.matmul",
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.random_symmetric_psd_matrix": {
  "lineno": 1506,
  "symbols_in_volume": [
   "torch.double",
   "torch.matmul",
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.repeat_test_for_types": {
  "lineno": 219,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_utils.repeat_test_for_types.repeat_helper": {
  "lineno": 220,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_utils.repeat_test_for_types.repeat_helper.call_helper": {
  "lineno": 221,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.retry": {
  "lineno": 1408,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_utils.retry.deco_retry": {
  "lineno": 1409,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_utils.retry.deco_retry.f_retry": {
  "lineno": 1410,
  "symbols_in_volume": [
   "functools.wraps",
   "time.sleep",
   "unittest.SkipTest"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.retry_on_connect_failures": {
  "lineno": 1383,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.retry_on_connect_failures.wrapper": {
  "lineno": 1390,
  "symbols_in_volume": [
   "functools.wraps",
   "random.random",
   "time.sleep",
   "urllib.error"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.run_tests": {
  "lineno": 249,
  "symbols_in_volume": [
   "__main__",
   "os.makedirs",
   "subprocess.Popen",
   "sys.executable",
   "sys.exit",
   "unittest.TestLoader",
   "unittest.main",
   "xmlrunner.XMLTestRunner"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.set_default_dtype": {
  "lineno": 593,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "torch.get_default_dtype",
   "torch.set_default_dtype"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.set_rng_seed": {
  "lineno": 576,
  "symbols_in_volume": [
   "numpy.random.seed",
   "random.seed",
   "torch.manual_seed"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.set_running_script_path": {
  "lineno": 1769,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.realpath",
   "sys.argv"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.settings": {
  "lineno": 674,
  "symbols_in_volume": [
   "hypothesis.settings",
   "hypothesis.version.__version_info__"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.shell": {
  "lineno": 203,
  "symbols_in_volume": [
   "subprocess.Popen",
   "sys.stderr.flush",
   "sys.stdout.flush",
   "torch._six.string_classes"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.skipCUDAMemoryLeakCheckIf": {
  "lineno": 515,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_utils.skipCUDAMemoryLeakCheckIf.dec": {
  "lineno": 516,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_utils.skipCUDANonDefaultStreamIf": {
  "lineno": 522,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_utils.skipCUDANonDefaultStreamIf.dec": {
  "lineno": 523,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_utils.skipIfCompiledWithoutNumpy": {
  "lineno": 438,
  "symbols_in_volume": [
   "numpy.array",
   "torch.from_numpy"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.skipIfCompiledWithoutNumpy.wrapper": {
  "lineno": 450,
  "symbols_in_volume": [
   "functools.wraps",
   "unittest.SkipTest"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.skipIfNoLapack": {
  "lineno": 464,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_utils.skipIfNoLapack.wrapper": {
  "lineno": 465,
  "symbols_in_volume": [
   "functools.wraps",
   "torch._C.has_lapack",
   "unittest.SkipTest"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.skipIfNoSciPy": {
  "lineno": 494,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_utils.skipIfNoSciPy.wrapper": {
  "lineno": 495,
  "symbols_in_volume": [
   "functools.wraps",
   "unittest.SkipTest"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.skipIfNotRegistered": {
  "lineno": 474,
  "symbols_in_volume": [
   "caffe2.python.core._REGISTERED_OPERATORS",
   "unittest.skip",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.skipIfRocm": {
  "lineno": 390,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_utils.skipIfRocm.wrapper": {
  "lineno": 391,
  "symbols_in_volume": [
   "functools.wraps",
   "unittest.SkipTest"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.slowTest": {
  "lineno": 504,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_utils.slowTest.wrapper": {
  "lineno": 505,
  "symbols_in_volume": [
   "functools.wraps",
   "unittest.SkipTest"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.suppress_warnings": {
  "lineno": 529,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_utils.suppress_warnings.wrapper": {
  "lineno": 530,
  "symbols_in_volume": [
   "functools.wraps",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.to_gpu": {
  "lineno": 552,
  "symbols_in_volume": [
   "copy.deepcopy",
   "torch.Tensor",
   "torch.is_storage",
   "torch.no_grad"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.wait_for_process": {
  "lineno": 184,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_utils.wrapDeterministicFlagAPITest": {
  "lineno": 406,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.common_utils.wrapDeterministicFlagAPITest.wrapper": {
  "lineno": 407,
  "symbols_in_volume": [
   "functools.wraps",
   "os.environ",
   "os.environ.get",
   "torch.is_deterministic",
   "torch.version.cuda",
   "torch.version.cuda.split"
  ],
  "type": "function"
 },
 "torch.testing._internal.common_utils.wrapDeterministicFlagAPITest.wrapper.restore": {
  "lineno": 420,
  "symbols_in_volume": [
   "os.environ",
   "os.environ.get",
   "torch.set_deterministic"
  ],
  "type": "function"
 },
 "torch.testing._internal.data": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.testing._internal.data.network1": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.testing._internal.data.network1.Net": {
  "lineno": 4,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.data.network1.Net.__init__": {
  "lineno": 6,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "torch.testing._internal.data.network2": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.testing._internal.data.network2.Net": {
  "lineno": 4,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.data.network2.Net.__init__": {
  "lineno": 6,
  "symbols_in_volume": [
   "torch.nn.Linear",
   "torch.nn.ReLU"
  ],
  "type": "function"
 },
 "torch.testing._internal.dist_utils": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.exit",
   "sys.stderr",
   "torch.distributed.is_available",
   "torch.testing._internal.common_utils.FILE_SCHEMA"
  ],
  "type": "module"
 },
 "torch.testing._internal.dist_utils.dist_init": {
  "lineno": 40,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "function"
 },
 "torch.testing._internal.dist_utils.dist_init.new_test_method": {
  "lineno": 70,
  "symbols_in_volume": [
   "functools.wraps",
   "torch.distributed.rpc.api._ignore_rref_leak",
   "torch.distributed.rpc.init_rpc",
   "torch.distributed.rpc.shutdown"
  ],
  "type": "function"
 },
 "torch.testing._internal.dist_utils.get_function_event": {
  "lineno": 197,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.dist_utils.get_num_owners_and_forks": {
  "lineno": 148,
  "symbols_in_volume": [
   "torch.distributed.rpc._rref_context_get_debug_info"
  ],
  "type": "function"
 },
 "torch.testing._internal.dist_utils.initialize_pg": {
  "lineno": 182,
  "symbols_in_volume": [
   "torch.distributed.init_process_group",
   "torch.distributed.is_initialized"
  ],
  "type": "function"
 },
 "torch.testing._internal.dist_utils.noop": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.dist_utils.single_threaded_process_group_agent": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.dist_utils.single_threaded_process_group_agent.wrapper": {
  "lineno": 26,
  "symbols_in_volume": [
   "functools.wraps",
   "torch.distributed.rpc.backend_registry.BackendType",
   "torch.distributed.rpc.backend_registry.construct_rpc_backend_options"
  ],
  "type": "function"
 },
 "torch.testing._internal.dist_utils.wait_until_node_failure": {
  "lineno": 103,
  "symbols_in_volume": [
   "re.search",
   "time.sleep",
   "torch.distributed.rpc.rpc_sync"
  ],
  "type": "function"
 },
 "torch.testing._internal.dist_utils.wait_until_owners_and_forks_on_rank": {
  "lineno": 159,
  "symbols_in_volume": [
   "time.sleep",
   "time.time",
   "torch.distributed.rpc.rpc_sync"
  ],
  "type": "function"
 },
 "torch.testing._internal.dist_utils.wait_until_pending_futures_and_users_flushed": {
  "lineno": 121,
  "symbols_in_volume": [
   "time.sleep",
   "time.time",
   "torch.distributed.rpc._rref_context_get_debug_info"
  ],
  "type": "function"
 },
 "torch.testing._internal.dist_utils.worker_name": {
  "lineno": 194,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.testing._internal.distributed.ddp_under_dist_autograd_test": {
  "lineno": null,
  "symbols_in_volume": [
   "threading.Condition"
  ],
  "type": "module"
 },
 "torch.testing._internal.distributed.ddp_under_dist_autograd_test.DdpComparisonTest": {
  "lineno": 495,
  "symbols_in_volume": [
   "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture.RpcAgentTestFixture"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.ddp_under_dist_autograd_test.DdpComparisonTest._run_test_ddp_comparision": {
  "lineno": 504,
  "symbols_in_volume": [
   "torch.distributed.autograd.backward",
   "torch.distributed.autograd.context",
   "torch.distributed.autograd.get_gradients",
   "torch.distributed.destroy_process_group",
   "torch.distributed.init_process_group",
   "torch.manual_seed",
   "torch.nn.Linear",
   "torch.nn.parallel.DistributedDataParallel",
   "torch.rand",
   "torch.testing._internal.dist_utils.INIT_METHOD_TEMPLATE.format"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.ddp_under_dist_autograd_test.DdpComparisonTest.get_remote_grads": {
  "lineno": 603,
  "symbols_in_volume": [
   "torch.distributed.autograd.get_gradients"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.ddp_under_dist_autograd_test.DdpComparisonTest.test_ddp_comparison": {
  "lineno": 559,
  "symbols_in_volume": [
   "torch.testing._internal.common_distributed.requires_gloo",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.ddp_under_dist_autograd_test.DdpComparisonTest.test_ddp_comparison_uneven_inputs": {
  "lineno": 564,
  "symbols_in_volume": [
   "torch.testing._internal.common_distributed.requires_gloo",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.ddp_under_dist_autograd_test.DdpComparisonTest.test_ddp_dist_autograd_local_vs_remote": {
  "lineno": 607,
  "symbols_in_volume": [
   "torch.distributed.autograd.backward",
   "torch.distributed.autograd.context",
   "torch.distributed.autograd.get_gradients",
   "torch.distributed.barrier",
   "torch.distributed.init_process_group",
   "torch.distributed.nn.RemoteModule",
   "torch.distributed.rpc.rpc_sync",
   "torch.manual_seed",
   "torch.nn.Linear",
   "torch.nn.parallel.DistributedDataParallel",
   "torch.rand",
   "torch.testing._internal.common_distributed.requires_gloo",
   "torch.testing._internal.dist_utils.INIT_METHOD_TEMPLATE.format",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.ddp_under_dist_autograd_test.DdpComparisonTest.test_ddp_dist_autograd_local_vs_remote_gpu": {
  "lineno": 652,
  "symbols_in_volume": [
   "torch.distributed.autograd.backward",
   "torch.distributed.autograd.context",
   "torch.distributed.autograd.get_gradients",
   "torch.distributed.barrier",
   "torch.distributed.init_process_group",
   "torch.distributed.nn.RemoteModule",
   "torch.distributed.rpc.rpc_sync",
   "torch.manual_seed",
   "torch.nn.Linear",
   "torch.nn.parallel.DistributedDataParallel",
   "torch.rand",
   "torch.testing._internal.common_distributed.requires_nccl",
   "torch.testing._internal.common_distributed.skip_if_lt_x_gpu",
   "torch.testing._internal.common_distributed.skip_if_rocm",
   "torch.testing._internal.dist_utils.INIT_METHOD_TEMPLATE.format",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.ddp_under_dist_autograd_test.DdpComparisonTest.test_ddp_dist_autograd_sparse_grads": {
  "lineno": 570,
  "symbols_in_volume": [
   "torch.LongTensor",
   "torch.distributed.autograd.backward",
   "torch.distributed.autograd.context",
   "torch.distributed.autograd.get_gradients",
   "torch.distributed.init_process_group",
   "torch.manual_seed",
   "torch.nn.EmbeddingBag",
   "torch.nn.parallel.DistributedDataParallel",
   "torch.testing._internal.common_distributed.requires_gloo",
   "torch.testing._internal.dist_utils.INIT_METHOD_TEMPLATE.format",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.ddp_under_dist_autograd_test.DdpComparisonTest.trainer_name": {
  "lineno": 500,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.ddp_under_dist_autograd_test.DdpComparisonTest.world_size": {
  "lineno": 496,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.ddp_under_dist_autograd_test.DdpMode": {
  "lineno": 42,
  "symbols_in_volume": [
   "enum.Enum",
   "enum.auto"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.ddp_under_dist_autograd_test.DdpUnderDistAutogradTest": {
  "lineno": 315,
  "symbols_in_volume": [
   "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture.RpcAgentTestFixture"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.ddp_under_dist_autograd_test.DdpUnderDistAutogradTest._do_test": {
  "lineno": 464,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.ddp_under_dist_autograd_test.DdpUnderDistAutogradTest._master_process": {
  "lineno": 367,
  "symbols_in_volume": [
   "torch.distributed.init_process_group",
   "torch.distributed.rpc.remote",
   "torch.testing._internal.dist_utils.INIT_METHOD_TEMPLATE.format"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.ddp_under_dist_autograd_test.DdpUnderDistAutogradTest._remote_worker_process": {
  "lineno": 328,
  "symbols_in_volume": [
   "torch.distributed.destroy_process_group",
   "torch.distributed.init_process_group",
   "torch.distributed.new_group",
   "torch.testing._internal.dist_utils.INIT_METHOD_TEMPLATE.format"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.ddp_under_dist_autograd_test.DdpUnderDistAutogradTest._trainer_process": {
  "lineno": 347,
  "symbols_in_volume": [
   "torch.distributed.destroy_process_group",
   "torch.distributed.init_process_group",
   "torch.testing._internal.dist_utils.INIT_METHOD_TEMPLATE.format"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.ddp_under_dist_autograd_test.DdpUnderDistAutogradTest.do_test_on_master": {
  "lineno": 387,
  "symbols_in_volume": [
   "torch.distributed.new_group",
   "torch.distributed.rpc.RRef",
   "torch.distributed.rpc.remote",
   "torch.distributed.rpc.rpc_sync",
   "torch.zeros_like"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.ddp_under_dist_autograd_test.DdpUnderDistAutogradTest.remote_worker_name": {
  "lineno": 320,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.ddp_under_dist_autograd_test.DdpUnderDistAutogradTest.test_backward_ddp_inside": {
  "lineno": 489,
  "symbols_in_volume": [
   "torch.testing._internal.common_distributed.requires_gloo",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.ddp_under_dist_autograd_test.DdpUnderDistAutogradTest.test_backward_ddp_outside": {
  "lineno": 479,
  "symbols_in_volume": [
   "torch.testing._internal.common_distributed.requires_gloo",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.ddp_under_dist_autograd_test.DdpUnderDistAutogradTest.test_backward_ddp_outside_uneven_inputs": {
  "lineno": 484,
  "symbols_in_volume": [
   "torch.testing._internal.common_distributed.requires_gloo",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.ddp_under_dist_autograd_test.DdpUnderDistAutogradTest.test_backward_no_ddp": {
  "lineno": 474,
  "symbols_in_volume": [
   "torch.testing._internal.common_distributed.requires_gloo",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.ddp_under_dist_autograd_test.DdpUnderDistAutogradTest.trainer_name": {
  "lineno": 324,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.ddp_under_dist_autograd_test.DdpUnderDistAutogradTest.world_size": {
  "lineno": 316,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.ddp_under_dist_autograd_test.FeatureSet": {
  "lineno": 70,
  "symbols_in_volume": [
   "torch.LongTensor",
   "torch.Tensor",
   "typing.NamedTuple"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.ddp_under_dist_autograd_test.HybridModel": {
  "lineno": 130,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.ddp_under_dist_autograd_test.HybridModel.__init__": {
  "lineno": 131,
  "symbols_in_volume": [
   "torch.distributed.ProcessGroup",
   "torch.distributed.rpc.RRef",
   "torch.nn.parallel.DistributedDataParallel"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.ddp_under_dist_autograd_test.HybridModel.forward": {
  "lineno": 162,
  "symbols_in_volume": [
   "torch.cat"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.ddp_under_dist_autograd_test.RemoteEM": {
  "lineno": 92,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.ddp_under_dist_autograd_test.RemoteEM.__init__": {
  "lineno": 93,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.nn.EmbeddingBag"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.ddp_under_dist_autograd_test.RemoteEM.forward": {
  "lineno": 103,
  "symbols_in_volume": [
   "torch.LongTensor",
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.ddp_under_dist_autograd_test.RemoteNet": {
  "lineno": 118,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.ddp_under_dist_autograd_test.RemoteNet.__init__": {
  "lineno": 119,
  "symbols_in_volume": [
   "torch.nn.ReLU"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.ddp_under_dist_autograd_test.RemoteNet.forward": {
  "lineno": 125,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.ddp_under_dist_autograd_test.Trainer": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.distributed.ddp_under_dist_autograd_test.Trainer.__init__": {
  "lineno": 177,
  "symbols_in_volume": [
   "torch.distributed.new_group",
   "torch.distributed.rpc.RRef",
   "torch.nn.parallel.DistributedDataParallel"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.ddp_under_dist_autograd_test.Trainer.destroy_pg": {
  "lineno": 216,
  "symbols_in_volume": [
   "torch.distributed.destroy_process_group"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.ddp_under_dist_autograd_test.Trainer.train_batch": {
  "lineno": 220,
  "symbols_in_volume": [
   "contextlib.suppress",
   "torch.distributed.autograd.backward",
   "torch.distributed.autograd.context",
   "torch.distributed.autograd.get_gradients",
   "torch.split"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.ddp_under_dist_autograd_test._call_method": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.ddp_under_dist_autograd_test._remote_method": {
  "lineno": 82,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_sync"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.ddp_under_dist_autograd_test._remote_method_async": {
  "lineno": 87,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_async"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.ddp_under_dist_autograd_test.getLinear": {
  "lineno": 109,
  "symbols_in_volume": [
   "torch.nn.Linear",
   "torch.ones"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.ddp_under_dist_autograd_test.get_training_examples": {
  "lineno": 270,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.long",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.ddp_under_dist_autograd_test.init_logger": {
  "lineno": 51,
  "symbols_in_volume": [
   "logging.DEBUG",
   "logging.Formatter",
   "logging.INFO",
   "logging.StreamHandler",
   "logging.getLogger",
   "os.environ"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.ddp_under_dist_autograd_test.set_shutdown_signal": {
  "lineno": 309,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test": {
  "lineno": null,
  "symbols_in_volume": [
   "os.environ",
   "os.getenv",
   "sys.platform",
   "torch.nn.SyncBatchNorm",
   "unittest.skipIf"
  ],
  "type": "module"
 },
 "torch.testing._internal.distributed.distributed_test.Barrier": {
  "lineno": 224,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.distributed.distributed_test.Barrier.init": {
  "lineno": 227,
  "symbols_in_volume": [
   "os.environ",
   "os.listdir",
   "os.path.join",
   "os.unlink"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.Barrier.sync": {
  "lineno": 234,
  "symbols_in_volume": [
   "os.environ",
   "os.getpid",
   "os.listdir",
   "os.path.join",
   "time.sleep",
   "time.time",
   "torch.distributed.get_world_size"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.BatchNormNet": {
  "lineno": 114,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.distributed_test.BatchNormNet.__init__": {
  "lineno": 116,
  "symbols_in_volume": [
   "torch.nn.BatchNorm1d",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.BatchNormNet.forward": {
  "lineno": 122,
  "symbols_in_volume": [
   "torch.nn.functional.softmax",
   "torch.reshape"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest": {
  "lineno": 325,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase": {
  "lineno": 326,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase._all_reduce_coalesced_max_test_cases": {
  "lineno": 1221,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase._all_reduce_coalesced_min_test_cases": {
  "lineno": 1213,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase._all_reduce_coalesced_product_test_cases": {
  "lineno": 1205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase._all_reduce_coalesced_sum_test_cases": {
  "lineno": 1197,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase._assert_equal_param": {
  "lineno": 2139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase._barrier": {
  "lineno": 327,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase._init_full_group_test": {
  "lineno": 339,
  "symbols_in_volume": [
   "torch.distributed.get_rank",
   "torch.distributed.get_world_size",
   "torch.distributed.new_group"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase._init_global_test": {
  "lineno": 345,
  "symbols_in_volume": [
   "torch.distributed.get_rank",
   "torch.distributed.get_world_size",
   "torch.distributed.group.WORLD"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase._init_group_test": {
  "lineno": 330,
  "symbols_in_volume": [
   "torch.distributed.get_rank",
   "torch.distributed.new_group"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase._init_multigpu_helper": {
  "lineno": 352,
  "symbols_in_volume": [
   "torch.cuda.device_count",
   "torch.distributed.get_world_size"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase._model_step": {
  "lineno": 2108,
  "symbols_in_volume": [
   "torch.no_grad"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase._model_step_with_zero_grad": {
  "lineno": 2115,
  "symbols_in_volume": [
   "torch.no_grad"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase._prepare_dummy_data": {
  "lineno": 2123,
  "symbols_in_volume": [
   "os.environ",
   "torch.nn.MSELoss",
   "torch.randn"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase._run_all_gather_coalesced_and_verify": {
  "lineno": 1561,
  "symbols_in_volume": [
   "torch.distributed.all_gather_coalesced",
   "torch.equal"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase._run_reduction_test": {
  "lineno": 2610,
  "symbols_in_volume": [
   "torch.distributed.all_reduce",
   "torch.distributed.get_rank"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase._run_uneven_inputs_test": {
  "lineno": 3020,
  "symbols_in_volume": [
   "contextlib.suppress",
   "torch.cuda.synchronize",
   "torch.distributed.all_gather",
   "torch.distributed.barrier",
   "torch.distributed.get_world_size",
   "torch.nn.parallel.DistributedDataParallel",
   "torch.tensor",
   "torch.zeros_like"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase._test_DDP_5iter": {
  "lineno": 2144,
  "symbols_in_volume": [
   "sys.platform",
   "tempfile.NamedTemporaryFile",
   "tempfile.TemporaryFile",
   "torch.load",
   "torch.randperm",
   "torch.save"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase._test_DDP_helper": {
  "lineno": 2133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase._test_DistributedDataParallel": {
  "lineno": 2196,
  "symbols_in_volume": [
   "copy.deepcopy",
   "sys.platform",
   "tempfile.NamedTemporaryFile",
   "torch.load",
   "torch.nn.parallel.DistributedDataParallel",
   "torch.save"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase._test_DistributedDataParallelCPU": {
  "lineno": 2242,
  "symbols_in_volume": [
   "copy.deepcopy",
   "torch.nn.parallel.DistributedDataParallel"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase._test_DistributedDataParallel_SyncBatchNorm": {
  "lineno": 2359,
  "symbols_in_volume": [
   "copy.deepcopy",
   "sys.platform",
   "tempfile.NamedTemporaryFile",
   "torch.distributed.get_world_size",
   "torch.load",
   "torch.nn.MSELoss",
   "torch.nn.SyncBatchNorm.convert_sync_batchnorm",
   "torch.nn.parallel.DistributedDataParallel",
   "torch.randn",
   "torch.save"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase._test_all_gather_coalesced_helper": {
  "lineno": 1577,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase._test_all_gather_helper": {
  "lineno": 1520,
  "symbols_in_volume": [
   "torch.distributed.all_gather"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase._test_all_gather_multigpu_helper": {
  "lineno": 2076,
  "symbols_in_volume": [
   "torch.distributed.all_gather_multigpu"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase._test_all_reduce_coalesced_helper": {
  "lineno": 1229,
  "symbols_in_volume": [
   "torch.distributed.ReduceOp.MAX",
   "torch.distributed.ReduceOp.MIN",
   "torch.distributed.ReduceOp.PRODUCT",
   "torch.distributed.ReduceOp.SUM",
   "torch.distributed.all_reduce_coalesced"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase._test_all_reduce_helper": {
  "lineno": 1001,
  "symbols_in_volume": [
   "torch.distributed.all_reduce"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase._test_all_reduce_multigpu_helper": {
  "lineno": 1983,
  "symbols_in_volume": [
   "torch.distributed.all_reduce_multigpu"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase._test_all_to_all_helper": {
  "lineno": 1712,
  "symbols_in_volume": [
   "torch.distributed.all_to_all",
   "torch.ones"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase._test_all_to_all_single_equal_split_helper": {
  "lineno": 1667,
  "symbols_in_volume": [
   "torch.cat",
   "torch.distributed.all_to_all_single",
   "torch.ones"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase._test_all_to_all_single_unequal_split_helper": {
  "lineno": 1688,
  "symbols_in_volume": [
   "torch.cat",
   "torch.distributed.all_to_all_single",
   "torch.ones"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase._test_barrier_helper": {
  "lineno": 1891,
  "symbols_in_volume": [
   "time.sleep",
   "time.time",
   "torch.DoubleTensor",
   "torch.distributed.barrier",
   "torch.distributed.broadcast"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase._test_barrier_timeout": {
  "lineno": 492,
  "symbols_in_volume": [
   "time.sleep",
   "time.time",
   "torch.distributed.barrier",
   "torch.distributed.get_rank"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase._test_broadcast_helper": {
  "lineno": 704,
  "symbols_in_volume": [
   "torch.distributed.BroadcastOptions",
   "torch.distributed.broadcast",
   "torch.double",
   "torch.float",
   "torch.half",
   "torch.int",
   "torch.int8",
   "torch.long",
   "torch.tensor",
   "torch.uint8"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase._test_broadcast_multigpu_helper": {
  "lineno": 1961,
  "symbols_in_volume": [
   "torch.distributed.broadcast_multigpu"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase._test_gather_helper": {
  "lineno": 1466,
  "symbols_in_volume": [
   "torch.distributed.gather"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase._test_group_override_backend": {
  "lineno": 547,
  "symbols_in_volume": [
   "torch.cuda.set_device",
   "torch.distributed.ProcessGroupGloo",
   "torch.distributed.ProcessGroupNCCL",
   "torch.distributed.broadcast",
   "torch.distributed.get_rank",
   "torch.distributed.get_world_size"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase._test_reduce_helper": {
  "lineno": 796,
  "symbols_in_volume": [
   "torch.distributed.reduce"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase._test_reduce_multigpu_helper": {
  "lineno": 2030,
  "symbols_in_volume": [
   "torch.distributed.reduce_multigpu"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase._test_scatter_helper": {
  "lineno": 1414,
  "symbols_in_volume": [
   "torch.distributed.scatter"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase._test_sparse_all_reduce_sum": {
  "lineno": 1174,
  "symbols_in_volume": [
   "torch.distributed.ReduceOp.SUM",
   "torch.distributed.all_reduce",
   "torch.distributed.get_world_size",
   "torch.testing._internal.common_distributed.simple_sparse_reduce_tests"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_Backend_enum_class": {
  "lineno": 440,
  "symbols_in_volume": [
   "torch.distributed.Backend"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_DistributedDataParallel": {
  "lineno": 2323,
  "symbols_in_volume": [
   "torch.device",
   "torch.testing._internal.common_distributed.skip_if_no_gpu",
   "torch.testing._internal.common_distributed.skip_if_rocm",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_DistributedDataParallelCPU": {
  "lineno": 2265,
  "symbols_in_volume": [
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_DistributedDataParallelCPU_grad_is_view": {
  "lineno": 2271,
  "symbols_in_volume": [
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_DistributedDataParallel_SyncBatchNorm": {
  "lineno": 2408,
  "symbols_in_volume": [
   "torch.device",
   "torch.distributed.get_world_size",
   "torch.testing._internal.common_distributed.skip_if_no_gpu",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_DistributedDataParallel_SyncBatchNorm_2D_Input": {
  "lineno": 2449,
  "symbols_in_volume": [
   "copy.deepcopy",
   "torch.backends.cudnn.flags",
   "torch.distributed.get_world_size",
   "torch.nn.BatchNorm1d",
   "torch.nn.MSELoss",
   "torch.nn.SyncBatchNorm.convert_sync_batchnorm",
   "torch.nn.parallel.DistributedDataParallel",
   "torch.randn",
   "torch.testing._internal.common_distributed.skip_if_no_gpu",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_DistributedDataParallel_SyncBatchNorm_Diff_Input_Sizes_Running_Value": {
  "lineno": 2545,
  "symbols_in_volume": [
   "torch.cat",
   "torch.distributed.get_world_size",
   "torch.nn.parallel.DistributedDataParallel",
   "torch.ones",
   "torch.testing._internal.common_distributed.skip_if_no_gpu",
   "torch.testing.assert_allclose",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_DistributedDataParallel_SyncBatchNorm_Diff_Input_Sizes_gradient": {
  "lineno": 2574,
  "symbols_in_volume": [
   "torch.distributed.get_world_size",
   "torch.testing._internal.common_distributed.skip_if_no_gpu",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_DistributedDataParallel_SyncBatchNorm_Single_Input_Per_Process": {
  "lineno": 2496,
  "symbols_in_volume": [
   "copy.deepcopy",
   "torch.backends.cudnn.flags",
   "torch.distributed.get_world_size",
   "torch.nn.BatchNorm1d",
   "torch.nn.MSELoss",
   "torch.nn.SyncBatchNorm.convert_sync_batchnorm",
   "torch.nn.parallel.DistributedDataParallel",
   "torch.randn",
   "torch.testing._internal.common_distributed.skip_if_no_gpu",
   "torch.testing._internal.common_distributed.skip_if_rocm",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_DistributedDataParallel_non_default_stream": {
  "lineno": 2284,
  "symbols_in_volume": [
   "os.environ",
   "torch.cuda.Stream",
   "torch.cuda.stream",
   "torch.distributed.all_reduce",
   "torch.nn.Linear",
   "torch.nn.parallel.DistributedDataParallel",
   "torch.tensor",
   "torch.testing._internal.common_distributed.skip_if_lt_x_gpu",
   "torch.testing._internal.common_distributed.skip_if_rocm",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_DistributedDataParallel_requires_grad": {
  "lineno": 2277,
  "symbols_in_volume": [
   "torch.nn.Module",
   "torch.nn.parallel.DistributedDataParallel",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_DistributedDataParallel_with_grad_is_view": {
  "lineno": 2340,
  "symbols_in_volume": [
   "torch.device",
   "torch.testing._internal.common_distributed.skip_if_no_gpu",
   "torch.testing._internal.common_distributed.skip_if_rocm",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_DistributedSampler_padding": {
  "lineno": 2735,
  "symbols_in_volume": [
   "math.ceil",
   "os.environ",
   "torch.distributed.get_world_size",
   "torch.ones",
   "torch.testing._internal.common_distributed.skip_if_lt_x_gpu",
   "torch.utils.data.distributed.DistributedSampler",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_DistributedSampler_padding.validate_global_samples": {
  "lineno": 2765,
  "symbols_in_volume": [
   "torch.LongTensor",
   "torch.distributed.all_gather",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_SyncBatchNorm_process_group": {
  "lineno": 2597,
  "symbols_in_volume": [
   "copy.deepcopy",
   "torch.distributed.new_group",
   "torch.nn.SyncBatchNorm.convert_sync_batchnorm",
   "torchvision.models.resnet50"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_gather": {
  "lineno": 1537,
  "symbols_in_volume": [
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_gather_coalesced_full_group": {
  "lineno": 1627,
  "symbols_in_volume": [
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_gather_coalesced_group": {
  "lineno": 1620,
  "symbols_in_volume": [
   "torch.testing._internal.common_distributed.skip_if_small_worldsize",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_gather_coalesced_simple": {
  "lineno": 1614,
  "symbols_in_volume": [
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_gather_coalesced_with_empty": {
  "lineno": 1633,
  "symbols_in_volume": [
   "torch.ones",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_gather_cuda": {
  "lineno": 1542,
  "symbols_in_volume": [
   "torch.testing._internal.common_distributed.skip_if_no_gpu",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_gather_full_group": {
  "lineno": 1556,
  "symbols_in_volume": [
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_gather_group": {
  "lineno": 1550,
  "symbols_in_volume": [
   "torch.testing._internal.common_distributed.skip_if_small_worldsize",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_gather_multigpu": {
  "lineno": 2101,
  "symbols_in_volume": [
   "torch.testing._internal.common_distributed.skip_if_no_gpu",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_reduce_coalesced_full_group_max": {
  "lineno": 1401,
  "symbols_in_volume": [
   "torch.distributed.ReduceOp.MAX"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_reduce_coalesced_full_group_min": {
  "lineno": 1389,
  "symbols_in_volume": [
   "torch.distributed.ReduceOp.MIN"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_reduce_coalesced_full_group_product": {
  "lineno": 1377,
  "symbols_in_volume": [
   "torch.distributed.ReduceOp.PRODUCT"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_reduce_coalesced_full_group_sum": {
  "lineno": 1365,
  "symbols_in_volume": [
   "torch.distributed.ReduceOp.SUM"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_reduce_coalesced_group_max": {
  "lineno": 1352,
  "symbols_in_volume": [
   "torch.distributed.ReduceOp.MAX",
   "torch.testing._internal.common_distributed.skip_if_small_worldsize"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_reduce_coalesced_group_min": {
  "lineno": 1339,
  "symbols_in_volume": [
   "torch.distributed.ReduceOp.MIN",
   "torch.testing._internal.common_distributed.skip_if_small_worldsize"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_reduce_coalesced_group_product": {
  "lineno": 1326,
  "symbols_in_volume": [
   "torch.distributed.ReduceOp.PRODUCT",
   "torch.testing._internal.common_distributed.skip_if_small_worldsize"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_reduce_coalesced_group_sum": {
  "lineno": 1313,
  "symbols_in_volume": [
   "torch.distributed.ReduceOp.SUM",
   "torch.testing._internal.common_distributed.skip_if_small_worldsize"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_reduce_coalesced_max": {
  "lineno": 1301,
  "symbols_in_volume": [
   "torch.distributed.ReduceOp.MAX"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_reduce_coalesced_min": {
  "lineno": 1289,
  "symbols_in_volume": [
   "torch.distributed.ReduceOp.MIN"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_reduce_coalesced_product": {
  "lineno": 1277,
  "symbols_in_volume": [
   "torch.distributed.ReduceOp.PRODUCT"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_reduce_coalesced_sum": {
  "lineno": 1265,
  "symbols_in_volume": [
   "torch.distributed.ReduceOp.SUM"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_reduce_full_group_max": {
  "lineno": 1166,
  "symbols_in_volume": [
   "torch.distributed.ReduceOp.MAX",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_reduce_full_group_min": {
  "lineno": 1159,
  "symbols_in_volume": [
   "torch.distributed.ReduceOp.MIN",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_reduce_full_group_product": {
  "lineno": 1146,
  "symbols_in_volume": [
   "functools.reduce",
   "torch.distributed.ReduceOp.PRODUCT",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_reduce_full_group_sum": {
  "lineno": 1133,
  "symbols_in_volume": [
   "torch.distributed.ReduceOp.SUM",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_reduce_group_max": {
  "lineno": 1125,
  "symbols_in_volume": [
   "torch.distributed.ReduceOp.MAX",
   "torch.testing._internal.common_distributed.skip_if_small_worldsize",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_reduce_group_min": {
  "lineno": 1117,
  "symbols_in_volume": [
   "torch.distributed.ReduceOp.MIN",
   "torch.testing._internal.common_distributed.skip_if_small_worldsize",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_reduce_group_product": {
  "lineno": 1103,
  "symbols_in_volume": [
   "functools.reduce",
   "torch.distributed.ReduceOp.PRODUCT",
   "torch.testing._internal.common_distributed.skip_if_small_worldsize",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_reduce_group_sum": {
  "lineno": 1089,
  "symbols_in_volume": [
   "torch.distributed.ReduceOp.SUM",
   "torch.testing._internal.common_distributed.skip_if_small_worldsize",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_reduce_max": {
  "lineno": 1082,
  "symbols_in_volume": [
   "torch.distributed.ReduceOp.MAX",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_reduce_min": {
  "lineno": 1075,
  "symbols_in_volume": [
   "torch.distributed.ReduceOp.MIN",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_reduce_multigpu": {
  "lineno": 2013,
  "symbols_in_volume": [
   "torch.distributed.ReduceOp.SUM",
   "torch.testing._internal.common_distributed.skip_if_no_gpu",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_reduce_product": {
  "lineno": 1062,
  "symbols_in_volume": [
   "functools.reduce",
   "torch.distributed.ReduceOp.PRODUCT",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_reduce_result_cuda": {
  "lineno": 953,
  "symbols_in_volume": [
   "torch.distributed.ReduceOp.SUM",
   "torch.distributed.distributed_c10d.AllreduceOptions",
   "torch.distributed.distributed_c10d.GroupMember.WORLD",
   "torch.distributed.distributed_c10d._get_default_group",
   "torch.testing._internal.common_distributed.skip_if_no_gpu",
   "torch.testing._internal.common_distributed.skip_if_rocm"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_reduce_sum": {
  "lineno": 1029,
  "symbols_in_volume": [
   "torch.distributed.ReduceOp.SUM",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_reduce_sum_cuda": {
  "lineno": 1042,
  "symbols_in_volume": [
   "torch.distributed.ReduceOp.SUM",
   "torch.testing._internal.common_distributed.skip_if_no_gpu",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_to_all": {
  "lineno": 1774,
  "symbols_in_volume": [
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_to_all_full_group": {
  "lineno": 1885,
  "symbols_in_volume": [
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_to_all_group": {
  "lineno": 1831,
  "symbols_in_volume": [
   "torch.testing._internal.common_distributed.skip_if_small_worldsize",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_to_all_single_equal_split": {
  "lineno": 1726,
  "symbols_in_volume": [
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_to_all_single_equal_split_cuda": {
  "lineno": 1733,
  "symbols_in_volume": [
   "torch.testing._internal.common_distributed.skip_if_no_gpu",
   "torch.testing._internal.common_distributed.skip_if_rocm",
   "unittest.skip",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_to_all_single_equal_split_full_group": {
  "lineno": 1837,
  "symbols_in_volume": [
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_to_all_single_equal_split_full_group_cuda": {
  "lineno": 1844,
  "symbols_in_volume": [
   "torch.testing._internal.common_distributed.skip_if_no_gpu",
   "torch.testing._internal.common_distributed.skip_if_rocm",
   "unittest.skip",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_to_all_single_equal_split_group": {
  "lineno": 1779,
  "symbols_in_volume": [
   "torch.testing._internal.common_distributed.skip_if_small_worldsize",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_to_all_single_equal_split_group_cuda": {
  "lineno": 1787,
  "symbols_in_volume": [
   "torch.testing._internal.common_distributed.skip_if_no_gpu",
   "torch.testing._internal.common_distributed.skip_if_rocm",
   "torch.testing._internal.common_distributed.skip_if_small_worldsize",
   "unittest.skip",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_to_all_single_unequal_split": {
  "lineno": 1750,
  "symbols_in_volume": [
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_to_all_single_unequal_split_cuda": {
  "lineno": 1757,
  "symbols_in_volume": [
   "torch.testing._internal.common_distributed.skip_if_no_gpu",
   "torch.testing._internal.common_distributed.skip_if_rocm",
   "unittest.skip",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_to_all_single_unequal_split_full_group": {
  "lineno": 1861,
  "symbols_in_volume": [
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_to_all_single_unequal_split_full_group_cuda": {
  "lineno": 1868,
  "symbols_in_volume": [
   "torch.testing._internal.common_distributed.skip_if_no_gpu",
   "torch.testing._internal.common_distributed.skip_if_rocm",
   "unittest.skip",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_to_all_single_unequal_split_group": {
  "lineno": 1805,
  "symbols_in_volume": [
   "torch.testing._internal.common_distributed.skip_if_small_worldsize",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_all_to_all_single_unequal_split_group_cuda": {
  "lineno": 1813,
  "symbols_in_volume": [
   "torch.testing._internal.common_distributed.skip_if_no_gpu",
   "torch.testing._internal.common_distributed.skip_if_rocm",
   "torch.testing._internal.common_distributed.skip_if_small_worldsize",
   "unittest.skip",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_allgather_object": {
  "lineno": 2795,
  "symbols_in_volume": [
   "os.environ",
   "torch.distributed.all_gather_object",
   "torch.distributed.get_world_size",
   "torch.testing._internal.common_distributed.require_n_gpus_for_nccl_backend"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_backend_full_group": {
  "lineno": 581,
  "symbols_in_volume": [
   "torch.testing._internal.common_distributed.skip_if_lt_x_gpu"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_backend_group": {
  "lineno": 574,
  "symbols_in_volume": [
   "torch.testing._internal.common_distributed.skip_if_lt_x_gpu"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_barrier": {
  "lineno": 1945,
  "symbols_in_volume": [
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_barrier_cuda": {
  "lineno": 1920,
  "symbols_in_volume": [
   "torch.testing._internal.common_distributed.skip_if_no_gpu",
   "torch.testing._internal.common_distributed.skip_if_rocm",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_barrier_full_group": {
  "lineno": 1956,
  "symbols_in_volume": [
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_barrier_full_group_cuda": {
  "lineno": 1937,
  "symbols_in_volume": [
   "torch.testing._internal.common_distributed.skip_if_no_gpu",
   "torch.testing._internal.common_distributed.skip_if_small_worldsize",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_barrier_group": {
  "lineno": 1950,
  "symbols_in_volume": [
   "torch.testing._internal.common_distributed.skip_if_small_worldsize",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_barrier_group_cuda": {
  "lineno": 1928,
  "symbols_in_volume": [
   "torch.testing._internal.common_distributed.skip_if_no_gpu",
   "torch.testing._internal.common_distributed.skip_if_rocm",
   "torch.testing._internal.common_distributed.skip_if_small_worldsize",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_barrier_timeout_full_group": {
  "lineno": 537,
  "symbols_in_volume": [
   "datetime.timedelta",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_barrier_timeout_global": {
  "lineno": 504,
  "symbols_in_volume": [
   "datetime.timedelta",
   "os.environ",
   "torch.distributed.destroy_process_group",
   "torch.distributed.group.WORLD",
   "torch.distributed.init_process_group",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_barrier_timeout_group": {
  "lineno": 529,
  "symbols_in_volume": [
   "datetime.timedelta",
   "torch.testing._internal.common_distributed.skip_if_small_worldsize",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_broadcast": {
  "lineno": 746,
  "symbols_in_volume": [
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_broadcast_cuda": {
  "lineno": 751,
  "symbols_in_volume": [
   "torch.testing._internal.common_distributed.skip_if_no_gpu",
   "torch.testing._internal.common_distributed.skip_if_rocm",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_broadcast_full_group": {
  "lineno": 768,
  "symbols_in_volume": [
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_broadcast_group": {
  "lineno": 762,
  "symbols_in_volume": [
   "torch.testing._internal.common_distributed.skip_if_small_worldsize",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_broadcast_multigpu": {
  "lineno": 1975,
  "symbols_in_volume": [
   "torch.testing._internal.common_distributed.skip_if_no_gpu",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_broadcast_object_list": {
  "lineno": 3320,
  "symbols_in_volume": [
   "os.environ",
   "torch.distributed.broadcast_object_list",
   "torch.testing._internal.common_distributed.require_n_gpus_for_nccl_backend"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_ddp_grad_div_uneven_inputs": {
  "lineno": 2918,
  "symbols_in_volume": [
   "torch.cuda.synchronize",
   "torch.distributed.get_world_size",
   "torch.nn.Linear",
   "torch.nn.parallel.DistributedDataParallel",
   "torch.ones",
   "torch.testing._internal.common_distributed.skip_if_lt_x_gpu",
   "torch.testing._internal.common_distributed.skip_if_rocm"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_ddp_join_model_equivalence": {
  "lineno": 2972,
  "symbols_in_volume": [
   "copy.deepcopy",
   "torch.cuda.synchronize",
   "torch.distributed.get_world_size",
   "torch.nn.Linear",
   "torch.nn.parallel.DistributedDataParallel",
   "torch.optim.SGD",
   "torch.rand",
   "torch.testing._internal.common_distributed.skip_if_lt_x_gpu",
   "torch.testing._internal.common_distributed.skip_if_rocm"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_ddp_sync_params_and_buffers": {
  "lineno": 2876,
  "symbols_in_volume": [
   "copy.deepcopy",
   "torch.distributed.all_gather",
   "torch.distributed.get_world_size",
   "torch.manual_seed",
   "torch.nn.Linear",
   "torch.nn.parallel.DistributedDataParallel",
   "torch.testing._internal.common_distributed.skip_if_lt_x_gpu",
   "torch.testing._internal.common_distributed.skip_if_rocm",
   "torch.zeros_like"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_ddp_uneven_input_exception": {
  "lineno": 3268,
  "symbols_in_volume": [
   "torch.nn.parallel.DistributedDataParallel",
   "torch.ones",
   "torch.testing._internal.common_distributed.skip_if_lt_x_gpu",
   "torch.testing._internal.common_distributed.skip_if_rocm"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_ddp_uneven_input_exception.ExceptionModule": {
  "lineno": 3277,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_ddp_uneven_input_exception.ExceptionModule.__init__": {
  "lineno": 3278,
  "symbols_in_volume": [
   "torch.nn.Parameter",
   "torch.ones"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_ddp_uneven_input_exception.ExceptionModule.forward": {
  "lineno": 3282,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_ddp_uneven_input_join_disable": {
  "lineno": 3234,
  "symbols_in_volume": [
   "torch.distributed.get_world_size",
   "torch.manual_seed",
   "torch.nn.Linear",
   "torch.nn.parallel.DistributedDataParallel",
   "torch.ones",
   "torch.testing._internal.common_distributed.skip_if_lt_x_gpu",
   "torch.testing._internal.common_distributed.skip_if_rocm"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_ddp_uneven_inputs": {
  "lineno": 3076,
  "symbols_in_volume": [
   "itertools.product",
   "torch.distributed.get_world_size",
   "torch.nn.Conv2d",
   "torch.nn.Linear",
   "torch.nn.ReLU",
   "torch.nn.Sequential",
   "torch.ones",
   "torch.testing._internal.common_distributed.skip_if_lt_x_gpu",
   "torch.testing._internal.common_distributed.skip_if_rocm",
   "torchvision.models.resnet50"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_ddp_uneven_inputs.DDPUnevenTestInput": {
  "lineno": 3081,
  "symbols_in_volume": [
   "torch.nn.Module",
   "torch.tensor",
   "typing.NamedTuple",
   "typing.Union"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_ddp_uneven_inputs.UnusedParamModule": {
  "lineno": 3101,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_ddp_uneven_inputs.UnusedParamModule.__init__": {
  "lineno": 3102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_ddp_uneven_inputs.UnusedParamModule.forward": {
  "lineno": 3111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_ddp_uneven_inputs.UnusedParamModule.task_parameters": {
  "lineno": 3108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_ddp_uneven_inputs_replicated_error": {
  "lineno": 3296,
  "symbols_in_volume": [
   "torch.distributed.new_group",
   "torch.nn.Linear",
   "torch.nn.parallel.DistributedDataParallel",
   "torch.testing._internal.common_distributed.skip_if_lt_x_gpu",
   "torch.testing._internal.common_distributed.skip_if_rocm"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_ddp_unused_params_rebuild_buckets_exception": {
  "lineno": 3339,
  "symbols_in_volume": [
   "torch.nn.parallel.DistributedDataParallel",
   "torch.rand",
   "torch.testing._internal.common_distributed.skip_if_lt_x_gpu",
   "torch.testing._internal.common_distributed.skip_if_rocm"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_ddp_unused_params_rebuild_buckets_exception.ToyModel": {
  "lineno": 3344,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_ddp_unused_params_rebuild_buckets_exception.ToyModel.__init__": {
  "lineno": 3345,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_ddp_unused_params_rebuild_buckets_exception.ToyModel.forward": {
  "lineno": 3350,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_destroy_full_group": {
  "lineno": 481,
  "symbols_in_volume": [
   "torch.distributed.destroy_process_group"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_destroy_group": {
  "lineno": 457,
  "symbols_in_volume": [
   "torch.distributed.destroy_process_group",
   "torch.distributed.get_world_size",
   "torch.distributed.new_group"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_dump_DDP_relevant_env_vars": {
  "lineno": 374,
  "symbols_in_volume": [
   "torch.nn.parallel.distributed._dump_DDP_relevant_env_vars"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_dump_DDP_relevant_env_vars.format_line": {
  "lineno": 379,
  "symbols_in_volume": [
   "os.environ"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_gather": {
  "lineno": 1503,
  "symbols_in_volume": [
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_gather_checks": {
  "lineno": 1480,
  "symbols_in_volume": [
   "torch.distributed.gather",
   "torch.ones",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_gather_full_group": {
  "lineno": 1514,
  "symbols_in_volume": [
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_gather_group": {
  "lineno": 1508,
  "symbols_in_volume": [
   "torch.testing._internal.common_distributed.skip_if_small_worldsize",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_gather_object": {
  "lineno": 2813,
  "symbols_in_volume": [
   "torch.distributed.all_gather_object",
   "torch.distributed.gather_object",
   "torch.distributed.get_rank",
   "torch.distributed.get_world_size",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_gather_object.Bar": {
  "lineno": 2836,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_get_backend": {
  "lineno": 426,
  "symbols_in_volume": [
   "torch.distributed.get_backend",
   "torch.distributed.get_rank",
   "torch.distributed.get_world_size",
   "torch.distributed.new_group"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_get_rank": {
  "lineno": 403,
  "symbols_in_volume": [
   "os.environ",
   "os.getpid",
   "os.listdir",
   "os.path.join",
   "os.unlink",
   "torch.distributed.get_rank",
   "torch.distributed.get_world_size"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_get_rank_size_full_group": {
  "lineno": 487,
  "symbols_in_volume": [
   "torch.distributed.get_rank",
   "torch.distributed.get_world_size"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_get_rank_size_group": {
  "lineno": 467,
  "symbols_in_volume": [
   "torch.distributed.get_rank",
   "torch.distributed.get_world_size",
   "torch.distributed.new_group"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_irecv": {
  "lineno": 681,
  "symbols_in_volume": [
   "torch.distributed.get_rank",
   "torch.distributed.get_world_size",
   "torch.distributed.irecv",
   "torch.distributed.send",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_isend": {
  "lineno": 660,
  "symbols_in_volume": [
   "torch.distributed.get_rank",
   "torch.distributed.get_world_size",
   "torch.distributed.isend",
   "torch.distributed.recv",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_nccl_backend_bool_allgather": {
  "lineno": 2655,
  "symbols_in_volume": [
   "torch.cuda.set_device",
   "torch.distributed.all_gather",
   "torch.distributed.get_world_size",
   "torch.tensor",
   "torch.testing._internal.common_distributed.skip_if_lt_x_gpu",
   "torch.testing._internal.common_distributed.skip_if_rocm"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_nccl_backend_bool_allreduce": {
  "lineno": 2624,
  "symbols_in_volume": [
   "torch.cuda.set_device",
   "torch.distributed.ReduceOp.MAX",
   "torch.distributed.ReduceOp.MIN",
   "torch.distributed.ReduceOp.PRODUCT",
   "torch.distributed.ReduceOp.SUM",
   "torch.tensor",
   "torch.testing._internal.common_distributed.skip_if_lt_x_gpu",
   "torch.testing._internal.common_distributed.skip_if_rocm"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_nccl_backend_bool_broadcast": {
  "lineno": 2712,
  "symbols_in_volume": [
   "random.random",
   "torch.distributed.all_gather",
   "torch.distributed.broadcast",
   "torch.distributed.get_world_size",
   "torch.tensor",
   "torch.testing._internal.common_distributed.skip_if_lt_x_gpu",
   "torch.testing._internal.common_distributed.skip_if_rocm"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_nccl_backend_bool_reduce": {
  "lineno": 2679,
  "symbols_in_volume": [
   "os.environ",
   "torch.cuda.set_device",
   "torch.distributed.ReduceOp.MAX",
   "torch.distributed.ReduceOp.MIN",
   "torch.distributed.ReduceOp.PRODUCT",
   "torch.distributed.ReduceOp.SUM",
   "torch.distributed.reduce",
   "torch.tensor",
   "torch.testing._internal.common_distributed.skip_if_lt_x_gpu",
   "torch.testing._internal.common_distributed.skip_if_rocm"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_nccl_gather_object_err": {
  "lineno": 2846,
  "symbols_in_volume": [
   "torch.distributed.gather_object",
   "torch.distributed.get_rank",
   "torch.distributed.get_world_size",
   "torch.testing._internal.common_distributed.skip_if_lt_x_gpu"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_nccl_high_priority_stream": {
  "lineno": 773,
  "symbols_in_volume": [
   "os.environ",
   "torch._utils_internal.TEST_MASTER_PORT",
   "torch.distributed.PrefixStore",
   "torch.distributed.ProcessGroupNCCL",
   "torch.distributed.ProcessGroupNCCL.Options",
   "torch.distributed.get_world_size",
   "torch.distributed.rendezvous",
   "torch.testing._internal.common_distributed.skip_if_no_gpu",
   "torch.testing._internal.common_distributed.skip_if_rocm",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_reduce_full_group_max": {
  "lineno": 948,
  "symbols_in_volume": [
   "torch.distributed.ReduceOp.MAX",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_reduce_full_group_min": {
  "lineno": 943,
  "symbols_in_volume": [
   "torch.distributed.ReduceOp.MIN",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_reduce_full_group_product": {
  "lineno": 930,
  "symbols_in_volume": [
   "functools.reduce",
   "torch.distributed.ReduceOp.PRODUCT",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_reduce_full_group_sum": {
  "lineno": 917,
  "symbols_in_volume": [
   "torch.distributed.ReduceOp.SUM",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_reduce_group_max": {
  "lineno": 911,
  "symbols_in_volume": [
   "torch.distributed.ReduceOp.MAX",
   "torch.testing._internal.common_distributed.skip_if_small_worldsize",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_reduce_group_min": {
  "lineno": 905,
  "symbols_in_volume": [
   "torch.distributed.ReduceOp.MIN",
   "torch.testing._internal.common_distributed.skip_if_small_worldsize",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_reduce_group_product": {
  "lineno": 891,
  "symbols_in_volume": [
   "functools.reduce",
   "torch.distributed.ReduceOp.PRODUCT",
   "torch.testing._internal.common_distributed.skip_if_small_worldsize",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_reduce_group_sum": {
  "lineno": 877,
  "symbols_in_volume": [
   "torch.distributed.ReduceOp.SUM",
   "torch.testing._internal.common_distributed.skip_if_small_worldsize",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_reduce_max": {
  "lineno": 872,
  "symbols_in_volume": [
   "torch.distributed.ReduceOp.MAX",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_reduce_min": {
  "lineno": 867,
  "symbols_in_volume": [
   "torch.distributed.ReduceOp.MIN",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_reduce_multigpu": {
  "lineno": 2059,
  "symbols_in_volume": [
   "torch.distributed.ReduceOp.SUM",
   "torch.testing._internal.common_distributed.skip_if_no_gpu",
   "torch.testing._internal.common_distributed.skip_if_rocm",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_reduce_product": {
  "lineno": 854,
  "symbols_in_volume": [
   "functools.reduce",
   "torch.distributed.ReduceOp.PRODUCT",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_reduce_sum": {
  "lineno": 823,
  "symbols_in_volume": [
   "torch.distributed.ReduceOp.SUM",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_reduce_sum_cuda": {
  "lineno": 836,
  "symbols_in_volume": [
   "torch.distributed.ReduceOp.SUM",
   "torch.testing._internal.common_distributed.skip_if_no_gpu",
   "torch.testing._internal.common_distributed.skip_if_rocm",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_scatter": {
  "lineno": 1449,
  "symbols_in_volume": [
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_scatter_checks": {
  "lineno": 1426,
  "symbols_in_volume": [
   "torch.distributed.scatter",
   "torch.ones",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_scatter_full_group": {
  "lineno": 1460,
  "symbols_in_volume": [
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_scatter_group": {
  "lineno": 1454,
  "symbols_in_volume": [
   "torch.testing._internal.common_distributed.skip_if_small_worldsize",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_send_recv": {
  "lineno": 588,
  "symbols_in_volume": [
   "torch.distributed.get_rank",
   "torch.distributed.get_world_size",
   "torch.distributed.recv",
   "torch.distributed.send",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_send_recv_any_source": {
  "lineno": 610,
  "symbols_in_volume": [
   "torch.distributed.get_rank",
   "torch.distributed.get_world_size",
   "torch.distributed.recv",
   "torch.distributed.send",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_send_recv_with_tag": {
  "lineno": 640,
  "symbols_in_volume": [
   "torch.distributed.get_rank",
   "torch.distributed.get_world_size",
   "torch.distributed.recv",
   "torch.distributed.send",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_sparse_all_reduce_sum": {
  "lineno": 1186,
  "symbols_in_volume": [
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.test_sparse_all_reduce_sum_cuda": {
  "lineno": 1190,
  "symbols_in_volume": [
   "torch.testing._internal.common_distributed.skip_if_no_gpu",
   "torch.testing._internal.common_distributed.skip_if_rocm",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.DistributedTest._DistTestBase.validate_net_equivalence": {
  "lineno": 2864,
  "symbols_in_volume": [
   "torch.distributed.all_gather",
   "torch.distributed.get_world_size",
   "torch.zeros_like"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.Foo": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.distributed.distributed_test.Foo.__eq__": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.Foo.__init__": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.Net": {
  "lineno": 89,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.distributed_test.Net.__init__": {
  "lineno": 90,
  "symbols_in_volume": [
   "torch.nn.Linear",
   "torch.nn.Parameter",
   "torch.nn.ReLU",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.Net.forward": {
  "lineno": 99,
  "symbols_in_volume": [
   "torch.nn.functional.softmax"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.Task": {
  "lineno": 105,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.distributed_test.Task.__init__": {
  "lineno": 106,
  "symbols_in_volume": [
   "torch.nn.Parameter",
   "torch.ones"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.Task.forward": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.TestDistBackend": {
  "lineno": 263,
  "symbols_in_volume": [
   "torch.testing._internal.common_distributed.MultiProcessTestCase"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.distributed_test.TestDistBackend._run": {
  "lineno": 286,
  "symbols_in_volume": [
   "sys.exit",
   "torch.cuda.is_available",
   "torch.distributed.destroy_process_group",
   "torch.distributed.init_process_group",
   "torch.testing._internal.common_distributed.TEST_SKIPS.exit_code"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.TestDistBackend.init_method": {
  "lineno": 282,
  "symbols_in_volume": [
   "torch.testing._internal.common_utils.FILE_SCHEMA"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.TestDistBackend.setUp": {
  "lineno": 271,
  "symbols_in_volume": [
   "torch.testing._internal.common_distributed.initialize_temp_directories"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.TestDistBackend.setUpClass": {
  "lineno": 264,
  "symbols_in_volume": [
   "os.environ",
   "torch._utils_internal.TEST_MASTER_ADDR",
   "torch._utils_internal.TEST_MASTER_PORT"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.TestDistBackend.tearDown": {
  "lineno": 278,
  "symbols_in_volume": [
   "torch.testing._internal.common_distributed.cleanup_temp_dir"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.TestDistBackend.world_size": {
  "lineno": 320,
  "symbols_in_volume": [
   "os.environ"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test._FC2": {
  "lineno": 78,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.distributed_test._FC2.__init__": {
  "lineno": 79,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test._FC2.forward": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test._build_multidim_tensor": {
  "lineno": 218,
  "symbols_in_volume": [
   "torch.FloatTensor"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test._build_tensor": {
  "lineno": 212,
  "symbols_in_volume": [
   "torch.empty",
   "torch.float"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test._captured_output": {
  "lineno": 135,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "io.StringIO",
   "sys.stderr",
   "sys.stdout"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test._lock": {
  "lineno": 192,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "fcntl.LOCK_EX",
   "fcntl.LOCK_UN",
   "fcntl.flock",
   "msvcrt.LK_RLCK",
   "msvcrt.LK_UNLCK",
   "msvcrt.locking",
   "os.environ",
   "os.path.join",
   "sys.platform"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.apply_hack_for_nccl": {
  "lineno": 182,
  "symbols_in_volume": [
   "os.environ"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.get_timeout": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.require_backend": {
  "lineno": 154,
  "symbols_in_volume": [
   "unittest.skip"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.require_backends_available": {
  "lineno": 160,
  "symbols_in_volume": [
   "torch.distributed.Backend",
   "unittest.skip"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.require_backends_available.check": {
  "lineno": 161,
  "symbols_in_volume": [
   "torch.distributed.Backend.GLOO",
   "torch.distributed.Backend.MPI",
   "torch.distributed.Backend.NCCL",
   "torch.distributed.is_gloo_available",
   "torch.distributed.is_mpi_available",
   "torch.distributed.is_nccl_available"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.distributed_test.require_world_size": {
  "lineno": 176,
  "symbols_in_volume": [
   "os.environ",
   "unittest.skip"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.nn": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.testing._internal.distributed.nn.api": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.testing._internal.distributed.nn.api.remote_module_test": {
  "lineno": null,
  "symbols_in_volume": [
   "torch.nn.Parameter",
   "torch.ones"
  ],
  "type": "module"
 },
 "torch.testing._internal.distributed.nn.api.remote_module_test.BadModule": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.distributed.nn.api.remote_module_test.BadModule.__init__": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.nn.api.remote_module_test.ModuleCreationMode": {
  "lineno": 27,
  "symbols_in_volume": [
   "enum.Enum"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.nn.api.remote_module_test.MyModule": {
  "lineno": 53,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.nn.api.remote_module_test.MyModule.__init__": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.nn.api.remote_module_test.MyModule.forward": {
  "lineno": 58,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.nn.api.remote_module_test.MyModuleInterface": {
  "lineno": 32,
  "symbols_in_volume": [
   "torch.jit.interface"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.nn.api.remote_module_test.MyModuleInterface.forward": {
  "lineno": 34,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.nn.api.remote_module_test.RemoteModuleTest": {
  "lineno": 75,
  "symbols_in_volume": [
   "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture.RpcAgentTestFixture"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.nn.api.remote_module_test.RemoteModuleTest._create_remote_module_iter": {
  "lineno": 80,
  "symbols_in_volume": [
   "torch.distributed.nn.RemoteModule",
   "torch.distributed.nn.api.remote_module._RemoteModule",
   "torch.jit.script"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.nn.api.remote_module_test.RemoteModuleTest.test_bad_module": {
  "lineno": 106,
  "symbols_in_volume": [
   "torch.distributed.nn.RemoteModule",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.nn.api.remote_module_test.RemoteModuleTest.test_forward_async": {
  "lineno": 126,
  "symbols_in_volume": [
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.nn.api.remote_module_test.RemoteModuleTest.test_forward_async_script": {
  "lineno": 137,
  "symbols_in_volume": [
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.nn.api.remote_module_test.RemoteModuleTest.test_forward_async_script.run_forward_async": {
  "lineno": 149,
  "symbols_in_volume": [
   "torch.jit.script",
   "torch.ones"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.nn.api.remote_module_test.RemoteModuleTest.test_forward_sync": {
  "lineno": 159,
  "symbols_in_volume": [
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.nn.api.remote_module_test.RemoteModuleTest.test_forward_sync_script": {
  "lineno": 169,
  "symbols_in_volume": [
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.nn.api.remote_module_test.RemoteModuleTest.test_forward_sync_script.run_forward": {
  "lineno": 181,
  "symbols_in_volume": [
   "torch.jit.script",
   "torch.ones"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.nn.api.remote_module_test.RemoteModuleTest.test_forward_with_kwargs": {
  "lineno": 190,
  "symbols_in_volume": [
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.nn.api.remote_module_test.RemoteModuleTest.test_invalid_devices": {
  "lineno": 238,
  "symbols_in_volume": [
   "torch.testing._internal.common_distributed.skip_if_lt_x_gpu",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.nn.api.remote_module_test.RemoteModuleTest.test_remote_parameters": {
  "lineno": 208,
  "symbols_in_volume": [
   "torch.equal",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.nn.api.remote_module_test.RemoteModuleTest.test_unsupported_methods": {
  "lineno": 288,
  "symbols_in_volume": [
   "torch.FloatTensor",
   "torch.int32",
   "torch.nn.Parameter",
   "torch.ones",
   "torch.rand",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.nn.api.remote_module_test.RemoteModuleTest.test_unsupported_methods.hook": {
  "lineno": 348,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.nn.api.remote_module_test.RemoteModuleTest.test_valid_device": {
  "lineno": 222,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_sync",
   "torch.testing._internal.common_distributed.skip_if_lt_x_gpu",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.nn.api.remote_module_test.RemoteModuleTest.world_size": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.nn.api.remote_module_test.RemoteMyModuleInterface": {
  "lineno": 40,
  "symbols_in_volume": [
   "torch.jit.interface"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.nn.api.remote_module_test.RemoteMyModuleInterface.forward": {
  "lineno": 42,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.nn.api.remote_module_test.RemoteMyModuleInterface.forward_async": {
  "lineno": 47,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._jit_internal.Future",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.nn.api.remote_module_test.create_scripted_module": {
  "lineno": 69,
  "symbols_in_volume": [
   "torch.jit.script"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.nn.api.remote_module_test.remote_device": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test": {
  "lineno": null,
  "symbols_in_volume": [
   "torch.ones"
  ],
  "type": "module"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest": {
  "lineno": 188,
  "symbols_in_volume": [
   "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture.RpcAgentTestFixture"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.MyBackwardFunc": {
  "lineno": 1503,
  "symbols_in_volume": [
   "torch.autograd.Function"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.MyBackwardFunc.backward": {
  "lineno": 1508,
  "symbols_in_volume": [
   "torch.autograd.function.once_differentiable",
   "torch.distributed.autograd._release_context",
   "torch.distributed.barrier"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.MyBackwardFunc.forward": {
  "lineno": 1504,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.TestDebugInfoFunc": {
  "lineno": 1665,
  "symbols_in_volume": [
   "torch.autograd.Function"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.TestDebugInfoFunc.backward": {
  "lineno": 1670,
  "symbols_in_volume": [
   "torch.autograd.function.once_differentiable",
   "torch.distributed.autograd._get_debug_info"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.TestDebugInfoFunc.forward": {
  "lineno": 1666,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest._call_remote_embedding": {
  "lineno": 1586,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest._check_rpc_done": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest._complex_python_udf": {
  "lineno": 1366,
  "symbols_in_volume": [
   "torch.chain_matmul",
   "torch.nn.functional.linear"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest._exec_func": {
  "lineno": 204,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest._exec_func_with_dst": {
  "lineno": 189,
  "symbols_in_volume": [
   "torch.distributed.rpc.remote",
   "torch.distributed.rpc.rpc_async",
   "torch.distributed.rpc.rpc_sync",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest._get_grad": {
  "lineno": 1591,
  "symbols_in_volume": [
   "torch.distributed.autograd.get_gradients"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest._mixed_requires_grad": {
  "lineno": 1640,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest._nested_python_udf": {
  "lineno": 1470,
  "symbols_in_volume": [
   "torch.chain_matmul",
   "torch.distributed.rpc.rpc_sync",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest._nested_rpc_call_backward_error": {
  "lineno": 1396,
  "symbols_in_volume": [
   "torch.chain_matmul",
   "torch.distributed.rpc.rpc_sync",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest._next_rank": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest._python_udf_with_backward_error": {
  "lineno": 1390,
  "symbols_in_volume": [
   "torch.chain_matmul"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest._run_test_backward_unused_send_function_in_thread": {
  "lineno": 1143,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.autograd.backward",
   "torch.distributed.autograd.context",
   "torch.distributed.rpc.rpc_sync",
   "torch.mul",
   "torch.rand",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest._slow_add": {
  "lineno": 2099,
  "symbols_in_volume": [
   "time.sleep"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest._test_backward_rref": {
  "lineno": 933,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.autograd.backward",
   "torch.distributed.autograd.context",
   "torch.distributed.autograd.get_gradients",
   "torch.distributed.rpc.remote",
   "torch.distributed.rpc.rpc_sync",
   "torch.ones",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest._test_backward_simple": {
  "lineno": 903,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.autograd.context",
   "torch.rand"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest._test_grad_only_on_return_value": {
  "lineno": 638,
  "symbols_in_volume": [
   "torch.distributed.autograd.backward",
   "torch.distributed.autograd.context",
   "torch.distributed.autograd.get_gradients",
   "torch.distributed.barrier",
   "torch.distributed.rpc.remote",
   "torch.distributed.rpc.rpc_sync",
   "torch.ones_like",
   "torch.testing._internal.dist_utils.initialize_pg",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest._test_graph": {
  "lineno": 355,
  "symbols_in_volume": [
   "torch.distributed.autograd._current_context",
   "torch.distributed.autograd._retrieve_context",
   "torch.distributed.autograd.context",
   "torch.distributed.barrier",
   "torch.distributed.rpc.remote",
   "torch.distributed.rpc.rpc_sync",
   "torch.ones",
   "torch.testing._internal.dist_utils.initialize_pg",
   "torch.testing._internal.dist_utils.worker_name",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest._test_graph_for_py_nested_call": {
  "lineno": 427,
  "symbols_in_volume": [
   "torch.distributed.autograd._current_context",
   "torch.distributed.autograd._retrieve_context",
   "torch.distributed.autograd.context",
   "torch.distributed.barrier",
   "torch.distributed.rpc.remote",
   "torch.distributed.rpc.rpc_sync",
   "torch.ones",
   "torch.testing._internal.dist_utils.initialize_pg",
   "torch.testing._internal.dist_utils.worker_name",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest._test_graph_for_py_nested_call_itself": {
  "lineno": 514,
  "symbols_in_volume": [
   "torch.distributed.autograd._current_context",
   "torch.distributed.autograd._retrieve_context",
   "torch.distributed.autograd.context",
   "torch.distributed.barrier",
   "torch.distributed.rpc.remote",
   "torch.distributed.rpc.rpc_sync",
   "torch.ones",
   "torch.testing._internal.dist_utils.initialize_pg",
   "torch.testing._internal.dist_utils.worker_name",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest._test_nested_backward_accumulate_grads": {
  "lineno": 1800,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_sync",
   "torch.matmul",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest._test_no_graph_with_tensors_not_require_grad": {
  "lineno": 592,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.autograd._current_context",
   "torch.distributed.autograd._retrieve_context",
   "torch.distributed.autograd.context",
   "torch.distributed.barrier",
   "torch.distributed.rpc.remote",
   "torch.distributed.rpc.rpc_sync",
   "torch.ones",
   "torch.testing._internal.dist_utils.initialize_pg",
   "torch.testing._internal.dist_utils.worker_name",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest._test_rpc_complex_args": {
  "lineno": 675,
  "symbols_in_volume": [
   "torch.distributed.autograd._current_context",
   "torch.distributed.autograd.context",
   "torch.distributed.rpc.remote",
   "torch.distributed.rpc.rpc_sync",
   "torch.ones",
   "torch.stack",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest._test_trainer_ps": {
  "lineno": 996,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.autograd.get_gradients",
   "torch.distributed.rpc.remote",
   "torch.distributed.rpc.rpc_async",
   "torch.futures.wait_all",
   "torch.ones",
   "torch.testing._internal.dist_utils.worker_name",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest._verify_backwards": {
  "lineno": 852,
  "symbols_in_volume": [
   "torch.autograd.backward"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest._verify_backwards_remote": {
  "lineno": 859,
  "symbols_in_volume": [
   "torch.distributed.autograd.backward",
   "torch.distributed.autograd.get_gradients"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest._verify_graph_for_first_rpc_call": {
  "lineno": 270,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest._verify_graph_for_nested_rpc_call": {
  "lineno": 329,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest._verify_graph_for_rpc_call_exec": {
  "lineno": 298,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest._workload_thread": {
  "lineno": 1741,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.autograd.backward",
   "torch.distributed.autograd.context",
   "torch.distributed.rpc.rpc_sync",
   "torch.matmul",
   "torch.mul",
   "torch.rand"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.context_cleanup_test_helper": {
  "lineno": 721,
  "symbols_in_volume": [
   "torch.distributed.autograd._retrieve_context",
   "torch.distributed.autograd.context",
   "torch.distributed.barrier",
   "torch.distributed.rpc.rpc_sync",
   "torch.testing._internal.dist_utils.initialize_pg",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_async_dist_autograd": {
  "lineno": 1753,
  "symbols_in_volume": [
   "threading.Thread",
   "torch.distributed.barrier",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.initialize_pg"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_autograd_context": {
  "lineno": 221,
  "symbols_in_volume": [
   "torch.distributed.autograd._get_max_id",
   "torch.distributed.autograd._retrieve_context",
   "torch.distributed.autograd.context",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_backward_accumulate_grads": {
  "lineno": 1775,
  "symbols_in_volume": [
   "torch.autograd.backward",
   "torch.distributed.autograd.backward",
   "torch.distributed.autograd.context",
   "torch.distributed.autograd.get_gradients",
   "torch.distributed.rpc.rpc_sync",
   "torch.matmul",
   "torch.rand",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_backward_autograd_engine_error": {
  "lineno": 1172,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.autograd.backward",
   "torch.distributed.autograd.context",
   "torch.distributed.rpc.rpc_sync",
   "torch.div",
   "torch.matmul",
   "torch.mul",
   "torch.rand",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_backward_complex_python_udf": {
  "lineno": 1373,
  "symbols_in_volume": [
   "torch.distributed.autograd.context",
   "torch.rand",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_backward_different_dtypes": {
  "lineno": 1317,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.autograd.context",
   "torch.float32",
   "torch.float64",
   "torch.rand",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_backward_different_tensor_dims": {
  "lineno": 1083,
  "symbols_in_volume": [
   "torch.chain_matmul",
   "torch.distributed.autograd.context",
   "torch.matmul",
   "torch.rand",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_backward_invalid_args": {
  "lineno": 1270,
  "symbols_in_volume": [
   "torch.distributed.autograd.backward",
   "torch.distributed.autograd.context",
   "torch.rand",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_backward_multiple_output_tensors": {
  "lineno": 1124,
  "symbols_in_volume": [
   "torch.chain_matmul",
   "torch.distributed.autograd.context",
   "torch.rand",
   "torch.split",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_backward_multiple_roots": {
  "lineno": 1301,
  "symbols_in_volume": [
   "torch.add",
   "torch.cos",
   "torch.distributed.autograd.context",
   "torch.div",
   "torch.mul",
   "torch.rand",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_backward_multiple_round_trips": {
  "lineno": 1058,
  "symbols_in_volume": [
   "torch.add",
   "torch.bmm",
   "torch.distributed.autograd.context",
   "torch.matmul",
   "torch.mul",
   "torch.rand",
   "torch.stack",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_backward_no_grad_on_tensor": {
  "lineno": 876,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.autograd.backward",
   "torch.distributed.autograd.context",
   "torch.distributed.rpc.rpc_sync",
   "torch.rand",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_backward_node_failure": {
  "lineno": 1202,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.autograd.backward",
   "torch.distributed.autograd.context",
   "torch.distributed.barrier",
   "torch.distributed.rpc._set_rpc_timeout",
   "torch.distributed.rpc.rpc_sync",
   "torch.rand",
   "torch.testing._internal.common_utils.IS_MACOS",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.initialize_pg",
   "torch.testing._internal.dist_utils.wait_until_node_failure",
   "torch.testing._internal.dist_utils.worker_name",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_backward_node_failure_python_udf": {
  "lineno": 1424,
  "symbols_in_volume": [
   "datetime.timedelta",
   "torch.distributed.autograd.backward",
   "torch.distributed.autograd.context",
   "torch.distributed.barrier",
   "torch.distributed.distributed_c10d._get_default_store",
   "torch.distributed.rpc._set_rpc_timeout",
   "torch.distributed.rpc.rpc_sync",
   "torch.rand",
   "torch.testing._internal.common_utils.IS_MACOS",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.initialize_pg",
   "torch.testing._internal.dist_utils.wait_until_node_failure",
   "torch.testing._internal.dist_utils.worker_name",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_backward_python_udf_error": {
  "lineno": 1407,
  "symbols_in_volume": [
   "torch.distributed.autograd.backward",
   "torch.distributed.autograd.context",
   "torch.distributed.rpc.rpc_sync",
   "torch.rand",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_backward_rref": {
  "lineno": 968,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_backward_rref_multi": {
  "lineno": 974,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_backward_rref_nested": {
  "lineno": 981,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_backward_simple": {
  "lineno": 920,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_backward_simple_python_udf": {
  "lineno": 1330,
  "symbols_in_volume": [
   "torch.distributed.autograd.context",
   "torch.rand",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_backward_simple_script_call": {
  "lineno": 1345,
  "symbols_in_volume": [
   "torch.distributed.autograd.context",
   "torch.rand",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_backward_simple_self": {
  "lineno": 924,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_backward_unused_send_function": {
  "lineno": 1159,
  "symbols_in_volume": [
   "threading.Thread",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_backward_unused_tensors": {
  "lineno": 1102,
  "symbols_in_volume": [
   "torch.distributed.autograd.context",
   "torch.matmul",
   "torch.narrow",
   "torch.rand",
   "torch.stack",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_backward_verify_hooks": {
  "lineno": 1864,
  "symbols_in_volume": [
   "torch.distributed.autograd.context",
   "torch.matmul",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_backward_without_context": {
  "lineno": 1239,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.autograd.backward",
   "torch.distributed.rpc.rpc_sync",
   "torch.rand",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_backward_without_rpc": {
  "lineno": 1254,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.autograd.backward",
   "torch.distributed.autograd.context",
   "torch.distributed.autograd.get_gradients",
   "torch.ones",
   "torch.rand",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_backwards_nested_python_udf": {
  "lineno": 1477,
  "symbols_in_volume": [
   "torch.autograd.backward",
   "torch.chain_matmul",
   "torch.distributed.autograd.backward",
   "torch.distributed.autograd.context",
   "torch.distributed.autograd.get_gradients",
   "torch.distributed.rpc.rpc_sync",
   "torch.rand",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_clean_context_during_backward": {
  "lineno": 1525,
  "symbols_in_volume": [
   "sys.exit",
   "torch.add",
   "torch.distributed.autograd._new_context",
   "torch.distributed.autograd.backward",
   "torch.distributed.barrier",
   "torch.distributed.rpc.rpc_sync",
   "torch.distributed.rpc.shutdown",
   "torch.rand",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.initialize_pg",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_context_cleanup_nested_rpc": {
  "lineno": 773,
  "symbols_in_volume": [
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_context_cleanup_no_tensors": {
  "lineno": 769,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_context_cleanup_tensor_no_grad": {
  "lineno": 764,
  "symbols_in_volume": [
   "torch.add",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_context_cleanup_tensor_with_grad": {
  "lineno": 758,
  "symbols_in_volume": [
   "torch.add",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_debug_info": {
  "lineno": 1683,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.autograd._get_debug_info",
   "torch.distributed.autograd.backward",
   "torch.distributed.autograd.context",
   "torch.distributed.barrier",
   "torch.distributed.rpc.rpc_sync",
   "torch.rand",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.initialize_pg",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_dist_autograd_profiling": {
  "lineno": 815,
  "symbols_in_volume": [
   "torch.add",
   "torch.autograd.profiler.profile",
   "torch.distributed.autograd.backward",
   "torch.distributed.autograd.context",
   "torch.distributed.rpc.rpc_sync",
   "torch.rand",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_dist_autograd_profiling.get_event": {
  "lineno": 826,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_embedding_bag_with_no_grad_tensors": {
  "lineno": 1598,
  "symbols_in_volume": [
   "torch.LongTensor",
   "torch.autograd.backward",
   "torch.distributed.autograd.backward",
   "torch.distributed.autograd.context",
   "torch.distributed.rpc.remote",
   "torch.distributed.rpc.rpc_sync",
   "torch.nn.EmbeddingBag",
   "torch.rand",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_error_in_context": {
  "lineno": 840,
  "symbols_in_volume": [
   "torch.distributed.autograd.context",
   "torch.distributed.rpc.rpc_sync",
   "torch.matmul",
   "torch.rand",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_gpu_simple": {
  "lineno": 2134,
  "symbols_in_volume": [
   "torch.distributed.autograd.backward",
   "torch.distributed.autograd.context",
   "torch.distributed.autograd.get_gradients",
   "torch.rand",
   "torch.testing._internal.common_distributed.skip_if_lt_x_gpu",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_gpu_to_cpu_continuation": {
  "lineno": 2148,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.autograd.context",
   "torch.rand",
   "torch.testing._internal.common_distributed.skip_if_lt_x_gpu",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_gpu_to_cpu_continuation_gpu_root": {
  "lineno": 2172,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.autograd.context",
   "torch.rand",
   "torch.testing._internal.common_distributed.skip_if_lt_x_gpu",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_grad_copy_sparse_indices_extra_ref": {
  "lineno": 2027,
  "symbols_in_volume": [
   "torch.distributed.autograd.backward",
   "torch.distributed.autograd.context",
   "torch.distributed.autograd.get_gradients",
   "torch.nn.functional.embedding_bag",
   "torch.randn",
   "torch.tensor",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_grad_copy_sparse_indices_extra_ref.MyFunc": {
  "lineno": 2030,
  "symbols_in_volume": [
   "torch.autograd.Function"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_grad_copy_sparse_indices_extra_ref.MyFunc.backward": {
  "lineno": 2039,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_grad_copy_sparse_indices_extra_ref.MyFunc.forward": {
  "lineno": 2035,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_grad_only_on_return_value": {
  "lineno": 667,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_grad_only_on_return_value_remote": {
  "lineno": 671,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_graph_for_builtin_call": {
  "lineno": 410,
  "symbols_in_volume": [
   "torch.add",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_graph_for_builtin_remote_call": {
  "lineno": 418,
  "symbols_in_volume": [
   "torch.add",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_graph_for_py_nested_call": {
  "lineno": 505,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_graph_for_py_nested_call_itself": {
  "lineno": 584,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_graph_for_py_nested_remote_call": {
  "lineno": 509,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_graph_for_py_nested_remote_call_itself": {
  "lineno": 588,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_graph_for_python_call": {
  "lineno": 414,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_graph_for_python_remote_call": {
  "lineno": 422,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_mixed_requires_grad": {
  "lineno": 1647,
  "symbols_in_volume": [
   "torch.distributed.autograd.backward",
   "torch.distributed.autograd.context",
   "torch.distributed.autograd.get_gradients",
   "torch.rand",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_multiple_backward": {
  "lineno": 1819,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.autograd.backward",
   "torch.distributed.autograd.context",
   "torch.distributed.rpc.rpc_sync",
   "torch.rand",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_multiple_backward_with_errors": {
  "lineno": 1833,
  "symbols_in_volume": [
   "torch.distributed.autograd.backward",
   "torch.distributed.autograd.context",
   "torch.distributed.barrier",
   "torch.distributed.rpc.rpc_sync",
   "torch.rand",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.initialize_pg"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_nested_backward_accumulate_grads": {
  "lineno": 1804,
  "symbols_in_volume": [
   "torch.distributed.autograd.backward",
   "torch.distributed.autograd.context",
   "torch.distributed.rpc.rpc_sync",
   "torch.rand",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_nested_context": {
  "lineno": 247,
  "symbols_in_volume": [
   "torch.distributed.autograd.context",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_no_grad_copy": {
  "lineno": 1880,
  "symbols_in_volume": [
   "torch.distributed.autograd.backward",
   "torch.distributed.autograd.context",
   "torch.distributed.autograd.get_gradients",
   "torch.randn",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_no_grad_copy.MyFunc": {
  "lineno": 1886,
  "symbols_in_volume": [
   "torch.autograd.Function"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_no_grad_copy.MyFunc.backward": {
  "lineno": 1893,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_no_grad_copy.MyFunc.forward": {
  "lineno": 1889,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_no_grad_copy.MyFuncSingleGrad": {
  "lineno": 1898,
  "symbols_in_volume": [
   "torch.autograd.Function"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_no_grad_copy.MyFuncSingleGrad.backward": {
  "lineno": 1905,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_no_grad_copy.MyFuncSingleGrad.forward": {
  "lineno": 1901,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_no_grad_copy.NonContGradFunc": {
  "lineno": 1910,
  "symbols_in_volume": [
   "torch.autograd.Function"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_no_grad_copy.NonContGradFunc.backward": {
  "lineno": 1916,
  "symbols_in_volume": [
   "torch.ones"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_no_grad_copy.NonContGradFunc.forward": {
  "lineno": 1911,
  "symbols_in_volume": [
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_no_grad_copy_sparse": {
  "lineno": 1953,
  "symbols_in_volume": [
   "torch.distributed.autograd.backward",
   "torch.distributed.autograd.context",
   "torch.distributed.autograd.get_gradients",
   "torch.nn.functional.embedding_bag",
   "torch.randn",
   "torch.tensor",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_no_grad_copy_sparse.MyFunc": {
  "lineno": 1956,
  "symbols_in_volume": [
   "torch.autograd.Function"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_no_grad_copy_sparse.MyFunc.backward": {
  "lineno": 1963,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_no_grad_copy_sparse.MyFunc.forward": {
  "lineno": 1959,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_no_grad_copy_sparse.NonContGradFunc": {
  "lineno": 1968,
  "symbols_in_volume": [
   "torch.autograd.Function"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_no_grad_copy_sparse.NonContGradFunc.backward": {
  "lineno": 1975,
  "symbols_in_volume": [
   "torch.Size",
   "torch.long",
   "torch.ones",
   "torch.rand",
   "torch.sparse.FloatTensor"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_no_grad_copy_sparse.NonContGradFunc.forward": {
  "lineno": 1971,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_no_graph_with_tensors_not_require_grad": {
  "lineno": 630,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_no_graph_with_tensors_not_require_grad_remote": {
  "lineno": 634,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_post_hooks": {
  "lineno": 2068,
  "symbols_in_volume": [
   "torch.distributed.autograd.backward",
   "torch.distributed.autograd.context",
   "torch.distributed.autograd.get_gradients",
   "torch.rand",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_post_hooks.post_hook_add_one": {
  "lineno": 2072,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_post_hooks.post_hook_add_two": {
  "lineno": 2076,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_remote_complex_args": {
  "lineno": 717,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_rpc_complex_args": {
  "lineno": 713,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_thread_local_context_id": {
  "lineno": 2106,
  "symbols_in_volume": [
   "torch.distributed.autograd.backward",
   "torch.distributed.autograd.context",
   "torch.distributed.rpc.remote",
   "torch.distributed.rpc.rpc_sync",
   "torch.rand",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_trainer_ps": {
  "lineno": 1043,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_trainer_ps_torchscript_functions": {
  "lineno": 1047,
  "symbols_in_volume": [
   "torch.distributed.rpc.api._ignore_rref_leak",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest.test_worker_ids_recorded": {
  "lineno": 783,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.autograd._current_context",
   "torch.distributed.autograd.context",
   "torch.distributed.rpc.rpc_sync",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.ExecMode": {
  "lineno": 181,
  "symbols_in_volume": [
   "enum.Enum"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.FaultyAgentDistAutogradTest": {
  "lineno": 2196,
  "symbols_in_volume": [
   "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture.RpcAgentTestFixture"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.FaultyAgentDistAutogradTest.context_cleanup_test_helper": {
  "lineno": 2199,
  "symbols_in_volume": [
   "torch.distributed.autograd._retrieve_context",
   "torch.distributed.autograd.context",
   "torch.distributed.barrier",
   "torch.distributed.rpc.rpc_sync",
   "torch.testing._internal.dist_utils.initialize_pg",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.FaultyAgentDistAutogradTest.test_context_cleanup_tensor_with_grad": {
  "lineno": 2227,
  "symbols_in_volume": [
   "torch.add",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.FaultyAgentDistAutogradTest.test_verify_backend_options": {
  "lineno": 2233,
  "symbols_in_volume": [
   "torch.distributed.rpc.backend_registry.BackendType.FAULTY_PROCESS_GROUP",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.SimulateBackwardError": {
  "lineno": 165,
  "symbols_in_volume": [
   "torch.autograd.Function"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.SimulateBackwardError.backward": {
  "lineno": 172,
  "symbols_in_volume": [
   "torch.autograd.function.once_differentiable"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.SimulateBackwardError.forward": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test._all_contexts_cleaned_up": {
  "lineno": 126,
  "symbols_in_volume": [
   "time.time",
   "torch.distributed.autograd._retrieve_context"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test._check_rpc_done": {
  "lineno": 53,
  "symbols_in_volume": [
   "time.sleep"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test._compare_owner_value": {
  "lineno": 63,
  "symbols_in_volume": [
   "torch.distributed.autograd.get_gradients",
   "torch.equal"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test._run_trainer": {
  "lineno": 146,
  "symbols_in_volume": [
   "torch.distributed.autograd.backward",
   "torch.distributed.autograd.context",
   "torch.distributed.rpc.rpc_sync"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test._run_trainer_torchscript": {
  "lineno": 156,
  "symbols_in_volume": [
   "torch.distributed.autograd.backward",
   "torch.distributed.autograd.context",
   "torch.distributed.rpc.rpc_sync"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test._set_rpc_done": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test._torch_ones": {
  "lineno": 58,
  "symbols_in_volume": [
   "torch.ones"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.create_tensor": {
  "lineno": 68,
  "symbols_in_volume": [
   "torch.ones"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.create_torchscript_tensor": {
  "lineno": 72,
  "symbols_in_volume": [
   "torch.jit.script",
   "torch.ones"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.my_nested_rref_add": {
  "lineno": 103,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_sync"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.my_py_add": {
  "lineno": 78,
  "symbols_in_volume": [
   "torch.add"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.my_py_nested_call": {
  "lineno": 111,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_sync",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.my_rref_add": {
  "lineno": 86,
  "symbols_in_volume": [
   "torch.add"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.my_scalar_add": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.my_script_add": {
  "lineno": 91,
  "symbols_in_volume": [
   "torch.add",
   "torch.jit.script"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.my_script_ref_add": {
  "lineno": 96,
  "symbols_in_volume": [
   "torch.add",
   "torch.jit.script"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_autograd_test.ret_requires_grad": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_optimizer_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.testing._internal.distributed.rpc.dist_optimizer_test.DistOptimizerTest": {
  "lineno": 95,
  "symbols_in_volume": [
   "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture.RpcAgentTestFixture"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.rpc.dist_optimizer_test.DistOptimizerTest.test_dist_optim": {
  "lineno": 140,
  "symbols_in_volume": [
   "torch.Generator",
   "torch.add",
   "torch.distributed.autograd.backward",
   "torch.distributed.autograd.context",
   "torch.distributed.optim.DistributedOptimizer",
   "torch.distributed.rpc.remote",
   "torch.optim.SGD",
   "torch.rand",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_optimizer_test.DistOptimizerTest.test_dist_optim_exception": {
  "lineno": 96,
  "symbols_in_volume": [
   "torch.Generator",
   "torch.add",
   "torch.distributed.autograd.backward",
   "torch.distributed.autograd.context",
   "torch.distributed.optim.DistributedOptimizer",
   "torch.distributed.rpc.remote",
   "torch.rand",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_optimizer_test.DistOptimizerTest.test_dist_optim_exception_on_constructor": {
  "lineno": 124,
  "symbols_in_volume": [
   "torch.distributed.optim.DistributedOptimizer",
   "torch.distributed.rpc.remote",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_optimizer_test.DistOptimizerTest.test_dist_optim_functional": {
  "lineno": 203,
  "symbols_in_volume": [
   "torch.Generator",
   "torch.add",
   "torch.distributed.autograd.backward",
   "torch.distributed.autograd.context",
   "torch.distributed.optim.DistributedOptimizer",
   "torch.distributed.rpc.remote",
   "torch.optim.Adagrad",
   "torch.rand",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_optimizer_test.FailingOptimizer": {
  "lineno": 34,
  "symbols_in_volume": [
   "torch.optim.Optimizer"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.rpc.dist_optimizer_test.FailingOptimizer.__init__": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_optimizer_test.FailingOptimizer.step": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_optimizer_test.MyModule": {
  "lineno": 15,
  "symbols_in_volume": [
   "threading.Lock"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.rpc.dist_optimizer_test.MyModule.__init__": {
  "lineno": 18,
  "symbols_in_volume": [
   "torch.Generator",
   "torch.rand"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_optimizer_test.MyModule.forward": {
  "lineno": 27,
  "symbols_in_volume": [
   "torch.mm"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_optimizer_test.MyModule.get_w": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_optimizer_test.OptimizerFailingOnConstructor": {
  "lineno": 42,
  "symbols_in_volume": [
   "torch.optim.Optimizer"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.rpc.dist_optimizer_test.OptimizerFailingOnConstructor.__init__": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_optimizer_test.OptimizerFailingOnConstructor.step": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_optimizer_test._call_method": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_optimizer_test.remote_method": {
  "lineno": 55,
  "symbols_in_volume": [
   "torch.distributed.rpc.remote"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.dist_optimizer_test.rpc_async_method": {
  "lineno": 75,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_async"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.faulty_rpc_agent_test_fixture": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.testing._internal.distributed.rpc.faulty_rpc_agent_test_fixture.FaultyRpcAgentTestFixture": {
  "lineno": 22,
  "symbols_in_volume": [
   "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture.RpcAgentTestFixture"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.rpc.faulty_rpc_agent_test_fixture.FaultyRpcAgentTestFixture.__init__": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.faulty_rpc_agent_test_fixture.FaultyRpcAgentTestFixture.get_shutdown_error_regex": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.faulty_rpc_agent_test_fixture.FaultyRpcAgentTestFixture.get_timeout_error_regex": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.faulty_rpc_agent_test_fixture.FaultyRpcAgentTestFixture.rpc_backend": {
  "lineno": 28,
  "symbols_in_volume": [
   "torch.distributed.rpc.backend_registry.BackendType"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.faulty_rpc_agent_test_fixture.FaultyRpcAgentTestFixture.rpc_backend_options": {
  "lineno": 34,
  "symbols_in_volume": [
   "torch.distributed.rpc.backend_registry.construct_rpc_backend_options"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.faulty_rpc_agent_test_fixture.FaultyRpcAgentTestFixture.setup_fault_injection": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.testing._internal.distributed.rpc.jit.dist_autograd_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.testing._internal.distributed.rpc.jit.dist_autograd_test.JitDistAutogradTest": {
  "lineno": 31,
  "symbols_in_volume": [
   "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture.RpcAgentTestFixture"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.rpc.jit.dist_autograd_test.JitDistAutogradTest.test_dist_backward": {
  "lineno": 56,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.autograd.context",
   "torch.distributed.rpc.rpc_sync",
   "torch.rand",
   "torch.testing.FileCheck",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.dist_autograd_test.JitDistAutogradTest.test_dist_backward.dist_backward_script": {
  "lineno": 61,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.distributed.autograd.backward",
   "torch.jit.script"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.dist_autograd_test.JitDistAutogradTest.test_get_gradients": {
  "lineno": 32,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.autograd.backward",
   "torch.distributed.autograd.context",
   "torch.ones",
   "torch.rand",
   "torch.testing.FileCheck",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.dist_autograd_test.JitDistAutogradTest.test_get_gradients.dist_get_gradients": {
  "lineno": 36,
  "symbols_in_volume": [
   "torch.distributed.autograd.get_gradients",
   "torch.jit.script"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.dist_autograd_test.JitDistAutogradTest.test_jit_fork_within_context": {
  "lineno": 73,
  "symbols_in_volume": [
   "torch.distributed.autograd.backward",
   "torch.distributed.autograd.context",
   "torch.distributed.autograd.get_gradients",
   "torch.rand",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.dist_autograd_test.JitDistAutogradTest.test_restore_context_after_swtich_to_jit_thread": {
  "lineno": 88,
  "symbols_in_volume": [
   "torch.distributed.autograd.backward",
   "torch.distributed.autograd.context",
   "torch.distributed.autograd.get_gradients",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.dist_autograd_test.JitDistAutogradTest.test_restore_context_after_swtich_to_jit_thread.forward_script": {
  "lineno": 93,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.distributed.rpc.rpc_async",
   "torch.jit.script",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.dist_autograd_test.fork_add": {
  "lineno": 25,
  "symbols_in_volume": [
   "torch.jit._fork",
   "torch.jit._wait",
   "torch.jit.script"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.dist_autograd_test.local_add": {
  "lineno": 15,
  "symbols_in_volume": [
   "torch.add",
   "torch.jit.script"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.dist_autograd_test.remote_add": {
  "lineno": 20,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_async",
   "torch.jit.script"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.FutureTypingTest": {
  "lineno": 287,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.FutureTypingTest.test_future_passed_between_python_and_jit": {
  "lineno": 288,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_async",
   "torch.tensor",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.FutureTypingTest.test_future_passed_between_python_and_jit.future_return_to_python": {
  "lineno": 301,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.distributed.rpc.rpc_async",
   "torch.futures.Future",
   "torch.jit.script",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.FutureTypingTest.test_future_passed_between_python_and_jit.future_wait_in_script": {
  "lineno": 295,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.futures.Future",
   "torch.jit.script"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.FutureTypingTest.test_future_python_annotation": {
  "lineno": 312,
  "symbols_in_volume": [
   "torch.add",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.FutureTypingTest.test_future_python_annotation.python_return_future": {
  "lineno": 322,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.add",
   "torch.distributed.rpc.rpc_async",
   "torch.futures.Future",
   "torch.jit.ignore"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.FutureTypingTest.test_future_python_annotation.script_use_future": {
  "lineno": 327,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.jit.script"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcOpTest": {
  "lineno": 527,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcOpTest.test_all_kwargs_are_populated_by_defaults": {
  "lineno": 529,
  "symbols_in_volume": [
   "torch.tensor",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcOpTest.test_args_and_kwargs_contain_different_types": {
  "lineno": 579,
  "symbols_in_volume": [
   "torch.tensor",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcOpTest.test_args_and_kwargs_contain_different_types.script_rpc_async_call_with_assorted_types": {
  "lineno": 586,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_async",
   "torch.jit.script",
   "torch.tensor",
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcOpTest.test_args_kwargs_are_neither_passed": {
  "lineno": 633,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcOpTest.test_args_kwargs_are_neither_passed.script_rpc_async_call_without_args_kwargs_passed": {
  "lineno": 640,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_async",
   "torch.jit.script"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcOpTest.test_call_python_function_remotely_from_script_not_supported": {
  "lineno": 728,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcOpTest.test_call_python_function_remotely_from_script_not_supported.rpc_async_call_remote_py_function_in_torchscript": {
  "lineno": 735,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_async",
   "torch.jit.script"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcOpTest.test_call_script_function_that_not_exists_remotely_from_script": {
  "lineno": 775,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcOpTest.test_call_script_function_that_not_exists_remotely_from_script.nonexisting_script": {
  "lineno": 782,
  "symbols_in_volume": [
   "torch.jit.script"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcOpTest.test_call_script_function_that_not_exists_remotely_from_script.rpc_async_call_remote_nonexisting_torchscript_in_torchscript": {
  "lineno": 786,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_async",
   "torch.jit.script"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcOpTest.test_call_script_function_that_raises_remotely_from_script": {
  "lineno": 749,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcOpTest.test_call_script_function_that_raises_remotely_from_script.rpc_async_call_remote_raising_torchscript_in_torchscript": {
  "lineno": 759,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_async",
   "torch.jit.script"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcOpTest.test_kwargs_not_passed": {
  "lineno": 612,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcOpTest.test_kwargs_not_passed.script_rpc_async_call_without_kwargs_passed": {
  "lineno": 619,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_async",
   "torch.jit.script"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcOpTest.test_less_than_needed_args_are_specified": {
  "lineno": 653,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcOpTest.test_less_than_needed_args_are_specified.script_rpc_async_call_with_less_args": {
  "lineno": 663,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_async",
   "torch.jit.script",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcOpTest.test_more_than_needed_args_are_specified": {
  "lineno": 673,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcOpTest.test_more_than_needed_args_are_specified.script_rpc_async_call_with_more_args": {
  "lineno": 686,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_async",
   "torch.jit.script",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcOpTest.test_no_kwargs_are_populated_by_defaults": {
  "lineno": 561,
  "symbols_in_volume": [
   "torch.tensor",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcOpTest.test_some_kwargs_are_populated_by_defaults": {
  "lineno": 545,
  "symbols_in_volume": [
   "torch.tensor",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcOpTest.test_unexepected_kwarg_is_specified": {
  "lineno": 702,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcOpTest.test_unexepected_kwarg_is_specified.script_rpc_async_call_with_unexpected_kwarg": {
  "lineno": 710,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_async",
   "torch.jit.script",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcTest": {
  "lineno": 856,
  "symbols_in_volume": [
   "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture.RpcAgentTestFixture"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcTest.test_async_function_remote": {
  "lineno": 1274,
  "symbols_in_volume": [
   "torch.distributed.rpc.remote",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcTest.test_async_function_remote_multi": {
  "lineno": 1284,
  "symbols_in_volume": [
   "torch.distributed.rpc.remote",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcTest.test_async_function_simple": {
  "lineno": 1235,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_sync",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcTest.test_async_function_wrong_decorator_order": {
  "lineno": 1252,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcTest.test_async_function_wrong_decorator_order.async_wrong_decorator_order": {
  "lineno": 1267,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.distributed.rpc.functions.async_execution",
   "torch.distributed.rpc.rpc_async",
   "torch.futures.Future",
   "torch.jit.script"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcTest.test_async_function_wrong_return_type": {
  "lineno": 1245,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_sync",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcTest.test_async_function_wrong_return_type_remote": {
  "lineno": 1301,
  "symbols_in_volume": [
   "torch.distributed.rpc.remote",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcTest.test_async_script_throw": {
  "lineno": 1041,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_async",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcTest.test_async_script_udf": {
  "lineno": 1002,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_async",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcTest.test_call_fork_in_jit_with_profiling": {
  "lineno": 1224,
  "symbols_in_volume": [
   "torch.autograd.profiler.profile",
   "torch.autograd.profiler.record_function",
   "torch.testing._internal.dist_utils.get_function_event"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcTest.test_call_rpc_with_profiling": {
  "lineno": 1067,
  "symbols_in_volume": [
   "torch._jit_internal._qualified_name",
   "torch.autograd.profiler.profile",
   "torch.autograd.profiler.record_function",
   "torch.distributed.rpc.internal.RPCExecMode.ASYNC",
   "torch.distributed.rpc.internal._build_rpc_profiling_key",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.get_function_event"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcTest.test_callback_chain": {
  "lineno": 1023,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_async",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcTest.test_callback_chain.callback": {
  "lineno": 1028,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcTest.test_callback_simple": {
  "lineno": 1011,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_async",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcTest.test_callback_simple.callback": {
  "lineno": 1013,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcTest.test_callback_with_exception": {
  "lineno": 1051,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_async",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcTest.test_callback_with_exception.callback": {
  "lineno": 1053,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcTest.test_load_script_module_with_pickled_rref": {
  "lineno": 952,
  "symbols_in_volume": [
   "io.BytesIO",
   "torch.distributed.rpc._disable_jit_rref_pickle",
   "torch.distributed.rpc._enable_jit_rref_pickle",
   "torch.distributed.rpc.rpc_sync",
   "torch.jit.save",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcTest.test_record_function_jit_end_callbacks_with_fork": {
  "lineno": 1207,
  "symbols_in_volume": [
   "torch.autograd.profiler.profile",
   "torch.autograd.profiler.record_function",
   "torch.jit._fork",
   "torch.testing._internal.dist_utils.get_function_event"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcTest.test_record_function_on_caller_rpc_async": {
  "lineno": 1136,
  "symbols_in_volume": [
   "torch._jit_internal._qualified_name",
   "torch.autograd.profiler.profile",
   "torch.distributed.rpc.internal.RPCExecMode.ASYNC_JIT",
   "torch.distributed.rpc.internal._build_rpc_profiling_key",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcTest.test_remote_script_module": {
  "lineno": 915,
  "symbols_in_volume": [
   "torch.distributed.rpc.api._ignore_rref_leak",
   "torch.distributed.rpc.remote",
   "torch.distributed.rpc.rpc_sync",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcTest.test_remote_script_throw": {
  "lineno": 983,
  "symbols_in_volume": [
   "torch.distributed.rpc.remote",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcTest.test_remote_script_udf": {
  "lineno": 993,
  "symbols_in_volume": [
   "torch.distributed.rpc.remote",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcTest.test_rpc_async_jit_profiled": {
  "lineno": 1089,
  "symbols_in_volume": [
   "torch._jit_internal._qualified_name",
   "torch.autograd.profiler.profile",
   "torch.distributed.rpc.internal.RPCExecMode.ASYNC_JIT",
   "torch.distributed.rpc.internal._build_rpc_profiling_key",
   "torch.tensor",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcTest.test_rpc_torchscript_record_function": {
  "lineno": 1173,
  "symbols_in_volume": [
   "torch._jit_internal._qualified_name",
   "torch.autograd.profiler.profile",
   "torch.distributed.rpc.internal.RPCExecMode.ASYNC_JIT",
   "torch.distributed.rpc.internal._build_rpc_profiling_key",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcTest.test_rref_jit_pickle_not_supported": {
  "lineno": 972,
  "symbols_in_volume": [
   "torch.testing._internal.common_utils.TemporaryFileName",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcTest.test_torchscript_function": {
  "lineno": 864,
  "symbols_in_volume": [
   "torch.distributed.rpc.remote",
   "torch.distributed.rpc.rpc_sync",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcTest.test_torchscript_function_exception": {
  "lineno": 878,
  "symbols_in_volume": [
   "torch.distributed.rpc.remote",
   "torch.distributed.rpc.rpc_sync",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcTest.test_torchscript_functions_not_supported": {
  "lineno": 887,
  "symbols_in_volume": [
   "torch.distributed.barrier",
   "torch.distributed.rpc.rpc_async",
   "torch.distributed.rpc.rpc_sync",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.initialize_pg",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.LocalRRefTest": {
  "lineno": 379,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.LocalRRefTest.test_create_local_script_class_rref_in_py": {
  "lineno": 380,
  "symbols_in_volume": [
   "torch.distributed.rpc.RRef",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.LocalRRefTest.test_create_local_script_module_rref_in_py": {
  "lineno": 390,
  "symbols_in_volume": [
   "torch.distributed.rpc.RRef",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.LocalRRefTest.test_return_local_script_class_rref_in_py_and_use_in_script": {
  "lineno": 410,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_sync",
   "torch.jit.script",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.LocalRRefTest.test_return_local_script_class_rref_in_py_and_use_in_script.use_rref_on_owner": {
  "lineno": 422,
  "symbols_in_volume": [
   "torch.distributed.rpc.RRef",
   "torch.distributed.rpc.rpc_async",
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.LocalRRefTest.test_return_local_script_module_rref_in_py_and_use_in_script": {
  "lineno": 440,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_sync",
   "torch.jit.script",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.LocalRRefTest.test_return_local_script_module_rref_in_py_and_use_in_script.use_rref_on_owner": {
  "lineno": 452,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.distributed.rpc.RRef",
   "torch.distributed.rpc.rpc_async",
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.MyModuleInterface": {
  "lineno": 345,
  "symbols_in_volume": [
   "torch.jit.interface",
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.MyModuleInterface.forward": {
  "lineno": 347,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.MyScriptClass": {
  "lineno": 336,
  "symbols_in_volume": [
   "torch.jit.script"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.MyScriptClass.__init__": {
  "lineno": 338,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.MyScriptClass.get_value": {
  "lineno": 341,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.MyScriptModule": {
  "lineno": 351,
  "symbols_in_volume": [
   "torch.jit.ScriptModule"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.MyScriptModule.__init__": {
  "lineno": 352,
  "symbols_in_volume": [
   "torch.ones"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.MyScriptModule.forward": {
  "lineno": 356,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.jit.script_method"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.MyScriptModuleWithRRefs": {
  "lineno": 216,
  "symbols_in_volume": [
   "torch.jit.ScriptModule"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.MyScriptModuleWithRRefs.__init__": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.MyScriptModuleWithRRefs.forward": {
  "lineno": 223,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.jit.script_method",
   "torch.ones"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.RRefAPITest": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.RRefAPITest._create_rref": {
  "lineno": 95,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.remote",
   "torch.testing._internal.dist_utils.worker_name",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.RRefAPITest.test_local_rref_local_value": {
  "lineno": 84,
  "symbols_in_volume": [
   "torch.distributed.rpc.remote",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.RRefAPITest.test_rref_is_owner": {
  "lineno": 56,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.RRefAPITest.test_rref_is_owner.rref_tensor_is_owner": {
  "lineno": 61,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.distributed.rpc.RRef",
   "torch.jit.script"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.RRefAPITest.test_rref_list_mutate": {
  "lineno": 119,
  "symbols_in_volume": [
   "torch.distributed.rpc.remote",
   "torch.distributed.rpc.rpc_sync",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.RRefAPITest.test_rref_local_value": {
  "lineno": 68,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.rpc_sync",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.RRefAPITest.test_user_rrefs_confirmed": {
  "lineno": 101,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_sync",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.RRefAPITest.test_user_rrefs_confirmed_remote": {
  "lineno": 110,
  "symbols_in_volume": [
   "torch.distributed.rpc.remote",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.RRefTypingTest": {
  "lineno": 242,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.RRefTypingTest.test_my_script_module_with_rrefs": {
  "lineno": 268,
  "symbols_in_volume": [
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.RRefTypingTest.test_rref_as_arg_and_return": {
  "lineno": 243,
  "symbols_in_volume": [
   "torch.distributed.rpc.remote",
   "torch.distributed.rpc.rpc_sync",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.RRefTypingTest.test_rref_python_annotation": {
  "lineno": 277,
  "symbols_in_volume": [
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.assorted_types_args_kwargs": {
  "lineno": 488,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.jit.script",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.async_add": {
  "lineno": 838,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.distributed.rpc.functions.async_execution",
   "torch.distributed.rpc.rpc_async",
   "torch.futures.Future",
   "torch.jit.script"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.async_wrong_type": {
  "lineno": 844,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.distributed.rpc.functions.async_execution",
   "torch.jit.script",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.call_fork_with_profiling": {
  "lineno": 205,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.jit._fork",
   "torch.jit.script",
   "torch.ops.profiler._call_end_callbacks_on_jit_fut",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.call_rpc_torchscript_with_record_function": {
  "lineno": 199,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.distributed.rpc.rpc_async",
   "torch.jit.script",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.call_rpc_with_profiling": {
  "lineno": 189,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.distributed.rpc.rpc_async",
   "torch.jit.script",
   "torch.ops.profiler._call_end_callbacks_on_jit_fut",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.construct_my_script_module": {
  "lineno": 810,
  "symbols_in_volume": [
   "torch.jit.script"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.list_create": {
  "lineno": 38,
  "symbols_in_volume": [
   "torch.jit.script",
   "typing.List"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.load_script_module_with_pickled_rref": {
  "lineno": 850,
  "symbols_in_volume": [
   "io.BytesIO",
   "torch.jit.load"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.my_script_module_init": {
  "lineno": 805,
  "symbols_in_volume": [
   "torch.jit.ignore"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.no_arg": {
  "lineno": 128,
  "symbols_in_volume": [
   "torch.jit.script"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.one_arg": {
  "lineno": 133,
  "symbols_in_volume": [
   "torch.jit.script"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.owner_create_rref_my_script_class": {
  "lineno": 361,
  "symbols_in_volume": [
   "torch.distributed.rpc.RRef"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.owner_create_rref_my_script_module": {
  "lineno": 365,
  "symbols_in_volume": [
   "torch.distributed.rpc.RRef"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.python_function": {
  "lineno": 474,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.raise_script": {
  "lineno": 500,
  "symbols_in_volume": [
   "torch.jit.script"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.record_function_on_caller_rpc_async": {
  "lineno": 147,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.autograd.profiler.record_function",
   "torch.distributed.rpc.rpc_async",
   "torch.jit.script",
   "torch.ones"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.return_rref": {
  "lineno": 170,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.distributed.rpc.RRef",
   "torch.jit.script"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.return_value": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.rpc_return_rref": {
  "lineno": 29,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.remote",
   "torch.ones"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.rref_list_mutate": {
  "lineno": 44,
  "symbols_in_volume": [
   "torch.distributed.rpc.RRef",
   "torch.jit.script",
   "typing.List"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.rref_local_value": {
  "lineno": 33,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.distributed.rpc.RRef",
   "torch.jit.script"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.rref_python_annotation": {
  "lineno": 232,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.distributed.rpc.RRef",
   "torch.jit.ignore"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.rref_script_annotation": {
  "lineno": 237,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.distributed.rpc.RRef",
   "torch.jit.script"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.rref_to_here": {
  "lineno": 165,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.distributed.rpc.RRef",
   "torch.jit.script"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.run_ref_script_module": {
  "lineno": 815,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.distributed.rpc.RRef",
   "torch.jit.script"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.save_rref": {
  "lineno": 828,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.distributed.rpc.RRef",
   "torch.jit.script",
   "torch.save"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.script_add": {
  "lineno": 833,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.jit.script"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.script_add_ones": {
  "lineno": 137,
  "symbols_in_volume": [
   "torch.add",
   "torch.jit.script",
   "torch.ones"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.script_add_ones_with_record_function": {
  "lineno": 141,
  "symbols_in_volume": [
   "torch.add",
   "torch.autograd.profiler.record_function",
   "torch.jit.script",
   "torch.ones"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.script_check_rref_confirmed": {
  "lineno": 823,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.distributed.rpc.RRef",
   "torch.jit.script"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.script_fork_wait_throw": {
  "lineno": 182,
  "symbols_in_volume": [
   "torch.jit._fork",
   "torch.jit._wait",
   "torch.jit.script"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.script_fork_wait_udf": {
  "lineno": 158,
  "symbols_in_volume": [
   "torch.jit._fork",
   "torch.jit._wait",
   "torch.jit.script"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.script_raise_func": {
  "lineno": 175,
  "symbols_in_volume": [
   "torch.jit.script"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.script_rpc_async_call": {
  "lineno": 505,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.distributed.rpc.rpc_async",
   "torch.jit.script",
   "typing.Dict",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.script_rpc_remote_call": {
  "lineno": 520,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.distributed.rpc.remote",
   "torch.jit.script",
   "typing.Dict",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.script_rpc_sync_call": {
  "lineno": 513,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.distributed.rpc.rpc_sync",
   "torch.jit.script",
   "typing.Dict",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.script_rref_get_value_my_script_class": {
  "lineno": 369,
  "symbols_in_volume": [
   "torch.distributed.rpc.RRef",
   "torch.jit.script"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.script_rref_run_forward_my_script_module": {
  "lineno": 374,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.distributed.rpc.RRef",
   "torch.jit.script"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.sleep": {
  "lineno": 25,
  "symbols_in_volume": [
   "time.sleep"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test.two_args_two_kwargs": {
  "lineno": 478,
  "symbols_in_volume": [
   "torch.jit.script",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test_faulty": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test_faulty.JitFaultyAgentRpcTest": {
  "lineno": 83,
  "symbols_in_volume": [
   "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture.RpcAgentTestFixture"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test_faulty.JitFaultyAgentRpcTest.test_remote_timeout_to_here_in_jit": {
  "lineno": 155,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.remote",
   "torch.tensor",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.wait_until_pending_futures_and_users_flushed"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test_faulty.JitFaultyAgentRpcTest.test_rref_timeout_pickle_in_jit": {
  "lineno": 188,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.remote",
   "torch.tensor",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.wait_until_pending_futures_and_users_flushed"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test_faulty.JitFaultyAgentRpcTest.test_rref_timeout_pickle_script_func": {
  "lineno": 204,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.remote",
   "torch.distributed.rpc.rpc_sync",
   "torch.tensor",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.wait_until_pending_futures_and_users_flushed"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test_faulty.JitFaultyAgentRpcTest.test_rref_to_here_timeout_in_jit": {
  "lineno": 172,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.remote",
   "torch.tensor",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test_faulty.JitFaultyAgentRpcTest.test_timeout_in_python": {
  "lineno": 122,
  "symbols_in_volume": [
   "torch.distributed.rpc._set_rpc_timeout",
   "torch.distributed.rpc.constants.DEFAULT_RPC_TIMEOUT_SEC",
   "torch.tensor",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test_faulty.JitFaultyAgentRpcTest.test_timeout_in_torchscript_function": {
  "lineno": 88,
  "symbols_in_volume": [
   "torch.distributed.rpc._set_rpc_timeout",
   "torch.distributed.rpc.constants.DEFAULT_RPC_TIMEOUT_SEC",
   "torch.tensor",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test_faulty.rpc_async_call_future_ret": {
  "lineno": 58,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.distributed.rpc.rpc_async",
   "torch.jit.script",
   "typing.Dict",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test_faulty.rpc_async_call_with_timeout": {
  "lineno": 35,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.distributed.rpc.rpc_async",
   "torch.jit.script",
   "typing.Dict",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test_faulty.rpc_async_call_with_timeout_future_ret": {
  "lineno": 47,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.distributed.rpc.rpc_async",
   "torch.jit.script",
   "typing.Dict",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test_faulty.rpc_async_with_rref_arg": {
  "lineno": 75,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_async",
   "torch.jit.script"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test_faulty.rref_to_here": {
  "lineno": 65,
  "symbols_in_volume": [
   "torch.jit.script"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test_faulty.rref_to_here_with_timeout": {
  "lineno": 70,
  "symbols_in_volume": [
   "torch.jit.script"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test_faulty.script_rpc_async_call": {
  "lineno": 26,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.distributed.rpc.rpc_async",
   "torch.jit.script",
   "typing.Dict",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.jit.rpc_test_faulty.two_args_two_kwargs": {
  "lineno": 16,
  "symbols_in_volume": [
   "torch.jit.script",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.process_group_agent_test_fixture": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.testing._internal.distributed.rpc.process_group_agent_test_fixture.ProcessGroupRpcAgentTestFixture": {
  "lineno": 7,
  "symbols_in_volume": [
   "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture.RpcAgentTestFixture"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.rpc.process_group_agent_test_fixture.ProcessGroupRpcAgentTestFixture.get_shutdown_error_regex": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.process_group_agent_test_fixture.ProcessGroupRpcAgentTestFixture.get_timeout_error_regex": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.process_group_agent_test_fixture.ProcessGroupRpcAgentTestFixture.rpc_backend": {
  "lineno": 8,
  "symbols_in_volume": [
   "torch.distributed.rpc.backend_registry.BackendType"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.process_group_agent_test_fixture.ProcessGroupRpcAgentTestFixture.rpc_backend_options": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture.RpcAgentTestFixture": {
  "lineno": 6,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture.RpcAgentTestFixture.get_shutdown_error_regex": {
  "lineno": 37,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture.RpcAgentTestFixture.get_timeout_error_regex": {
  "lineno": 46,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture.RpcAgentTestFixture.init_method": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture.RpcAgentTestFixture.rpc_backend": {
  "lineno": 17,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture.RpcAgentTestFixture.rpc_backend_options": {
  "lineno": 22,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture.RpcAgentTestFixture.setup_fault_injection": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture.RpcAgentTestFixture.world_size": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple",
   "torch.testing._internal.common_utils.load_tests"
  ],
  "type": "module"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.AsyncExecutionClass": {
  "lineno": 464,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.AsyncExecutionClass.bound_async_add": {
  "lineno": 482,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.functions.async_execution",
   "torch.distributed.rpc.rpc_async"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.AsyncExecutionClass.class_async_add": {
  "lineno": 473,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.functions.async_execution",
   "torch.distributed.rpc.rpc_async",
   "torch.futures.Future"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.AsyncExecutionClass.static_async_add": {
  "lineno": 466,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.functions.async_execution",
   "torch.distributed.rpc.rpc_async"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.FaultyAgentRpcTest": {
  "lineno": 3927,
  "symbols_in_volume": [
   "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture.RpcAgentTestFixture"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.FaultyAgentRpcTest._test_remote_message_delay_timeout": {
  "lineno": 4041,
  "symbols_in_volume": [
   "torch.distributed.rpc.remote",
   "torch.testing._internal.dist_utils.wait_until_owners_and_forks_on_rank",
   "torch.testing._internal.dist_utils.wait_until_pending_futures_and_users_flushed"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.FaultyAgentRpcTest._test_remote_message_dropped_pickle": {
  "lineno": 3970,
  "symbols_in_volume": [
   "torch.distributed.rpc.remote",
   "torch.distributed.rpc.rpc_async",
   "torch.testing._internal.dist_utils.wait_until_pending_futures_and_users_flushed"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.FaultyAgentRpcTest._test_remote_message_dropped_timeout": {
  "lineno": 3998,
  "symbols_in_volume": [
   "torch.distributed.rpc.remote",
   "torch.testing._internal.dist_utils.wait_until_pending_futures_and_users_flushed"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.FaultyAgentRpcTest.test_builtin_remote_message_dropped_timeout": {
  "lineno": 4017,
  "symbols_in_volume": [
   "torch.add",
   "torch.tensor",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.FaultyAgentRpcTest.test_builtin_remote_message_dropped_timeout_to_self": {
  "lineno": 4023,
  "symbols_in_volume": [
   "torch.add",
   "torch.tensor",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.FaultyAgentRpcTest.test_check_failed_messages": {
  "lineno": 3931,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.api._delete_all_user_and_unforked_owner_rrefs",
   "torch.distributed.rpc.remote",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.FaultyAgentRpcTest.test_custom_faulty_messages": {
  "lineno": 3955,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.FaultyAgentRpcTest.test_custom_messages_to_delay": {
  "lineno": 3966,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.FaultyAgentRpcTest.test_no_faulty_messages": {
  "lineno": 3962,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.FaultyAgentRpcTest.test_remote_message_builtin_delay_timeout": {
  "lineno": 4095,
  "symbols_in_volume": [
   "torch.add",
   "torch.tensor",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.FaultyAgentRpcTest.test_remote_message_builtin_delay_timeout_to_self": {
  "lineno": 4104,
  "symbols_in_volume": [
   "torch.add",
   "torch.tensor",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.FaultyAgentRpcTest.test_remote_message_dropped_pickle": {
  "lineno": 3989,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.FaultyAgentRpcTest.test_remote_message_dropped_pickle_to_self": {
  "lineno": 3993,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.FaultyAgentRpcTest.test_remote_message_script_delay_timeout": {
  "lineno": 4113,
  "symbols_in_volume": [
   "torch.tensor",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.FaultyAgentRpcTest.test_remote_message_script_delay_timeout_to_self": {
  "lineno": 4122,
  "symbols_in_volume": [
   "torch.tensor",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.FaultyAgentRpcTest.test_rpc_builtin_timeout": {
  "lineno": 4147,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc._set_rpc_timeout",
   "torch.distributed.rpc.constants.DEFAULT_RPC_TIMEOUT_SEC",
   "torch.distributed.rpc.get_rpc_timeout",
   "torch.distributed.rpc.rpc_async",
   "torch.distributed.rpc.rpc_sync",
   "torch.tensor",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.FaultyAgentRpcTest.test_rpc_script_timeout": {
  "lineno": 4192,
  "symbols_in_volume": [
   "torch.distributed.rpc._set_rpc_timeout",
   "torch.distributed.rpc.constants.DEFAULT_RPC_TIMEOUT_SEC",
   "torch.distributed.rpc.get_rpc_timeout",
   "torch.distributed.rpc.rpc_async",
   "torch.distributed.rpc.rpc_sync",
   "torch.tensor",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.FaultyAgentRpcTest.test_rref_to_here_timeout": {
  "lineno": 4131,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.remote",
   "torch.tensor",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.FaultyAgentRpcTest.test_udf_remote_message_delay_timeout": {
  "lineno": 4083,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.FaultyAgentRpcTest.test_udf_remote_message_delay_timeout_to_self": {
  "lineno": 4089,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.FaultyAgentRpcTest.test_udf_remote_message_dropped_timeout": {
  "lineno": 4029,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.FaultyAgentRpcTest.test_udf_remote_message_dropped_timeout_to_self": {
  "lineno": 4035,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.FaultyAgentRpcTest.test_verify_backend_options": {
  "lineno": 3946,
  "symbols_in_volume": [
   "torch.distributed.rpc.backend_registry.BackendType.FAULTY_PROCESS_GROUP",
   "torch.distributed.rpc.constants.DEFAULT_RPC_TIMEOUT_SEC",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.FooBackendOptions": {
  "lineno": 493,
  "symbols_in_volume": [
   "torch.distributed.rpc.RpcBackendOptions"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.FooBackendOptions.__init__": {
  "lineno": 494,
  "symbols_in_volume": [
   "torch.distributed.rpc.RpcBackendOptions.__init__"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.MyClass": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.MyClass.__init__": {
  "lineno": 152,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.MyClass.get_value": {
  "lineno": 169,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.MyClass.increment_value": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.MyClass.my_class_method": {
  "lineno": 158,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.MyClass.my_instance_method": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.MyClass.my_static_method": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.MyPickleClass": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.MyPickleClass.__getstate__": {
  "lineno": 123,
  "symbols_in_volume": [
   "torch.distributed.rpc.internal.PythonUDF",
   "torch.distributed.rpc.internal._internal_rpc_pickler.serialize",
   "torch.ones"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.MyPickleClass.__init__": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.MyPickleClass.__setstate__": {
  "lineno": 129,
  "symbols_in_volume": [
   "torch.distributed.rpc.internal._internal_rpc_pickler.deserialize"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.MyPickleClass.set": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.ProcessGroupAgentRpcTest": {
  "lineno": 3618,
  "symbols_in_volume": [
   "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture.RpcAgentTestFixture"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.ProcessGroupAgentRpcTest.test_infer_backend_from_options": {
  "lineno": 3636,
  "symbols_in_volume": [
   "logging.WARNING",
   "torch.distributed.rpc.ProcessGroupAgent",
   "torch.distributed.rpc.ProcessGroupRpcBackendOptions",
   "torch.distributed.rpc.api._get_current_rpc_agent",
   "torch.distributed.rpc.init_rpc",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.ProcessGroupAgentRpcTest.test_logs_deprecation_warning": {
  "lineno": 3656,
  "symbols_in_volume": [
   "logging.WARNING",
   "torch.distributed.rpc.BackendType.PROCESS_GROUP",
   "torch.distributed.rpc.init_rpc",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.ProcessGroupAgentRpcTest.test_mismatched_type_for_options": {
  "lineno": 3620,
  "symbols_in_volume": [
   "torch.distributed.rpc.BackendType.PROCESS_GROUP",
   "torch.distributed.rpc.init_rpc",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.ProcessGroupAgentRpcTest.test_process_group_debug_info": {
  "lineno": 3804,
  "symbols_in_volume": [
   "time.sleep",
   "torch.distributed.barrier",
   "torch.distributed.rpc.api._get_current_rpc_agent",
   "torch.distributed.rpc.enable_gil_profiling",
   "torch.distributed.rpc.rpc_async",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.initialize_pg",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.ProcessGroupAgentRpcTest.test_process_group_options_throw_on_timedelta_timeout": {
  "lineno": 3913,
  "symbols_in_volume": [
   "datetime.timedelta",
   "torch.distributed.rpc.ProcessGroupRpcBackendOptions",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.ProcessGroupAgentRpcTest.test_process_group_set_default_timeout": {
  "lineno": 3893,
  "symbols_in_volume": [
   "torch.distributed.rpc.ProcessGroupRpcBackendOptions",
   "torch.distributed.rpc.get_rpc_timeout",
   "torch.distributed.rpc.init_rpc",
   "torch.distributed.rpc.shutdown",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.ProcessGroupAgentRpcTest.test_set_and_get_num_send_recv_threads": {
  "lineno": 3874,
  "symbols_in_volume": [
   "torch.distributed.rpc.ProcessGroupRpcBackendOptions",
   "torch.distributed.rpc.api._get_current_rpc_agent",
   "torch.distributed.rpc.init_rpc",
   "torch.distributed.rpc.shutdown",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.ProcessGroupAgentRpcTest.test_single_threaded_rref_owner": {
  "lineno": 3670,
  "symbols_in_volume": [
   "time.sleep",
   "torch.distributed.barrier",
   "torch.distributed.init_process_group",
   "torch.distributed.rpc.ProcessGroupRpcBackendOptions",
   "torch.distributed.rpc.init_rpc",
   "torch.distributed.rpc.remote",
   "torch.distributed.rpc.rpc_async",
   "torch.distributed.rpc.rpc_sync",
   "torch.distributed.rpc.shutdown",
   "torch.testing._internal.dist_utils.worker_name",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.ProcessGroupAgentRpcTest.test_single_threaded_rref_to_here": {
  "lineno": 3741,
  "symbols_in_volume": [
   "time.sleep",
   "torch.distributed.barrier",
   "torch.distributed.init_process_group",
   "torch.distributed.rpc.ProcessGroupRpcBackendOptions",
   "torch.distributed.rpc.init_rpc",
   "torch.distributed.rpc.remote",
   "torch.distributed.rpc.rpc_sync",
   "torch.distributed.rpc.shutdown",
   "torch.testing._internal.dist_utils.worker_name",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest": {
  "lineno": 506,
  "symbols_in_volume": [
   "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture.RpcAgentTestFixture"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest._assert_top_level_events": {
  "lineno": 1729,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest._create_rref": {
  "lineno": 2937,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.remote",
   "torch.testing._internal.dist_utils.worker_name",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest._gpu_tensor_list_arg": {
  "lineno": 2901,
  "symbols_in_volume": [
   "torch.rand"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest._profiler_test_with_rpc": {
  "lineno": 1500,
  "symbols_in_volume": [
   "contextlib.suppress",
   "torch.autograd.profiler.profile",
   "torch.autograd.profiler.record_function",
   "torch.distributed.rpc.internal.RPCExecMode.ASYNC",
   "torch.distributed.rpc.internal.RPCExecMode.REMOTE",
   "torch.distributed.rpc.internal.RPCExecMode.SYNC",
   "torch.distributed.rpc.remote",
   "torch.distributed.rpc.rpc_async",
   "torch.distributed.rpc.rpc_sync",
   "torch.testing._internal.dist_utils.get_function_event",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest._return_gpu_tensor": {
  "lineno": 2893,
  "symbols_in_volume": [
   "torch.rand"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest._return_gpu_tensor_list": {
  "lineno": 2897,
  "symbols_in_volume": [
   "torch.rand"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest._run_func_in_mode": {
  "lineno": 3228,
  "symbols_in_volume": [
   "torch.distributed.rpc.internal.RPCExecMode.ASYNC",
   "torch.distributed.rpc.internal.RPCExecMode.REMOTE",
   "torch.distributed.rpc.internal.RPCExecMode.SYNC",
   "torch.distributed.rpc.remote",
   "torch.distributed.rpc.rpc_async",
   "torch.distributed.rpc.rpc_sync"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest._run_rpc_profiling_async_function": {
  "lineno": 1321,
  "symbols_in_volume": [
   "torch.add",
   "torch.autograd.profiler.profile",
   "torch.distributed.rpc.internal.RPCExecMode.ASYNC",
   "torch.distributed.rpc.internal._build_rpc_profiling_key",
   "torch.distributed.rpc.rpc_async",
   "torch.jit._builtins._find_builtin",
   "torch.ones",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest._run_test_profiler_remote_events_profiled": {
  "lineno": 1246,
  "symbols_in_volume": [
   "torch.autograd.profiler.profile",
   "torch.distributed.rpc.internal.RPCExecMode.ASYNC",
   "torch.distributed.rpc.internal.RPCExecMode.ASYNC.value",
   "torch.distributed.rpc.internal._build_rpc_profiling_key",
   "torch.distributed.rpc.rpc_async",
   "torch.testing._internal.dist_utils.get_function_event",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest._run_test_profiler_remote_events_profiled.convert_remote_to_local": {
  "lineno": 1287,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest._run_test_profiler_with_async_rpc_builtin": {
  "lineno": 1603,
  "symbols_in_volume": [
   "torch.distributed.rpc.internal.RPCExecMode.ASYNC",
   "torch.mul",
   "torch.ones"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest._run_test_profiler_with_async_rpc_udf": {
  "lineno": 1589,
  "symbols_in_volume": [
   "torch.distributed.rpc.internal.RPCExecMode.ASYNC"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest._run_test_profiler_with_autograd_context": {
  "lineno": 1473,
  "symbols_in_volume": [
   "torch.autograd.profiler.profile",
   "torch.distributed.autograd.context"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest._run_test_profiler_with_remote_builtin": {
  "lineno": 1640,
  "symbols_in_volume": [
   "torch.distributed.rpc.internal.RPCExecMode.REMOTE",
   "torch.mul",
   "torch.ones"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest._run_test_profiler_with_remote_udf": {
  "lineno": 1621,
  "symbols_in_volume": [
   "torch.distributed.rpc.internal.RPCExecMode.REMOTE"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest._run_test_profiler_with_script_async_rpc": {
  "lineno": 1665,
  "symbols_in_volume": [
   "torch.distributed.rpc.internal.RPCExecMode.ASYNC",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest._run_test_profiler_with_script_remote_rpc": {
  "lineno": 1705,
  "symbols_in_volume": [
   "torch.distributed.rpc.internal.RPCExecMode.REMOTE",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest._run_test_profiler_with_script_sync_rpc": {
  "lineno": 1685,
  "symbols_in_volume": [
   "torch.distributed.rpc.internal.RPCExecMode.SYNC",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest._run_test_profiler_with_sync_rpc_builtin": {
  "lineno": 1571,
  "symbols_in_volume": [
   "torch.distributed.rpc.internal.RPCExecMode.SYNC",
   "torch.mul",
   "torch.ones"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest._run_test_profiler_with_sync_rpc_udf": {
  "lineno": 1557,
  "symbols_in_volume": [
   "torch.distributed.rpc.internal.RPCExecMode.SYNC"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest._run_uneven_workload": {
  "lineno": 891,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_async",
   "torch.futures.collect_all",
   "torch.futures.wait_all",
   "torch.ones"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest._slow_add": {
  "lineno": 2296,
  "symbols_in_volume": [
   "time.sleep"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest._stress_test_rpc": {
  "lineno": 1949,
  "symbols_in_volume": [
   "time.time",
   "torch.distributed.rpc.rpc_async",
   "torch.futures.wait_all",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest._test_async_function": {
  "lineno": 3288,
  "symbols_in_volume": [
   "torch.distributed.rpc.internal.RPCExecMode.SYNC",
   "torch.ones",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest._test_async_function_multi": {
  "lineno": 3379,
  "symbols_in_volume": [
   "torch.distributed.rpc.internal.RPCExecMode.SYNC",
   "torch.ones",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest._test_async_function_raise": {
  "lineno": 3236,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest._test_async_function_wrong_return_type": {
  "lineno": 3256,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest._test_future_cb": {
  "lineno": 3209,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_sync",
   "torch.ones",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest._test_multi_remote_call": {
  "lineno": 1999,
  "symbols_in_volume": [
   "torch.distributed.rpc.remote",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest._test_return_future": {
  "lineno": 3425,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest._test_rref_leak": {
  "lineno": 2413,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.barrier",
   "torch.distributed.rpc.api",
   "torch.distributed.rpc.api._ignore_rref_leak",
   "torch.distributed.rpc.init_rpc",
   "torch.distributed.rpc.remote",
   "torch.distributed.rpc.shutdown",
   "torch.ones",
   "torch.testing._internal.dist_utils.initialize_pg",
   "torch.testing._internal.dist_utils.worker_name",
   "unittest.mock.patch.object"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest._test_rref_proxy_class": {
  "lineno": 634,
  "symbols_in_volume": [
   "torch.distributed.rpc.remote",
   "torch.ones",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest._test_rref_proxy_tensor": {
  "lineno": 593,
  "symbols_in_volume": [
   "torch.distributed.rpc.remote",
   "torch.ones"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest._test_self_remote_rref_as_remote_arg": {
  "lineno": 566,
  "symbols_in_volume": [
   "torch.distributed.rpc.get_worker_info",
   "torch.distributed.rpc.remote",
   "torch.ones"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest._test_self_remote_rref_as_rpc_arg": {
  "lineno": 549,
  "symbols_in_volume": [
   "torch.distributed.rpc.get_worker_info",
   "torch.distributed.rpc.remote",
   "torch.distributed.rpc.rpc_async",
   "torch.distributed.rpc.rpc_sync",
   "torch.ones"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest._test_test_async_class_rref_proxy": {
  "lineno": 3345,
  "symbols_in_volume": [
   "torch.distributed.rpc.internal.RPCExecMode.ASYNC",
   "torch.distributed.rpc.internal.RPCExecMode.REMOTE",
   "torch.distributed.rpc.internal.RPCExecMode.SYNC",
   "torch.distributed.rpc.remote",
   "torch.ones",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.check_profiling_info": {
  "lineno": 1049,
  "symbols_in_volume": [
   "torch._jit_internal._qualified_name",
   "torch.jit.ScriptFunction"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.run_profiling_workload": {
  "lineno": 1310,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_async",
   "torch.mul",
   "torch.tensor",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_add": {
  "lineno": 828,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.rpc_sync",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_add_with_id": {
  "lineno": 839,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.get_worker_info",
   "torch.distributed.rpc.rpc_sync",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_all_gather": {
  "lineno": 954,
  "symbols_in_volume": [
   "torch.distributed.rpc._get_current_rpc_agent",
   "torch.distributed.rpc.api._all_gather",
   "torch.distributed.rpc.get_worker_info",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_all_gather_timeout": {
  "lineno": 964,
  "symbols_in_volume": [
   "torch.distributed.rpc._set_rpc_timeout",
   "torch.distributed.rpc.api._all_gather",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_async_add": {
  "lineno": 859,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.rpc_async",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_async_class_method": {
  "lineno": 3334,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_async_class_method_remote": {
  "lineno": 3338,
  "symbols_in_volume": [
   "torch.distributed.rpc.internal.RPCExecMode.REMOTE",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_async_class_rref_proxy": {
  "lineno": 3367,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_async_class_rref_proxy_async": {
  "lineno": 3371,
  "symbols_in_volume": [
   "torch.distributed.rpc.internal.RPCExecMode.ASYNC",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_async_class_rref_proxy_remote": {
  "lineno": 3375,
  "symbols_in_volume": [
   "torch.distributed.rpc.internal.RPCExecMode.REMOTE",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_async_function_chained": {
  "lineno": 3307,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_async_function_chained_remote": {
  "lineno": 3311,
  "symbols_in_volume": [
   "torch.distributed.rpc.internal.RPCExecMode.REMOTE",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_async_function_multi_chained": {
  "lineno": 3389,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_async_function_multi_chained_async": {
  "lineno": 3393,
  "symbols_in_volume": [
   "torch.distributed.rpc.internal.RPCExecMode.ASYNC",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_async_function_multi_chained_remote": {
  "lineno": 3400,
  "symbols_in_volume": [
   "torch.distributed.rpc.internal.RPCExecMode.REMOTE",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_async_function_multi_fanout": {
  "lineno": 3407,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_async_function_multi_fanout_async": {
  "lineno": 3411,
  "symbols_in_volume": [
   "torch.distributed.rpc.internal.RPCExecMode.ASYNC",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_async_function_multi_fanout_remote": {
  "lineno": 3418,
  "symbols_in_volume": [
   "torch.distributed.rpc.internal.RPCExecMode.REMOTE",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_async_function_nested": {
  "lineno": 3315,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_async_function_nested_remote": {
  "lineno": 3319,
  "symbols_in_volume": [
   "torch.distributed.rpc.internal.RPCExecMode.REMOTE",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_async_function_raise": {
  "lineno": 3244,
  "symbols_in_volume": [
   "torch.distributed.rpc.internal.RPCExecMode.SYNC",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_async_function_raise_async": {
  "lineno": 3248,
  "symbols_in_volume": [
   "torch.distributed.rpc.internal.RPCExecMode.ASYNC",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_async_function_raise_remote": {
  "lineno": 3252,
  "symbols_in_volume": [
   "torch.distributed.rpc.internal.RPCExecMode.REMOTE",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_async_function_simple": {
  "lineno": 3280,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_sync",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_async_function_with_future_ctor": {
  "lineno": 3296,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_async_function_with_future_ctor_remote": {
  "lineno": 3300,
  "symbols_in_volume": [
   "torch.distributed.rpc.internal.RPCExecMode.REMOTE",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_async_function_wrong_return_type": {
  "lineno": 3268,
  "symbols_in_volume": [
   "torch.distributed.rpc.internal.RPCExecMode.SYNC",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_async_function_wrong_return_type_async": {
  "lineno": 3272,
  "symbols_in_volume": [
   "torch.distributed.rpc.internal.RPCExecMode.ASYNC",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_async_function_wrong_return_type_remote": {
  "lineno": 3276,
  "symbols_in_volume": [
   "torch.distributed.rpc.internal.RPCExecMode.REMOTE",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_async_record_function_cbs_jit_call": {
  "lineno": 1787,
  "symbols_in_volume": [
   "torch._jit_internal._qualified_name",
   "torch.add",
   "torch.autograd.profiler.profile",
   "torch.autograd.profiler.record_function",
   "torch.distributed.rpc.internal.RPCExecMode.ASYNC",
   "torch.distributed.rpc.internal._build_rpc_profiling_key",
   "torch.distributed.rpc.rpc_async",
   "torch.ops.profiler._call_end_callbacks_on_jit_fut",
   "torch.tensor",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.get_function_event",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_async_record_function_double_end_callbacks": {
  "lineno": 1770,
  "symbols_in_volume": [
   "torch.autograd.profiler.profile",
   "torch.autograd.profiler.record_function",
   "torch.distributed.rpc.rpc_async",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_async_static_method": {
  "lineno": 3323,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_async_static_method_remote": {
  "lineno": 3327,
  "symbols_in_volume": [
   "torch.distributed.rpc.internal.RPCExecMode.REMOTE",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_build_rpc_profiling_key": {
  "lineno": 1037,
  "symbols_in_volume": [
   "torch.distributed.rpc.internal.RPCExecMode.ASYNC",
   "torch.distributed.rpc.internal.RPCExecMode.REMOTE",
   "torch.distributed.rpc.internal.RPCExecMode.SYNC",
   "torch.distributed.rpc.internal._build_rpc_profiling_key"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_builtin_remote_ret": {
  "lineno": 1979,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.remote",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_builtin_remote_self": {
  "lineno": 1990,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.remote",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_call_method_on_rref": {
  "lineno": 2371,
  "symbols_in_volume": [
   "torch.distributed.rpc.remote",
   "torch.distributed.rpc.rpc_async",
   "torch.distributed.rpc.rpc_sync",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_callback_chain": {
  "lineno": 3087,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.rpc_async",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_callback_chain.callback": {
  "lineno": 3092,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_callback_in_rpc": {
  "lineno": 3107,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_sync",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_callback_multi": {
  "lineno": 3057,
  "symbols_in_volume": [
   "functools.partial",
   "torch.add",
   "torch.distributed.rpc.rpc_async",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_callback_multi.callback": {
  "lineno": 3062,
  "symbols_in_volume": [
   "torch.ones"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_callback_none": {
  "lineno": 3153,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_async",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_callback_simple": {
  "lineno": 3001,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.rpc_async",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_callback_simple.callback": {
  "lineno": 3006,
  "symbols_in_volume": [
   "torch.ones"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_callback_with_error": {
  "lineno": 3140,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_async",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_callback_with_error.callback": {
  "lineno": 3144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_callback_with_ret": {
  "lineno": 3119,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.rpc_async",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_callback_with_ret.callback": {
  "lineno": 3123,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.rpc_async"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_callback_wrong_arg_num": {
  "lineno": 3023,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.rpc_async",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_callback_wrong_arg_type": {
  "lineno": 3044,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.rpc_async",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_cannot_infer_backend_from_options": {
  "lineno": 3602,
  "symbols_in_volume": [
   "torch.distributed.rpc.init_rpc",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_cuda": {
  "lineno": 2905,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.rpc_sync",
   "torch.rand",
   "torch.testing._internal.common_distributed.skip_if_lt_x_gpu",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_deadlock": {
  "lineno": 2654,
  "symbols_in_volume": [
   "torch.distributed.init_process_group",
   "torch.distributed.is_initialized",
   "torch.distributed.rpc.rpc_async",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_debug_info": {
  "lineno": 2596,
  "symbols_in_volume": [
   "torch.distributed.autograd._get_debug_info",
   "torch.distributed.rpc._get_debug_info",
   "torch.distributed.rpc._rref_context_get_debug_info",
   "torch.distributed.rpc.api._get_current_rpc_agent",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_default_timeout_used": {
  "lineno": 2717,
  "symbols_in_volume": [
   "torch.distributed.rpc._set_rpc_timeout",
   "torch.distributed.rpc.constants.DEFAULT_RPC_TIMEOUT_SEC",
   "torch.distributed.rpc.rpc_async",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_disable_gil_profiling": {
  "lineno": 2563,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.api._get_current_rpc_agent",
   "torch.distributed.rpc.enable_gil_profiling",
   "torch.distributed.rpc.rpc_sync",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_dist_init_decorator": {
  "lineno": 2796,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_dist_init_decorator.test_func": {
  "lineno": 2803,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_duplicate_name": {
  "lineno": 732,
  "symbols_in_volume": [
   "torch.distributed.rendezvous",
   "torch.distributed.rpc._init_rpc_backend",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_expected_src": {
  "lineno": 1011,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_sync",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_function_not_on_callee": {
  "lineno": 2820,
  "symbols_in_volume": [
   "sys.modules",
   "torch.distributed.rpc.rpc_sync",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_future_done": {
  "lineno": 3194,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.rpc_async",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_future_done_exception": {
  "lineno": 3201,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_async",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_future_in_rpc": {
  "lineno": 3220,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_future_nested_callback": {
  "lineno": 3224,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_get_worker_infos": {
  "lineno": 520,
  "symbols_in_volume": [
   "torch.distributed.rpc.api._get_current_rpc_agent",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_graceful_shutdown_with_uneven_workload": {
  "lineno": 978,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_handle_send_exceptions": {
  "lineno": 2620,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.barrier",
   "torch.distributed.rpc._set_rpc_timeout",
   "torch.distributed.rpc.init_rpc",
   "torch.distributed.rpc.rpc_async",
   "torch.distributed.rpc.shutdown",
   "torch.ones",
   "torch.testing._internal.common_utils.IS_MACOS",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.initialize_pg",
   "torch.testing._internal.dist_utils.wait_until_node_failure",
   "torch.testing._internal.dist_utils.worker_name",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_ignore_rref_leak": {
  "lineno": 2447,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_init_pg_then_rpc": {
  "lineno": 3470,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.barrier",
   "torch.distributed.init_process_group",
   "torch.distributed.rpc.init_rpc",
   "torch.distributed.rpc.rpc_sync",
   "torch.distributed.rpc.shutdown",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_init_rpc_then_pg": {
  "lineno": 3497,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.barrier",
   "torch.distributed.init_process_group",
   "torch.distributed.rpc.init_rpc",
   "torch.distributed.rpc.rpc_sync",
   "torch.distributed.rpc.shutdown",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_init_rpc_twice": {
  "lineno": 3546,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.barrier",
   "torch.distributed.rpc.init_rpc",
   "torch.distributed.rpc.rpc_sync",
   "torch.distributed.rpc.shutdown",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.initialize_pg",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_invalid_names": {
  "lineno": 809,
  "symbols_in_volume": [
   "torch.distributed.rpc.WorkerInfo",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_local_rref_no_fork": {
  "lineno": 2204,
  "symbols_in_volume": [
   "torch.distributed.rpc.RRef",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_local_shutdown": {
  "lineno": 2582,
  "symbols_in_volume": [
   "torch.distributed.rpc.init_rpc",
   "torch.distributed.rpc.shutdown",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_local_shutdown_with_rpc": {
  "lineno": 2672,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.barrier",
   "torch.distributed.rpc.init_rpc",
   "torch.distributed.rpc.rpc_sync",
   "torch.distributed.rpc.shutdown",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.initialize_pg",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_local_value_not_on_owner": {
  "lineno": 2209,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.remote",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_mark_future_twice": {
  "lineno": 3162,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.rpc_async",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_multi_builtin_remote_ret": {
  "lineno": 2020,
  "symbols_in_volume": [
   "torch.add",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_multi_builtin_remote_ret.args_fn": {
  "lineno": 2022,
  "symbols_in_volume": [
   "torch.ones"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_multi_layer_nested_async_rpc": {
  "lineno": 2148,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_multi_py_udf_remote": {
  "lineno": 2038,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_multi_py_udf_remote.kwargs_fn": {
  "lineno": 2040,
  "symbols_in_volume": [
   "torch.ones"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_multi_rpc": {
  "lineno": 879,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.rpc_sync",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_nested_remote": {
  "lineno": 2093,
  "symbols_in_volume": [
   "torch.distributed.rpc.remote",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_nested_rpc": {
  "lineno": 1938,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_sync",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_nested_rref": {
  "lineno": 2106,
  "symbols_in_volume": [
   "torch.distributed.rpc.remote",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_nested_rref_stress": {
  "lineno": 2126,
  "symbols_in_volume": [
   "torch.distributed.rpc.remote",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_non_cont_tensors": {
  "lineno": 2982,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_sync",
   "torch.rand",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_non_garbage_collected_user_rref_due_to_local_circular_dependency": {
  "lineno": 2845,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.remote",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_nonzero": {
  "lineno": 870,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_sync",
   "torch.nonzero",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_owner_equality": {
  "lineno": 2307,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.RRef",
   "torch.distributed.rpc.get_worker_info",
   "torch.distributed.rpc.remote",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_pass_local_rrefs": {
  "lineno": 2339,
  "symbols_in_volume": [
   "torch.distributed.rpc.RRef",
   "torch.distributed.rpc.remote",
   "torch.distributed.rpc.rpc_async",
   "torch.distributed.rpc.rpc_sync",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_pickle_future": {
  "lineno": 3176,
  "symbols_in_volume": [
   "torch.distributed.rpc.remote",
   "torch.distributed.rpc.rpc_async",
   "torch.distributed.rpc.rpc_sync",
   "torch.futures.Future",
   "torch.testing._internal.common_utils.TemporaryFileName",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_profiler_export_trace": {
  "lineno": 1156,
  "symbols_in_volume": [
   "json.load",
   "torch.autograd.profiler.profile",
   "torch.distributed.rpc.internal.RPCExecMode.ASYNC.value",
   "torch.distributed.rpc.rpc_async",
   "torch.testing._internal.common_utils.TemporaryFileName",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_profiler_remote_cuda": {
  "lineno": 1110,
  "symbols_in_volume": [
   "torch.autograd.profiler.profile",
   "torch.distributed.rpc.rpc_async",
   "torch.testing._internal.common_distributed.skip_if_lt_x_gpu",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_profiler_remote_cuda.get_name": {
  "lineno": 1127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_profiler_remote_events_profiled": {
  "lineno": 1301,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_profiler_remote_events_profiled_single_threaded": {
  "lineno": 1305,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.single_threaded_process_group_agent"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_profiler_rpc_key_names": {
  "lineno": 1177,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_profiler_rpc_key_names.rpc_with_profiling": {
  "lineno": 1188,
  "symbols_in_volume": [
   "torch.autograd.profiler.profile",
   "torch.distributed.rpc.get_worker_info",
   "torch.distributed.rpc.internal.RPCExecMode.ASYNC",
   "torch.distributed.rpc.internal._build_rpc_profiling_key",
   "torch.distributed.rpc.rpc_async",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_profiler_rpc_memory": {
  "lineno": 1086,
  "symbols_in_volume": [
   "torch.autograd.profiler.profile",
   "torch.distributed.rpc.rpc_async",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_profiler_rpc_record_shapes": {
  "lineno": 1059,
  "symbols_in_volume": [
   "torch.add",
   "torch.autograd.profiler.profile",
   "torch.distributed.rpc.rpc_sync",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_profiler_with_async_rpc_builtin": {
  "lineno": 1612,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_profiler_with_async_rpc_builtin_single_threaded": {
  "lineno": 1616,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.single_threaded_process_group_agent"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_profiler_with_async_rpc_udf": {
  "lineno": 1594,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_profiler_with_async_rpc_udf_single_threaded": {
  "lineno": 1598,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.single_threaded_process_group_agent"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_profiler_with_autograd_context": {
  "lineno": 1496,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_profiler_with_autograd_context_single_threaded": {
  "lineno": 1491,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.single_threaded_process_group_agent"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_profiler_with_remote_builtin": {
  "lineno": 1656,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_profiler_with_remote_builtin_single_threaded": {
  "lineno": 1660,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.single_threaded_process_group_agent"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_profiler_with_remote_udf": {
  "lineno": 1631,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_profiler_with_remote_udf_single_threaded": {
  "lineno": 1635,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.single_threaded_process_group_agent"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_profiler_with_script_async_rpc": {
  "lineno": 1676,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_profiler_with_script_async_rpc_single_threaded": {
  "lineno": 1680,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.single_threaded_process_group_agent"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_profiler_with_script_remote_rpc": {
  "lineno": 1720,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_profiler_with_script_remote_rpc_single_threaded": {
  "lineno": 1724,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.single_threaded_process_group_agent"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_profiler_with_script_sync_rpc": {
  "lineno": 1696,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_profiler_with_script_sync_rpc_single_threaded": {
  "lineno": 1700,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.single_threaded_process_group_agent"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_profiler_with_sync_rpc_builtin": {
  "lineno": 1580,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_profiler_with_sync_rpc_builtin_single_threaded": {
  "lineno": 1584,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.single_threaded_process_group_agent"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_profiler_with_sync_rpc_udf": {
  "lineno": 1562,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_profiler_with_sync_rpc_udf_single_threaded": {
  "lineno": 1566,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.single_threaded_process_group_agent"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_py_built_in": {
  "lineno": 1019,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_sync",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_py_class_constructor": {
  "lineno": 1814,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_sync",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_py_class_instance_method": {
  "lineno": 1821,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_sync",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_py_class_method": {
  "lineno": 1830,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_sync",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_py_class_static_method": {
  "lineno": 1839,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_sync",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_py_function_exception": {
  "lineno": 1923,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_sync",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_py_multi_async_call": {
  "lineno": 1848,
  "symbols_in_volume": [
   "torch.distributed.rpc.get_worker_info",
   "torch.distributed.rpc.rpc_async",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_py_nested_pickle": {
  "lineno": 1908,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_sync",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_py_no_return_result": {
  "lineno": 1858,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_sync",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_py_raise_in_user_func": {
  "lineno": 1930,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_async",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_py_rpc_rref_args": {
  "lineno": 2076,
  "symbols_in_volume": [
   "torch.distributed.rpc.remote",
   "torch.distributed.rpc.rpc_sync",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_py_rref_args": {
  "lineno": 2045,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.remote",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_py_rref_args_user_share": {
  "lineno": 2060,
  "symbols_in_volume": [
   "torch.distributed.rpc.remote",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_py_tensors": {
  "lineno": 1865,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_sync",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_py_tensors_in_container": {
  "lineno": 1896,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_sync",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_py_tensors_multi_async_call": {
  "lineno": 1876,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_async",
   "torch.futures.wait_all",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_py_udf_remote": {
  "lineno": 2027,
  "symbols_in_volume": [
   "torch.distributed.rpc.remote",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_py_user_defined": {
  "lineno": 1026,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_sync",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_register_rpc_backend_and_set_and_start_rpc_backend": {
  "lineno": 701,
  "symbols_in_volume": [
   "torch.distributed.autograd",
   "torch.distributed.rpc.api",
   "torch.distributed.rpc.backend_registry.register_backend",
   "torch.distributed.rpc.init_rpc",
   "torch.testing._internal.dist_utils.dist_init",
   "unittest.mock.patch.object"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_reinit": {
  "lineno": 749,
  "symbols_in_volume": [
   "torch.distributed.barrier",
   "torch.distributed.rpc.init_rpc",
   "torch.distributed.rpc.shutdown",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.initialize_pg",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_remote_same_worker": {
  "lineno": 2356,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.remote",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_remote_throw": {
  "lineno": 2974,
  "symbols_in_volume": [
   "torch.distributed.rpc.remote",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_remote_with_exception": {
  "lineno": 2160,
  "symbols_in_volume": [
   "torch.distributed.rpc.remote",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_return_future": {
  "lineno": 3436,
  "symbols_in_volume": [
   "torch.distributed.rpc.internal.RPCExecMode.SYNC",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_return_future_async": {
  "lineno": 3440,
  "symbols_in_volume": [
   "torch.distributed.rpc.internal.RPCExecMode.ASYNC",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_return_future_remote": {
  "lineno": 3444,
  "symbols_in_volume": [
   "torch.distributed.rpc.internal.RPCExecMode.REMOTE",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_return_local_rrefs": {
  "lineno": 2228,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_sync",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_rpc_profiling_async_function": {
  "lineno": 1365,
  "symbols_in_volume": [
   "torch.cuda.is_available",
   "torch.distributed.barrier",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.initialize_pg"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_rpc_profiling_async_function_single_threaded": {
  "lineno": 1373,
  "symbols_in_volume": [
   "torch.cuda.is_available",
   "torch.distributed.barrier",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.initialize_pg",
   "torch.testing._internal.dist_utils.single_threaded_process_group_agent"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_rpc_profiling_remote_record_function": {
  "lineno": 1382,
  "symbols_in_volume": [
   "torch.autograd.profiler.profile",
   "torch.distributed.rpc.rpc_async",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_rpc_profiling_remote_record_function.convert_remote_to_local": {
  "lineno": 1418,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_rpc_profiling_remote_record_function.get_cpu_children": {
  "lineno": 1431,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_rpc_return_rref": {
  "lineno": 2173,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_sync",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_rpc_timeouts": {
  "lineno": 2754,
  "symbols_in_volume": [
   "torch.distributed.rpc._set_rpc_timeout",
   "torch.distributed.rpc.constants.DEFAULT_RPC_TIMEOUT_SEC",
   "torch.distributed.rpc.rpc_async",
   "torch.distributed.rpc.rpc_sync",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_rref_context_debug_info": {
  "lineno": 2494,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.barrier",
   "torch.distributed.rpc.RRef",
   "torch.distributed.rpc._rref_context_get_debug_info",
   "torch.distributed.rpc.remote",
   "torch.distributed.rpc.rpc_sync",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.initialize_pg",
   "torch.testing._internal.dist_utils.wait_until_pending_futures_and_users_flushed",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_rref_forward_chain": {
  "lineno": 2185,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.remote",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_rref_get_future": {
  "lineno": 2470,
  "symbols_in_volume": [
   "torch._C.Future",
   "torch.add",
   "torch.distributed.rpc.remote",
   "torch.tensor",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_rref_leak": {
  "lineno": 2443,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_rref_proxy_class": {
  "lineno": 689,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_rref_proxy_class_self": {
  "lineno": 693,
  "symbols_in_volume": [
   "torch.distributed.rpc.get_worker_info",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_rref_proxy_non_exist": {
  "lineno": 579,
  "symbols_in_volume": [
   "torch.distributed.rpc.remote",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_rref_proxy_reuse": {
  "lineno": 609,
  "symbols_in_volume": [
   "torch.distributed.rpc.remote",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_rref_proxy_tensor": {
  "lineno": 601,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_rref_proxy_tensor_self": {
  "lineno": 605,
  "symbols_in_volume": [
   "torch.distributed.rpc.get_worker_info",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_rref_py_pickle_not_supported": {
  "lineno": 2967,
  "symbols_in_volume": [
   "torch.distributed.rpc.RRef",
   "torch.save",
   "torch.testing._internal.common_utils.TemporaryFileName",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_rref_str": {
  "lineno": 2451,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.RRef",
   "torch.distributed.rpc.remote",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_rref_timeout": {
  "lineno": 3448,
  "symbols_in_volume": [
   "torch.distributed.rpc.remote",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.wait_until_owners_and_forks_on_rank",
   "torch.testing._internal.dist_utils.wait_until_pending_futures_and_users_flushed"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_rref_type": {
  "lineno": 2253,
  "symbols_in_volume": [
   "torch.add",
   "torch.autograd.profiler.profile",
   "torch.distributed.rpc.remote",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_rref_type.launched_rpc": {
  "lineno": 2256,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_rref_type_owner": {
  "lineno": 2288,
  "symbols_in_volume": [
   "torch.distributed.rpc.RRef",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_rref_type_slow_init": {
  "lineno": 2301,
  "symbols_in_volume": [
   "torch.distributed.rpc.remote",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_rref_type_with_error": {
  "lineno": 2279,
  "symbols_in_volume": [
   "torch.distributed.rpc.remote",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_scalar_add": {
  "lineno": 850,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.rpc_sync",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_self_add": {
  "lineno": 534,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.get_worker_info",
   "torch.distributed.rpc.rpc_async",
   "torch.distributed.rpc.rpc_sync",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_self_py_udf_remote": {
  "lineno": 543,
  "symbols_in_volume": [
   "torch.distributed.rpc.get_worker_info",
   "torch.distributed.rpc.remote",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_self_remote_rref_as_remote_arg": {
  "lineno": 574,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_self_remote_rref_as_rpc_arg": {
  "lineno": 557,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_self_remote_rref_as_self_remote_arg": {
  "lineno": 697,
  "symbols_in_volume": [
   "torch.distributed.rpc.get_worker_info",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_self_remote_rref_as_self_rpc_arg": {
  "lineno": 562,
  "symbols_in_volume": [
   "torch.distributed.rpc.get_worker_info",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_server_process_global_profiler": {
  "lineno": 1742,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc._server_process_global_profile",
   "torch.distributed.rpc.remote",
   "torch.distributed.rpc.rpc_sync",
   "torch.sub",
   "torch.tensor",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_set_and_get_default_rpc_timeout": {
  "lineno": 2697,
  "symbols_in_volume": [
   "torch.distributed.rpc.get_rpc_timeout",
   "torch.distributed.rpc.init_rpc",
   "torch.distributed.rpc.shutdown",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_shutdown_followed_by_rpc": {
  "lineno": 983,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.init_rpc",
   "torch.distributed.rpc.rpc_sync",
   "torch.distributed.rpc.shutdown",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_stress_heavy_rpc": {
  "lineno": 1971,
  "symbols_in_volume": [
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_stress_heavy_rpc_torchscript": {
  "lineno": 1975,
  "symbols_in_volume": [
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_stress_light_rpc": {
  "lineno": 1967,
  "symbols_in_volume": [
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_use_rpc_pickler": {
  "lineno": 2809,
  "symbols_in_volume": [
   "torch.distributed.rpc.api._default_pickler",
   "torch.distributed.rpc.api._use_rpc_pickler",
   "torch.distributed.rpc.internal._internal_rpc_pickler"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_use_rpc_pickler.TestPickler": {
  "lineno": 2810,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_use_rref_after_shutdown": {
  "lineno": 2863,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.init_rpc",
   "torch.distributed.rpc.internal.serialize",
   "torch.distributed.rpc.remote",
   "torch.distributed.rpc.shutdown",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_user_rrefs_confirmed": {
  "lineno": 2945,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_sync",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_user_rrefs_confirmed_remote": {
  "lineno": 2956,
  "symbols_in_volume": [
   "torch.distributed.rpc.remote",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_wait_all_with_exception": {
  "lineno": 3524,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_async",
   "torch.futures.wait_all",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_wait_all_with_partial_exception": {
  "lineno": 3534,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.rpc_async",
   "torch.futures.wait_all",
   "torch.ones",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_wait_all_workers": {
  "lineno": 919,
  "symbols_in_volume": [
   "torch.distributed.rpc.api._wait_all_workers",
   "torch.distributed.rpc.init_rpc",
   "torch.distributed.rpc.shutdown"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_wait_all_workers_twice": {
  "lineno": 936,
  "symbols_in_volume": [
   "torch.distributed.rpc.api._wait_all_workers",
   "torch.distributed.rpc.init_rpc",
   "torch.distributed.rpc.shutdown"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_worker_id": {
  "lineno": 507,
  "symbols_in_volume": [
   "torch.distributed.rpc.get_worker_info",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_world_size_one": {
  "lineno": 773,
  "symbols_in_volume": [
   "torch.distributed.rpc.init_rpc",
   "torch.distributed.rpc.remote",
   "torch.distributed.rpc.rpc_async",
   "torch.distributed.rpc.rpc_sync",
   "torch.distributed.rpc.shutdown",
   "torch.ones"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.test_wrong_types": {
  "lineno": 3578,
  "symbols_in_volume": [
   "torch.distributed.rpc.init_rpc",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.validate_profiling_workload": {
  "lineno": 1451,
  "symbols_in_volume": [
   "torch.distributed.rpc.internal.RPCExecMode.ASYNC",
   "torch.mul",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.RpcTest.validate_profiling_workload.convert_remote_to_local": {
  "lineno": 1453,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.SlowPickleClass": {
  "lineno": 138,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.SlowPickleClass.__getstate__": {
  "lineno": 142,
  "symbols_in_volume": [
   "time.sleep"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.SlowPickleClass.__init__": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.SlowPickleClass.__setstate__": {
  "lineno": 146,
  "symbols_in_volume": [
   "time.sleep"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.StubRpcAgent": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.StubRpcAgent.__init__": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.StubRpcAgent.get_worker_infos": {
  "lineno": 85,
  "symbols_in_volume": [
   "torch.distributed.rpc.WorkerInfo",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.TensorPipeAgentRpcTest": {
  "lineno": 4229,
  "symbols_in_volume": [
   "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture.RpcAgentTestFixture"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.TensorPipeAgentRpcTest.test_infer_backend_from_options": {
  "lineno": 4247,
  "symbols_in_volume": [
   "torch.distributed.rpc.TensorPipeAgent",
   "torch.distributed.rpc.TensorPipeRpcBackendOptions",
   "torch.distributed.rpc.api._get_current_rpc_agent",
   "torch.distributed.rpc.init_rpc",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.TensorPipeAgentRpcTest.test_mismatched_type_for_options": {
  "lineno": 4231,
  "symbols_in_volume": [
   "torch.distributed.rpc.BackendType.TENSORPIPE",
   "torch.distributed.rpc.init_rpc",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.TensorPipeAgentRpcTest.test_set_and_get_num_worker_threads": {
  "lineno": 4263,
  "symbols_in_volume": [
   "torch.distributed.rpc.TensorPipeRpcBackendOptions",
   "torch.distributed.rpc.api._get_current_rpc_agent",
   "torch.distributed.rpc.init_rpc",
   "torch.distributed.rpc.shutdown",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.TensorPipeAgentRpcTest.test_tensorpipe_options_throw_on_timedelta_timeout": {
  "lineno": 4304,
  "symbols_in_volume": [
   "datetime.timedelta",
   "torch.distributed.rpc.TensorPipeRpcBackendOptions",
   "torch.testing._internal.dist_utils.dist_init"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.TensorPipeAgentRpcTest.test_tensorpipe_set_default_timeout": {
  "lineno": 4283,
  "symbols_in_volume": [
   "torch.distributed.rpc.TensorPipeRpcBackendOptions",
   "torch.distributed.rpc.get_rpc_timeout",
   "torch.distributed.rpc.init_rpc",
   "torch.distributed.rpc.shutdown",
   "torch.testing._internal.dist_utils.dist_init",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test._call_method_on_rref": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test._stub_construct_rpc_backend_options_handler": {
  "lineno": 92,
  "symbols_in_volume": [
   "unittest.mock.Mock"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test._stub_init_rpc_backend_handler": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.add_rref_to_value": {
  "lineno": 181,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.add_use_future_cb": {
  "lineno": 341,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.rpc_async"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.add_use_future_cb.callback": {
  "lineno": 344,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.add_use_future_nested_cb": {
  "lineno": 363,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.rpc_async",
   "torch.futures.Future"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.add_use_future_nested_cb.callback": {
  "lineno": 366,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.rpc_async"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.add_use_future_set_result": {
  "lineno": 356,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.rpc_async",
   "torch.futures.Future"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.async_add": {
  "lineno": 389,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.functions.async_execution",
   "torch.distributed.rpc.rpc_async"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.async_add_chained": {
  "lineno": 415,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.functions.async_execution",
   "torch.distributed.rpc.rpc_async"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.async_add_chained_multi": {
  "lineno": 422,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.functions.async_execution",
   "torch.distributed.rpc.rpc_async"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.async_add_multi_fanout": {
  "lineno": 437,
  "symbols_in_volume": [
   "threading.Lock",
   "torch.add",
   "torch.distributed.rpc.functions.async_execution",
   "torch.distributed.rpc.rpc_async",
   "torch.futures.Future",
   "torch.zeros_like"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.async_add_multi_fanout.inc_and_set": {
  "lineno": 451,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.async_add_nested": {
  "lineno": 430,
  "symbols_in_volume": [
   "torch.distributed.rpc.functions.async_execution",
   "torch.distributed.rpc.rpc_async"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.async_add_with_future_ctor": {
  "lineno": 406,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.functions.async_execution",
   "torch.distributed.rpc.rpc_async",
   "torch.futures.Future"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.async_raise_func": {
  "lineno": 379,
  "symbols_in_volume": [
   "torch.distributed.rpc.functions.async_execution"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.async_wrong_type": {
  "lineno": 384,
  "symbols_in_volume": [
   "torch.distributed.rpc.functions.async_execution",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.build_complex_tensors": {
  "lineno": 189,
  "symbols_in_volume": [
   "torch.ones"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.check_rref_confirmed": {
  "lineno": 333,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.clear_global_rref": {
  "lineno": 328,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.delayed_add": {
  "lineno": 233,
  "symbols_in_volume": [
   "time.sleep"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.fail_on_fut": {
  "lineno": 375,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.foo_add": {
  "lineno": 43,
  "symbols_in_volume": [
   "torch.add",
   "torch.ones"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.get_events_from_profile": {
  "lineno": 352,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.get_rref_debug_info": {
  "lineno": 337,
  "symbols_in_volume": [
   "torch.distributed.rpc._rref_context_get_debug_info"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.get_rref_list": {
  "lineno": 177,
  "symbols_in_volume": [
   "torch.distributed.rpc.RRef"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.heavy_rpc": {
  "lineno": 296,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.heavy_rpc_torchscript": {
  "lineno": 303,
  "symbols_in_volume": [
   "torch.jit.script"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.light_rpc": {
  "lineno": 292,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.multi_layer_nested_async_rpc": {
  "lineno": 250,
  "symbols_in_volume": [
   "torch.distributed.rpc.rpc_async",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.my_complex_tensor_function": {
  "lineno": 219,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.my_function": {
  "lineno": 206,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.my_rref_function": {
  "lineno": 229,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.my_script_func": {
  "lineno": 311,
  "symbols_in_volume": [
   "torch.add",
   "torch.jit.script"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.my_sleep_func": {
  "lineno": 214,
  "symbols_in_volume": [
   "time.sleep",
   "torch.mul",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.my_tensor_function": {
  "lineno": 210,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.nested_remote": {
  "lineno": 271,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.remote",
   "torch.ones"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.nested_rpc": {
  "lineno": 246,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.rpc_sync",
   "torch.ones"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.nested_rref": {
  "lineno": 264,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.remote",
   "torch.ones"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.no_result": {
  "lineno": 238,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.non_cont_test": {
  "lineno": 197,
  "symbols_in_volume": [
   "torch.equal"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.raise_func": {
  "lineno": 316,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.raise_or_inc": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.return_future": {
  "lineno": 489,
  "symbols_in_volume": [
   "torch.futures.Future"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.rpc_return_rref": {
  "lineno": 288,
  "symbols_in_volume": [
   "torch.add",
   "torch.distributed.rpc.remote",
   "torch.ones"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.rref_forward_chain": {
  "lineno": 276,
  "symbols_in_volume": [
   "torch.distributed.rpc.remote",
   "torch.testing._internal.dist_utils.worker_name"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.run_nested_pickle": {
  "lineno": 185,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.set_and_check_done": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.set_global_rref": {
  "lineno": 323,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.set_value": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.slow_add": {
  "lineno": 394,
  "symbols_in_volume": [
   "time.sleep",
   "torch.add"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.slow_async_add": {
  "lineno": 401,
  "symbols_in_volume": [
   "torch.distributed.rpc.functions.async_execution",
   "torch.distributed.rpc.rpc_async"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.udf_with_torch_ops": {
  "lineno": 46,
  "symbols_in_volume": [
   "contextlib.suppress",
   "torch.add",
   "torch.autograd.profiler.record_function",
   "torch.cuda.device",
   "torch.mul",
   "torch.ones"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.rpc_test.wait_for_value_future": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.tensorpipe_rpc_agent_test_fixture": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.testing._internal.distributed.rpc.tensorpipe_rpc_agent_test_fixture.TensorPipeRpcAgentTestFixture": {
  "lineno": 7,
  "symbols_in_volume": [
   "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture.RpcAgentTestFixture"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.rpc.tensorpipe_rpc_agent_test_fixture.TensorPipeRpcAgentTestFixture.get_shutdown_error_regex": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.tensorpipe_rpc_agent_test_fixture.TensorPipeRpcAgentTestFixture.get_timeout_error_regex": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.tensorpipe_rpc_agent_test_fixture.TensorPipeRpcAgentTestFixture.rpc_backend": {
  "lineno": 8,
  "symbols_in_volume": [
   "torch.distributed.rpc.backend_registry.BackendType"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc.tensorpipe_rpc_agent_test_fixture.TensorPipeRpcAgentTestFixture.rpc_backend_options": {
  "lineno": 14,
  "symbols_in_volume": [
   "torch.distributed.rpc.backend_registry.construct_rpc_backend_options"
  ],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc_utils": {
  "lineno": null,
  "symbols_in_volume": [
   "torch.testing._internal.distributed.ddp_under_dist_autograd_test.DdpComparisonTest",
   "torch.testing._internal.distributed.ddp_under_dist_autograd_test.DdpUnderDistAutogradTest",
   "torch.testing._internal.distributed.nn.api.remote_module_test.RemoteModuleTest",
   "torch.testing._internal.distributed.rpc.dist_autograd_test.DistAutogradTest",
   "torch.testing._internal.distributed.rpc.dist_autograd_test.FaultyAgentDistAutogradTest",
   "torch.testing._internal.distributed.rpc.dist_optimizer_test.DistOptimizerTest",
   "torch.testing._internal.distributed.rpc.jit.dist_autograd_test.JitDistAutogradTest",
   "torch.testing._internal.distributed.rpc.jit.rpc_test.JitRpcTest",
   "torch.testing._internal.distributed.rpc.jit.rpc_test_faulty.JitFaultyAgentRpcTest",
   "torch.testing._internal.distributed.rpc.rpc_test.FaultyAgentRpcTest",
   "torch.testing._internal.distributed.rpc.rpc_test.ProcessGroupAgentRpcTest",
   "torch.testing._internal.distributed.rpc.rpc_test.RpcTest",
   "torch.testing._internal.distributed.rpc.rpc_test.TensorPipeAgentRpcTest"
  ],
  "type": "module"
 },
 "torch.testing._internal.distributed.rpc_utils.ForkHelper": {
  "lineno": 52,
  "symbols_in_volume": [
   "torch.testing._internal.common_distributed.MultiProcessTestCase",
   "torch.testing._internal.common_utils.TEST_WITH_TSAN",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.rpc_utils.ForkHelper.setUp": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc_utils.MultiProcess": {
  "lineno": 68,
  "symbols_in_volume": [
   "enum.Flag",
   "enum.auto"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.rpc_utils.SpawnHelper": {
  "lineno": 59,
  "symbols_in_volume": [
   "torch.testing._internal.common_distributed.MultiProcessTestCase",
   "torch.testing._internal.common_utils.TEST_WITH_ASAN",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "torch.testing._internal.distributed.rpc_utils.SpawnHelper.setUp": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.distributed.rpc_utils.generate_tests": {
  "lineno": 124,
  "symbols_in_volume": [
   "torch.testing._internal.distributed.rpc.rpc_agent_test_fixture.RpcAgentTestFixture",
   "typing.Dict",
   "typing.List",
   "typing.Type"
  ],
  "type": "function"
 },
 "torch.testing._internal.expecttest": {
  "lineno": null,
  "symbols_in_volume": [
   "doctest.testmod",
   "os.getenv",
   "re.DOTALL",
   "re.compile"
  ],
  "type": "module"
 },
 "torch.testing._internal.expecttest.EditHistory": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.expecttest.EditHistory.__init__": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.expecttest.EditHistory.adjust_lineno": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.expecttest.EditHistory.record_edit": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.expecttest.EditHistory.seen_file": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.expecttest.TestCase": {
  "lineno": 160,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "torch.testing._internal.expecttest.TestCase.assertExpectedInline": {
  "lineno": 163,
  "symbols_in_volume": [
   "traceback.extract_stack"
  ],
  "type": "function"
 },
 "torch.testing._internal.expecttest.TestCase.assertExpectedRaisesInline": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.expecttest.escape_trailing_quote": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.expecttest.normalize_nl": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.expecttest.nth_eol": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.expecttest.nth_line": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.expecttest.ok_for_raw_triple_quoted_string": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.expecttest.replace_string_literal": {
  "lineno": 99,
  "symbols_in_volume": [
   "string.printable"
  ],
  "type": "function"
 },
 "torch.testing._internal.expecttest.replace_string_literal.replace": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.generated": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.testing._internal.generated.annotated_fn_args": {
  "lineno": null,
  "symbols_in_volume": [
   "torch.Tensor.__and__",
   "torch.Tensor.__iand__",
   "torch.Tensor.__ilshift__",
   "torch.Tensor.__ior__",
   "torch.Tensor.__irshift__",
   "torch.Tensor.__ixor__",
   "torch.Tensor.__lshift__",
   "torch.Tensor.__or__",
   "torch.Tensor.__rshift__",
   "torch.Tensor.__xor__",
   "torch.Tensor._coalesced_",
   "torch.Tensor._dimI",
   "torch.Tensor._dimV",
   "torch.Tensor._indices",
   "torch.Tensor._nnz",
   "torch.Tensor._values",
   "torch.Tensor.abs",
   "torch.Tensor.abs_",
   "torch.Tensor.absolute",
   "torch.Tensor.absolute_",
   "torch.Tensor.acos",
   "torch.Tensor.acos_",
   "torch.Tensor.acosh",
   "torch.Tensor.acosh_",
   "torch.Tensor.add",
   "torch.Tensor.add_",
   "torch.Tensor.addbmm",
   "torch.Tensor.addbmm_",
   "torch.Tensor.addcdiv",
   "torch.Tensor.addcdiv_",
   "torch.Tensor.addcmul",
   "torch.Tensor.addcmul_",
   "torch.Tensor.addmm",
   "torch.Tensor.addmm_",
   "torch.Tensor.addmv",
   "torch.Tensor.addmv_",
   "torch.Tensor.addr",
   "torch.Tensor.addr_",
   "torch.Tensor.align_as",
   "torch.Tensor.align_to",
   "torch.Tensor.all",
   "torch.Tensor.allclose",
   "torch.Tensor.amax",
   "torch.Tensor.amin",
   "torch.Tensor.angle",
   "torch.Tensor.any",
   "torch.Tensor.arccos",
   "torch.Tensor.arccos_",
   "torch.Tensor.arccosh",
   "torch.Tensor.arccosh_",
   "torch.Tensor.arcsin",
   "torch.Tensor.arcsin_",
   "torch.Tensor.arcsinh",
   "torch.Tensor.arcsinh_",
   "torch.Tensor.arctan",
   "torch.Tensor.arctan_",
   "torch.Tensor.arctanh",
   "torch.Tensor.arctanh_",
   "torch.Tensor.argmax",
   "torch.Tensor.argmin",
   "torch.Tensor.argsort",
   "torch.Tensor.as_strided",
   "torch.Tensor.as_strided_",
   "torch.Tensor.asin",
   "torch.Tensor.asin_",
   "torch.Tensor.asinh",
   "torch.Tensor.asinh_",
   "torch.Tensor.atan",
   "torch.Tensor.atan2",
   "torch.Tensor.atan2_",
   "torch.Tensor.atan_",
   "torch.Tensor.atanh",
   "torch.Tensor.atanh_",
   "torch.Tensor.backward",
   "torch.Tensor.baddbmm",
   "torch.Tensor.baddbmm_",
   "torch.Tensor.bernoulli",
   "torch.Tensor.bernoulli_",
   "torch.Tensor.bincount",
   "torch.Tensor.bitwise_and",
   "torch.Tensor.bitwise_and_",
   "torch.Tensor.bitwise_not",
   "torch.Tensor.bitwise_not_",
   "torch.Tensor.bitwise_or",
   "torch.Tensor.bitwise_or_",
   "torch.Tensor.bitwise_xor",
   "torch.Tensor.bitwise_xor_",
   "torch.Tensor.bmm",
   "torch.Tensor.cauchy_",
   "torch.Tensor.ceil",
   "torch.Tensor.ceil_",
   "torch.Tensor.cholesky",
   "torch.Tensor.cholesky_inverse",
   "torch.Tensor.cholesky_solve",
   "torch.Tensor.chunk",
   "torch.Tensor.clamp",
   "torch.Tensor.clamp_",
   "torch.Tensor.clamp_max",
   "torch.Tensor.clamp_max_",
   "torch.Tensor.clamp_min",
   "torch.Tensor.clamp_min_",
   "torch.Tensor.clip",
   "torch.Tensor.clip_",
   "torch.Tensor.clone",
   "torch.Tensor.coalesce",
   "torch.Tensor.conj",
   "torch.Tensor.cos",
   "torch.Tensor.cos_",
   "torch.Tensor.cosh",
   "torch.Tensor.cosh_",
   "torch.Tensor.count_nonzero",
   "torch.Tensor.cross",
   "torch.Tensor.cummax",
   "torch.Tensor.cummin",
   "torch.Tensor.cumprod",
   "torch.Tensor.cumsum",
   "torch.Tensor.deg2rad",
   "torch.Tensor.deg2rad_",
   "torch.Tensor.dense_dim",
   "torch.Tensor.dequantize",
   "torch.Tensor.det",
   "torch.Tensor.detach",
   "torch.Tensor.detach_",
   "torch.Tensor.diag",
   "torch.Tensor.diag_embed",
   "torch.Tensor.diagflat",
   "torch.Tensor.diagonal",
   "torch.Tensor.digamma",
   "torch.Tensor.digamma_",
   "torch.Tensor.dist",
   "torch.Tensor.div",
   "torch.Tensor.div_",
   "torch.Tensor.divide",
   "torch.Tensor.divide_",
   "torch.Tensor.dot",
   "torch.Tensor.eig",
   "torch.Tensor.eq",
   "torch.Tensor.eq_",
   "torch.Tensor.equal",
   "torch.Tensor.erf",
   "torch.Tensor.erf_",
   "torch.Tensor.erfc",
   "torch.Tensor.erfc_",
   "torch.Tensor.erfinv",
   "torch.Tensor.erfinv_",
   "torch.Tensor.exp",
   "torch.Tensor.exp2",
   "torch.Tensor.exp2_",
   "torch.Tensor.exp_",
   "torch.Tensor.expand",
   "torch.Tensor.expand_as",
   "torch.Tensor.expm1",
   "torch.Tensor.expm1_",
   "torch.Tensor.exponential_",
   "torch.Tensor.fft",
   "torch.Tensor.fill_",
   "torch.Tensor.fill_diagonal_",
   "torch.Tensor.fix",
   "torch.Tensor.fix_",
   "torch.Tensor.flatten",
   "torch.Tensor.flip",
   "torch.Tensor.fliplr",
   "torch.Tensor.flipud",
   "torch.Tensor.floor",
   "torch.Tensor.floor_",
   "torch.Tensor.floor_divide",
   "torch.Tensor.floor_divide_",
   "torch.Tensor.fmod",
   "torch.Tensor.fmod_",
   "torch.Tensor.frac",
   "torch.Tensor.frac_",
   "torch.Tensor.gather",
   "torch.Tensor.gcd",
   "torch.Tensor.gcd_",
   "torch.Tensor.ge",
   "torch.Tensor.ge_",
   "torch.Tensor.geometric_",
   "torch.Tensor.geqrf",
   "torch.Tensor.ger",
   "torch.Tensor.greater",
   "torch.Tensor.greater_",
   "torch.Tensor.greater_equal",
   "torch.Tensor.greater_equal_",
   "torch.Tensor.gt",
   "torch.Tensor.gt_",
   "torch.Tensor.hardshrink",
   "torch.Tensor.heaviside",
   "torch.Tensor.heaviside_",
   "torch.Tensor.histc",
   "torch.Tensor.hypot",
   "torch.Tensor.hypot_",
   "torch.Tensor.i0",
   "torch.Tensor.i0_",
   "torch.Tensor.ifft",
   "torch.Tensor.index_add",
   "torch.Tensor.index_add_",
   "torch.Tensor.index_copy",
   "torch.Tensor.index_copy_",
   "torch.Tensor.index_fill",
   "torch.Tensor.index_fill_",
   "torch.Tensor.index_put",
   "torch.Tensor.index_put_",
   "torch.Tensor.index_select",
   "torch.Tensor.indices",
   "torch.Tensor.int_repr",
   "torch.Tensor.inverse",
   "torch.Tensor.irfft",
   "torch.Tensor.is_coalesced",
   "torch.Tensor.is_complex",
   "torch.Tensor.is_distributed",
   "torch.Tensor.is_floating_point",
   "torch.Tensor.is_nonzero",
   "torch.Tensor.is_pinned",
   "torch.Tensor.is_same_size",
   "torch.Tensor.is_set_to",
   "torch.Tensor.is_signed",
   "torch.Tensor.isclose",
   "torch.Tensor.isfinite",
   "torch.Tensor.isinf",
   "torch.Tensor.isnan",
   "torch.Tensor.isneginf",
   "torch.Tensor.isposinf",
   "torch.Tensor.isreal",
   "torch.Tensor.istft",
   "torch.Tensor.kthvalue",
   "torch.Tensor.lcm",
   "torch.Tensor.lcm_",
   "torch.Tensor.le",
   "torch.Tensor.le_",
   "torch.Tensor.lerp",
   "torch.Tensor.lerp_",
   "torch.Tensor.less",
   "torch.Tensor.less_",
   "torch.Tensor.less_equal",
   "torch.Tensor.less_equal_",
   "torch.Tensor.lgamma",
   "torch.Tensor.lgamma_",
   "torch.Tensor.log",
   "torch.Tensor.log10",
   "torch.Tensor.log10_",
   "torch.Tensor.log1p",
   "torch.Tensor.log1p_",
   "torch.Tensor.log2",
   "torch.Tensor.log2_",
   "torch.Tensor.log_",
   "torch.Tensor.log_normal_",
   "torch.Tensor.log_softmax",
   "torch.Tensor.logaddexp",
   "torch.Tensor.logaddexp2",
   "torch.Tensor.logcumsumexp",
   "torch.Tensor.logdet",
   "torch.Tensor.logical_and",
   "torch.Tensor.logical_and_",
   "torch.Tensor.logical_not",
   "torch.Tensor.logical_not_",
   "torch.Tensor.logical_or",
   "torch.Tensor.logical_or_",
   "torch.Tensor.logical_xor",
   "torch.Tensor.logical_xor_",
   "torch.Tensor.logit",
   "torch.Tensor.logit_",
   "torch.Tensor.logsumexp",
   "torch.Tensor.lstsq",
   "torch.Tensor.lt",
   "torch.Tensor.lt_",
   "torch.Tensor.lu_solve",
   "torch.Tensor.masked_fill",
   "torch.Tensor.masked_fill_",
   "torch.Tensor.masked_scatter",
   "torch.Tensor.masked_scatter_",
   "torch.Tensor.masked_select",
   "torch.Tensor.matmul",
   "torch.Tensor.matrix_exp",
   "torch.Tensor.matrix_power",
   "torch.Tensor.max",
   "torch.Tensor.maximum",
   "torch.Tensor.mean",
   "torch.Tensor.median",
   "torch.Tensor.min",
   "torch.Tensor.minimum",
   "torch.Tensor.mm",
   "torch.Tensor.mode",
   "torch.Tensor.movedim",
   "torch.Tensor.mul",
   "torch.Tensor.mul_",
   "torch.Tensor.multinomial",
   "torch.Tensor.multiply",
   "torch.Tensor.multiply_",
   "torch.Tensor.mv",
   "torch.Tensor.mvlgamma",
   "torch.Tensor.mvlgamma_",
   "torch.Tensor.nanquantile",
   "torch.Tensor.nansum",
   "torch.Tensor.narrow",
   "torch.Tensor.narrow_copy",
   "torch.Tensor.ne",
   "torch.Tensor.ne_",
   "torch.Tensor.neg",
   "torch.Tensor.neg_",
   "torch.Tensor.negative",
   "torch.Tensor.negative_",
   "torch.Tensor.new_empty",
   "torch.Tensor.new_full",
   "torch.Tensor.new_zeros",
   "torch.Tensor.nextafter",
   "torch.Tensor.nextafter_",
   "torch.Tensor.norm",
   "torch.Tensor.normal_",
   "torch.Tensor.not_equal",
   "torch.Tensor.not_equal_",
   "torch.Tensor.orgqr",
   "torch.Tensor.ormqr",
   "torch.Tensor.outer",
   "torch.Tensor.permute",
   "torch.Tensor.pin_memory",
   "torch.Tensor.pinverse",
   "torch.Tensor.polygamma",
   "torch.Tensor.polygamma_",
   "torch.Tensor.pow",
   "torch.Tensor.pow_",
   "torch.Tensor.prelu",
   "torch.Tensor.prod",
   "torch.Tensor.put_",
   "torch.Tensor.q_per_channel_axis",
   "torch.Tensor.q_per_channel_scales",
   "torch.Tensor.q_per_channel_zero_points",
   "torch.Tensor.q_scale",
   "torch.Tensor.q_zero_point",
   "torch.Tensor.qr",
   "torch.Tensor.qscheme",
   "torch.Tensor.quantile",
   "torch.Tensor.rad2deg",
   "torch.Tensor.rad2deg_",
   "torch.Tensor.random_",
   "torch.Tensor.reciprocal",
   "torch.Tensor.reciprocal_",
   "torch.Tensor.refine_names",
   "torch.Tensor.relu",
   "torch.Tensor.relu_",
   "torch.Tensor.remainder",
   "torch.Tensor.remainder_",
   "torch.Tensor.rename",
   "torch.Tensor.rename_",
   "torch.Tensor.renorm",
   "torch.Tensor.renorm_",
   "torch.Tensor.repeat",
   "torch.Tensor.repeat_interleave",
   "torch.Tensor.reshape",
   "torch.Tensor.reshape_as",
   "torch.Tensor.resize_",
   "torch.Tensor.resize_as_",
   "torch.Tensor.rfft",
   "torch.Tensor.roll",
   "torch.Tensor.rot90",
   "torch.Tensor.round",
   "torch.Tensor.round_",
   "torch.Tensor.rsqrt",
   "torch.Tensor.rsqrt_",
   "torch.Tensor.scatter",
   "torch.Tensor.scatter_",
   "torch.Tensor.scatter_add",
   "torch.Tensor.scatter_add_",
   "torch.Tensor.select",
   "torch.Tensor.sgn",
   "torch.Tensor.sgn_",
   "torch.Tensor.sigmoid",
   "torch.Tensor.sigmoid_",
   "torch.Tensor.sign",
   "torch.Tensor.sign_",
   "torch.Tensor.signbit",
   "torch.Tensor.sin",
   "torch.Tensor.sin_",
   "torch.Tensor.sinh",
   "torch.Tensor.sinh_",
   "torch.Tensor.slogdet",
   "torch.Tensor.smm",
   "torch.Tensor.softmax",
   "torch.Tensor.solve",
   "torch.Tensor.sort",
   "torch.Tensor.sparse_dim",
   "torch.Tensor.sparse_mask",
   "torch.Tensor.sparse_resize_",
   "torch.Tensor.sparse_resize_and_clear_",
   "torch.Tensor.split",
   "torch.Tensor.split_with_sizes",
   "torch.Tensor.sqrt",
   "torch.Tensor.sqrt_",
   "torch.Tensor.square",
   "torch.Tensor.square_",
   "torch.Tensor.squeeze",
   "torch.Tensor.squeeze_",
   "torch.Tensor.sspaddmm",
   "torch.Tensor.std",
   "torch.Tensor.stft",
   "torch.Tensor.sub",
   "torch.Tensor.sub_",
   "torch.Tensor.subtract",
   "torch.Tensor.subtract_",
   "torch.Tensor.sum",
   "torch.Tensor.sum_to_size",
   "torch.Tensor.svd",
   "torch.Tensor.symeig",
   "torch.Tensor.t",
   "torch.Tensor.t_",
   "torch.Tensor.take",
   "torch.Tensor.tan",
   "torch.Tensor.tan_",
   "torch.Tensor.tanh",
   "torch.Tensor.tanh_",
   "torch.Tensor.to_dense",
   "torch.Tensor.to_mkldnn",
   "torch.Tensor.to_sparse",
   "torch.Tensor.topk",
   "torch.Tensor.trace",
   "torch.Tensor.transpose",
   "torch.Tensor.transpose_",
   "torch.Tensor.triangular_solve",
   "torch.Tensor.tril",
   "torch.Tensor.tril_",
   "torch.Tensor.triu",
   "torch.Tensor.triu_",
   "torch.Tensor.true_divide",
   "torch.Tensor.true_divide_",
   "torch.Tensor.trunc",
   "torch.Tensor.trunc_",
   "torch.Tensor.type_as",
   "torch.Tensor.unbind",
   "torch.Tensor.unflatten",
   "torch.Tensor.unfold",
   "torch.Tensor.uniform_",
   "torch.Tensor.unsafe_chunk",
   "torch.Tensor.unsafe_split",
   "torch.Tensor.unsafe_split_with_sizes",
   "torch.Tensor.unsqueeze",
   "torch.Tensor.unsqueeze_",
   "torch.Tensor.values",
   "torch.Tensor.var",
   "torch.Tensor.vdot",
   "torch.Tensor.view",
   "torch.Tensor.view_as",
   "torch.Tensor.where",
   "torch.Tensor.zero_",
   "torch._C._VariableFunctions.__and__",
   "torch._C._VariableFunctions.__lshift__",
   "torch._C._VariableFunctions.__or__",
   "torch._C._VariableFunctions.__rshift__",
   "torch._C._VariableFunctions.__xor__",
   "torch._C._VariableFunctions._adaptive_avg_pool2d",
   "torch._C._VariableFunctions._add_batch_dim",
   "torch._C._VariableFunctions._add_relu",
   "torch._C._VariableFunctions._add_relu_",
   "torch._C._VariableFunctions._addmv_impl_",
   "torch._C._VariableFunctions._aminmax",
   "torch._C._VariableFunctions._amp_non_finite_check_and_unscale_",
   "torch._C._VariableFunctions._amp_update_scale",
   "torch._C._VariableFunctions._baddbmm_mkl_",
   "torch._C._VariableFunctions._batch_norm_impl_index",
   "torch._C._VariableFunctions._bmm",
   "torch._C._VariableFunctions._cast_Byte",
   "torch._C._VariableFunctions._cast_Char",
   "torch._C._VariableFunctions._cast_Double",
   "torch._C._VariableFunctions._cast_Float",
   "torch._C._VariableFunctions._cast_Half",
   "torch._C._VariableFunctions._cast_Int",
   "torch._C._VariableFunctions._cast_Long",
   "torch._C._VariableFunctions._cast_Short",
   "torch._C._VariableFunctions._cat",
   "torch._C._VariableFunctions._choose_qparams_per_tensor",
   "torch._C._VariableFunctions._compute_linear_combination",
   "torch._C._VariableFunctions._conj",
   "torch._C._VariableFunctions._convolution",
   "torch._C._VariableFunctions._convolution_nogroup",
   "torch._C._VariableFunctions._copy_from",
   "torch._C._VariableFunctions._ctc_loss",
   "torch._C._VariableFunctions._cudnn_ctc_loss",
   "torch._C._VariableFunctions._cudnn_init_dropout_state",
   "torch._C._VariableFunctions._cudnn_rnn",
   "torch._C._VariableFunctions._cudnn_rnn_flatten_weight",
   "torch._C._VariableFunctions._cufft_clear_plan_cache",
   "torch._C._VariableFunctions._cufft_get_plan_cache_max_size",
   "torch._C._VariableFunctions._cufft_get_plan_cache_size",
   "torch._C._VariableFunctions._cufft_set_plan_cache_max_size",
   "torch._C._VariableFunctions._cummax_helper",
   "torch._C._VariableFunctions._cummin_helper",
   "torch._C._VariableFunctions._debug_has_internal_overlap",
   "torch._C._VariableFunctions._dim_arange",
   "torch._C._VariableFunctions._dirichlet_grad",
   "torch._C._VariableFunctions._embedding_bag",
   "torch._C._VariableFunctions._embedding_bag_forward_only",
   "torch._C._VariableFunctions._empty_affine_quantized",
   "torch._C._VariableFunctions._empty_per_channel_affine_quantized",
   "torch._C._VariableFunctions._euclidean_dist",
   "torch._C._VariableFunctions._fake_quantize_learnable_per_channel_affine",
   "torch._C._VariableFunctions._fake_quantize_learnable_per_tensor_affine",
   "torch._C._VariableFunctions._fft_with_size",
   "torch._C._VariableFunctions._foreach_add",
   "torch._C._VariableFunctions._foreach_add_",
   "torch._C._VariableFunctions._foreach_add_scalar_list",
   "torch._C._VariableFunctions._foreach_add_scalar_list_",
   "torch._C._VariableFunctions._foreach_addcdiv",
   "torch._C._VariableFunctions._foreach_addcdiv_",
   "torch._C._VariableFunctions._foreach_addcmul",
   "torch._C._VariableFunctions._foreach_addcmul_",
   "torch._C._VariableFunctions._foreach_div",
   "torch._C._VariableFunctions._foreach_div_",
   "torch._C._VariableFunctions._foreach_div_scalar_list",
   "torch._C._VariableFunctions._foreach_div_scalar_list_",
   "torch._C._VariableFunctions._foreach_exp",
   "torch._C._VariableFunctions._foreach_exp_",
   "torch._C._VariableFunctions._foreach_mul",
   "torch._C._VariableFunctions._foreach_mul_",
   "torch._C._VariableFunctions._foreach_mul_scalar_list",
   "torch._C._VariableFunctions._foreach_mul_scalar_list_",
   "torch._C._VariableFunctions._foreach_sqrt",
   "torch._C._VariableFunctions._foreach_sqrt_",
   "torch._C._VariableFunctions._foreach_sub",
   "torch._C._VariableFunctions._foreach_sub_",
   "torch._C._VariableFunctions._foreach_sub_scalar_list",
   "torch._C._VariableFunctions._foreach_sub_scalar_list_",
   "torch._C._VariableFunctions._fused_dropout",
   "torch._C._VariableFunctions._grid_sampler_2d_cpu_fallback",
   "torch._C._VariableFunctions._has_compatible_shallow_copy_type",
   "torch._C._VariableFunctions._index_copy_",
   "torch._C._VariableFunctions._index_put_impl_",
   "torch._C._VariableFunctions._log_softmax",
   "torch._C._VariableFunctions._log_softmax_backward_data",
   "torch._C._VariableFunctions._logcumsumexp",
   "torch._C._VariableFunctions._lu_solve_helper",
   "torch._C._VariableFunctions._lu_with_info",
   "torch._C._VariableFunctions._make_per_channel_quantized_tensor",
   "torch._C._VariableFunctions._make_per_tensor_quantized_tensor",
   "torch._C._VariableFunctions._masked_scale",
   "torch._C._VariableFunctions._mkldnn_reshape",
   "torch._C._VariableFunctions._mkldnn_transpose",
   "torch._C._VariableFunctions._mkldnn_transpose_",
   "torch._C._VariableFunctions._mode",
   "torch._C._VariableFunctions._multinomial_alias_draw",
   "torch._C._VariableFunctions._multinomial_alias_setup",
   "torch._C._VariableFunctions._nnpack_available",
   "torch._C._VariableFunctions._nnpack_spatial_convolution",
   "torch._C._VariableFunctions._pack_padded_sequence",
   "torch._C._VariableFunctions._pad_packed_sequence",
   "torch._C._VariableFunctions._remove_batch_dim",
   "torch._C._VariableFunctions._reshape_from_tensor",
   "torch._C._VariableFunctions._s_where",
   "torch._C._VariableFunctions._sample_dirichlet",
   "torch._C._VariableFunctions._saturate_weight_to_fp16",
   "torch._C._VariableFunctions._shape_as_tensor",
   "torch._C._VariableFunctions._sobol_engine_draw",
   "torch._C._VariableFunctions._sobol_engine_ff_",
   "torch._C._VariableFunctions._sobol_engine_initialize_state_",
   "torch._C._VariableFunctions._sobol_engine_scramble_",
   "torch._C._VariableFunctions._softmax",
   "torch._C._VariableFunctions._softmax_backward_data",
   "torch._C._VariableFunctions._sparse_addmm",
   "torch._C._VariableFunctions._sparse_log_softmax",
   "torch._C._VariableFunctions._sparse_log_softmax_backward_data",
   "torch._C._VariableFunctions._sparse_mm",
   "torch._C._VariableFunctions._sparse_softmax",
   "torch._C._VariableFunctions._sparse_softmax_backward_data",
   "torch._C._VariableFunctions._sparse_sum",
   "torch._C._VariableFunctions._standard_gamma",
   "torch._C._VariableFunctions._standard_gamma_grad",
   "torch._C._VariableFunctions._std",
   "torch._C._VariableFunctions._test_serialization_subcmul",
   "torch._C._VariableFunctions._trilinear",
   "torch._C._VariableFunctions._unique",
   "torch._C._VariableFunctions._unique2",
   "torch._C._VariableFunctions._use_cudnn_ctc_loss",
   "torch._C._VariableFunctions._use_cudnn_rnn_flatten_weight",
   "torch._C._VariableFunctions._validate_sparse_coo_tensor_args",
   "torch._C._VariableFunctions._var",
   "torch._C._VariableFunctions._weight_norm",
   "torch._C._VariableFunctions._weight_norm_cuda_interface",
   "torch._C._VariableFunctions.abs",
   "torch._C._VariableFunctions.abs_",
   "torch._C._VariableFunctions.absolute",
   "torch._C._VariableFunctions.acos",
   "torch._C._VariableFunctions.acos_",
   "torch._C._VariableFunctions.acosh",
   "torch._C._VariableFunctions.acosh_",
   "torch._C._VariableFunctions.adaptive_avg_pool1d",
   "torch._C._VariableFunctions.adaptive_max_pool1d",
   "torch._C._VariableFunctions.add",
   "torch._C._VariableFunctions.addbmm",
   "torch._C._VariableFunctions.addcdiv",
   "torch._C._VariableFunctions.addcmul",
   "torch._C._VariableFunctions.addmm",
   "torch._C._VariableFunctions.addmv",
   "torch._C._VariableFunctions.addmv_",
   "torch._C._VariableFunctions.addr",
   "torch._C._VariableFunctions.affine_grid_generator",
   "torch._C._VariableFunctions.align_tensors",
   "torch._C._VariableFunctions.all",
   "torch._C._VariableFunctions.allclose",
   "torch._C._VariableFunctions.alpha_dropout",
   "torch._C._VariableFunctions.alpha_dropout_",
   "torch._C._VariableFunctions.amax",
   "torch._C._VariableFunctions.amin",
   "torch._C._VariableFunctions.angle",
   "torch._C._VariableFunctions.any",
   "torch._C._VariableFunctions.arccos",
   "torch._C._VariableFunctions.arccos_",
   "torch._C._VariableFunctions.arccosh",
   "torch._C._VariableFunctions.arccosh_",
   "torch._C._VariableFunctions.arcsin",
   "torch._C._VariableFunctions.arcsin_",
   "torch._C._VariableFunctions.arcsinh",
   "torch._C._VariableFunctions.arcsinh_",
   "torch._C._VariableFunctions.arctan",
   "torch._C._VariableFunctions.arctan_",
   "torch._C._VariableFunctions.arctanh",
   "torch._C._VariableFunctions.arctanh_",
   "torch._C._VariableFunctions.argmax",
   "torch._C._VariableFunctions.argmin",
   "torch._C._VariableFunctions.argsort",
   "torch._C._VariableFunctions.as_strided",
   "torch._C._VariableFunctions.as_strided_",
   "torch._C._VariableFunctions.asin",
   "torch._C._VariableFunctions.asin_",
   "torch._C._VariableFunctions.asinh",
   "torch._C._VariableFunctions.asinh_",
   "torch._C._VariableFunctions.atan",
   "torch._C._VariableFunctions.atan2",
   "torch._C._VariableFunctions.atan_",
   "torch._C._VariableFunctions.atanh",
   "torch._C._VariableFunctions.atanh_",
   "torch._C._VariableFunctions.atleast_1d",
   "torch._C._VariableFunctions.atleast_2d",
   "torch._C._VariableFunctions.atleast_3d",
   "torch._C._VariableFunctions.avg_pool1d",
   "torch._C._VariableFunctions.baddbmm",
   "torch._C._VariableFunctions.bartlett_window",
   "torch._C._VariableFunctions.batch_norm",
   "torch._C._VariableFunctions.batch_norm_backward_elemt",
   "torch._C._VariableFunctions.batch_norm_backward_reduce",
   "torch._C._VariableFunctions.batch_norm_elemt",
   "torch._C._VariableFunctions.batch_norm_gather_stats",
   "torch._C._VariableFunctions.batch_norm_gather_stats_with_counts",
   "torch._C._VariableFunctions.batch_norm_stats",
   "torch._C._VariableFunctions.batch_norm_update_stats",
   "torch._C._VariableFunctions.bernoulli",
   "torch._C._VariableFunctions.bilinear",
   "torch._C._VariableFunctions.binary_cross_entropy_with_logits",
   "torch._C._VariableFunctions.bincount",
   "torch._C._VariableFunctions.binomial",
   "torch._C._VariableFunctions.bitwise_and",
   "torch._C._VariableFunctions.bitwise_not",
   "torch._C._VariableFunctions.bitwise_or",
   "torch._C._VariableFunctions.bitwise_xor",
   "torch._C._VariableFunctions.blackman_window",
   "torch._C._VariableFunctions.block_diag",
   "torch._C._VariableFunctions.bmm",
   "torch._C._VariableFunctions.broadcast_tensors",
   "torch._C._VariableFunctions.bucketize",
   "torch._C._VariableFunctions.can_cast",
   "torch._C._VariableFunctions.cartesian_prod",
   "torch._C._VariableFunctions.cat",
   "torch._C._VariableFunctions.cdist",
   "torch._C._VariableFunctions.ceil",
   "torch._C._VariableFunctions.ceil_",
   "torch._C._VariableFunctions.celu",
   "torch._C._VariableFunctions.celu_",
   "torch._C._VariableFunctions.chain_matmul",
   "torch._C._VariableFunctions.channel_shuffle",
   "torch._C._VariableFunctions.cholesky",
   "torch._C._VariableFunctions.cholesky_inverse",
   "torch._C._VariableFunctions.cholesky_solve",
   "torch._C._VariableFunctions.choose_qparams_optimized",
   "torch._C._VariableFunctions.chunk",
   "torch._C._VariableFunctions.clamp",
   "torch._C._VariableFunctions.clamp_",
   "torch._C._VariableFunctions.clamp_max",
   "torch._C._VariableFunctions.clamp_max_",
   "torch._C._VariableFunctions.clamp_min",
   "torch._C._VariableFunctions.clamp_min_",
   "torch._C._VariableFunctions.clip",
   "torch._C._VariableFunctions.clip_",
   "torch._C._VariableFunctions.clone",
   "torch._C._VariableFunctions.combinations",
   "torch._C._VariableFunctions.complex",
   "torch._C._VariableFunctions.conj",
   "torch._C._VariableFunctions.constant_pad_nd",
   "torch._C._VariableFunctions.conv1d",
   "torch._C._VariableFunctions.conv2d",
   "torch._C._VariableFunctions.conv3d",
   "torch._C._VariableFunctions.conv_tbc",
   "torch._C._VariableFunctions.conv_transpose1d",
   "torch._C._VariableFunctions.conv_transpose2d",
   "torch._C._VariableFunctions.conv_transpose3d",
   "torch._C._VariableFunctions.convolution",
   "torch._C._VariableFunctions.cos",
   "torch._C._VariableFunctions.cos_",
   "torch._C._VariableFunctions.cosh",
   "torch._C._VariableFunctions.cosh_",
   "torch._C._VariableFunctions.cosine_embedding_loss",
   "torch._C._VariableFunctions.cosine_similarity",
   "torch._C._VariableFunctions.count_nonzero",
   "torch._C._VariableFunctions.cross",
   "torch._C._VariableFunctions.ctc_loss",
   "torch._C._VariableFunctions.cudnn_affine_grid_generator",
   "torch._C._VariableFunctions.cudnn_batch_norm",
   "torch._C._VariableFunctions.cudnn_convolution",
   "torch._C._VariableFunctions.cudnn_convolution_transpose",
   "torch._C._VariableFunctions.cudnn_grid_sampler",
   "torch._C._VariableFunctions.cudnn_is_acceptable",
   "torch._C._VariableFunctions.cummax",
   "torch._C._VariableFunctions.cummin",
   "torch._C._VariableFunctions.cumprod",
   "torch._C._VariableFunctions.cumsum",
   "torch._C._VariableFunctions.deg2rad",
   "torch._C._VariableFunctions.deg2rad_",
   "torch._C._VariableFunctions.dequantize",
   "torch._C._VariableFunctions.det",
   "torch._C._VariableFunctions.detach",
   "torch._C._VariableFunctions.detach_",
   "torch._C._VariableFunctions.diag",
   "torch._C._VariableFunctions.diag_embed",
   "torch._C._VariableFunctions.diagflat",
   "torch._C._VariableFunctions.diagonal",
   "torch._C._VariableFunctions.digamma",
   "torch._C._VariableFunctions.dist",
   "torch._C._VariableFunctions.div",
   "torch._C._VariableFunctions.divide",
   "torch._C._VariableFunctions.dot",
   "torch._C._VariableFunctions.dropout",
   "torch._C._VariableFunctions.dropout_",
   "torch._C._VariableFunctions.dstack",
   "torch._C._VariableFunctions.eig",
   "torch._C._VariableFunctions.einsum",
   "torch._C._VariableFunctions.embedding",
   "torch._C._VariableFunctions.embedding_bag",
   "torch._C._VariableFunctions.embedding_renorm_",
   "torch._C._VariableFunctions.empty",
   "torch._C._VariableFunctions.empty_like",
   "torch._C._VariableFunctions.empty_meta",
   "torch._C._VariableFunctions.empty_quantized",
   "torch._C._VariableFunctions.empty_strided",
   "torch._C._VariableFunctions.eq",
   "torch._C._VariableFunctions.equal",
   "torch._C._VariableFunctions.erf",
   "torch._C._VariableFunctions.erf_",
   "torch._C._VariableFunctions.erfc",
   "torch._C._VariableFunctions.erfc_",
   "torch._C._VariableFunctions.erfinv",
   "torch._C._VariableFunctions.exp",
   "torch._C._VariableFunctions.exp2",
   "torch._C._VariableFunctions.exp2_",
   "torch._C._VariableFunctions.exp_",
   "torch._C._VariableFunctions.expm1",
   "torch._C._VariableFunctions.expm1_",
   "torch._C._VariableFunctions.eye",
   "torch._C._VariableFunctions.fake_quantize_per_channel_affine",
   "torch._C._VariableFunctions.fake_quantize_per_tensor_affine",
   "torch._C._VariableFunctions.fbgemm_linear_fp16_weight",
   "torch._C._VariableFunctions.fbgemm_linear_fp16_weight_fp32_activation",
   "torch._C._VariableFunctions.fbgemm_linear_int8_weight",
   "torch._C._VariableFunctions.fbgemm_linear_int8_weight_fp32_activation",
   "torch._C._VariableFunctions.fbgemm_linear_quantize_weight",
   "torch._C._VariableFunctions.fbgemm_pack_gemm_matrix_fp16",
   "torch._C._VariableFunctions.fbgemm_pack_quantized_matrix",
   "torch._C._VariableFunctions.feature_alpha_dropout",
   "torch._C._VariableFunctions.feature_alpha_dropout_",
   "torch._C._VariableFunctions.feature_dropout",
   "torch._C._VariableFunctions.feature_dropout_",
   "torch._C._VariableFunctions.fft",
   "torch._C._VariableFunctions.fill_",
   "torch._C._VariableFunctions.fix",
   "torch._C._VariableFunctions.fix_",
   "torch._C._VariableFunctions.flatten",
   "torch._C._VariableFunctions.flip",
   "torch._C._VariableFunctions.fliplr",
   "torch._C._VariableFunctions.flipud",
   "torch._C._VariableFunctions.floor",
   "torch._C._VariableFunctions.floor_",
   "torch._C._VariableFunctions.floor_divide",
   "torch._C._VariableFunctions.fmod",
   "torch._C._VariableFunctions.frac",
   "torch._C._VariableFunctions.frac_",
   "torch._C._VariableFunctions.frobenius_norm",
   "torch._C._VariableFunctions.from_file",
   "torch._C._VariableFunctions.full_like",
   "torch._C._VariableFunctions.gather",
   "torch._C._VariableFunctions.gcd",
   "torch._C._VariableFunctions.gcd_",
   "torch._C._VariableFunctions.ge",
   "torch._C._VariableFunctions.geqrf",
   "torch._C._VariableFunctions.ger",
   "torch._C._VariableFunctions.greater",
   "torch._C._VariableFunctions.greater_equal",
   "torch._C._VariableFunctions.grid_sampler",
   "torch._C._VariableFunctions.grid_sampler_2d",
   "torch._C._VariableFunctions.grid_sampler_3d",
   "torch._C._VariableFunctions.group_norm",
   "torch._C._VariableFunctions.gru",
   "torch._C._VariableFunctions.gru_cell",
   "torch._C._VariableFunctions.gt",
   "torch._C._VariableFunctions.hamming_window",
   "torch._C._VariableFunctions.hann_window",
   "torch._C._VariableFunctions.hardshrink",
   "torch._C._VariableFunctions.heaviside",
   "torch._C._VariableFunctions.hinge_embedding_loss",
   "torch._C._VariableFunctions.histc",
   "torch._C._VariableFunctions.hspmm",
   "torch._C._VariableFunctions.hstack",
   "torch._C._VariableFunctions.hypot",
   "torch._C._VariableFunctions.i0",
   "torch._C._VariableFunctions.i0_",
   "torch._C._VariableFunctions.ifft",
   "torch._C._VariableFunctions.imag",
   "torch._C._VariableFunctions.index_add",
   "torch._C._VariableFunctions.index_copy",
   "torch._C._VariableFunctions.index_fill",
   "torch._C._VariableFunctions.index_put",
   "torch._C._VariableFunctions.index_put_",
   "torch._C._VariableFunctions.index_select",
   "torch._C._VariableFunctions.instance_norm",
   "torch._C._VariableFunctions.int_repr",
   "torch._C._VariableFunctions.inverse",
   "torch._C._VariableFunctions.irfft",
   "torch._C._VariableFunctions.is_complex",
   "torch._C._VariableFunctions.is_distributed",
   "torch._C._VariableFunctions.is_floating_point",
   "torch._C._VariableFunctions.is_nonzero",
   "torch._C._VariableFunctions.is_same_size",
   "torch._C._VariableFunctions.is_signed",
   "torch._C._VariableFunctions.is_vulkan_available",
   "torch._C._VariableFunctions.isclose",
   "torch._C._VariableFunctions.isfinite",
   "torch._C._VariableFunctions.isinf",
   "torch._C._VariableFunctions.isnan",
   "torch._C._VariableFunctions.isneginf",
   "torch._C._VariableFunctions.isposinf",
   "torch._C._VariableFunctions.isreal",
   "torch._C._VariableFunctions.istft",
   "torch._C._VariableFunctions.kaiser_window",
   "torch._C._VariableFunctions.kl_div",
   "torch._C._VariableFunctions.kthvalue",
   "torch._C._VariableFunctions.layer_norm",
   "torch._C._VariableFunctions.lcm",
   "torch._C._VariableFunctions.lcm_",
   "torch._C._VariableFunctions.le",
   "torch._C._VariableFunctions.lerp",
   "torch._C._VariableFunctions.less",
   "torch._C._VariableFunctions.less_equal",
   "torch._C._VariableFunctions.lgamma",
   "torch._C._VariableFunctions.linspace",
   "torch._C._VariableFunctions.log",
   "torch._C._VariableFunctions.log10",
   "torch._C._VariableFunctions.log10_",
   "torch._C._VariableFunctions.log1p",
   "torch._C._VariableFunctions.log1p_",
   "torch._C._VariableFunctions.log2",
   "torch._C._VariableFunctions.log2_",
   "torch._C._VariableFunctions.log_",
   "torch._C._VariableFunctions.log_softmax",
   "torch._C._VariableFunctions.logaddexp",
   "torch._C._VariableFunctions.logaddexp2",
   "torch._C._VariableFunctions.logcumsumexp",
   "torch._C._VariableFunctions.logdet",
   "torch._C._VariableFunctions.logical_and",
   "torch._C._VariableFunctions.logical_not",
   "torch._C._VariableFunctions.logical_or",
   "torch._C._VariableFunctions.logical_xor",
   "torch._C._VariableFunctions.logit",
   "torch._C._VariableFunctions.logit_",
   "torch._C._VariableFunctions.logspace",
   "torch._C._VariableFunctions.logsumexp",
   "torch._C._VariableFunctions.lstm",
   "torch._C._VariableFunctions.lstm_cell",
   "torch._C._VariableFunctions.lstsq",
   "torch._C._VariableFunctions.lt",
   "torch._C._VariableFunctions.lu_solve",
   "torch._C._VariableFunctions.margin_ranking_loss",
   "torch._C._VariableFunctions.masked_fill",
   "torch._C._VariableFunctions.masked_scatter",
   "torch._C._VariableFunctions.masked_select",
   "torch._C._VariableFunctions.matmul",
   "torch._C._VariableFunctions.matrix_exp",
   "torch._C._VariableFunctions.matrix_power",
   "torch._C._VariableFunctions.matrix_rank",
   "torch._C._VariableFunctions.max",
   "torch._C._VariableFunctions.max_pool1d",
   "torch._C._VariableFunctions.max_pool1d_with_indices",
   "torch._C._VariableFunctions.max_pool2d",
   "torch._C._VariableFunctions.max_pool3d",
   "torch._C._VariableFunctions.maximum",
   "torch._C._VariableFunctions.mean",
   "torch._C._VariableFunctions.median",
   "torch._C._VariableFunctions.meshgrid",
   "torch._C._VariableFunctions.min",
   "torch._C._VariableFunctions.minimum",
   "torch._C._VariableFunctions.miopen_batch_norm",
   "torch._C._VariableFunctions.miopen_convolution",
   "torch._C._VariableFunctions.miopen_convolution_transpose",
   "torch._C._VariableFunctions.miopen_depthwise_convolution",
   "torch._C._VariableFunctions.miopen_rnn",
   "torch._C._VariableFunctions.mkldnn_adaptive_avg_pool2d",
   "torch._C._VariableFunctions.mkldnn_convolution",
   "torch._C._VariableFunctions.mkldnn_convolution_backward_weights",
   "torch._C._VariableFunctions.mkldnn_max_pool2d",
   "torch._C._VariableFunctions.mkldnn_max_pool3d",
   "torch._C._VariableFunctions.mm",
   "torch._C._VariableFunctions.mode",
   "torch._C._VariableFunctions.movedim",
   "torch._C._VariableFunctions.mul",
   "torch._C._VariableFunctions.multinomial",
   "torch._C._VariableFunctions.multiply",
   "torch._C._VariableFunctions.mv",
   "torch._C._VariableFunctions.mvlgamma",
   "torch._C._VariableFunctions.nanquantile",
   "torch._C._VariableFunctions.nansum",
   "torch._C._VariableFunctions.narrow",
   "torch._C._VariableFunctions.native_batch_norm",
   "torch._C._VariableFunctions.native_group_norm",
   "torch._C._VariableFunctions.native_layer_norm",
   "torch._C._VariableFunctions.native_norm",
   "torch._C._VariableFunctions.ne",
   "torch._C._VariableFunctions.neg",
   "torch._C._VariableFunctions.neg_",
   "torch._C._VariableFunctions.negative",
   "torch._C._VariableFunctions.negative_",
   "torch._C._VariableFunctions.nextafter",
   "torch._C._VariableFunctions.norm",
   "torch._C._VariableFunctions.norm_except_dim",
   "torch._C._VariableFunctions.normal",
   "torch._C._VariableFunctions.not_equal",
   "torch._C._VariableFunctions.nuclear_norm",
   "torch._C._VariableFunctions.ones",
   "torch._C._VariableFunctions.ones_like",
   "torch._C._VariableFunctions.orgqr",
   "torch._C._VariableFunctions.ormqr",
   "torch._C._VariableFunctions.outer",
   "torch._C._VariableFunctions.pairwise_distance",
   "torch._C._VariableFunctions.pdist",
   "torch._C._VariableFunctions.pinverse",
   "torch._C._VariableFunctions.pixel_shuffle",
   "torch._C._VariableFunctions.poisson",
   "torch._C._VariableFunctions.poisson_nll_loss",
   "torch._C._VariableFunctions.polar",
   "torch._C._VariableFunctions.polygamma",
   "torch._C._VariableFunctions.pow",
   "torch._C._VariableFunctions.prelu",
   "torch._C._VariableFunctions.prod",
   "torch._C._VariableFunctions.promote_types",
   "torch._C._VariableFunctions.q_per_channel_axis",
   "torch._C._VariableFunctions.q_per_channel_scales",
   "torch._C._VariableFunctions.q_per_channel_zero_points",
   "torch._C._VariableFunctions.q_scale",
   "torch._C._VariableFunctions.q_zero_point",
   "torch._C._VariableFunctions.qr",
   "torch._C._VariableFunctions.quantile",
   "torch._C._VariableFunctions.quantize_per_channel",
   "torch._C._VariableFunctions.quantize_per_tensor",
   "torch._C._VariableFunctions.quantized_batch_norm",
   "torch._C._VariableFunctions.quantized_gru_cell",
   "torch._C._VariableFunctions.quantized_lstm_cell",
   "torch._C._VariableFunctions.quantized_max_pool1d",
   "torch._C._VariableFunctions.quantized_max_pool2d",
   "torch._C._VariableFunctions.quantized_rnn_relu_cell",
   "torch._C._VariableFunctions.quantized_rnn_tanh_cell",
   "torch._C._VariableFunctions.rad2deg",
   "torch._C._VariableFunctions.rad2deg_",
   "torch._C._VariableFunctions.rand",
   "torch._C._VariableFunctions.rand_like",
   "torch._C._VariableFunctions.randint_like",
   "torch._C._VariableFunctions.randn",
   "torch._C._VariableFunctions.randn_like",
   "torch._C._VariableFunctions.randperm",
   "torch._C._VariableFunctions.real",
   "torch._C._VariableFunctions.reciprocal",
   "torch._C._VariableFunctions.reciprocal_",
   "torch._C._VariableFunctions.relu",
   "torch._C._VariableFunctions.relu_",
   "torch._C._VariableFunctions.remainder",
   "torch._C._VariableFunctions.renorm",
   "torch._C._VariableFunctions.repeat_interleave",
   "torch._C._VariableFunctions.reshape",
   "torch._C._VariableFunctions.resize_as_",
   "torch._C._VariableFunctions.result_type",
   "torch._C._VariableFunctions.rfft",
   "torch._C._VariableFunctions.rnn_relu",
   "torch._C._VariableFunctions.rnn_relu_cell",
   "torch._C._VariableFunctions.rnn_tanh",
   "torch._C._VariableFunctions.rnn_tanh_cell",
   "torch._C._VariableFunctions.roll",
   "torch._C._VariableFunctions.rot90",
   "torch._C._VariableFunctions.round",
   "torch._C._VariableFunctions.round_",
   "torch._C._VariableFunctions.rrelu",
   "torch._C._VariableFunctions.rrelu_",
   "torch._C._VariableFunctions.rsqrt",
   "torch._C._VariableFunctions.rsqrt_",
   "torch._C._VariableFunctions.rsub",
   "torch._C._VariableFunctions.scalar_tensor",
   "torch._C._VariableFunctions.scatter",
   "torch._C._VariableFunctions.scatter_add",
   "torch._C._VariableFunctions.searchsorted",
   "torch._C._VariableFunctions.select",
   "torch._C._VariableFunctions.selu",
   "torch._C._VariableFunctions.selu_",
   "torch._C._VariableFunctions.sgn",
   "torch._C._VariableFunctions.sigmoid",
   "torch._C._VariableFunctions.sigmoid_",
   "torch._C._VariableFunctions.sign",
   "torch._C._VariableFunctions.signbit",
   "torch._C._VariableFunctions.sin",
   "torch._C._VariableFunctions.sin_",
   "torch._C._VariableFunctions.sinh",
   "torch._C._VariableFunctions.sinh_",
   "torch._C._VariableFunctions.slogdet",
   "torch._C._VariableFunctions.smm",
   "torch._C._VariableFunctions.softmax",
   "torch._C._VariableFunctions.solve",
   "torch._C._VariableFunctions.sort",
   "torch._C._VariableFunctions.split",
   "torch._C._VariableFunctions.split_with_sizes",
   "torch._C._VariableFunctions.sqrt",
   "torch._C._VariableFunctions.sqrt_",
   "torch._C._VariableFunctions.square",
   "torch._C._VariableFunctions.square_",
   "torch._C._VariableFunctions.squeeze",
   "torch._C._VariableFunctions.sspaddmm",
   "torch._C._VariableFunctions.stack",
   "torch._C._VariableFunctions.std",
   "torch._C._VariableFunctions.std_mean",
   "torch._C._VariableFunctions.stft",
   "torch._C._VariableFunctions.sub",
   "torch._C._VariableFunctions.subtract",
   "torch._C._VariableFunctions.sum",
   "torch._C._VariableFunctions.svd",
   "torch._C._VariableFunctions.symeig",
   "torch._C._VariableFunctions.t",
   "torch._C._VariableFunctions.take",
   "torch._C._VariableFunctions.tan",
   "torch._C._VariableFunctions.tan_",
   "torch._C._VariableFunctions.tanh",
   "torch._C._VariableFunctions.tanh_",
   "torch._C._VariableFunctions.tensordot",
   "torch._C._VariableFunctions.threshold",
   "torch._C._VariableFunctions.threshold_",
   "torch._C._VariableFunctions.topk",
   "torch._C._VariableFunctions.trace",
   "torch._C._VariableFunctions.transpose",
   "torch._C._VariableFunctions.trapz",
   "torch._C._VariableFunctions.triangular_solve",
   "torch._C._VariableFunctions.tril",
   "torch._C._VariableFunctions.tril_indices",
   "torch._C._VariableFunctions.triplet_margin_loss",
   "torch._C._VariableFunctions.triu",
   "torch._C._VariableFunctions.triu_indices",
   "torch._C._VariableFunctions.true_divide",
   "torch._C._VariableFunctions.trunc",
   "torch._C._VariableFunctions.trunc_",
   "torch._C._VariableFunctions.unbind",
   "torch._C._VariableFunctions.unique_consecutive",
   "torch._C._VariableFunctions.unique_dim",
   "torch._C._VariableFunctions.unsafe_chunk",
   "torch._C._VariableFunctions.unsafe_split",
   "torch._C._VariableFunctions.unsafe_split_with_sizes",
   "torch._C._VariableFunctions.unsqueeze",
   "torch._C._VariableFunctions.vander",
   "torch._C._VariableFunctions.var",
   "torch._C._VariableFunctions.var_mean",
   "torch._C._VariableFunctions.vdot",
   "torch._C._VariableFunctions.view_as_complex",
   "torch._C._VariableFunctions.view_as_real",
   "torch._C._VariableFunctions.vstack",
   "torch._C._VariableFunctions.where",
   "torch._C._VariableFunctions.zero_",
   "torch._C._VariableFunctions.zeros",
   "torch._C._VariableFunctions.zeros_like",
   "torch._C._nn._test_optional_filled_intlist",
   "torch._C._nn._test_optional_floatlist",
   "torch._C._nn._test_optional_intlist",
   "torch._C._nn.adaptive_avg_pool2d",
   "torch._C._nn.adaptive_avg_pool3d",
   "torch._C._nn.adaptive_max_pool2d",
   "torch._C._nn.adaptive_max_pool3d",
   "torch._C._nn.avg_pool2d",
   "torch._C._nn.avg_pool3d",
   "torch._C._nn.binary_cross_entropy",
   "torch._C._nn.col2im",
   "torch._C._nn.elu",
   "torch._C._nn.elu_",
   "torch._C._nn.fractional_max_pool2d",
   "torch._C._nn.fractional_max_pool3d",
   "torch._C._nn.gelu",
   "torch._C._nn.glu",
   "torch._C._nn.hardsigmoid",
   "torch._C._nn.hardsigmoid_",
   "torch._C._nn.hardswish",
   "torch._C._nn.hardswish_",
   "torch._C._nn.hardtanh",
   "torch._C._nn.hardtanh_",
   "torch._C._nn.im2col",
   "torch._C._nn.l1_loss",
   "torch._C._nn.leaky_relu",
   "torch._C._nn.leaky_relu_",
   "torch._C._nn.linear",
   "torch._C._nn.log_sigmoid",
   "torch._C._nn.max_pool2d_with_indices",
   "torch._C._nn.max_pool3d_with_indices",
   "torch._C._nn.max_unpool2d",
   "torch._C._nn.max_unpool3d",
   "torch._C._nn.mkldnn_linear",
   "torch._C._nn.mkldnn_reorder_conv2d_weight",
   "torch._C._nn.mkldnn_reorder_conv3d_weight",
   "torch._C._nn.mse_loss",
   "torch._C._nn.multi_margin_loss",
   "torch._C._nn.multilabel_margin_loss",
   "torch._C._nn.nll_loss",
   "torch._C._nn.nll_loss2d",
   "torch._C._nn.one_hot",
   "torch._C._nn.reflection_pad1d",
   "torch._C._nn.reflection_pad2d",
   "torch._C._nn.replication_pad1d",
   "torch._C._nn.replication_pad2d",
   "torch._C._nn.replication_pad3d",
   "torch._C._nn.rrelu_with_noise",
   "torch._C._nn.rrelu_with_noise_",
   "torch._C._nn.silu",
   "torch._C._nn.silu_",
   "torch._C._nn.slow_conv3d",
   "torch._C._nn.slow_conv_dilated2d",
   "torch._C._nn.slow_conv_dilated3d",
   "torch._C._nn.slow_conv_transpose2d",
   "torch._C._nn.slow_conv_transpose3d",
   "torch._C._nn.smooth_l1_loss",
   "torch._C._nn.soft_margin_loss",
   "torch._C._nn.softplus",
   "torch._C._nn.softshrink",
   "torch._C._nn.thnn_conv2d",
   "torch._C._nn.thnn_conv_depthwise2d",
   "torch._C._nn.upsample_bicubic2d",
   "torch._C._nn.upsample_bilinear2d",
   "torch._C._nn.upsample_linear1d",
   "torch._C._nn.upsample_nearest1d",
   "torch._C._nn.upsample_nearest2d",
   "torch._C._nn.upsample_nearest3d",
   "torch._C._nn.upsample_trilinear3d"
  ],
  "type": "module"
 },
 "torch.testing._internal.hypothesis_utils": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.defaultdict",
   "hypothesis.settings._current_profile.__dict__",
   "hypothesis.settings._profiles.__dict__",
   "hypothesis.unlimited",
   "hypothesis.version.__version_info__",
   "torch.qint32",
   "torch.qint8",
   "torch.quint8"
  ],
  "type": "module"
 },
 "torch.testing._internal.hypothesis_utils._floats_wrapper": {
  "lineno": 49,
  "symbols_in_volume": [
   "hypothesis.strategies.floats",
   "hypothesis.version.__version_info__",
   "torch.finfo",
   "torch.float16",
   "torch.float32",
   "torch.float64"
  ],
  "type": "function"
 },
 "torch.testing._internal.hypothesis_utils._get_valid_min_max": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.float32",
   "torch.finfo",
   "torch.float",
   "torch.iinfo",
   "torch.long"
  ],
  "type": "function"
 },
 "torch.testing._internal.hypothesis_utils.array_shapes": {
  "lineno": 159,
  "symbols_in_volume": [
   "functools.reduce",
   "hypothesis.strategies.composite",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.lists"
  ],
  "type": "function"
 },
 "torch.testing._internal.hypothesis_utils.assert_deadline_disabled": {
  "lineno": 359,
  "symbols_in_volume": [
   "hypothesis.__version__",
   "hypothesis.settings",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.testing._internal.hypothesis_utils.assume_not_overflowing": {
  "lineno": 96,
  "symbols_in_volume": [
   "hypothesis.assume"
  ],
  "type": "function"
 },
 "torch.testing._internal.hypothesis_utils.floats": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.hypothesis_utils.per_channel_tensor": {
  "lineno": 216,
  "symbols_in_volume": [
   "hypothesis.assume",
   "hypothesis.extra.numpy.arrays",
   "hypothesis.strategies.SearchStrategy",
   "hypothesis.strategies.composite",
   "hypothesis.strategies.sampled_from",
   "numpy.arange",
   "numpy.float32",
   "numpy.isinf",
   "numpy.isnan",
   "numpy.random.randint",
   "numpy.transpose",
   "torch.testing._internal.common_quantized._calculate_dynamic_per_channel_qparams"
  ],
  "type": "function"
 },
 "torch.testing._internal.hypothesis_utils.qparams": {
  "lineno": 117,
  "symbols_in_volume": [
   "hypothesis.strategies.composite",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from",
   "torch.finfo",
   "torch.float",
   "torch.iinfo"
  ],
  "type": "function"
 },
 "torch.testing._internal.hypothesis_utils.tensor": {
  "lineno": 191,
  "symbols_in_volume": [
   "hypothesis.assume",
   "hypothesis.extra.numpy.arrays",
   "hypothesis.strategies.SearchStrategy",
   "hypothesis.strategies.composite",
   "hypothesis.strategies.sampled_from",
   "numpy.float32",
   "numpy.isinf",
   "numpy.isnan",
   "torch.testing._internal.common_quantized._calculate_dynamic_qparams"
  ],
  "type": "function"
 },
 "torch.testing._internal.hypothesis_utils.tensor_conv": {
  "lineno": 295,
  "symbols_in_volume": [
   "collections.abc.Iterable",
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.composite",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.sampled_from"
  ],
  "type": "function"
 },
 "torch.testing._internal.jit_metaprogramming_utils": {
  "lineno": null,
  "symbols_in_volume": [
   "torch.Size",
   "torch.double",
   "torch.empty",
   "torch.full",
   "torch.int64",
   "torch.long",
   "torch.nn.functional.log_softmax",
   "torch.nn.functional.softmax",
   "torch.ones",
   "torch.rand",
   "torch.randint",
   "torch.randn",
   "torch.set_default_dtype",
   "torch.tensor",
   "torch.testing._internal.common_methods_invocations.non_differentiable",
   "torch.zeros"
  ],
  "type": "module"
 },
 "torch.testing._internal.jit_metaprogramming_utils.create_script_fn": {
  "lineno": 286,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.jit_metaprogramming_utils.create_script_fn.script_fn": {
  "lineno": 287,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.jit_metaprogramming_utils.create_script_module": {
  "lineno": 425,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.jit_metaprogramming_utils.create_script_module.script_module": {
  "lineno": 426,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.jit_metaprogramming_utils.create_script_module.script_module.TheModule": {
  "lineno": 439,
  "symbols_in_volume": [
   "torch.jit.ScriptModule"
  ],
  "type": "class"
 },
 "torch.testing._internal.jit_metaprogramming_utils.create_script_module.script_module.TheModule.__init__": {
  "lineno": 442,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.jit_metaprogramming_utils.create_script_module.script_module.make_module": {
  "lineno": 446,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.jit_metaprogramming_utils.create_traced_fn": {
  "lineno": 309,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.jit_metaprogramming_utils.create_traced_fn.traced_fn": {
  "lineno": 310,
  "symbols_in_volume": [
   "torch.jit.trace"
  ],
  "type": "function"
 },
 "torch.testing._internal.jit_metaprogramming_utils.gen_script_fn_and_args": {
  "lineno": 276,
  "symbols_in_volume": [
   "torch.jit.CompilationUnit"
  ],
  "type": "function"
 },
 "torch.testing._internal.jit_metaprogramming_utils.get_all_nn_module_tests": {
  "lineno": 538,
  "symbols_in_volume": [
   "torch.testing._internal.common_nn.module_tests",
   "torch.testing._internal.common_nn.new_module_tests"
  ],
  "type": "function"
 },
 "torch.testing._internal.jit_metaprogramming_utils.get_call": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.jit_metaprogramming_utils.get_constant": {
  "lineno": 251,
  "symbols_in_volume": [
   "torch._six.inf"
  ],
  "type": "function"
 },
 "torch.testing._internal.jit_metaprogramming_utils.get_nn_functional_compiled_fn_and_inputs": {
  "lineno": 346,
  "symbols_in_volume": [
   "copy.deepcopy",
   "torch._jit_internal._disable_emit_hooks",
   "torch.testing._internal.common_methods_invocations.create_input",
   "torch.testing._internal.common_methods_invocations.unpack_variables"
  ],
  "type": "function"
 },
 "torch.testing._internal.jit_metaprogramming_utils.get_nn_mod_test_name": {
  "lineno": 470,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.jit_metaprogramming_utils.get_nn_module_class_from_kwargs": {
  "lineno": 477,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.jit_metaprogramming_utils.get_nn_module_name_from_kwargs": {
  "lineno": 462,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.jit_metaprogramming_utils.get_script_args": {
  "lineno": 258,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.List"
  ],
  "type": "function"
 },
 "torch.testing._internal.jit_metaprogramming_utils.partial_apply_nontensors": {
  "lineno": 299,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.testing._internal.jit_metaprogramming_utils.partial_apply_nontensors.new_fn": {
  "lineno": 302,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.jit_metaprogramming_utils.try_get_nn_module_compiled_mod_and_inputs": {
  "lineno": 485,
  "symbols_in_volume": [
   "copy.deepcopy",
   "torch.is_tensor",
   "torch.nn",
   "torch.testing._internal.common_methods_invocations.create_input",
   "torch.testing._internal.common_methods_invocations.unpack_variables"
  ],
  "type": "function"
 },
 "torch.testing._internal.jit_utils": {
  "lineno": null,
  "symbols_in_volume": [
   "torch._C._cuda_getCompiledVersion",
   "torch.cuda.device_count",
   "torch.cuda.get_device_capability",
   "torch.cuda.is_available",
   "torch.version.hip"
  ],
  "type": "module"
 },
 "torch.testing._internal.jit_utils.JitTestCase": {
  "lineno": 94,
  "symbols_in_volume": [
   "torch.testing._internal.common_utils.TestCase"
  ],
  "type": "class"
 },
 "torch.testing._internal.jit_utils.JitTestCase._compared_saved_loaded": {
  "lineno": 145,
  "symbols_in_volume": [
   "io.BytesIO",
   "torch._C.ScriptModule",
   "torch._C._ivalue_tags_match",
   "torch._jit_internal._disable_emit_hooks",
   "torch.jit.load",
   "torch.jit.save"
  ],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.JitTestCase._compared_saved_loaded.extract_files": {
  "lineno": 146,
  "symbols_in_volume": [
   "pickle.load",
   "zipfile.ZipFile"
  ],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.JitTestCase._isHookExceptionOk": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.JitTestCase.assertAutodiffNode": {
  "lineno": 305,
  "symbols_in_volume": [
   "itertools.chain.from_iterable"
  ],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.JitTestCase.assertExpectedGraph": {
  "lineno": 292,
  "symbols_in_volume": [
   "torch._C.Graph",
   "torch._C._jit_pass_canonicalize",
   "torch._C._jit_pass_dce",
   "torch._C._jit_pass_lint"
  ],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.JitTestCase.assertExpectedONNXGraph": {
  "lineno": 288,
  "symbols_in_volume": [
   "torch.onnx.OperatorExportTypes.ONNX",
   "torch.onnx._optimize_trace"
  ],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.JitTestCase.assertExportImport": {
  "lineno": 576,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.JitTestCase.assertExportImportModule": {
  "lineno": 580,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.JitTestCase.assertGraphContains": {
  "lineno": 256,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.JitTestCase.assertGraphContainsExactly": {
  "lineno": 259,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.JitTestCase.assertGraphContainsExactly.nodes": {
  "lineno": 275,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.JitTestCase.assertGraphContainsExactly.perform_assert": {
  "lineno": 260,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.JitTestCase.assertRaisesRegexWithHighlight": {
  "lineno": 354,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.JitTestCase.capture_stdout": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.jit_utils.JitTestCase.capture_stdout.__enter__": {
  "lineno": 102,
  "symbols_in_volume": [
   "sys.stdout",
   "torch._six.StringIO"
  ],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.JitTestCase.capture_stdout.__exit__": {
  "lineno": 108,
  "symbols_in_volume": [
   "sys.stdout"
  ],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.JitTestCase.checkBailouts": {
  "lineno": 388,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.JitTestCase.checkModule": {
  "lineno": 592,
  "symbols_in_volume": [
   "torch.jit.script",
   "torch.testing._internal.common_utils.freeze_rng_state"
  ],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.JitTestCase.checkScript": {
  "lineno": 397,
  "symbols_in_volume": [
   "inspect.getsource",
   "textwrap.dedent",
   "torch.jit.CompilationUnit",
   "torch.jit.optimized_execution",
   "torch.jit.script",
   "torch.testing._internal.common_utils.IS_WINDOWS",
   "torch.testing._internal.common_utils.ProfilingMode.PROFILING",
   "torch.testing._internal.common_utils.TEST_BAILOUTS",
   "torch.testing._internal.common_utils.enable_profiling_mode_for_profiling_tests",
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.JitTestCase.checkScriptRaisesRegex": {
  "lineno": 357,
  "symbols_in_volume": [
   "inspect.getsource",
   "textwrap.dedent",
   "torch.jit.CompilationUnit",
   "torch.jit.script",
   "torch.testing._internal.common_utils.ProfilingMode.PROFILING",
   "torch.testing._internal.common_utils.enable_profiling_mode_for_profiling_tests"
  ],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.JitTestCase.checkTrace": {
  "lineno": 468,
  "symbols_in_volume": [
   "torch.allclose",
   "torch.autograd.Variable",
   "torch.autograd.grad",
   "torch.jit.trace"
  ],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.JitTestCase.checkTrace.allSum": {
  "lineno": 474,
  "symbols_in_volume": [
   "math.log"
  ],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.JitTestCase.checkTrace.flatten_inputs": {
  "lineno": 485,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.JitTestCase.checkTrace.flatten_inputs.input_reduce": {
  "lineno": 486,
  "symbols_in_volume": [
   "functools.reduce",
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.JitTestCase.clearHooks": {
  "lineno": 116,
  "symbols_in_volume": [
   "torch._C._jit_set_emit_hooks"
  ],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.JitTestCase.createFunctionFromGraph": {
  "lineno": 572,
  "symbols_in_volume": [
   "torch._C.Graph",
   "torch._C._create_function_from_graph"
  ],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.JitTestCase.emitFunctionHook": {
  "lineno": 207,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.JitTestCase.emitModuleHook": {
  "lineno": 213,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.JitTestCase.getExportImportCopy": {
  "lineno": 217,
  "symbols_in_volume": [
   "io.BytesIO",
   "torch.jit.load",
   "torch.jit.save",
   "torch.testing._internal.common_utils.TemporaryFileName"
  ],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.JitTestCase.getExportImportCopyWithPacking": {
  "lineno": 230,
  "symbols_in_volume": [
   "io.BytesIO",
   "os.unlink",
   "tempfile.NamedTemporaryFile",
   "torch.jit.load",
   "torch.jit.save"
  ],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.JitTestCase.get_frame_vars": {
  "lineno": 339,
  "symbols_in_volume": [
   "inspect.currentframe",
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.JitTestCase.runAndSaveRNG": {
  "lineno": 586,
  "symbols_in_volume": [
   "torch.testing._internal.common_utils.freeze_rng_state"
  ],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.JitTestCase.run_pass": {
  "lineno": 321,
  "symbols_in_volume": [
   "torch._C",
   "torch._C.Graph",
   "torch._C._jit_pass_lint"
  ],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.JitTestCase.setHooks": {
  "lineno": 113,
  "symbols_in_volume": [
   "torch._C._jit_set_emit_hooks"
  ],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.JitTestCase.setUp": {
  "lineno": 119,
  "symbols_in_volume": [
   "torch.jit.TracerWarning.ignore_lib_warnings"
  ],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.JitTestCase.tearDown": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.jit_utils._AssertRaisesRegexWithHighlightContext": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.jit_utils._AssertRaisesRegexWithHighlightContext.__enter__": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.jit_utils._AssertRaisesRegexWithHighlightContext.__exit__": {
  "lineno": 83,
  "symbols_in_volume": [
   "torch.testing.FileCheck"
  ],
  "type": "function"
 },
 "torch.testing._internal.jit_utils._AssertRaisesRegexWithHighlightContext.__init__": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.jit_utils._inline_everything": {
  "lineno": 629,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.jit_utils._inline_everything.wrapper": {
  "lineno": 630,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "torch.testing._internal.jit_utils._tmp_donotuse_dont_inline_everything": {
  "lineno": 638,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.jit_utils._tmp_donotuse_dont_inline_everything.wrapper": {
  "lineno": 639,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "torch.testing._internal.jit_utils._trace": {
  "lineno": 646,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.jit_utils._trace.wrapper": {
  "lineno": 647,
  "symbols_in_volume": [
   "torch.jit.trace"
  ],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.attrs_with_prefix": {
  "lineno": 681,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.clear_class_registry": {
  "lineno": 55,
  "symbols_in_volume": [
   "torch._C._jit_clear_class_registry",
   "torch.jit._recursive.ConcreteTypeStore",
   "torch.jit._recursive.concrete_type_store",
   "torch.jit._state._script_classes.clear"
  ],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.disable_autodiff_subgraph_inlining": {
  "lineno": 621,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "torch._C._debug_set_autodiff_subgraph_inlining"
  ],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.do_input_map": {
  "lineno": 52,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.autograd.function._nested_map"
  ],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.enable_cpu_fuser": {
  "lineno": 652,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.enable_cpu_fuser.wrapper": {
  "lineno": 653,
  "symbols_in_volume": [
   "torch._C._jit_override_can_fuse_on_cpu"
  ],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.enable_cpu_fuser_if": {
  "lineno": 662,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.enable_cpu_fuser_if.noop_fuser": {
  "lineno": 666,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.enable_cpu_fuser_if.noop_fuser.wrapper": {
  "lineno": 667,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.execWrapper": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.get_execution_plan": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.get_forward": {
  "lineno": 672,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.get_forward_graph": {
  "lineno": 675,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.get_module_method": {
  "lineno": 678,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.inline_everything_mode": {
  "lineno": 610,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "torch._C._jit_get_inline_everything_mode",
   "torch._C._jit_set_inline_everything_mode"
  ],
  "type": "function"
 },
 "torch.testing._internal.jit_utils.warmup_backward": {
  "lineno": 685,
  "symbols_in_volume": [
   "torch.autograd.grad"
  ],
  "type": "function"
 },
 "torch.testing._internal.te_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.testing._internal.te_utils.CudaCodeGenCreated": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.te_utils.CudaCodeGenCreated.__init__": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.te_utils.CudaCodeGenExecuted": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.te_utils.CudaCodeGenExecuted.__init__": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.te_utils.ExecutionCounter": {
  "lineno": 3,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.te_utils.ExecutionCounter.__init__": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.te_utils.ExecutionCounter.elapsed_value": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.te_utils.ExecutionCounter.try_get_trigger_value": {
  "lineno": 4,
  "symbols_in_volume": [
   "torch._C._jit_get_trigger_value"
  ],
  "type": "function"
 },
 "torch.testing._internal.te_utils.LLVMCodeGenCreated": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.te_utils.LLVMCodeGenCreated.__init__": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.te_utils.LLVMCodeGenExecuted": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.te_utils.LLVMCodeGenExecuted.__init__": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.te_utils.SimpleIREvalExecuted": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.testing._internal.te_utils.SimpleIREvalExecuted.__init__": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.test_module": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.testing._internal.test_module.future_div": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.testing._internal.test_module.future_div.div_float_future": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.test_module.future_div.div_int_future": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.test_module.no_future_div": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.testing._internal.test_module.no_future_div.div_float_nofuture": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._internal.test_module.no_future_div.div_int_nofuture": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing._unravel_index": {
  "lineno": 29,
  "symbols_in_volume": [
   "torch.Size"
  ],
  "type": "function"
 },
 "torch.testing._validate_dtypes": {
  "lineno": 258,
  "symbols_in_volume": [
   "torch.dtype"
  ],
  "type": "function"
 },
 "torch.testing.all_types": {
  "lineno": 295,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing.all_types_and": {
  "lineno": 298,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing.all_types_and_complex": {
  "lineno": 306,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing.all_types_and_complex_and": {
  "lineno": 309,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing.all_types_and_half": {
  "lineno": 313,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing.assert_allclose": {
  "lineno": 201,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.tensor"
  ],
  "type": "function"
 },
 "torch.testing.complex_types": {
  "lineno": 302,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing.floating_and_complex_types": {
  "lineno": 281,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing.floating_and_complex_types_and": {
  "lineno": 284,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing.floating_types": {
  "lineno": 270,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing.floating_types_and": {
  "lineno": 277,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing.floating_types_and_half": {
  "lineno": 274,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing.get_all_complex_dtypes": {
  "lineno": 333,
  "symbols_in_volume": [
   "torch.complex128",
   "torch.complex32",
   "torch.complex64",
   "torch.dtype",
   "typing.List"
  ],
  "type": "function"
 },
 "torch.testing.get_all_device_types": {
  "lineno": 350,
  "symbols_in_volume": [
   "torch.cuda.is_available",
   "typing.List"
  ],
  "type": "function"
 },
 "torch.testing.get_all_dtypes": {
  "lineno": 316,
  "symbols_in_volume": [
   "torch.bool",
   "torch.dtype",
   "typing.List"
  ],
  "type": "function"
 },
 "torch.testing.get_all_fp_dtypes": {
  "lineno": 341,
  "symbols_in_volume": [
   "torch.bfloat16",
   "torch.dtype",
   "torch.float16",
   "torch.float32",
   "torch.float64",
   "typing.List"
  ],
  "type": "function"
 },
 "torch.testing.get_all_int_dtypes": {
  "lineno": 337,
  "symbols_in_volume": [
   "torch.dtype",
   "torch.int16",
   "torch.int32",
   "torch.int64",
   "torch.int8",
   "torch.uint8",
   "typing.List"
  ],
  "type": "function"
 },
 "torch.testing.get_all_math_dtypes": {
  "lineno": 329,
  "symbols_in_volume": [
   "torch.dtype",
   "typing.List"
  ],
  "type": "function"
 },
 "torch.testing.integral_types": {
  "lineno": 288,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing.integral_types_and": {
  "lineno": 291,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.testing.is_integral": {
  "lineno": 22,
  "symbols_in_volume": [
   "torch.dtype"
  ],
  "type": "function"
 },
 "torch.testing.make_non_contiguous": {
  "lineno": 225,
  "symbols_in_volume": [
   "random.randint",
   "torch.Size",
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.typename": {
  "lineno": 231,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.types": {
  "lineno": null,
  "symbols_in_volume": [
   "builtins.bool",
   "builtins.float",
   "builtins.int",
   "torch.Size",
   "torch.Tensor",
   "torch.device",
   "torch.dtype",
   "torch.layout",
   "torch.qscheme",
   "typing.List",
   "typing.Sequence",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "module"
 },
 "torch.types.Storage": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.types.Storage.__deepcopy__": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.types.Storage._new_shared": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.types.Storage._write_file": {
  "lineno": 43,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "torch.types.Storage.element_size": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.types.Storage.is_shared": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.types.Storage.share_memory_": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.types.Storage.size": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils": {
  "lineno": null,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "module"
 },
 "torch.utils._cpp_extension_versioner": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "module"
 },
 "torch.utils._cpp_extension_versioner.ExtensionVersioner": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.utils._cpp_extension_versioner.ExtensionVersioner.__init__": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils._cpp_extension_versioner.ExtensionVersioner.bump_version_if_changed": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils._cpp_extension_versioner.ExtensionVersioner.get_version": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils._cpp_extension_versioner.hash_build_arguments": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils._cpp_extension_versioner.hash_source_files": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils._cpp_extension_versioner.update_hash": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.backcompat": {
  "lineno": null,
  "symbols_in_volume": [
   "torch._C._get_backcompat_broadcast_warn",
   "torch._C._get_backcompat_keepdim_warn",
   "torch._C._set_backcompat_broadcast_warn",
   "torch._C._set_backcompat_keepdim_warn"
  ],
  "type": "module"
 },
 "torch.utils.backcompat.Warning": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.utils.backcompat.Warning.__init__": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.backcompat.Warning.get_enabled": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.backcompat.Warning.set_enabled": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.utils.benchmark.examples": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.utils.benchmark.examples.compare": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.utils.benchmark.examples.compare.FauxTorch": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.utils.benchmark.examples.compare.FauxTorch.__init__": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.examples.compare.FauxTorch.add": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.examples.compare.FauxTorch.cat": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.examples.compare.FauxTorch.extra_overhead": {
  "lineno": 26,
  "symbols_in_volume": [
   "time.sleep"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.examples.compare.FauxTorch.matmul": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.examples.compare.FauxTorch.mul": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.examples.compare.main": {
  "lineno": 47,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads",
   "sys.stdout.flush",
   "torch",
   "torch.ones",
   "torch.utils.benchmark.Compare",
   "torch.utils.benchmark.Timer",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.examples.end_to_end": {
  "lineno": null,
  "symbols_in_volume": [
   "queue.Queue",
   "torch.float32",
   "torch.float64",
   "torch.int8"
  ],
  "type": "module"
 },
 "torch.utils.benchmark.examples.end_to_end._main": {
  "lineno": 161,
  "symbols_in_volume": [
   "multiprocessing.cpu_count",
   "multiprocessing.dummy.Pool"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.examples.end_to_end.construct_stmt_and_label": {
  "lineno": 111,
  "symbols_in_volume": [
   "numpy.floor",
   "numpy.log2",
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.examples.end_to_end.construct_table": {
  "lineno": 264,
  "symbols_in_volume": [
   "tempfile.mkstemp",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.examples.end_to_end.main": {
  "lineno": 408,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.examples.end_to_end.map_fn": {
  "lineno": 385,
  "symbols_in_volume": [
   "os.path.exists",
   "os.remove",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.examples.end_to_end.merge": {
  "lineno": 207,
  "symbols_in_volume": [
   "itertools.chain",
   "torch.utils.benchmark.Measurement"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.examples.end_to_end.parse_args": {
  "lineno": 81,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "torch.cuda.device_count"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.examples.end_to_end.process_results": {
  "lineno": 229,
  "symbols_in_volume": [
   "typing.Dict",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.examples.end_to_end.read_results": {
  "lineno": 354,
  "symbols_in_volume": [
   "pickle.load"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.examples.end_to_end.row_str": {
  "lineno": 323,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.examples.end_to_end.run": {
  "lineno": 365,
  "symbols_in_volume": [
   "os.getenv",
   "subprocess.PIPE",
   "subprocess.run"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.examples.end_to_end.subprocess_main": {
  "lineno": 132,
  "symbols_in_volume": [
   "pickle.dump",
   "torch.utils.benchmark.Timer",
   "torch.utils.benchmark.op_fuzzers.unary.UnaryOpFuzzer"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.examples.end_to_end.test_source": {
  "lineno": 377,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.examples.fuzzer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.utils.benchmark.examples.fuzzer.main": {
  "lineno": 11,
  "symbols_in_volume": [
   "sys.stdout.flush",
   "torch.utils.benchmark.FuzzedParameter",
   "torch.utils.benchmark.FuzzedTensor",
   "torch.utils.benchmark.Fuzzer",
   "torch.utils.benchmark.Timer"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.examples.fuzzer.main.time_fn": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.examples.op_benchmark": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.utils.benchmark.examples.op_benchmark.assert_dicts_equal": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.all"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.examples.op_benchmark.main": {
  "lineno": 96,
  "symbols_in_volume": [
   "torch.utils.benchmark.op_fuzzers.binary.BinaryOpFuzzer",
   "torch.utils.benchmark.op_fuzzers.unary.UnaryOpFuzzer"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.examples.op_benchmark.run": {
  "lineno": 27,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.log2",
   "torch.float32",
   "torch.int32",
   "torch.utils.benchmark.Timer"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.examples.simple_timeit": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.utils.benchmark.examples.simple_timeit.main": {
  "lineno": 11,
  "symbols_in_volume": [
   "torch.ones",
   "torch.utils.benchmark.Timer"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.op_fuzzers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.utils.benchmark.op_fuzzers.binary": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.log2"
  ],
  "type": "module"
 },
 "torch.utils.benchmark.op_fuzzers.binary.BinaryOpFuzzer": {
  "lineno": 15,
  "symbols_in_volume": [
   "torch.utils.benchmark.Fuzzer"
  ],
  "type": "class"
 },
 "torch.utils.benchmark.op_fuzzers.binary.BinaryOpFuzzer.__init__": {
  "lineno": 16,
  "symbols_in_volume": [
   "torch.float32",
   "torch.utils.benchmark.FuzzedParameter",
   "torch.utils.benchmark.FuzzedTensor",
   "torch.utils.benchmark.ParameterAlias"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.op_fuzzers.unary": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.log2"
  ],
  "type": "module"
 },
 "torch.utils.benchmark.op_fuzzers.unary.UnaryOpFuzzer": {
  "lineno": 15,
  "symbols_in_volume": [
   "torch.utils.benchmark.Fuzzer"
  ],
  "type": "class"
 },
 "torch.utils.benchmark.op_fuzzers.unary.UnaryOpFuzzer.__init__": {
  "lineno": 16,
  "symbols_in_volume": [
   "torch.float32",
   "torch.utils.benchmark.FuzzedParameter",
   "torch.utils.benchmark.FuzzedTensor",
   "torch.utils.benchmark.ParameterAlias"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.utils.benchmark.utils.common": {
  "lineno": null,
  "symbols_in_volume": [
   "dataclasses.fields"
  ],
  "type": "module"
 },
 "torch.utils.benchmark.utils.common.Measurement": {
  "lineno": 37,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "typing.List",
   "typing.Optional"
  ],
  "type": "class"
 },
 "torch.utils.benchmark.utils.common.Measurement.__getattr__": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.utils.common.Measurement.__post_init__": {
  "lineno": 50,
  "symbols_in_volume": [
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.common.Measurement.__repr__": {
  "lineno": 170,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.utils.common.Measurement._lazy_init": {
  "lineno": 126,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.median",
   "numpy.percentile"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.common.Measurement._lazy_init.add_warning": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.utils.common.Measurement.as_row_name": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.utils.common.Measurement.env": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.utils.common.Measurement.has_warnings": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.utils.common.Measurement.iqr": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.utils.common.Measurement.mean": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.utils.common.Measurement.median": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.utils.common.Measurement.meets_confidence": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.utils.common.Measurement.merge": {
  "lineno": 198,
  "symbols_in_volume": [
   "collections.defaultdict",
   "typing.DefaultDict",
   "typing.List"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.common.Measurement.merge.merge_group": {
  "lineno": 208,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.common.Measurement.significant_figures": {
  "lineno": 92,
  "symbols_in_volume": [
   "numpy.ceil",
   "numpy.floor",
   "numpy.log10",
   "numpy.sqrt",
   "numpy.std",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.common.Measurement.times": {
  "lineno": 73,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.common.Measurement.title": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.utils.common.TaskSpec": {
  "lineno": 25,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "typing.Optional"
  ],
  "type": "class"
 },
 "torch.utils.benchmark.utils.common.ordered_unique": {
  "lineno": 252,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.common.select_unit": {
  "lineno": 225,
  "symbols_in_volume": [
   "numpy.log10"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.common.set_torch_threads": {
  "lineno": 256,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "torch.get_num_threads",
   "torch.set_num_threads"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.common.trim_sigfig": {
  "lineno": 244,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.ceil",
   "numpy.log10",
   "numpy.round"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.common.unit_to_english": {
  "lineno": 235,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.utils.compare": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.utils.benchmark.utils.compare.Compare": {
  "lineno": 249,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.utils.benchmark.utils.compare.Compare.__init__": {
  "lineno": 250,
  "symbols_in_volume": [
   "torch.utils.benchmark.utils.common.Measurement",
   "typing.List"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.compare.Compare.__str__": {
  "lineno": 257,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.utils.compare.Compare._group_by_label": {
  "lineno": 288,
  "symbols_in_volume": [
   "collections.defaultdict",
   "torch.utils.benchmark.utils.common.Measurement",
   "typing.DefaultDict",
   "typing.List"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.compare.Compare._layout": {
  "lineno": 294,
  "symbols_in_volume": [
   "torch.utils.benchmark.utils.common.Measurement",
   "typing.List"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.compare.Compare._render": {
  "lineno": 280,
  "symbols_in_volume": [
   "torch.utils.benchmark.utils.common.Measurement.merge"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.compare.Compare.colorize": {
  "lineno": 271,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.utils.compare.Compare.extend_results": {
  "lineno": 260,
  "symbols_in_volume": [
   "torch.utils.benchmark.utils.common.Measurement"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.compare.Compare.highlight_warnings": {
  "lineno": 274,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.utils.compare.Compare.print": {
  "lineno": 277,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.utils.compare.Compare.trim_significant_figures": {
  "lineno": 268,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.utils.compare.Table": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.utils.benchmark.utils.compare.Table.__init__": {
  "lineno": 132,
  "symbols_in_volume": [
   "torch.utils.benchmark.utils.common.Measurement",
   "torch.utils.benchmark.utils.common.ordered_unique",
   "torch.utils.benchmark.utils.common.select_unit",
   "typing.List"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.compare.Table.col_fn": {
  "lineno": 159,
  "symbols_in_volume": [
   "torch.utils.benchmark.utils.common.Measurement",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.compare.Table.populate_rows_and_columns": {
  "lineno": 163,
  "symbols_in_volume": [
   "torch.utils.benchmark.utils.common.Measurement",
   "typing.List",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.compare.Table.render": {
  "lineno": 224,
  "symbols_in_volume": [
   "torch.utils.benchmark.utils.common.unit_to_english"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.compare.Table.row_fn": {
  "lineno": 155,
  "symbols_in_volume": [
   "torch.utils.benchmark.utils.common.Measurement",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.compare._Column": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.utils.benchmark.utils.compare._Column.__init__": {
  "lineno": 22,
  "symbols_in_volume": [
   "itertools.chain",
   "numpy.ceil",
   "numpy.log10",
   "torch.utils.benchmark.utils.common.Measurement",
   "typing.List",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.compare._Column.get_results_for": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.utils.compare._Column.num_to_str": {
  "lineno": 55,
  "symbols_in_volume": [
   "torch.utils.benchmark.utils.common.trim_sigfig",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.compare._Row": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.utils.benchmark.utils.compare._Row.__init__": {
  "lineno": 68,
  "symbols_in_volume": [
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.compare._Row.as_column_strings": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.utils.compare._Row.color_segment": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.utils.compare._Row.finalize_column_strings": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.utils.compare._Row.register_columns": {
  "lineno": 81,
  "symbols_in_volume": [
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.compare._Row.row_separator": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.utils.fuzzer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.utils.benchmark.utils.fuzzer.FuzzedParameter": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.utils.benchmark.utils.fuzzer.FuzzedParameter.__init__": {
  "lineno": 24,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Dict",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.fuzzer.FuzzedParameter._check_distribution": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.utils.fuzzer.FuzzedParameter._custom_distribution": {
  "lineno": 120,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.fuzzer.FuzzedParameter._loguniform": {
  "lineno": 104,
  "symbols_in_volume": [
   "numpy.log2"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.fuzzer.FuzzedParameter._uniform": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.utils.fuzzer.FuzzedParameter.name": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.utils.fuzzer.FuzzedParameter.sample": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.utils.fuzzer.FuzzedTensor": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.utils.benchmark.utils.fuzzer.FuzzedTensor.__init__": {
  "lineno": 180,
  "symbols_in_volume": [
   "torch.float32",
   "typing.Callable",
   "typing.Optional",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.fuzzer.FuzzedTensor._get_size_and_steps": {
  "lineno": 302,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.utils.fuzzer.FuzzedTensor._get_size_and_steps.resolve": {
  "lineno": 309,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.utils.fuzzer.FuzzedTensor._make_tensor": {
  "lineno": 267,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.arange",
   "numpy.argsort"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.fuzzer.FuzzedTensor.default_tensor_constructor": {
  "lineno": 260,
  "symbols_in_volume": [
   "torch.rand",
   "torch.randint"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.fuzzer.FuzzedTensor.name": {
  "lineno": 256,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.utils.fuzzer.FuzzedTensor.satisfies_constraints": {
  "lineno": 323,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.utils.fuzzer.FuzzedTensor.satisfies_constraints.nullable_greater": {
  "lineno": 331,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.utils.fuzzer.Fuzzer": {
  "lineno": 343,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.utils.benchmark.utils.fuzzer.Fuzzer.__init__": {
  "lineno": 344,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "typing.Callable",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.fuzzer.Fuzzer._generate": {
  "lineno": 412,
  "symbols_in_volume": [
   "typing.Dict",
   "typing.Union"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.fuzzer.Fuzzer._resolve_aliases": {
  "lineno": 440,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.utils.fuzzer.Fuzzer._unpack": {
  "lineno": 387,
  "symbols_in_volume": [
   "itertools.chain"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.fuzzer.Fuzzer.rejection_rate": {
  "lineno": 406,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.utils.fuzzer.Fuzzer.take": {
  "lineno": 393,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "torch.manual_seed"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.fuzzer.ParameterAlias": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.utils.benchmark.utils.fuzzer.ParameterAlias.__init__": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.utils.fuzzer.ParameterAlias.__repr__": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.utils.fuzzer.dtype_size": {
  "lineno": 161,
  "symbols_in_volume": [
   "torch.bool",
   "torch.finfo",
   "torch.iinfo"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.fuzzer.prod": {
  "lineno": 169,
  "symbols_in_volume": [
   "functools.reduce"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.timer": {
  "lineno": null,
  "symbols_in_volume": [
   "timeit.default_timer",
   "torch.cuda.is_available",
   "torch.has_cuda"
  ],
  "type": "module"
 },
 "torch.utils.benchmark.utils.timer.Timer": {
  "lineno": 23,
  "symbols_in_volume": [
   "timeit.Timer"
  ],
  "type": "class"
 },
 "torch.utils.benchmark.utils.timer.Timer.__init__": {
  "lineno": 26,
  "symbols_in_volume": [
   "torch",
   "torch.utils.benchmark.utils.common.TaskSpec",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.timer.Timer._estimate_block_size": {
  "lineno": 100,
  "symbols_in_volume": [
   "numpy.median",
   "torch.utils.benchmark.utils.common.set_torch_threads"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.timer.Timer._threaded_measurement_loop": {
  "lineno": 76,
  "symbols_in_volume": [
   "torch.utils.benchmark.utils.common.set_torch_threads",
   "typing.Callable",
   "typing.List",
   "typing.NoReturn",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.timer.Timer.adaptive_autorange": {
  "lineno": 116,
  "symbols_in_volume": [
   "torch.utils.benchmark.utils.common.Measurement",
   "typing.Callable",
   "typing.NoReturn",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.timer.Timer.adaptive_autorange.stop_hook": {
  "lineno": 128,
  "symbols_in_volume": [
   "torch.utils.benchmark.utils.common.Measurement"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.timer.Timer.adaptive_autorange.time_hook": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.utils.timer.Timer.autorange": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.utils.timer.Timer.blocked_autorange": {
  "lineno": 145,
  "symbols_in_volume": [
   "torch.utils.benchmark.utils.common.Measurement"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.timer.Timer.blocked_autorange.stop_hook": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.utils.timer.Timer.blocked_autorange.time_hook": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.utils.timer.Timer.collect_callgrind": {
  "lineno": 165,
  "symbols_in_volume": [
   "torch",
   "torch.utils.benchmark.utils.valgrind_wrapper.timer_interface.wrapper_singleton"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.timer.Timer.repeat": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.utils.timer.Timer.timeit": {
  "lineno": 59,
  "symbols_in_volume": [
   "torch.utils.benchmark.utils.common.Measurement",
   "torch.utils.benchmark.utils.common.set_torch_threads"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.timer.timer": {
  "lineno": 16,
  "symbols_in_volume": [
   "timeit.default_timer",
   "torch.cuda.synchronize"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.valgrind_wrapper": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.utils.benchmark.utils.valgrind_wrapper.timer_interface": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.NamedTuple",
   "typing.Optional"
  ],
  "type": "module"
 },
 "torch.utils.benchmark.utils.valgrind_wrapper.timer_interface.CallgrindStats": {
  "lineno": 19,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "torch.utils.benchmark.utils.valgrind_wrapper.timer_interface.CallgrindStats.__repr__": {
  "lineno": 31,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.valgrind_wrapper.timer_interface.CallgrindStats._counts": {
  "lineno": 156,
  "symbols_in_volume": [
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.valgrind_wrapper.timer_interface.CallgrindStats._diff": {
  "lineno": 164,
  "symbols_in_volume": [
   "collections.defaultdict",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.valgrind_wrapper.timer_interface.CallgrindStats.as_standardized": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.utils.valgrind_wrapper.timer_interface.CallgrindStats.as_standardized.strip": {
  "lineno": 127,
  "symbols_in_volume": [
   "collections.defaultdict",
   "re.escape",
   "re.sub",
   "typing.DefaultDict",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.valgrind_wrapper.timer_interface.CallgrindStats.counts": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.benchmark.utils.valgrind_wrapper.timer_interface.CallgrindStats.delta": {
  "lineno": 78,
  "symbols_in_volume": [
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.valgrind_wrapper.timer_interface.CallgrindStats.stats": {
  "lineno": 51,
  "symbols_in_volume": [
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.valgrind_wrapper.timer_interface._ValgrindWrapper": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.utils.benchmark.utils.valgrind_wrapper.timer_interface._ValgrindWrapper.__init__": {
  "lineno": 177,
  "symbols_in_volume": [
   "re.search",
   "subprocess.PIPE",
   "subprocess.run",
   "torch._C._valgrind_supported_platform",
   "torch.__config__.show",
   "typing.Dict",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.valgrind_wrapper.timer_interface._ValgrindWrapper._construct_script": {
  "lineno": 351,
  "symbols_in_volume": [
   "sys.executable",
   "textwrap.dedent",
   "textwrap.indent",
   "torch.__file__"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.valgrind_wrapper.timer_interface._ValgrindWrapper._invoke": {
  "lineno": 242,
  "symbols_in_volume": [
   "os.path.exists",
   "os.path.join",
   "shutil.rmtree",
   "tempfile.mkdtemp",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.valgrind_wrapper.timer_interface._ValgrindWrapper._invoke.parse_output": {
  "lineno": 320,
  "symbols_in_volume": [
   "re.match",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.valgrind_wrapper.timer_interface._ValgrindWrapper._invoke.run": {
  "lineno": 276,
  "symbols_in_volume": [
   "subprocess.CompletedProcess",
   "subprocess.STDOUT",
   "subprocess.run",
   "typing.Any",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.valgrind_wrapper.timer_interface._ValgrindWrapper._validate": {
  "lineno": 195,
  "symbols_in_volume": [
   "torch._C._valgrind_supported_platform"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.valgrind_wrapper.timer_interface._ValgrindWrapper.collect_callgrind": {
  "lineno": 203,
  "symbols_in_volume": [
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.utils.benchmark.utils.valgrind_wrapper.timer_interface.wrapper_singleton": {
  "lineno": 469,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.bottleneck": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.utils.bottleneck.__main__": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.utils.bottleneck.__main__.compiled_with_cuda": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.bottleneck.__main__.cpu_time_total": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.bottleneck.__main__.main": {
  "lineno": 177,
  "symbols_in_volume": [
   "os.path.dirname",
   "sys.path.insert",
   "torch.cuda.init",
   "torch.cuda.is_available"
  ],
  "type": "function"
 },
 "torch.utils.bottleneck.__main__.parse_args": {
  "lineno": 163,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "argparse.REMAINDER"
  ],
  "type": "function"
 },
 "torch.utils.bottleneck.__main__.print_autograd_prof_summary": {
  "lineno": 119,
  "symbols_in_volume": [
   "torch.autograd.profiler.build_table"
  ],
  "type": "function"
 },
 "torch.utils.bottleneck.__main__.print_cprofile_summary": {
  "lineno": 87,
  "symbols_in_volume": [
   "pstats.Stats"
  ],
  "type": "function"
 },
 "torch.utils.bottleneck.__main__.redirect_argv": {
  "lineno": 13,
  "symbols_in_volume": [
   "sys.argv"
  ],
  "type": "function"
 },
 "torch.utils.bottleneck.__main__.run_autograd_prof": {
  "lineno": 93,
  "symbols_in_volume": [
   "torch.cuda.is_available"
  ],
  "type": "function"
 },
 "torch.utils.bottleneck.__main__.run_autograd_prof.run_prof": {
  "lineno": 94,
  "symbols_in_volume": [
   "torch.autograd.profiler.profile"
  ],
  "type": "function"
 },
 "torch.utils.bottleneck.__main__.run_cprofile": {
  "lineno": 71,
  "symbols_in_volume": [
   "cProfile.Profile"
  ],
  "type": "function"
 },
 "torch.utils.bottleneck.__main__.run_env_analysis": {
  "lineno": 35,
  "symbols_in_volume": [
   "sys.version_info",
   "torch.utils.collect_env.get_env_info",
   "typing.Dict"
  ],
  "type": "function"
 },
 "torch.utils.bundled_inputs": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.TypeVar"
  ],
  "type": "module"
 },
 "torch.utils.bundled_inputs.InflatableArg": {
  "lineno": 13,
  "symbols_in_volume": [
   "typing.Any",
   "typing.NamedTuple"
  ],
  "type": "class"
 },
 "torch.utils.bundled_inputs._inflate_expr": {
  "lineno": 121,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.channels_last",
   "torch.contiguous_format",
   "torch.tensor",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "torch.utils.bundled_inputs.augment_model_with_bundled_inputs": {
  "lineno": 18,
  "symbols_in_volume": [
   "textwrap.dedent",
   "torch._C.ListType",
   "torch._C.OptionalType",
   "torch._C.TupleType",
   "torch.jit.ScriptModule",
   "typing.Any",
   "typing.List",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.utils.bundled_inputs.bundle_large_tensor": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.bundled_inputs.bundle_randn": {
  "lineno": 153,
  "symbols_in_volume": [
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.utils.checkpoint": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.utils.checkpoint.CheckpointFunction": {
  "lineno": 55,
  "symbols_in_volume": [
   "torch.autograd.Function"
  ],
  "type": "class"
 },
 "torch.utils.checkpoint.CheckpointFunction.backward": {
  "lineno": 77,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.autograd._is_checkpoint_valid",
   "torch.autograd.backward",
   "torch.enable_grad",
   "torch.random.fork_rng",
   "torch.set_rng_state"
  ],
  "type": "function"
 },
 "torch.utils.checkpoint.CheckpointFunction.forward": {
  "lineno": 57,
  "symbols_in_volume": [
   "torch.cuda._initialized",
   "torch.get_rng_state",
   "torch.no_grad"
  ],
  "type": "function"
 },
 "torch.utils.checkpoint.check_backward_validity": {
  "lineno": 23,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Any",
   "typing.Iterable",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.utils.checkpoint.checkpoint": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.checkpoint.checkpoint_sequential": {
  "lineno": 166,
  "symbols_in_volume": [
   "torch.nn.Sequential"
  ],
  "type": "function"
 },
 "torch.utils.checkpoint.checkpoint_sequential.run_function": {
  "lineno": 211,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.checkpoint.checkpoint_sequential.run_function.forward": {
  "lineno": 212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.checkpoint.detach_variable": {
  "lineno": 6,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Any",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.utils.checkpoint.get_device_states": {
  "lineno": 35,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.cuda.device",
   "torch.cuda.get_rng_state",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.utils.checkpoint.set_device_states": {
  "lineno": 49,
  "symbols_in_volume": [
   "torch.cuda.device",
   "torch.cuda.set_rng_state"
  ],
  "type": "function"
 },
 "torch.utils.collect_env": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "module"
 },
 "torch.utils.collect_env.check_release_file": {
  "lineno": 198,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.collect_env.get_clang_version": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.collect_env.get_cmake_version": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.collect_env.get_conda_packages": {
  "lineno": 71,
  "symbols_in_volume": [
   "os.environ.get",
   "os.path.join",
   "re.compile",
   "re.sub"
  ],
  "type": "function"
 },
 "torch.utils.collect_env.get_cudnn_version": {
  "lineno": 125,
  "symbols_in_volume": [
   "os.environ.get",
   "os.path.isfile",
   "os.path.join",
   "os.path.realpath"
  ],
  "type": "function"
 },
 "torch.utils.collect_env.get_env_info": {
  "lineno": 264,
  "symbols_in_volume": [
   "sys.maxsize.bit_length",
   "sys.version_info",
   "torch._C._show_config",
   "torch.__version__",
   "torch.cuda.is_available",
   "torch.version",
   "torch.version.cuda",
   "torch.version.debug",
   "torch.version.hip"
  ],
  "type": "function"
 },
 "torch.utils.collect_env.get_gcc_version": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.collect_env.get_gpu_info": {
  "lineno": 107,
  "symbols_in_volume": [
   "re.compile",
   "re.sub",
   "torch.cuda.get_device_name",
   "torch.cuda.is_available",
   "torch.version",
   "torch.version.hip"
  ],
  "type": "function"
 },
 "torch.utils.collect_env.get_lsb_version": {
  "lineno": 194,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.collect_env.get_mac_version": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.collect_env.get_nvidia_driver_version": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.collect_env.get_nvidia_smi": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.collect_env.get_os": {
  "lineno": 203,
  "symbols_in_volume": [
   "platform.machine"
  ],
  "type": "function"
 },
 "torch.utils.collect_env.get_pip_packages": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.collect_env.get_pip_packages.run_with_pip": {
  "lineno": 237,
  "symbols_in_volume": [
   "os.environ.get",
   "os.path.join"
  ],
  "type": "function"
 },
 "torch.utils.collect_env.get_platform": {
  "lineno": 170,
  "symbols_in_volume": [
   "sys.platform",
   "sys.platform.startswith"
  ],
  "type": "function"
 },
 "torch.utils.collect_env.get_pretty_env_info": {
  "lineno": 407,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.collect_env.get_running_cuda_version": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.collect_env.get_windows_version": {
  "lineno": 187,
  "symbols_in_volume": [
   "os.environ.get",
   "os.path.join"
  ],
  "type": "function"
 },
 "torch.utils.collect_env.main": {
  "lineno": 411,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.collect_env.pretty_str": {
  "lineno": 333,
  "symbols_in_volume": [
   "torch.cuda.is_available"
  ],
  "type": "function"
 },
 "torch.utils.collect_env.pretty_str.maybe_start_on_next_line": {
  "lineno": 359,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.collect_env.pretty_str.prepend": {
  "lineno": 349,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.collect_env.pretty_str.replace_bools": {
  "lineno": 341,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.collect_env.pretty_str.replace_if_empty": {
  "lineno": 354,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.collect_env.pretty_str.replace_nones": {
  "lineno": 334,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.collect_env.run": {
  "lineno": 40,
  "symbols_in_volume": [
   "locale.getpreferredencoding",
   "subprocess.PIPE",
   "subprocess.Popen"
  ],
  "type": "function"
 },
 "torch.utils.collect_env.run_and_parse_first_match": {
  "lineno": 60,
  "symbols_in_volume": [
   "re.search"
  ],
  "type": "function"
 },
 "torch.utils.collect_env.run_and_read_all": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.cpp_extension": {
  "lineno": null,
  "symbols_in_volume": [
   "os.environ.get",
   "re.compile",
   "sys.platform",
   "torch.version.hip",
   "torch.version.hip.split"
  ],
  "type": "module"
 },
 "torch.utils.cpp_extension.BuildExtension": {
  "lineno": 303,
  "symbols_in_volume": [
   "setuptools.command.build_ext.build_ext"
  ],
  "type": "class"
 },
 "torch.utils.cpp_extension.BuildExtension.__init__": {
  "lineno": 342,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.utils.cpp_extension.BuildExtension._add_compile_flag": {
  "lineno": 711,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "torch.utils.cpp_extension.BuildExtension._add_gnu_cpp_abi_flag": {
  "lineno": 729,
  "symbols_in_volume": [
   "torch._C._GLIBCXX_USE_CXX11_ABI"
  ],
  "type": "function"
 },
 "torch.utils.cpp_extension.BuildExtension._check_abi": {
  "lineno": 695,
  "symbols_in_volume": [
   "os.environ",
   "os.environ.get"
  ],
  "type": "function"
 },
 "torch.utils.cpp_extension.BuildExtension._define_torch_extension_name": {
  "lineno": 719,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.cpp_extension.BuildExtension.build_extensions": {
  "lineno": 360,
  "symbols_in_volume": [
   "setuptools.command.build_ext.build_ext.build_extensions",
   "torch._C"
  ],
  "type": "function"
 },
 "torch.utils.cpp_extension.BuildExtension.build_extensions.append_std14_if_no_std_present": {
  "lineno": 382,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.cpp_extension.BuildExtension.build_extensions.convert_to_absolute_paths_inplace": {
  "lineno": 403,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.isabs"
  ],
  "type": "function"
 },
 "torch.utils.cpp_extension.BuildExtension.build_extensions.unix_cuda_flags": {
  "lineno": 396,
  "symbols_in_volume": [
   "os.getenv"
  ],
  "type": "function"
 },
 "torch.utils.cpp_extension.BuildExtension.build_extensions.unix_wrap_ninja_compile": {
  "lineno": 437,
  "symbols_in_volume": [
   "os.path.abspath",
   "shlex.quote"
  ],
  "type": "function"
 },
 "torch.utils.cpp_extension.BuildExtension.build_extensions.unix_wrap_single_compile": {
  "lineno": 410,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "torch.utils.cpp_extension.BuildExtension.build_extensions.win_cuda_flags": {
  "lineno": 512,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.cpp_extension.BuildExtension.build_extensions.win_wrap_ninja_compile": {
  "lineno": 583,
  "symbols_in_volume": [
   "os.path.abspath"
  ],
  "type": "function"
 },
 "torch.utils.cpp_extension.BuildExtension.build_extensions.win_wrap_single_compile": {
  "lineno": 516,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "torch.utils.cpp_extension.BuildExtension.build_extensions.win_wrap_single_compile.spawn": {
  "lineno": 528,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "function"
 },
 "torch.utils.cpp_extension.BuildExtension.finalize_options": {
  "lineno": 355,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.cpp_extension.BuildExtension.get_ext_filename": {
  "lineno": 679,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.cpp_extension.BuildExtension.with_options": {
  "lineno": 329,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.cpp_extension.BuildExtension.with_options.cls_with_options": {
  "lineno": 335,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.utils.cpp_extension.BuildExtension.with_options.cls_with_options.__init__": {
  "lineno": 336,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.cpp_extension.CUDAExtension": {
  "lineno": 778,
  "symbols_in_volume": [
   "setuptools.Extension"
  ],
  "type": "function"
 },
 "torch.utils.cpp_extension.CppExtension": {
  "lineno": 734,
  "symbols_in_volume": [
   "setuptools.Extension"
  ],
  "type": "function"
 },
 "torch.utils.cpp_extension._accepted_compilers_for_platform": {
  "lineno": 192,
  "symbols_in_volume": [
   "sys.platform.startswith",
   "typing.List"
  ],
  "type": "function"
 },
 "torch.utils.cpp_extension._find_cuda_home": {
  "lineno": 40,
  "symbols_in_volume": [
   "glob.glob",
   "os.devnull",
   "os.environ.get",
   "os.path.dirname",
   "os.path.exists",
   "subprocess.check_output",
   "torch.cuda.is_available",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.utils.cpp_extension._find_rocm_home": {
  "lineno": 69,
  "symbols_in_volume": [
   "os.environ.get",
   "os.path.basename",
   "os.path.dirname",
   "os.path.exists",
   "subprocess.DEVNULL",
   "subprocess.check_output",
   "torch.version.hip",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.utils.cpp_extension._get_build_directory": {
  "lineno": 1471,
  "symbols_in_volume": [
   "os.environ.get",
   "os.makedirs",
   "os.path.exists",
   "os.path.join"
  ],
  "type": "function"
 },
 "torch.utils.cpp_extension._get_cuda_arch_flags": {
  "lineno": 1387,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "os.environ.get",
   "torch.cuda.get_device_capability",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.utils.cpp_extension._get_num_workers": {
  "lineno": 1490,
  "symbols_in_volume": [
   "os.environ.get",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.utils.cpp_extension._get_rocm_arch_flags": {
  "lineno": 1455,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.utils.cpp_extension._import_module_from_library": {
  "lineno": 1565,
  "symbols_in_volume": [
   "imp.find_module",
   "imp.load_module",
   "torch.ops.load_library"
  ],
  "type": "function"
 },
 "torch.utils.cpp_extension._is_binary_build": {
  "lineno": 188,
  "symbols_in_volume": [
   "torch.version.__version__"
  ],
  "type": "function"
 },
 "torch.utils.cpp_extension._is_cuda_file": {
  "lineno": 1839,
  "symbols_in_volume": [
   "os.path.splitext"
  ],
  "type": "function"
 },
 "torch.utils.cpp_extension._jit_compile": {
  "lineno": 1157,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.join",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.utils.cpp_extension._join_cuda_home": {
  "lineno": 1826,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "torch.utils.cpp_extension._join_rocm_home": {
  "lineno": 92,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "torch.utils.cpp_extension._nt_quote_args": {
  "lineno": 29,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.utils.cpp_extension._prepare_ldflags": {
  "lineno": 1333,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.dirname",
   "os.path.join",
   "sys.executable"
  ],
  "type": "function"
 },
 "torch.utils.cpp_extension._run_ninja_build": {
  "lineno": 1502,
  "symbols_in_volume": [
   "distutils._msvccompiler._get_vc_env",
   "distutils.util.get_platform",
   "os.environ.copy",
   "subprocess.CalledProcessError",
   "subprocess.PIPE",
   "subprocess.STDOUT",
   "subprocess.check_output",
   "subprocess.run",
   "sys.exc_info",
   "sys.stderr.flush",
   "sys.stdout.flush",
   "sys.version_info"
  ],
  "type": "function"
 },
 "torch.utils.cpp_extension._write_ninja_file": {
  "lineno": 1699,
  "symbols_in_volume": [
   "os.environ.get",
   "os.path.abspath",
   "os.path.dirname",
   "subprocess.check_output"
  ],
  "type": "function"
 },
 "torch.utils.cpp_extension._write_ninja_file.sanitize_flags": {
  "lineno": 1723,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.cpp_extension._write_ninja_file_and_build_library": {
  "lineno": 1265,
  "symbols_in_volume": [
   "os.environ.get",
   "os.path.join",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.utils.cpp_extension._write_ninja_file_and_compile_objects": {
  "lineno": 1223,
  "symbols_in_volume": [
   "os.environ.get",
   "os.path.join",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.utils.cpp_extension._write_ninja_file_to_build_library": {
  "lineno": 1576,
  "symbols_in_volume": [
   "os.getenv",
   "os.path.abspath",
   "os.path.join",
   "os.path.relpath",
   "sys.platform.startswith",
   "sysconfig.get_paths",
   "torch._C",
   "torch._C._GLIBCXX_USE_CXX11_ABI"
  ],
  "type": "function"
 },
 "torch.utils.cpp_extension._write_ninja_file_to_build_library.object_file_path": {
  "lineno": 1660,
  "symbols_in_volume": [
   "os.path.basename",
   "os.path.splitext"
  ],
  "type": "function"
 },
 "torch.utils.cpp_extension.check_compiler_abi_compatibility": {
  "lineno": 247,
  "symbols_in_volume": [
   "os.environ.get",
   "re.search",
   "subprocess.STDOUT",
   "subprocess.check_output",
   "sys.exc_info",
   "sys.platform",
   "sys.platform.startswith",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.utils.cpp_extension.check_compiler_ok_for_platform": {
  "lineno": 212,
  "symbols_in_volume": [
   "os.path.realpath",
   "re.MULTILINE",
   "re.compile",
   "re.findall",
   "subprocess.STDOUT",
   "subprocess.check_output",
   "sys.platform.startswith"
  ],
  "type": "function"
 },
 "torch.utils.cpp_extension.get_default_build_root": {
  "lineno": 197,
  "symbols_in_volume": [
   "os.path.realpath",
   "torch._appdirs.user_cache_dir"
  ],
  "type": "function"
 },
 "torch.utils.cpp_extension.include_paths": {
  "lineno": 835,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.dirname",
   "os.path.join",
   "typing.List"
  ],
  "type": "function"
 },
 "torch.utils.cpp_extension.is_ninja_available": {
  "lineno": 1310,
  "symbols_in_volume": [
   "os.devnull",
   "subprocess.check_call"
  ],
  "type": "function"
 },
 "torch.utils.cpp_extension.library_paths": {
  "lineno": 873,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.dirname",
   "os.path.exists",
   "os.path.join",
   "typing.List"
  ],
  "type": "function"
 },
 "torch.utils.cpp_extension.load": {
  "lineno": 912,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.utils.cpp_extension.load_inline": {
  "lineno": 1007,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "torch.utils.cpp_extension.verify_ninja_availability": {
  "lineno": 1324,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.utils.data._utils": {
  "lineno": null,
  "symbols_in_volume": [
   "atexit.register",
   "sys.platform"
  ],
  "type": "module"
 },
 "torch.utils.data._utils._set_python_exit_flag": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data._utils.collate": {
  "lineno": null,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "module"
 },
 "torch.utils.data._utils.collate.default_collate": {
  "lineno": 42,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._six.container_abcs.Mapping",
   "torch._six.container_abcs.Sequence",
   "torch._six.int_classes",
   "torch._six.string_classes",
   "torch.as_tensor",
   "torch.float64",
   "torch.stack",
   "torch.tensor",
   "torch.utils.data.get_worker_info"
  ],
  "type": "function"
 },
 "torch.utils.data._utils.collate.default_convert": {
  "lineno": 15,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._six.container_abcs.Mapping",
   "torch._six.container_abcs.Sequence",
   "torch._six.string_classes",
   "torch.as_tensor"
  ],
  "type": "function"
 },
 "torch.utils.data._utils.fetch": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.utils.data._utils.fetch._BaseDatasetFetcher": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.utils.data._utils.fetch._BaseDatasetFetcher.__init__": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data._utils.fetch._BaseDatasetFetcher.fetch": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data._utils.fetch._IterableDatasetFetcher": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.utils.data._utils.fetch._IterableDatasetFetcher.__init__": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data._utils.fetch._IterableDatasetFetcher.fetch": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data._utils.fetch._MapDatasetFetcher": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.utils.data._utils.fetch._MapDatasetFetcher.__init__": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data._utils.fetch._MapDatasetFetcher.fetch": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data._utils.pin_memory": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.utils.data._utils.pin_memory._pin_memory_loop": {
  "lineno": 14,
  "symbols_in_volume": [
   "torch._six.queue.Empty",
   "torch._six.queue.Full",
   "torch._utils.ExceptionWrapper",
   "torch.cuda.set_device",
   "torch.set_num_threads"
  ],
  "type": "function"
 },
 "torch.utils.data._utils.pin_memory.pin_memory": {
  "lineno": 45,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch._six.container_abcs.Mapping",
   "torch._six.container_abcs.Sequence",
   "torch._six.string_classes"
  ],
  "type": "function"
 },
 "torch.utils.data._utils.signal_handling": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.utils.data._utils.signal_handling._set_SIGCHLD_handler": {
  "lineno": 47,
  "symbols_in_volume": [
   "signal.SIGCHLD",
   "signal.getsignal",
   "signal.signal",
   "threading._MainThread",
   "threading.current_thread"
  ],
  "type": "function"
 },
 "torch.utils.data._utils.signal_handling._set_SIGCHLD_handler.handler": {
  "lineno": 63,
  "symbols_in_volume": [
   "torch._C._error_if_any_worker_fails"
  ],
  "type": "function"
 },
 "torch.utils.data._utils.worker": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "module"
 },
 "torch.utils.data._utils.worker.ManagerWatchdog": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.utils.data._utils.worker.ManagerWatchdog.__init__": {
  "lineno": 50,
  "symbols_in_volume": [
   "os.getppid"
  ],
  "type": "function"
 },
 "torch.utils.data._utils.worker.ManagerWatchdog.is_alive": {
  "lineno": 54,
  "symbols_in_volume": [
   "os.getppid"
  ],
  "type": "function"
 },
 "torch.utils.data._utils.worker.WorkerInfo": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.utils.data._utils.worker.WorkerInfo.__init__": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data._utils.worker.WorkerInfo.__repr__": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data._utils.worker.WorkerInfo.__setattr__": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data._utils.worker._worker_loop": {
  "lineno": 118,
  "symbols_in_volume": [
   "random.seed",
   "torch._six.queue.Empty",
   "torch._utils.ExceptionWrapper",
   "torch.manual_seed",
   "torch.set_num_threads",
   "torch.utils.data._DatasetKind.Iterable",
   "torch.utils.data._DatasetKind.create_fetcher",
   "typing.Union"
  ],
  "type": "function"
 },
 "torch.utils.data._utils.worker.get_worker_info": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data.dataloader": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Callable",
   "typing.List",
   "typing.TypeVar"
  ],
  "type": "module"
 },
 "torch.utils.data.dataloader.DataLoader": {
  "lineno": 69,
  "symbols_in_volume": [
   "typing.Generic",
   "typing.Optional"
  ],
  "type": "class"
 },
 "torch.utils.data.dataloader.DataLoader.__init__": {
  "lineno": 154,
  "symbols_in_volume": [
   "torch._C._log_api_usage_once",
   "typing.Optional",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "torch.utils.data.dataloader.DataLoader.__iter__": {
  "lineno": 339,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data.dataloader.DataLoader.__len__": {
  "lineno": 370,
  "symbols_in_volume": [
   "math.ceil"
  ],
  "type": "function"
 },
 "torch.utils.data.dataloader.DataLoader.__setattr__": {
  "lineno": 329,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data.dataloader.DataLoader._auto_collation": {
  "lineno": 354,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data.dataloader.DataLoader._get_iterator": {
  "lineno": 290,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data.dataloader.DataLoader._index_sampler": {
  "lineno": 358,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data.dataloader.DataLoader.multiprocessing_context": {
  "lineno": 300,
  "symbols_in_volume": [
   "multiprocessing.context.BaseContext",
   "torch._six.string_classes",
   "torch.multiprocessing._supports_context",
   "torch.multiprocessing.get_all_start_methods",
   "torch.multiprocessing.get_context"
  ],
  "type": "function"
 },
 "torch.utils.data.dataloader._BaseDataLoaderIter": {
  "lineno": 400,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.utils.data.dataloader._BaseDataLoaderIter.__getstate__": {
  "lineno": 455,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data.dataloader._BaseDataLoaderIter.__init__": {
  "lineno": 401,
  "symbols_in_volume": [
   "torch.cuda.is_available",
   "torch.empty",
   "torch.int64"
  ],
  "type": "function"
 },
 "torch.utils.data.dataloader._BaseDataLoaderIter.__iter__": {
  "lineno": 418,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data.dataloader._BaseDataLoaderIter.__len__": {
  "lineno": 452,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data.dataloader._BaseDataLoaderIter.__next__": {
  "lineno": 432,
  "symbols_in_volume": [
   "typing.Any",
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.utils.data.dataloader._BaseDataLoaderIter._next_data": {
  "lineno": 429,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data.dataloader._BaseDataLoaderIter._next_index": {
  "lineno": 426,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data.dataloader._BaseDataLoaderIter._reset": {
  "lineno": 421,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data.dataloader._DatasetKind": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.utils.data.dataloader._DatasetKind.create_fetcher": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data.dataloader._InfiniteConstantSampler": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.utils.data.dataloader._InfiniteConstantSampler.__init__": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data.dataloader._InfiniteConstantSampler.__iter__": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data.dataloader._MultiProcessingDataLoaderIter": {
  "lineno": 481,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.utils.data.dataloader._MultiProcessingDataLoaderIter.__del__": {
  "lineno": 1202,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data.dataloader._MultiProcessingDataLoaderIter.__init__": {
  "lineno": 762,
  "symbols_in_volume": [
   "itertools.cycle",
   "threading.Event",
   "threading.Thread",
   "torch._six.queue.Queue",
   "torch.cuda.current_device",
   "torch.multiprocessing"
  ],
  "type": "function"
 },
 "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._get_data": {
  "lineno": 1005,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._mark_worker_as_unavailable": {
  "lineno": 1114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._next_data": {
  "lineno": 1038,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._process_data": {
  "lineno": 1107,
  "symbols_in_volume": [
   "torch._utils.ExceptionWrapper"
  ],
  "type": "function"
 },
 "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._reset": {
  "lineno": 829,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._shutdown_workers": {
  "lineno": 1140,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._try_get_data": {
  "lineno": 859,
  "symbols_in_volume": [
   "errno.EMFILE",
   "tempfile.NamedTemporaryFile",
   "torch._six.queue.Empty"
  ],
  "type": "function"
 },
 "torch.utils.data.dataloader._MultiProcessingDataLoaderIter._try_put_index": {
  "lineno": 1087,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data.dataloader._SingleProcessDataLoaderIter": {
  "lineno": 464,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.utils.data.dataloader._SingleProcessDataLoaderIter.__init__": {
  "lineno": 465,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data.dataloader._SingleProcessDataLoaderIter._next_data": {
  "lineno": 473,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data.dataset": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.TypeVar"
  ],
  "type": "module"
 },
 "torch.utils.data.dataset.ChainDataset": {
  "lineno": 227,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.utils.data.dataset.ChainDataset.__init__": {
  "lineno": 237,
  "symbols_in_volume": [
   "typing.Iterable"
  ],
  "type": "function"
 },
 "torch.utils.data.dataset.ChainDataset.__iter__": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data.dataset.ChainDataset.__len__": {
  "lineno": 247,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data.dataset.ConcatDataset": {
  "lineno": 176,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "class"
 },
 "torch.utils.data.dataset.ConcatDataset.__getitem__": {
  "lineno": 208,
  "symbols_in_volume": [
   "bisect.bisect_right"
  ],
  "type": "function"
 },
 "torch.utils.data.dataset.ConcatDataset.__init__": {
  "lineno": 196,
  "symbols_in_volume": [
   "typing.Iterable"
  ],
  "type": "function"
 },
 "torch.utils.data.dataset.ConcatDataset.__len__": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data.dataset.ConcatDataset.cummulative_sizes": {
  "lineno": 220,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.utils.data.dataset.ConcatDataset.cumsum": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data.dataset.Dataset": {
  "lineno": 15,
  "symbols_in_volume": [
   "typing.Generic"
  ],
  "type": "class"
 },
 "torch.utils.data.dataset.Dataset.__add__": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data.dataset.Dataset.__getitem__": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data.dataset.IterableDataset": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.utils.data.dataset.IterableDataset.__add__": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data.dataset.IterableDataset.__iter__": {
  "lineno": 145,
  "symbols_in_volume": [
   "typing.Iterator"
  ],
  "type": "function"
 },
 "torch.utils.data.dataset.Subset": {
  "lineno": 256,
  "symbols_in_volume": [
   "typing.Sequence"
  ],
  "type": "class"
 },
 "torch.utils.data.dataset.Subset.__getitem__": {
  "lineno": 271,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data.dataset.Subset.__init__": {
  "lineno": 267,
  "symbols_in_volume": [
   "typing.Sequence"
  ],
  "type": "function"
 },
 "torch.utils.data.dataset.Subset.__len__": {
  "lineno": 274,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data.dataset.TensorDataset": {
  "lineno": 155,
  "symbols_in_volume": [
   "typing.Tuple"
  ],
  "type": "class"
 },
 "torch.utils.data.dataset.TensorDataset.__getitem__": {
  "lineno": 169,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data.dataset.TensorDataset.__init__": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data.dataset.TensorDataset.__len__": {
  "lineno": 172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data.dataset.random_split": {
  "lineno": 278,
  "symbols_in_volume": [
   "torch._utils._accumulate",
   "torch.default_generator",
   "torch.randperm",
   "typing.List",
   "typing.Optional",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "torch.utils.data.distributed": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.TypeVar"
  ],
  "type": "module"
 },
 "torch.utils.data.distributed.DistributedSampler": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.utils.data.distributed.DistributedSampler.__init__": {
  "lineno": 59,
  "symbols_in_volume": [
   "math.ceil",
   "torch.distributed.get_rank",
   "torch.distributed.get_world_size",
   "torch.distributed.is_available",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.utils.data.distributed.DistributedSampler.__iter__": {
  "lineno": 92,
  "symbols_in_volume": [
   "torch.Generator",
   "torch.randperm",
   "typing.Iterator"
  ],
  "type": "function"
 },
 "torch.utils.data.distributed.DistributedSampler.__len__": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data.distributed.DistributedSampler.set_epoch": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data.sampler": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.TypeVar"
  ],
  "type": "module"
 },
 "torch.utils.data.sampler.BatchSampler": {
  "lineno": 194,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "class"
 },
 "torch.utils.data.sampler.BatchSampler.__init__": {
  "lineno": 210,
  "symbols_in_volume": [
   "torch._six.int_classes"
  ],
  "type": "function"
 },
 "torch.utils.data.sampler.BatchSampler.__iter__": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data.sampler.BatchSampler.__len__": {
  "lineno": 235,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data.sampler.RandomSampler": {
  "lineno": 73,
  "symbols_in_volume": [
   "typing.Sized"
  ],
  "type": "class"
 },
 "torch.utils.data.sampler.RandomSampler.__init__": {
  "lineno": 87,
  "symbols_in_volume": [
   "typing.Optional",
   "typing.Sized"
  ],
  "type": "function"
 },
 "torch.utils.data.sampler.RandomSampler.__iter__": {
  "lineno": 113,
  "symbols_in_volume": [
   "torch.Generator",
   "torch.empty",
   "torch.int64",
   "torch.randint",
   "torch.randperm"
  ],
  "type": "function"
 },
 "torch.utils.data.sampler.RandomSampler.__len__": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data.sampler.RandomSampler.num_samples": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data.sampler.Sampler": {
  "lineno": 9,
  "symbols_in_volume": [
   "typing.Generic"
  ],
  "type": "class"
 },
 "torch.utils.data.sampler.Sampler.__init__": {
  "lineno": 21,
  "symbols_in_volume": [
   "typing.Optional",
   "typing.Sized"
  ],
  "type": "function"
 },
 "torch.utils.data.sampler.Sampler.__iter__": {
  "lineno": 24,
  "symbols_in_volume": [
   "typing.Iterator"
  ],
  "type": "function"
 },
 "torch.utils.data.sampler.SequentialSampler": {
  "lineno": 55,
  "symbols_in_volume": [
   "typing.Sized"
  ],
  "type": "class"
 },
 "torch.utils.data.sampler.SequentialSampler.__init__": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data.sampler.SequentialSampler.__iter__": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data.sampler.SequentialSampler.__len__": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data.sampler.SubsetRandomSampler": {
  "lineno": 131,
  "symbols_in_volume": [
   "typing.Sequence"
  ],
  "type": "class"
 },
 "torch.utils.data.sampler.SubsetRandomSampler.__init__": {
  "lineno": 140,
  "symbols_in_volume": [
   "typing.Sequence"
  ],
  "type": "function"
 },
 "torch.utils.data.sampler.SubsetRandomSampler.__iter__": {
  "lineno": 144,
  "symbols_in_volume": [
   "torch.randperm"
  ],
  "type": "function"
 },
 "torch.utils.data.sampler.SubsetRandomSampler.__len__": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.data.sampler.WeightedRandomSampler": {
  "lineno": 151,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "class"
 },
 "torch.utils.data.sampler.WeightedRandomSampler.__init__": {
  "lineno": 172,
  "symbols_in_volume": [
   "torch._six.int_classes",
   "torch.as_tensor",
   "torch.double",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "torch.utils.data.sampler.WeightedRandomSampler.__iter__": {
  "lineno": 186,
  "symbols_in_volume": [
   "torch.multinomial"
  ],
  "type": "function"
 },
 "torch.utils.data.sampler.WeightedRandomSampler.__len__": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.dlpack": {
  "lineno": null,
  "symbols_in_volume": [
   "torch._C._add_docstr",
   "torch._C._from_dlpack",
   "torch._C._to_dlpack"
  ],
  "type": "module"
 },
 "torch.utils.ffi": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.utils.file_baton": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version"
  ],
  "type": "module"
 },
 "torch.utils.file_baton.FileBaton": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.utils.file_baton.FileBaton.__init__": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.file_baton.FileBaton.release": {
  "lineno": 50,
  "symbols_in_volume": [
   "os.close",
   "os.remove"
  ],
  "type": "function"
 },
 "torch.utils.file_baton.FileBaton.try_acquire": {
  "lineno": 27,
  "symbols_in_volume": [
   "os.O_CREAT",
   "os.O_EXCL",
   "os.open"
  ],
  "type": "function"
 },
 "torch.utils.file_baton.FileBaton.wait": {
  "lineno": 40,
  "symbols_in_volume": [
   "os.path.exists",
   "time.sleep"
  ],
  "type": "function"
 },
 "torch.utils.hipify": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.utils.hipify.constants": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.utils.hipify.cuda_to_hip_mappings": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "module"
 },
 "torch.utils.hipify.hipify_python": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.abc.Mapping",
   "re.compile"
  ],
  "type": "module"
 },
 "torch.utils.hipify.hipify_python.GeneratedFileCleaner": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.utils.hipify.hipify_python.GeneratedFileCleaner.__enter__": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.hipify.hipify_python.GeneratedFileCleaner.__exit__": {
  "lineno": 105,
  "symbols_in_volume": [
   "os.rmdir",
   "os.unlink"
  ],
  "type": "function"
 },
 "torch.utils.hipify.hipify_python.GeneratedFileCleaner.__init__": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.hipify.hipify_python.GeneratedFileCleaner.makedirs": {
  "lineno": 95,
  "symbols_in_volume": [
   "os.mkdir",
   "os.path.abspath",
   "os.path.exists",
   "os.path.isdir",
   "os.path.split"
  ],
  "type": "function"
 },
 "torch.utils.hipify.hipify_python.GeneratedFileCleaner.open": {
  "lineno": 90,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.exists"
  ],
  "type": "function"
 },
 "torch.utils.hipify.hipify_python.InputError": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.utils.hipify.hipify_python.InputError.__init__": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.hipify.hipify_python.InputError.__str__": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.hipify.hipify_python.Trie": {
  "lineno": 572,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.utils.hipify.hipify_python.Trie.__init__": {
  "lineno": 576,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.hipify.hipify_python.Trie._pattern": {
  "lineno": 592,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.hipify.hipify_python.Trie.add": {
  "lineno": 579,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.hipify.hipify_python.Trie.dump": {
  "lineno": 586,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.hipify.hipify_python.Trie.pattern": {
  "lineno": 629,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.hipify.hipify_python.Trie.quote": {
  "lineno": 589,
  "symbols_in_volume": [
   "re.escape"
  ],
  "type": "function"
 },
 "torch.utils.hipify.hipify_python.add_dim3": {
  "lineno": 204,
  "symbols_in_volume": [
   "typing.Dict",
   "typing.List"
  ],
  "type": "function"
 },
 "torch.utils.hipify.hipify_python.bcolors": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.utils.hipify.hipify_python.compute_stats": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.hipify.hipify_python.extract_arguments": {
  "lineno": 763,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.hipify.hipify_python.file_add_header": {
  "lineno": 743,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.hipify.hipify_python.file_specific_replacement": {
  "lineno": 731,
  "symbols_in_volume": [
   "re.escape",
   "re.sub"
  ],
  "type": "function"
 },
 "torch.utils.hipify.hipify_python.find_bracket_group": {
  "lineno": 401,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.hipify.hipify_python.find_closure_group": {
  "lineno": 361,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.hipify.hipify_python.find_parentheses_group": {
  "lineno": 406,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.hipify.hipify_python.fix_static_global_kernels": {
  "lineno": 754,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.hipify.hipify_python.get_hip_file_path": {
  "lineno": 480,
  "symbols_in_volume": [
   "os.path.join",
   "os.path.split",
   "os.path.splitext"
  ],
  "type": "function"
 },
 "torch.utils.hipify.hipify_python.hip_header_magic": {
  "lineno": 433,
  "symbols_in_volume": [
   "re.search"
  ],
  "type": "function"
 },
 "torch.utils.hipify.hipify_python.hipify": {
  "lineno": 820,
  "symbols_in_volume": [
   "os.getcwd",
   "os.path.exists",
   "shutil.copytree",
   "sys.exit"
  ],
  "type": "function"
 },
 "torch.utils.hipify.hipify_python.is_caffe2_gpu_file": {
  "lineno": 563,
  "symbols_in_volume": [
   "os.path.basename",
   "os.path.splitext"
  ],
  "type": "function"
 },
 "torch.utils.hipify.hipify_python.is_out_of_place": {
  "lineno": 542,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.hipify.hipify_python.is_pytorch_file": {
  "lineno": 551,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.hipify.hipify_python.matched_files_iter": {
  "lineno": 112,
  "symbols_in_volume": [
   "os.path.join",
   "os.path.relpath",
   "os.walk"
  ],
  "type": "function"
 },
 "torch.utils.hipify.hipify_python.matched_files_iter._fnmatch": {
  "lineno": 113,
  "symbols_in_volume": [
   "fnmatch.fnmatch"
  ],
  "type": "function"
 },
 "torch.utils.hipify.hipify_python.matched_files_iter.match_extensions": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.hipify.hipify_python.openf": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.hipify.hipify_python.preprocess": {
  "lineno": 154,
  "symbols_in_volume": [
   "sys.stderr",
   "typing.Dict",
   "typing.List"
  ],
  "type": "function"
 },
 "torch.utils.hipify.hipify_python.preprocessor": {
  "lineno": 656,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.exists",
   "os.path.join"
  ],
  "type": "function"
 },
 "torch.utils.hipify.hipify_python.preprocessor.c2_repl": {
  "lineno": 676,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.hipify.hipify_python.preprocessor.mk_repl": {
  "lineno": 681,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.hipify.hipify_python.preprocessor.mk_repl.repl": {
  "lineno": 682,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.hipify.hipify_python.preprocessor.pt_repl": {
  "lineno": 667,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.hipify.hipify_python.processKernelLaunches": {
  "lineno": 242,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.hipify.hipify_python.processKernelLaunches.find_kernel_bounds": {
  "lineno": 306,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.hipify.hipify_python.processKernelLaunches.grab_method_and_template": {
  "lineno": 247,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.hipify.hipify_python.replace_extern_shared": {
  "lineno": 465,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.hipify.hipify_python.replace_math_functions": {
  "lineno": 414,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.hipify.hipify_python.str2bool": {
  "lineno": 809,
  "symbols_in_volume": [
   "argparse.ArgumentTypeError"
  ],
  "type": "function"
 },
 "torch.utils.hooks": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.utils.hooks.RemovableHandle": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.utils.hooks.RemovableHandle.__enter__": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.hooks.RemovableHandle.__exit__": {
  "lineno": 38,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "torch.utils.hooks.RemovableHandle.__getstate__": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.hooks.RemovableHandle.__init__": {
  "lineno": 13,
  "symbols_in_volume": [
   "typing.Any",
   "weakref.ref"
  ],
  "type": "function"
 },
 "torch.utils.hooks.RemovableHandle.__setstate__": {
  "lineno": 26,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "weakref.ref"
  ],
  "type": "function"
 },
 "torch.utils.hooks.RemovableHandle.remove": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.hooks.unserializable_hook": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.hooks.warn_if_has_hooks": {
  "lineno": 52,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "torch.utils.mkldnn": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.utils.mkldnn.MkldnnBatchNorm": {
  "lineno": 129,
  "symbols_in_volume": [
   "torch.jit.ScriptModule"
  ],
  "type": "class"
 },
 "torch.utils.mkldnn.MkldnnBatchNorm.__getstate__": {
  "lineno": 150,
  "symbols_in_volume": [
   "torch.jit.script_method"
  ],
  "type": "function"
 },
 "torch.utils.mkldnn.MkldnnBatchNorm.__init__": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.mkldnn.MkldnnBatchNorm.__setstate__": {
  "lineno": 158,
  "symbols_in_volume": [
   "torch.jit.script_method"
  ],
  "type": "function"
 },
 "torch.utils.mkldnn.MkldnnBatchNorm.forward": {
  "lineno": 166,
  "symbols_in_volume": [
   "torch.batch_norm",
   "torch.jit.script_method"
  ],
  "type": "function"
 },
 "torch.utils.mkldnn.MkldnnConv1d": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.utils.mkldnn.MkldnnConv1d.__init__": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.mkldnn.MkldnnConv1d.__setstate__": {
  "lineno": 77,
  "symbols_in_volume": [
   "torch.jit.script_method"
  ],
  "type": "function"
 },
 "torch.utils.mkldnn.MkldnnConv2d": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.utils.mkldnn.MkldnnConv2d.__init__": {
  "lineno": 85,
  "symbols_in_volume": [
   "torch._C._nn.mkldnn_reorder_conv2d_weight"
  ],
  "type": "function"
 },
 "torch.utils.mkldnn.MkldnnConv2d.__setstate__": {
  "lineno": 95,
  "symbols_in_volume": [
   "torch._C._nn.mkldnn_reorder_conv2d_weight",
   "torch.jit.script_method"
  ],
  "type": "function"
 },
 "torch.utils.mkldnn.MkldnnConv3d": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.utils.mkldnn.MkldnnConv3d.__init__": {
  "lineno": 107,
  "symbols_in_volume": [
   "torch._C._nn.mkldnn_reorder_conv3d_weight"
  ],
  "type": "function"
 },
 "torch.utils.mkldnn.MkldnnConv3d.__setstate__": {
  "lineno": 117,
  "symbols_in_volume": [
   "torch._C._nn.mkldnn_reorder_conv3d_weight",
   "torch.jit.script_method"
  ],
  "type": "function"
 },
 "torch.utils.mkldnn.MkldnnLinear": {
  "lineno": 5,
  "symbols_in_volume": [
   "torch.jit.ScriptModule"
  ],
  "type": "class"
 },
 "torch.utils.mkldnn.MkldnnLinear.__getstate__": {
  "lineno": 17,
  "symbols_in_volume": [
   "torch.jit.script_method"
  ],
  "type": "function"
 },
 "torch.utils.mkldnn.MkldnnLinear.__init__": {
  "lineno": 6,
  "symbols_in_volume": [
   "torch.float",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.utils.mkldnn.MkldnnLinear.__setstate__": {
  "lineno": 21,
  "symbols_in_volume": [
   "torch.jit.script_method"
  ],
  "type": "function"
 },
 "torch.utils.mkldnn.MkldnnLinear.forward": {
  "lineno": 27,
  "symbols_in_volume": [
   "torch._C._nn.mkldnn_linear",
   "torch.jit.script_method"
  ],
  "type": "function"
 },
 "torch.utils.mkldnn._MkldnnConvNd": {
  "lineno": 35,
  "symbols_in_volume": [
   "torch.jit.ScriptModule"
  ],
  "type": "class"
 },
 "torch.utils.mkldnn._MkldnnConvNd.__getstate__": {
  "lineno": 55,
  "symbols_in_volume": [
   "torch.jit.script_method"
  ],
  "type": "function"
 },
 "torch.utils.mkldnn._MkldnnConvNd.__init__": {
  "lineno": 39,
  "symbols_in_volume": [
   "torch.float",
   "torch.zeros"
  ],
  "type": "function"
 },
 "torch.utils.mkldnn._MkldnnConvNd.forward": {
  "lineno": 59,
  "symbols_in_volume": [
   "torch.jit.script_method",
   "torch.mkldnn_convolution"
  ],
  "type": "function"
 },
 "torch.utils.mkldnn.to_mkldnn": {
  "lineno": 181,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.mkldnn.to_mkldnn.m_fn": {
  "lineno": 182,
  "symbols_in_volume": [
   "torch.nn.BatchNorm2d",
   "torch.nn.BatchNorm3d",
   "torch.nn.Conv1d",
   "torch.nn.Conv2d",
   "torch.nn.Conv3d",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "torch.utils.mkldnn.to_mkldnn.m_fn_rec": {
  "lineno": 196,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.mobile_optimizer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.utils.mobile_optimizer.LintCode": {
  "lineno": 10,
  "symbols_in_volume": [
   "enum.Enum"
  ],
  "type": "class"
 },
 "torch.utils.mobile_optimizer.generate_mobile_module_lints": {
  "lineno": 52,
  "symbols_in_volume": [
   "torch.jit.ScriptModule",
   "torch.jit.export_opnames"
  ],
  "type": "function"
 },
 "torch.utils.mobile_optimizer.optimize_for_mobile": {
  "lineno": 16,
  "symbols_in_volume": [
   "torch._C.MobileOptimizerType",
   "torch._C._jit_pass_optimize_for_mobile",
   "torch._C._jit_pass_vulkan_optimize_for_mobile",
   "torch.jit.ScriptModule",
   "torch.jit._recursive.wrap_cpp_module",
   "typing.AnyStr",
   "typing.List",
   "typing.Set"
  ],
  "type": "function"
 },
 "torch.utils.model_zoo": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.utils.set_module": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.show_pickle": {
  "lineno": null,
  "symbols_in_volume": [
   "pprint.PrettyPrinter._dispatch",
   "sys.argv",
   "sys.exit"
  ],
  "type": "module"
 },
 "torch.utils.show_pickle.DumpUnpickler": {
  "lineno": 60,
  "symbols_in_volume": [
   "pickle._Unpickler"
  ],
  "type": "class"
 },
 "torch.utils.show_pickle.DumpUnpickler.dump": {
  "lineno": 67,
  "symbols_in_volume": [
   "pprint.pprint"
  ],
  "type": "function"
 },
 "torch.utils.show_pickle.DumpUnpickler.find_class": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.show_pickle.DumpUnpickler.persistent_load": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.show_pickle.FakeClass": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.utils.show_pickle.FakeClass.__call__": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.show_pickle.FakeClass.__init__": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.show_pickle.FakeClass.__repr__": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.show_pickle.FakeClass.fake_new": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.show_pickle.FakeObject": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.utils.show_pickle.FakeObject.__init__": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.show_pickle.FakeObject.__repr__": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.show_pickle.FakeObject.__setstate__": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.show_pickle.FakeObject.pp_format": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.show_pickle.main": {
  "lineno": 73,
  "symbols_in_volume": [
   "fnmatch.fnmatch",
   "sys.stderr.write",
   "typing.BinaryIO",
   "typing.IO",
   "typing.Union",
   "zipfile.ZipFile"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard": {
  "lineno": null,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "tensorboard",
   "tensorboard.__version__"
  ],
  "type": "module"
 },
 "torch.utils.tensorboard._caffe2_graph": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.utils.tensorboard._caffe2_graph._add_gradient_scope": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.tensorboard._caffe2_graph._add_gradient_scope.f": {
  "lineno": 234,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.tensorboard._caffe2_graph._add_tf_shape": {
  "lineno": 320,
  "symbols_in_volume": [
   "tensorboard.compat.proto.tensor_shape_pb2.TensorShapeProto",
   "tensorboard.compat.proto.tensor_shape_pb2.TensorShapeProto.Dim"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard._caffe2_graph._blob_to_node": {
  "lineno": 475,
  "symbols_in_volume": [
   "tensorboard.compat.proto.node_def_pb2.NodeDef"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard._caffe2_graph._check_if_cpu": {
  "lineno": 548,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.tensorboard._caffe2_graph._check_if_forward": {
  "lineno": 533,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.tensorboard._caffe2_graph._clear_debug_info": {
  "lineno": 510,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.tensorboard._caffe2_graph._compute_in_out": {
  "lineno": 561,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.tensorboard._caffe2_graph._convert_to_ssa": {
  "lineno": 81,
  "symbols_in_volume": [
   "caffe2.python.core.IR",
   "typing.Dict",
   "typing.Set",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard._caffe2_graph._convert_to_ssa.ssa_name": {
  "lineno": 101,
  "symbols_in_volume": [
   "typing.Dict"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard._caffe2_graph._fill_missing_operator_names": {
  "lineno": 264,
  "symbols_in_volume": [
   "os.path.commonprefix",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard._caffe2_graph._filter_ops": {
  "lineno": 590,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.tensorboard._caffe2_graph._get_blob_names": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.tensorboard._caffe2_graph._make_unique_name": {
  "lineno": 18,
  "symbols_in_volume": [
   "typing.Set"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard._caffe2_graph._operator_to_node": {
  "lineno": 386,
  "symbols_in_volume": [
   "tensorboard.compat.proto.node_def_pb2.NodeDef"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard._caffe2_graph._operator_to_node_simp": {
  "lineno": 414,
  "symbols_in_volume": [
   "os.path.commonprefix",
   "os.path.join",
   "tensorboard.compat.proto.node_def_pb2.NodeDef"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard._caffe2_graph._operators_to_graph_def": {
  "lineno": 625,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.OperatorDef",
   "tensorboard.compat.proto.graph_pb2.GraphDef",
   "typing.Dict",
   "typing.List"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard._caffe2_graph._propagate_device_option": {
  "lineno": 714,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.tensorboard._caffe2_graph._remap_keys": {
  "lineno": 152,
  "symbols_in_volume": [
   "six.iteritems"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard._caffe2_graph._rename_all": {
  "lineno": 170,
  "symbols_in_volume": [
   "typing.Dict",
   "typing.Set",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard._caffe2_graph._rename_all.g": {
  "lineno": 188,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.tensorboard._caffe2_graph._rename_tensorflow_style": {
  "lineno": 42,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard._caffe2_graph._rename_tensorflow_style.f": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.tensorboard._caffe2_graph._replace_colons": {
  "lineno": 242,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.tensorboard._caffe2_graph._replace_colons.f": {
  "lineno": 259,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.tensorboard._caffe2_graph._set_tf_attr": {
  "lineno": 340,
  "symbols_in_volume": [
   "builtins.bytes"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard._caffe2_graph._tf_device": {
  "lineno": 296,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.CPU",
   "caffe2.proto.caffe2_pb2.CUDA",
   "caffe2.proto.caffe2_pb2.MKLDNN"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard._caffe2_graph._try_get_shapes": {
  "lineno": 735,
  "symbols_in_volume": [
   "caffe2.python.workspace.InferShapesAndTypes",
   "logging.warning"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard._caffe2_graph.model_to_graph_def": {
  "lineno": 757,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.tensorboard._caffe2_graph.nets_to_graph_def": {
  "lineno": 775,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard._caffe2_graph.protos_to_graph_def": {
  "lineno": 798,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard._convert_np": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.utils.tensorboard._convert_np._prepare_caffe2": {
  "lineno": 36,
  "symbols_in_volume": [
   "caffe2.python.workspace.FetchBlob"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard._convert_np._prepare_pytorch": {
  "lineno": 29,
  "symbols_in_volume": [
   "torch.autograd.Variable"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard._convert_np.make_np": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.isscalar",
   "numpy.ndarray",
   "six.string_types",
   "torch.Tensor"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard._embedding": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.utils.tensorboard._embedding.get_embedding_info": {
  "lineno": 47,
  "symbols_in_volume": [
   "tensorboard.plugins.projector.projector_config_pb2.EmbeddingInfo"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard._embedding.make_mat": {
  "lineno": 65,
  "symbols_in_volume": [
   "tensorboard.compat.tf.compat.as_bytes",
   "tensorboard.compat.tf.io.gfile.GFile",
   "tensorboard.compat.tf.io.gfile.get_filesystem"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard._embedding.make_sprite": {
  "lineno": 24,
  "symbols_in_volume": [
   "PIL.Image.fromarray",
   "io.BytesIO",
   "math.ceil",
   "numpy.uint8",
   "numpy.zeros",
   "tensorboard.compat.tf.io.gfile.get_filesystem"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard._embedding.make_tsv": {
  "lineno": 9,
  "symbols_in_volume": [
   "tensorboard.compat.tf.compat.as_bytes",
   "tensorboard.compat.tf.io.gfile.get_filesystem"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard._embedding.write_pbtxt": {
  "lineno": 59,
  "symbols_in_volume": [
   "tensorboard.compat.tf.compat.as_bytes",
   "tensorboard.compat.tf.io.gfile.get_filesystem"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard._onnx_graph": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.utils.tensorboard._onnx_graph.load_onnx_graph": {
  "lineno": 8,
  "symbols_in_volume": [
   "onnx.load"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard._onnx_graph.parse": {
  "lineno": 15,
  "symbols_in_volume": [
   "itertools.chain",
   "tensorboard.compat.proto.attr_value_pb2.AttrValue",
   "tensorboard.compat.proto.graph_pb2.GraphDef",
   "tensorboard.compat.proto.node_def_pb2.NodeDef",
   "tensorboard.compat.proto.tensor_shape_pb2.TensorShapeProto",
   "tensorboard.compat.proto.tensor_shape_pb2.TensorShapeProto.Dim",
   "tensorboard.compat.proto.versions_pb2.VersionDef"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard._proto_graph": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.utils.tensorboard._proto_graph.attr_value_proto": {
  "lineno": 6,
  "symbols_in_volume": [
   "tensorboard.compat.proto.attr_value_pb2.AttrValue",
   "tensorboard.compat.proto.attr_value_pb2.AttrValue.ListValue"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard._proto_graph.node_proto": {
  "lineno": 28,
  "symbols_in_volume": [
   "tensorboard.compat.proto.node_def_pb2.NodeDef"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard._proto_graph.tensor_shape_proto": {
  "lineno": 21,
  "symbols_in_volume": [
   "tensorboard.compat.proto.tensor_shape_pb2.TensorShapeProto",
   "tensorboard.compat.proto.tensor_shape_pb2.TensorShapeProto.Dim"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard._pytorch_graph": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.utils.tensorboard._pytorch_graph.GraphPy": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.utils.tensorboard._pytorch_graph.GraphPy.__init__": {
  "lineno": 118,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard._pytorch_graph.GraphPy.append": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.tensorboard._pytorch_graph.GraphPy.find_common_root": {
  "lineno": 138,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.tensorboard._pytorch_graph.GraphPy.populate_namespace_from_OP_to_IO": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.tensorboard._pytorch_graph.GraphPy.printall": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.tensorboard._pytorch_graph.GraphPy.to_proto": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.tensorboard._pytorch_graph.NodeBase": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.utils.tensorboard._pytorch_graph.NodeBase.__init__": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.tensorboard._pytorch_graph.NodeBase.__repr__": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.tensorboard._pytorch_graph.NodePy": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.utils.tensorboard._pytorch_graph.NodePy.__init__": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.tensorboard._pytorch_graph.NodePyIO": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.utils.tensorboard._pytorch_graph.NodePyIO.__init__": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.tensorboard._pytorch_graph.NodePyOP": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.utils.tensorboard._pytorch_graph.NodePyOP.__init__": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.tensorboard._pytorch_graph.graph": {
  "lineno": 273,
  "symbols_in_volume": [
   "tensorboard.compat.proto.config_pb2.RunMetadata",
   "tensorboard.compat.proto.graph_pb2.GraphDef",
   "tensorboard.compat.proto.step_stats_pb2.DeviceStepStats",
   "tensorboard.compat.proto.step_stats_pb2.StepStats",
   "tensorboard.compat.proto.versions_pb2.VersionDef",
   "torch._C._jit_pass_inline",
   "torch.jit.trace",
   "torch.onnx.TrainingMode.EVAL",
   "torch.onnx.select_model_mode_for_export"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard._pytorch_graph.parse": {
  "lineno": 194,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard._pytorch_graph.parse.parse_traced_name": {
  "lineno": 243,
  "symbols_in_volume": [
   "torch.jit.TracedModule"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard._utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.utils.tensorboard._utils._prepare_video": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.float32",
   "numpy.reshape",
   "numpy.transpose",
   "numpy.uint8",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard._utils._prepare_video.is_power2": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.tensorboard._utils.convert_to_HWC": {
  "lineno": 97,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.stack"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard._utils.figure_to_image": {
  "lineno": 5,
  "symbols_in_volume": [
   "numpy.stack"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard._utils.figure_to_image.render_to_rgb": {
  "lineno": 20,
  "symbols_in_volume": [
   "matplotlib.backends.backend_agg.FigureCanvasAgg",
   "matplotlib.pyplot.close",
   "numpy.frombuffer",
   "numpy.moveaxis",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard._utils.make_grid": {
  "lineno": 70,
  "symbols_in_volume": [
   "numpy.ceil",
   "numpy.concatenate",
   "numpy.ndarray",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.summary": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.utils.tensorboard.summary._calc_scale_factor": {
  "lineno": 23,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.summary._draw_single_box": {
  "lineno": 28,
  "symbols_in_volume": [
   "PIL.ImageDraw.Draw",
   "PIL.ImageFont.load_default",
   "numpy.ceil"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.summary._get_json_config": {
  "lineno": 667,
  "symbols_in_volume": [
   "json.dumps"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.summary._get_tensor_summary": {
  "lineno": 615,
  "symbols_in_volume": [
   "tensorboard.compat.proto.summary_pb2.Summary.Value",
   "tensorboard.compat.proto.tensor_pb2.TensorProto",
   "tensorboard.compat.proto.tensor_shape_pb2.TensorShapeProto",
   "tensorboard.compat.proto.tensor_shape_pb2.TensorShapeProto.Dim",
   "tensorboard.plugins.mesh.metadata.create_summary_metadata",
   "tensorboard.plugins.mesh.metadata.get_instance_name",
   "torch.as_tensor"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.summary.audio": {
  "lineno": 485,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.iinfo",
   "numpy.int16",
   "tensorboard.compat.proto.summary_pb2.Summary",
   "tensorboard.compat.proto.summary_pb2.Summary.Audio",
   "tensorboard.compat.proto.summary_pb2.Summary.Value",
   "wave.open"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.summary.compute_curve": {
  "lineno": 584,
  "symbols_in_volume": [
   "numpy.cumsum",
   "numpy.float",
   "numpy.floor",
   "numpy.histogram",
   "numpy.int32",
   "numpy.maximum",
   "numpy.stack"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.summary.custom_scalars": {
  "lineno": 513,
  "symbols_in_volume": [
   "tensorboard.compat.proto.summary_pb2.Summary",
   "tensorboard.compat.proto.summary_pb2.Summary.Value",
   "tensorboard.compat.proto.summary_pb2.SummaryMetadata",
   "tensorboard.compat.proto.summary_pb2.SummaryMetadata.PluginData",
   "tensorboard.compat.proto.tensor_pb2.TensorProto",
   "tensorboard.compat.proto.tensor_shape_pb2.TensorShapeProto",
   "tensorboard.plugins.custom_scalar.layout_pb2.Category",
   "tensorboard.plugins.custom_scalar.layout_pb2.Chart",
   "tensorboard.plugins.custom_scalar.layout_pb2.Layout",
   "tensorboard.plugins.custom_scalar.layout_pb2.MarginChartContent",
   "tensorboard.plugins.custom_scalar.layout_pb2.MarginChartContent.Series",
   "tensorboard.plugins.custom_scalar.layout_pb2.MultilineChartContent"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.summary.draw_boxes": {
  "lineno": 399,
  "symbols_in_volume": [
   "six.moves.range"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.summary.histogram": {
  "lineno": 283,
  "symbols_in_volume": [
   "tensorboard.compat.proto.summary_pb2.Summary",
   "tensorboard.compat.proto.summary_pb2.Summary.Value"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.summary.histogram_raw": {
  "lineno": 253,
  "symbols_in_volume": [
   "tensorboard.compat.proto.summary_pb2.HistogramProto",
   "tensorboard.compat.proto.summary_pb2.Summary",
   "tensorboard.compat.proto.summary_pb2.Summary.Value"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.summary.hparams": {
  "lineno": 51,
  "symbols_in_volume": [
   "google.protobuf.struct_pb2.ListValue",
   "google.protobuf.struct_pb2.Value",
   "logging.warning",
   "six.string_types",
   "tensorboard.compat.proto.summary_pb2.Summary",
   "tensorboard.compat.proto.summary_pb2.Summary.Value",
   "tensorboard.compat.proto.summary_pb2.SummaryMetadata",
   "tensorboard.compat.proto.summary_pb2.SummaryMetadata.PluginData",
   "tensorboard.plugins.hparams.api_pb2.DataType.Value",
   "tensorboard.plugins.hparams.api_pb2.Experiment",
   "tensorboard.plugins.hparams.api_pb2.HParamInfo",
   "tensorboard.plugins.hparams.api_pb2.MetricInfo",
   "tensorboard.plugins.hparams.api_pb2.MetricName",
   "tensorboard.plugins.hparams.api_pb2.Status.Value",
   "tensorboard.plugins.hparams.metadata.EXPERIMENT_TAG",
   "tensorboard.plugins.hparams.metadata.PLUGIN_DATA_VERSION",
   "tensorboard.plugins.hparams.metadata.PLUGIN_NAME",
   "tensorboard.plugins.hparams.metadata.SESSION_END_INFO_TAG",
   "tensorboard.plugins.hparams.metadata.SESSION_START_INFO_TAG",
   "tensorboard.plugins.hparams.plugin_data_pb2.HParamsPluginData",
   "tensorboard.plugins.hparams.plugin_data_pb2.SessionEndInfo",
   "tensorboard.plugins.hparams.plugin_data_pb2.SessionStartInfo",
   "torch.Tensor",
   "typing.Optional"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.summary.image": {
  "lineno": 350,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.uint8",
   "tensorboard.compat.proto.summary_pb2.Summary",
   "tensorboard.compat.proto.summary_pb2.Summary.Value"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.summary.image_boxes": {
  "lineno": 385,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.uint8",
   "tensorboard.compat.proto.summary_pb2.Summary",
   "tensorboard.compat.proto.summary_pb2.Summary.Value"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.summary.make_histogram": {
  "lineno": 304,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.cumsum",
   "numpy.empty",
   "numpy.greater",
   "numpy.histogram",
   "numpy.int32",
   "numpy.pad",
   "numpy.searchsorted",
   "tensorboard.compat.proto.summary_pb2.HistogramProto"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.summary.make_image": {
  "lineno": 414,
  "symbols_in_volume": [
   "PIL.Image.ANTIALIAS",
   "PIL.Image.fromarray",
   "io.BytesIO",
   "tensorboard.compat.proto.summary_pb2.Summary.Image"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.summary.make_video": {
  "lineno": 446,
  "symbols_in_volume": [
   "logging.warning",
   "moviepy.editor.ImageSequenceClip",
   "os.remove",
   "tempfile.NamedTemporaryFile",
   "tensorboard.compat.proto.summary_pb2.Summary.Image"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.summary.mesh": {
  "lineno": 676,
  "symbols_in_volume": [
   "tensorboard.compat.proto.summary_pb2.Summary",
   "tensorboard.plugins.mesh.metadata.get_components_bitmask",
   "tensorboard.plugins.mesh.plugin_data_pb2.MeshPluginData.COLOR",
   "tensorboard.plugins.mesh.plugin_data_pb2.MeshPluginData.FACE",
   "tensorboard.plugins.mesh.plugin_data_pb2.MeshPluginData.VERTEX"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.summary.pr_curve": {
  "lineno": 566,
  "symbols_in_volume": [
   "tensorboard.compat.proto.summary_pb2.Summary",
   "tensorboard.compat.proto.summary_pb2.Summary.Value",
   "tensorboard.compat.proto.summary_pb2.SummaryMetadata",
   "tensorboard.compat.proto.summary_pb2.SummaryMetadata.PluginData",
   "tensorboard.compat.proto.tensor_pb2.TensorProto",
   "tensorboard.compat.proto.tensor_shape_pb2.TensorShapeProto",
   "tensorboard.compat.proto.tensor_shape_pb2.TensorShapeProto.Dim",
   "tensorboard.plugins.pr_curve.plugin_data_pb2.PrCurvePluginData"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.summary.pr_curve_raw": {
  "lineno": 550,
  "symbols_in_volume": [
   "numpy.stack",
   "tensorboard.compat.proto.summary_pb2.Summary",
   "tensorboard.compat.proto.summary_pb2.Summary.Value",
   "tensorboard.compat.proto.summary_pb2.SummaryMetadata",
   "tensorboard.compat.proto.summary_pb2.SummaryMetadata.PluginData",
   "tensorboard.compat.proto.tensor_pb2.TensorProto",
   "tensorboard.compat.proto.tensor_shape_pb2.TensorShapeProto",
   "tensorboard.compat.proto.tensor_shape_pb2.TensorShapeProto.Dim",
   "tensorboard.plugins.pr_curve.plugin_data_pb2.PrCurvePluginData"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.summary.scalar": {
  "lineno": 233,
  "symbols_in_volume": [
   "tensorboard.compat.proto.summary_pb2.Summary",
   "tensorboard.compat.proto.summary_pb2.Summary.Value"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.summary.text": {
  "lineno": 540,
  "symbols_in_volume": [
   "tensorboard.compat.proto.summary_pb2.Summary",
   "tensorboard.compat.proto.summary_pb2.Summary.Value",
   "tensorboard.compat.proto.summary_pb2.SummaryMetadata",
   "tensorboard.compat.proto.summary_pb2.SummaryMetadata.PluginData",
   "tensorboard.compat.proto.tensor_pb2.TensorProto",
   "tensorboard.compat.proto.tensor_shape_pb2.TensorShapeProto",
   "tensorboard.compat.proto.tensor_shape_pb2.TensorShapeProto.Dim",
   "tensorboard.plugins.text.plugin_data_pb2.TextPluginData"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.summary.video": {
  "lineno": 435,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.uint8",
   "tensorboard.compat.proto.summary_pb2.Summary",
   "tensorboard.compat.proto.summary_pb2.Summary.Value"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.writer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.utils.tensorboard.writer.FileWriter": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.utils.tensorboard.writer.FileWriter.__init__": {
  "lineno": 39,
  "symbols_in_volume": [
   "tensorboard.summary.writer.event_file_writer.EventFileWriter"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.writer.FileWriter.add_event": {
  "lineno": 68,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.writer.FileWriter.add_graph": {
  "lineno": 99,
  "symbols_in_volume": [
   "tensorboard.compat.proto.event_pb2.Event",
   "tensorboard.compat.proto.event_pb2.TaggedRunMetadata"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.writer.FileWriter.add_onnx_graph": {
  "lineno": 117,
  "symbols_in_volume": [
   "tensorboard.compat.proto.event_pb2.Event"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.writer.FileWriter.add_summary": {
  "lineno": 84,
  "symbols_in_volume": [
   "tensorboard.compat.proto.event_pb2.Event"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.writer.FileWriter.close": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.tensorboard.writer.FileWriter.flush": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.tensorboard.writer.FileWriter.get_logdir": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.tensorboard.writer.FileWriter.reopen": {
  "lineno": 141,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.tensorboard.writer.SummaryWriter": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.utils.tensorboard.writer.SummaryWriter.__enter__": {
  "lineno": 1037,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.tensorboard.writer.SummaryWriter.__exit__": {
  "lineno": 1040,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.tensorboard.writer.SummaryWriter.__init__": {
  "lineno": 161,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "os.path.join",
   "socket.gethostname",
   "torch._C._log_api_usage_once"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.writer.SummaryWriter._check_caffe2_blob": {
  "lineno": 233,
  "symbols_in_volume": [
   "six.string_types"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.writer.SummaryWriter._encode": {
  "lineno": 744,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.tensorboard.writer.SummaryWriter._get_file_writer": {
  "lineno": 248,
  "symbols_in_volume": [
   "tensorboard.compat.proto.event_pb2.Event",
   "tensorboard.compat.proto.event_pb2.SessionLog",
   "tensorboard.compat.proto.event_pb2.SessionLog.START"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.writer.SummaryWriter.add_audio": {
  "lineno": 668,
  "symbols_in_volume": [
   "caffe2.python.workspace.FetchBlob",
   "torch._C._log_api_usage_once"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.writer.SummaryWriter.add_custom_scalars": {
  "lineno": 943,
  "symbols_in_volume": [
   "torch._C._log_api_usage_once"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.writer.SummaryWriter.add_custom_scalars_marginchart": {
  "lineno": 927,
  "symbols_in_volume": [
   "torch._C._log_api_usage_once"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.writer.SummaryWriter.add_custom_scalars_multilinechart": {
  "lineno": 912,
  "symbols_in_volume": [
   "torch._C._log_api_usage_once"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.writer.SummaryWriter.add_embedding": {
  "lineno": 753,
  "symbols_in_volume": [
   "google.protobuf.text_format.MessageToString",
   "os.path.join",
   "tensorboard.compat.tf.io.gfile.get_filesystem",
   "tensorboard.plugins.projector.projector_config_pb2.ProjectorConfig",
   "torch._C._log_api_usage_once"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.writer.SummaryWriter.add_figure": {
  "lineno": 630,
  "symbols_in_volume": [
   "torch._C._log_api_usage_once"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.writer.SummaryWriter.add_graph": {
  "lineno": 710,
  "symbols_in_volume": [
   "caffe2.proto.caffe2_pb2.NetDef",
   "caffe2.python.core.Net",
   "tensorboard.compat.proto.event_pb2.Event",
   "torch._C._log_api_usage_once"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.writer.SummaryWriter.add_histogram": {
  "lineno": 395,
  "symbols_in_volume": [
   "caffe2.python.workspace.FetchBlob",
   "six.string_types",
   "torch._C._log_api_usage_once"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.writer.SummaryWriter.add_histogram_raw": {
  "lineno": 432,
  "symbols_in_volume": [
   "torch._C._log_api_usage_once"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.writer.SummaryWriter.add_hparams": {
  "lineno": 267,
  "symbols_in_volume": [
   "os.path.join",
   "time.time",
   "torch._C._log_api_usage_once"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.writer.SummaryWriter.add_image": {
  "lineno": 499,
  "symbols_in_volume": [
   "caffe2.python.workspace.FetchBlob",
   "torch._C._log_api_usage_once"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.writer.SummaryWriter.add_image_with_boxes": {
  "lineno": 592,
  "symbols_in_volume": [
   "caffe2.python.workspace.FetchBlob",
   "torch._C._log_api_usage_once"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.writer.SummaryWriter.add_images": {
  "lineno": 548,
  "symbols_in_volume": [
   "caffe2.python.workspace.FetchBlob",
   "torch._C._log_api_usage_once"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.writer.SummaryWriter.add_mesh": {
  "lineno": 965,
  "symbols_in_volume": [
   "torch._C._log_api_usage_once"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.writer.SummaryWriter.add_onnx_graph": {
  "lineno": 706,
  "symbols_in_volume": [
   "torch._C._log_api_usage_once"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.writer.SummaryWriter.add_pr_curve": {
  "lineno": 834,
  "symbols_in_volume": [
   "torch._C._log_api_usage_once"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.writer.SummaryWriter.add_pr_curve_raw": {
  "lineno": 872,
  "symbols_in_volume": [
   "torch._C._log_api_usage_once"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.writer.SummaryWriter.add_scalar": {
  "lineno": 316,
  "symbols_in_volume": [
   "caffe2.python.workspace.FetchBlob",
   "torch._C._log_api_usage_once"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.writer.SummaryWriter.add_scalars": {
  "lineno": 348,
  "symbols_in_volume": [
   "caffe2.python.workspace.FetchBlob",
   "time.time",
   "torch._C._log_api_usage_once"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.writer.SummaryWriter.add_text": {
  "lineno": 688,
  "symbols_in_volume": [
   "torch._C._log_api_usage_once"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.writer.SummaryWriter.add_video": {
  "lineno": 649,
  "symbols_in_volume": [
   "torch._C._log_api_usage_once"
  ],
  "type": "function"
 },
 "torch.utils.tensorboard.writer.SummaryWriter.close": {
  "lineno": 1029,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.tensorboard.writer.SummaryWriter.flush": {
  "lineno": 1019,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.tensorboard.writer.SummaryWriter.get_logdir": {
  "lineno": 263,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.throughput_benchmark": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "torch.utils.throughput_benchmark.ExecutionStats": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.utils.throughput_benchmark.ExecutionStats.__init__": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.throughput_benchmark.ExecutionStats.__str__": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.throughput_benchmark.ExecutionStats.iters_per_second": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.throughput_benchmark.ExecutionStats.latency_avg_ms": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.throughput_benchmark.ExecutionStats.num_iters": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.throughput_benchmark.ExecutionStats.total_time_seconds": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.throughput_benchmark.ThroughputBenchmark": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "class"
 },
 "torch.utils.throughput_benchmark.ThroughputBenchmark.__init__": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.throughput_benchmark.ThroughputBenchmark.add_input": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.throughput_benchmark.ThroughputBenchmark.benchmark": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.throughput_benchmark.ThroughputBenchmark.run_once": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.utils.throughput_benchmark.format_time": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "function"
 },
 "torch.version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 }
}