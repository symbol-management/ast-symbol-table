{
 "gpflow": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow._settings": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow._settings._MutableNamedTuple": {
  "lineno": 105,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "class"
 },
 "gpflow._settings._MutableNamedTuple.__getattr__": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow._settings._MutableNamedTuple.__init__": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow._settings._MutableNamedTuple.__setattr__": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow._settings._SettingsContextManager": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow._settings._SettingsContextManager.__enter__": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow._settings._SettingsContextManager.__exit__": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow._settings._SettingsContextManager.__init__": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow._settings._SettingsManager": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow._settings._SettingsManager.__getattr__": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow._settings._SettingsManager.__init__": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow._settings._SettingsManager.float_type": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow._settings._SettingsManager.get_settings": {
  "lineno": 51,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "gpflow._settings._SettingsManager.int_type": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow._settings._SettingsManager.jitter": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow._settings._SettingsManager.logger": {
  "lineno": 94,
  "symbols_in_volume": [
   "inspect.currentframe",
   "inspect.getmodule",
   "logging.basicConfig",
   "logging.getLevelName",
   "logging.getLogger"
  ],
  "type": "function"
 },
 "gpflow._settings._SettingsManager.logging_level": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow._settings._SettingsManager.np_float": {
  "lineno": 70,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "gpflow._settings._SettingsManager.np_int": {
  "lineno": 76,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "gpflow._settings._SettingsManager.pop": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow._settings._SettingsManager.push": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow._settings._SettingsManager.temp_settings": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow._settings._SettingsManager.tf_float": {
  "lineno": 58,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "gpflow._settings._SettingsManager.tf_int": {
  "lineno": 64,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "gpflow._settings._namedtuplify": {
  "lineno": 154,
  "symbols_in_volume": [
   "collections.Mapping"
  ],
  "type": "function"
 },
 "gpflow._settings._parse": {
  "lineno": 129,
  "symbols_in_volume": [
   "numpy"
  ],
  "type": "function"
 },
 "gpflow._settings._read_config_file": {
  "lineno": 172,
  "symbols_in_volume": [
   "configparser.ConfigParser",
   "os.curdir",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.expanduser",
   "os.path.join",
   "os.path.realpath"
  ],
  "type": "function"
 },
 "gpflow._version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.actions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.actions.Action": {
  "lineno": 103,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "gpflow.actions.Action.__call__": {
  "lineno": 131,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "gpflow.actions.Action.run": {
  "lineno": 111,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "gpflow.actions.Action.watcher": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.actions.ActionContext": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.actions.ActionContext.__init__": {
  "lineno": 75,
  "symbols_in_volume": [
   "tensorflow.Session",
   "tensorflow.get_default_session",
   "typing.Optional"
  ],
  "type": "function"
 },
 "gpflow.actions.ActionContext.iteration": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.actions.ActionContext.time_spent": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.actions.Condition": {
  "lineno": 267,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.actions.Condition.__init__": {
  "lineno": 279,
  "symbols_in_volume": [
   "typing.Callable",
   "typing.Optional"
  ],
  "type": "function"
 },
 "gpflow.actions.Condition.run": {
  "lineno": 287,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.actions.Group": {
  "lineno": 248,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.actions.Group.__init__": {
  "lineno": 256,
  "symbols_in_volume": [
   "typing.Sequence"
  ],
  "type": "function"
 },
 "gpflow.actions.Group.run": {
  "lineno": 259,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.actions.Loop": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.actions.Loop.Break": {
  "lineno": 172,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.actions.Loop.Continue": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.actions.Loop.__init__": {
  "lineno": 176,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "gpflow.actions.Loop.iteration": {
  "lineno": 186,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.actions.Loop.run": {
  "lineno": 229,
  "symbols_in_volume": [
   "itertools.count"
  ],
  "type": "function"
 },
 "gpflow.actions.Loop.with_action": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.actions.Loop.with_iteration": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.actions.Loop.with_settings": {
  "lineno": 211,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "gpflow.actions.Optimization": {
  "lineno": 296,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.actions.Optimization.model": {
  "lineno": 347,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.actions.Optimization.optimizer_tensor": {
  "lineno": 352,
  "symbols_in_volume": [
   "tensorflow.Operation",
   "tensorflow.Tensor",
   "typing.Union"
  ],
  "type": "function"
 },
 "gpflow.actions.Optimization.run": {
  "lineno": 365,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.actions.Optimization.run_kwargs": {
  "lineno": 360,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.actions.Optimization.with_model": {
  "lineno": 315,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.actions.Optimization.with_optimizer": {
  "lineno": 304,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.actions.Optimization.with_optimizer_tensor": {
  "lineno": 325,
  "symbols_in_volume": [
   "tensorflow.Operation",
   "tensorflow.Tensor",
   "typing.Union"
  ],
  "type": "function"
 },
 "gpflow.actions.Optimization.with_run_kwargs": {
  "lineno": 335,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "gpflow.actions.Watcher": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.actions.Watcher.__init__": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.actions.Watcher.elapsed": {
  "lineno": 55,
  "symbols_in_volume": [
   "timeit.default_timer"
  ],
  "type": "function"
 },
 "gpflow.actions.Watcher.start": {
  "lineno": 43,
  "symbols_in_volume": [
   "timeit.default_timer"
  ],
  "type": "function"
 },
 "gpflow.actions.Watcher.stop": {
  "lineno": 49,
  "symbols_in_volume": [
   "timeit.default_timer"
  ],
  "type": "function"
 },
 "gpflow.actions._get_attr": {
  "lineno": 369,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.actions._is_action": {
  "lineno": 374,
  "symbols_in_volume": [
   "inspect.signature"
  ],
  "type": "function"
 },
 "gpflow.actions._try_convert_action": {
  "lineno": 378,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.conditionals": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.conditionals._conditional": {
  "lineno": 77,
  "symbols_in_volume": [
   "tensorflow.eye",
   "tensorflow.shape"
  ],
  "type": "function"
 },
 "gpflow.conditionals._expand_independent_outputs": {
  "lineno": 405,
  "symbols_in_volume": [
   "tensorflow.matrix_diag",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "gpflow.conditionals._sample_conditional": {
  "lineno": 167,
  "symbols_in_volume": [
   "tensorflow.matrix_transpose"
  ],
  "type": "function"
 },
 "gpflow.conditionals._sample_mvn": {
  "lineno": 366,
  "symbols_in_volume": [
   "tensorflow.Assert",
   "tensorflow.assert_equal",
   "tensorflow.cholesky",
   "tensorflow.control_dependencies",
   "tensorflow.equal",
   "tensorflow.eye",
   "tensorflow.matmul",
   "tensorflow.random_normal",
   "tensorflow.rank",
   "tensorflow.reduce_all",
   "tensorflow.shape",
   "tensorflow.sqrt",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "gpflow.conditionals.base_conditional": {
  "lineno": 192,
  "symbols_in_volume": [
   "tensorflow.cholesky",
   "tensorflow.expand_dims",
   "tensorflow.matmul",
   "tensorflow.matrix_triangular_solve",
   "tensorflow.reduce_sum",
   "tensorflow.shape",
   "tensorflow.square",
   "tensorflow.stack",
   "tensorflow.tile",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "gpflow.conditionals.uncertain_conditional": {
  "lineno": 260,
  "symbols_in_volume": [
   "tensorflow.cholesky",
   "tensorflow.einsum",
   "tensorflow.matmul",
   "tensorflow.matrix_band_part",
   "tensorflow.matrix_diag",
   "tensorflow.matrix_diag_part",
   "tensorflow.matrix_transpose",
   "tensorflow.matrix_triangular_solve",
   "tensorflow.reshape",
   "tensorflow.shape",
   "tensorflow.tile",
   "tensorflow.trace",
   "tensorflow.transpose",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "gpflow.core": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.core.autoflow": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.core.autoflow.AutoFlow": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.core.autoflow.AutoFlow.clear_autoflow": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.core.autoflow.AutoFlow.get_autoflow": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.core.base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.core.base.IPrior": {
  "lineno": 18,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "gpflow.core.base.IPrior.__str__": {
  "lineno": 37,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "gpflow.core.base.IPrior.logp": {
  "lineno": 20,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "gpflow.core.base.IPrior.sample": {
  "lineno": 30,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "gpflow.core.base.ITransform": {
  "lineno": 45,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "gpflow.core.base.ITransform.__str__": {
  "lineno": 95,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "gpflow.core.base.ITransform.backward": {
  "lineno": 61,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "gpflow.core.base.ITransform.backward_tensor": {
  "lineno": 76,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "gpflow.core.base.ITransform.forward": {
  "lineno": 54,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "gpflow.core.base.ITransform.forward_tensor": {
  "lineno": 69,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "gpflow.core.base.ITransform.log_jacobian_tensor": {
  "lineno": 83,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "gpflow.core.compilable": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.core.compilable.AutoBuild": {
  "lineno": 38,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "gpflow.core.compilable.AutoBuild.__new__": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.core.compilable.AutoBuild.__new__.__init__": {
  "lineno": 72,
  "symbols_in_volume": [
   "inspect.currentframe"
  ],
  "type": "function"
 },
 "gpflow.core.compilable.AutoBuildStatus": {
  "lineno": 26,
  "symbols_in_volume": [
   "enum.Enum"
  ],
  "type": "class"
 },
 "gpflow.core.compilable.Build": {
  "lineno": 97,
  "symbols_in_volume": [
   "enum.Enum"
  ],
  "type": "class"
 },
 "gpflow.core.compilable.ICompilable": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.core.compilable.ICompilable.build": {
  "lineno": 161,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "gpflow.core.compilable.ICompilable.clear": {
  "lineno": 190,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "gpflow.core.compilable.ICompilable.compile": {
  "lineno": 169,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "gpflow.core.compilable.ICompilable.feeds": {
  "lineno": 121,
  "symbols_in_volume": [
   "abc.abstractproperty"
  ],
  "type": "function"
 },
 "gpflow.core.compilable.ICompilable.graph": {
  "lineno": 112,
  "symbols_in_volume": [
   "abc.abstractproperty"
  ],
  "type": "function"
 },
 "gpflow.core.compilable.ICompilable.initializable_feeds": {
  "lineno": 142,
  "symbols_in_volume": [
   "abc.abstractproperty"
  ],
  "type": "function"
 },
 "gpflow.core.compilable.ICompilable.initializables": {
  "lineno": 130,
  "symbols_in_volume": [
   "abc.abstractproperty"
  ],
  "type": "function"
 },
 "gpflow.core.compilable.ICompilable.initialize": {
  "lineno": 153,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "gpflow.core.compilable.ICompilable.is_built": {
  "lineno": 179,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "gpflow.core.errors": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.core.errors.GPflowError": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.core.node": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.core.node.Node": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.core.node.Node.__init__": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.core.node.Node._build": {
  "lineno": 197,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "gpflow.core.node.Node._clear": {
  "lineno": 189,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "gpflow.core.node.Node.anchor": {
  "lineno": 35,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "gpflow.core.node.Node.build": {
  "lineno": 145,
  "symbols_in_volume": [
   "tensorflow.name_scope"
  ],
  "type": "function"
 },
 "gpflow.core.node.Node.clear": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.core.node.Node.compile": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.core.node.Node.enquire_graph": {
  "lineno": 97,
  "symbols_in_volume": [
   "tensorflow.get_default_graph"
  ],
  "type": "function"
 },
 "gpflow.core.node.Node.enquire_session": {
  "lineno": 112,
  "symbols_in_volume": [
   "tensorflow.get_default_session"
  ],
  "type": "function"
 },
 "gpflow.core.node.Node.initialize": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.core.node.Node.is_built_coherence": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.core.node.Node.tf_name_scope": {
  "lineno": 158,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.core.node.Node.tf_pathname": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.core.parentable": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.core.parentable.Parentable": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.core.parentable.Parentable.__init__": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.core.parentable.Parentable._define_name": {
  "lineno": 207,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.core.parentable.Parentable._gen_index": {
  "lineno": 213,
  "symbols_in_volume": [
   "uuid.uuid4"
  ],
  "type": "function"
 },
 "gpflow.core.parentable.Parentable._read_index": {
  "lineno": 219,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.core.parentable.Parentable.childname": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.core.parentable.Parentable.children": {
  "lineno": 107,
  "symbols_in_volume": [
   "abc.abstractproperty"
  ],
  "type": "function"
 },
 "gpflow.core.parentable.Parentable.contains": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.core.parentable.Parentable.descendants": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.core.parentable.Parentable.full_name": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.core.parentable.Parentable.index": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.core.parentable.Parentable.name": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.core.parentable.Parentable.parent": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.core.parentable.Parentable.pathname": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.core.parentable.Parentable.remove_child": {
  "lineno": 125,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "gpflow.core.parentable.Parentable.reset_name": {
  "lineno": 203,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.core.parentable.Parentable.root": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.core.parentable.Parentable.set_child": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.core.parentable.Parentable.set_parent": {
  "lineno": 188,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.core.parentable.Parentable.store_child": {
  "lineno": 116,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "gpflow.core.parentable.Parentable.unset_child": {
  "lineno": 174,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.core.tensor_converter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.core.tensor_converter.TensorConverter": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.core.tensor_converter.TensorConverter.tensor_mode": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.decors": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.decors._build_method": {
  "lineno": 207,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.decors._name_scope_name": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.decors._params_as_tensors_enter": {
  "lineno": 171,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.decors._params_as_tensors_exit": {
  "lineno": 178,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.decors._session_run": {
  "lineno": 194,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.decors._setup_storage": {
  "lineno": 186,
  "symbols_in_volume": [
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "gpflow.decors.autoflow": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.decors.autoflow.autoflow_wrapper_decorator": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.decors.autoflow.autoflow_wrapper_decorator.autoflow_wrapper": {
  "lineno": 149,
  "symbols_in_volume": [
   "functools.wraps",
   "tensorflow.name_scope"
  ],
  "type": "function"
 },
 "gpflow.decors.defer_build": {
  "lineno": 74,
  "symbols_in_volume": [
   "contextlib.ContextDecorator"
  ],
  "type": "class"
 },
 "gpflow.decors.defer_build.__enter__": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.decors.defer_build.__exit__": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.decors.defer_build.__init__": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.decors.name_scope": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.decors.name_scope.name_scope_wrapper_decorator": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.decors.name_scope.name_scope_wrapper_decorator.name_scope_wrapper": {
  "lineno": 45,
  "symbols_in_volume": [
   "functools.wraps",
   "tensorflow.name_scope"
  ],
  "type": "function"
 },
 "gpflow.decors.params_as_tensors": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.decors.params_as_tensors.tensor_mode_wrapper": {
  "lineno": 60,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "gpflow.decors.params_as_tensors_for": {
  "lineno": 117,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "gpflow.dispatch": {
  "lineno": null,
  "symbols_in_volume": [
   "functools.partial",
   "multipledispatch.Dispatcher",
   "multipledispatch.dispatch"
  ],
  "type": "module"
 },
 "gpflow.expectations": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.expectations._expectation": {
  "lineno": 1044,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.expectations._expectation.get_cholesky_solve_terms": {
  "lineno": 406,
  "symbols_in_volume": [
   "tensorflow.expand_dims",
   "tensorflow.matrix_triangular_solve",
   "tensorflow.reduce_sum",
   "tensorflow.square",
   "tensorflow.tile",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "gpflow.expectations._expectation.get_squared_length_scales": {
  "lineno": 387,
  "symbols_in_volume": [
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "gpflow.expectations._quadrature_expectation": {
  "lineno": 138,
  "symbols_in_volume": [
   "numpy.s_",
   "tensorflow.concat",
   "tensorflow.matrix_transpose",
   "tensorflow.split"
  ],
  "type": "function"
 },
 "gpflow.expectations.expectation": {
  "lineno": 171,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.expectations.get_eval_func": {
  "lineno": 84,
  "symbols_in_volume": [
   "numpy.s_",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "gpflow.expectations.quadrature_expectation": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.features": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.features.InducingFeature": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.features.InducingFeature.Kuf": {
  "lineno": 54,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "gpflow.features.InducingFeature.Kuu": {
  "lineno": 43,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "gpflow.features.InducingFeature.__len__": {
  "lineno": 35,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "gpflow.features.InducingPoints": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.features.InducingPointsBase": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.features.InducingPointsBase.__init__": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.features.InducingPointsBase.__len__": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.features.Kuf": {
  "lineno": 133,
  "symbols_in_volume": [
   "tensorflow.exp",
   "tensorflow.reduce_prod",
   "tensorflow.reshape",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "gpflow.features.Kuu": {
  "lineno": 145,
  "symbols_in_volume": [
   "tensorflow.exp",
   "tensorflow.expand_dims",
   "tensorflow.eye",
   "tensorflow.reduce_prod",
   "tensorflow.sqrt",
   "tensorflow.square"
  ],
  "type": "function"
 },
 "gpflow.features.Multiscale": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.features.Multiscale.__init__": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.features.Multiscale._cust_square_dist": {
  "lineno": 124,
  "symbols_in_volume": [
   "tensorflow.expand_dims",
   "tensorflow.reduce_sum",
   "tensorflow.square"
  ],
  "type": "function"
 },
 "gpflow.features.inducingpoint_wrapper": {
  "lineno": 159,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "gpflow.kernels": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.kernels.ArcCosine": {
  "lineno": 495,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.kernels.ArcCosine.K": {
  "lineno": 565,
  "symbols_in_volume": [
   "numpy.pi",
   "tensorflow.acos",
   "tensorflow.expand_dims",
   "tensorflow.matrix_transpose",
   "tensorflow.sqrt"
  ],
  "type": "function"
 },
 "gpflow.kernels.ArcCosine.Kdiag": {
  "lineno": 588,
  "symbols_in_volume": [
   "numpy.pi",
   "tensorflow.constant"
  ],
  "type": "function"
 },
 "gpflow.kernels.ArcCosine._J": {
  "lineno": 552,
  "symbols_in_volume": [
   "numpy.pi",
   "tensorflow.cos",
   "tensorflow.sin"
  ],
  "type": "function"
 },
 "gpflow.kernels.ArcCosine.__init__": {
  "lineno": 514,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.kernels.ArcCosine._weighted_product": {
  "lineno": 546,
  "symbols_in_volume": [
   "tensorflow.matmul",
   "tensorflow.reduce_sum",
   "tensorflow.square"
  ],
  "type": "function"
 },
 "gpflow.kernels.Bias": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.kernels.Combination": {
  "lineno": 705,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.kernels.Combination.__init__": {
  "lineno": 714,
  "symbols_in_volume": [
   "numpy.max"
  ],
  "type": "function"
 },
 "gpflow.kernels.Combination.on_separate_dimensions": {
  "lineno": 733,
  "symbols_in_volume": [
   "numpy.any"
  ],
  "type": "function"
 },
 "gpflow.kernels.Constant": {
  "lineno": 202,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.kernels.Constant.K": {
  "lineno": 207,
  "symbols_in_volume": [
   "tensorflow.concat",
   "tensorflow.fill",
   "tensorflow.reshape",
   "tensorflow.shape",
   "tensorflow.squeeze"
  ],
  "type": "function"
 },
 "gpflow.kernels.Coregion": {
  "lineno": 653,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.kernels.Coregion.K": {
  "lineno": 686,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.gather",
   "tensorflow.int32",
   "tensorflow.matmul",
   "tensorflow.matrix_diag",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "gpflow.kernels.Coregion.Kdiag": {
  "lineno": 697,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.gather",
   "tensorflow.int32",
   "tensorflow.reduce_sum",
   "tensorflow.square"
  ],
  "type": "function"
 },
 "gpflow.kernels.Coregion.__init__": {
  "lineno": 654,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "gpflow.kernels.Cosine": {
  "lineno": 485,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.kernels.Cosine.K_r": {
  "lineno": 490,
  "symbols_in_volume": [
   "tensorflow.cos"
  ],
  "type": "function"
 },
 "gpflow.kernels.Exponential": {
  "lineno": 443,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.kernels.Exponential.K_r": {
  "lineno": 448,
  "symbols_in_volume": [
   "tensorflow.exp"
  ],
  "type": "function"
 },
 "gpflow.kernels.Kernel": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.kernels.Kernel.__add__": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.kernels.Kernel.__init__": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int32"
  ],
  "type": "function"
 },
 "gpflow.kernels.Kernel.__mul__": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.kernels.Kernel._slice": {
  "lineno": 116,
  "symbols_in_volume": [
   "tensorflow.assert_equal",
   "tensorflow.control_dependencies",
   "tensorflow.convert_to_tensor",
   "tensorflow.gather",
   "tensorflow.identity",
   "tensorflow.shape"
  ],
  "type": "function"
 },
 "gpflow.kernels.Kernel._slice_cov": {
  "lineno": 140,
  "symbols_in_volume": [
   "tensorflow.concat",
   "tensorflow.cond",
   "tensorflow.equal",
   "tensorflow.gather",
   "tensorflow.matrix_diag",
   "tensorflow.rank",
   "tensorflow.reshape",
   "tensorflow.shape",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "gpflow.kernels.Kernel._validate_ard_shape": {
  "lineno": 62,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.ones"
  ],
  "type": "function"
 },
 "gpflow.kernels.Kernel.compute_K": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.kernels.Kernel.compute_K_symm": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.kernels.Kernel.compute_Kdiag": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.kernels.Kernel.on_separate_dims": {
  "lineno": 102,
  "symbols_in_volume": [
   "numpy.any"
  ],
  "type": "function"
 },
 "gpflow.kernels.Linear": {
  "lineno": 373,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.kernels.Linear.K": {
  "lineno": 392,
  "symbols_in_volume": [
   "tensorflow.matmul"
  ],
  "type": "function"
 },
 "gpflow.kernels.Linear.Kdiag": {
  "lineno": 401,
  "symbols_in_volume": [
   "tensorflow.reduce_sum",
   "tensorflow.square"
  ],
  "type": "function"
 },
 "gpflow.kernels.Linear.__init__": {
  "lineno": 378,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.kernels.Matern12": {
  "lineno": 453,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.kernels.Matern12.K_r": {
  "lineno": 458,
  "symbols_in_volume": [
   "tensorflow.exp"
  ],
  "type": "function"
 },
 "gpflow.kernels.Matern32": {
  "lineno": 463,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.kernels.Matern32.K_r": {
  "lineno": 468,
  "symbols_in_volume": [
   "numpy.sqrt",
   "tensorflow.exp"
  ],
  "type": "function"
 },
 "gpflow.kernels.Matern52": {
  "lineno": 474,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.kernels.Matern52.K_r": {
  "lineno": 479,
  "symbols_in_volume": [
   "numpy.sqrt",
   "tensorflow.exp",
   "tensorflow.square"
  ],
  "type": "function"
 },
 "gpflow.kernels.Periodic": {
  "lineno": 598,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.kernels.Periodic.K": {
  "lineno": 630,
  "symbols_in_volume": [
   "numpy.pi",
   "tensorflow.concat",
   "tensorflow.exp",
   "tensorflow.expand_dims",
   "tensorflow.range",
   "tensorflow.rank",
   "tensorflow.reduce_sum",
   "tensorflow.reshape",
   "tensorflow.sin",
   "tensorflow.square",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "gpflow.kernels.Periodic.Kdiag": {
  "lineno": 626,
  "symbols_in_volume": [
   "tensorflow.fill",
   "tensorflow.shape",
   "tensorflow.squeeze"
  ],
  "type": "function"
 },
 "gpflow.kernels.Periodic.__init__": {
  "lineno": 614,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.kernels.Polynomial": {
  "lineno": 408,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.kernels.Polynomial.K": {
  "lineno": 434,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.kernels.Polynomial.Kdiag": {
  "lineno": 438,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.kernels.Polynomial.__init__": {
  "lineno": 413,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.kernels.Product": {
  "lineno": 762,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.kernels.Product.K": {
  "lineno": 763,
  "symbols_in_volume": [
   "functools.reduce",
   "tensorflow.multiply"
  ],
  "type": "function"
 },
 "gpflow.kernels.Product.Kdiag": {
  "lineno": 766,
  "symbols_in_volume": [
   "functools.reduce",
   "tensorflow.multiply"
  ],
  "type": "function"
 },
 "gpflow.kernels.RationalQuadratic": {
  "lineno": 349,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.kernels.RationalQuadratic.K_r2": {
  "lineno": 368,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.kernels.RationalQuadratic.__init__": {
  "lineno": 362,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.kernels.SquaredExponential": {
  "lineno": 337,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.kernels.SquaredExponential.K_r2": {
  "lineno": 342,
  "symbols_in_volume": [
   "tensorflow.exp"
  ],
  "type": "function"
 },
 "gpflow.kernels.Static": {
  "lineno": 169,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.kernels.Static.Kdiag": {
  "lineno": 180,
  "symbols_in_volume": [
   "tensorflow.fill",
   "tensorflow.shape",
   "tensorflow.squeeze"
  ],
  "type": "function"
 },
 "gpflow.kernels.Static.__init__": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.kernels.Stationary": {
  "lineno": 224,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.kernels.Stationary.K": {
  "lineno": 304,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.kernels.Stationary.K_r": {
  "lineno": 320,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.kernels.Stationary.K_r2": {
  "lineno": 328,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.kernels.Stationary.Kdiag": {
  "lineno": 300,
  "symbols_in_volume": [
   "tensorflow.fill",
   "tensorflow.shape",
   "tensorflow.squeeze"
  ],
  "type": "function"
 },
 "gpflow.kernels.Stationary.__init__": {
  "lineno": 235,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.kernels.Stationary._clipped_sqrt": {
  "lineno": 280,
  "symbols_in_volume": [
   "tensorflow.maximum",
   "tensorflow.sqrt"
  ],
  "type": "function"
 },
 "gpflow.kernels.Stationary._scaled_square_dist": {
  "lineno": 257,
  "symbols_in_volume": [
   "tensorflow.matmul",
   "tensorflow.matrix_transpose",
   "tensorflow.reduce_sum",
   "tensorflow.square"
  ],
  "type": "function"
 },
 "gpflow.kernels.Stationary.scaled_euclid_dist": {
  "lineno": 288,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "gpflow.kernels.Stationary.scaled_square_dist": {
  "lineno": 285,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.kernels.Sum": {
  "lineno": 754,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.kernels.Sum.K": {
  "lineno": 755,
  "symbols_in_volume": [
   "functools.reduce",
   "tensorflow.add"
  ],
  "type": "function"
 },
 "gpflow.kernels.Sum.Kdiag": {
  "lineno": 758,
  "symbols_in_volume": [
   "functools.reduce",
   "tensorflow.add"
  ],
  "type": "function"
 },
 "gpflow.kernels.White": {
  "lineno": 185,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.kernels.White.K": {
  "lineno": 190,
  "symbols_in_volume": [
   "tensorflow.concat",
   "tensorflow.fill",
   "tensorflow.matrix_diag",
   "tensorflow.reshape",
   "tensorflow.shape",
   "tensorflow.squeeze",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "gpflow.kernels.make_deprecated_class": {
  "lineno": 770,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.kernels.make_deprecated_class.OldClass": {
  "lineno": 779,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.kernels.make_deprecated_class.OldClass.__new__": {
  "lineno": 780,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.kullback_leiblers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.kullback_leiblers.gauss_kl": {
  "lineno": 24,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.cholesky",
   "tensorflow.expand_dims",
   "tensorflow.eye",
   "tensorflow.int64",
   "tensorflow.log",
   "tensorflow.matrix_band_part",
   "tensorflow.matrix_diag",
   "tensorflow.matrix_diag_part",
   "tensorflow.matrix_triangular_solve",
   "tensorflow.reduce_sum",
   "tensorflow.shape",
   "tensorflow.size",
   "tensorflow.square",
   "tensorflow.tile",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "gpflow.likelihoods": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.likelihoods.Bernoulli": {
  "lineno": 234,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.likelihoods.Bernoulli.__init__": {
  "lineno": 235,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.likelihoods.Bernoulli.conditional_mean": {
  "lineno": 254,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.likelihoods.Bernoulli.conditional_variance": {
  "lineno": 257,
  "symbols_in_volume": [
   "tensorflow.square"
  ],
  "type": "function"
 },
 "gpflow.likelihoods.Bernoulli.logp": {
  "lineno": 239,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.likelihoods.Bernoulli.predict_density": {
  "lineno": 250,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.likelihoods.Bernoulli.predict_mean_and_var": {
  "lineno": 242,
  "symbols_in_volume": [
   "tensorflow.sqrt",
   "tensorflow.square"
  ],
  "type": "function"
 },
 "gpflow.likelihoods.Beta": {
  "lineno": 294,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.likelihoods.Beta.__init__": {
  "lineno": 311,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.likelihoods.Beta.conditional_mean": {
  "lineno": 323,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.likelihoods.Beta.conditional_variance": {
  "lineno": 327,
  "symbols_in_volume": [
   "tensorflow.square"
  ],
  "type": "function"
 },
 "gpflow.likelihoods.Beta.logp": {
  "lineno": 316,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.likelihoods.Exponential": {
  "lineno": 184,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.likelihoods.Exponential.__init__": {
  "lineno": 185,
  "symbols_in_volume": [
   "tensorflow.exp"
  ],
  "type": "function"
 },
 "gpflow.likelihoods.Exponential.conditional_mean": {
  "lineno": 192,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.likelihoods.Exponential.conditional_variance": {
  "lineno": 195,
  "symbols_in_volume": [
   "tensorflow.square"
  ],
  "type": "function"
 },
 "gpflow.likelihoods.Exponential.logp": {
  "lineno": 189,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.likelihoods.Exponential.variational_expectations": {
  "lineno": 198,
  "symbols_in_volume": [
   "tensorflow.exp"
  ],
  "type": "function"
 },
 "gpflow.likelihoods.Gamma": {
  "lineno": 262,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.likelihoods.Gamma.__init__": {
  "lineno": 267,
  "symbols_in_volume": [
   "tensorflow.exp"
  ],
  "type": "function"
 },
 "gpflow.likelihoods.Gamma.conditional_mean": {
  "lineno": 276,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.likelihoods.Gamma.conditional_variance": {
  "lineno": 280,
  "symbols_in_volume": [
   "tensorflow.square"
  ],
  "type": "function"
 },
 "gpflow.likelihoods.Gamma.logp": {
  "lineno": 272,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.likelihoods.Gamma.variational_expectations": {
  "lineno": 285,
  "symbols_in_volume": [
   "tensorflow.exp",
   "tensorflow.lgamma",
   "tensorflow.log"
  ],
  "type": "function"
 },
 "gpflow.likelihoods.Gaussian": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.likelihoods.Gaussian.__init__": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.likelihoods.Gaussian.conditional_mean": {
  "lineno": 126,
  "symbols_in_volume": [
   "tensorflow.identity"
  ],
  "type": "function"
 },
 "gpflow.likelihoods.Gaussian.conditional_variance": {
  "lineno": 130,
  "symbols_in_volume": [
   "tensorflow.fill",
   "tensorflow.shape",
   "tensorflow.squeeze"
  ],
  "type": "function"
 },
 "gpflow.likelihoods.Gaussian.logp": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.likelihoods.Gaussian.predict_density": {
  "lineno": 138,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.likelihoods.Gaussian.predict_mean_and_var": {
  "lineno": 134,
  "symbols_in_volume": [
   "tensorflow.identity"
  ],
  "type": "function"
 },
 "gpflow.likelihoods.Gaussian.variational_expectations": {
  "lineno": 142,
  "symbols_in_volume": [
   "numpy.log",
   "numpy.pi",
   "tensorflow.log",
   "tensorflow.square"
  ],
  "type": "function"
 },
 "gpflow.likelihoods.GaussianMC": {
  "lineno": 671,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.likelihoods.Likelihood": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.likelihoods.Likelihood.__init__": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.likelihoods.Likelihood.predict_density": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.likelihoods.Likelihood.predict_mean_and_var": {
  "lineno": 38,
  "symbols_in_volume": [
   "tensorflow.square"
  ],
  "type": "function"
 },
 "gpflow.likelihoods.Likelihood.variational_expectations": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.likelihoods.MonteCarloLikelihood": {
  "lineno": 592,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.likelihoods.MonteCarloLikelihood.__init__": {
  "lineno": 593,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.likelihoods.MonteCarloLikelihood._mc_quadrature": {
  "lineno": 598,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.likelihoods.MonteCarloLikelihood.predict_density": {
  "lineno": 629,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.likelihoods.MonteCarloLikelihood.predict_mean_and_var": {
  "lineno": 601,
  "symbols_in_volume": [
   "tensorflow.square"
  ],
  "type": "function"
 },
 "gpflow.likelihoods.MonteCarloLikelihood.variational_expectations": {
  "lineno": 649,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.likelihoods.MultiClass": {
  "lineno": 388,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.likelihoods.MultiClass.__init__": {
  "lineno": 389,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.likelihoods.MultiClass._predict_non_logged_density": {
  "lineno": 438,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.likelihoods.MultiClass.conditional_mean": {
  "lineno": 448,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.likelihoods.MultiClass.conditional_variance": {
  "lineno": 451,
  "symbols_in_volume": [
   "tensorflow.square"
  ],
  "type": "function"
 },
 "gpflow.likelihoods.MultiClass.logp": {
  "lineno": 403,
  "symbols_in_volume": [
   "tensorflow.argmax",
   "tensorflow.cast",
   "tensorflow.equal",
   "tensorflow.expand_dims",
   "tensorflow.int64",
   "tensorflow.log",
   "tensorflow.ones",
   "tensorflow.shape",
   "tensorflow.where",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "gpflow.likelihoods.MultiClass.predict_density": {
  "lineno": 435,
  "symbols_in_volume": [
   "tensorflow.log"
  ],
  "type": "function"
 },
 "gpflow.likelihoods.MultiClass.predict_mean_and_var": {
  "lineno": 424,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "tensorflow.fill",
   "tensorflow.reshape",
   "tensorflow.shape",
   "tensorflow.square",
   "tensorflow.stack",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "gpflow.likelihoods.MultiClass.variational_expectations": {
  "lineno": 414,
  "symbols_in_volume": [
   "tensorflow.log"
  ],
  "type": "function"
 },
 "gpflow.likelihoods.Ordinal": {
  "lineno": 515,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.likelihoods.Ordinal.__init__": {
  "lineno": 543,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.likelihoods.Ordinal._make_phi": {
  "lineno": 565,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.inf",
   "tensorflow.concat",
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "gpflow.likelihoods.Ordinal.conditional_mean": {
  "lineno": 579,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float64",
   "tensorflow.matmul",
   "tensorflow.reshape",
   "tensorflow.shape"
  ],
  "type": "function"
 },
 "gpflow.likelihoods.Ordinal.conditional_variance": {
  "lineno": 584,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float64",
   "tensorflow.matmul",
   "tensorflow.reshape",
   "tensorflow.shape",
   "tensorflow.square"
  ],
  "type": "function"
 },
 "gpflow.likelihoods.Ordinal.logp": {
  "lineno": 554,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.inf",
   "tensorflow.cast",
   "tensorflow.concat",
   "tensorflow.gather",
   "tensorflow.int64",
   "tensorflow.log"
  ],
  "type": "function"
 },
 "gpflow.likelihoods.Poisson": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.likelihoods.Poisson.__init__": {
  "lineno": 163,
  "symbols_in_volume": [
   "numpy.double",
   "tensorflow.exp"
  ],
  "type": "function"
 },
 "gpflow.likelihoods.Poisson.conditional_mean": {
  "lineno": 174,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.likelihoods.Poisson.conditional_variance": {
  "lineno": 171,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.likelihoods.Poisson.logp": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.likelihoods.Poisson.variational_expectations": {
  "lineno": 177,
  "symbols_in_volume": [
   "tensorflow.exp",
   "tensorflow.lgamma",
   "tensorflow.log"
  ],
  "type": "function"
 },
 "gpflow.likelihoods.RobustMax": {
  "lineno": 333,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.likelihoods.RobustMax.__call__": {
  "lineno": 352,
  "symbols_in_volume": [
   "tensorflow.argmax",
   "tensorflow.one_hot",
   "tensorflow.squeeze"
  ],
  "type": "function"
 },
 "gpflow.likelihoods.RobustMax.__init__": {
  "lineno": 346,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.likelihoods.RobustMax._eps_K1": {
  "lineno": 357,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.likelihoods.RobustMax.prob_is_largest": {
  "lineno": 362,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.pi",
   "numpy.sqrt",
   "tensorflow.cast",
   "tensorflow.clip_by_value",
   "tensorflow.erf",
   "tensorflow.expand_dims",
   "tensorflow.int64",
   "tensorflow.matmul",
   "tensorflow.one_hot",
   "tensorflow.reduce_prod",
   "tensorflow.reduce_sum",
   "tensorflow.reshape",
   "tensorflow.sqrt"
  ],
  "type": "function"
 },
 "gpflow.likelihoods.SoftMax": {
  "lineno": 678,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.likelihoods.SoftMax.__init__": {
  "lineno": 683,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.likelihoods.SoftMax.conditional_mean": {
  "lineno": 696,
  "symbols_in_volume": [
   "tensorflow.nn.softmax"
  ],
  "type": "function"
 },
 "gpflow.likelihoods.SoftMax.conditional_variance": {
  "lineno": 699,
  "symbols_in_volume": [
   "tensorflow.square"
  ],
  "type": "function"
 },
 "gpflow.likelihoods.SoftMax.logp": {
  "lineno": 687,
  "symbols_in_volume": [
   "tensorflow.assert_equal",
   "tensorflow.cast",
   "tensorflow.control_dependencies",
   "tensorflow.nn.sparse_softmax_cross_entropy_with_logits",
   "tensorflow.shape"
  ],
  "type": "function"
 },
 "gpflow.likelihoods.StudentT": {
  "lineno": 204,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.likelihoods.StudentT.__init__": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.likelihoods.StudentT.conditional_mean": {
  "lineno": 219,
  "symbols_in_volume": [
   "tensorflow.identity"
  ],
  "type": "function"
 },
 "gpflow.likelihoods.StudentT.conditional_variance": {
  "lineno": 223,
  "symbols_in_volume": [
   "tensorflow.fill",
   "tensorflow.shape",
   "tensorflow.squeeze"
  ],
  "type": "function"
 },
 "gpflow.likelihoods.StudentT.logp": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.likelihoods.SwitchedLikelihood": {
  "lineno": 456,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.likelihoods.SwitchedLikelihood.__init__": {
  "lineno": 457,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.likelihoods.SwitchedLikelihood._partition_and_stitch": {
  "lineno": 468,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.dynamic_partition",
   "tensorflow.dynamic_stitch",
   "tensorflow.int32",
   "tensorflow.range",
   "tensorflow.size"
  ],
  "type": "function"
 },
 "gpflow.likelihoods.SwitchedLikelihood.logp": {
  "lineno": 498,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.likelihoods.SwitchedLikelihood.predict_density": {
  "lineno": 501,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.likelihoods.SwitchedLikelihood.predict_mean_and_var": {
  "lineno": 507,
  "symbols_in_volume": [
   "tensorflow.concat"
  ],
  "type": "function"
 },
 "gpflow.likelihoods.SwitchedLikelihood.variational_expectations": {
  "lineno": 504,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.likelihoods.inv_probit": {
  "lineno": 229,
  "symbols_in_volume": [
   "numpy.sqrt",
   "tensorflow.erf"
  ],
  "type": "function"
 },
 "gpflow.logdensities": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.logdensities.bernoulli": {
  "lineno": 36,
  "symbols_in_volume": [
   "tensorflow.equal",
   "tensorflow.log",
   "tensorflow.where"
  ],
  "type": "function"
 },
 "gpflow.logdensities.beta": {
  "lineno": 62,
  "symbols_in_volume": [
   "tensorflow.clip_by_value",
   "tensorflow.lgamma",
   "tensorflow.log"
  ],
  "type": "function"
 },
 "gpflow.logdensities.exponential": {
  "lineno": 44,
  "symbols_in_volume": [
   "tensorflow.log"
  ],
  "type": "function"
 },
 "gpflow.logdensities.gamma": {
  "lineno": 48,
  "symbols_in_volume": [
   "tensorflow.lgamma",
   "tensorflow.log"
  ],
  "type": "function"
 },
 "gpflow.logdensities.gaussian": {
  "lineno": 27,
  "symbols_in_volume": [
   "numpy.log",
   "numpy.pi",
   "tensorflow.log",
   "tensorflow.square"
  ],
  "type": "function"
 },
 "gpflow.logdensities.laplace": {
  "lineno": 71,
  "symbols_in_volume": [
   "tensorflow.abs",
   "tensorflow.log"
  ],
  "type": "function"
 },
 "gpflow.logdensities.lognormal": {
  "lineno": 31,
  "symbols_in_volume": [
   "tensorflow.log"
  ],
  "type": "function"
 },
 "gpflow.logdensities.multivariate_normal": {
  "lineno": 75,
  "symbols_in_volume": [
   "numpy.log",
   "numpy.pi",
   "tensorflow.cast",
   "tensorflow.log",
   "tensorflow.matrix_diag_part",
   "tensorflow.matrix_triangular_solve",
   "tensorflow.reduce_sum",
   "tensorflow.shape",
   "tensorflow.square"
  ],
  "type": "function"
 },
 "gpflow.logdensities.poisson": {
  "lineno": 40,
  "symbols_in_volume": [
   "tensorflow.lgamma",
   "tensorflow.log"
  ],
  "type": "function"
 },
 "gpflow.logdensities.student_t": {
  "lineno": 53,
  "symbols_in_volume": [
   "numpy.log",
   "numpy.pi",
   "tensorflow.cast",
   "tensorflow.lgamma",
   "tensorflow.log",
   "tensorflow.square"
  ],
  "type": "function"
 },
 "gpflow.mean_functions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.mean_functions.Additive": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.mean_functions.Additive.__call__": {
  "lineno": 163,
  "symbols_in_volume": [
   "tensorflow.add"
  ],
  "type": "function"
 },
 "gpflow.mean_functions.Additive.__init__": {
  "lineno": 158,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.mean_functions.Constant": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.mean_functions.Constant.__call__": {
  "lineno": 114,
  "symbols_in_volume": [
   "tensorflow.reshape",
   "tensorflow.shape",
   "tensorflow.stack",
   "tensorflow.tile"
  ],
  "type": "function"
 },
 "gpflow.mean_functions.Constant.__init__": {
  "lineno": 109,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "gpflow.mean_functions.Identity": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.mean_functions.Identity.A": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.mean_functions.Identity.__call__": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.mean_functions.Identity.__init__": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.mean_functions.Identity.b": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.mean_functions.Linear": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.mean_functions.Linear.__call__": {
  "lineno": 65,
  "symbols_in_volume": [
   "tensorflow.matmul"
  ],
  "type": "function"
 },
 "gpflow.mean_functions.Linear.__init__": {
  "lineno": 51,
  "symbols_in_volume": [
   "numpy.atleast_2d",
   "numpy.ones",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "gpflow.mean_functions.MeanFunction": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.mean_functions.MeanFunction.__add__": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.mean_functions.MeanFunction.__call__": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.mean_functions.MeanFunction.__mul__": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.mean_functions.Product": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.mean_functions.Product.__call__": {
  "lineno": 174,
  "symbols_in_volume": [
   "tensorflow.multiply"
  ],
  "type": "function"
 },
 "gpflow.mean_functions.Product.__init__": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.mean_functions.SwitchedMeanFunction": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.mean_functions.SwitchedMeanFunction.__call__": {
  "lineno": 142,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.dynamic_partition",
   "tensorflow.dynamic_stitch",
   "tensorflow.gather",
   "tensorflow.int32",
   "tensorflow.range",
   "tensorflow.shape",
   "tensorflow.size",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "gpflow.mean_functions.SwitchedMeanFunction.__init__": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.mean_functions.Zero": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.mean_functions.Zero.__call__": {
  "lineno": 126,
  "symbols_in_volume": [
   "tensorflow.shape",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "gpflow.mean_functions.Zero.__init__": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.misc": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.GraphKeys.GLOBAL_VARIABLES",
   "tensorflow.GraphKeys.TRAINABLE_VARIABLES"
  ],
  "type": "module"
 },
 "gpflow.misc._find_initializable_tensors": {
  "lineno": 188,
  "symbols_in_volume": [
   "tensorflow.data.Iterator",
   "tensorflow.report_uninitialized_variables"
  ],
  "type": "function"
 },
 "gpflow.misc._find_initializable_tensors.uninitialized_names": {
  "lineno": 206,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.misc._get_graph": {
  "lineno": 223,
  "symbols_in_volume": [
   "tensorflow.get_default_graph"
  ],
  "type": "function"
 },
 "gpflow.misc._get_tensor": {
  "lineno": 227,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.misc._get_tensor_safe": {
  "lineno": 248,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.misc._get_variable": {
  "lineno": 240,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.misc._initializable_tensors": {
  "lineno": 180,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.misc.add_to_trainables": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.misc.get_attribute": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.misc.get_tensor_by_name": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.misc.get_variable_by_name": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.misc.initialize_variables": {
  "lineno": 165,
  "symbols_in_volume": [
   "tensorflow.get_default_session",
   "tensorflow.global_variables_initializer",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "gpflow.misc.is_initializable_tensor": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.misc.is_list": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.misc.is_ndarray": {
  "lineno": 49,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "gpflow.misc.is_number": {
  "lineno": 61,
  "symbols_in_volume": [
   "numpy.isscalar"
  ],
  "type": "function"
 },
 "gpflow.misc.is_tensor": {
  "lineno": 57,
  "symbols_in_volume": [
   "tensorflow.Tensor",
   "tensorflow.Variable"
  ],
  "type": "function"
 },
 "gpflow.misc.is_tensor_trainable": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.misc.is_valid_param_value": {
  "lineno": 65,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "gpflow.misc.normalize_num_type": {
  "lineno": 108,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "tensorflow.DType"
  ],
  "type": "function"
 },
 "gpflow.misc.pretty_pandas_table": {
  "lineno": 29,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "gpflow.misc.remove_from_trainables": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.misc.tensor_name": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.misc.vec_to_tri": {
  "lineno": 140,
  "symbols_in_volume": [
   "numpy.tril_indices",
   "tensorflow.constant",
   "tensorflow.int64",
   "tensorflow.map_fn"
  ],
  "type": "function"
 },
 "gpflow.misc.vec_to_tri.vec_to_tri_vector": {
  "lineno": 159,
  "symbols_in_volume": [
   "tensorflow.scatter_nd"
  ],
  "type": "function"
 },
 "gpflow.misc.version": {
  "lineno": 254,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.models": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.models.gplvm": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.models.gplvm.BayesianGPLVM": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.models.gplvm.BayesianGPLVM.__init__": {
  "lineno": 67,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.asarray",
   "numpy.atleast_1d",
   "numpy.ones",
   "numpy.random.permutation",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "gpflow.models.gplvm.BayesianGPLVM._build_likelihood": {
  "lineno": 122,
  "symbols_in_volume": [
   "numpy.pi",
   "tensorflow.cast",
   "tensorflow.cholesky",
   "tensorflow.eye",
   "tensorflow.log",
   "tensorflow.matmul",
   "tensorflow.matrix_diag_part",
   "tensorflow.matrix_triangular_solve",
   "tensorflow.reduce_sum",
   "tensorflow.shape",
   "tensorflow.size",
   "tensorflow.sqrt",
   "tensorflow.square",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "gpflow.models.gplvm.BayesianGPLVM._build_predict": {
  "lineno": 168,
  "symbols_in_volume": [
   "tensorflow.cholesky",
   "tensorflow.expand_dims",
   "tensorflow.eye",
   "tensorflow.matmul",
   "tensorflow.matrix_triangular_solve",
   "tensorflow.reduce_sum",
   "tensorflow.shape",
   "tensorflow.sqrt",
   "tensorflow.square",
   "tensorflow.stack",
   "tensorflow.tile",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "gpflow.models.gplvm.GPLVM": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.models.gplvm.GPLVM.__init__": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.models.gplvm.PCA_reduce": {
  "lineno": 209,
  "symbols_in_volume": [
   "numpy.cov",
   "numpy.linalg.eigh"
  ],
  "type": "function"
 },
 "gpflow.models.gpmc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.models.gpmc.GPMC": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.models.gpmc.GPMC.__init__": {
  "lineno": 29,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "gpflow.models.gpmc.GPMC._build_likelihood": {
  "lineno": 72,
  "symbols_in_volume": [
   "tensorflow.cholesky",
   "tensorflow.eye",
   "tensorflow.matmul",
   "tensorflow.reduce_sum",
   "tensorflow.shape"
  ],
  "type": "function"
 },
 "gpflow.models.gpmc.GPMC._build_predict": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.models.gpmc.GPMC.compile": {
  "lineno": 57,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "gpflow.models.gpr": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.models.gpr.GPR": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.models.gpr.GPR.__init__": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.models.gpr.GPR._build_likelihood": {
  "lineno": 54,
  "symbols_in_volume": [
   "tensorflow.cholesky",
   "tensorflow.eye",
   "tensorflow.reduce_sum",
   "tensorflow.shape"
  ],
  "type": "function"
 },
 "gpflow.models.gpr.GPR._build_predict": {
  "lineno": 70,
  "symbols_in_volume": [
   "tensorflow.eye",
   "tensorflow.shape"
  ],
  "type": "function"
 },
 "gpflow.models.model": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.models.model.GPModel": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.models.model.GPModel.__init__": {
  "lineno": 135,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "gpflow.models.model.GPModel._build_predict": {
  "lineno": 204,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "gpflow.models.model.GPModel.predict_density": {
  "lineno": 192,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.models.model.GPModel.predict_f": {
  "lineno": 152,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.models.model.GPModel.predict_f_full_cov": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.models.model.GPModel.predict_f_samples": {
  "lineno": 168,
  "symbols_in_volume": [
   "tensorflow.cholesky",
   "tensorflow.eye",
   "tensorflow.int32",
   "tensorflow.matmul",
   "tensorflow.random_normal",
   "tensorflow.shape",
   "tensorflow.stack",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "gpflow.models.model.GPModel.predict_y": {
  "lineno": 184,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.models.model.Model": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.models.model.Model.__init__": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.models.model.Model._build": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.models.model.Model._build_likelihood": {
  "lineno": 99,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "gpflow.models.model.Model._build_objective": {
  "lineno": 95,
  "symbols_in_volume": [
   "tensorflow.add",
   "tensorflow.negative"
  ],
  "type": "function"
 },
 "gpflow.models.model.Model._clear": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.models.model.Model.build_objective": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.models.model.Model.compute_log_likelihood": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.models.model.Model.compute_log_prior": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.models.model.Model.is_built": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.models.model.Model.likelihood_tensor": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.models.model.Model.objective": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.models.model.Model.sample_feed_dict": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.models.sgpmc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.models.sgpmc.SGPMC": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.models.sgpmc.SGPMC.__init__": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "gpflow.models.sgpmc.SGPMC._build_likelihood": {
  "lineno": 79,
  "symbols_in_volume": [
   "tensorflow.reduce_sum"
  ],
  "type": "function"
 },
 "gpflow.models.sgpmc.SGPMC._build_predict": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.models.sgpr": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.models.sgpr.GPRFITC": {
  "lineno": 194,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.models.sgpr.GPRFITC.Z": {
  "lineno": 328,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.models.sgpr.GPRFITC.__init__": {
  "lineno": 195,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.models.sgpr.GPRFITC._build_common_terms": {
  "lineno": 231,
  "symbols_in_volume": [
   "tensorflow.cholesky",
   "tensorflow.expand_dims",
   "tensorflow.eye",
   "tensorflow.matmul",
   "tensorflow.matrix_triangular_solve",
   "tensorflow.reduce_sum",
   "tensorflow.square"
  ],
  "type": "function"
 },
 "gpflow.models.sgpr.GPRFITC._build_likelihood": {
  "lineno": 254,
  "symbols_in_volume": [
   "numpy.pi",
   "tensorflow.constant",
   "tensorflow.expand_dims",
   "tensorflow.log",
   "tensorflow.matrix_diag_part",
   "tensorflow.reduce_sum",
   "tensorflow.square"
  ],
  "type": "function"
 },
 "gpflow.models.sgpr.GPRFITC._build_predict": {
  "lineno": 298,
  "symbols_in_volume": [
   "tensorflow.matmul",
   "tensorflow.matrix_triangular_solve",
   "tensorflow.reduce_sum",
   "tensorflow.square",
   "tensorflow.tile",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "gpflow.models.sgpr.SGPR": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.models.sgpr.SGPR.__init__": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.models.sgpr.SGPR._build_likelihood": {
  "lineno": 123,
  "symbols_in_volume": [
   "numpy.log",
   "numpy.pi",
   "tensorflow.cast",
   "tensorflow.cholesky",
   "tensorflow.eye",
   "tensorflow.log",
   "tensorflow.matmul",
   "tensorflow.matrix_diag_part",
   "tensorflow.matrix_triangular_solve",
   "tensorflow.negative",
   "tensorflow.reduce_sum",
   "tensorflow.shape",
   "tensorflow.sqrt",
   "tensorflow.square"
  ],
  "type": "function"
 },
 "gpflow.models.sgpr.SGPR._build_predict": {
  "lineno": 161,
  "symbols_in_volume": [
   "tensorflow.cholesky",
   "tensorflow.eye",
   "tensorflow.matmul",
   "tensorflow.matrix_triangular_solve",
   "tensorflow.reduce_sum",
   "tensorflow.sqrt",
   "tensorflow.square",
   "tensorflow.tile"
  ],
  "type": "function"
 },
 "gpflow.models.sgpr.SGPRUpperMixin": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.models.sgpr.SGPRUpperMixin.compute_upper_bound": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.pi",
   "tensorflow.cast",
   "tensorflow.cholesky",
   "tensorflow.diag_part",
   "tensorflow.log",
   "tensorflow.matmul",
   "tensorflow.matrix_triangular_solve",
   "tensorflow.reduce_sum",
   "tensorflow.shape"
  ],
  "type": "function"
 },
 "gpflow.models.svgp": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.models.svgp.SVGP": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.models.svgp.SVGP.__init__": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.models.svgp.SVGP._build_likelihood": {
  "lineno": 148,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.reduce_sum",
   "tensorflow.shape"
  ],
  "type": "function"
 },
 "gpflow.models.svgp.SVGP._build_predict": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.models.svgp.SVGP._init_variational_parameters": {
  "lineno": 90,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.eye",
   "numpy.ones",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "gpflow.models.svgp.SVGP.build_prior_KL": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.models.vgp": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.models.vgp.VGP": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.models.vgp.VGP.__init__": {
  "lineno": 50,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.eye",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "gpflow.models.vgp.VGP._build_likelihood": {
  "lineno": 88,
  "symbols_in_volume": [
   "tensorflow.cholesky",
   "tensorflow.expand_dims",
   "tensorflow.eye",
   "tensorflow.matmul",
   "tensorflow.matrix_band_part",
   "tensorflow.reduce_sum",
   "tensorflow.square",
   "tensorflow.stack",
   "tensorflow.tile",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "gpflow.models.vgp.VGP._build_predict": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.models.vgp.VGP.compile": {
  "lineno": 72,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.ones",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "gpflow.models.vgp.VGP_opper_archambeau": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.models.vgp.VGP_opper_archambeau.__init__": {
  "lineno": 160,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "gpflow.models.vgp.VGP_opper_archambeau._build_likelihood": {
  "lineno": 196,
  "symbols_in_volume": [
   "tensorflow.cholesky",
   "tensorflow.expand_dims",
   "tensorflow.eye",
   "tensorflow.log",
   "tensorflow.matmul",
   "tensorflow.matrix_diag_part",
   "tensorflow.matrix_triangular_solve",
   "tensorflow.reduce_sum",
   "tensorflow.square",
   "tensorflow.tile",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "gpflow.models.vgp.VGP_opper_archambeau._build_predict": {
  "lineno": 230,
  "symbols_in_volume": [
   "tensorflow.cholesky",
   "tensorflow.expand_dims",
   "tensorflow.matmul",
   "tensorflow.matrix_diag",
   "tensorflow.matrix_triangular_solve",
   "tensorflow.reduce_sum",
   "tensorflow.square",
   "tensorflow.tile",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "gpflow.models.vgp.VGP_opper_archambeau.compile": {
  "lineno": 181,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "gpflow.multioutput": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.multioutput.conditionals": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.multioutput.conditionals._conditional": {
  "lineno": 209,
  "symbols_in_volume": [
   "tensorflow.expand_dims",
   "tensorflow.matrix_transpose",
   "tensorflow.tensordot"
  ],
  "type": "function"
 },
 "gpflow.multioutput.conditionals._conditional.single_gp_conditional": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.multioutput.conditionals._sample_conditional": {
  "lineno": 259,
  "symbols_in_volume": [
   "tensorflow.einsum"
  ],
  "type": "function"
 },
 "gpflow.multioutput.conditionals.fully_correlated_conditional": {
  "lineno": 364,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.multioutput.conditionals.fully_correlated_conditional_repeat": {
  "lineno": 385,
  "symbols_in_volume": [
   "tensorflow.cholesky",
   "tensorflow.matmul",
   "tensorflow.matrix_band_part",
   "tensorflow.matrix_triangular_solve",
   "tensorflow.reduce_sum",
   "tensorflow.reshape",
   "tensorflow.shape",
   "tensorflow.square",
   "tensorflow.stack",
   "tensorflow.tensordot",
   "tensorflow.tile",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "gpflow.multioutput.conditionals.independent_interdomain_conditional": {
  "lineno": 296,
  "symbols_in_volume": [
   "tensorflow.cholesky",
   "tensorflow.matmul",
   "tensorflow.matrix_band_part",
   "tensorflow.matrix_triangular_solve",
   "tensorflow.reduce_sum",
   "tensorflow.reshape",
   "tensorflow.shape",
   "tensorflow.square",
   "tensorflow.tensordot",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "gpflow.multioutput.features": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.multioutput.features.Kuf": {
  "lineno": 130,
  "symbols_in_volume": [
   "tensorflow.stack"
  ],
  "type": "function"
 },
 "gpflow.multioutput.features.Kuu": {
  "lineno": 189,
  "symbols_in_volume": [
   "tensorflow.eye",
   "tensorflow.stack"
  ],
  "type": "function"
 },
 "gpflow.multioutput.features.MixedKernelSeparateMof": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.multioutput.features.MixedKernelSharedMof": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.multioutput.features.Mof": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.multioutput.features.SeparateIndependentMof": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.multioutput.features.SeparateIndependentMof.__init__": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.multioutput.features.SeparateIndependentMof.__len__": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.multioutput.features.SharedIndependentMof": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.multioutput.features.SharedIndependentMof.__init__": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.multioutput.features.SharedIndependentMof.__len__": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.multioutput.features.debug_kuf": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.multioutput.features.debug_kuu": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.multioutput.kernels": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.multioutput.kernels.Mok": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.multioutput.kernels.Mok.K": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.multioutput.kernels.Mok.Kdiag": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.multioutput.kernels.SeparateIndependentMok": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.multioutput.kernels.SeparateIndependentMok.K": {
  "lineno": 100,
  "symbols_in_volume": [
   "tensorflow.matrix_diag",
   "tensorflow.stack",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "gpflow.multioutput.kernels.SeparateIndependentMok.Kdiag": {
  "lineno": 107,
  "symbols_in_volume": [
   "tensorflow.matrix_diag",
   "tensorflow.stack"
  ],
  "type": "function"
 },
 "gpflow.multioutput.kernels.SeparateIndependentMok.__init__": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.multioutput.kernels.SeparateMixedMok": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.multioutput.kernels.SeparateMixedMok.K": {
  "lineno": 130,
  "symbols_in_volume": [
   "tensorflow.reduce_sum",
   "tensorflow.tensordot",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "gpflow.multioutput.kernels.SeparateMixedMok.Kdiag": {
  "lineno": 142,
  "symbols_in_volume": [
   "tensorflow.matmul",
   "tensorflow.reduce_sum",
   "tensorflow.stack",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "gpflow.multioutput.kernels.SeparateMixedMok.Kgg": {
  "lineno": 121,
  "symbols_in_volume": [
   "tensorflow.stack"
  ],
  "type": "function"
 },
 "gpflow.multioutput.kernels.SeparateMixedMok.__init__": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.multioutput.kernels.SeparateMixedMok.compute_Kgg": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.multioutput.kernels.SharedIndependentMok": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.multioutput.kernels.SharedIndependentMok.K": {
  "lineno": 78,
  "symbols_in_volume": [
   "tensorflow.matrix_diag",
   "tensorflow.tile",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "gpflow.multioutput.kernels.SharedIndependentMok.Kdiag": {
  "lineno": 86,
  "symbols_in_volume": [
   "tensorflow.matrix_diag",
   "tensorflow.tile"
  ],
  "type": "function"
 },
 "gpflow.multioutput.kernels.SharedIndependentMok.__init__": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.params.dataholders": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.params.dataholders.DataHolder": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.params.dataholders.DataHolder.__init__": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.dataholders.DataHolder.__setattr__": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.dataholders.DataHolder._apply_transform": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.dataholders.DataHolder._build": {
  "lineno": 88,
  "symbols_in_volume": [
   "tensorflow.is_variable_initialized"
  ],
  "type": "function"
 },
 "gpflow.params.dataholders.DataHolder._clear": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.dataholders.DataHolder._init_parameter_attributes": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.dataholders.DataHolder._init_parameter_defaults": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.dataholders.DataHolder._parameter_name": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.dataholders.DataHolder._read_parameter_tensor": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.dataholders.DataHolder._set_parameter_attribute": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.dataholders.DataHolder._set_parameter_tensor": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.dataholders.DataHolder.as_pandas_table": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.dataholders.DataHolder.is_built": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.dataholders.DataHolder.parameter_tensor": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.dataholders.DataHolder.set_trainable": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.dataholders.DataHolder.trainable": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.dataholders.Minibatch": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.params.dataholders.Minibatch.__init__": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.dataholders.Minibatch._build": {
  "lineno": 204,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.dataholders.Minibatch._build_dataholder": {
  "lineno": 213,
  "symbols_in_volume": [
   "tensorflow.data.Dataset.from_tensor_slices",
   "tensorflow.int64",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "gpflow.params.dataholders.Minibatch._build_placeholder_cache": {
  "lineno": 209,
  "symbols_in_volume": [
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "gpflow.params.dataholders.Minibatch._clear": {
  "lineno": 197,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.dataholders.Minibatch._init_parameter_defaults": {
  "lineno": 227,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.dataholders.Minibatch._parameter_name": {
  "lineno": 236,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.dataholders.Minibatch.batch_size": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.dataholders.Minibatch.initializable_feeds": {
  "lineno": 174,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.dataholders.Minibatch.initializables": {
  "lineno": 170,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.dataholders.Minibatch.seed": {
  "lineno": 185,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.dataholders.Minibatch.set_batch_size": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.params.parameter.Parameter": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.params.parameter.Parameter.ParameterAttribute": {
  "lineno": 121,
  "symbols_in_volume": [
   "enum.Enum"
  ],
  "type": "class"
 },
 "gpflow.params.parameter.Parameter.ParameterAttribute.interface": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.__init__": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.__setattr__": {
  "lineno": 481,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.__str__": {
  "lineno": 490,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameter.Parameter._apply_transform": {
  "lineno": 457,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameter.Parameter._build": {
  "lineno": 362,
  "symbols_in_volume": [
   "tensorflow.is_variable_initialized"
  ],
  "type": "function"
 },
 "gpflow.params.parameter.Parameter._build_constrained": {
  "lineno": 395,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameter.Parameter._build_parameter": {
  "lineno": 372,
  "symbols_in_volume": [
   "tensorflow.get_variable",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "gpflow.params.parameter.Parameter._build_prior": {
  "lineno": 400,
  "symbols_in_volume": [
   "tensorflow.add",
   "tensorflow.constant",
   "tensorflow.squeeze"
  ],
  "type": "function"
 },
 "gpflow.params.parameter.Parameter._check_tensor_trainable": {
  "lineno": 420,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameter.Parameter._clear": {
  "lineno": 353,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameter.Parameter._init_parameter_attributes": {
  "lineno": 447,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameter.Parameter._init_parameter_defaults": {
  "lineno": 428,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameter.Parameter._init_parameter_value": {
  "lineno": 435,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameter.Parameter._parameter_name": {
  "lineno": 460,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameter.Parameter._read_parameter_tensor": {
  "lineno": 454,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameter.Parameter._repr_html_": {
  "lineno": 493,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameter.Parameter._set_parameter_attribute": {
  "lineno": 466,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameter.Parameter._set_parameter_tensor": {
  "lineno": 463,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameter.Parameter._valid_input": {
  "lineno": 319,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ndarray",
   "numpy.result_type"
  ],
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.anchor": {
  "lineno": 233,
  "symbols_in_volume": [
   "tensorflow.Session"
  ],
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.as_pandas_table": {
  "lineno": 301,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.assign": {
  "lineno": 276,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.constrained_tensor": {
  "lineno": 170,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.dtype": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.feeds": {
  "lineno": 178,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.fix_shape": {
  "lineno": 226,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.fixed": {
  "lineno": 500,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.fixed_shape": {
  "lineno": 200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.graph": {
  "lineno": 194,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.initializable_feeds": {
  "lineno": 188,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.initializables": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.is_built": {
  "lineno": 240,
  "symbols_in_volume": [
   "tensorflow.Graph"
  ],
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.is_initialized": {
  "lineno": 219,
  "symbols_in_volume": [
   "tensorflow.Session"
  ],
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.is_initialized_tensor": {
  "lineno": 212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.parameter_tensor": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.prior_tensor": {
  "lineno": 174,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.read_value": {
  "lineno": 290,
  "symbols_in_volume": [
   "tensorflow.Session"
  ],
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.set_trainable": {
  "lineno": 257,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.shape": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.size": {
  "lineno": 157,
  "symbols_in_volume": [
   "numpy.int32",
   "numpy.multiply.reduce"
  ],
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.tf_compilation_index": {
  "lineno": 309,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.trainable": {
  "lineno": 253,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.unconstrained_tensor": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.value": {
  "lineno": 204,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameterized": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.params.parameterized.Parameterized": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.params.parameterized.Parameterized.__getattribute__": {
  "lineno": 336,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.__init__": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.__setattr__": {
  "lineno": 342,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.__str__": {
  "lineno": 362,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized._build": {
  "lineno": 293,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized._build_prior": {
  "lineno": 304,
  "symbols_in_volume": [
   "tensorflow.add_n",
   "tensorflow.constant"
  ],
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized._clear": {
  "lineno": 286,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized._get_node": {
  "lineno": 313,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized._is_param_like": {
  "lineno": 275,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized._replace_node": {
  "lineno": 327,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized._repr_html_": {
  "lineno": 365,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized._set_node": {
  "lineno": 331,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized._tensor_mode_parameter": {
  "lineno": 279,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized._update_node": {
  "lineno": 316,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.anchor": {
  "lineno": 233,
  "symbols_in_volume": [
   "tensorflow.Session"
  ],
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.as_pandas_table": {
  "lineno": 266,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.assign": {
  "lineno": 209,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.children": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.data_holders": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.empty": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.feeds": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.fix_shape": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.fixed": {
  "lineno": 372,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.graph": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.initializable_feeds": {
  "lineno": 171,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.initializable_feeds.get_initializable_feeds": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.initializables": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.initializables.get_initializables": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.is_built": {
  "lineno": 247,
  "symbols_in_volume": [
   "tensorflow.Graph"
  ],
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.non_empty_params": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.parameters": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.params": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.prior_tensor": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.read_trainables": {
  "lineno": 239,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.read_values": {
  "lineno": 243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.remove_child": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.set_trainable": {
  "lineno": 259,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.store_child": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.trainable": {
  "lineno": 197,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.trainable_parameters": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.trainable_tensors": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.paramlist": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.params.paramlist.ParamList": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.params.paramlist.ParamList.__getitem__": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.paramlist.ParamList.__init__": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.paramlist.ParamList.__len__": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.paramlist.ParamList.__setitem__": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.paramlist.ParamList._get_node": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.paramlist.ParamList._replace_node": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.paramlist.ParamList._valid_list_input": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.paramlist.ParamList.append": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.paramlist.ParamList.children": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.paramlist.ParamList.params": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.params.paramlist.ParamList.store_child": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.priors": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.priors.Beta": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.priors.Beta.__init__": {
  "lineno": 130,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.atleast_1d"
  ],
  "type": "function"
 },
 "gpflow.priors.Beta.__str__": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.priors.Beta.logp": {
  "lineno": 137,
  "symbols_in_volume": [
   "tensorflow.reduce_sum"
  ],
  "type": "function"
 },
 "gpflow.priors.Beta.sample": {
  "lineno": 140,
  "symbols_in_volume": [
   "numpy.random.beta"
  ],
  "type": "function"
 },
 "gpflow.priors.Exponential": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.priors.Exponential.__init__": {
  "lineno": 37,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.atleast_1d"
  ],
  "type": "function"
 },
 "gpflow.priors.Exponential.__str__": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.priors.Exponential.logp": {
  "lineno": 46,
  "symbols_in_volume": [
   "tensorflow.reduce_sum"
  ],
  "type": "function"
 },
 "gpflow.priors.Exponential.sample": {
  "lineno": 50,
  "symbols_in_volume": [
   "numpy.random.exponential"
  ],
  "type": "function"
 },
 "gpflow.priors.Gamma": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.priors.Gamma.__init__": {
  "lineno": 94,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.atleast_1d"
  ],
  "type": "function"
 },
 "gpflow.priors.Gamma.__str__": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.priors.Gamma.logp": {
  "lineno": 101,
  "symbols_in_volume": [
   "tensorflow.reduce_sum"
  ],
  "type": "function"
 },
 "gpflow.priors.Gamma.sample": {
  "lineno": 104,
  "symbols_in_volume": [
   "numpy.random.gamma"
  ],
  "type": "function"
 },
 "gpflow.priors.Gaussian": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.priors.Gaussian.__init__": {
  "lineno": 58,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.atleast_1d"
  ],
  "type": "function"
 },
 "gpflow.priors.Gaussian.__str__": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.priors.Gaussian.logp": {
  "lineno": 65,
  "symbols_in_volume": [
   "tensorflow.reduce_sum"
  ],
  "type": "function"
 },
 "gpflow.priors.Gaussian.sample": {
  "lineno": 68,
  "symbols_in_volume": [
   "numpy.random.randn",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "gpflow.priors.Laplace": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.priors.Laplace.__init__": {
  "lineno": 112,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.atleast_1d"
  ],
  "type": "function"
 },
 "gpflow.priors.Laplace.__str__": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.priors.Laplace.logp": {
  "lineno": 119,
  "symbols_in_volume": [
   "tensorflow.reduce_sum"
  ],
  "type": "function"
 },
 "gpflow.priors.Laplace.sample": {
  "lineno": 122,
  "symbols_in_volume": [
   "numpy.random.laplace"
  ],
  "type": "function"
 },
 "gpflow.priors.LogNormal": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.priors.LogNormal.__init__": {
  "lineno": 76,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.atleast_1d"
  ],
  "type": "function"
 },
 "gpflow.priors.LogNormal.__str__": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.priors.LogNormal.logp": {
  "lineno": 83,
  "symbols_in_volume": [
   "tensorflow.reduce_sum"
  ],
  "type": "function"
 },
 "gpflow.priors.LogNormal.sample": {
  "lineno": 86,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.random.randn",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "gpflow.priors.Prior": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.priors.Uniform": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.priors.Uniform.__init__": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.priors.Uniform.__str__": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.priors.Uniform.log_height": {
  "lineno": 154,
  "symbols_in_volume": [
   "numpy.log"
  ],
  "type": "function"
 },
 "gpflow.priors.Uniform.logp": {
  "lineno": 158,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.size"
  ],
  "type": "function"
 },
 "gpflow.priors.Uniform.sample": {
  "lineno": 161,
  "symbols_in_volume": [
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "gpflow.probability_distributions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.probability_distributions.DiagonalGaussian": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.probability_distributions.DiagonalGaussian.__init__": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.probability_distributions.Gaussian": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.probability_distributions.Gaussian.__init__": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.probability_distributions.MarkovGaussian": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.probability_distributions.MarkovGaussian.__init__": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.probability_distributions.ProbabilityDistribution": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.quadrature": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.quadrature.hermgauss": {
  "lineno": 25,
  "symbols_in_volume": [
   "numpy.polynomial.hermite.hermgauss"
  ],
  "type": "function"
 },
 "gpflow.quadrature.mvhermgauss": {
  "lineno": 31,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.array",
   "numpy.prod"
  ],
  "type": "function"
 },
 "gpflow.quadrature.mvnquad": {
  "lineno": 49,
  "symbols_in_volume": [
   "numpy.pi",
   "numpy.reshape",
   "tensorflow.cholesky",
   "tensorflow.expand_dims",
   "tensorflow.matmul",
   "tensorflow.reduce_sum",
   "tensorflow.reshape",
   "tensorflow.shape",
   "tensorflow.tile",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "gpflow.quadrature.ndiag_mc": {
  "lineno": 201,
  "symbols_in_volume": [
   "collections.Iterable",
   "tensorflow.random_normal",
   "tensorflow.reshape",
   "tensorflow.shape",
   "tensorflow.sqrt",
   "tensorflow.tile"
  ],
  "type": "function"
 },
 "gpflow.quadrature.ndiag_mc.eval_func": {
  "lineno": 232,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.log",
   "tensorflow.reduce_logsumexp",
   "tensorflow.reduce_mean",
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "gpflow.quadrature.ndiagquad": {
  "lineno": 95,
  "symbols_in_volume": [
   "collections.Iterable",
   "numpy.pi",
   "tensorflow.reshape",
   "tensorflow.shape",
   "tensorflow.sqrt",
   "tensorflow.tile"
  ],
  "type": "function"
 },
 "gpflow.quadrature.ndiagquad.eval_func": {
  "lineno": 186,
  "symbols_in_volume": [
   "numpy.log",
   "tensorflow.matmul",
   "tensorflow.reduce_logsumexp",
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "gpflow.quadrature.ndiagquad.unify": {
  "lineno": 154,
  "symbols_in_volume": [
   "tensorflow.concat",
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "gpflow.saver": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.saver.coders": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.bytes_",
   "numpy.ndarray",
   "numpy.number",
   "numpy.string_",
   "tensorflow.Operation",
   "tensorflow.Tensor",
   "tensorflow.Variable",
   "tensorflow.data.Iterator",
   "typing.Dict",
   "typing.List",
   "typing.Union"
  ],
  "type": "module"
 },
 "gpflow.saver.coders.BaseCoder": {
  "lineno": 85,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "gpflow.saver.coders.BaseCoder.decode": {
  "lineno": 104,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "gpflow.saver.coders.BaseCoder.encode": {
  "lineno": 99,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "typing.Any"
  ],
  "type": "function"
 },
 "gpflow.saver.coders.BaseCoder.support_decoding": {
  "lineno": 93,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "gpflow.saver.coders.BaseCoder.support_encoding": {
  "lineno": 87,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "gpflow.saver.coders.CoderDispatcher": {
  "lineno": 575,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.saver.coders.CoderDispatcher._execute_coder": {
  "lineno": 602,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "gpflow.saver.coders.CoderDispatcher.coders": {
  "lineno": 587,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.saver.coders.CoderDispatcher.decode": {
  "lineno": 615,
  "symbols_in_volume": [
   "numpy.ndarray",
   "typing.Union"
  ],
  "type": "function"
 },
 "gpflow.saver.coders.CoderDispatcher.encode": {
  "lineno": 612,
  "symbols_in_volume": [
   "numpy.ndarray",
   "typing.Union"
  ],
  "type": "function"
 },
 "gpflow.saver.coders.CoderDispatcher.support_decoding": {
  "lineno": 579,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.saver.coders.CoderDispatcher.support_encoding": {
  "lineno": 583,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.saver.coders.DictCoder": {
  "lineno": 268,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.saver.coders.DictCoder.decode": {
  "lineno": 297,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "gpflow.saver.coders.DictCoder.decoding_type": {
  "lineno": 278,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.saver.coders.DictCoder.encode": {
  "lineno": 286,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "gpflow.saver.coders.DictCoder.encoding_type": {
  "lineno": 282,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.saver.coders.FunctionCoder": {
  "lineno": 337,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.saver.coders.FunctionCoder.decode": {
  "lineno": 362,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.saver.coders.FunctionCoder.decoding_type": {
  "lineno": 345,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.saver.coders.FunctionCoder.encode": {
  "lineno": 353,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype"
  ],
  "type": "function"
 },
 "gpflow.saver.coders.FunctionCoder.encoding_type": {
  "lineno": 349,
  "symbols_in_volume": [
   "types.FunctionType"
  ],
  "type": "function"
 },
 "gpflow.saver.coders.ListCoder": {
  "lineno": 221,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.saver.coders.ListCoder.decode": {
  "lineno": 257,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "gpflow.saver.coders.ListCoder.decoding_type": {
  "lineno": 231,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.saver.coders.ListCoder.encode": {
  "lineno": 239,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "gpflow.saver.coders.ListCoder.encoding_type": {
  "lineno": 235,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.saver.coders.NodeCoder": {
  "lineno": 470,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.saver.coders.NodeCoder._take_values": {
  "lineno": 479,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.saver.coders.NodeCoder.encoding_type": {
  "lineno": 475,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.saver.coders.ObjectCoder": {
  "lineno": 369,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.saver.coders.ObjectCoder._decode_attributes": {
  "lineno": 440,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "gpflow.saver.coders.ObjectCoder._decode_object": {
  "lineno": 444,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "gpflow.saver.coders.ObjectCoder._take_class_name": {
  "lineno": 425,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.saver.coders.ObjectCoder._take_extras": {
  "lineno": 431,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.saver.coders.ObjectCoder._take_module_name": {
  "lineno": 422,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.saver.coders.ObjectCoder._take_values": {
  "lineno": 428,
  "symbols_in_volume": [
   "copy.copy"
  ],
  "type": "function"
 },
 "gpflow.saver.coders.ObjectCoder._transform_extra": {
  "lineno": 437,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "gpflow.saver.coders.ObjectCoder._transform_values": {
  "lineno": 434,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "gpflow.saver.coders.ObjectCoder.decode": {
  "lineno": 418,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "gpflow.saver.coders.ObjectCoder.decoding_type": {
  "lineno": 380,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.saver.coders.ObjectCoder.encode": {
  "lineno": 398,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "gpflow.saver.coders.ObjectCoder.encoding_type": {
  "lineno": 384,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.saver.coders.ObjectCoder.support_decoding": {
  "lineno": 388,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "gpflow.saver.coders.ParamListCoder": {
  "lineno": 568,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.saver.coders.ParamListCoder.encoding_type": {
  "lineno": 570,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.saver.coders.ParameterCoder": {
  "lineno": 491,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.saver.coders.ParameterCoder._decode_object": {
  "lineno": 525,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "gpflow.saver.coders.ParameterCoder._take_extras": {
  "lineno": 511,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "gpflow.saver.coders.ParameterCoder._take_values": {
  "lineno": 498,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "gpflow.saver.coders.ParameterCoder.encoding_type": {
  "lineno": 494,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.saver.coders.ParameterizedCoder": {
  "lineno": 534,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.saver.coders.ParameterizedCoder._decode_object": {
  "lineno": 551,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "gpflow.saver.coders.ParameterizedCoder._encoding_type": {
  "lineno": 537,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.saver.coders.ParameterizedCoder._take_extras": {
  "lineno": 562,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "gpflow.saver.coders.ParameterizedCoder._take_values": {
  "lineno": 541,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.saver.coders.PrimitiveTypeCoder": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.saver.coders.PrimitiveTypeCoder._types": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.saver.coders.PrimitiveTypeCoder.decode": {
  "lineno": 130,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "gpflow.saver.coders.PrimitiveTypeCoder.encode": {
  "lineno": 125,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.string_"
  ],
  "type": "function"
 },
 "gpflow.saver.coders.PrimitiveTypeCoder.support_decoding": {
  "lineno": 117,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "gpflow.saver.coders.PrimitiveTypeCoder.support_encoding": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.saver.coders.PriorCoder": {
  "lineno": 462,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.saver.coders.PriorCoder.encoding_type": {
  "lineno": 465,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.saver.coders.SliceCoder": {
  "lineno": 305,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.saver.coders.SliceCoder.decode": {
  "lineno": 330,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.saver.coders.SliceCoder.decode.try_decode": {
  "lineno": 332,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.saver.coders.SliceCoder.decoding_type": {
  "lineno": 313,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.saver.coders.SliceCoder.encode": {
  "lineno": 321,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "gpflow.saver.coders.SliceCoder.encode.try_encode": {
  "lineno": 322,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.saver.coders.SliceCoder.encoding_type": {
  "lineno": 317,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.saver.coders.StructCoder": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.saver.coders.StructCoder.decoding_type": {
  "lineno": 175,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "gpflow.saver.coders.StructCoder.encoding_type": {
  "lineno": 169,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "gpflow.saver.coders.StructCoder.struct": {
  "lineno": 181,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.ndarray",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "gpflow.saver.coders.StructCoder.support_decoding": {
  "lineno": 210,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.saver.coders.StructCoder.support_encoding": {
  "lineno": 206,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.saver.coders.StructField": {
  "lineno": 52,
  "symbols_in_volume": [
   "enum.Enum"
  ],
  "type": "class"
 },
 "gpflow.saver.coders.StructType": {
  "lineno": 63,
  "symbols_in_volume": [
   "enum.Enum"
  ],
  "type": "class"
 },
 "gpflow.saver.coders.TensorFlowCoder": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.saver.coders.TensorFlowCoder.decode": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.saver.coders.TensorFlowCoder.encode": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.saver.coders.TensorFlowCoder.support_decoding": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.saver.coders.TensorFlowCoder.support_encoding": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.saver.coders.TransformCoder": {
  "lineno": 454,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.saver.coders.TransformCoder.encoding_type": {
  "lineno": 457,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.saver.coders._add_index_to_compilations": {
  "lineno": 636,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.saver.coders._build_type": {
  "lineno": 651,
  "symbols_in_volume": [
   "sys.modules"
  ],
  "type": "function"
 },
 "gpflow.saver.coders._check_index_in_compilations": {
  "lineno": 643,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.saver.coders._convert_to_string": {
  "lineno": 710,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.string_",
   "typing.AnyStr",
   "typing.Union"
  ],
  "type": "function"
 },
 "gpflow.saver.coders._get_type_args": {
  "lineno": 718,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.saver.coders._is_nan": {
  "lineno": 686,
  "symbols_in_volume": [
   "numpy.floating",
   "numpy.isnan",
   "numpy.issubdtype",
   "numpy.ndarray",
   "numpy.number"
  ],
  "type": "function"
 },
 "gpflow.saver.coders._is_numpy_object": {
  "lineno": 704,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.void"
  ],
  "type": "function"
 },
 "gpflow.saver.coders._is_shapeless": {
  "lineno": 697,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "gpflow.saver.coders._is_str": {
  "lineno": 677,
  "symbols_in_volume": [
   "numpy.bytes_",
   "numpy.issubdtype",
   "numpy.string_"
  ],
  "type": "function"
 },
 "gpflow.saver.coders._list_of_dtypes": {
  "lineno": 665,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.ndarray",
   "typing.List",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "gpflow.saver.coders.empty_array": {
  "lineno": 628,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "gpflow.saver.coders.numpy_none": {
  "lineno": 632,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan"
  ],
  "type": "function"
 },
 "gpflow.saver.coders.type_pattern": {
  "lineno": 624,
  "symbols_in_volume": [
   "numpy.uint8"
  ],
  "type": "function"
 },
 "gpflow.saver.context": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.saver.context.BaseContext": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.saver.context.BaseContext.__init__": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.saver.context.BaseContext.coders": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.saver.context.BaseContext.session": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.saver.context.BaseContext.shared_data": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.saver.context.Contexture": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.saver.context.Contexture.__init__": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.saver.context.Contexture.context": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.saver.saver": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.saver.saver.Saver": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.saver.saver.Saver.__get_context": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.saver.saver.Saver.load": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.saver.saver.Saver.save": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.saver.saver.SaverContext": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.saver.saver.SaverContext.__init__": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.saver.serializers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.saver.serializers.BaseSerializer": {
  "lineno": 26,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "gpflow.saver.serializers.BaseSerializer.dump": {
  "lineno": 27,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "gpflow.saver.serializers.BaseSerializer.load": {
  "lineno": 31,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "gpflow.saver.serializers.HDF5Serializer": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.saver.serializers.HDF5Serializer.dump": {
  "lineno": 37,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "h5py.File"
  ],
  "type": "function"
 },
 "gpflow.saver.serializers.HDF5Serializer.load": {
  "lineno": 46,
  "symbols_in_volume": [
   "h5py.File"
  ],
  "type": "function"
 },
 "gpflow.session_manager": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.session_manager.TracerSession": {
  "lineno": 31,
  "symbols_in_volume": [
   "tensorflow.Session"
  ],
  "type": "class"
 },
 "gpflow.session_manager.TracerSession.__init__": {
  "lineno": 32,
  "symbols_in_volume": [
   "os.mkdir",
   "os.path.isdir",
   "os.path.isfile",
   "tensorflow.RunOptions",
   "tensorflow.RunOptions.FULL_TRACE"
  ],
  "type": "function"
 },
 "gpflow.session_manager.TracerSession._trace_filename": {
  "lineno": 50,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "gpflow.session_manager.TracerSession.run": {
  "lineno": 64,
  "symbols_in_volume": [
   "tensorflow.RunMetadata",
   "tensorflow.python.client.timeline.Timeline"
  ],
  "type": "function"
 },
 "gpflow.session_manager._DefaultSessionKeeper": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.session_manager.get_default_session": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.session_manager.get_session": {
  "lineno": 106,
  "symbols_in_volume": [
   "tensorflow.ConfigProto",
   "tensorflow.Session"
  ],
  "type": "function"
 },
 "gpflow.session_manager.get_session.fill_kwargs": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.session_manager.reset_default_graph_and_session": {
  "lineno": 94,
  "symbols_in_volume": [
   "tensorflow.reset_default_graph"
  ],
  "type": "function"
 },
 "gpflow.session_manager.reset_default_session": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.test_util": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.test_util.GPflowTestCase": {
  "lineno": 98,
  "symbols_in_volume": [
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "gpflow.test_util.GPflowTestCase.__init__": {
  "lineno": 106,
  "symbols_in_volume": [
   "tensorflow.Graph"
  ],
  "type": "function"
 },
 "gpflow.test_util.GPflowTestCase.test_context": {
  "lineno": 110,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "gpflow.test_util.cache_tensor": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.test_util.cache_tensor.wrapper": {
  "lineno": 67,
  "symbols_in_volume": [
   "functools.wraps",
   "tensorflow.get_default_graph"
  ],
  "type": "function"
 },
 "gpflow.test_util.is_continuous_integration": {
  "lineno": 117,
  "symbols_in_volume": [
   "os.environ.get"
  ],
  "type": "function"
 },
 "gpflow.test_util.notebook_list": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.test_util.notebook_niter": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.test_util.notebook_range": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.test_util.session_context": {
  "lineno": 76,
  "symbols_in_volume": [
   "contextlib.ContextDecorator"
  ],
  "type": "class"
 },
 "gpflow.test_util.session_context.__enter__": {
  "lineno": 83,
  "symbols_in_volume": [
   "tensorflow.Graph",
   "tensorflow.Session"
  ],
  "type": "function"
 },
 "gpflow.test_util.session_context.__exit__": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.test_util.session_context.__init__": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.test_util.session_tf": {
  "lineno": 27,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "gpflow.training": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.training.external_optimizer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.training.external_optimizer.ExternalOptimizerInterface": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.training.external_optimizer.ExternalOptimizerInterface.__init__": {
  "lineno": 48,
  "symbols_in_volume": [
   "tensorflow.python.ops.variables.trainable_variables"
  ],
  "type": "function"
 },
 "gpflow.training.external_optimizer.ExternalOptimizerInterface._initialize_updated_shapes": {
  "lineno": 186,
  "symbols_in_volume": [
   "numpy.broadcast_to",
   "numpy.infty",
   "tensorflow.python.ops.array_ops.placeholder",
   "tensorflow.python.ops.array_ops.reshape",
   "tensorflow.python.ops.array_ops.shape_n"
  ],
  "type": "function"
 },
 "gpflow.training.external_optimizer.ExternalOptimizerInterface._make_eval_func": {
  "lineno": 291,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.external_optimizer.ExternalOptimizerInterface._make_eval_func.eval_func": {
  "lineno": 298,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.external_optimizer.ExternalOptimizerInterface._make_eval_funcs": {
  "lineno": 318,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.external_optimizer.ExternalOptimizerInterface._minimize": {
  "lineno": 248,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.external_optimizer.ExternalOptimizerInterface._pack": {
  "lineno": 280,
  "symbols_in_volume": [
   "tensorflow.python.ops.array_ops.concat",
   "tensorflow.python.ops.array_ops.reshape"
  ],
  "type": "function"
 },
 "gpflow.training.external_optimizer.ExternalOptimizerInterface.minimize": {
  "lineno": 108,
  "symbols_in_volume": [
   "tensorflow.python.framework.ops.get_default_session"
  ],
  "type": "function"
 },
 "gpflow.training.external_optimizer.ScipyOptimizerInterface": {
  "lineno": 330,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.training.external_optimizer.ScipyOptimizerInterface._minimize": {
  "lineno": 392,
  "symbols_in_volume": [
   "tensorflow.python.platform.tf_logging.info"
  ],
  "type": "function"
 },
 "gpflow.training.external_optimizer.ScipyOptimizerInterface._minimize.loss_grad_func_wrapper": {
  "lineno": 396,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.external_optimizer._accumulate": {
  "lineno": 447,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.external_optimizer._compute_gradients": {
  "lineno": 462,
  "symbols_in_volume": [
   "tensorflow.python.ops.array_ops.zeros_like",
   "tensorflow.python.ops.gradients.gradients"
  ],
  "type": "function"
 },
 "gpflow.training.external_optimizer._prod": {
  "lineno": 455,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.hmc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.training.hmc.HMC": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.training.hmc.HMC.make_optimize_tensor": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.hmc.HMC.minimize": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.hmc.HMC.sample": {
  "lineno": 24,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "tensorflow.control_dependencies",
   "tensorflow.map_fn",
   "tensorflow.name_scope"
  ],
  "type": "function"
 },
 "gpflow.training.hmc.HMC.sample.logprob_grads": {
  "lineno": 87,
  "symbols_in_volume": [
   "tensorflow.gradients",
   "tensorflow.negative"
  ],
  "type": "function"
 },
 "gpflow.training.hmc.HMC.sample.map_body": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.hmc._assign_variables": {
  "lineno": 260,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.hmc._burning": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.hmc._burning.body": {
  "lineno": 138,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.hmc._burning.cond": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.hmc._copy_variables": {
  "lineno": 264,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.hmc._flat": {
  "lineno": 286,
  "symbols_in_volume": [
   "itertools.chain.from_iterable"
  ],
  "type": "function"
 },
 "gpflow.training.hmc._init_ps": {
  "lineno": 271,
  "symbols_in_volume": [
   "tensorflow.random_normal",
   "tensorflow.shape"
  ],
  "type": "function"
 },
 "gpflow.training.hmc._leapfrog_step": {
  "lineno": 224,
  "symbols_in_volume": [
   "tensorflow.control_dependencies"
  ],
  "type": "function"
 },
 "gpflow.training.hmc._leapfrog_step.body": {
  "lineno": 236,
  "symbols_in_volume": [
   "tensorflow.cond",
   "tensorflow.control_dependencies"
  ],
  "type": "function"
 },
 "gpflow.training.hmc._leapfrog_step.body.ps_no_step": {
  "lineno": 244,
  "symbols_in_volume": [
   "tensorflow.control_dependencies"
  ],
  "type": "function"
 },
 "gpflow.training.hmc._leapfrog_step.body.ps_step": {
  "lineno": 241,
  "symbols_in_volume": [
   "tensorflow.control_dependencies"
  ],
  "type": "function"
 },
 "gpflow.training.hmc._leapfrog_step.cond": {
  "lineno": 233,
  "symbols_in_volume": [
   "tensorflow.logical_and"
  ],
  "type": "function"
 },
 "gpflow.training.hmc._leapfrog_step.update_xs": {
  "lineno": 226,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.hmc._leapfrog_step.whether_proceed": {
  "lineno": 229,
  "symbols_in_volume": [
   "tensorflow.is_finite",
   "tensorflow.reduce_all"
  ],
  "type": "function"
 },
 "gpflow.training.hmc._map": {
  "lineno": 283,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.hmc._premature_reject": {
  "lineno": 192,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.hmc._reject_accept_proposal": {
  "lineno": 197,
  "symbols_in_volume": [
   "tensorflow.cond",
   "tensorflow.control_dependencies",
   "tensorflow.log",
   "tensorflow.random_uniform",
   "tensorflow.shape"
  ],
  "type": "function"
 },
 "gpflow.training.hmc._reject_accept_proposal.accept": {
  "lineno": 212,
  "symbols_in_volume": [
   "tensorflow.control_dependencies"
  ],
  "type": "function"
 },
 "gpflow.training.hmc._reject_accept_proposal.dot": {
  "lineno": 203,
  "symbols_in_volume": [
   "tensorflow.reduce_sum",
   "tensorflow.square"
  ],
  "type": "function"
 },
 "gpflow.training.hmc._reject_accept_proposal.reject": {
  "lineno": 216,
  "symbols_in_volume": [
   "tensorflow.control_dependencies"
  ],
  "type": "function"
 },
 "gpflow.training.hmc._thinning": {
  "lineno": 146,
  "symbols_in_volume": [
   "tensorflow.control_dependencies"
  ],
  "type": "function"
 },
 "gpflow.training.hmc._thinning.body": {
  "lineno": 151,
  "symbols_in_volume": [
   "tensorflow.cond",
   "tensorflow.control_dependencies",
   "tensorflow.int32",
   "tensorflow.random_uniform"
  ],
  "type": "function"
 },
 "gpflow.training.hmc._thinning.body.premature_reject": {
  "lineno": 169,
  "symbols_in_volume": [
   "tensorflow.control_dependencies"
  ],
  "type": "function"
 },
 "gpflow.training.hmc._thinning.body.standard_proposal": {
  "lineno": 162,
  "symbols_in_volume": [
   "tensorflow.control_dependencies"
  ],
  "type": "function"
 },
 "gpflow.training.hmc._thinning.cond": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.hmc._update_ps": {
  "lineno": 275,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.hmc._while_loop": {
  "lineno": 279,
  "symbols_in_volume": [
   "tensorflow.while_loop"
  ],
  "type": "function"
 },
 "gpflow.training.monitor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.training.monitor.BaseTensorBoardTask": {
  "lineno": 782,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.training.monitor.BaseTensorBoardTask.__init__": {
  "lineno": 797,
  "symbols_in_volume": [
   "gpflow.models.Model",
   "typing.Optional"
  ],
  "type": "function"
 },
 "gpflow.training.monitor.BaseTensorBoardTask._eval_summary": {
  "lineno": 836,
  "symbols_in_volume": [
   "typing.Dict",
   "typing.Optional"
  ],
  "type": "function"
 },
 "gpflow.training.monitor.BaseTensorBoardTask.flush": {
  "lineno": 829,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.monitor.BaseTensorBoardTask.model": {
  "lineno": 811,
  "symbols_in_volume": [
   "gpflow.models.Model"
  ],
  "type": "function"
 },
 "gpflow.training.monitor.BaseTensorBoardTask.run": {
  "lineno": 818,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.monitor.BaseTensorBoardTask.with_flush_immediately": {
  "lineno": 821,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "gpflow.training.monitor.CallbackTask": {
  "lineno": 638,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.training.monitor.CallbackTask.__init__": {
  "lineno": 648,
  "symbols_in_volume": [
   "typing.Callable"
  ],
  "type": "function"
 },
 "gpflow.training.monitor.CallbackTask.run": {
  "lineno": 653,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.monitor.CheckpointTask": {
  "lineno": 674,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.training.monitor.CheckpointTask.__init__": {
  "lineno": 679,
  "symbols_in_volume": [
   "pathlib.PurePath",
   "tensorflow.train.Saver",
   "typing.Optional"
  ],
  "type": "function"
 },
 "gpflow.training.monitor.CheckpointTask.run": {
  "lineno": 692,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.monitor.GenericCondition": {
  "lineno": 468,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.training.monitor.GenericCondition.__call__": {
  "lineno": 491,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.monitor.GenericCondition.__init__": {
  "lineno": 481,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Callable",
   "typing.Iterator"
  ],
  "type": "function"
 },
 "gpflow.training.monitor.GrowingIntervalCondition": {
  "lineno": 530,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.training.monitor.GrowingIntervalCondition.__init__": {
  "lineno": 535,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Callable"
  ],
  "type": "function"
 },
 "gpflow.training.monitor.GrowingIntervalCondition._growing_step_sequence": {
  "lineno": 549,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.monitor.HistogramToTensorBoardTask": {
  "lineno": 1012,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.training.monitor.HistogramToTensorBoardTask.__init__": {
  "lineno": 1018,
  "symbols_in_volume": [
   "tensorflow.float64",
   "tensorflow.placeholder",
   "tensorflow.summary.histogram",
   "typing.Callable"
  ],
  "type": "function"
 },
 "gpflow.training.monitor.HistogramToTensorBoardTask.run": {
  "lineno": 1033,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.monitor.ImageToTensorBoardTask": {
  "lineno": 1037,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.training.monitor.ImageToTensorBoardTask.__init__": {
  "lineno": 1042,
  "symbols_in_volume": [
   "matplotlib.figure.Figure",
   "tensorflow.float64",
   "tensorflow.placeholder",
   "tensorflow.summary.image",
   "typing.Callable"
  ],
  "type": "function"
 },
 "gpflow.training.monitor.ImageToTensorBoardTask.run": {
  "lineno": 1056,
  "symbols_in_volume": [
   "io.BytesIO",
   "matplotlib.pyplot.close",
   "tensorflow.expand_dims",
   "tensorflow.image.decode_png"
  ],
  "type": "function"
 },
 "gpflow.training.monitor.LmlToTensorBoardTask": {
  "lineno": 901,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.training.monitor.LmlToTensorBoardTask.__init__": {
  "lineno": 914,
  "symbols_in_volume": [
   "gpflow.models.Model",
   "gpflow.settings.logger",
   "gpflow.settings.tf_float",
   "logging.WARNING",
   "tensorflow.placeholder",
   "tensorflow.summary.scalar",
   "tqdm.tqdm",
   "typing.Optional"
  ],
  "type": "function"
 },
 "gpflow.training.monitor.LmlToTensorBoardTask.run": {
  "lineno": 940,
  "symbols_in_volume": [
   "gpflow.params_as_tensors_for",
   "math.ceil"
  ],
  "type": "function"
 },
 "gpflow.training.monitor.LogdirWriter": {
  "lineno": 698,
  "symbols_in_volume": [
   "tensorflow.summary.FileWriter"
  ],
  "type": "class"
 },
 "gpflow.training.monitor.LogdirWriter.__del__": {
  "lineno": 736,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.monitor.LogdirWriter.__init__": {
  "lineno": 717,
  "symbols_in_volume": [
   "pathlib.PurePath",
   "tensorflow.Graph",
   "typing.Optional"
  ],
  "type": "function"
 },
 "gpflow.training.monitor.LogdirWriter.__lock_location": {
  "lineno": 758,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.monitor.LogdirWriter.__release_location": {
  "lineno": 772,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.monitor.LogdirWriter.close": {
  "lineno": 741,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.monitor.LogdirWriter.reopen": {
  "lineno": 749,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.monitor.ModelToTensorBoardTask": {
  "lineno": 857,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.training.monitor.ModelToTensorBoardTask.__init__": {
  "lineno": 869,
  "symbols_in_volume": [
   "gpflow.models.Model",
   "gpflow.params.Parameter",
   "tensorflow.Summary",
   "tensorflow.reshape",
   "tensorflow.summary.histogram",
   "tensorflow.summary.merge",
   "tensorflow.summary.scalar",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "gpflow.training.monitor.Monitor": {
  "lineno": 348,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.training.monitor.Monitor.__call__": {
  "lineno": 396,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.monitor.Monitor.__enter__": {
  "lineno": 389,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.monitor.Monitor.__exit__": {
  "lineno": 393,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.monitor.Monitor.__init__": {
  "lineno": 360,
  "symbols_in_volume": [
   "tensorflow.Session",
   "tensorflow.Variable",
   "typing.Any",
   "typing.Iterator",
   "typing.Optional"
  ],
  "type": "function"
 },
 "gpflow.training.monitor.Monitor._on_iteration": {
  "lineno": 443,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.monitor.Monitor.print_summary": {
  "lineno": 435,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.monitor.Monitor.start_monitoring": {
  "lineno": 405,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.monitor.Monitor.stop_monitoring": {
  "lineno": 418,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.monitor.MonitorContext": {
  "lineno": 198,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.training.monitor.MonitorContext.__init__": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.monitor.MonitorContext.global_step": {
  "lineno": 237,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.monitor.MonitorTask": {
  "lineno": 249,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "gpflow.training.monitor.MonitorTask.__call__": {
  "lineno": 325,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.monitor.MonitorTask.__init__": {
  "lineno": 267,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "gpflow.training.monitor.MonitorTask.last_call_time": {
  "lineno": 312,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.monitor.MonitorTask.run": {
  "lineno": 317,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "gpflow.training.monitor.MonitorTask.task_name": {
  "lineno": 302,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.monitor.MonitorTask.total_time": {
  "lineno": 307,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.monitor.MonitorTask.with_condition": {
  "lineno": 280,
  "symbols_in_volume": [
   "typing.Callable"
  ],
  "type": "function"
 },
 "gpflow.training.monitor.MonitorTask.with_exit_condition": {
  "lineno": 287,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "gpflow.training.monitor.MonitorTask.with_name": {
  "lineno": 294,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.monitor.PeriodicCondition": {
  "lineno": 503,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.training.monitor.PeriodicCondition.__init__": {
  "lineno": 508,
  "symbols_in_volume": [
   "itertools.count",
   "typing.Any",
   "typing.Callable"
  ],
  "type": "function"
 },
 "gpflow.training.monitor.PeriodicIterationCondition": {
  "lineno": 516,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.training.monitor.PeriodicIterationCondition.__init__": {
  "lineno": 522,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "gpflow.training.monitor.PrintTimingsTask": {
  "lineno": 568,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.training.monitor.PrintTimingsTask.__init__": {
  "lineno": 590,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.monitor.PrintTimingsTask._print_timings": {
  "lineno": 628,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.monitor.PrintTimingsTask.run": {
  "lineno": 601,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "gpflow.training.monitor.ScalarFuncToTensorBoardTask": {
  "lineno": 959,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.training.monitor.ScalarFuncToTensorBoardTask.__init__": {
  "lineno": 965,
  "symbols_in_volume": [
   "tensorflow.float64",
   "tensorflow.placeholder",
   "tensorflow.summary.scalar",
   "typing.Callable"
  ],
  "type": "function"
 },
 "gpflow.training.monitor.ScalarFuncToTensorBoardTask.run": {
  "lineno": 977,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.monitor.SleepTask": {
  "lineno": 657,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.training.monitor.SleepTask.__init__": {
  "lineno": 663,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.monitor.SleepTask.run": {
  "lineno": 670,
  "symbols_in_volume": [
   "time.sleep"
  ],
  "type": "function"
 },
 "gpflow.training.monitor.VectorFuncToTensorBoardTask": {
  "lineno": 981,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.training.monitor.VectorFuncToTensorBoardTask.__init__": {
  "lineno": 989,
  "symbols_in_volume": [
   "tensorflow.float64",
   "tensorflow.placeholder",
   "tensorflow.summary.merge",
   "tensorflow.summary.scalar",
   "typing.Callable"
  ],
  "type": "function"
 },
 "gpflow.training.monitor.VectorFuncToTensorBoardTask.run": {
  "lineno": 1005,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "gpflow.training.monitor.create_global_step": {
  "lineno": 131,
  "symbols_in_volume": [
   "tensorflow.Session",
   "tensorflow.Variable"
  ],
  "type": "function"
 },
 "gpflow.training.monitor.get_default_saver": {
  "lineno": 159,
  "symbols_in_volume": [
   "tensorflow.train.Saver"
  ],
  "type": "function"
 },
 "gpflow.training.monitor.get_hr_time": {
  "lineno": 124,
  "symbols_in_volume": [
   "timeit.default_timer"
  ],
  "type": "function"
 },
 "gpflow.training.monitor.restore_session": {
  "lineno": 142,
  "symbols_in_volume": [
   "gpflow.settings.logger",
   "logging.INFO",
   "tensorflow.Session",
   "tensorflow.train.Saver",
   "tensorflow.train.latest_checkpoint",
   "typing.Optional"
  ],
  "type": "function"
 },
 "gpflow.training.monitor.update_optimiser": {
  "lineno": 167,
  "symbols_in_volume": [
   "gpflow.training.scipy_optimizer.ScipyOptimizer"
  ],
  "type": "function"
 },
 "gpflow.training.natgrad_optimizer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.training.natgrad_optimizer.NatGradOptimizer": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.training.natgrad_optimizer.NatGradOptimizer.__init__": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.natgrad_optimizer.NatGradOptimizer._build_natgrad_step_op": {
  "lineno": 174,
  "symbols_in_volume": [
   "tensorflow.assign",
   "tensorflow.gradients",
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "gpflow.training.natgrad_optimizer.NatGradOptimizer._build_natgrad_step_ops": {
  "lineno": 165,
  "symbols_in_volume": [
   "tensorflow.group"
  ],
  "type": "function"
 },
 "gpflow.training.natgrad_optimizer.NatGradOptimizer._forward_gradients": {
  "lineno": 143,
  "symbols_in_volume": [
   "tensorflow.gradients",
   "tensorflow.placeholder_with_default",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "gpflow.training.natgrad_optimizer.NatGradOptimizer.gamma": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.natgrad_optimizer.NatGradOptimizer.make_optimize_action": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.natgrad_optimizer.NatGradOptimizer.make_optimize_tensor": {
  "lineno": 89,
  "symbols_in_volume": [
   "tensorflow.name_scope"
  ],
  "type": "function"
 },
 "gpflow.training.natgrad_optimizer.NatGradOptimizer.minimize": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.natgrad_optimizer.NatGradOptimizer.minimize_operation": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.natgrad_optimizer.XiNat": {
  "lineno": 286,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.training.natgrad_optimizer.XiNat.meanvarsqrt_to_xi": {
  "lineno": 292,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.natgrad_optimizer.XiNat.naturals_to_xi": {
  "lineno": 298,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.natgrad_optimizer.XiNat.xi_to_meanvarsqrt": {
  "lineno": 295,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.natgrad_optimizer.XiSqrtMeanVar": {
  "lineno": 302,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.training.natgrad_optimizer.XiSqrtMeanVar.meanvarsqrt_to_xi": {
  "lineno": 307,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.natgrad_optimizer.XiSqrtMeanVar.naturals_to_xi": {
  "lineno": 313,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.natgrad_optimizer.XiSqrtMeanVar.xi_to_meanvarsqrt": {
  "lineno": 310,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.natgrad_optimizer.XiTransform": {
  "lineno": 245,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "gpflow.training.natgrad_optimizer.XiTransform.meanvarsqrt_to_xi": {
  "lineno": 252,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "gpflow.training.natgrad_optimizer.XiTransform.naturals_to_xi": {
  "lineno": 274,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "gpflow.training.natgrad_optimizer.XiTransform.xi_to_meanvarsqrt": {
  "lineno": 263,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "gpflow.training.natgrad_optimizer._inverse_lower_triangular": {
  "lineno": 386,
  "symbols_in_volume": [
   "tensorflow.eye",
   "tensorflow.matrix_triangular_solve",
   "tensorflow.ones",
   "tensorflow.shape"
  ],
  "type": "function"
 },
 "gpflow.training.natgrad_optimizer.expectation_to_meanvarsqrt": {
  "lineno": 375,
  "symbols_in_volume": [
   "tensorflow.cholesky",
   "tensorflow.matmul"
  ],
  "type": "function"
 },
 "gpflow.training.natgrad_optimizer.expectation_to_natural": {
  "lineno": 370,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.natgrad_optimizer.meanvarsqrt_to_expectation": {
  "lineno": 381,
  "symbols_in_volume": [
   "tensorflow.matmul"
  ],
  "type": "function"
 },
 "gpflow.training.natgrad_optimizer.meanvarsqrt_to_natural": {
  "lineno": 358,
  "symbols_in_volume": [
   "tensorflow.matmul"
  ],
  "type": "function"
 },
 "gpflow.training.natgrad_optimizer.natural_to_expectation": {
  "lineno": 365,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.natgrad_optimizer.natural_to_meanvarsqrt": {
  "lineno": 347,
  "symbols_in_volume": [
   "tensorflow.cholesky",
   "tensorflow.matmul"
  ],
  "type": "function"
 },
 "gpflow.training.natgrad_optimizer.swap_dimensions": {
  "lineno": 324,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.natgrad_optimizer.swap_dimensions.wrapper": {
  "lineno": 334,
  "symbols_in_volume": [
   "functools.wraps",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "gpflow.training.optimizer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.training.optimizer.Optimizer": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.training.optimizer.Optimizer._gen_feed_dict": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.optimizer.Optimizer._gen_var_list": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.optimizer.Optimizer.make_optimize_tensor": {
  "lineno": 22,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "gpflow.training.optimizer.Optimizer.minimize": {
  "lineno": 38,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "gpflow.training.scipy_optimizer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.training.scipy_optimizer.ScipyOptimizer": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.training.scipy_optimizer.ScipyOptimizer.__init__": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.scipy_optimizer.ScipyOptimizer.make_optimize_tensor": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.scipy_optimizer.ScipyOptimizer.minimize": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.scipy_optimizer.ScipyOptimizer.model": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.scipy_optimizer.ScipyOptimizer.optimizer": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.tensorflow_optimizer": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.train.__dict__.items"
  ],
  "type": "module"
 },
 "gpflow.training.tensorflow_optimizer._TensorFlowOptimizer": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.training.tensorflow_optimizer._TensorFlowOptimizer.__init__": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.tensorflow_optimizer._TensorFlowOptimizer._initialize_optimizer": {
  "lineno": 126,
  "symbols_in_volume": [
   "tensorflow.Session"
  ],
  "type": "function"
 },
 "gpflow.training.tensorflow_optimizer._TensorFlowOptimizer.make_optimize_action": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.tensorflow_optimizer._TensorFlowOptimizer.make_optimize_tensor": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.tensorflow_optimizer._TensorFlowOptimizer.minimize": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.tensorflow_optimizer._TensorFlowOptimizer.minimize_operation": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.tensorflow_optimizer._TensorFlowOptimizer.model": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.tensorflow_optimizer._TensorFlowOptimizer.optimizer": {
  "lineno": 138,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.tensorflow_optimizer._get_registered_optimizer": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.training.tensorflow_optimizer._register_optimizer": {
  "lineno": 156,
  "symbols_in_volume": [
   "sys.modules",
   "tensorflow.train.Optimizer"
  ],
  "type": "function"
 },
 "gpflow.transforms": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gpflow.transforms.Chain": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.transforms.Chain.__init__": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.transforms.Chain.__str__": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.transforms.Chain.backward": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.transforms.Chain.backward_tensor": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.transforms.Chain.forward": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.transforms.Chain.forward_tensor": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.transforms.Chain.log_jacobian_tensor": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.transforms.DiagMatrix": {
  "lineno": 271,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.transforms.DiagMatrix.__init__": {
  "lineno": 284,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.transforms.DiagMatrix.__str__": {
  "lineno": 311,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.transforms.DiagMatrix.backward": {
  "lineno": 294,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.transforms.DiagMatrix.backward_tensor": {
  "lineno": 300,
  "symbols_in_volume": [
   "tensorflow.matrix_diag_part",
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "gpflow.transforms.DiagMatrix.forward": {
  "lineno": 287,
  "symbols_in_volume": [
   "numpy.diag_indices",
   "numpy.s_",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "gpflow.transforms.DiagMatrix.forward_tensor": {
  "lineno": 304,
  "symbols_in_volume": [
   "tensorflow.matrix_diag",
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "gpflow.transforms.DiagMatrix.log_jacobian_tensor": {
  "lineno": 308,
  "symbols_in_volume": [
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "gpflow.transforms.Exp": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.transforms.Exp.__init__": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.transforms.Exp.__str__": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.transforms.Exp.backward": {
  "lineno": 114,
  "symbols_in_volume": [
   "numpy.log"
  ],
  "type": "function"
 },
 "gpflow.transforms.Exp.backward_tensor": {
  "lineno": 108,
  "symbols_in_volume": [
   "tensorflow.log"
  ],
  "type": "function"
 },
 "gpflow.transforms.Exp.forward": {
  "lineno": 111,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "gpflow.transforms.Exp.forward_tensor": {
  "lineno": 105,
  "symbols_in_volume": [
   "tensorflow.exp"
  ],
  "type": "function"
 },
 "gpflow.transforms.Exp.log_jacobian_tensor": {
  "lineno": 117,
  "symbols_in_volume": [
   "tensorflow.reduce_sum"
  ],
  "type": "function"
 },
 "gpflow.transforms.Identity": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.transforms.Identity.__str__": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.transforms.Identity.backward": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.transforms.Identity.backward_tensor": {
  "lineno": 45,
  "symbols_in_volume": [
   "tensorflow.identity"
  ],
  "type": "function"
 },
 "gpflow.transforms.Identity.forward": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.transforms.Identity.forward_tensor": {
  "lineno": 42,
  "symbols_in_volume": [
   "tensorflow.identity"
  ],
  "type": "function"
 },
 "gpflow.transforms.Identity.log_jacobian_tensor": {
  "lineno": 54,
  "symbols_in_volume": [
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "gpflow.transforms.Log1pe": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.transforms.Log1pe.__init__": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.transforms.Log1pe.__str__": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.transforms.Log1pe.backward": {
  "lineno": 162,
  "symbols_in_volume": [
   "numpy.expm1",
   "numpy.finfo",
   "numpy.log",
   "numpy.maximum"
  ],
  "type": "function"
 },
 "gpflow.transforms.Log1pe.backward_tensor": {
  "lineno": 155,
  "symbols_in_volume": [
   "tensorflow.as_dtype",
   "tensorflow.expm1",
   "tensorflow.log",
   "tensorflow.maximum"
  ],
  "type": "function"
 },
 "gpflow.transforms.Log1pe.forward": {
  "lineno": 145,
  "symbols_in_volume": [
   "numpy.logaddexp"
  ],
  "type": "function"
 },
 "gpflow.transforms.Log1pe.forward_tensor": {
  "lineno": 152,
  "symbols_in_volume": [
   "tensorflow.nn.softplus"
  ],
  "type": "function"
 },
 "gpflow.transforms.Log1pe.log_jacobian_tensor": {
  "lineno": 159,
  "symbols_in_volume": [
   "tensorflow.negative",
   "tensorflow.nn.softplus",
   "tensorflow.reduce_sum"
  ],
  "type": "function"
 },
 "gpflow.transforms.Logistic": {
  "lineno": 195,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.transforms.Logistic.__init__": {
  "lineno": 203,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.transforms.Logistic.__str__": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.transforms.Logistic.backward": {
  "lineno": 219,
  "symbols_in_volume": [
   "numpy.log"
  ],
  "type": "function"
 },
 "gpflow.transforms.Logistic.backward_tensor": {
  "lineno": 216,
  "symbols_in_volume": [
   "tensorflow.log"
  ],
  "type": "function"
 },
 "gpflow.transforms.Logistic.forward": {
  "lineno": 212,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "gpflow.transforms.Logistic.forward_tensor": {
  "lineno": 208,
  "symbols_in_volume": [
   "tensorflow.exp"
  ],
  "type": "function"
 },
 "gpflow.transforms.Logistic.log_jacobian_tensor": {
  "lineno": 222,
  "symbols_in_volume": [
   "numpy.log",
   "tensorflow.exp",
   "tensorflow.log",
   "tensorflow.reduce_sum"
  ],
  "type": "function"
 },
 "gpflow.transforms.LowerTriangular": {
  "lineno": 315,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.transforms.LowerTriangular.__init__": {
  "lineno": 331,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.transforms.LowerTriangular.__str__": {
  "lineno": 399,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.transforms.LowerTriangular.backward": {
  "lineno": 356,
  "symbols_in_volume": [
   "numpy.tril_indices",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "gpflow.transforms.LowerTriangular.backward_tensor": {
  "lineno": 378,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.arange",
   "numpy.array",
   "numpy.hstack",
   "numpy.tril_indices",
   "numpy.vstack",
   "tensorflow.expand_dims",
   "tensorflow.gather_nd",
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "gpflow.transforms.LowerTriangular.forward": {
  "lineno": 342,
  "symbols_in_volume": [
   "numpy.tril_indices",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "gpflow.transforms.LowerTriangular.forward_tensor": {
  "lineno": 368,
  "symbols_in_volume": [
   "tensorflow.squeeze"
  ],
  "type": "function"
 },
 "gpflow.transforms.LowerTriangular.log_jacobian_tensor": {
  "lineno": 393,
  "symbols_in_volume": [
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "gpflow.transforms.Rescale": {
  "lineno": 229,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.transforms.Rescale.__init__": {
  "lineno": 246,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.transforms.Rescale.__str__": {
  "lineno": 267,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.transforms.Rescale.backward": {
  "lineno": 258,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.transforms.Rescale.backward_tensor": {
  "lineno": 255,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.transforms.Rescale.forward": {
  "lineno": 252,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.transforms.Rescale.forward_tensor": {
  "lineno": 249,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.transforms.Rescale.log_jacobian_tensor": {
  "lineno": 261,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.log",
   "tensorflow.reduce_prod",
   "tensorflow.shape"
  ],
  "type": "function"
 },
 "gpflow.transforms.Transform": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gpflow.transforms.Transform.__call__": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gpflow.transforms.positiveRescale": {
  "lineno": 406,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.reference": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.reference.referenceArcCosineKernel": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.arccos",
   "numpy.clip",
   "numpy.cos",
   "numpy.empty",
   "numpy.pi",
   "numpy.sin",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "tests.reference.referencePeriodicKernel": {
  "lineno": 45,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.pi",
   "numpy.sin",
   "numpy.square",
   "numpy.sum"
  ],
  "type": "function"
 },
 "tests.reference.referenceRbfKernel": {
  "lineno": 3,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.exp",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "tests.test_actions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_actions.loop": {
  "lineno": 23,
  "symbols_in_volume": [
   "gpflow.actions.Loop",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_actions.test_loop_condition_break": {
  "lineno": 53,
  "symbols_in_volume": [
   "gpflow.actions.Condition"
  ],
  "type": "function"
 },
 "tests.test_actions.test_loop_condition_break.break_loop": {
  "lineno": 54,
  "symbols_in_volume": [
   "gpflow.actions.Loop.Break"
  ],
  "type": "function"
 },
 "tests.test_actions.test_loop_condition_break.count": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_actions.test_loop_condition_continue": {
  "lineno": 41,
  "symbols_in_volume": [
   "gpflow.actions.Condition"
  ],
  "type": "function"
 },
 "tests.test_actions.test_loop_condition_continue.continue_loop": {
  "lineno": 42,
  "symbols_in_volume": [
   "gpflow.actions.Loop.Continue"
  ],
  "type": "function"
 },
 "tests.test_actions.test_loop_condition_continue.count": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_actions.test_loop_simple": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_actions.test_loop_simple.fun": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_autoflow": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "tests.test_autoflow.AddModel": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_autoflow.AddModel.add": {
  "lineno": 86,
  "symbols_in_volume": [
   "gpflow.autoflow",
   "gpflow.params_as_tensors",
   "tensorflow.add",
   "tensorflow.float64"
  ],
  "type": "function"
 },
 "tests.test_autoflow.DumbModel": {
  "lineno": 25,
  "symbols_in_volume": [
   "gpflow.models.Model"
  ],
  "type": "class"
 },
 "tests.test_autoflow.DumbModel.__init__": {
  "lineno": 26,
  "symbols_in_volume": [
   "gpflow.Param",
   "gpflow.models.Model.__init__"
  ],
  "type": "function"
 },
 "tests.test_autoflow.DumbModel._build_likelihood": {
  "lineno": 30,
  "symbols_in_volume": [
   "gpflow.params_as_tensors",
   "tensorflow.square"
  ],
  "type": "function"
 },
 "tests.test_autoflow.IncrementModel": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_autoflow.IncrementModel.__init__": {
  "lineno": 117,
  "symbols_in_volume": [
   "gpflow.DataHolder",
   "numpy.array"
  ],
  "type": "function"
 },
 "tests.test_autoflow.IncrementModel.inc": {
  "lineno": 121,
  "symbols_in_volume": [
   "gpflow.autoflow",
   "gpflow.params_as_tensors",
   "tensorflow.float64"
  ],
  "type": "function"
 },
 "tests.test_autoflow.NoArgsModel": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_autoflow.NoArgsModel.function1": {
  "lineno": 36,
  "symbols_in_volume": [
   "gpflow.autoflow",
   "gpflow.params_as_tensors"
  ],
  "type": "function"
 },
 "tests.test_autoflow.NoArgsModel.function2": {
  "lineno": 41,
  "symbols_in_volume": [
   "gpflow.autoflow",
   "gpflow.params_as_tensors"
  ],
  "type": "function"
 },
 "tests.test_autoflow.TestDataHolder": {
  "lineno": 127,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_autoflow.TestDataHolder.test_add": {
  "lineno": 128,
  "symbols_in_volume": [
   "numpy.random.randn",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "tests.test_autoflow.TestFixAndPredict": {
  "lineno": 172,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_autoflow.TestFixAndPredict.prepare": {
  "lineno": 179,
  "symbols_in_volume": [
   "gpflow.kernels.Matern32",
   "gpflow.likelihoods.StudentT",
   "gpflow.models.SVGP",
   "numpy.random.RandomState",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "tests.test_autoflow.TestFixAndPredict.test": {
  "lineno": 189,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_autoflow.TestGPmodel": {
  "lineno": 136,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_autoflow.TestGPmodel.prepare": {
  "lineno": 137,
  "symbols_in_volume": [
   "gpflow.kernels.Matern32",
   "gpflow.likelihoods.StudentT",
   "gpflow.models.SVGP",
   "numpy.random.RandomState",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "tests.test_autoflow.TestGPmodel.test_multiple_AFs": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_autoflow.TestGPmodel.test_predict_density": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_autoflow.TestGPmodel.test_predict_f": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_autoflow.TestGPmodel.test_predict_y": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_autoflow.TestNoArgs": {
  "lineno": 46,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_autoflow.TestNoArgs.test_autoflow_functioning": {
  "lineno": 47,
  "symbols_in_volume": [
   "gpflow.core.AutoFlow.__autoflow_prefix__",
   "gpflow.core.AutoFlow.clear_autoflow",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_autoflow.TestNoArgs.test_autoflow_functioning.get_keys": {
  "lineno": 52,
  "symbols_in_volume": [
   "gpflow.core.AutoFlow.__autoflow_prefix__"
  ],
  "type": "function"
 },
 "tests.test_autoflow.TestShareArgs": {
  "lineno": 92,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_autoflow.TestShareArgs.setUp": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_autoflow.TestShareArgs.test_share_args": {
  "lineno": 103,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "tests.test_broadcasting": {
  "lineno": null,
  "symbols_in_volume": [
   "gpflow.kernels.ArcCosine",
   "gpflow.kernels.Constant",
   "gpflow.kernels.Cosine",
   "gpflow.kernels.Exponential",
   "gpflow.kernels.Linear",
   "gpflow.kernels.Matern12",
   "gpflow.kernels.Matern32",
   "gpflow.kernels.Matern52",
   "gpflow.kernels.Periodic",
   "gpflow.kernels.Polynomial",
   "gpflow.kernels.RBF",
   "gpflow.kernels.RationalQuadratic",
   "gpflow.kernels.White"
  ],
  "type": "module"
 },
 "tests.test_broadcasting._test_indices_active_dims": {
  "lineno": 65,
  "symbols_in_volume": [
   "numpy.random.randn",
   "tensorflow.identity"
  ],
  "type": "function"
 },
 "tests.test_broadcasting._test_no_active_dims": {
  "lineno": 48,
  "symbols_in_volume": [
   "gpflow.kernels.White",
   "numpy.random.randn",
   "tensorflow.identity"
  ],
  "type": "function"
 },
 "tests.test_broadcasting._test_slice_active_dims": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.random.randn",
   "tensorflow.identity"
  ],
  "type": "function"
 },
 "tests.test_broadcasting.compare_vs_map": {
  "lineno": 75,
  "symbols_in_volume": [
   "gpflow.settings.float_type",
   "numpy.testing.assert_allclose",
   "tensorflow.map_fn"
  ],
  "type": "function"
 },
 "tests.test_broadcasting.test_all_no_active_dims": {
  "lineno": 97,
  "symbols_in_volume": [
   "gpflow.test_util.session_tf",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "tests.test_broadcasting.test_rbf_indices_active_dims": {
  "lineno": 94,
  "symbols_in_volume": [
   "gpflow.kernels.RBF",
   "gpflow.test_util.session_tf"
  ],
  "type": "function"
 },
 "tests.test_broadcasting.test_rbf_no_active_dims": {
  "lineno": 88,
  "symbols_in_volume": [
   "gpflow.kernels.RBF",
   "gpflow.test_util.session_tf"
  ],
  "type": "function"
 },
 "tests.test_broadcasting.test_rbf_slice_active_dims": {
  "lineno": 91,
  "symbols_in_volume": [
   "gpflow.kernels.RBF",
   "gpflow.test_util.session_tf"
  ],
  "type": "function"
 },
 "tests.test_conditionals": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "tests.test_conditionals.DiagsTest": {
  "lineno": 26,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_conditionals.DiagsTest.prepare": {
  "lineno": 32,
  "symbols_in_volume": [
   "gpflow.kernels.Matern32",
   "gpflow.kernels.White",
   "gpflow.settings.float_type",
   "numpy.random.RandomState",
   "tensorflow.diag",
   "tensorflow.placeholder",
   "tensorflow.stack"
  ],
  "type": "function"
 },
 "tests.test_conditionals.DiagsTest.test_nonwhiten": {
  "lineno": 71,
  "symbols_in_volume": [
   "gpflow.conditionals.conditional",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_conditionals.DiagsTest.test_whiten": {
  "lineno": 55,
  "symbols_in_volume": [
   "gpflow.conditionals.conditional"
  ],
  "type": "function"
 },
 "tests.test_conditionals.WhitenTest": {
  "lineno": 87,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_conditionals.WhitenTest.prepare": {
  "lineno": 88,
  "symbols_in_volume": [
   "gpflow.kernels.Matern32",
   "gpflow.kernels.White",
   "gpflow.settings.float_type",
   "numpy.random.RandomState",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "tests.test_conditionals.WhitenTest.test_whiten": {
  "lineno": 107,
  "symbols_in_volume": [
   "gpflow.conditionals.conditional",
   "gpflow.settings.float_type",
   "numpy.testing.assert_allclose",
   "tensorflow.cholesky",
   "tensorflow.eye",
   "tensorflow.matrix_triangular_solve"
  ],
  "type": "function"
 },
 "tests.test_conditionals.WhitenTestGaussian": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_conditionals.WhitenTestGaussian.test_whiten": {
  "lineno": 132,
  "symbols_in_volume": [
   "gpflow.conditionals.conditional",
   "gpflow.settings.float_type",
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose",
   "tensorflow.cholesky",
   "tensorflow.diag",
   "tensorflow.matrix_triangular_solve",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "tests.test_config": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "tests.test_config.TestConfigParsing": {
  "lineno": 41,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_config.TestConfigParsing.setUp": {
  "lineno": 56,
  "symbols_in_volume": [
   "gpflow._settings._namedtuplify",
   "gpflow._settings._read_config_file"
  ],
  "type": "function"
 },
 "tests.test_config.TestConfigParsing.setUpClass": {
  "lineno": 44,
  "symbols_in_volume": [
   "os.path.join",
   "tensorflow.test.get_temp_dir"
  ],
  "type": "function"
 },
 "tests.test_config.TestConfigParsing.tearDownClass": {
  "lineno": 51,
  "symbols_in_volume": [
   "os.remove"
  ],
  "type": "function"
 },
 "tests.test_config.TestConfigParsing.test": {
  "lineno": 60,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "function"
 },
 "tests.test_config.TestConfigParsing.test_config_not_found": {
  "lineno": 70,
  "symbols_in_volume": [
   "gpflow._settings._read_config_file"
  ],
  "type": "function"
 },
 "tests.test_config.TestConfigParsing.test_parser": {
  "lineno": 75,
  "symbols_in_volume": [
   "gpflow._settings._parse",
   "tensorflow.int32"
  ],
  "type": "function"
 },
 "tests.test_config.TestSettingsManager": {
  "lineno": 98,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_config.TestSettingsManager.testContextManager": {
  "lineno": 126,
  "symbols_in_volume": [
   "gpflow.settings.get_settings",
   "gpflow.settings.temp_settings",
   "gpflow.settings.verbosity.tf_compile_verb"
  ],
  "type": "function"
 },
 "tests.test_config.TestSettingsManager.testDeprecated": {
  "lineno": 103,
  "symbols_in_volume": [
   "gpflow.settings"
  ],
  "type": "function"
 },
 "tests.test_config.TestSettingsManager.testMutability": {
  "lineno": 118,
  "symbols_in_volume": [
   "gpflow.settings.verbosity.tf_compile_verb"
  ],
  "type": "function"
 },
 "tests.test_config.TestSettingsManager.testRaises": {
  "lineno": 99,
  "symbols_in_volume": [
   "gpflow.settings.undefined_setting_to_raise_error"
  ],
  "type": "function"
 },
 "tests.test_config.test_logging": {
  "lineno": 137,
  "symbols_in_volume": [
   "gpflow.settings.logger",
   "gpflow.settings.logging.level",
   "gpflow.settings.logging_level",
   "inspect.currentframe",
   "inspect.getmodule"
  ],
  "type": "function"
 },
 "tests.test_config.test_logging.level_name": {
  "lineno": 138,
  "symbols_in_volume": [
   "logging.getLevelName"
  ],
  "type": "function"
 },
 "tests.test_core": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_core.TestTensorConverter": {
  "lineno": 24,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_core.TestTensorConverter.test_failures": {
  "lineno": 25,
  "symbols_in_volume": [
   "gpflow.GPflowError",
   "gpflow.core.parentable.Parentable",
   "gpflow.core.tensor_converter.TensorConverter.tensor_mode"
  ],
  "type": "function"
 },
 "tests.test_coregion": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "tests.test_coregion.TestEquivalence": {
  "lineno": 23,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_coregion.TestEquivalence.prepare": {
  "lineno": 28,
  "symbols_in_volume": [
   "gpflow.kernels.Coregion",
   "gpflow.kernels.RBF",
   "gpflow.likelihoods.Gaussian",
   "gpflow.likelihoods.SwitchedLikelihood",
   "gpflow.mean_functions.Constant",
   "gpflow.mean_functions.SwitchedMeanFunction",
   "gpflow.models.VGP",
   "numpy.concatenate",
   "numpy.cos",
   "numpy.hstack",
   "numpy.ones",
   "numpy.random.RandomState",
   "numpy.sin",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "tests.test_coregion.TestEquivalence.setup": {
  "lineno": 75,
  "symbols_in_volume": [
   "gpflow.train.ScipyOptimizer"
  ],
  "type": "function"
 },
 "tests.test_coregion.TestEquivalence.test_kernel_variance": {
  "lineno": 98,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_coregion.TestEquivalence.test_likelihood_variance": {
  "lineno": 88,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_coregion.TestEquivalence.test_mean_values": {
  "lineno": 108,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_coregion.TestEquivalence.test_predicts": {
  "lineno": 118,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.array",
   "numpy.cos",
   "numpy.hstack",
   "numpy.ones",
   "numpy.sin",
   "numpy.testing.assert_allclose",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "tests.test_data_object": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "tests.test_data_object.Foo": {
  "lineno": 25,
  "symbols_in_volume": [
   "gpflow.models.Model"
  ],
  "type": "class"
 },
 "tests.test_data_object.Foo._build_likelihood": {
  "lineno": 26,
  "symbols_in_volume": [
   "gpflow.settings.float_type",
   "tensorflow.constant"
  ],
  "type": "function"
 },
 "tests.test_data_object.TestDataHolderIntegers": {
  "lineno": 83,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_data_object.TestDataHolderIntegers.prepare": {
  "lineno": 84,
  "symbols_in_volume": [
   "gpflow.DataHolder",
   "gpflow.settings.int_type",
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "tests.test_data_object.TestDataHolderIntegers.test_same_shape": {
  "lineno": 97,
  "symbols_in_volume": [
   "gpflow.settings.int_type",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_data_object.TestDataHolderIntegers.test_types": {
  "lineno": 91,
  "symbols_in_volume": [
   "gpflow.settings.int_type"
  ],
  "type": "function"
 },
 "tests.test_data_object.TestDataHolderModels": {
  "lineno": 106,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_data_object.TestDataHolderModels.prepare": {
  "lineno": 111,
  "symbols_in_volume": [
   "gpflow.kernels.Matern32",
   "numpy.cos",
   "numpy.random.RandomState",
   "numpy.sin"
  ],
  "type": "function"
 },
 "tests.test_data_object.TestDataHolderModels.test_gpmc": {
  "lineno": 134,
  "symbols_in_volume": [
   "gpflow.likelihoods.StudentT",
   "gpflow.models.GPMC",
   "numpy.cos",
   "numpy.sin"
  ],
  "type": "function"
 },
 "tests.test_data_object.TestDataHolderModels.test_gpr": {
  "lineno": 118,
  "symbols_in_volume": [
   "gpflow.models.GPR"
  ],
  "type": "function"
 },
 "tests.test_data_object.TestDataHolderModels.test_sgpmc": {
  "lineno": 145,
  "symbols_in_volume": [
   "gpflow.likelihoods.StudentT",
   "gpflow.models.SGPMC"
  ],
  "type": "function"
 },
 "tests.test_data_object.TestDataHolderModels.test_sgpr": {
  "lineno": 126,
  "symbols_in_volume": [
   "gpflow.models.SGPR"
  ],
  "type": "function"
 },
 "tests.test_data_object.TestDataHolderModels.test_svgp": {
  "lineno": 153,
  "symbols_in_volume": [
   "gpflow.likelihoods.StudentT",
   "gpflow.models.SVGP"
  ],
  "type": "function"
 },
 "tests.test_data_object.TestDataHolderModels.test_vgp": {
  "lineno": 161,
  "symbols_in_volume": [
   "gpflow.likelihoods.StudentT",
   "gpflow.models.VGP",
   "numpy.cos",
   "numpy.sin"
  ],
  "type": "function"
 },
 "tests.test_data_object.TestDataHolderSimple": {
  "lineno": 29,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_data_object.TestDataHolderSimple.prepare": {
  "lineno": 30,
  "symbols_in_volume": [
   "gpflow.DataHolder",
   "gpflow.defer_build",
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "tests.test_data_object.TestDataHolderSimple.test_raise": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_data_object.TestDataHolderSimple.test_same_shape": {
  "lineno": 58,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_data_object.TestDataHolderSimple.test_types": {
  "lineno": 41,
  "symbols_in_volume": [
   "gpflow.settings.float_type"
  ],
  "type": "function"
 },
 "tests.test_dataholders": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_dataholders.TestDataholder": {
  "lineno": 26,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_dataholders.TestDataholder.test_create_dataholder": {
  "lineno": 27,
  "symbols_in_volume": [
   "gpflow.DataHolder",
   "gpflow.settings.float_type",
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "numpy.ones",
   "tensorflow.get_variable"
  ],
  "type": "function"
 },
 "tests.test_dataholders.TestDataholder.test_failed_creation": {
  "lineno": 92,
  "symbols_in_volume": [
   "gpflow.DataHolder",
   "tensorflow.get_variable"
  ],
  "type": "function"
 },
 "tests.test_dataholders.TestDataholder.test_fixed_shape": {
  "lineno": 106,
  "symbols_in_volume": [
   "gpflow.DataHolder",
   "numpy.testing.assert_allclose",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "tests.test_dataholders.TestDataholder.test_is_built": {
  "lineno": 83,
  "symbols_in_volume": [
   "gpflow.DataHolder",
   "gpflow.GPflowError",
   "tensorflow.Graph"
  ],
  "type": "function"
 },
 "tests.test_dataholders.TestMinibatch": {
  "lineno": 140,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_dataholders.TestMinibatch.test_change_batch_size": {
  "lineno": 211,
  "symbols_in_volume": [
   "gpflow.Minibatch",
   "numpy.random.randn",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_dataholders.TestMinibatch.test_change_batch_size.check_batch_size": {
  "lineno": 219,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_dataholders.TestMinibatch.test_change_variable_size": {
  "lineno": 196,
  "symbols_in_volume": [
   "gpflow.Minibatch",
   "gpflow.Parameterized",
   "numpy.random.randn",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_dataholders.TestMinibatch.test_clear": {
  "lineno": 148,
  "symbols_in_volume": [
   "gpflow.Build.NO",
   "gpflow.Build.YES",
   "gpflow.GPflowError",
   "gpflow.Minibatch",
   "numpy.random.randn",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_dataholders.TestMinibatch.test_create": {
  "lineno": 141,
  "symbols_in_volume": [
   "gpflow.Minibatch",
   "tensorflow.get_variable"
  ],
  "type": "function"
 },
 "tests.test_dataholders.TestMinibatch.test_seed": {
  "lineno": 169,
  "symbols_in_volume": [
   "gpflow.Build.YES",
   "gpflow.GPflowError",
   "gpflow.Minibatch",
   "numpy.random.randn",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_expectations": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.random.RandomState"
  ],
  "type": "module"
 },
 "tests.test_expectations.Data": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.stack",
   "numpy.transpose",
   "numpy.zeros"
  ],
  "type": "class"
 },
 "tests.test_expectations._check": {
  "lineno": 191,
  "symbols_in_volume": [
   "gpflow.expectations.expectation",
   "gpflow.expectations.quadrature_expectation",
   "numpy.testing.assert_allclose",
   "tensorflow.get_default_session"
  ],
  "type": "function"
 },
 "tests.test_expectations.const_mean": {
  "lineno": 181,
  "symbols_in_volume": [
   "gpflow.mean_functions.Constant",
   "gpflow.test_util.cache_tensor"
  ],
  "type": "function"
 },
 "tests.test_expectations.dirac_diag": {
  "lineno": 84,
  "symbols_in_volume": [
   "gpflow.probability_distributions.DiagonalGaussian",
   "gpflow.test_util.cache_tensor",
   "numpy.zeros",
   "tensorflow.convert_to_tensor"
  ],
  "type": "function"
 },
 "tests.test_expectations.dirac_gauss": {
  "lineno": 70,
  "symbols_in_volume": [
   "gpflow.probability_distributions.Gaussian",
   "gpflow.test_util.cache_tensor",
   "numpy.zeros",
   "tensorflow.convert_to_tensor"
  ],
  "type": "function"
 },
 "tests.test_expectations.dirac_markov_gauss": {
  "lineno": 98,
  "symbols_in_volume": [
   "gpflow.probability_distributions.MarkovGaussian",
   "gpflow.test_util.cache_tensor",
   "numpy.zeros",
   "tensorflow.convert_to_tensor"
  ],
  "type": "function"
 },
 "tests.test_expectations.feature": {
  "lineno": 54,
  "symbols_in_volume": [
   "gpflow.features.InducingPoints",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_expectations.feature2": {
  "lineno": 59,
  "symbols_in_volume": [
   "gpflow.features.InducingPoints",
   "gpflow.test_util.cache_tensor"
  ],
  "type": "function"
 },
 "tests.test_expectations.gauss": {
  "lineno": 63,
  "symbols_in_volume": [
   "gpflow.probability_distributions.Gaussian",
   "gpflow.test_util.cache_tensor",
   "tensorflow.convert_to_tensor"
  ],
  "type": "function"
 },
 "tests.test_expectations.gauss_diag": {
  "lineno": 77,
  "symbols_in_volume": [
   "gpflow.probability_distributions.DiagonalGaussian",
   "gpflow.test_util.cache_tensor",
   "tensorflow.convert_to_tensor"
  ],
  "type": "function"
 },
 "tests.test_expectations.identity_mean": {
  "lineno": 175,
  "symbols_in_volume": [
   "gpflow.mean_functions.Identity",
   "gpflow.test_util.cache_tensor"
  ],
  "type": "function"
 },
 "tests.test_expectations.lin_kern": {
  "lineno": 114,
  "symbols_in_volume": [
   "gpflow.kernels.Linear",
   "gpflow.test_util.cache_tensor"
  ],
  "type": "function"
 },
 "tests.test_expectations.lin_kern_act_dim_0": {
  "lineno": 160,
  "symbols_in_volume": [
   "gpflow.kernels.Linear",
   "gpflow.test_util.cache_tensor"
  ],
  "type": "function"
 },
 "tests.test_expectations.lin_kern_act_dim_1": {
  "lineno": 165,
  "symbols_in_volume": [
   "gpflow.kernels.Linear",
   "gpflow.test_util.cache_tensor"
  ],
  "type": "function"
 },
 "tests.test_expectations.lin_mean": {
  "lineno": 170,
  "symbols_in_volume": [
   "gpflow.mean_functions.Linear",
   "gpflow.test_util.cache_tensor"
  ],
  "type": "function"
 },
 "tests.test_expectations.markov_gauss": {
  "lineno": 91,
  "symbols_in_volume": [
   "gpflow.probability_distributions.MarkovGaussian",
   "gpflow.test_util.cache_tensor",
   "tensorflow.convert_to_tensor"
  ],
  "type": "function"
 },
 "tests.test_expectations.matern_kern": {
  "lineno": 119,
  "symbols_in_volume": [
   "gpflow.kernels.Matern32",
   "gpflow.test_util.cache_tensor"
  ],
  "type": "function"
 },
 "tests.test_expectations.rbf_kern": {
  "lineno": 105,
  "symbols_in_volume": [
   "gpflow.kernels.RBF",
   "gpflow.test_util.cache_tensor"
  ],
  "type": "function"
 },
 "tests.test_expectations.rbf_kern_2": {
  "lineno": 109,
  "symbols_in_volume": [
   "gpflow.kernels.RBF",
   "gpflow.test_util.cache_tensor"
  ],
  "type": "function"
 },
 "tests.test_expectations.rbf_kern_act_dim_0": {
  "lineno": 150,
  "symbols_in_volume": [
   "gpflow.kernels.RBF",
   "gpflow.test_util.cache_tensor"
  ],
  "type": "function"
 },
 "tests.test_expectations.rbf_kern_act_dim_1": {
  "lineno": 155,
  "symbols_in_volume": [
   "gpflow.kernels.RBF",
   "gpflow.test_util.cache_tensor"
  ],
  "type": "function"
 },
 "tests.test_expectations.rbf_lin_prod_kern": {
  "lineno": 142,
  "symbols_in_volume": [
   "gpflow.kernels.Linear",
   "gpflow.kernels.Product",
   "gpflow.kernels.RBF",
   "gpflow.test_util.cache_tensor"
  ],
  "type": "function"
 },
 "tests.test_expectations.rbf_lin_sum_kern": {
  "lineno": 124,
  "symbols_in_volume": [
   "gpflow.kernels.Linear",
   "gpflow.kernels.RBF",
   "gpflow.kernels.Sum",
   "gpflow.test_util.cache_tensor"
  ],
  "type": "function"
 },
 "tests.test_expectations.rbf_lin_sum_kern2": {
  "lineno": 132,
  "symbols_in_volume": [
   "gpflow.kernels.Linear",
   "gpflow.kernels.RBF",
   "gpflow.kernels.Sum",
   "gpflow.test_util.cache_tensor"
  ],
  "type": "function"
 },
 "tests.test_expectations.test_RBF_eKzxKxz_gradient_not_NaN": {
  "lineno": 271,
  "symbols_in_volume": [
   "gpflow.expectations.expectation",
   "gpflow.features.InducingPoints",
   "gpflow.kernels.RBF",
   "gpflow.probability_distributions.Gaussian",
   "gpflow.settings.tf_float",
   "gpflow.test_util.session_tf.run",
   "numpy.isnan",
   "tensorflow.constant",
   "tensorflow.gradients"
  ],
  "type": "function"
 },
 "tests.test_expectations.test_cov_shape_inference": {
  "lineno": 328,
  "symbols_in_volume": [
   "gpflow.probability_distributions.MarkovGaussian",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "tests.test_expectations.test_eKdiag_no_uncertainty": {
  "lineno": 235,
  "symbols_in_volume": [
   "gpflow.expectations.expectation",
   "gpflow.test_util.session_tf.run",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "tests.test_expectations.test_eKxz_no_uncertainty": {
  "lineno": 243,
  "symbols_in_volume": [
   "gpflow.expectations.expectation",
   "gpflow.test_util.session_tf.run",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "tests.test_expectations.test_eKzxKxz_different_sum_kernels": {
  "lineno": 298,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_expectations.test_eKzxKxz_no_uncertainty": {
  "lineno": 261,
  "symbols_in_volume": [
   "gpflow.expectations.expectation",
   "gpflow.test_util.session_tf.run",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "tests.test_expectations.test_eKzxKxz_rbf_cross_covariance": {
  "lineno": 336,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "tests.test_expectations.test_eKzxKxz_same_vs_different_sum_kernels": {
  "lineno": 303,
  "symbols_in_volume": [
   "copy.copy",
   "gpflow.expectations.expectation",
   "numpy.testing.assert_allclose",
   "tensorflow.get_default_session"
  ],
  "type": "function"
 },
 "tests.test_expectations.test_eKzxKxz_separate_dims_simplification": {
  "lineno": 291,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "tests.test_expectations.test_eMxKxz_no_uncertainty": {
  "lineno": 251,
  "symbols_in_volume": [
   "gpflow.expectations.expectation",
   "gpflow.test_util.session_tf.run",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "tests.test_expectations.test_exKxz_markov": {
  "lineno": 314,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "tests.test_expectations.test_exKxz_markov_no_uncertainty": {
  "lineno": 319,
  "symbols_in_volume": [
   "gpflow.expectations.expectation",
   "gpflow.test_util.session_tf.run",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "tests.test_expectations.test_kernel_mean_function_expectations": {
  "lineno": 223,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "tests.test_expectations.test_kernel_only_expectations": {
  "lineno": 212,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "tests.test_expectations.test_mean_function_only_expectations": {
  "lineno": 201,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "tests.test_expectations.zero_mean": {
  "lineno": 186,
  "symbols_in_volume": [
   "gpflow.mean_functions.Zero",
   "gpflow.test_util.cache_tensor"
  ],
  "type": "function"
 },
 "tests.test_features": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "tests.test_features.TestFeaturesPsdSchur": {
  "lineno": 72,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_features.TestFeaturesPsdSchur.test_matrix_psd": {
  "lineno": 73,
  "symbols_in_volume": [
   "gpflow.features.InducingPoints",
   "gpflow.features.Multiscale",
   "gpflow.kernels.Matern12",
   "gpflow.kernels.RBF",
   "gpflow.settings.jitter",
   "numpy.all",
   "numpy.linalg.eig",
   "numpy.linalg.solve",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "tests.test_features.TestFeaturesPsdSchur.test_matrix_psd.init_feat": {
  "lineno": 77,
  "symbols_in_volume": [
   "gpflow.features.InducingPoints",
   "gpflow.features.Multiscale",
   "numpy.random.rand",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "tests.test_features.TestInducingPoints": {
  "lineno": 22,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_features.TestInducingPoints.test_feature_len": {
  "lineno": 23,
  "symbols_in_volume": [
   "gpflow.features.InducingPoints",
   "gpflow.params_as_tensors_for",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "tests.test_features.TestInducingPoints.test_inducing_points_equivalence": {
  "lineno": 34,
  "symbols_in_volume": [
   "gpflow.features.InducingPoints",
   "gpflow.kernels.Periodic",
   "gpflow.kernels.RBF",
   "numpy.allclose",
   "numpy.array",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "tests.test_features.TestMultiScaleInducing": {
  "lineno": 49,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_features.TestMultiScaleInducing.prepare": {
  "lineno": 50,
  "symbols_in_volume": [
   "gpflow.features.InducingPoints",
   "gpflow.features.Multiscale",
   "gpflow.kernels.RBF",
   "numpy.array",
   "numpy.random.randn",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "tests.test_features.TestMultiScaleInducing.test_equivalence_inducing_points": {
  "lineno": 57,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.max",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "tests.test_gplvm": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.random.seed",
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "tests.test_gplvm.TestBayesianGPLVM": {
  "lineno": 54,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_gplvm.TestBayesianGPLVM.setUp": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "tests.test_gplvm.TestBayesianGPLVM.test_1d": {
  "lineno": 64,
  "symbols_in_volume": [
   "gpflow.kernels.RBF",
   "gpflow.models.BayesianGPLVM",
   "gpflow.train.ScipyOptimizer",
   "numpy.expand_dims",
   "numpy.linspace",
   "numpy.ones",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "tests.test_gplvm.TestBayesianGPLVM.test_2d": {
  "lineno": 82,
  "symbols_in_volume": [
   "gpflow.kernels.RBF",
   "gpflow.models.BayesianGPLVM",
   "gpflow.models.PCA_reduce",
   "gpflow.train.ScipyOptimizer",
   "numpy.allclose",
   "numpy.diag",
   "numpy.ones"
  ],
  "type": "function"
 },
 "tests.test_gplvm.TestGPLVM": {
  "lineno": 25,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_gplvm.TestGPLVM.setUp": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "tests.test_gplvm.TestGPLVM.test_optimise": {
  "lineno": 35,
  "symbols_in_volume": [
   "gpflow.models.GPLVM",
   "gpflow.train.ScipyOptimizer"
  ],
  "type": "function"
 },
 "tests.test_gplvm.TestGPLVM.test_otherkernel": {
  "lineno": 43,
  "symbols_in_volume": [
   "gpflow.kernels.Periodic",
   "gpflow.models.GPLVM",
   "gpflow.train.ScipyOptimizer"
  ],
  "type": "function"
 },
 "tests.test_hmc": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "tests.test_hmc.CheckTrainingVariableState": {
  "lineno": 153,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_hmc.CheckTrainingVariableState.check_last_variables_state": {
  "lineno": 186,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "tests.test_hmc.CheckTrainingVariableState.model": {
  "lineno": 154,
  "symbols_in_volume": [
   "gpflow.kernels.Matern32",
   "gpflow.likelihoods.StudentT",
   "gpflow.models.GPMC",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "tests.test_hmc.CheckTrainingVariableState.test_last_update": {
  "lineno": 161,
  "symbols_in_volume": [
   "gpflow.train.HMC"
  ],
  "type": "function"
 },
 "tests.test_hmc.CheckTrainingVariableState.test_multiple_runs": {
  "lineno": 178,
  "symbols_in_volume": [
   "gpflow.train.HMC"
  ],
  "type": "function"
 },
 "tests.test_hmc.CheckTrainingVariableState.test_with_fixed": {
  "lineno": 168,
  "symbols_in_volume": [
   "gpflow.train.HMC"
  ],
  "type": "function"
 },
 "tests.test_hmc.Quadratic": {
  "lineno": 118,
  "symbols_in_volume": [
   "gpflow.models.Model"
  ],
  "type": "class"
 },
 "tests.test_hmc.Quadratic.__init__": {
  "lineno": 119,
  "symbols_in_volume": [
   "gpflow.Param",
   "gpflow.settings.float_type",
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "tests.test_hmc.Quadratic._build_likelihood": {
  "lineno": 123,
  "symbols_in_volume": [
   "gpflow.params_as_tensors",
   "tensorflow.reduce_sum",
   "tensorflow.square"
  ],
  "type": "function"
 },
 "tests.test_hmc.SampleGaussianTest": {
  "lineno": 26,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_hmc.SampleGaussianTest.Gauss": {
  "lineno": 27,
  "symbols_in_volume": [
   "gpflow.models.Model"
  ],
  "type": "class"
 },
 "tests.test_hmc.SampleGaussianTest.Gauss.__init__": {
  "lineno": 28,
  "symbols_in_volume": [
   "gpflow.Param",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "tests.test_hmc.SampleGaussianTest.Gauss._build_likelihood": {
  "lineno": 34,
  "symbols_in_volume": [
   "gpflow.settings.float_type",
   "tensorflow.constant"
  ],
  "type": "function"
 },
 "tests.test_hmc.SampleGaussianTest.Gauss.build_objective": {
  "lineno": 31,
  "symbols_in_volume": [
   "gpflow.params_as_tensors",
   "tensorflow.reduce_sum",
   "tensorflow.square"
  ],
  "type": "function"
 },
 "tests.test_hmc.SampleGaussianTest.setUp": {
  "lineno": 37,
  "symbols_in_volume": [
   "gpflow.defer_build",
   "gpflow.train.HMC",
   "tensorflow.set_random_seed"
  ],
  "type": "function"
 },
 "tests.test_hmc.SampleGaussianTest.test_burn": {
  "lineno": 91,
  "symbols_in_volume": [
   "numpy.all"
  ],
  "type": "function"
 },
 "tests.test_hmc.SampleGaussianTest.test_columns_names": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_hmc.SampleGaussianTest.test_mean_cov": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.cov",
   "numpy.eye",
   "numpy.float32"
  ],
  "type": "function"
 },
 "tests.test_hmc.SampleGaussianTest.test_rng": {
  "lineno": 63,
  "symbols_in_volume": [
   "numpy.all",
   "tensorflow.set_random_seed"
  ],
  "type": "function"
 },
 "tests.test_hmc.SampleGaussianTest.test_rng.get_samples": {
  "lineno": 67,
  "symbols_in_volume": [
   "gpflow.train.HMC",
   "numpy.array",
   "numpy.float32"
  ],
  "type": "function"
 },
 "tests.test_hmc.SampleModelTest": {
  "lineno": 128,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_hmc.SampleModelTest.setUp": {
  "lineno": 133,
  "symbols_in_volume": [
   "tensorflow.set_random_seed"
  ],
  "type": "function"
 },
 "tests.test_hmc.SampleModelTest.test_mean": {
  "lineno": 136,
  "symbols_in_volume": [
   "gpflow.train.HMC",
   "numpy.array",
   "numpy.float32",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_almost_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "tests.test_kerns": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "tests.test_kerns.TestARDActiveProd": {
  "lineno": 449,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_kerns.TestARDActiveProd.setUp": {
  "lineno": 450,
  "symbols_in_volume": [
   "gpflow.kernels.RBF",
   "numpy.array",
   "numpy.random.RandomState",
   "tensorflow.Graph"
  ],
  "type": "function"
 },
 "tests.test_kerns.TestARDActiveProd.test": {
  "lineno": 463,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.random.randn",
   "tensorflow.float64",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "tests.test_kerns.TestARDInit": {
  "lineno": 476,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_kerns.TestARDInit.setUp": {
  "lineno": 482,
  "symbols_in_volume": [
   "tensorflow.Graph"
  ],
  "type": "function"
 },
 "tests.test_kerns.TestARDInit.test_MLP": {
  "lineno": 500,
  "symbols_in_volume": [
   "gpflow.kernels.ArcCosine",
   "numpy.all",
   "numpy.ones"
  ],
  "type": "function"
 },
 "tests.test_kerns.TestARDInit.test_init": {
  "lineno": 493,
  "symbols_in_volume": [
   "gpflow.kernels.RBF"
  ],
  "type": "function"
 },
 "tests.test_kerns.TestARDInit.test_scalar": {
  "lineno": 485,
  "symbols_in_volume": [
   "gpflow.kernels.RBF",
   "numpy.all",
   "numpy.ones"
  ],
  "type": "function"
 },
 "tests.test_kerns.TestAdd": {
  "lineno": 315,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_kerns.TestAdd.setUp": {
  "lineno": 321,
  "symbols_in_volume": [
   "gpflow.kernels.Linear",
   "gpflow.kernels.RBF",
   "numpy.random.RandomState",
   "tensorflow.Graph"
  ],
  "type": "function"
 },
 "tests.test_kerns.TestAdd.test_asym": {
  "lineno": 341,
  "symbols_in_volume": [
   "numpy.allclose",
   "tensorflow.float64",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "tests.test_kerns.TestAdd.test_sym": {
  "lineno": 331,
  "symbols_in_volume": [
   "numpy.allclose",
   "tensorflow.float64",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "tests.test_kerns.TestArcCosine": {
  "lineno": 68,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_kerns.TestArcCosine.evalKernelError": {
  "lineno": 72,
  "symbols_in_volume": [
   "gpflow.kernels.ArcCosine",
   "gpflow.settings.float_type",
   "numpy.testing.assert_allclose",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "tests.test_kerns.TestArcCosine.setUp": {
  "lineno": 69,
  "symbols_in_volume": [
   "tensorflow.Graph"
  ],
  "type": "function"
 },
 "tests.test_kerns.TestArcCosine.test_1d": {
  "lineno": 96,
  "symbols_in_volume": [
   "gpflow.kernels.ArcCosine.implemented_orders",
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "tests.test_kerns.TestArcCosine.test_3d": {
  "lineno": 112,
  "symbols_in_volume": [
   "gpflow.kernels.ArcCosine.implemented_orders",
   "numpy.array",
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "tests.test_kerns.TestArcCosine.test_nan_in_gradient": {
  "lineno": 150,
  "symbols_in_volume": [
   "gpflow.kernels.ArcCosine",
   "numpy.any",
   "numpy.isnan",
   "numpy.random.RandomState",
   "tensorflow.float64",
   "tensorflow.gradients",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "tests.test_kerns.TestArcCosine.test_non_implemented_order": {
  "lineno": 128,
  "symbols_in_volume": [
   "gpflow.kernels.ArcCosine"
  ],
  "type": "function"
 },
 "tests.test_kerns.TestArcCosine.test_weight_initializations": {
  "lineno": 133,
  "symbols_in_volume": [
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "tests.test_kerns.TestCoregion": {
  "lineno": 204,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_kerns.TestCoregion.setUp": {
  "lineno": 205,
  "symbols_in_volume": [
   "gpflow.kernels.Coregion",
   "numpy.random.RandomState",
   "numpy.random.randint",
   "tensorflow.Graph"
  ],
  "type": "function"
 },
 "tests.test_kerns.TestCoregion.tearDown": {
  "lineno": 215,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase.tearDown"
  ],
  "type": "function"
 },
 "tests.test_kerns.TestCoregion.test_diag": {
  "lineno": 227,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.diag"
  ],
  "type": "function"
 },
 "tests.test_kerns.TestCoregion.test_shape": {
  "lineno": 219,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_kerns.TestCoregion.test_slice": {
  "lineno": 234,
  "symbols_in_volume": [
   "gpflow.kernels.Coregion",
   "gpflow.kernels.RBF",
   "numpy.allclose",
   "numpy.hstack"
  ],
  "type": "function"
 },
 "tests.test_kerns.TestKernDiags": {
  "lineno": 281,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_kerns.TestKernDiags.setUp": {
  "lineno": 282,
  "symbols_in_volume": [
   "gpflow.kernels.ArcCosine",
   "gpflow.kernels.ArcCosine.implemented_orders",
   "gpflow.kernels.Constant",
   "gpflow.kernels.Linear",
   "gpflow.kernels.Periodic",
   "gpflow.kernels.Polynomial",
   "gpflow.kernels.RBF",
   "gpflow.kernels.Stationary.__subclasses__",
   "numpy.random.RandomState",
   "tensorflow.Graph"
  ],
  "type": "function"
 },
 "tests.test_kerns.TestKernDiags.test": {
  "lineno": 302,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.random.RandomState",
   "tensorflow.diag_part",
   "tensorflow.float64",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "tests.test_kerns.TestKernSymmetry": {
  "lineno": 248,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_kerns.TestKernSymmetry.setUp": {
  "lineno": 249,
  "symbols_in_volume": [
   "gpflow.kernels.ArcCosine",
   "gpflow.kernels.Constant",
   "gpflow.kernels.Linear",
   "gpflow.kernels.Polynomial",
   "gpflow.kernels.Stationary.__subclasses__",
   "numpy.random.RandomState",
   "tensorflow.Graph"
  ],
  "type": "function"
 },
 "tests.test_kerns.TestKernSymmetry.test_1d": {
  "lineno": 258,
  "symbols_in_volume": [
   "numpy.allclose",
   "tensorflow.float64",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "tests.test_kerns.TestKernSymmetry.test_5d": {
  "lineno": 269,
  "symbols_in_volume": [
   "numpy.allclose",
   "tensorflow.float64",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "tests.test_kerns.TestPeriodic": {
  "lineno": 166,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_kerns.TestPeriodic.evalKernelError": {
  "lineno": 170,
  "symbols_in_volume": [
   "gpflow.kernels.Periodic",
   "gpflow.settings.float_type",
   "numpy.testing.assert_allclose",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "tests.test_kerns.TestPeriodic.setUp": {
  "lineno": 167,
  "symbols_in_volume": [
   "tensorflow.Graph"
  ],
  "type": "function"
 },
 "tests.test_kerns.TestPeriodic.test_1d": {
  "lineno": 182,
  "symbols_in_volume": [
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "tests.test_kerns.TestPeriodic.test_2d": {
  "lineno": 192,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.random.RandomState",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "tests.test_kerns.TestProd": {
  "lineno": 421,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_kerns.TestProd.setUp": {
  "lineno": 422,
  "symbols_in_volume": [
   "gpflow.kernels.Matern32",
   "gpflow.kernels.Matern52",
   "tensorflow.Graph"
  ],
  "type": "function"
 },
 "tests.test_kerns.TestProd.tearDown": {
  "lineno": 430,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase.tearDown"
  ],
  "type": "function"
 },
 "tests.test_kerns.TestProd.test_prod": {
  "lineno": 434,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.random.randn",
   "tensorflow.float64",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "tests.test_kerns.TestRQ": {
  "lineno": 46,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_kerns.TestRQ.setUp": {
  "lineno": 47,
  "symbols_in_volume": [
   "tensorflow.Graph"
  ],
  "type": "function"
 },
 "tests.test_kerns.TestRQ.test_1d": {
  "lineno": 50,
  "symbols_in_volume": [
   "gpflow.kernels.RBF",
   "gpflow.kernels.RationalQuadratic",
   "gpflow.settings.float_type",
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "tests.test_kerns.TestRbf": {
  "lineno": 26,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_kerns.TestRbf.setUp": {
  "lineno": 27,
  "symbols_in_volume": [
   "tensorflow.Graph"
  ],
  "type": "function"
 },
 "tests.test_kerns.TestRbf.test_1d": {
  "lineno": 30,
  "symbols_in_volume": [
   "gpflow.kernels.RBF",
   "gpflow.settings.float_type",
   "numpy.allclose",
   "numpy.random.RandomState",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "tests.test_kerns.TestSlice": {
  "lineno": 372,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_kerns.TestSlice.kernels": {
  "lineno": 378,
  "symbols_in_volume": [
   "copy.deepcopy",
   "gpflow.kernels.Constant",
   "gpflow.kernels.Linear",
   "gpflow.kernels.Polynomial",
   "gpflow.kernels.Stationary.__subclasses__"
  ],
  "type": "function"
 },
 "tests.test_kerns.TestSlice.test_asymm": {
  "lineno": 406,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.random.RandomState",
   "tensorflow.Graph"
  ],
  "type": "function"
 },
 "tests.test_kerns.TestSlice.test_symm": {
  "lineno": 393,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.random.RandomState",
   "tensorflow.Graph"
  ],
  "type": "function"
 },
 "tests.test_kerns.TestWhite": {
  "lineno": 354,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_kerns.TestWhite.test": {
  "lineno": 360,
  "symbols_in_volume": [
   "gpflow.kernels.White",
   "numpy.allclose",
   "numpy.random.RandomState",
   "tensorflow.float64",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "tests.test_kerns.test_slice_active_dim_regression": {
  "lineno": 508,
  "symbols_in_volume": [
   "gpflow.kernels.RBF"
  ],
  "type": "function"
 },
 "tests.test_kldiv": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "tests.test_kldiv.Datum": {
  "lineno": 41,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.random.RandomState"
  ],
  "type": "class"
 },
 "tests.test_kldiv.I": {
  "lineno": 71,
  "symbols_in_volume": [
   "pytest.fixture",
   "tensorflow.convert_to_tensor"
  ],
  "type": "function"
 },
 "tests.test_kldiv.K": {
  "lineno": 59,
  "symbols_in_volume": [
   "pytest.fixture",
   "tensorflow.convert_to_tensor"
  ],
  "type": "function"
 },
 "tests.test_kldiv.K_batch": {
  "lineno": 63,
  "symbols_in_volume": [
   "pytest.fixture",
   "tensorflow.convert_to_tensor"
  ],
  "type": "function"
 },
 "tests.test_kldiv.make_K_batch_data": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.eye",
   "numpy.transpose"
  ],
  "type": "function"
 },
 "tests.test_kldiv.make_sqrt_data": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.tril"
  ],
  "type": "function"
 },
 "tests.test_kldiv.mu": {
  "lineno": 51,
  "symbols_in_volume": [
   "pytest.fixture",
   "tensorflow.convert_to_tensor"
  ],
  "type": "function"
 },
 "tests.test_kldiv.sqrt": {
  "lineno": 67,
  "symbols_in_volume": [
   "pytest.fixture",
   "tensorflow.convert_to_tensor"
  ],
  "type": "function"
 },
 "tests.test_kldiv.sqrt_diag": {
  "lineno": 55,
  "symbols_in_volume": [
   "pytest.fixture",
   "tensorflow.convert_to_tensor"
  ],
  "type": "function"
 },
 "tests.test_kldiv.squareT": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_kldiv.test_diags": {
  "lineno": 75,
  "symbols_in_volume": [
   "gpflow.kullback_leiblers.gauss_kl",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "tensorflow.diag",
   "tensorflow.stack"
  ],
  "type": "function"
 },
 "tests.test_kldiv.test_oned": {
  "lineno": 131,
  "symbols_in_volume": [
   "gpflow.kullback_leiblers.gauss_kl",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "tests.test_kldiv.test_sumkl_equals_batchkl": {
  "lineno": 102,
  "symbols_in_volume": [
   "gpflow.kullback_leiblers.gauss_kl",
   "numpy.testing.assert_almost_equal",
   "pytest.mark.parametrize",
   "tensorflow.reduce_sum"
  ],
  "type": "function"
 },
 "tests.test_kldiv.test_unknown_size_inputs": {
  "lineno": 148,
  "symbols_in_volume": [
   "gpflow.kullback_leiblers.gauss_kl",
   "gpflow.settings.float_type",
   "gpflow.test_util.session_tf.run",
   "numpy.ones",
   "numpy.testing.assert_allclose",
   "tensorflow.constant",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "tests.test_kldiv.test_whitened": {
  "lineno": 89,
  "symbols_in_volume": [
   "gpflow.kullback_leiblers.gauss_kl",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "tensorflow.diag",
   "tensorflow.stack"
  ],
  "type": "function"
 },
 "tests.test_kldiv.tf_kl_1d": {
  "lineno": 125,
  "symbols_in_volume": [
   "tensorflow.log",
   "tensorflow.ones_like",
   "tensorflow.reduce_sum",
   "tensorflow.square"
  ],
  "type": "function"
 },
 "tests.test_likelihoods": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "tests.test_likelihoods.LikelihoodSetup": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_likelihoods.LikelihoodSetup.__init__": {
  "lineno": 25,
  "symbols_in_volume": [
   "gpflow.likelihoods.Likelihood.predict_density"
  ],
  "type": "function"
 },
 "tests.test_likelihoods.TestMonteCarlo": {
  "lineno": 197,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_likelihoods.TestMonteCarlo.setUp": {
  "lineno": 198,
  "symbols_in_volume": [
   "gpflow.settings.float_type",
   "numpy.random.RandomState",
   "tensorflow.Graph"
  ],
  "type": "function"
 },
 "tests.test_likelihoods.TestMonteCarlo.test_pred_density": {
  "lineno": 220,
  "symbols_in_volume": [
   "gpflow.likelihoods.Gaussian.predict_density",
   "gpflow.likelihoods.GaussianMC",
   "numpy.testing.assert_allclose",
   "tensorflow.set_random_seed"
  ],
  "type": "function"
 },
 "tests.test_likelihoods.TestMonteCarlo.test_pred_mean_and_var": {
  "lineno": 234,
  "symbols_in_volume": [
   "gpflow.likelihoods.Gaussian.predict_mean_and_var",
   "gpflow.likelihoods.GaussianMC",
   "numpy.testing.assert_allclose",
   "tensorflow.set_random_seed"
  ],
  "type": "function"
 },
 "tests.test_likelihoods.TestMonteCarlo.test_var_exp": {
  "lineno": 205,
  "symbols_in_volume": [
   "gpflow.likelihoods.Gaussian.variational_expectations",
   "gpflow.likelihoods.GaussianMC",
   "numpy.testing.assert_allclose",
   "tensorflow.set_random_seed"
  ],
  "type": "function"
 },
 "tests.test_likelihoods.TestMulticlassIndexFix": {
  "lineno": 422,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_likelihoods.TestMulticlassIndexFix.testA": {
  "lineno": 427,
  "symbols_in_volume": [
   "gpflow.likelihoods.MultiClass",
   "gpflow.settings.float_type",
   "tensorflow.gradients",
   "tensorflow.int32",
   "tensorflow.placeholder",
   "tensorflow.reduce_sum"
  ],
  "type": "function"
 },
 "tests.test_likelihoods.TestPredictConditional": {
  "lineno": 73,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_likelihoods.TestPredictConditional.prepare": {
  "lineno": 83,
  "symbols_in_volume": [
   "gpflow.settings.float_type",
   "numpy.random.RandomState",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "tests.test_likelihoods.TestPredictConditional.setUp": {
  "lineno": 80,
  "symbols_in_volume": [
   "tensorflow.Graph"
  ],
  "type": "function"
 },
 "tests.test_likelihoods.TestPredictConditional.test_mean": {
  "lineno": 91,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_likelihoods.TestPredictConditional.test_var_exp": {
  "lineno": 113,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_likelihoods.TestPredictConditional.test_variance": {
  "lineno": 102,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_likelihoods.TestQuadrature": {
  "lineno": 131,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_likelihoods.TestQuadrature.setUp": {
  "lineno": 137,
  "symbols_in_volume": [
   "gpflow.settings.float_type",
   "numpy.random.RandomState",
   "tensorflow.Graph"
  ],
  "type": "function"
 },
 "tests.test_likelihoods.TestQuadrature.test_pred_density": {
  "lineno": 163,
  "symbols_in_volume": [
   "gpflow.likelihoods.Likelihood.predict_density",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_likelihoods.TestQuadrature.test_pred_mean_and_var": {
  "lineno": 180,
  "symbols_in_volume": [
   "gpflow.likelihoods.Likelihood.predict_mean_and_var",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_likelihoods.TestQuadrature.test_var_exp": {
  "lineno": 145,
  "symbols_in_volume": [
   "gpflow.likelihoods.Likelihood.variational_expectations",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_likelihoods.TestRobustMaxMulticlass": {
  "lineno": 326,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_likelihoods.TestRobustMaxMulticlass.setUp": {
  "lineno": 331,
  "symbols_in_volume": [
   "tensorflow.Graph"
  ],
  "type": "function"
 },
 "tests.test_likelihoods.TestRobustMaxMulticlass.testEpsK1Changes": {
  "lineno": 402,
  "symbols_in_volume": [
   "gpflow.likelihoods.RobustMax"
  ],
  "type": "function"
 },
 "tests.test_likelihoods.TestRobustMaxMulticlass.testPredictDensity": {
  "lineno": 372,
  "symbols_in_volume": [
   "gpflow.likelihoods.MultiClass",
   "gpflow.settings.float_type",
   "numpy.ones",
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "tests.test_likelihoods.TestRobustMaxMulticlass.testPredictDensity.MockRobustMax": {
  "lineno": 377,
  "symbols_in_volume": [
   "gpflow.likelihoods.RobustMax"
  ],
  "type": "class"
 },
 "tests.test_likelihoods.TestRobustMaxMulticlass.testPredictDensity.MockRobustMax.prob_is_largest": {
  "lineno": 378,
  "symbols_in_volume": [
   "gpflow.settings.float_type",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "tests.test_likelihoods.TestRobustMaxMulticlass.testSymmetric": {
  "lineno": 334,
  "symbols_in_volume": [
   "gpflow.likelihoods.MultiClass",
   "gpflow.settings.float_type",
   "numpy.allclose",
   "numpy.log",
   "numpy.ones",
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "tests.test_likelihoods.TestSoftMax": {
  "lineno": 250,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_likelihoods.TestSoftMax.prepare": {
  "lineno": 255,
  "symbols_in_volume": [
   "gpflow.settings.int_type",
   "numpy.array",
   "numpy.ones",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "tests.test_likelihoods.TestSoftMax.prepare.make_tensor": {
  "lineno": 258,
  "symbols_in_volume": [
   "gpflow.settings.float_type",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "tests.test_likelihoods.TestSoftMax.setUp": {
  "lineno": 251,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "tensorflow.Graph"
  ],
  "type": "function"
 },
 "tests.test_likelihoods.TestSoftMax.test_bernoulli_equivalence": {
  "lineno": 286,
  "symbols_in_volume": [
   "gpflow.likelihoods.Bernoulli",
   "gpflow.likelihoods.SoftMax",
   "numpy.testing.assert_allclose",
   "tensorflow.exp",
   "tensorflow.shape",
   "tensorflow.stack",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "tests.test_likelihoods.TestSoftMax.test_bernoulli_equivalence.logistic_link": {
  "lineno": 293,
  "symbols_in_volume": [
   "tensorflow.exp"
  ],
  "type": "function"
 },
 "tests.test_likelihoods.TestSoftMax.test_y_shape_assert": {
  "lineno": 270,
  "symbols_in_volume": [
   "gpflow.likelihoods.SoftMax",
   "tensorflow.errors.InvalidArgumentError"
  ],
  "type": "function"
 },
 "tests.test_likelihoods.TestSwitchedLikelihood": {
  "lineno": 437,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_likelihoods.TestSwitchedLikelihood.setUp": {
  "lineno": 443,
  "symbols_in_volume": [
   "gpflow.likelihoods.Gaussian",
   "gpflow.likelihoods.SwitchedLikelihood",
   "numpy.concatenate",
   "numpy.exp",
   "numpy.hstack",
   "numpy.ones",
   "numpy.random.RandomState",
   "tensorflow.Graph"
  ],
  "type": "function"
 },
 "tests.test_likelihoods.TestSwitchedLikelihood.test_logp": {
  "lineno": 470,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_likelihoods.TestSwitchedLikelihood.test_predict_density": {
  "lineno": 480,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_likelihoods.TestSwitchedLikelihood.test_variational_expectations": {
  "lineno": 495,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_likelihoods.TestSwitchedLikelihoodRegression": {
  "lineno": 511,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_likelihoods.TestSwitchedLikelihoodRegression.setUp": {
  "lineno": 519,
  "symbols_in_volume": [
   "gpflow.likelihoods.StudentT",
   "gpflow.likelihoods.SwitchedLikelihood",
   "numpy.hstack",
   "numpy.random.RandomState",
   "numpy.random.randint",
   "numpy.random.randn",
   "tensorflow.Graph"
  ],
  "type": "function"
 },
 "tests.test_likelihoods.TestSwitchedLikelihoodRegression.test_bad_num_latent": {
  "lineno": 537,
  "symbols_in_volume": [
   "gpflow.kernels.Matern12",
   "gpflow.models.VGP",
   "tensorflow.errors.InvalidArgumentError"
  ],
  "type": "function"
 },
 "tests.test_likelihoods.TestSwitchedLikelihoodRegression.test_correct_num_latent": {
  "lineno": 531,
  "symbols_in_volume": [
   "gpflow.kernels.Matern12",
   "gpflow.models.VGP"
  ],
  "type": "function"
 },
 "tests.test_likelihoods.getLikelihoodSetups": {
  "lineno": 31,
  "symbols_in_volume": [
   "gpflow.likelihoods.Bernoulli",
   "gpflow.likelihoods.Exponential",
   "gpflow.likelihoods.Gamma",
   "gpflow.likelihoods.Likelihood.__subclasses__",
   "gpflow.likelihoods.MonteCarloLikelihood",
   "gpflow.likelihoods.MultiClass",
   "gpflow.likelihoods.Ordinal",
   "gpflow.likelihoods.Poisson",
   "gpflow.likelihoods.SwitchedLikelihood",
   "gpflow.settings.float_type",
   "numpy.argmax",
   "numpy.array",
   "numpy.random.RandomState",
   "tensorflow.square"
  ],
  "type": "function"
 },
 "tests.test_likelihoods.getLikelihoodSetups.sigmoid": {
  "lineno": 65,
  "symbols_in_volume": [
   "tensorflow.exp"
  ],
  "type": "function"
 },
 "tests.test_logdensities": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.random.RandomState"
  ],
  "type": "module"
 },
 "tests.test_logdensities.test_multivariate_normal": {
  "lineno": 29,
  "symbols_in_volume": [
   "gpflow.logdensities.multivariate_normal",
   "gpflow.settings.float_type",
   "gpflow.test_util.session_tf.run",
   "numpy.dot",
   "numpy.eye",
   "numpy.linalg.cholesky",
   "numpy.random.randn",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "pytest.raises",
   "scipy.stats.multivariate_normal.logpdf",
   "tensorflow.convert_to_tensor",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "tests.test_mean_functions": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "tests.test_mean_functions.TestBug277Regression": {
  "lineno": 383,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_mean_functions.TestBug277Regression.test": {
  "lineno": 387,
  "symbols_in_volume": [
   "gpflow.mean_functions.Linear"
  ],
  "type": "function"
 },
 "tests.test_mean_functions.TestMeanFuncs": {
  "lineno": 27,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_mean_functions.TestMeanFuncs.composition_mfs": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_mean_functions.TestMeanFuncs.composition_mfs_add": {
  "lineno": 55,
  "symbols_in_volume": [
   "itertools.product"
  ],
  "type": "function"
 },
 "tests.test_mean_functions.TestMeanFuncs.composition_mfs_mult": {
  "lineno": 61,
  "symbols_in_volume": [
   "itertools.product"
  ],
  "type": "function"
 },
 "tests.test_mean_functions.TestMeanFuncs.mfs1": {
  "lineno": 37,
  "symbols_in_volume": [
   "gpflow.mean_functions.Constant",
   "gpflow.mean_functions.Linear",
   "gpflow.mean_functions.Zero",
   "gpflow.settings.float_type",
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "tests.test_mean_functions.TestMeanFuncs.mfs2": {
  "lineno": 46,
  "symbols_in_volume": [
   "gpflow.mean_functions.Constant",
   "gpflow.mean_functions.Linear",
   "gpflow.mean_functions.Zero",
   "gpflow.settings.float_type",
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "tests.test_mean_functions.TestMeanFuncs.test_add_output_shape": {
  "lineno": 79,
  "symbols_in_volume": [
   "gpflow.settings.float_type",
   "numpy.random.randn",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "tests.test_mean_functions.TestMeanFuncs.test_basic_output_shape": {
  "lineno": 70,
  "symbols_in_volume": [
   "gpflow.settings.float_type",
   "numpy.random.randn",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "tests.test_mean_functions.TestMeanFuncs.test_combination_types": {
  "lineno": 107,
  "symbols_in_volume": [
   "gpflow.mean_functions.Additive",
   "gpflow.mean_functions.Product"
  ],
  "type": "function"
 },
 "tests.test_mean_functions.TestMeanFuncs.test_composition_output_shape": {
  "lineno": 97,
  "symbols_in_volume": [
   "gpflow.settings.float_type",
   "numpy.random.randn",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "tests.test_mean_functions.TestMeanFuncs.test_mult_output_shape": {
  "lineno": 88,
  "symbols_in_volume": [
   "gpflow.settings.float_type",
   "numpy.random.randn",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "tests.test_mean_functions.TestModelCompositionOperations": {
  "lineno": 115,
  "symbols_in_volume": [
   "gpflow.settings.float_type",
   "gpflow.test_util.GPflowTestCase",
   "numpy.random.RandomState"
  ],
  "type": "class"
 },
 "tests.test_mean_functions.TestModelCompositionOperations.a_b_plus_c": {
  "lineno": 175,
  "symbols_in_volume": [
   "gpflow.mean_functions.Additive",
   "gpflow.mean_functions.Product"
  ],
  "type": "function"
 },
 "tests.test_mean_functions.TestModelCompositionOperations.a_minus_a": {
  "lineno": 208,
  "symbols_in_volume": [
   "gpflow.mean_functions.Additive"
  ],
  "type": "function"
 },
 "tests.test_mean_functions.TestModelCompositionOperations.ab_plus_ac": {
  "lineno": 190,
  "symbols_in_volume": [
   "gpflow.mean_functions.Additive",
   "gpflow.mean_functions.Product"
  ],
  "type": "function"
 },
 "tests.test_mean_functions.TestModelCompositionOperations.comp_minus_constituent1": {
  "lineno": 219,
  "symbols_in_volume": [
   "gpflow.mean_functions.Additive"
  ],
  "type": "function"
 },
 "tests.test_mean_functions.TestModelCompositionOperations.comp_minus_constituent2": {
  "lineno": 231,
  "symbols_in_volume": [
   "gpflow.mean_functions.Additive"
  ],
  "type": "function"
 },
 "tests.test_mean_functions.TestModelCompositionOperations.initials": {
  "lineno": 129,
  "symbols_in_volume": [
   "gpflow.mean_functions.Constant",
   "gpflow.mean_functions.Linear",
   "gpflow.settings.float_type"
  ],
  "type": "function"
 },
 "tests.test_mean_functions.TestModelCompositionOperations.setUp": {
  "lineno": 242,
  "symbols_in_volume": [
   "gpflow.kernels.Bias",
   "gpflow.mean_functions.Zero",
   "gpflow.models.GPR",
   "gpflow.settings.float_type",
   "tensorflow.Graph"
  ],
  "type": "function"
 },
 "tests.test_mean_functions.TestModelCompositionOperations.test_inverse_operations": {
  "lineno": 291,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.isclose",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_mean_functions.TestModelCompositionOperations.test_precedence": {
  "lineno": 277,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_mean_functions.TestModelsWithMeanFuncs": {
  "lineno": 312,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_mean_functions.TestModelsWithMeanFuncs.setUp": {
  "lineno": 323,
  "symbols_in_volume": [
   "gpflow.kernels.Matern32",
   "gpflow.likelihoods.Gaussian",
   "gpflow.mean_functions.Constant",
   "gpflow.mean_functions.Zero",
   "gpflow.models.GPMC",
   "gpflow.models.GPR",
   "gpflow.models.GPRFITC",
   "gpflow.models.SGPMC",
   "gpflow.models.SGPR",
   "gpflow.models.SVGP",
   "gpflow.models.VGP",
   "gpflow.settings.float_type",
   "numpy.ones",
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "tests.test_mean_functions.TestModelsWithMeanFuncs.test_basic_mean_function": {
  "lineno": 353,
  "symbols_in_volume": [
   "numpy.all"
  ],
  "type": "function"
 },
 "tests.test_mean_functions.TestSwitchedMeanFunction": {
  "lineno": 364,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_mean_functions.TestSwitchedMeanFunction.test": {
  "lineno": 369,
  "symbols_in_volume": [
   "gpflow.mean_functions.Constant",
   "gpflow.mean_functions.SwitchedMeanFunction",
   "numpy.array",
   "numpy.hstack",
   "numpy.int",
   "numpy.ones",
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "tests.test_method_equivalence": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "tests.test_method_equivalence.TestEquivalence": {
  "lineno": 26,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_method_equivalence.TestEquivalence.prepare": {
  "lineno": 45,
  "symbols_in_volume": [
   "gpflow.kernels.RBF",
   "gpflow.likelihoods.Gaussian",
   "gpflow.mean_functions.Constant",
   "gpflow.models.GPR",
   "gpflow.models.GPRFITC",
   "gpflow.models.SGPR",
   "gpflow.models.SVGP",
   "gpflow.models.VGP",
   "numpy.cos",
   "numpy.random.RandomState",
   "numpy.sin",
   "numpy.tile"
  ],
  "type": "function"
 },
 "tests.test_method_equivalence.TestEquivalence.test_all": {
  "lineno": 83,
  "symbols_in_volume": [
   "gpflow.train.ScipyOptimizer",
   "numpy.array",
   "numpy.testing.assert_allclose",
   "tensorflow.negative"
  ],
  "type": "function"
 },
 "tests.test_method_equivalence.TestUpperBound": {
  "lineno": 231,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_method_equivalence.TestUpperBound.setUp": {
  "lineno": 236,
  "symbols_in_volume": [
   "numpy.pi",
   "numpy.random.rand",
   "numpy.random.randn",
   "numpy.sin"
  ],
  "type": "function"
 },
 "tests.test_method_equivalence.TestUpperBound.test_few_inducing_points": {
  "lineno": 240,
  "symbols_in_volume": [
   "gpflow.kernels.RBF",
   "gpflow.models.GPR",
   "gpflow.models.SGPR",
   "gpflow.train.ScipyOptimizer"
  ],
  "type": "function"
 },
 "tests.test_method_equivalence.VGPTest": {
  "lineno": 111,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_method_equivalence.VGPTest.test_vgp_vs_opper_archambeau": {
  "lineno": 148,
  "symbols_in_volume": [
   "gpflow.kernels.Matern52",
   "gpflow.likelihoods.StudentT",
   "gpflow.models.SVGP",
   "gpflow.models.VGP",
   "gpflow.models.VGP_opper_archambeau",
   "gpflow.settings.jitter",
   "numpy.array",
   "numpy.diag",
   "numpy.einsum",
   "numpy.eye",
   "numpy.linalg.cholesky",
   "numpy.linalg.inv",
   "numpy.random.randn",
   "numpy.random.seed",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_method_equivalence.VGPTest.test_vgp_vs_svgp": {
  "lineno": 112,
  "symbols_in_volume": [
   "gpflow.kernels.Matern52",
   "gpflow.likelihoods.StudentT",
   "gpflow.models.SVGP",
   "gpflow.models.VGP",
   "numpy.random.randn",
   "numpy.random.seed",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_methods": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "tests.test_methods.TestMethods": {
  "lineno": 24,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_methods.TestMethods.prepare": {
  "lineno": 25,
  "symbols_in_volume": [
   "gpflow.kernels.Matern32",
   "gpflow.likelihoods.Gaussian",
   "gpflow.models.GPMC",
   "gpflow.models.GPR",
   "gpflow.models.GPRFITC",
   "gpflow.models.SGPMC",
   "gpflow.models.SGPR",
   "gpflow.models.SVGP",
   "gpflow.models.VGP",
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "tests.test_methods.TestMethods.test_all": {
  "lineno": 46,
  "symbols_in_volume": [
   "gpflow.Build.YES"
  ],
  "type": "function"
 },
 "tests.test_methods.TestMethods.test_predict_density": {
  "lineno": 71,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_methods.TestMethods.test_predict_f": {
  "lineno": 53,
  "symbols_in_volume": [
   "numpy.full_like",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_array_less"
  ],
  "type": "function"
 },
 "tests.test_methods.TestMethods.test_predict_y": {
  "lineno": 62,
  "symbols_in_volume": [
   "numpy.full_like",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_array_less"
  ],
  "type": "function"
 },
 "tests.test_methods.TestSVGP": {
  "lineno": 80,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_methods.TestSVGP.setUp": {
  "lineno": 88,
  "symbols_in_volume": [
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "tests.test_methods.TestSVGP.test_notwhite": {
  "lineno": 121,
  "symbols_in_volume": [
   "gpflow.kernels.RBF",
   "gpflow.kernels.White",
   "gpflow.likelihoods.Exponential",
   "gpflow.models.SVGP",
   "numpy.array",
   "numpy.diag",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_methods.TestSVGP.test_q_sqrt_fixing": {
  "lineno": 149,
  "symbols_in_volume": [
   "gpflow.kernels.RBF",
   "gpflow.kernels.White",
   "gpflow.likelihoods.Exponential",
   "gpflow.models.SVGP"
  ],
  "type": "function"
 },
 "tests.test_methods.TestSVGP.test_white": {
  "lineno": 94,
  "symbols_in_volume": [
   "gpflow.kernels.RBF",
   "gpflow.likelihoods.Exponential",
   "gpflow.models.SVGP",
   "numpy.array",
   "numpy.diag",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_methods.TestSparseMCMC": {
  "lineno": 257,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_methods.TestSparseMCMC.test_likelihoods_and_gradients": {
  "lineno": 262,
  "symbols_in_volume": [
   "gpflow.kernels.Exponential",
   "gpflow.likelihoods.StudentT",
   "gpflow.models.GPMC",
   "gpflow.models.SGPMC",
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_methods.TestStochasticGradients": {
  "lineno": 161,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_methods.TestStochasticGradients.check_models_close": {
  "lineno": 205,
  "symbols_in_volume": [
   "numpy.allclose"
  ],
  "type": "function"
 },
 "tests.test_methods.TestStochasticGradients.compare_models": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_methods.TestStochasticGradients.get_indexed_data": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_methods.TestStochasticGradients.get_indexed_model": {
  "lineno": 200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_methods.TestStochasticGradients.get_model": {
  "lineno": 188,
  "symbols_in_volume": [
   "gpflow.kernels.RBF",
   "gpflow.likelihoods.Gaussian",
   "gpflow.models.SVGP"
  ],
  "type": "function"
 },
 "tests.test_methods.TestStochasticGradients.get_opt": {
  "lineno": 195,
  "symbols_in_volume": [
   "gpflow.train.GradientDescentOptimizer"
  ],
  "type": "function"
 },
 "tests.test_methods.TestStochasticGradients.setUp": {
  "lineno": 175,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.atleast_2d",
   "tensorflow.set_random_seed"
  ],
  "type": "function"
 },
 "tests.test_methods.TestStochasticGradients.testOne": {
  "lineno": 236,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_methods.TestStochasticGradients.testThree": {
  "lineno": 250,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_methods.TestStochasticGradients.testTwo": {
  "lineno": 243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_misc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_misc.TestPublicMethods": {
  "lineno": 22,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_misc.TestPublicMethods.run_case": {
  "lineno": 24,
  "symbols_in_volume": [
   "tensorflow.Graph",
   "tensorflow.get_default_session"
  ],
  "type": "function"
 },
 "tests.test_misc.TestPublicMethods.test_remove_trainable": {
  "lineno": 125,
  "symbols_in_volume": [
   "gpflow.misc.remove_from_trainables",
   "tensorflow.Graph",
   "tensorflow.get_variable"
  ],
  "type": "function"
 },
 "tests.test_misc.TestPublicMethods.test_tensor_by_name": {
  "lineno": 38,
  "symbols_in_volume": [
   "gpflow.misc.get_tensor_by_name",
   "gpflow.misc.is_initializable_tensor",
   "tensorflow.Graph",
   "tensorflow.get_default_session",
   "tensorflow.get_variable"
  ],
  "type": "function"
 },
 "tests.test_misc.TestPublicMethods.test_tensor_by_name.equal": {
  "lineno": 44,
  "symbols_in_volume": [
   "gpflow.misc.is_initializable_tensor"
  ],
  "type": "function"
 },
 "tests.test_misc.TestPublicMethods.test_tensor_by_name.not_equal": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_misc.TestPublicMethods.test_valid_param": {
  "lineno": 93,
  "symbols_in_volume": [
   "gpflow.misc.is_valid_param_value",
   "numpy.array",
   "tensorflow.get_variable"
  ],
  "type": "function"
 },
 "tests.test_misc.TestPublicMethods.test_variable_by_name": {
  "lineno": 68,
  "symbols_in_volume": [
   "gpflow.misc.get_variable_by_name",
   "gpflow.misc.is_initializable_tensor",
   "tensorflow.Graph",
   "tensorflow.get_default_session",
   "tensorflow.get_variable"
  ],
  "type": "function"
 },
 "tests.test_misc.TestPublicMethods.test_variable_by_name.equal": {
  "lineno": 74,
  "symbols_in_volume": [
   "gpflow.misc.is_initializable_tensor"
  ],
  "type": "function"
 },
 "tests.test_misc.TestPublicMethods.test_variable_by_name.not_equal": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_model": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "tests.test_model.Empty": {
  "lineno": 51,
  "symbols_in_volume": [
   "gpflow.models.Model"
  ],
  "type": "class"
 },
 "tests.test_model.Empty.__init__": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_model.Empty._build_likelihood": {
  "lineno": 56,
  "symbols_in_volume": [
   "gpflow.settings.float_type",
   "tensorflow.convert_to_tensor"
  ],
  "type": "function"
 },
 "tests.test_model.EmptyTest": {
  "lineno": 60,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_model.EmptyTest.test_compile_model_without_parameters": {
  "lineno": 61,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "tests.test_model.EmptyTest.test_objective_tensor": {
  "lineno": 78,
  "symbols_in_volume": [
   "gpflow.misc.is_tensor"
  ],
  "type": "function"
 },
 "tests.test_model.EmptyTest.test_parameters_list_empty": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_model.EvalDataSVGP": {
  "lineno": 174,
  "symbols_in_volume": [
   "gpflow.models.SVGP"
  ],
  "type": "class"
 },
 "tests.test_model.EvalDataSVGP.XY": {
  "lineno": 175,
  "symbols_in_volume": [
   "gpflow.decors.autoflow",
   "gpflow.decors.params_as_tensors"
  ],
  "type": "function"
 },
 "tests.test_model.KeyboardRaiser": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_model.KeyboardRaiser.__call__": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_model.KeyboardRaiser.__init__": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_model.Quadratic": {
  "lineno": 24,
  "symbols_in_volume": [
   "gpflow.models.Model"
  ],
  "type": "class"
 },
 "tests.test_model.Quadratic.__init__": {
  "lineno": 25,
  "symbols_in_volume": [
   "gpflow.Param",
   "gpflow.models.Model.__init__",
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "tests.test_model.Quadratic._build_likelihood": {
  "lineno": 30,
  "symbols_in_volume": [
   "gpflow.params_as_tensors",
   "tensorflow.negative",
   "tensorflow.reduce_sum",
   "tensorflow.square"
  ],
  "type": "function"
 },
 "tests.test_model.ReplaceParameterTest": {
  "lineno": 86,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_model.ReplaceParameterTest.Origin": {
  "lineno": 88,
  "symbols_in_volume": [
   "gpflow.models.Model"
  ],
  "type": "class"
 },
 "tests.test_model.ReplaceParameterTest.Origin.__init__": {
  "lineno": 89,
  "symbols_in_volume": [
   "gpflow.Param"
  ],
  "type": "function"
 },
 "tests.test_model.ReplaceParameterTest.Origin._build_likelihood": {
  "lineno": 94,
  "symbols_in_volume": [
   "gpflow.params_as_tensors",
   "tensorflow.square"
  ],
  "type": "function"
 },
 "tests.test_model.ReplaceParameterTest.test_replace_parameter": {
  "lineno": 98,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "tests.test_model.ReplaceParameterTest.test_replace_parameter.OriginAllDataholders": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_model.ReplaceParameterTest.test_replace_parameter.OriginAllDataholders.__init__": {
  "lineno": 105,
  "symbols_in_volume": [
   "gpflow.DataHolder",
   "numpy.array"
  ],
  "type": "function"
 },
 "tests.test_model.ReplaceParameterTest.test_replace_parameter.OriginSuccess": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_model.ReplaceParameterTest.test_replace_parameter.OriginSuccess.__init__": {
  "lineno": 100,
  "symbols_in_volume": [
   "gpflow.Param",
   "numpy.array"
  ],
  "type": "function"
 },
 "tests.test_model.TestLikelihoodAutoflow": {
  "lineno": 145,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_model.TestLikelihoodAutoflow.test_lik_and_prior": {
  "lineno": 146,
  "symbols_in_volume": [
   "gpflow.priors.Gamma",
   "tensorflow.Graph"
  ],
  "type": "function"
 },
 "tests.test_model.TestMinibatchSVGP": {
  "lineno": 181,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_model.TestMinibatchSVGP.test_minibatch_sync": {
  "lineno": 182,
  "symbols_in_volume": [
   "gpflow.kernels.RBF",
   "gpflow.likelihoods.Gaussian",
   "numpy.allclose",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "tests.test_model.TestName": {
  "lineno": 165,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_model.TestName.test_name": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_model.TestOptimize": {
  "lineno": 35,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_model.TestOptimize.test_adam": {
  "lineno": 36,
  "symbols_in_volume": [
   "gpflow.train.AdamOptimizer"
  ],
  "type": "function"
 },
 "tests.test_model.TestOptimize.test_lbfgsb": {
  "lineno": 43,
  "symbols_in_volume": [
   "gpflow.train.ScipyOptimizer"
  ],
  "type": "function"
 },
 "tests.test_model.setup_sgpr": {
  "lineno": 138,
  "symbols_in_volume": [
   "gpflow.kernels.RBF",
   "gpflow.models.SGPR",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "tests.test_monitor": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple",
   "matplotlib.use"
  ],
  "type": "module"
 },
 "tests.test_monitor.DummyLinearModel": {
  "lineno": 44,
  "symbols_in_volume": [
   "gpflow.models.Model"
  ],
  "type": "class"
 },
 "tests.test_monitor.DummyLinearModel.__init__": {
  "lineno": 46,
  "symbols_in_volume": [
   "gpflow.params.DataHolder",
   "gpflow.params.Parameter",
   "numpy.float",
   "numpy.ndarray",
   "numpy.ones",
   "typing.Optional"
  ],
  "type": "function"
 },
 "tests.test_monitor.DummyLinearModel._build_likelihood": {
  "lineno": 61,
  "symbols_in_volume": [
   "gpflow.decors.params_as_tensors",
   "gpflow.logdensities.gaussian",
   "tensorflow.expand_dims",
   "tensorflow.matmul",
   "tensorflow.reduce_sum"
  ],
  "type": "function"
 },
 "tests.test_monitor.TestCallbackTask": {
  "lineno": 219,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_monitor.TestCallbackTask.test_callback": {
  "lineno": 221,
  "symbols_in_volume": [
   "gpflow.training.monitor.CallbackTask",
   "gpflow.training.monitor.MonitorContext",
   "mock.MagicMock"
  ],
  "type": "function"
 },
 "tests.test_monitor.TestCheckpointTask": {
  "lineno": 243,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_monitor.TestCheckpointTask._create_dummy_variable": {
  "lineno": 293,
  "symbols_in_volume": [
   "tensorflow.Session",
   "tensorflow.Variable",
   "tensorflow.int32",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "tests.test_monitor.TestCheckpointTask._test_chechpoint_roundtrip": {
  "lineno": 259,
  "symbols_in_volume": [
   "gpflow.test_util.session_context",
   "gpflow.training.monitor.CheckpointTask",
   "gpflow.training.monitor.MonitorContext",
   "gpflow.training.monitor.create_global_step",
   "gpflow.training.monitor.restore_session",
   "tempfile.TemporaryDirectory",
   "tensorflow.Graph",
   "typing.Optional"
  ],
  "type": "function"
 },
 "tests.test_monitor.TestCheckpointTask.test_checkpoint_with_global_step": {
  "lineno": 252,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_monitor.TestCheckpointTask.test_checkpoint_without_global_step": {
  "lineno": 245,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_monitor.TestGenericCondition": {
  "lineno": 132,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_monitor.TestGenericCondition.test_condition": {
  "lineno": 134,
  "symbols_in_volume": [
   "gpflow.training.monitor.GenericCondition",
   "gpflow.training.monitor.MonitorContext"
  ],
  "type": "function"
 },
 "tests.test_monitor.TestGrowingIntervalCondition": {
  "lineno": 165,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_monitor.TestGrowingIntervalCondition.test_sequence": {
  "lineno": 167,
  "symbols_in_volume": [
   "gpflow.training.monitor.GrowingIntervalCondition._growing_step_sequence"
  ],
  "type": "function"
 },
 "tests.test_monitor.TestGrowingIntervalCondition.test_sequence_with_init_value": {
  "lineno": 176,
  "symbols_in_volume": [
   "gpflow.training.monitor.GrowingIntervalCondition._growing_step_sequence"
  ],
  "type": "function"
 },
 "tests.test_monitor.TestHistogramToTensorBoardTask": {
  "lineno": 488,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_monitor.TestHistogramToTensorBoardTask.test_histogram_tensorboard": {
  "lineno": 490,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_monitor.TestHistogramToTensorBoardTask.test_histogram_tensorboard.task_factory": {
  "lineno": 502,
  "symbols_in_volume": [
   "gpflow.training.monitor.HistogramToTensorBoardTask",
   "gpflow.training.monitor.LogdirWriter",
   "numpy.array"
  ],
  "type": "function"
 },
 "tests.test_monitor.TestHistogramToTensorBoardTask.test_histogram_tensorboard.user_func": {
  "lineno": 499,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_monitor.TestImageToTensorBoardTask": {
  "lineno": 510,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_monitor.TestImageToTensorBoardTask.test_image_tensorboard": {
  "lineno": 512,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_monitor.TestImageToTensorBoardTask.test_image_tensorboard.plot_func": {
  "lineno": 520,
  "symbols_in_volume": [
   "matplotlib.pyplot.figure",
   "matplotlib.pyplot.plot",
   "numpy.linspace"
  ],
  "type": "function"
 },
 "tests.test_monitor.TestImageToTensorBoardTask.test_image_tensorboard.task_factory": {
  "lineno": 527,
  "symbols_in_volume": [
   "gpflow.training.monitor.ImageToTensorBoardTask",
   "gpflow.training.monitor.LogdirWriter"
  ],
  "type": "function"
 },
 "tests.test_monitor.TestLmlToTensorBoardTask": {
  "lineno": 404,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_monitor.TestLmlToTensorBoardTask.test_lml_tensorboard": {
  "lineno": 406,
  "symbols_in_volume": [
   "gpflow.test_util.session_context",
   "numpy.concatenate",
   "tensorflow.Graph"
  ],
  "type": "function"
 },
 "tests.test_monitor.TestLmlToTensorBoardTask.test_lml_tensorboard.task_factory": {
  "lineno": 434,
  "symbols_in_volume": [
   "gpflow.training.monitor.LmlToTensorBoardTask",
   "gpflow.training.monitor.LogdirWriter"
  ],
  "type": "function"
 },
 "tests.test_monitor.TestLogdirWriter": {
  "lineno": 301,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_monitor.TestLogdirWriter.test_create_error": {
  "lineno": 338,
  "symbols_in_volume": [
   "gpflow.training.monitor.LogdirWriter",
   "tempfile.TemporaryDirectory"
  ],
  "type": "function"
 },
 "tests.test_monitor.TestLogdirWriter.test_create_no_error": {
  "lineno": 303,
  "symbols_in_volume": [
   "gpflow.training.monitor.LogdirWriter",
   "tempfile.TemporaryDirectory"
  ],
  "type": "function"
 },
 "tests.test_monitor.TestLogdirWriter.test_reopen_error": {
  "lineno": 347,
  "symbols_in_volume": [
   "gpflow.training.monitor.LogdirWriter",
   "tempfile.TemporaryDirectory"
  ],
  "type": "function"
 },
 "tests.test_monitor.TestLogdirWriter.test_reopen_writer_no_error": {
  "lineno": 326,
  "symbols_in_volume": [
   "gpflow.training.monitor.LogdirWriter",
   "tempfile.TemporaryDirectory"
  ],
  "type": "function"
 },
 "tests.test_monitor.TestLogdirWriter.test_reuse_location_no_error": {
  "lineno": 316,
  "symbols_in_volume": [
   "gpflow.training.monitor.LogdirWriter",
   "tempfile.TemporaryDirectory"
  ],
  "type": "function"
 },
 "tests.test_monitor.TestModelToTensorBoardTask": {
  "lineno": 360,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_monitor.TestModelToTensorBoardTask.test_std_tensorboard_all_parameters": {
  "lineno": 381,
  "symbols_in_volume": [
   "gpflow.test_util.session_context",
   "tensorflow.Graph"
  ],
  "type": "function"
 },
 "tests.test_monitor.TestModelToTensorBoardTask.test_std_tensorboard_all_parameters.task_factory": {
  "lineno": 388,
  "symbols_in_volume": [
   "gpflow.training.monitor.LogdirWriter",
   "gpflow.training.monitor.ModelToTensorBoardTask",
   "tensorflow.Variable",
   "tensorflow.summary.scalar",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "tests.test_monitor.TestModelToTensorBoardTask.test_std_tensorboard_only_scalars": {
  "lineno": 362,
  "symbols_in_volume": [
   "gpflow.test_util.session_context",
   "tensorflow.Graph"
  ],
  "type": "function"
 },
 "tests.test_monitor.TestModelToTensorBoardTask.test_std_tensorboard_only_scalars.task_factory": {
  "lineno": 370,
  "symbols_in_volume": [
   "gpflow.training.monitor.LogdirWriter",
   "gpflow.training.monitor.ModelToTensorBoardTask"
  ],
  "type": "function"
 },
 "tests.test_monitor.TestMonitor": {
  "lineno": 68,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_monitor.TestMonitor.test_on_iteration_timing": {
  "lineno": 70,
  "symbols_in_volume": [
   "gpflow.training.monitor.Monitor",
   "gpflow.training.monitor.MonitorContext",
   "mock.patch"
  ],
  "type": "function"
 },
 "tests.test_monitor.TestMonitorIntegration": {
  "lineno": 534,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_monitor.TestMonitorIntegration._optimise_model": {
  "lineno": 630,
  "symbols_in_volume": [
   "gpflow.models.Model",
   "gpflow.training.monitor.Monitor",
   "gpflow.training.monitor.create_global_step",
   "tensorflow.Variable",
   "typing.Callable",
   "typing.Optional"
  ],
  "type": "function"
 },
 "tests.test_monitor.TestMonitorIntegration.test_update_scipy_optimiser": {
  "lineno": 598,
  "symbols_in_volume": [
   "gpflow.test_util.session_context",
   "gpflow.train.ScipyOptimizer",
   "gpflow.training.monitor.MonitorContext",
   "tensorflow.Graph"
  ],
  "type": "function"
 },
 "tests.test_monitor.TestMonitorIntegration.test_update_scipy_optimiser.step_callback": {
  "lineno": 613,
  "symbols_in_volume": [
   "gpflow.training.monitor.update_optimiser",
   "numpy.alltrue",
   "numpy.not_equal"
  ],
  "type": "function"
 },
 "tests.test_monitor.TestMonitorIntegration.test_with_natgrad_optimiser": {
  "lineno": 572,
  "symbols_in_volume": [
   "gpflow.kernels.RBF",
   "gpflow.likelihoods.Gaussian",
   "gpflow.models.SVGP",
   "gpflow.test_util.session_context",
   "numpy.linspace",
   "tensorflow.Graph"
  ],
  "type": "function"
 },
 "tests.test_monitor.TestMonitorIntegration.test_with_natgrad_optimiser.optimise": {
  "lineno": 577,
  "symbols_in_volume": [
   "gpflow.train.NatGradOptimizer"
  ],
  "type": "function"
 },
 "tests.test_monitor.TestMonitorIntegration.test_with_scipy_optimiser": {
  "lineno": 552,
  "symbols_in_volume": [
   "gpflow.test_util.session_context",
   "gpflow.train.ScipyOptimizer",
   "mock.patch",
   "tensorflow.Graph"
  ],
  "type": "function"
 },
 "tests.test_monitor.TestMonitorIntegration.test_with_scipy_optimiser.optimise": {
  "lineno": 560,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_monitor.TestMonitorIntegration.test_with_tensorflow_optimiser": {
  "lineno": 536,
  "symbols_in_volume": [
   "gpflow.test_util.session_context",
   "tensorflow.Graph"
  ],
  "type": "function"
 },
 "tests.test_monitor.TestMonitorIntegration.test_with_tensorflow_optimiser.optimise": {
  "lineno": 541,
  "symbols_in_volume": [
   "gpflow.train.AdamOptimizer"
  ],
  "type": "function"
 },
 "tests.test_monitor.TestMonitorTask": {
  "lineno": 88,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_monitor.TestMonitorTask.test_call_condition": {
  "lineno": 106,
  "symbols_in_volume": [
   "gpflow.training.monitor.MonitorContext"
  ],
  "type": "function"
 },
 "tests.test_monitor.TestMonitorTask.test_call_timing": {
  "lineno": 90,
  "symbols_in_volume": [
   "gpflow.training.monitor.MonitorContext",
   "mock.patch"
  ],
  "type": "function"
 },
 "tests.test_monitor.TestMonitorTask.test_exit_condition": {
  "lineno": 117,
  "symbols_in_volume": [
   "gpflow.training.monitor.MonitorContext"
  ],
  "type": "function"
 },
 "tests.test_monitor.TestPeriodicIterationCondition": {
  "lineno": 150,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_monitor.TestPeriodicIterationCondition.test_condition": {
  "lineno": 152,
  "symbols_in_volume": [
   "gpflow.training.monitor.MonitorContext",
   "gpflow.training.monitor.PeriodicIterationCondition"
  ],
  "type": "function"
 },
 "tests.test_monitor.TestPrintTimingsTask": {
  "lineno": 186,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_monitor.TestPrintTimingsTask.test_print_timings": {
  "lineno": 188,
  "symbols_in_volume": [
   "gpflow.test_util.session_context",
   "gpflow.training.monitor.MonitorContext",
   "gpflow.training.monitor.PrintTimingsTask",
   "gpflow.training.monitor.create_global_step",
   "mock.MagicMock",
   "tensorflow.Graph",
   "tensorflow.Session"
  ],
  "type": "function"
 },
 "tests.test_monitor.TestScalarFuncToTensorBoardTask": {
  "lineno": 445,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_monitor.TestScalarFuncToTensorBoardTask.test_scalar_tensorboard": {
  "lineno": 447,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_monitor.TestScalarFuncToTensorBoardTask.test_scalar_tensorboard.task_factory": {
  "lineno": 458,
  "symbols_in_volume": [
   "gpflow.training.monitor.LogdirWriter",
   "gpflow.training.monitor.ScalarFuncToTensorBoardTask"
  ],
  "type": "function"
 },
 "tests.test_monitor.TestScalarFuncToTensorBoardTask.test_scalar_tensorboard.user_func": {
  "lineno": 455,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_monitor.TestSleepTask": {
  "lineno": 229,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_monitor.TestSleepTask.test_sleep_lower_bound": {
  "lineno": 231,
  "symbols_in_volume": [
   "gpflow.training.monitor.MonitorContext",
   "gpflow.training.monitor.SleepTask",
   "gpflow.training.monitor.get_hr_time"
  ],
  "type": "function"
 },
 "tests.test_monitor.TestVectorFuncToTensorBoardTask": {
  "lineno": 465,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_monitor.TestVectorFuncToTensorBoardTask.test_vector_tensorboard": {
  "lineno": 467,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_monitor.TestVectorFuncToTensorBoardTask.test_vector_tensorboard.task_factory": {
  "lineno": 478,
  "symbols_in_volume": [
   "gpflow.training.monitor.LogdirWriter",
   "gpflow.training.monitor.VectorFuncToTensorBoardTask"
  ],
  "type": "function"
 },
 "tests.test_monitor.TestVectorFuncToTensorBoardTask.test_vector_tensorboard.user_func": {
  "lineno": 475,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_monitor._DummyMonitorTask": {
  "lineno": 34,
  "symbols_in_volume": [
   "gpflow.training.monitor.MonitorTask"
  ],
  "type": "class"
 },
 "tests.test_monitor._DummyMonitorTask.__init__": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_monitor._DummyMonitorTask.run": {
  "lineno": 40,
  "symbols_in_volume": [
   "gpflow.training.monitor.MonitorContext"
  ],
  "type": "function"
 },
 "tests.test_monitor.create_leaner_model_data": {
  "lineno": 678,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.expand_dims",
   "numpy.matmul",
   "numpy.random.normal",
   "numpy.random.rand",
   "numpy.sqrt",
   "numpy.transpose"
  ],
  "type": "function"
 },
 "tests.test_monitor.create_linear_model": {
  "lineno": 670,
  "symbols_in_volume": [
   "gpflow.models.Model",
   "typing.Optional"
  ],
  "type": "function"
 },
 "tests.test_monitor.run_tensorboard_task": {
  "lineno": 691,
  "symbols_in_volume": [
   "gpflow.training.monitor.BaseTensorBoardTask",
   "gpflow.training.monitor.LogdirWriter",
   "gpflow.training.monitor.MonitorContext",
   "gpflow.training.monitor.create_global_step",
   "pathlib.Path",
   "tempfile.TemporaryDirectory",
   "tensorflow.Session",
   "tensorflow.train.summary_iterator",
   "typing.Callable",
   "typing.Dict"
  ],
  "type": "function"
 },
 "tests.test_multioutput": {
  "lineno": null,
  "symbols_in_volume": [
   "gpflow.settings.float_type",
   "numpy.random.seed"
  ],
  "type": "module"
 },
 "tests.test_multioutput.Data": {
  "lineno": 123,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.cos",
   "numpy.hstack",
   "numpy.linspace",
   "numpy.matmul",
   "numpy.random.rand",
   "numpy.random.randn",
   "numpy.sin"
  ],
  "type": "class"
 },
 "tests.test_multioutput.DataMixedKernel": {
  "lineno": 158,
  "symbols_in_volume": [
   "numpy.cos",
   "numpy.hstack",
   "numpy.matmul",
   "numpy.ones",
   "numpy.random.randn",
   "numpy.sin"
  ],
  "type": "class"
 },
 "tests.test_multioutput.DataMixedKernelWithEye": {
  "lineno": 139,
  "symbols_in_volume": [
   "numpy.cos",
   "numpy.eye",
   "numpy.hstack",
   "numpy.matmul",
   "numpy.ones",
   "numpy.random.randn",
   "numpy.sin"
  ],
  "type": "class"
 },
 "tests.test_multioutput._create_feed_dict": {
  "lineno": 212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_multioutput._create_placeholder_dict": {
  "lineno": 209,
  "symbols_in_volume": [
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "tests.test_multioutput.assert_all_array_elements_almost_equal": {
  "lineno": 42,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "tests.test_multioutput.check_equality_predictions": {
  "lineno": 50,
  "symbols_in_volume": [
   "numpy.diagonal",
   "numpy.testing.assert_almost_equal",
   "numpy.transpose"
  ],
  "type": "function"
 },
 "tests.test_multioutput.create_q_sqrt": {
  "lineno": 114,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.randn",
   "numpy.tril"
  ],
  "type": "function"
 },
 "tests.test_multioutput.expand_cov": {
  "lineno": 102,
  "symbols_in_volume": [
   "numpy.linalg.cholesky",
   "numpy.matmul",
   "scipy.linalg.block_diag"
  ],
  "type": "function"
 },
 "tests.test_multioutput.predict": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_multioutput.predict_all": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_multioutput.test_MixedKernelSeparateMof": {
  "lineno": 509,
  "symbols_in_volume": [
   "gpflow.features.InducingPoints",
   "gpflow.kernels.RBF",
   "gpflow.likelihoods.Gaussian",
   "gpflow.models.SVGP",
   "gpflow.multioutput.features.MixedKernelSeparateMof",
   "gpflow.multioutput.features.SeparateIndependentMof",
   "gpflow.multioutput.kernels.SeparateMixedMok",
   "gpflow.test_util.session_tf"
  ],
  "type": "function"
 },
 "tests.test_multioutput.test_MixedMok_Kgg": {
  "lineno": 296,
  "symbols_in_volume": [
   "gpflow.kernels.RBF",
   "gpflow.multioutput.kernels.SeparateMixedMok",
   "numpy.einsum",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "tests.test_multioutput.test_compare_mixed_kernel": {
  "lineno": 475,
  "symbols_in_volume": [
   "gpflow.features.InducingPoints",
   "gpflow.kernels.RBF",
   "gpflow.likelihoods.Gaussian",
   "gpflow.models.SVGP",
   "gpflow.multioutput.features.MixedKernelSharedMof",
   "gpflow.multioutput.features.SharedIndependentMof",
   "gpflow.multioutput.kernels.SeparateMixedMok",
   "gpflow.test_util.session_tf"
  ],
  "type": "function"
 },
 "tests.test_multioutput.test_mixed_mok_with_Id_vs_independent_mok": {
  "lineno": 451,
  "symbols_in_volume": [
   "gpflow.features.InducingPoints",
   "gpflow.kernels.RBF",
   "gpflow.likelihoods.Gaussian",
   "gpflow.models.SVGP",
   "gpflow.multioutput.kernels.SeparateMixedMok",
   "gpflow.multioutput.kernels.SharedIndependentMok",
   "gpflow.test_util.session_tf",
   "gpflow.training.ScipyOptimizer"
  ],
  "type": "function"
 },
 "tests.test_multioutput.test_multioutput_with_diag_q_sqrt": {
  "lineno": 491,
  "symbols_in_volume": [
   "gpflow.features.InducingPoints",
   "gpflow.kernels.RBF",
   "gpflow.likelihoods.Gaussian",
   "gpflow.models.SVGP",
   "gpflow.multioutput.features.SharedIndependentMof",
   "gpflow.multioutput.kernels.SeparateMixedMok",
   "gpflow.test_util.session_tf",
   "numpy.eye",
   "numpy.ones",
   "numpy.repeat"
  ],
  "type": "function"
 },
 "tests.test_multioutput.test_sample_conditional": {
  "lineno": 216,
  "symbols_in_volume": [
   "gpflow.conditionals.sample_conditional",
   "gpflow.features.InducingPoints",
   "gpflow.kernels.RBF",
   "gpflow.test_util.session_tf.run",
   "numpy.array",
   "numpy.cov",
   "numpy.mean",
   "numpy.ones",
   "numpy.random.randn",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_array_almost_equal",
   "numpy.tril",
   "pytest.mark.parametrize",
   "pytest.skip"
  ],
  "type": "function"
 },
 "tests.test_multioutput.test_sample_conditional_mixedkernel": {
  "lineno": 257,
  "symbols_in_volume": [
   "gpflow.conditionals.sample_conditional",
   "gpflow.features.InducingPoints",
   "gpflow.kernels.RBF",
   "gpflow.multioutput.features.MixedKernelSharedMof",
   "gpflow.multioutput.features.SharedIndependentMof",
   "gpflow.multioutput.kernels.SeparateIndependentMok",
   "gpflow.multioutput.kernels.SeparateMixedMok",
   "gpflow.test_util.session_tf.run",
   "numpy.array",
   "numpy.cov",
   "numpy.matmul",
   "numpy.mean",
   "numpy.ones",
   "numpy.random.randn",
   "numpy.testing.assert_array_almost_equal",
   "numpy.tril"
  ],
  "type": "function"
 },
 "tests.test_multioutput.test_sample_mvn": {
  "lineno": 177,
  "symbols_in_volume": [
   "gpflow.conditionals._sample_mvn",
   "gpflow.test_util.session_tf.run",
   "numpy.cov",
   "numpy.mean",
   "numpy.testing.assert_array_almost_equal",
   "pytest.mark.parametrize",
   "tensorflow.eye",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "tests.test_multioutput.test_separate_independent_mof": {
  "lineno": 404,
  "symbols_in_volume": [
   "gpflow.features.InducingPoints",
   "gpflow.kernels.RBF",
   "gpflow.likelihoods.Gaussian",
   "gpflow.models.SVGP",
   "gpflow.multioutput.features.SeparateIndependentMof",
   "gpflow.multioutput.kernels.SeparateIndependentMok",
   "gpflow.multioutput.kernels.SharedIndependentMok",
   "gpflow.test_util.session_tf",
   "gpflow.training.ScipyOptimizer",
   "numpy.array",
   "numpy.random.randn",
   "numpy.random.seed",
   "numpy.tril"
  ],
  "type": "function"
 },
 "tests.test_multioutput.test_separate_independent_mok": {
  "lineno": 368,
  "symbols_in_volume": [
   "gpflow.features.InducingPoints",
   "gpflow.kernels.RBF",
   "gpflow.likelihoods.Gaussian",
   "gpflow.models.SVGP",
   "gpflow.multioutput.features.SharedIndependentMof",
   "gpflow.multioutput.kernels.SeparateIndependentMok",
   "gpflow.test_util.session_tf",
   "gpflow.training.ScipyOptimizer",
   "numpy.array",
   "numpy.random.randn",
   "numpy.tril"
  ],
  "type": "function"
 },
 "tests.test_multioutput.test_shared_independent_mok": {
  "lineno": 320,
  "symbols_in_volume": [
   "gpflow.features.InducingPoints",
   "gpflow.kernels.RBF",
   "gpflow.likelihoods.Gaussian",
   "gpflow.models.SVGP",
   "gpflow.multioutput.features.SharedIndependentMof",
   "gpflow.multioutput.kernels.SharedIndependentMok",
   "gpflow.test_util.session_tf",
   "gpflow.training.ScipyOptimizer",
   "numpy.array",
   "numpy.random.randn",
   "numpy.reshape",
   "numpy.tril"
  ],
  "type": "function"
 },
 "tests.test_multioutput_features": {
  "lineno": null,
  "symbols_in_volume": [
   "gpflow.settings.float_type",
   "numpy.random.seed"
  ],
  "type": "module"
 },
 "tests.test_multioutput_features.Datum": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.random.randn"
  ],
  "type": "class"
 },
 "tests.test_multioutput_features.Mofs": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_multioutput_features.Mofs.features": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_multioutput_features.Mofs.mixed_shared": {
  "lineno": 56,
  "symbols_in_volume": [
   "gpflow.multioutput.features.MixedKernelSharedMof"
  ],
  "type": "function"
 },
 "tests.test_multioutput_features.Mofs.separate_independent": {
  "lineno": 50,
  "symbols_in_volume": [
   "gpflow.multioutput.features.SeparateIndependentMof"
  ],
  "type": "function"
 },
 "tests.test_multioutput_features.Mofs.shared_independent": {
  "lineno": 47,
  "symbols_in_volume": [
   "gpflow.multioutput.features.SharedIndependentMof"
  ],
  "type": "function"
 },
 "tests.test_multioutput_features.Moks": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_multioutput_features.Moks.kernels": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_multioutput_features.Moks.separate_independent": {
  "lineno": 64,
  "symbols_in_volume": [
   "gpflow.multioutput.kernels.SeparateIndependentMok"
  ],
  "type": "function"
 },
 "tests.test_multioutput_features.Moks.separate_mixed": {
  "lineno": 67,
  "symbols_in_volume": [
   "gpflow.multioutput.kernels.SeparateMixedMok"
  ],
  "type": "function"
 },
 "tests.test_multioutput_features.Moks.shared_independent": {
  "lineno": 61,
  "symbols_in_volume": [
   "gpflow.multioutput.kernels.SharedIndependentMok"
  ],
  "type": "function"
 },
 "tests.test_multioutput_features.make_ip": {
  "lineno": 37,
  "symbols_in_volume": [
   "gpflow.features.InducingPoints",
   "numpy.random.permutation"
  ],
  "type": "function"
 },
 "tests.test_multioutput_features.make_ips": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_multioutput_features.make_kernel": {
  "lineno": 29,
  "symbols_in_volume": [
   "gpflow.kernels.RBF"
  ],
  "type": "function"
 },
 "tests.test_multioutput_features.make_kernels": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_multioutput_features.test_kuf": {
  "lineno": 81,
  "symbols_in_volume": [
   "gpflow.multioutput.features.Kuf",
   "gpflow.test_util.session_tf.run",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "tests.test_multioutput_features.test_kuu": {
  "lineno": 74,
  "symbols_in_volume": [
   "gpflow.multioutput.features.Kuu",
   "gpflow.test_util.session_tf.run",
   "pytest.mark.parametrize",
   "tensorflow.cholesky"
  ],
  "type": "function"
 },
 "tests.test_multioutput_features.test_mixed_shared": {
  "lineno": 88,
  "symbols_in_volume": [
   "gpflow.multioutput.features.Kuf",
   "gpflow.multioutput.features.Kuu",
   "gpflow.test_util.session_tf.run",
   "pytest.mark.parametrize",
   "tensorflow.cholesky"
  ],
  "type": "function"
 },
 "tests.test_notebooks": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_notebooks._exec_notebook": {
  "lineno": 78,
  "symbols_in_volume": [
   "nbconvert.preprocessors.execute.CellExecutionError",
   "nbformat.current_nbformat",
   "nbformat.read",
   "os.path.join",
   "pytest.fail",
   "sys.stdout",
   "traceback.print_exc"
  ],
  "type": "function"
 },
 "tests.test_notebooks._exec_notebook_ts": {
  "lineno": 90,
  "symbols_in_volume": [
   "gpflow.test_util.session_context",
   "time.time"
  ],
  "type": "function"
 },
 "tests.test_notebooks._nbpath": {
  "lineno": 67,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "tests.test_notebooks._preproc": {
  "lineno": 72,
  "symbols_in_volume": [
   "nbconvert.preprocessors.ExecutePreprocessor",
   "sys.version_info"
  ],
  "type": "function"
 },
 "tests.test_notebooks.test_no_notebook_missing": {
  "lineno": 60,
  "symbols_in_volume": [
   "glob.glob",
   "os.path.basename",
   "os.path.join"
  ],
  "type": "function"
 },
 "tests.test_notebooks.test_notebook": {
  "lineno": 55,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "tests.test_optimizers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_optimizers.CombinationOptimizer": {
  "lineno": 367,
  "symbols_in_volume": [
   "gpflow.training.optimizer.Optimizer"
  ],
  "type": "class"
 },
 "tests.test_optimizers.CombinationOptimizer.__init__": {
  "lineno": 371,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_optimizers.CombinationOptimizer.minimize": {
  "lineno": 376,
  "symbols_in_volume": [
   "tensorflow.name_scope"
  ],
  "type": "function"
 },
 "tests.test_optimizers.Datum": {
  "lineno": 398,
  "symbols_in_volume": [
   "numpy.random.randn"
  ],
  "type": "class"
 },
 "tests.test_optimizers.Demo": {
  "lineno": 38,
  "symbols_in_volume": [
   "gpflow.models.Model"
  ],
  "type": "class"
 },
 "tests.test_optimizers.Demo.__init__": {
  "lineno": 39,
  "symbols_in_volume": [
   "gpflow.Param",
   "gpflow.settings.float_type",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "tests.test_optimizers.Demo._build_likelihood": {
  "lineno": 54,
  "symbols_in_volume": [
   "gpflow.params_as_tensors",
   "tensorflow.reduce_prod",
   "tensorflow.reduce_sum"
  ],
  "type": "function"
 },
 "tests.test_optimizers.Demo.initializables": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_optimizers.Demo.trainable_tensors": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_optimizers.Empty": {
  "lineno": 32,
  "symbols_in_volume": [
   "gpflow.models.Model"
  ],
  "type": "class"
 },
 "tests.test_optimizers.Empty._build_likelihood": {
  "lineno": 33,
  "symbols_in_volume": [
   "gpflow.params_as_tensors",
   "gpflow.settings.float_type",
   "tensorflow.constant"
  ],
  "type": "function"
 },
 "tests.test_optimizers.NonOptimizer": {
  "lineno": 59,
  "symbols_in_volume": [
   "gpflow.training.tensorflow_optimizer._TensorFlowOptimizer"
  ],
  "type": "class"
 },
 "tests.test_optimizers.OptimizerCase": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_optimizers.OptimizerCase.test_different_sessions": {
  "lineno": 74,
  "symbols_in_volume": [
   "gpflow.reset_default_session"
  ],
  "type": "function"
 },
 "tests.test_optimizers.OptimizerCase.test_external_variables_in_model": {
  "lineno": 155,
  "symbols_in_volume": [
   "gpflow.reset_default_session",
   "gpflow.settings.float_type",
   "numpy.array",
   "tensorflow.errors.FailedPreconditionError",
   "tensorflow.get_variable"
  ],
  "type": "function"
 },
 "tests.test_optimizers.OptimizerCase.test_non_gpflow_model": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_optimizers.OptimizerCase.test_optimizer_tensors": {
  "lineno": 135,
  "symbols_in_volume": [
   "gpflow.train.ScipyOptimizer"
  ],
  "type": "function"
 },
 "tests.test_optimizers.OptimizerCase.test_optimizer_with_var_list": {
  "lineno": 97,
  "symbols_in_volume": [
   "gpflow.settings.float_type",
   "tensorflow.errors.FailedPreconditionError",
   "tensorflow.get_variable",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "tests.test_optimizers.TestAdadeltaOptimizer": {
  "lineno": 209,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase",
   "gpflow.train.AdadeltaOptimizer"
  ],
  "type": "class"
 },
 "tests.test_optimizers.TestAdamOptimizer": {
  "lineno": 201,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase",
   "gpflow.train.AdamOptimizer"
  ],
  "type": "class"
 },
 "tests.test_optimizers.TestFtrlOptimizer": {
  "lineno": 217,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase",
   "gpflow.train.FtrlOptimizer"
  ],
  "type": "class"
 },
 "tests.test_optimizers.TestGradientDescentOptimizer": {
  "lineno": 197,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase",
   "gpflow.train.GradientDescentOptimizer"
  ],
  "type": "class"
 },
 "tests.test_optimizers.TestMomentumOptimizer": {
  "lineno": 205,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase",
   "gpflow.train.MomentumOptimizer"
  ],
  "type": "class"
 },
 "tests.test_optimizers.TestRMSPropOptimizer": {
  "lineno": 213,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase",
   "gpflow.train.RMSPropOptimizer"
  ],
  "type": "class"
 },
 "tests.test_optimizers.TestScipyOptimizer": {
  "lineno": 193,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase",
   "gpflow.train.ScipyOptimizer"
  ],
  "type": "class"
 },
 "tests.test_optimizers.TestSimpleOptimizerInterface": {
  "lineno": 63,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_optimizers.TestSimpleOptimizerInterface.test_non_existing_optimizer": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_optimizers.sgpr": {
  "lineno": 416,
  "symbols_in_volume": [
   "gpflow.kernels.RBF",
   "gpflow.models.SGPR",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_optimizers.svgp": {
  "lineno": 408,
  "symbols_in_volume": [
   "gpflow.kernels.RBF",
   "gpflow.likelihoods.Gaussian",
   "gpflow.models.SVGP",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_optimizers.test_SVGP_vs_SGPR": {
  "lineno": 340,
  "symbols_in_volume": [
   "gpflow.kernels.RBF",
   "gpflow.likelihoods.Gaussian",
   "gpflow.models.SGPR",
   "gpflow.models.SVGP",
   "gpflow.training.natgrad_optimizer.NatGradOptimizer",
   "numpy.random.randn",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_optimizers.test_VGP_vs_GPR": {
  "lineno": 274,
  "symbols_in_volume": [
   "gpflow.kernels.RBF",
   "gpflow.likelihoods.Gaussian",
   "gpflow.models.GPR",
   "gpflow.models.VGP",
   "gpflow.training.natgrad_optimizer.NatGradOptimizer",
   "numpy.random.randn",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_optimizers.test_XiEtas_VGP_vs_GPR": {
  "lineno": 326,
  "symbols_in_volume": [
   "gpflow.test_util.session_tf"
  ],
  "type": "function"
 },
 "tests.test_optimizers.test_XiEtas_VGP_vs_GPR.XiEta": {
  "lineno": 327,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_optimizers.test_XiEtas_VGP_vs_GPR.XiEta.meanvarsqrt_to_xi": {
  "lineno": 328,
  "symbols_in_volume": [
   "gpflow.training.natgrad_optimizer.meanvarsqrt_to_expectation"
  ],
  "type": "function"
 },
 "tests.test_optimizers.test_XiEtas_VGP_vs_GPR.XiEta.naturals_to_xi": {
  "lineno": 334,
  "symbols_in_volume": [
   "gpflow.training.natgrad_optimizer.natural_to_expectation"
  ],
  "type": "function"
 },
 "tests.test_optimizers.test_XiEtas_VGP_vs_GPR.XiEta.xi_to_meanvarsqrt": {
  "lineno": 331,
  "symbols_in_volume": [
   "gpflow.training.natgrad_optimizer.expectation_to_meanvarsqrt"
  ],
  "type": "function"
 },
 "tests.test_optimizers.test_hypers_SVGP_vs_SGPR": {
  "lineno": 424,
  "symbols_in_volume": [
   "gpflow.actions.Loop",
   "gpflow.training.GradientDescentOptimizer",
   "gpflow.training.natgrad_optimizer.NatGradOptimizer",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_optimizers.test_hypers_SVGP_vs_SGPR_tensors": {
  "lineno": 468,
  "symbols_in_volume": [
   "gpflow.test_util.session_tf.run",
   "gpflow.training.GradientDescentOptimizer",
   "gpflow.training.natgrad_optimizer.NatGradOptimizer",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_optimizers.test_other_XiTransform_VGP_vs_GPR": {
  "lineno": 300,
  "symbols_in_volume": [
   "gpflow.kernels.RBF",
   "gpflow.likelihoods.Gaussian",
   "gpflow.models.GPR",
   "gpflow.models.VGP",
   "gpflow.training.natgrad_optimizer.NatGradOptimizer",
   "gpflow.training.natgrad_optimizer.XiSqrtMeanVar",
   "numpy.random.randn",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_optimizers.test_scipy_optimizer_options": {
  "lineno": 233,
  "symbols_in_volume": [
   "gpflow.kernels.RBF",
   "gpflow.models.SGPR",
   "gpflow.train.ScipyOptimizer",
   "numpy.random.randn",
   "numpy.random.seed",
   "numpy.sin"
  ],
  "type": "function"
 },
 "tests.test_optimizers.test_small_q_sqrt_handeled_correctly": {
  "lineno": 248,
  "symbols_in_volume": [
   "gpflow.kernels.RBF",
   "gpflow.likelihoods.Gaussian",
   "gpflow.models.GPR",
   "gpflow.models.VGP",
   "gpflow.training.natgrad_optimizer.NatGradOptimizer",
   "numpy.eye",
   "numpy.random.randn",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_param": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "tests.test_param.Foo": {
  "lineno": 27,
  "symbols_in_volume": [
   "gpflow.models.Model"
  ],
  "type": "class"
 },
 "tests.test_param.Foo._build_likelihood": {
  "lineno": 28,
  "symbols_in_volume": [
   "gpflow.settings.float_type",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "tests.test_param.TestAutobuild": {
  "lineno": 738,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_param.TestAutobuild.test_autobuild_option": {
  "lineno": 739,
  "symbols_in_volume": [
   "gpflow.Build.NO",
   "gpflow.Build.YES",
   "gpflow.Param",
   "tensorflow.get_default_graph"
  ],
  "type": "function"
 },
 "tests.test_param.TestFixWithPrior": {
  "lineno": 972,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_param.TestFixWithPrior.test_non_trainable_with_prior": {
  "lineno": 977,
  "symbols_in_volume": [
   "gpflow.Param",
   "gpflow.priors.Gamma",
   "gpflow.train.ScipyOptimizer",
   "gpflow.transforms.positive"
  ],
  "type": "function"
 },
 "tests.test_param.TestNaming": {
  "lineno": 32,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_param.TestNaming.test_index": {
  "lineno": 33,
  "symbols_in_volume": [
   "gpflow.core.parentable.Parentable._read_index"
  ],
  "type": "function"
 },
 "tests.test_param.TestNaming.test_index.increment_assert": {
  "lineno": 36,
  "symbols_in_volume": [
   "gpflow.Param"
  ],
  "type": "function"
 },
 "tests.test_param.TestNaming.test_pathname": {
  "lineno": 52,
  "symbols_in_volume": [
   "gpflow.Param",
   "gpflow.params.Parameterized"
  ],
  "type": "function"
 },
 "tests.test_param.TestNaming.test_standard_name": {
  "lineno": 42,
  "symbols_in_volume": [
   "gpflow.Param",
   "gpflow.params.Parameterized"
  ],
  "type": "function"
 },
 "tests.test_param.TestParamLikeInvariant": {
  "lineno": 812,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_param.TestParamLikeInvariant.test_reassign": {
  "lineno": 821,
  "symbols_in_volume": [
   "gpflow.params.Parameterized"
  ],
  "type": "function"
 },
 "tests.test_param.TestParamLikeInvariant.test_self_reference": {
  "lineno": 813,
  "symbols_in_volume": [
   "gpflow.params.Parameterized"
  ],
  "type": "function"
 },
 "tests.test_param.TestParamList": {
  "lineno": 854,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_param.TestParamList.test_append": {
  "lineno": 916,
  "symbols_in_volume": [
   "gpflow.GPflowError",
   "gpflow.Param",
   "gpflow.ParamList",
   "gpflow.defer_build",
   "gpflow.settings.float_type",
   "numpy.array"
  ],
  "type": "function"
 },
 "tests.test_param.TestParamList.test_construction": {
  "lineno": 855,
  "symbols_in_volume": [
   "gpflow.Param",
   "gpflow.ParamList",
   "gpflow.defer_build",
   "numpy.array"
  ],
  "type": "function"
 },
 "tests.test_param.TestParamList.test_in_model": {
  "lineno": 952,
  "symbols_in_volume": [
   "gpflow.settings.float_type",
   "gpflow.train.ScipyOptimizer",
   "numpy.allclose",
   "numpy.float32"
  ],
  "type": "function"
 },
 "tests.test_param.TestParamList.test_in_model.Foo": {
  "lineno": 953,
  "symbols_in_volume": [
   "gpflow.models.Model"
  ],
  "type": "class"
 },
 "tests.test_param.TestParamList.test_in_model.Foo.__init__": {
  "lineno": 954,
  "symbols_in_volume": [
   "gpflow.Param",
   "gpflow.ParamList",
   "gpflow.models.Model.__init__"
  ],
  "type": "function"
 },
 "tests.test_param.TestParamList.test_in_model.Foo._build_likelihood": {
  "lineno": 958,
  "symbols_in_volume": [
   "gpflow.params_as_tensors",
   "tensorflow.add_n",
   "tensorflow.square"
  ],
  "type": "function"
 },
 "tests.test_param.TestParamList.test_len": {
  "lineno": 936,
  "symbols_in_volume": [
   "gpflow.Param",
   "gpflow.ParamList",
   "gpflow.settings.float_type",
   "numpy.array"
  ],
  "type": "function"
 },
 "tests.test_param.TestParamList.test_naming": {
  "lineno": 885,
  "symbols_in_volume": [
   "gpflow.Param",
   "gpflow.ParamList",
   "gpflow.settings.float_type",
   "numpy.array"
  ],
  "type": "function"
 },
 "tests.test_param.TestParamList.test_setitem": {
  "lineno": 893,
  "symbols_in_volume": [
   "gpflow.GPflowError",
   "gpflow.Param",
   "gpflow.ParamList",
   "gpflow.settings.float_type",
   "numpy.all",
   "numpy.array"
  ],
  "type": "function"
 },
 "tests.test_param.TestParamList.test_with_parameterized": {
  "lineno": 943,
  "symbols_in_volume": [
   "gpflow.Param",
   "gpflow.ParamList",
   "gpflow.params.Parameterized"
  ],
  "type": "function"
 },
 "tests.test_param.TestParameter": {
  "lineno": 131,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_param.TestParameter.setUp": {
  "lineno": 132,
  "symbols_in_volume": [
   "gpflow.Param",
   "gpflow.params.Parameterized"
  ],
  "type": "function"
 },
 "tests.test_param.TestParameter.test_assign": {
  "lineno": 302,
  "symbols_in_volume": [
   "gpflow.GPflowError",
   "tensorflow.Graph"
  ],
  "type": "function"
 },
 "tests.test_param.TestParameter.test_assign_tensor": {
  "lineno": 320,
  "symbols_in_volume": [
   "gpflow.GPflowError",
   "gpflow.Param",
   "tensorflow.get_variable"
  ],
  "type": "function"
 },
 "tests.test_param.TestParameter.test_assign_with_compile": {
  "lineno": 382,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_param.TestParameter.test_create_and_replace": {
  "lineno": 357,
  "symbols_in_volume": [
   "gpflow.Param",
   "tensorflow.get_variable"
  ],
  "type": "function"
 },
 "tests.test_param.TestParameter.test_existing_tensor": {
  "lineno": 394,
  "symbols_in_volume": [
   "gpflow.GPflowError",
   "gpflow.Param",
   "tensorflow.get_variable"
  ],
  "type": "function"
 },
 "tests.test_param.TestParameter.test_fail_scenarios": {
  "lineno": 209,
  "symbols_in_volume": [
   "gpflow.GPflowError",
   "gpflow.Param",
   "tensorflow.errors.FailedPreconditionError",
   "tensorflow.get_variable"
  ],
  "type": "function"
 },
 "tests.test_param.TestParameter.test_fail_scenarios.value_error": {
  "lineno": 214,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_param.TestParameter.test_fixed_shape": {
  "lineno": 424,
  "symbols_in_volume": [
   "gpflow.Param",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "tests.test_param.TestParameter.test_floating_assign": {
  "lineno": 327,
  "symbols_in_volume": [
   "gpflow.Param",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_param.TestParameter.test_generators": {
  "lineno": 296,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_param.TestParameter.test_initialized": {
  "lineno": 184,
  "symbols_in_volume": [
   "gpflow.Param"
  ],
  "type": "function"
 },
 "tests.test_param.TestParameter.test_initialized.assert_exception": {
  "lineno": 200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_param.TestParameter.test_parameter_different_options": {
  "lineno": 139,
  "symbols_in_volume": [
   "gpflow.Param",
   "gpflow.priors.Gaussian",
   "gpflow.transforms.Log1pe",
   "numpy.array",
   "numpy.float16",
   "numpy.float64",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_param.TestParameter.test_root": {
  "lineno": 391,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_param.TestParameter.test_str": {
  "lineno": 268,
  "symbols_in_volume": [
   "gpflow.DataHolder",
   "gpflow.Param",
   "gpflow.Parameterized"
  ],
  "type": "function"
 },
 "tests.test_param.TestParameter.test_str.check_str": {
  "lineno": 270,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_param.TestParameter.test_trainable": {
  "lineno": 400,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_param.TestParameter.test_trainable_with_compile": {
  "lineno": 410,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_param.TestParameterized": {
  "lineno": 449,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_param.TestParameterized.create_layout": {
  "lineno": 451,
  "symbols_in_volume": [
   "gpflow.DataHolder",
   "gpflow.Param",
   "gpflow.Parameterized"
  ],
  "type": "function"
 },
 "tests.test_param.TestParameterized.test_anchor": {
  "lineno": 488,
  "symbols_in_volume": [
   "gpflow.Param",
   "gpflow.Parameterized",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_param.TestParameterized.test_fail_assign": {
  "lineno": 588,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "tests.test_param.TestParameterized.test_fix_shapes": {
  "lineno": 611,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_param.TestParameterized.test_fix_shapes.children": {
  "lineno": 613,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_param.TestParameterized.test_is_built": {
  "lineno": 461,
  "symbols_in_volume": [
   "gpflow.Build.NO",
   "gpflow.Build.NOT_COMPATIBLE_GRAPH",
   "gpflow.Build.YES",
   "gpflow.GPflowError",
   "gpflow.Param",
   "gpflow.Parameterized",
   "tensorflow.Graph"
  ],
  "type": "function"
 },
 "tests.test_param.TestParameterized.test_parameterized_assign": {
  "lineno": 541,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_param.TestParameterized.test_parameterized_assign_panda": {
  "lineno": 565,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "tests.test_param.TestParameterized.test_read_values": {
  "lineno": 500,
  "symbols_in_volume": [
   "gpflow.defer_build",
   "tensorflow.Session",
   "tensorflow.errors.FailedPreconditionError"
  ],
  "type": "function"
 },
 "tests.test_param.TestParameterized.test_read_values.check_values": {
  "lineno": 501,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_param.TestParameterized.test_trainables": {
  "lineno": 629,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_param.TestParameterizedCompile": {
  "lineno": 690,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_param.TestParameterizedCompile.setUp": {
  "lineno": 691,
  "symbols_in_volume": [
   "gpflow.Param",
   "gpflow.params.Parameterized",
   "numpy.array",
   "tensorflow.Graph",
   "tensorflow.get_variable"
  ],
  "type": "function"
 },
 "tests.test_param.TestParameterizedCompile.test_compile": {
  "lineno": 732,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_param.TestParameterizedCompile.test_fails_after_compile": {
  "lineno": 724,
  "symbols_in_volume": [
   "gpflow.GPflowError",
   "gpflow.Param"
  ],
  "type": "function"
 },
 "tests.test_param.TestParameterizedCompile.test_modify_compiled": {
  "lineno": 715,
  "symbols_in_volume": [
   "gpflow.misc.is_tensor"
  ],
  "type": "function"
 },
 "tests.test_param.TestParameterizedDeep": {
  "lineno": 774,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_param.TestParameterizedDeep.setUp": {
  "lineno": 775,
  "symbols_in_volume": [
   "gpflow.Param",
   "gpflow.params.Parameterized"
  ],
  "type": "function"
 },
 "tests.test_param.TestParameterizedDeep.test_deep_name": {
  "lineno": 794,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_param.TestParameterizedDeep.test_deep_trainable": {
  "lineno": 799,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_param.TestParameterizedDeep.test_generators": {
  "lineno": 783,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_param.TestParameterizedDeep.test_root": {
  "lineno": 789,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_param.TestParameterizedNoParameters": {
  "lineno": 650,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_param.TestParameterizedNoParameters.setUp": {
  "lineno": 651,
  "symbols_in_volume": [
   "gpflow.defer_build",
   "gpflow.params.Parameterized"
  ],
  "type": "function"
 },
 "tests.test_param.TestParameterizedNoParameters.test_add_parameter_to_empty_parameterized": {
  "lineno": 679,
  "symbols_in_volume": [
   "gpflow.Build.NO",
   "gpflow.Build.YES",
   "gpflow.GPflowError",
   "gpflow.Param"
  ],
  "type": "function"
 },
 "tests.test_param.TestParameterizedNoParameters.test_compile": {
  "lineno": 668,
  "symbols_in_volume": [
   "gpflow.Build.YES"
  ],
  "type": "function"
 },
 "tests.test_param.TestParameterizedNoParameters.test_feeds_empty": {
  "lineno": 657,
  "symbols_in_volume": [
   "gpflow.Parameterized"
  ],
  "type": "function"
 },
 "tests.test_param.TestParameterizedNoParameters.test_generators": {
  "lineno": 673,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_param.TestParameterizedNoParameters.test_is_built": {
  "lineno": 664,
  "symbols_in_volume": [
   "gpflow.Build.YES"
  ],
  "type": "function"
 },
 "tests.test_param.TestScopes": {
  "lineno": 1120,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_param.TestScopes.setUp": {
  "lineno": 1121,
  "symbols_in_volume": [
   "gpflow.kernels.RBF",
   "gpflow.models.GPR",
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "tests.test_param.TestScopes.test_kern_name": {
  "lineno": 1136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_param.TestScopes.test_kern_name.run_kernel": {
  "lineno": 1138,
  "symbols_in_volume": [
   "gpflow.name_scope",
   "gpflow.params_as_tensors"
  ],
  "type": "function"
 },
 "tests.test_param.TestScopes.test_likelihood_name": {
  "lineno": 1131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_param.TestType": {
  "lineno": 74,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_param.TestType.setUp": {
  "lineno": 75,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float16",
   "numpy.float32",
   "numpy.int16",
   "numpy.int32"
  ],
  "type": "function"
 },
 "tests.test_param.TestType.test_assign_fail_types": {
  "lineno": 114,
  "symbols_in_volume": [
   "gpflow.Param",
   "numpy.array",
   "numpy.int32"
  ],
  "type": "function"
 },
 "tests.test_param.TestType.test_assign_fail_types.fail_assigns": {
  "lineno": 117,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.int64"
  ],
  "type": "function"
 },
 "tests.test_param.TestType.test_default_type": {
  "lineno": 104,
  "symbols_in_volume": [
   "gpflow.Param",
   "gpflow.settings.get_settings",
   "gpflow.settings.temp_settings"
  ],
  "type": "function"
 },
 "tests.test_param.TestType.test_specific_dtype": {
  "lineno": 90,
  "symbols_in_volume": [
   "gpflow.Param",
   "numpy.array",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64"
  ],
  "type": "function"
 },
 "tests.test_param._check_trainable_flag": {
  "lineno": 1145,
  "symbols_in_volume": [
   "gpflow.misc.is_tensor_trainable"
  ],
  "type": "function"
 },
 "tests.test_param.failures": {
  "lineno": 1164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_param.param": {
  "lineno": 1153,
  "symbols_in_volume": [
   "gpflow.Param",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_param.params_tree": {
  "lineno": 1158,
  "symbols_in_volume": [
   "gpflow.Param",
   "gpflow.Parameterized",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_param.test_as_pandas_table_static": {
  "lineno": 1212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_param.test_parentable_childname_failures": {
  "lineno": 1168,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_param.test_parentable_childname_not_found": {
  "lineno": 1174,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_param.test_parentable_set_child_failure": {
  "lineno": 1179,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_param.test_parentable_set_parent_failures": {
  "lineno": 1201,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_param.test_parentable_set_parent_self_reference": {
  "lineno": 1207,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_param.test_parentable_unset_child_not_found": {
  "lineno": 1194,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_predict": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "tests.test_predict.TestFullCov": {
  "lineno": 71,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase",
   "numpy.random.RandomState"
  ],
  "type": "class"
 },
 "tests.test_predict.TestFullCov.kernel": {
  "lineno": 94,
  "symbols_in_volume": [
   "gpflow.kernels.Matern32"
  ],
  "type": "function"
 },
 "tests.test_predict.TestFullCov.prepare": {
  "lineno": 98,
  "symbols_in_volume": [
   "gpflow.models.GPR"
  ],
  "type": "function"
 },
 "tests.test_predict.TestFullCov.test_cov": {
  "lineno": 101,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.allclose",
   "numpy.diag"
  ],
  "type": "function"
 },
 "tests.test_predict.TestFullCov.test_samples": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_predict.TestFullCovGPMC": {
  "lineno": 169,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_predict.TestFullCovGPMC.prepare": {
  "lineno": 170,
  "symbols_in_volume": [
   "gpflow.likelihoods.Gaussian",
   "gpflow.models.GPMC"
  ],
  "type": "function"
 },
 "tests.test_predict.TestFullCovGPRFITC": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_predict.TestFullCovGPRFITC.prepare": {
  "lineno": 126,
  "symbols_in_volume": [
   "gpflow.models.GPRFITC"
  ],
  "type": "function"
 },
 "tests.test_predict.TestFullCovSGPMC": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_predict.TestFullCovSGPMC.prepare": {
  "lineno": 177,
  "symbols_in_volume": [
   "gpflow.likelihoods.Gaussian",
   "gpflow.models.SGPMC"
  ],
  "type": "function"
 },
 "tests.test_predict.TestFullCovSGPR": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_predict.TestFullCovSGPR.prepare": {
  "lineno": 121,
  "symbols_in_volume": [
   "gpflow.models.SGPR"
  ],
  "type": "function"
 },
 "tests.test_predict.TestFullCovSVGP1": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_predict.TestFullCovSVGP1.prepare": {
  "lineno": 131,
  "symbols_in_volume": [
   "gpflow.likelihoods.Gaussian",
   "gpflow.models.SVGP"
  ],
  "type": "function"
 },
 "tests.test_predict.TestFullCovSVGP2": {
  "lineno": 138,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_predict.TestFullCovSVGP2.prepare": {
  "lineno": 139,
  "symbols_in_volume": [
   "gpflow.likelihoods.Gaussian",
   "gpflow.models.SVGP"
  ],
  "type": "function"
 },
 "tests.test_predict.TestFullCovSVGP3": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_predict.TestFullCovSVGP3.prepare": {
  "lineno": 147,
  "symbols_in_volume": [
   "gpflow.likelihoods.Gaussian",
   "gpflow.models.SVGP"
  ],
  "type": "function"
 },
 "tests.test_predict.TestFullCovSVGP4": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_predict.TestFullCovSVGP4.prepare": {
  "lineno": 155,
  "symbols_in_volume": [
   "gpflow.likelihoods.Gaussian",
   "gpflow.models.SVGP"
  ],
  "type": "function"
 },
 "tests.test_predict.TestFullCovVGP": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_predict.TestFullCovVGP.prepare": {
  "lineno": 163,
  "symbols_in_volume": [
   "gpflow.likelihoods.Gaussian",
   "gpflow.models.VGP"
  ],
  "type": "function"
 },
 "tests.test_predict.TestGaussian": {
  "lineno": 22,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_predict.TestGaussian.prepare": {
  "lineno": 23,
  "symbols_in_volume": [
   "gpflow.kernels.Matern32",
   "gpflow.kernels.White",
   "gpflow.models.GPR",
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "tests.test_predict.TestGaussian.test_all": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.allclose"
  ],
  "type": "function"
 },
 "tests.test_predict.TestGaussian.test_density": {
  "lineno": 42,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.log",
   "numpy.pi",
   "numpy.square"
  ],
  "type": "function"
 },
 "tests.test_predict.TestGaussian.test_recompile": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_priors": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "tests.test_priors.FlatModel": {
  "lineno": 25,
  "symbols_in_volume": [
   "gpflow.models.Model"
  ],
  "type": "class"
 },
 "tests.test_priors.FlatModel._build_likelihood": {
  "lineno": 26,
  "symbols_in_volume": [
   "gpflow.settings.float_type",
   "numpy.array"
  ],
  "type": "function"
 },
 "tests.test_priors.TestPriorMode": {
  "lineno": 29,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_priors.TestPriorMode.prepare": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_priors.TestPriorMode.testBetaMode": {
  "lineno": 106,
  "symbols_in_volume": [
   "gpflow.Param",
   "gpflow.priors.Beta",
   "gpflow.train.ScipyOptimizer",
   "gpflow.transforms.Logistic",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_priors.TestPriorMode.testExponential": {
  "lineno": 58,
  "symbols_in_volume": [
   "gpflow.Param",
   "gpflow.priors.Exponential",
   "numpy.allclose",
   "numpy.log"
  ],
  "type": "function"
 },
 "tests.test_priors.TestPriorMode.testGammaMode": {
  "lineno": 71,
  "symbols_in_volume": [
   "gpflow.Param",
   "gpflow.priors.Gamma",
   "gpflow.train.ScipyOptimizer",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_priors.TestPriorMode.testGaussianMode": {
  "lineno": 37,
  "symbols_in_volume": [
   "gpflow.Param",
   "gpflow.priors.Gaussian",
   "gpflow.train.ScipyOptimizer",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_priors.TestPriorMode.testGaussianModeMatrix": {
  "lineno": 48,
  "symbols_in_volume": [
   "gpflow.Param",
   "gpflow.priors.Gaussian",
   "gpflow.train.ScipyOptimizer",
   "numpy.random.randn",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_priors.TestPriorMode.testLaplaceMode": {
  "lineno": 85,
  "symbols_in_volume": [
   "gpflow.Param",
   "gpflow.priors.Laplace",
   "gpflow.train.ScipyOptimizer",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_priors.TestPriorMode.testLogNormalMode": {
  "lineno": 94,
  "symbols_in_volume": [
   "gpflow.Param",
   "gpflow.priors.LogNormal",
   "gpflow.train.ScipyOptimizer",
   "gpflow.transforms.Exp",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_priors.TestPriorMode.testUniform": {
  "lineno": 118,
  "symbols_in_volume": [
   "gpflow.Param",
   "gpflow.priors.Uniform",
   "gpflow.transforms.Logistic",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "tests.test_priors.beta_moments": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_priors.exponential_moments": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_priors.gamma_moments": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_priors.gaussian_moments": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_priors.laplace_moments": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_priors.lognormal_moments": {
  "lineno": 152,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "tests.test_priors.mc_moments": {
  "lineno": 136,
  "symbols_in_volume": [
   "numpy.atleast_1d",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "tests.test_priors.test_moments": {
  "lineno": 174,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "tests.test_priors.uniform_moments": {
  "lineno": 166,
  "symbols_in_volume": [
   "numpy.atleast_1d"
  ],
  "type": "function"
 },
 "tests.test_profiling": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "tests.test_profiling.TestProfiling": {
  "lineno": 25,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_profiling.TestProfiling.prepare": {
  "lineno": 26,
  "symbols_in_volume": [
   "gpflow.defer_build",
   "gpflow.kernels.RBF",
   "gpflow.models.GPR",
   "numpy.random.rand",
   "numpy.random.randn",
   "numpy.sin"
  ],
  "type": "function"
 },
 "tests.test_profiling.TestProfiling.test_autoflow": {
  "lineno": 53,
  "symbols_in_volume": [
   "gpflow.session_manager.get_session",
   "gpflow.settings.get_settings",
   "gpflow.settings.temp_settings",
   "os.path.exists",
   "os.path.join",
   "os.remove",
   "tensorflow.test.get_temp_dir"
  ],
  "type": "function"
 },
 "tests.test_profiling.TestProfiling.test_eachtime": {
  "lineno": 80,
  "symbols_in_volume": [
   "glob.glob",
   "gpflow.session_manager.get_session",
   "gpflow.settings.get_settings",
   "gpflow.settings.temp_settings",
   "gpflow.train.ScipyOptimizer",
   "os.path.exists",
   "os.remove",
   "os.rmdir",
   "tensorflow.test.get_temp_dir"
  ],
  "type": "function"
 },
 "tests.test_profiling.TestProfiling.test_profile": {
  "lineno": 33,
  "symbols_in_volume": [
   "gpflow.session_manager.get_session",
   "gpflow.settings.get_settings",
   "gpflow.settings.temp_settings",
   "gpflow.train.ScipyOptimizer",
   "os.path.exists",
   "os.path.join",
   "os.remove",
   "tensorflow.test.get_temp_dir"
  ],
  "type": "function"
 },
 "tests.test_quadrature": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_quadrature.cast": {
  "lineno": 36,
  "symbols_in_volume": [
   "gpflow.settings.float_type",
   "numpy.asarray",
   "tensorflow.cast"
  ],
  "type": "function"
 },
 "tests.test_quadrature.mu1": {
  "lineno": 24,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_quadrature.mu2": {
  "lineno": 27,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_quadrature.test_diagquad_1d": {
  "lineno": 40,
  "symbols_in_volume": [
   "gpflow.quadrature.ndiagquad",
   "gpflow.test_util.session_tf.run",
   "numpy.exp",
   "numpy.testing.assert_allclose",
   "tensorflow.exp"
  ],
  "type": "function"
 },
 "tests.test_quadrature.test_diagquad_2d": {
  "lineno": 49,
  "symbols_in_volume": [
   "gpflow.quadrature.ndiagquad",
   "gpflow.test_util.session_tf.run",
   "numpy.exp",
   "numpy.testing.assert_allclose",
   "tensorflow.exp"
  ],
  "type": "function"
 },
 "tests.test_quadrature.test_diagquad_logspace": {
  "lineno": 60,
  "symbols_in_volume": [
   "gpflow.quadrature.ndiagquad",
   "gpflow.test_util.session_tf.run",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_quadrature.test_diagquad_with_kwarg": {
  "lineno": 72,
  "symbols_in_volume": [
   "gpflow.quadrature.ndiagquad",
   "gpflow.test_util.session_tf.run",
   "numpy.array",
   "numpy.exp",
   "numpy.testing.assert_allclose",
   "tensorflow.exp"
  ],
  "type": "function"
 },
 "tests.test_quadrature.var1": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_quadrature.var2": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_saver": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_saver.Data": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_saver.Data.deep_structure": {
  "lineno": 33,
  "symbols_in_volume": [
   "gpflow.Param",
   "gpflow.Parameterized",
   "gpflow.defer_build"
  ],
  "type": "function"
 },
 "tests.test_saver.Data.model": {
  "lineno": 54,
  "symbols_in_volume": [
   "gpflow.kernels.RBF",
   "gpflow.models.GPR",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "tests.test_saver.Data.x_new": {
  "lineno": 62,
  "symbols_in_volume": [
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "tests.test_saver.collection_type_values": {
  "lineno": 101,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "tests.test_saver.deep_structure": {
  "lineno": 73,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_saver.encode_decode": {
  "lineno": 192,
  "symbols_in_volume": [
   "gpflow.SaverContext",
   "gpflow.saver.CoderDispatcher"
  ],
  "type": "function"
 },
 "tests.test_saver.equal_params": {
  "lineno": 198,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_saver.filename": {
  "lineno": 67,
  "symbols_in_volume": [
   "pytest.fixture",
   "tempfile.NamedTemporaryFile"
  ],
  "type": "function"
 },
 "tests.test_saver.list_type_values": {
  "lineno": 91,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float",
   "numpy.float32"
  ],
  "type": "function"
 },
 "tests.test_saver.model": {
  "lineno": 78,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_saver.simple_type_values": {
  "lineno": 83,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float16",
   "numpy.float32",
   "numpy.int",
   "tensorflow.exp"
  ],
  "type": "function"
 },
 "tests.test_saver.test_encode_decode_collection_types": {
  "lineno": 132,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "tests.test_saver.test_encode_decode_list_types": {
  "lineno": 120,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "tests.test_saver.test_encode_decode_list_types.equal": {
  "lineno": 123,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "tests.test_saver.test_encode_decode_simple_types": {
  "lineno": 114,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "tests.test_saver.test_loading_into_specific_session": {
  "lineno": 176,
  "symbols_in_volume": [
   "gpflow.Saver",
   "gpflow.SaverContext",
   "gpflow.test_util.session_context",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_saver.test_loading_without_autocompile": {
  "lineno": 166,
  "symbols_in_volume": [
   "gpflow.Build.NO",
   "gpflow.Saver",
   "gpflow.SaverContext",
   "gpflow.test_util.session_context",
   "gpflow.test_util.session_tf.graph"
  ],
  "type": "function"
 },
 "tests.test_saver.test_saving_deep_parameterized_object": {
  "lineno": 143,
  "symbols_in_volume": [
   "copy",
   "copy.a",
   "copy.b",
   "copy.c.a",
   "copy.c.b",
   "copy.c.c.a",
   "copy.c.c.b",
   "gpflow.Saver",
   "gpflow.test_util.session_context",
   "gpflow.test_util.session_tf"
  ],
  "type": "function"
 },
 "tests.test_saver.test_saving_gpflow_model": {
  "lineno": 156,
  "symbols_in_volume": [
   "gpflow.Saver",
   "gpflow.test_util.session_context",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_scaled_euclid_dist": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.random.RandomState"
  ],
  "type": "module"
 },
 "tests.test_scaled_euclid_dist.Datum": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_scaled_euclid_dist.test_kernel_euclidean_distance": {
  "lineno": 32,
  "symbols_in_volume": [
   "gpflow.kernels.Cosine",
   "gpflow.kernels.Exponential",
   "gpflow.kernels.Matern12",
   "gpflow.kernels.Matern32",
   "gpflow.kernels.Matern52",
   "gpflow.settings.float_type",
   "gpflow.test_util.session_tf.run",
   "numpy.isfinite",
   "numpy.isnan",
   "pytest.mark.parametrize",
   "tensorflow.gradients",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "tests.test_session": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "tests.test_session.TestSessionConfiguration": {
  "lineno": 27,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_session.TestSessionConfiguration.prepare": {
  "lineno": 29,
  "symbols_in_volume": [
   "gpflow.defer_build",
   "gpflow.kernels.Matern52",
   "gpflow.models.GPR",
   "numpy.ones"
  ],
  "type": "function"
 },
 "tests.test_session.TestSessionConfiguration.test_option_mutability": {
  "lineno": 54,
  "symbols_in_volume": [
   "gpflow.session_manager.get_session",
   "gpflow.settings.profiling.each_time",
   "gpflow.settings.profiling.output_directory",
   "gpflow.settings.profiling.output_file_name",
   "gpflow.settings.session.inter_op_parallelism_threads",
   "gpflow.settings.session.intra_op_parallelism_threads",
   "tensorflow.ConfigProto",
   "tensorflow.Graph"
  ],
  "type": "function"
 },
 "tests.test_session.TestSessionConfiguration.test_option_persistance": {
  "lineno": 36,
  "symbols_in_volume": [
   "gpflow.session_manager.get_session",
   "gpflow.settings.session.allow_soft_placement",
   "gpflow.settings.session.inter_op_parallelism_threads",
   "gpflow.settings.session.intra_op_parallelism_threads"
  ],
  "type": "function"
 },
 "tests.test_session.TestSessionConfiguration.test_session_default_graph": {
  "lineno": 84,
  "symbols_in_volume": [
   "gpflow.session_manager.get_session",
   "tensorflow.get_default_graph"
  ],
  "type": "function"
 },
 "tests.test_transforms": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "tests.test_transforms.TestChainIdentity": {
  "lineno": 126,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_transforms.TestChainIdentity.assertEqualElements": {
  "lineno": 136,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "tests.test_transforms.TestChainIdentity.prepare": {
  "lineno": 127,
  "symbols_in_volume": [
   "gpflow.settings.float_type",
   "gpflow.transforms.Chain",
   "gpflow.transforms.Logistic",
   "gpflow.transforms.LowerTriangular",
   "gpflow.transforms.Transform.__subclasses__",
   "numpy.random.randn",
   "tensorflow.convert_to_tensor"
  ],
  "type": "function"
 },
 "tests.test_transforms.TestChainIdentity.test_equivalence": {
  "lineno": 141,
  "symbols_in_volume": [
   "gpflow.transforms.Chain",
   "gpflow.transforms.Identity"
  ],
  "type": "function"
 },
 "tests.test_transforms.TestDiagMatrixTransform": {
  "lineno": 255,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_transforms.TestDiagMatrixTransform.setUp": {
  "lineno": 256,
  "symbols_in_volume": [
   "gpflow.transforms.DiagMatrix"
  ],
  "type": "function"
 },
 "tests.test_transforms.TestDiagMatrixTransform.test_forward_backward": {
  "lineno": 260,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.randn",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_transforms.TestDiagMatrixTransform.test_tf_np_forward": {
  "lineno": 272,
  "symbols_in_volume": [
   "numpy.random.randn",
   "numpy.testing.assert_allclose",
   "tensorflow.convert_to_tensor"
  ],
  "type": "function"
 },
 "tests.test_transforms.TestMatrixTransforms": {
  "lineno": 195,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_transforms.TestMatrixTransforms.test_DiagMatrix": {
  "lineno": 245,
  "symbols_in_volume": [
   "gpflow.transforms.DiagMatrix",
   "numpy.array",
   "numpy.eye"
  ],
  "type": "function"
 },
 "tests.test_transforms.TestMatrixTransforms.test_LowerTriangular": {
  "lineno": 199,
  "symbols_in_volume": [
   "gpflow.transforms.LowerTriangular",
   "numpy.ones"
  ],
  "type": "function"
 },
 "tests.test_transforms.TestMatrixTransforms.test_LowerTriangularConsistency": {
  "lineno": 210,
  "symbols_in_volume": [
   "gpflow.transforms.LowerTriangular",
   "numpy.random.randn",
   "numpy.testing.assert_allclose",
   "numpy.tri",
   "tensorflow.identity"
  ],
  "type": "function"
 },
 "tests.test_transforms.TestMatrixTransforms.test_LowerTriangular_squeezes": {
  "lineno": 222,
  "symbols_in_volume": [
   "gpflow.transforms.LowerTriangular",
   "numpy.all",
   "numpy.random.randn",
   "tensorflow.squeeze"
  ],
  "type": "function"
 },
 "tests.test_transforms.TestMatrixTransforms.test_LowerTriangular_squeezes_only_first_axis": {
  "lineno": 205,
  "symbols_in_volume": [
   "gpflow.transforms.LowerTriangular",
   "numpy.ones"
  ],
  "type": "function"
 },
 "tests.test_transforms.TestOverflow": {
  "lineno": 168,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_transforms.TestOverflow.setUp": {
  "lineno": 173,
  "symbols_in_volume": [
   "gpflow.transforms.Log1pe"
  ],
  "type": "function"
 },
 "tests.test_transforms.TestOverflow.testDivByZero": {
  "lineno": 185,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.array",
   "numpy.isinf",
   "numpy.isnan",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "tests.test_transforms.TestOverflow.testOverflow": {
  "lineno": 176,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.array",
   "numpy.isinf",
   "numpy.isnan",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "tests.test_transforms.TransformTests": {
  "lineno": 28,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_transforms.TransformTests.prepare": {
  "lineno": 29,
  "symbols_in_volume": [
   "gpflow.settings.float_type",
   "gpflow.transforms.Chain",
   "gpflow.transforms.DiagMatrix",
   "gpflow.transforms.Identity",
   "gpflow.transforms.Logistic",
   "gpflow.transforms.LowerTriangular",
   "gpflow.transforms.Rescale",
   "gpflow.transforms.Transform.__subclasses__",
   "gpflow.transforms.positive",
   "gpflow.transforms.positiveRescale",
   "numpy.random.randn",
   "tensorflow.convert_to_tensor"
  ],
  "type": "function"
 },
 "tests.test_transforms.TransformTests.test_bad_chain_argument": {
  "lineno": 120,
  "symbols_in_volume": [
   "gpflow.transforms.Logistic"
  ],
  "type": "function"
 },
 "tests.test_transforms.TransformTests.test_forward_backward": {
  "lineno": 67,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_transforms.TransformTests.test_logistic_error_bounds_equal": {
  "lineno": 116,
  "symbols_in_volume": [
   "gpflow.transforms.Logistic"
  ],
  "type": "function"
 },
 "tests.test_transforms.TransformTests.test_logistic_error_wrong_order": {
  "lineno": 112,
  "symbols_in_volume": [
   "gpflow.transforms.Logistic"
  ],
  "type": "function"
 },
 "tests.test_transforms.TransformTests.test_logjac": {
  "lineno": 86,
  "symbols_in_volume": [
   "gpflow.transforms.DiagMatrix",
   "gpflow.transforms.LowerTriangular",
   "numpy.testing.assert_allclose",
   "tensorflow.log",
   "tensorflow.matrix_determinant"
  ],
  "type": "function"
 },
 "tests.test_transforms.TransformTests.test_logjac.jacobian": {
  "lineno": 95,
  "symbols_in_volume": [
   "tensorflow.gradients",
   "tensorflow.stack"
  ],
  "type": "function"
 },
 "tests.test_transforms.TransformTests.test_tf_np_forward_backward": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_triang": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "tests.test_triang.TestVecToTri": {
  "lineno": 25,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase"
  ],
  "type": "class"
 },
 "tests.test_triang.TestVecToTri.get_example_matrices": {
  "lineno": 37,
  "symbols_in_volume": [
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "tests.test_triang.TestVecToTri.reference_inverse": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.tril_indices",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "tests.test_triang.TestVecToTri.test_basic_functionality": {
  "lineno": 47,
  "symbols_in_volume": [
   "gpflow.misc.vec_to_tri",
   "numpy.testing.assert_array_almost_equal",
   "tensorflow.constant"
  ],
  "type": "function"
 },
 "tests.test_triang.TestVecToTri.test_differentiable": {
  "lineno": 58,
  "symbols_in_volume": [
   "gpflow.misc.vec_to_tri",
   "numpy.ones_like",
   "numpy.testing.assert_array_almost_equal",
   "tensorflow.constant",
   "tensorflow.gradients",
   "tensorflow.reduce_sum"
  ],
  "type": "function"
 },
 "tests.test_uncertain_conditional": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "tests.test_uncertain_conditional.Data": {
  "lineno": 72,
  "symbols_in_volume": [
   "numpy.cos",
   "numpy.hstack",
   "numpy.linspace",
   "numpy.random.RandomState",
   "numpy.sin",
   "numpy.zeros"
  ],
  "type": "class"
 },
 "tests.test_uncertain_conditional.DataMC1": {
  "lineno": 84,
  "symbols_in_volume": [
   "numpy.hstack",
   "numpy.sin"
  ],
  "type": "class"
 },
 "tests.test_uncertain_conditional.DataMC2": {
  "lineno": 88,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.hstack",
   "numpy.sin"
  ],
  "type": "class"
 },
 "tests.test_uncertain_conditional.DataQuadrature": {
  "lineno": 101,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.RandomState"
  ],
  "type": "class"
 },
 "tests.test_uncertain_conditional.DataQuadrature.tensors": {
  "lineno": 117,
  "symbols_in_volume": [
   "collections.namedtuple",
   "gpflow.features.InducingPoints",
   "gpflow.kernels.RBF",
   "gpflow.settings.float_type",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "tests.test_uncertain_conditional.DataQuadrature.tensors.mean_fn": {
  "lineno": 137,
  "symbols_in_volume": [
   "gpflow.conditionals.conditional"
  ],
  "type": "function"
 },
 "tests.test_uncertain_conditional.DataQuadrature.tensors.mean_sq_fn": {
  "lineno": 145,
  "symbols_in_volume": [
   "gpflow.conditionals.conditional"
  ],
  "type": "function"
 },
 "tests.test_uncertain_conditional.DataQuadrature.tensors.var_fn": {
  "lineno": 141,
  "symbols_in_volume": [
   "gpflow.conditionals.conditional"
  ],
  "type": "function"
 },
 "tests.test_uncertain_conditional.MomentMatchingSVGP": {
  "lineno": 32,
  "symbols_in_volume": [
   "gpflow.models.SVGP"
  ],
  "type": "class"
 },
 "tests.test_uncertain_conditional.MomentMatchingSVGP.uncertain_predict_f_moment_matching": {
  "lineno": 33,
  "symbols_in_volume": [
   "gpflow.conditionals.uncertain_conditional",
   "gpflow.params_as_tensors"
  ],
  "type": "function"
 },
 "tests.test_uncertain_conditional.MomentMatchingSVGP.uncertain_predict_f_monte_carlo": {
  "lineno": 40,
  "symbols_in_volume": [
   "numpy.cov",
   "numpy.mean",
   "numpy.random.RandomState",
   "numpy.reshape"
  ],
  "type": "function"
 },
 "tests.test_uncertain_conditional.gen_L": {
  "lineno": 52,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.tril"
  ],
  "type": "function"
 },
 "tests.test_uncertain_conditional.gen_q_sqrt": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.tril"
  ],
  "type": "function"
 },
 "tests.test_uncertain_conditional.mean_function_factory": {
  "lineno": 60,
  "symbols_in_volume": [
   "gpflow.mean_functions.Constant",
   "gpflow.mean_functions.Linear",
   "gpflow.mean_functions.Zero"
  ],
  "type": "function"
 },
 "tests.test_uncertain_conditional.test_monte_carlo_1_din": {
  "lineno": 192,
  "symbols_in_volume": [
   "gpflow.kernels.RBF",
   "gpflow.likelihoods.Gaussian",
   "gpflow.test_util.session_context",
   "gpflow.train.AdamOptimizer",
   "numpy.testing.assert_almost_equal",
   "pytest.mark.parametrize",
   "tensorflow.constant"
  ],
  "type": "function"
 },
 "tests.test_uncertain_conditional.test_monte_carlo_2_din": {
  "lineno": 216,
  "symbols_in_volume": [
   "gpflow.kernels.RBF",
   "gpflow.likelihoods.Gaussian",
   "gpflow.test_util.session_context",
   "gpflow.train.AdamOptimizer",
   "numpy.testing.assert_almost_equal",
   "pytest.mark.parametrize",
   "tensorflow.constant"
  ],
  "type": "function"
 },
 "tests.test_uncertain_conditional.test_no_uncertainty": {
  "lineno": 170,
  "symbols_in_volume": [
   "gpflow.kernels.RBF",
   "gpflow.likelihoods.Gaussian",
   "gpflow.test_util.session_context",
   "gpflow.train.AdamOptimizer",
   "numpy.testing.assert_almost_equal",
   "pytest.mark.parametrize",
   "tensorflow.constant"
  ],
  "type": "function"
 },
 "tests.test_uncertain_conditional.test_quadrature": {
  "lineno": 240,
  "symbols_in_volume": [
   "gpflow.conditionals.uncertain_conditional",
   "gpflow.quadrature.mvnquad",
   "gpflow.test_util.session_context",
   "numpy.testing.assert_almost_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "tests.test_variational": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "tests.test_variational.VariationalMultivariateTest": {
  "lineno": 156,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase",
   "numpy.random.RandomState",
   "numpy.tril"
  ],
  "type": "class"
 },
 "tests.test_variational.VariationalMultivariateTest.get_model": {
  "lineno": 175,
  "symbols_in_volume": [
   "gpflow.models.SVGP"
  ],
  "type": "function"
 },
 "tests.test_variational.VariationalMultivariateTest.likelihood": {
  "lineno": 172,
  "symbols_in_volume": [
   "gpflow.likelihoods.Gaussian"
  ],
  "type": "function"
 },
 "tests.test_variational.VariationalMultivariateTest.test_prior_KL_fullQ": {
  "lineno": 203,
  "symbols_in_volume": [
   "gpflow.autoflow",
   "numpy.dot",
   "numpy.eye",
   "numpy.testing.assert_allclose",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "tests.test_variational.VariationalMultivariateTest.test_refrence_implementation_consistency": {
  "lineno": 190,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_variational.VariationalUnivariateTest": {
  "lineno": 71,
  "symbols_in_volume": [
   "gpflow.test_util.GPflowTestCase",
   "numpy.array",
   "numpy.atleast_2d",
   "numpy.sqrt"
  ],
  "type": "class"
 },
 "tests.test_variational.VariationalUnivariateTest.get_model": {
  "lineno": 89,
  "symbols_in_volume": [
   "gpflow.models.SVGP",
   "numpy.ones"
  ],
  "type": "function"
 },
 "tests.test_variational.VariationalUnivariateTest.likelihood": {
  "lineno": 86,
  "symbols_in_volume": [
   "gpflow.likelihoods.Gaussian"
  ],
  "type": "function"
 },
 "tests.test_variational.VariationalUnivariateTest.testUnivariateConditionals": {
  "lineno": 138,
  "symbols_in_volume": [
   "gpflow.conditionals.conditional",
   "gpflow.params_as_tensors_for",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_variational.VariationalUnivariateTest.test_build_likelihood": {
  "lineno": 126,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_variational.VariationalUnivariateTest.test_prior_KL": {
  "lineno": 110,
  "symbols_in_volume": [
   "gpflow.autoflow",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_variational.kernel": {
  "lineno": 64,
  "symbols_in_volume": [
   "gpflow.kernels.RBF"
  ],
  "type": "function"
 },
 "tests.test_variational.multivariate_prior_KL": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.linalg.slogdet",
   "numpy.linalg.solve",
   "numpy.trace"
  ],
  "type": "function"
 },
 "tests.test_variational.univariate_log_marginal_likelihood": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.log",
   "numpy.pi"
  ],
  "type": "function"
 },
 "tests.test_variational.univariate_posterior": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_variational.univariate_prior_KL": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.log"
  ],
  "type": "function"
 }
}