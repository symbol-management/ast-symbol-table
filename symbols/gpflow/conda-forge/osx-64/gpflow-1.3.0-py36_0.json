{
 "gpflow": {
  "data": {},
  "type": "module"
 },
 "gpflow.Param": {
  "data": {
   "shadows": "Parameter"
  },
  "type": "import"
 },
 "gpflow._settings": {
  "data": {
   "symbols_in_volume": [
    "gpflow._settings._SettingsManager",
    "gpflow._settings.__CONFIG",
    "gpflow._settings.__LOADED_SETTINGS",
    "gpflow._settings._namedtuplify",
    "gpflow._settings._read_config_file"
   ]
  },
  "type": "module"
 },
 "gpflow._settings.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "gpflow._settings.SETTINGS": {
  "data": {
   "lineno": 200
  },
  "type": "constant"
 },
 "gpflow._settings._MutableNamedTuple": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "class"
 },
 "gpflow._settings._MutableNamedTuple.__getattr__": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError"
   ]
  },
  "type": "function"
 },
 "gpflow._settings._MutableNamedTuple.__init__": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "gpflow._settings._MutableNamedTuple",
    "super"
   ]
  },
  "type": "function"
 },
 "gpflow._settings._MutableNamedTuple.__setattr__": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "gpflow._settings._MutableNamedTuple",
    "hasattr",
    "super"
   ]
  },
  "type": "function"
 },
 "gpflow._settings._SettingsContextManager": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "gpflow._settings._SettingsContextManager.__enter__": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "gpflow._settings._SettingsContextManager.__exit__": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "gpflow._settings._SettingsContextManager.__init__": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "gpflow._settings._SettingsManager": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "gpflow._settings._SettingsManager.__getattr__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError"
   ]
  },
  "type": "function"
 },
 "gpflow._settings._SettingsManager.__init__": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "gpflow._settings._SettingsManager.float_type": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow._settings._SettingsManager.get_settings": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "gpflow._settings.copy"
   ]
  },
  "type": "function"
 },
 "gpflow._settings._SettingsManager.int_type": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow._settings._SettingsManager.jitter": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow._settings._SettingsManager.logger": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "gpflow._settings.inspect",
    "gpflow._settings.logging"
   ]
  },
  "type": "function"
 },
 "gpflow._settings._SettingsManager.logging_level": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow._settings._SettingsManager.np_float": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "DeprecationWarning",
    "gpflow._settings.warnings",
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow._settings._SettingsManager.np_int": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "DeprecationWarning",
    "gpflow._settings.warnings",
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow._settings._SettingsManager.pop": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "gpflow._settings._SettingsManager.push": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "gpflow._settings._SettingsManager.temp_settings": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "gpflow._settings._SettingsContextManager"
   ]
  },
  "type": "function"
 },
 "gpflow._settings._SettingsManager.tf_float": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "DeprecationWarning",
    "gpflow._settings.warnings",
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow._settings._SettingsManager.tf_int": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "DeprecationWarning",
    "gpflow._settings.warnings",
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow._settings.__CONFIG": {
  "data": {
   "lineno": 197
  },
  "type": "constant"
 },
 "gpflow._settings.__LOADED_SETTINGS": {
  "data": {
   "lineno": 198
  },
  "type": "constant"
 },
 "gpflow._settings._namedtuplify": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "KeyError",
    "gpflow._settings._MutableNamedTuple",
    "gpflow._settings._parse",
    "gpflow._settings.collections",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "gpflow._settings._parse": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "getattr",
    "int",
    "isinstance",
    "numpy",
    "str"
   ]
  },
  "type": "function"
 },
 "gpflow._settings._read_config_file": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "RuntimeError",
    "gpflow._settings.configparser",
    "gpflow._settings.os",
    "map"
   ]
  },
  "type": "function"
 },
 "gpflow._settings.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "gpflow._settings.configparser": {
  "data": {
   "shadows": "configparser"
  },
  "type": "import"
 },
 "gpflow._settings.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "gpflow._settings.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "gpflow._settings.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "gpflow._settings.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "gpflow._settings.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "gpflow._settings.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "gpflow._settings.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpflow._version": {
  "data": {},
  "type": "module"
 },
 "gpflow._version.__version__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "gpflow.conditionals": {
  "data": {},
  "type": "module"
 },
 "gpflow.conditionals._conditional": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "gpflow.conditionals.base_conditional",
    "gpflow.conditionals.logger",
    "name_scope",
    "object",
    "tensorflow.eye",
    "tensorflow.shape"
   ]
  },
  "type": "function"
 },
 "gpflow.conditionals._expand_independent_outputs": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "tensorflow.matrix_diag",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "gpflow.conditionals._sample_conditional": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "NotImplementedError",
    "conditional",
    "gpflow.conditionals._sample_mvn",
    "gpflow.conditionals.logger",
    "name_scope",
    "object",
    "tensorflow.matrix_transpose"
   ]
  },
  "type": "function"
 },
 "gpflow.conditionals._sample_mvn": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "NotImplementedError",
    "tensorflow.Assert",
    "tensorflow.assert_equal",
    "tensorflow.cholesky",
    "tensorflow.control_dependencies",
    "tensorflow.equal",
    "tensorflow.eye",
    "tensorflow.matmul",
    "tensorflow.random_normal",
    "tensorflow.rank",
    "tensorflow.reduce_all",
    "tensorflow.shape",
    "tensorflow.sqrt",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "gpflow.conditionals.base_conditional": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "ValueError",
    "gpflow.conditionals.logger",
    "name_scope",
    "str",
    "tensorflow.cholesky",
    "tensorflow.expand_dims",
    "tensorflow.matmul",
    "tensorflow.matrix_triangular_solve",
    "tensorflow.reduce_sum",
    "tensorflow.shape",
    "tensorflow.square",
    "tensorflow.stack",
    "tensorflow.tile",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "gpflow.conditionals.logger": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "gpflow.conditionals.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "gpflow.conditionals.uncertain_conditional": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "Gaussian",
    "Kuu",
    "NotImplementedError",
    "expectation",
    "isinstance",
    "name_scope",
    "tensorflow.cholesky",
    "tensorflow.einsum",
    "tensorflow.matmul",
    "tensorflow.matrix_band_part",
    "tensorflow.matrix_diag",
    "tensorflow.matrix_diag_part",
    "tensorflow.matrix_transpose",
    "tensorflow.matrix_triangular_solve",
    "tensorflow.reshape",
    "tensorflow.shape",
    "tensorflow.tile",
    "tensorflow.trace",
    "tensorflow.transpose",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "gpflow.core": {
  "data": {},
  "type": "module"
 },
 "gpflow.core.autoflow": {
  "data": {},
  "type": "module"
 },
 "gpflow.core.autoflow.AutoFlow": {
  "data": {
   "lineno": 19
  },
  "type": "class"
 },
 "gpflow.core.autoflow.AutoFlow.clear_autoflow": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "delattr",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "gpflow.core.autoflow.AutoFlow.get_autoflow": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "isinstance",
    "setattr",
    "str"
   ]
  },
  "type": "function"
 },
 "gpflow.core.base": {
  "data": {},
  "type": "module"
 },
 "gpflow.core.base.IPrior": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "gpflow.core.base.abc"
   ]
  },
  "type": "class"
 },
 "gpflow.core.base.IPrior.__str__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "gpflow.core.base.abc"
   ]
  },
  "type": "function"
 },
 "gpflow.core.base.IPrior.logp": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "gpflow.core.base.abc"
   ]
  },
  "type": "function"
 },
 "gpflow.core.base.IPrior.sample": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "gpflow.core.base.abc"
   ]
  },
  "type": "function"
 },
 "gpflow.core.base.ITransform": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "gpflow.core.base.abc"
   ]
  },
  "type": "class"
 },
 "gpflow.core.base.ITransform.__str__": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "gpflow.core.base.abc"
   ]
  },
  "type": "function"
 },
 "gpflow.core.base.ITransform.backward": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "gpflow.core.base.abc"
   ]
  },
  "type": "function"
 },
 "gpflow.core.base.ITransform.backward_tensor": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "gpflow.core.base.abc"
   ]
  },
  "type": "function"
 },
 "gpflow.core.base.ITransform.forward": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "gpflow.core.base.abc"
   ]
  },
  "type": "function"
 },
 "gpflow.core.base.ITransform.forward_tensor": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "gpflow.core.base.abc"
   ]
  },
  "type": "function"
 },
 "gpflow.core.base.ITransform.log_jacobian_tensor": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "gpflow.core.base.abc"
   ]
  },
  "type": "function"
 },
 "gpflow.core.base.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "gpflow.core.compilable": {
  "data": {},
  "type": "module"
 },
 "gpflow.core.compilable.AutoBuild": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "gpflow.core.compilable.abc"
   ]
  },
  "type": "class"
 },
 "gpflow.core.compilable.AutoBuild.__new__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "gpflow.core.compilable.AutoBuild",
    "origin_init.__doc__",
    "setattr",
    "super"
   ]
  },
  "type": "function"
 },
 "gpflow.core.compilable.AutoBuild.__new__.__init__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "gpflow.core.compilable.AutoBuild",
    "gpflow.core.compilable.AutoBuildStatus",
    "gpflow.core.compilable.inspect",
    "isinstance",
    "origin_init"
   ]
  },
  "type": "function"
 },
 "gpflow.core.compilable.AutoBuildStatus": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "gpflow.core.compilable.enum"
   ]
  },
  "type": "class"
 },
 "gpflow.core.compilable.Build": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "gpflow.core.compilable.enum"
   ]
  },
  "type": "class"
 },
 "gpflow.core.compilable.ICompilable": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "gpflow.core.compilable.AutoBuild"
   ]
  },
  "type": "class"
 },
 "gpflow.core.compilable.ICompilable.build": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "NotImplementedError",
    "gpflow.core.compilable.abc"
   ]
  },
  "type": "function"
 },
 "gpflow.core.compilable.ICompilable.clear": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "NotImplementedError",
    "gpflow.core.compilable.abc"
   ]
  },
  "type": "function"
 },
 "gpflow.core.compilable.ICompilable.compile": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "NotImplementedError",
    "gpflow.core.compilable.abc"
   ]
  },
  "type": "function"
 },
 "gpflow.core.compilable.ICompilable.feeds": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "NotImplementedError",
    "gpflow.core.compilable.abc"
   ]
  },
  "type": "function"
 },
 "gpflow.core.compilable.ICompilable.graph": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "NotImplementedError",
    "gpflow.core.compilable.abc"
   ]
  },
  "type": "function"
 },
 "gpflow.core.compilable.ICompilable.initializable_feeds": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "NotImplementedError",
    "gpflow.core.compilable.abc"
   ]
  },
  "type": "function"
 },
 "gpflow.core.compilable.ICompilable.initializables": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "NotImplementedError",
    "gpflow.core.compilable.abc"
   ]
  },
  "type": "function"
 },
 "gpflow.core.compilable.ICompilable.initialize": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "NotImplementedError",
    "gpflow.core.compilable.abc"
   ]
  },
  "type": "function"
 },
 "gpflow.core.compilable.ICompilable.is_built": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "NotImplementedError",
    "gpflow.core.compilable.abc"
   ]
  },
  "type": "function"
 },
 "gpflow.core.compilable.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "gpflow.core.compilable.enum": {
  "data": {
   "shadows": "enum"
  },
  "type": "import"
 },
 "gpflow.core.compilable.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "gpflow.core.errors": {
  "data": {},
  "type": "module"
 },
 "gpflow.core.errors.GPflowError": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "gpflow.core.node": {
  "data": {},
  "type": "module"
 },
 "gpflow.core.node.Node": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "gpflow.core.node.Node.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "gpflow.core.node.Node",
    "super"
   ]
  },
  "type": "function"
 },
 "gpflow.core.node.Node._build": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "NotImplementedError",
    "gpflow.core.node.abc"
   ]
  },
  "type": "function"
 },
 "gpflow.core.node.Node._clear": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "NotImplementedError",
    "gpflow.core.node.abc"
   ]
  },
  "type": "function"
 },
 "gpflow.core.node.Node.anchor": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "NotImplementedError",
    "gpflow.core.node.abc"
   ]
  },
  "type": "function"
 },
 "gpflow.core.node.Node.build": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "tensorflow.name_scope"
   ]
  },
  "type": "function"
 },
 "gpflow.core.node.Node.clear": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "GPflowError"
   ]
  },
  "type": "function"
 },
 "gpflow.core.node.Node.compile": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "gpflow.core.node.Node.enquire_graph": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "tensorflow.get_default_graph"
   ]
  },
  "type": "function"
 },
 "gpflow.core.node.Node.enquire_session": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "tensorflow.get_default_session"
   ]
  },
  "type": "function"
 },
 "gpflow.core.node.Node.initialize": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "gpflow.core.node.Node.is_built_coherence": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "GPflowError"
   ]
  },
  "type": "function"
 },
 "gpflow.core.node.Node.tf_name_scope": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.core.node.Node.tf_pathname": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.core.node.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "gpflow.core.node.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "gpflow.core.parentable": {
  "data": {},
  "type": "module"
 },
 "gpflow.core.parentable.Parentable": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "gpflow.core.parentable.Parentable.__init__": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "gpflow.core.parentable.Parentable._define_name": {
  "data": {
   "lineno": 207
  },
  "type": "function"
 },
 "gpflow.core.parentable.Parentable._gen_index": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "gpflow.core.parentable.Parentable",
    "gpflow.core.parentable.uuid",
    "str"
   ]
  },
  "type": "function"
 },
 "gpflow.core.parentable.Parentable._read_index": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "gpflow.core.parentable.Parentable.childname": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "gpflow.core.parentable.Parentable",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "gpflow.core.parentable.Parentable.children": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "gpflow.core.parentable.abc"
   ]
  },
  "type": "function"
 },
 "gpflow.core.parentable.Parentable.contains": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "gpflow.core.parentable.Parentable.descendants": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.core.parentable.Parentable.full_name": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.core.parentable.Parentable.index": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.core.parentable.Parentable.name": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.core.parentable.Parentable.parent": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.core.parentable.Parentable.pathname": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.core.parentable.Parentable.remove_child": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "gpflow.core.parentable.abc"
   ]
  },
  "type": "function"
 },
 "gpflow.core.parentable.Parentable.reset_name": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "gpflow.core.parentable.Parentable.root": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.core.parentable.Parentable.set_child": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "ValueError",
    "gpflow.core.parentable.Parentable",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "gpflow.core.parentable.Parentable.set_parent": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "ValueError",
    "gpflow.core.parentable.Parentable",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "gpflow.core.parentable.Parentable.store_child": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "gpflow.core.parentable.abc"
   ]
  },
  "type": "function"
 },
 "gpflow.core.parentable.Parentable.unset_child": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "gpflow.core.parentable.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "gpflow.core.parentable.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "gpflow.core.tensor_converter": {
  "data": {},
  "type": "module"
 },
 "gpflow.core.tensor_converter.TensorConverter": {
  "data": {
   "lineno": 20
  },
  "type": "class"
 },
 "gpflow.core.tensor_converter.TensorConverter.tensor_mode": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "GPflowError",
    "ValueError",
    "classmethod",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "gpflow.dispatch": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "functools.partial",
    "gpflow.dispatch.gpflow_md_namespace",
    "multipledispatch.Dispatcher",
    "multipledispatch.dispatch"
   ]
  },
  "type": "module"
 },
 "gpflow.dispatch.Dispatcher": {
  "data": {
   "shadows": "multipledispatch.Dispatcher"
  },
  "type": "import"
 },
 "gpflow.dispatch.conditional": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "gpflow.dispatch.dispatch": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "gpflow.dispatch.gpflow_md_namespace": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "gpflow.dispatch.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "gpflow.dispatch.sample_conditional": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "gpflow.expectations": {
  "data": {},
  "type": "module"
 },
 "gpflow.expectations._expectation": {
  "data": {
   "lineno": 1044,
   "symbols_in_volume": [
    "Gaussian",
    "MarkovGaussian",
    "dispatch",
    "gpflow.expectations.expectation",
    "object",
    "type"
   ]
  },
  "type": "function"
 },
 "gpflow.expectations._expectation.get_cholesky_solve_terms": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "tensorflow.expand_dims",
    "tensorflow.matrix_triangular_solve",
    "tensorflow.reduce_sum",
    "tensorflow.square",
    "tensorflow.tile",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "gpflow.expectations._expectation.get_squared_length_scales": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "gpflow.expectations._quadrature_expectation": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "MarkovGaussian",
    "dispatch",
    "gpflow.expectations.get_eval_func",
    "int",
    "mvnquad",
    "numpy.s_",
    "object",
    "tensorflow.concat",
    "tensorflow.matrix_transpose",
    "tensorflow.split",
    "type"
   ]
  },
  "type": "function"
 },
 "gpflow.expectations.expectation": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "DiagonalGaussian",
    "Gaussian",
    "MarkovGaussian",
    "NotImplementedError",
    "gpflow.expectations._expectation",
    "gpflow.expectations._quadrature_expectation",
    "gpflow.expectations.logger",
    "isinstance",
    "len",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "gpflow.expectations.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "gpflow.expectations.get_eval_func": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "isinstance",
    "numpy.s_",
    "obj",
    "obj.Kdiag",
    "slice",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "gpflow.expectations.it": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "gpflow.expectations.logger": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "gpflow.expectations.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "gpflow.expectations.quadrature_expectation": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "DiagonalGaussian",
    "Gaussian",
    "MarkovGaussian",
    "gpflow.expectations._quadrature_expectation",
    "isinstance",
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "gpflow.expectations.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "gpflow.expectations.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpflow.features": {
  "data": {},
  "type": "module"
 },
 "gpflow.features.InducingFeature": {
  "data": {
   "lineno": 30
  },
  "type": "class"
 },
 "gpflow.features.InducingFeature.Kuf": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "DeprecationWarning",
    "gpflow.features.Kuf",
    "gpflow.features.warnings"
   ]
  },
  "type": "function"
 },
 "gpflow.features.InducingFeature.Kuu": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "DeprecationWarning",
    "gpflow.features.Kuu",
    "gpflow.features.warnings"
   ]
  },
  "type": "function"
 },
 "gpflow.features.InducingFeature.__len__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod",
    "int"
   ]
  },
  "type": "function"
 },
 "gpflow.features.InducingPoints": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "gpflow.features.InducingPointsBase"
   ]
  },
  "type": "class"
 },
 "gpflow.features.InducingPointsBase": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "gpflow.features.InducingFeature"
   ]
  },
  "type": "class"
 },
 "gpflow.features.InducingPointsBase.__init__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "Parameter",
    "super"
   ]
  },
  "type": "function"
 },
 "gpflow.features.InducingPointsBase.__len__": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "gpflow.features.Kuf": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "dispatch",
    "gpflow.features.Multiscale",
    "object",
    "params_as_tensors_for",
    "tensorflow.exp",
    "tensorflow.reduce_prod",
    "tensorflow.reshape",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "gpflow.features.Kuu": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "dispatch",
    "gpflow.features.Multiscale",
    "len",
    "params_as_tensors_for",
    "tensorflow.exp",
    "tensorflow.expand_dims",
    "tensorflow.eye",
    "tensorflow.reduce_prod",
    "tensorflow.sqrt",
    "tensorflow.square"
   ]
  },
  "type": "function"
 },
 "gpflow.features.Multiscale": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "gpflow.features.InducingPointsBase"
   ]
  },
  "type": "class"
 },
 "gpflow.features.Multiscale.__init__": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "Parameter",
    "ValueError",
    "super"
   ]
  },
  "type": "function"
 },
 "gpflow.features.Multiscale._cust_square_dist": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "staticmethod",
    "tensorflow.expand_dims",
    "tensorflow.reduce_sum",
    "tensorflow.square"
   ]
  },
  "type": "function"
 },
 "gpflow.features.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "gpflow.features.inducingpoint_wrapper": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "ValueError",
    "gpflow.features.InducingFeature",
    "gpflow.features.InducingPoints",
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "gpflow.features.logger": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "gpflow.features.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "gpflow.features.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "gpflow.features.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpflow.kernels": {
  "data": {
   "symbols_in_volume": [
    "gpflow.kernels.Kernel",
    "gpflow.kernels.Periodic",
    "gpflow.kernels.Product",
    "gpflow.kernels.SquaredExponential",
    "gpflow.kernels.Sum",
    "gpflow.kernels.make_deprecated_class"
   ]
  },
  "type": "module"
 },
 "gpflow.kernels.Add": {
  "data": {
   "lineno": 787
  },
  "type": "constant"
 },
 "gpflow.kernels.ArcCosine": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "gpflow.kernels.Kernel"
   ]
  },
  "type": "class"
 },
 "gpflow.kernels.ArcCosine.K": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "numpy.pi",
    "tensorflow.acos",
    "tensorflow.expand_dims",
    "tensorflow.matrix_transpose",
    "tensorflow.sqrt"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.ArcCosine.Kdiag": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "numpy.pi",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.ArcCosine._J": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "numpy.pi",
    "tensorflow.cos",
    "tensorflow.sin"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.ArcCosine.__init__": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "Parameter",
    "ValueError",
    "super"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.ArcCosine._weighted_product": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "tensorflow.matmul",
    "tensorflow.reduce_sum",
    "tensorflow.square"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.Bias": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "gpflow.kernels.Constant"
   ]
  },
  "type": "class"
 },
 "gpflow.kernels.Combination": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "gpflow.kernels.Kernel"
   ]
  },
  "type": "class"
 },
 "gpflow.kernels.Combination.__init__": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "ParamList",
    "TypeError",
    "all",
    "gpflow.kernels.Kernel",
    "isinstance",
    "numpy.max",
    "slice",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.Combination.on_separate_dimensions": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "numpy.any",
    "property",
    "slice"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.Constant": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "gpflow.kernels.Static"
   ]
  },
  "type": "class"
 },
 "gpflow.kernels.Constant.K": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "tensorflow.concat",
    "tensorflow.fill",
    "tensorflow.reshape",
    "tensorflow.shape",
    "tensorflow.squeeze"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.Coregion": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "gpflow.kernels.Kernel"
   ]
  },
  "type": "class"
 },
 "gpflow.kernels.Coregion.K": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "tensorflow.cast",
    "tensorflow.gather",
    "tensorflow.int32",
    "tensorflow.matmul",
    "tensorflow.matrix_diag",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.Coregion.Kdiag": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "tensorflow.cast",
    "tensorflow.gather",
    "tensorflow.int32",
    "tensorflow.reduce_sum",
    "tensorflow.square"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.Coregion.__init__": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "Parameter",
    "numpy.ones",
    "numpy.zeros",
    "super"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.Cosine": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "gpflow.kernels.Stationary"
   ]
  },
  "type": "class"
 },
 "gpflow.kernels.Cosine.K_r": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "tensorflow.cos"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.Exponential": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "gpflow.kernels.Stationary"
   ]
  },
  "type": "class"
 },
 "gpflow.kernels.Exponential.K_r": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "tensorflow.exp"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.Kern": {
  "data": {
   "lineno": 786
  },
  "type": "constant"
 },
 "gpflow.kernels.Kernel": {
  "data": {
   "lineno": 30
  },
  "type": "class"
 },
 "gpflow.kernels.Kernel.__add__": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "gpflow.kernels.Sum"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.Kernel.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "len",
    "numpy.array",
    "numpy.int32",
    "range",
    "slice",
    "super"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.Kernel.__mul__": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "gpflow.kernels.Product"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.Kernel._slice": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "isinstance",
    "slice",
    "tensorflow.assert_equal",
    "tensorflow.control_dependencies",
    "tensorflow.convert_to_tensor",
    "tensorflow.gather",
    "tensorflow.identity",
    "tensorflow.shape"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.Kernel._slice_cov": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "slice",
    "tensorflow.concat",
    "tensorflow.cond",
    "tensorflow.equal",
    "tensorflow.gather",
    "tensorflow.matrix_diag",
    "tensorflow.rank",
    "tensorflow.reshape",
    "tensorflow.shape",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.Kernel._validate_ard_shape": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.Kernel.compute_K": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "autoflow"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.Kernel.compute_K_symm": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "autoflow"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.Kernel.compute_Kdiag": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "autoflow"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.Kernel.on_separate_dims": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "isinstance",
    "numpy.any",
    "slice"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.Linear": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "gpflow.kernels.Kernel"
   ]
  },
  "type": "class"
 },
 "gpflow.kernels.Linear.K": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "tensorflow.matmul"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.Linear.Kdiag": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "tensorflow.reduce_sum",
    "tensorflow.square"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.Linear.__init__": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "Parameter",
    "super"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.Matern12": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "gpflow.kernels.Stationary"
   ]
  },
  "type": "class"
 },
 "gpflow.kernels.Matern12.K_r": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "tensorflow.exp"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.Matern32": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "gpflow.kernels.Stationary"
   ]
  },
  "type": "class"
 },
 "gpflow.kernels.Matern32.K_r": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "numpy.sqrt",
    "tensorflow.exp"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.Matern52": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "gpflow.kernels.Stationary"
   ]
  },
  "type": "class"
 },
 "gpflow.kernels.Matern52.K_r": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "numpy.sqrt",
    "tensorflow.exp",
    "tensorflow.square"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.Periodic": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "gpflow.kernels.Kernel"
   ]
  },
  "type": "class"
 },
 "gpflow.kernels.Periodic.K": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "numpy.pi",
    "tensorflow.concat",
    "tensorflow.exp",
    "tensorflow.expand_dims",
    "tensorflow.range",
    "tensorflow.rank",
    "tensorflow.reduce_sum",
    "tensorflow.reshape",
    "tensorflow.sin",
    "tensorflow.square",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.Periodic.Kdiag": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "tensorflow.fill",
    "tensorflow.shape",
    "tensorflow.squeeze"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.Periodic.__init__": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "Parameter",
    "super"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.PeriodicKernel": {
  "data": {
   "lineno": 789
  },
  "type": "constant"
 },
 "gpflow.kernels.Polynomial": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "gpflow.kernels.Linear"
   ]
  },
  "type": "class"
 },
 "gpflow.kernels.Polynomial.K": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "gpflow.kernels.Linear"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.Polynomial.Kdiag": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "gpflow.kernels.Linear"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.Polynomial.__init__": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "Parameter",
    "super"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.Prod": {
  "data": {
   "lineno": 788
  },
  "type": "constant"
 },
 "gpflow.kernels.Product": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "gpflow.kernels.Combination"
   ]
  },
  "type": "class"
 },
 "gpflow.kernels.Product.K": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": [
    "functools.reduce",
    "tensorflow.multiply"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.Product.Kdiag": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "functools.reduce",
    "tensorflow.multiply"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.RBF": {
  "data": {
   "lineno": 346
  },
  "type": "constant"
 },
 "gpflow.kernels.RationalQuadratic": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "gpflow.kernels.Stationary"
   ]
  },
  "type": "class"
 },
 "gpflow.kernels.RationalQuadratic.K_r2": {
  "data": {
   "lineno": 368
  },
  "type": "function"
 },
 "gpflow.kernels.RationalQuadratic.__init__": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "Parameter",
    "super"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.SquaredExponential": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "gpflow.kernels.Stationary"
   ]
  },
  "type": "class"
 },
 "gpflow.kernels.SquaredExponential.K_r2": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "tensorflow.exp"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.Static": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "gpflow.kernels.Kernel"
   ]
  },
  "type": "class"
 },
 "gpflow.kernels.Static.Kdiag": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "tensorflow.fill",
    "tensorflow.shape",
    "tensorflow.squeeze"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.Static.__init__": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "Parameter",
    "super"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.Stationary": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "gpflow.kernels.Kernel"
   ]
  },
  "type": "class"
 },
 "gpflow.kernels.Stationary.K": {
  "data": {
   "lineno": 304
  },
  "type": "function"
 },
 "gpflow.kernels.Stationary.K_r": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.Stationary.K_r2": {
  "data": {
   "lineno": 328
  },
  "type": "function"
 },
 "gpflow.kernels.Stationary.Kdiag": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "tensorflow.fill",
    "tensorflow.shape",
    "tensorflow.squeeze"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.Stationary.__init__": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "Parameter",
    "super"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.Stationary._clipped_sqrt": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "staticmethod",
    "tensorflow.maximum",
    "tensorflow.sqrt"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.Stationary._scaled_square_dist": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "tensorflow.matmul",
    "tensorflow.matrix_transpose",
    "tensorflow.reduce_sum",
    "tensorflow.square"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.Stationary.scaled_euclid_dist": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "DeprecationWarning",
    "gpflow.kernels.warnings"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.Stationary.scaled_square_dist": {
  "data": {
   "lineno": 285
  },
  "type": "function"
 },
 "gpflow.kernels.Sum": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "gpflow.kernels.Combination"
   ]
  },
  "type": "class"
 },
 "gpflow.kernels.Sum.K": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "functools.reduce",
    "tensorflow.add"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.Sum.Kdiag": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "functools.reduce",
    "tensorflow.add"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.White": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "gpflow.kernels.Static"
   ]
  },
  "type": "class"
 },
 "gpflow.kernels.White.K": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "tensorflow.concat",
    "tensorflow.fill",
    "tensorflow.matrix_diag",
    "tensorflow.reshape",
    "tensorflow.shape",
    "tensorflow.squeeze",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.make_deprecated_class": {
  "data": {
   "lineno": 770
  },
  "type": "function"
 },
 "gpflow.kernels.make_deprecated_class.OldClass": {
  "data": {
   "lineno": 779
  },
  "type": "class"
 },
 "gpflow.kernels.make_deprecated_class.OldClass.__new__": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "gpflow.kernels.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "gpflow.kernels.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "gpflow.kernels.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "gpflow.kernels.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpflow.kullback_leiblers": {
  "data": {},
  "type": "module"
 },
 "gpflow.kullback_leiblers.gauss_kl": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "name_scope",
    "tensorflow.cast",
    "tensorflow.cholesky",
    "tensorflow.expand_dims",
    "tensorflow.eye",
    "tensorflow.int64",
    "tensorflow.log",
    "tensorflow.matrix_band_part",
    "tensorflow.matrix_diag",
    "tensorflow.matrix_diag_part",
    "tensorflow.matrix_triangular_solve",
    "tensorflow.reduce_sum",
    "tensorflow.shape",
    "tensorflow.size",
    "tensorflow.square",
    "tensorflow.tile",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "gpflow.kullback_leiblers.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "gpflow.likelihoods": {
  "data": {},
  "type": "module"
 },
 "gpflow.likelihoods.Bernoulli": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "gpflow.likelihoods.Likelihood"
   ]
  },
  "type": "class"
 },
 "gpflow.likelihoods.Bernoulli.__init__": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "gpflow.likelihoods.inv_probit",
    "super"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.Bernoulli.conditional_mean": {
  "data": {
   "lineno": 254
  },
  "type": "function"
 },
 "gpflow.likelihoods.Bernoulli.conditional_variance": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "tensorflow.square"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.Bernoulli.logp": {
  "data": {
   "lineno": 239
  },
  "type": "function"
 },
 "gpflow.likelihoods.Bernoulli.predict_density": {
  "data": {
   "lineno": 250
  },
  "type": "function"
 },
 "gpflow.likelihoods.Bernoulli.predict_mean_and_var": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "gpflow.likelihoods.inv_probit",
    "super",
    "tensorflow.sqrt",
    "tensorflow.square"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.Beta": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "gpflow.likelihoods.Likelihood"
   ]
  },
  "type": "class"
 },
 "gpflow.likelihoods.Beta.__init__": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "Parameter",
    "gpflow.likelihoods.inv_probit",
    "super"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.Beta.conditional_mean": {
  "data": {
   "lineno": 323
  },
  "type": "function"
 },
 "gpflow.likelihoods.Beta.conditional_variance": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "tensorflow.square"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.Beta.logp": {
  "data": {
   "lineno": 316
  },
  "type": "function"
 },
 "gpflow.likelihoods.Exponential": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "gpflow.likelihoods.Likelihood"
   ]
  },
  "type": "class"
 },
 "gpflow.likelihoods.Exponential.__init__": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "super",
    "tensorflow.exp"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.Exponential.conditional_mean": {
  "data": {
   "lineno": 192
  },
  "type": "function"
 },
 "gpflow.likelihoods.Exponential.conditional_variance": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "tensorflow.square"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.Exponential.logp": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "gpflow.likelihoods.Exponential.variational_expectations": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "super",
    "tensorflow.exp"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.Gamma": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "gpflow.likelihoods.Likelihood"
   ]
  },
  "type": "class"
 },
 "gpflow.likelihoods.Gamma.__init__": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "Parameter",
    "super",
    "tensorflow.exp"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.Gamma.conditional_mean": {
  "data": {
   "lineno": 276
  },
  "type": "function"
 },
 "gpflow.likelihoods.Gamma.conditional_variance": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "tensorflow.square"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.Gamma.logp": {
  "data": {
   "lineno": 272
  },
  "type": "function"
 },
 "gpflow.likelihoods.Gamma.variational_expectations": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "super",
    "tensorflow.exp",
    "tensorflow.lgamma",
    "tensorflow.log"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.Gaussian": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "gpflow.likelihoods.Likelihood"
   ]
  },
  "type": "class"
 },
 "gpflow.likelihoods.Gaussian.__init__": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "Parameter",
    "super"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.Gaussian.conditional_mean": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "tensorflow.identity"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.Gaussian.conditional_variance": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "tensorflow.fill",
    "tensorflow.shape",
    "tensorflow.squeeze"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.Gaussian.logp": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "gpflow.likelihoods.Gaussian.predict_density": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "gpflow.likelihoods.Gaussian.predict_mean_and_var": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "tensorflow.identity"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.Gaussian.variational_expectations": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.pi",
    "tensorflow.log",
    "tensorflow.square"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.GaussianMC": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "gpflow.likelihoods.Gaussian",
    "gpflow.likelihoods.MonteCarloLikelihood"
   ]
  },
  "type": "class"
 },
 "gpflow.likelihoods.Likelihood": {
  "data": {
   "lineno": 33
  },
  "type": "class"
 },
 "gpflow.likelihoods.Likelihood.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.Likelihood.predict_density": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ndiagquad"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.Likelihood.predict_mean_and_var": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ndiagquad",
    "tensorflow.square"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.Likelihood.variational_expectations": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ndiagquad"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.MonteCarloLikelihood": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "gpflow.likelihoods.Likelihood"
   ]
  },
  "type": "class"
 },
 "gpflow.likelihoods.MonteCarloLikelihood.__init__": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.MonteCarloLikelihood._mc_quadrature": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "bool",
    "ndiag_mc"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.MonteCarloLikelihood.predict_density": {
  "data": {
   "lineno": 629
  },
  "type": "function"
 },
 "gpflow.likelihoods.MonteCarloLikelihood.predict_mean_and_var": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "tensorflow.square"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.MonteCarloLikelihood.variational_expectations": {
  "data": {
   "lineno": 649
  },
  "type": "function"
 },
 "gpflow.likelihoods.MultiClass": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "gpflow.likelihoods.Likelihood"
   ]
  },
  "type": "class"
 },
 "gpflow.likelihoods.MultiClass.__init__": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "NotImplementedError",
    "gpflow.likelihoods.RobustMax",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.MultiClass._predict_non_logged_density": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "NotImplementedError",
    "gpflow.likelihoods.RobustMax",
    "hermgauss",
    "isinstance",
    "params_as_tensors_for"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.MultiClass.conditional_mean": {
  "data": {
   "lineno": 448
  },
  "type": "function"
 },
 "gpflow.likelihoods.MultiClass.conditional_variance": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "tensorflow.square"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.MultiClass.logp": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "NotImplementedError",
    "gpflow.likelihoods.RobustMax",
    "isinstance",
    "params_as_tensors_for",
    "tensorflow.argmax",
    "tensorflow.cast",
    "tensorflow.equal",
    "tensorflow.expand_dims",
    "tensorflow.int64",
    "tensorflow.log",
    "tensorflow.ones",
    "tensorflow.shape",
    "tensorflow.where",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.MultiClass.predict_density": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "tensorflow.log"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.MultiClass.predict_mean_and_var": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "NotImplementedError",
    "gpflow.likelihoods.RobustMax",
    "isinstance",
    "numpy.array",
    "numpy.int64",
    "range",
    "tensorflow.fill",
    "tensorflow.reshape",
    "tensorflow.shape",
    "tensorflow.square",
    "tensorflow.stack",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.MultiClass.variational_expectations": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "NotImplementedError",
    "gpflow.likelihoods.RobustMax",
    "hermgauss",
    "isinstance",
    "params_as_tensors_for",
    "tensorflow.log"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.Ordinal": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "gpflow.likelihoods.Likelihood"
   ]
  },
  "type": "class"
 },
 "gpflow.likelihoods.Ordinal.__init__": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "Parameter",
    "super"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.Ordinal._make_phi": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "gpflow.likelihoods.inv_probit",
    "numpy.array",
    "numpy.inf",
    "tensorflow.concat",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.Ordinal.conditional_mean": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float64",
    "tensorflow.matmul",
    "tensorflow.reshape",
    "tensorflow.shape"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.Ordinal.conditional_variance": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float64",
    "tensorflow.matmul",
    "tensorflow.reshape",
    "tensorflow.shape",
    "tensorflow.square"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.Ordinal.logp": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "gpflow.likelihoods.inv_probit",
    "numpy.array",
    "numpy.inf",
    "tensorflow.cast",
    "tensorflow.concat",
    "tensorflow.gather",
    "tensorflow.int64",
    "tensorflow.log"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.Poisson": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "gpflow.likelihoods.Likelihood"
   ]
  },
  "type": "class"
 },
 "gpflow.likelihoods.Poisson.__init__": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "numpy.double",
    "super",
    "tensorflow.exp"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.Poisson.conditional_mean": {
  "data": {
   "lineno": 174
  },
  "type": "function"
 },
 "gpflow.likelihoods.Poisson.conditional_variance": {
  "data": {
   "lineno": 171
  },
  "type": "function"
 },
 "gpflow.likelihoods.Poisson.logp": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "gpflow.likelihoods.Poisson.variational_expectations": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "gpflow.likelihoods.Poisson",
    "super",
    "tensorflow.exp",
    "tensorflow.lgamma",
    "tensorflow.log"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.RobustMax": {
  "data": {
   "lineno": 333
  },
  "type": "class"
 },
 "gpflow.likelihoods.RobustMax.__call__": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "tensorflow.argmax",
    "tensorflow.one_hot",
    "tensorflow.squeeze"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.RobustMax.__init__": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "Parameter",
    "super"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.RobustMax._eps_K1": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.RobustMax.prob_is_largest": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.pi",
    "numpy.sqrt",
    "tensorflow.cast",
    "tensorflow.clip_by_value",
    "tensorflow.erf",
    "tensorflow.expand_dims",
    "tensorflow.int64",
    "tensorflow.matmul",
    "tensorflow.one_hot",
    "tensorflow.reduce_prod",
    "tensorflow.reduce_sum",
    "tensorflow.reshape",
    "tensorflow.sqrt"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.SoftMax": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "gpflow.likelihoods.MonteCarloLikelihood"
   ]
  },
  "type": "class"
 },
 "gpflow.likelihoods.SoftMax.__init__": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.SoftMax.conditional_mean": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "tensorflow.nn.softmax"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.SoftMax.conditional_variance": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": [
    "tensorflow.square"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.SoftMax.logp": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "tensorflow.assert_equal",
    "tensorflow.cast",
    "tensorflow.control_dependencies",
    "tensorflow.nn.sparse_softmax_cross_entropy_with_logits",
    "tensorflow.shape"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.StudentT": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "gpflow.likelihoods.Likelihood"
   ]
  },
  "type": "class"
 },
 "gpflow.likelihoods.StudentT.__init__": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "Parameter",
    "super"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.StudentT.conditional_mean": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "tensorflow.identity"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.StudentT.conditional_variance": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "tensorflow.fill",
    "tensorflow.shape",
    "tensorflow.squeeze"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.StudentT.logp": {
  "data": {
   "lineno": 215
  },
  "type": "function"
 },
 "gpflow.likelihoods.SwitchedLikelihood": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "gpflow.likelihoods.Likelihood"
   ]
  },
  "type": "class"
 },
 "gpflow.likelihoods.SwitchedLikelihood.__init__": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "ParamList",
    "gpflow.likelihoods.Likelihood",
    "isinstance",
    "len",
    "super"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.SwitchedLikelihood._partition_and_stitch": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "f",
    "getattr",
    "params_as_tensors_for",
    "tensorflow.cast",
    "tensorflow.dynamic_partition",
    "tensorflow.dynamic_stitch",
    "tensorflow.int32",
    "tensorflow.range",
    "tensorflow.size",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.SwitchedLikelihood.logp": {
  "data": {
   "lineno": 498
  },
  "type": "function"
 },
 "gpflow.likelihoods.SwitchedLikelihood.predict_density": {
  "data": {
   "lineno": 501
  },
  "type": "function"
 },
 "gpflow.likelihoods.SwitchedLikelihood.predict_mean_and_var": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "tensorflow.concat",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.SwitchedLikelihood.variational_expectations": {
  "data": {
   "lineno": 504
  },
  "type": "function"
 },
 "gpflow.likelihoods.inv_probit": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "numpy.sqrt",
    "tensorflow.erf"
   ]
  },
  "type": "function"
 },
 "gpflow.likelihoods.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "gpflow.likelihoods.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "gpflow.logdensities": {
  "data": {},
  "type": "module"
 },
 "gpflow.logdensities.bernoulli": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "tensorflow.equal",
    "tensorflow.log",
    "tensorflow.where"
   ]
  },
  "type": "function"
 },
 "gpflow.logdensities.beta": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "tensorflow.clip_by_value",
    "tensorflow.lgamma",
    "tensorflow.log"
   ]
  },
  "type": "function"
 },
 "gpflow.logdensities.exponential": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "tensorflow.log"
   ]
  },
  "type": "function"
 },
 "gpflow.logdensities.gamma": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "tensorflow.lgamma",
    "tensorflow.log"
   ]
  },
  "type": "function"
 },
 "gpflow.logdensities.gaussian": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.pi",
    "tensorflow.log",
    "tensorflow.square"
   ]
  },
  "type": "function"
 },
 "gpflow.logdensities.laplace": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "tensorflow.abs",
    "tensorflow.log"
   ]
  },
  "type": "function"
 },
 "gpflow.logdensities.logger": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "gpflow.logdensities.lognormal": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "gpflow.logdensities.gaussian",
    "tensorflow.log"
   ]
  },
  "type": "function"
 },
 "gpflow.logdensities.multivariate_normal": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "ValueError",
    "gpflow.logdensities.logger",
    "numpy.log",
    "numpy.pi",
    "tensorflow.cast",
    "tensorflow.log",
    "tensorflow.matrix_diag_part",
    "tensorflow.matrix_triangular_solve",
    "tensorflow.reduce_sum",
    "tensorflow.shape",
    "tensorflow.square"
   ]
  },
  "type": "function"
 },
 "gpflow.logdensities.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "gpflow.logdensities.poisson": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "tensorflow.lgamma",
    "tensorflow.log"
   ]
  },
  "type": "function"
 },
 "gpflow.logdensities.student_t": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.pi",
    "tensorflow.cast",
    "tensorflow.lgamma",
    "tensorflow.log",
    "tensorflow.square"
   ]
  },
  "type": "function"
 },
 "gpflow.logdensities.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "gpflow.logdensities.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpflow.mean_functions": {
  "data": {},
  "type": "module"
 },
 "gpflow.mean_functions.Additive": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "gpflow.mean_functions.MeanFunction"
   ]
  },
  "type": "class"
 },
 "gpflow.mean_functions.Additive.__call__": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "tensorflow.add"
   ]
  },
  "type": "function"
 },
 "gpflow.mean_functions.Additive.__init__": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "gpflow.mean_functions.MeanFunction"
   ]
  },
  "type": "function"
 },
 "gpflow.mean_functions.Constant": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "gpflow.mean_functions.MeanFunction"
   ]
  },
  "type": "class"
 },
 "gpflow.mean_functions.Constant.__call__": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "tensorflow.reshape",
    "tensorflow.shape",
    "tensorflow.stack",
    "tensorflow.tile"
   ]
  },
  "type": "function"
 },
 "gpflow.mean_functions.Constant.__init__": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "Parameter",
    "gpflow.mean_functions.MeanFunction",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "gpflow.mean_functions.Identity": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "gpflow.mean_functions.Linear"
   ]
  },
  "type": "class"
 },
 "gpflow.mean_functions.Identity.A": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "gpflow.mean_functions.Identity.__call__": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "gpflow.mean_functions.Identity.__init__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "gpflow.mean_functions.Linear"
   ]
  },
  "type": "function"
 },
 "gpflow.mean_functions.Identity.b": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "gpflow.mean_functions.Linear": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "gpflow.mean_functions.MeanFunction"
   ]
  },
  "type": "class"
 },
 "gpflow.mean_functions.Linear.__call__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "tensorflow.matmul"
   ]
  },
  "type": "function"
 },
 "gpflow.mean_functions.Linear.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "Parameter",
    "gpflow.mean_functions.MeanFunction",
    "numpy.atleast_2d",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "gpflow.mean_functions.MeanFunction": {
  "data": {
   "lineno": 26
  },
  "type": "class"
 },
 "gpflow.mean_functions.MeanFunction.__add__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "gpflow.mean_functions.Additive"
   ]
  },
  "type": "function"
 },
 "gpflow.mean_functions.MeanFunction.__call__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "gpflow.mean_functions.MeanFunction.__mul__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "gpflow.mean_functions.Product"
   ]
  },
  "type": "function"
 },
 "gpflow.mean_functions.Product": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "gpflow.mean_functions.MeanFunction"
   ]
  },
  "type": "class"
 },
 "gpflow.mean_functions.Product.__call__": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "tensorflow.multiply"
   ]
  },
  "type": "function"
 },
 "gpflow.mean_functions.Product.__init__": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "gpflow.mean_functions.MeanFunction"
   ]
  },
  "type": "function"
 },
 "gpflow.mean_functions.SwitchedMeanFunction": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "gpflow.mean_functions.MeanFunction"
   ]
  },
  "type": "class"
 },
 "gpflow.mean_functions.SwitchedMeanFunction.__call__": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "len",
    "m",
    "tensorflow.cast",
    "tensorflow.dynamic_partition",
    "tensorflow.dynamic_stitch",
    "tensorflow.gather",
    "tensorflow.int32",
    "tensorflow.range",
    "tensorflow.shape",
    "tensorflow.size",
    "tensorflow.transpose",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpflow.mean_functions.SwitchedMeanFunction.__init__": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "ParamList",
    "gpflow.mean_functions.MeanFunction",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "gpflow.mean_functions.Zero": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "gpflow.mean_functions.Constant"
   ]
  },
  "type": "class"
 },
 "gpflow.mean_functions.Zero.__call__": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "tensorflow.shape",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "gpflow.mean_functions.Zero.__init__": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "gpflow.mean_functions.Constant"
   ]
  },
  "type": "function"
 },
 "gpflow.mean_functions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "gpflow.mean_functions.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "gpflow.models": {
  "data": {},
  "type": "module"
 },
 "gpflow.models.gplvm": {
  "data": {},
  "type": "module"
 },
 "gpflow.models.gplvm.BayesianGPLVM": {
  "data": {
   "lineno": 66
  },
  "type": "class"
 },
 "gpflow.models.gplvm.BayesianGPLVM.__init__": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "Parameter",
    "Zero",
    "len",
    "numpy.all",
    "numpy.asarray",
    "numpy.atleast_1d",
    "numpy.ones",
    "numpy.random.permutation",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "gpflow.models.gplvm.BayesianGPLVM._build_likelihood": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "DiagonalGaussian",
    "expectation",
    "len",
    "numpy.pi",
    "tensorflow.cast",
    "tensorflow.cholesky",
    "tensorflow.eye",
    "tensorflow.log",
    "tensorflow.matmul",
    "tensorflow.matrix_diag_part",
    "tensorflow.matrix_triangular_solve",
    "tensorflow.reduce_sum",
    "tensorflow.shape",
    "tensorflow.size",
    "tensorflow.sqrt",
    "tensorflow.square",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "gpflow.models.gplvm.BayesianGPLVM._build_predict": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "DiagonalGaussian",
    "expectation",
    "len",
    "tensorflow.cholesky",
    "tensorflow.expand_dims",
    "tensorflow.eye",
    "tensorflow.matmul",
    "tensorflow.matrix_triangular_solve",
    "tensorflow.reduce_sum",
    "tensorflow.shape",
    "tensorflow.sqrt",
    "tensorflow.square",
    "tensorflow.stack",
    "tensorflow.tile",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "gpflow.models.gplvm.GPLVM": {
  "data": {
   "lineno": 34
  },
  "type": "class"
 },
 "gpflow.models.gplvm.GPLVM.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "Parameter",
    "ValueError",
    "Zero",
    "gpflow.models.gplvm.PCA_reduce"
   ]
  },
  "type": "function"
 },
 "gpflow.models.gplvm.PCA_reduce": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "numpy.cov",
    "numpy.linalg.eigh"
   ]
  },
  "type": "function"
 },
 "gpflow.models.gplvm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "gpflow.models.gplvm.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "gpflow.models.gpmc": {
  "data": {},
  "type": "module"
 },
 "gpflow.models.gpmc.GPMC": {
  "data": {
   "lineno": 28
  },
  "type": "class"
 },
 "gpflow.models.gpmc.GPMC.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "DataHolder",
    "Gaussian",
    "Parameter",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "gpflow.models.gpmc.GPMC._build_likelihood": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "tensorflow.cholesky",
    "tensorflow.eye",
    "tensorflow.matmul",
    "tensorflow.reduce_sum",
    "tensorflow.shape"
   ]
  },
  "type": "function"
 },
 "gpflow.models.gpmc.GPMC._build_predict": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "conditional"
   ]
  },
  "type": "function"
 },
 "gpflow.models.gpmc.GPMC.compile": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "Gaussian",
    "Parameter",
    "gpflow.models.gpmc.GPMC",
    "numpy.zeros",
    "super"
   ]
  },
  "type": "function"
 },
 "gpflow.models.gpmc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "gpflow.models.gpmc.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "gpflow.models.gpr": {
  "data": {},
  "type": "module"
 },
 "gpflow.models.gpr.GPR": {
  "data": {
   "lineno": 29
  },
  "type": "class"
 },
 "gpflow.models.gpr.GPR.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "DataHolder"
   ]
  },
  "type": "function"
 },
 "gpflow.models.gpr.GPR._build_likelihood": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "multivariate_normal",
    "name_scope",
    "tensorflow.cholesky",
    "tensorflow.eye",
    "tensorflow.reduce_sum",
    "tensorflow.shape"
   ]
  },
  "type": "function"
 },
 "gpflow.models.gpr.GPR._build_predict": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "base_conditional",
    "name_scope",
    "tensorflow.eye",
    "tensorflow.shape"
   ]
  },
  "type": "function"
 },
 "gpflow.models.gpr.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "gpflow.models.model": {
  "data": {},
  "type": "module"
 },
 "gpflow.models.model.GPModel": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "gpflow.models.model.Model"
   ]
  },
  "type": "class"
 },
 "gpflow.models.model.GPModel.__init__": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "DataHolder",
    "Zero",
    "gpflow.models.model.GPModel",
    "isinstance",
    "numpy.ndarray",
    "super"
   ]
  },
  "type": "function"
 },
 "gpflow.models.model.GPModel._build_predict": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "NotImplementedError",
    "gpflow.models.model.abc"
   ]
  },
  "type": "function"
 },
 "gpflow.models.model.GPModel.predict_density": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "autoflow"
   ]
  },
  "type": "function"
 },
 "gpflow.models.model.GPModel.predict_f": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "autoflow"
   ]
  },
  "type": "function"
 },
 "gpflow.models.model.GPModel.predict_f_full_cov": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "autoflow"
   ]
  },
  "type": "function"
 },
 "gpflow.models.model.GPModel.predict_f_samples": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "autoflow",
    "range",
    "tensorflow.cholesky",
    "tensorflow.eye",
    "tensorflow.int32",
    "tensorflow.matmul",
    "tensorflow.random_normal",
    "tensorflow.shape",
    "tensorflow.stack",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "gpflow.models.model.GPModel.predict_y": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "autoflow"
   ]
  },
  "type": "function"
 },
 "gpflow.models.model.Model": {
  "data": {
   "lineno": 27
  },
  "type": "class"
 },
 "gpflow.models.model.Model.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "gpflow.models.model.Model",
    "super"
   ]
  },
  "type": "function"
 },
 "gpflow.models.model.Model._build": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "gpflow.models.model.Model",
    "super"
   ]
  },
  "type": "function"
 },
 "gpflow.models.model.Model._build_likelihood": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "NotImplementedError",
    "gpflow.models.model.abc"
   ]
  },
  "type": "function"
 },
 "gpflow.models.model.Model._build_objective": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "tensorflow.add",
    "tensorflow.negative"
   ]
  },
  "type": "function"
 },
 "gpflow.models.model.Model._clear": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "gpflow.models.model.Model",
    "super"
   ]
  },
  "type": "function"
 },
 "gpflow.models.model.Model.build_objective": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "gpflow.models.model.Model.compute_log_likelihood": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "autoflow"
   ]
  },
  "type": "function"
 },
 "gpflow.models.model.Model.compute_log_prior": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "autoflow"
   ]
  },
  "type": "function"
 },
 "gpflow.models.model.Model.is_built": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "gpflow.models.model.Model.likelihood_tensor": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.models.model.Model.objective": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.models.model.Model.sample_feed_dict": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "gpflow.models.model.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "gpflow.models.model.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "gpflow.models.model.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "gpflow.models.sgpmc": {
  "data": {},
  "type": "module"
 },
 "gpflow.models.sgpmc.SGPMC": {
  "data": {
   "lineno": 27
  },
  "type": "class"
 },
 "gpflow.models.sgpmc.SGPMC.__init__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "DataHolder",
    "Gaussian",
    "Parameter",
    "inducingpoint_wrapper",
    "len",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "gpflow.models.sgpmc.SGPMC._build_likelihood": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "tensorflow.reduce_sum"
   ]
  },
  "type": "function"
 },
 "gpflow.models.sgpmc.SGPMC._build_predict": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "conditional"
   ]
  },
  "type": "function"
 },
 "gpflow.models.sgpmc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "gpflow.models.sgpmc.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "gpflow.models.sgpr": {
  "data": {},
  "type": "module"
 },
 "gpflow.models.sgpr.GPRFITC": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "gpflow.models.sgpr.SGPRUpperMixin"
   ]
  },
  "type": "class"
 },
 "gpflow.models.sgpr.GPRFITC.Z": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "gpflow.models.sgpr.GPRFITC.__init__": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "DataHolder",
    "Zero"
   ]
  },
  "type": "function"
 },
 "gpflow.models.sgpr.GPRFITC._build_common_terms": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "len",
    "tensorflow.cholesky",
    "tensorflow.expand_dims",
    "tensorflow.eye",
    "tensorflow.matmul",
    "tensorflow.matrix_triangular_solve",
    "tensorflow.reduce_sum",
    "tensorflow.square"
   ]
  },
  "type": "function"
 },
 "gpflow.models.sgpr.GPRFITC._build_likelihood": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "numpy.pi",
    "tensorflow.constant",
    "tensorflow.expand_dims",
    "tensorflow.log",
    "tensorflow.matrix_diag_part",
    "tensorflow.reduce_sum",
    "tensorflow.square"
   ]
  },
  "type": "function"
 },
 "gpflow.models.sgpr.GPRFITC._build_predict": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "tensorflow.matmul",
    "tensorflow.matrix_triangular_solve",
    "tensorflow.reduce_sum",
    "tensorflow.square",
    "tensorflow.tile",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "gpflow.models.sgpr.SGPR": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "gpflow.models.sgpr.SGPRUpperMixin"
   ]
  },
  "type": "class"
 },
 "gpflow.models.sgpr.SGPR.__init__": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "DataHolder"
   ]
  },
  "type": "function"
 },
 "gpflow.models.sgpr.SGPR._build_likelihood": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "len",
    "numpy.log",
    "numpy.pi",
    "tensorflow.cast",
    "tensorflow.cholesky",
    "tensorflow.eye",
    "tensorflow.log",
    "tensorflow.matmul",
    "tensorflow.matrix_diag_part",
    "tensorflow.matrix_triangular_solve",
    "tensorflow.negative",
    "tensorflow.reduce_sum",
    "tensorflow.shape",
    "tensorflow.sqrt",
    "tensorflow.square"
   ]
  },
  "type": "function"
 },
 "gpflow.models.sgpr.SGPR._build_predict": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "len",
    "tensorflow.cholesky",
    "tensorflow.eye",
    "tensorflow.matmul",
    "tensorflow.matrix_triangular_solve",
    "tensorflow.reduce_sum",
    "tensorflow.sqrt",
    "tensorflow.square",
    "tensorflow.tile"
   ]
  },
  "type": "function"
 },
 "gpflow.models.sgpr.SGPRUpperMixin": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "gpflow.models.sgpr.SGPRUpperMixin.compute_upper_bound": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "autoflow",
    "numpy.pi",
    "tensorflow.cast",
    "tensorflow.cholesky",
    "tensorflow.diag_part",
    "tensorflow.log",
    "tensorflow.matmul",
    "tensorflow.matrix_triangular_solve",
    "tensorflow.reduce_sum",
    "tensorflow.shape"
   ]
  },
  "type": "function"
 },
 "gpflow.models.sgpr.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "gpflow.models.sgpr.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "gpflow.models.svgp": {
  "data": {},
  "type": "module"
 },
 "gpflow.models.svgp.SVGP": {
  "data": {
   "lineno": 30
  },
  "type": "class"
 },
 "gpflow.models.svgp.SVGP.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "DataHolder",
    "Minibatch",
    "len"
   ]
  },
  "type": "function"
 },
 "gpflow.models.svgp.SVGP._build_likelihood": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "tensorflow.cast",
    "tensorflow.reduce_sum",
    "tensorflow.shape"
   ]
  },
  "type": "function"
 },
 "gpflow.models.svgp.SVGP._build_predict": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "conditional"
   ]
  },
  "type": "function"
 },
 "gpflow.models.svgp.SVGP._init_variational_parameters": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "Parameter",
    "numpy.array",
    "numpy.eye",
    "numpy.ones",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "gpflow.models.svgp.SVGP.build_prior_KL": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "Kuu"
   ]
  },
  "type": "function"
 },
 "gpflow.models.svgp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "gpflow.models.svgp.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "gpflow.models.vgp": {
  "data": {},
  "type": "module"
 },
 "gpflow.models.vgp.VGP": {
  "data": {
   "lineno": 31
  },
  "type": "class"
 },
 "gpflow.models.vgp.VGP.__init__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "DataHolder",
    "Parameter",
    "numpy.array",
    "numpy.eye",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "gpflow.models.vgp.VGP._build_likelihood": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "gauss_kl",
    "tensorflow.cholesky",
    "tensorflow.expand_dims",
    "tensorflow.eye",
    "tensorflow.matmul",
    "tensorflow.matrix_band_part",
    "tensorflow.reduce_sum",
    "tensorflow.square",
    "tensorflow.stack",
    "tensorflow.tile",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "gpflow.models.vgp.VGP._build_predict": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "conditional"
   ]
  },
  "type": "function"
 },
 "gpflow.models.vgp.VGP.compile": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "Parameter",
    "gpflow.models.vgp.VGP",
    "numpy.eye",
    "numpy.ones",
    "numpy.zeros",
    "super"
   ]
  },
  "type": "function"
 },
 "gpflow.models.vgp.VGP_opper_archambeau": {
  "data": {
   "lineno": 133
  },
  "type": "class"
 },
 "gpflow.models.vgp.VGP_opper_archambeau.__init__": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "DataHolder",
    "Parameter",
    "Zero",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "gpflow.models.vgp.VGP_opper_archambeau._build_likelihood": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "tensorflow.cholesky",
    "tensorflow.expand_dims",
    "tensorflow.eye",
    "tensorflow.log",
    "tensorflow.matmul",
    "tensorflow.matrix_diag_part",
    "tensorflow.matrix_triangular_solve",
    "tensorflow.reduce_sum",
    "tensorflow.square",
    "tensorflow.tile",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "gpflow.models.vgp.VGP_opper_archambeau._build_predict": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "tensorflow.cholesky",
    "tensorflow.expand_dims",
    "tensorflow.matmul",
    "tensorflow.matrix_diag",
    "tensorflow.matrix_triangular_solve",
    "tensorflow.reduce_sum",
    "tensorflow.square",
    "tensorflow.tile",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "gpflow.models.vgp.VGP_opper_archambeau.compile": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "Parameter",
    "gpflow.models.vgp.VGP_opper_archambeau",
    "numpy.ones",
    "numpy.zeros",
    "super"
   ]
  },
  "type": "function"
 },
 "gpflow.models.vgp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "gpflow.models.vgp.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "gpflow.multioutput": {
  "data": {},
  "type": "module"
 },
 "gpflow.multioutput.conditionals": {
  "data": {},
  "type": "module"
 },
 "gpflow.multioutput.conditionals._conditional": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "gpflow.multioutput.conditionals.logger",
    "independent_cond",
    "name_scope",
    "object",
    "tensorflow.expand_dims",
    "tensorflow.matrix_transpose",
    "tensorflow.tensordot"
   ]
  },
  "type": "function"
 },
 "gpflow.multioutput.conditionals._conditional.single_gp_conditional": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "base_conditional"
   ]
  },
  "type": "function"
 },
 "gpflow.multioutput.conditionals._sample_conditional": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "NotImplementedError",
    "_sample_mvn",
    "gpflow.multioutput.conditionals.logger",
    "independent_cond",
    "name_scope",
    "object",
    "params_as_tensors_for",
    "tensorflow.einsum"
   ]
  },
  "type": "function"
 },
 "gpflow.multioutput.conditionals.fully_correlated_conditional": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "gpflow.multioutput.conditionals.fully_correlated_conditional_repeat"
   ]
  },
  "type": "function"
 },
 "gpflow.multioutput.conditionals.fully_correlated_conditional_repeat": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "gpflow.multioutput.conditionals.logger",
    "range",
    "str",
    "tensorflow.cholesky",
    "tensorflow.matmul",
    "tensorflow.matrix_band_part",
    "tensorflow.matrix_triangular_solve",
    "tensorflow.reduce_sum",
    "tensorflow.reshape",
    "tensorflow.shape",
    "tensorflow.square",
    "tensorflow.stack",
    "tensorflow.tensordot",
    "tensorflow.tile",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "gpflow.multioutput.conditionals.independent_interdomain_conditional": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "gpflow.multioutput.conditionals.logger",
    "range",
    "tensorflow.cholesky",
    "tensorflow.matmul",
    "tensorflow.matrix_band_part",
    "tensorflow.matrix_triangular_solve",
    "tensorflow.reduce_sum",
    "tensorflow.reshape",
    "tensorflow.shape",
    "tensorflow.square",
    "tensorflow.tensordot",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "gpflow.multioutput.conditionals.logger": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "gpflow.multioutput.conditionals.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "gpflow.multioutput.features": {
  "data": {},
  "type": "module"
 },
 "gpflow.multioutput.features.Kuf": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "dispatch",
    "gpflow.multioutput.features.MixedKernelSeparateMof",
    "gpflow.multioutput.features.debug_kuf",
    "object",
    "tensorflow.stack",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpflow.multioutput.features.Kuu": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "dispatch",
    "gpflow.multioutput.features.MixedKernelSharedMof",
    "gpflow.multioutput.features.debug_kuu",
    "len",
    "tensorflow.eye",
    "tensorflow.stack"
   ]
  },
  "type": "function"
 },
 "gpflow.multioutput.features.MixedKernelSeparateMof": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "gpflow.multioutput.features.SeparateIndependentMof"
   ]
  },
  "type": "class"
 },
 "gpflow.multioutput.features.MixedKernelSharedMof": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "gpflow.multioutput.features.SharedIndependentMof"
   ]
  },
  "type": "class"
 },
 "gpflow.multioutput.features.Mof": {
  "data": {
   "lineno": 28
  },
  "type": "class"
 },
 "gpflow.multioutput.features.SeparateIndependentMof": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "gpflow.multioutput.features.Mof"
   ]
  },
  "type": "class"
 },
 "gpflow.multioutput.features.SeparateIndependentMof.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ParamList",
    "gpflow.multioutput.features.Mof"
   ]
  },
  "type": "function"
 },
 "gpflow.multioutput.features.SeparateIndependentMof.__len__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "gpflow.multioutput.features.SharedIndependentMof": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "gpflow.multioutput.features.Mof"
   ]
  },
  "type": "class"
 },
 "gpflow.multioutput.features.SharedIndependentMof.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "gpflow.multioutput.features.Mof"
   ]
  },
  "type": "function"
 },
 "gpflow.multioutput.features.SharedIndependentMof.__len__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "gpflow.multioutput.features.debug_kuf": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "gpflow.multioutput.features.logger"
   ]
  },
  "type": "function"
 },
 "gpflow.multioutput.features.debug_kuu": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "gpflow.multioutput.features.logger"
   ]
  },
  "type": "function"
 },
 "gpflow.multioutput.features.logger": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "gpflow.multioutput.features.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "gpflow.multioutput.kernels": {
  "data": {},
  "type": "module"
 },
 "gpflow.multioutput.kernels.Mok": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "gpflow.multioutput.kernels.Mok.K": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "NotImplemented"
   ]
  },
  "type": "function"
 },
 "gpflow.multioutput.kernels.Mok.Kdiag": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "NotImplemented"
   ]
  },
  "type": "function"
 },
 "gpflow.multioutput.kernels.SeparateIndependentMok": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "gpflow.multioutput.kernels.Mok"
   ]
  },
  "type": "class"
 },
 "gpflow.multioutput.kernels.SeparateIndependentMok.K": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "tensorflow.matrix_diag",
    "tensorflow.stack",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "gpflow.multioutput.kernels.SeparateIndependentMok.Kdiag": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "tensorflow.matrix_diag",
    "tensorflow.stack"
   ]
  },
  "type": "function"
 },
 "gpflow.multioutput.kernels.SeparateIndependentMok.__init__": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "gpflow.multioutput.kernels.SeparateMixedMok": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "gpflow.multioutput.kernels.Mok"
   ]
  },
  "type": "class"
 },
 "gpflow.multioutput.kernels.SeparateMixedMok.K": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "tensorflow.reduce_sum",
    "tensorflow.tensordot",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "gpflow.multioutput.kernels.SeparateMixedMok.Kdiag": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "tensorflow.matmul",
    "tensorflow.reduce_sum",
    "tensorflow.stack",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "gpflow.multioutput.kernels.SeparateMixedMok.Kgg": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "tensorflow.stack"
   ]
  },
  "type": "function"
 },
 "gpflow.multioutput.kernels.SeparateMixedMok.__init__": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "Parameter"
   ]
  },
  "type": "function"
 },
 "gpflow.multioutput.kernels.SeparateMixedMok.compute_Kgg": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "autoflow"
   ]
  },
  "type": "function"
 },
 "gpflow.multioutput.kernels.SharedIndependentMok": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "gpflow.multioutput.kernels.Mok"
   ]
  },
  "type": "class"
 },
 "gpflow.multioutput.kernels.SharedIndependentMok.K": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "tensorflow.matrix_diag",
    "tensorflow.tile",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "gpflow.multioutput.kernels.SharedIndependentMok.Kdiag": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "tensorflow.matrix_diag",
    "tensorflow.tile"
   ]
  },
  "type": "function"
 },
 "gpflow.multioutput.kernels.SharedIndependentMok.__init__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "gpflow.multioutput.kernels.Mok"
   ]
  },
  "type": "function"
 },
 "gpflow.multioutput.kernels.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "gpflow.params": {
  "data": {},
  "type": "module"
 },
 "gpflow.params.dataholders": {
  "data": {},
  "type": "module"
 },
 "gpflow.params.dataholders.DataHolder": {
  "data": {
   "lineno": 28
  },
  "type": "class"
 },
 "gpflow.params.dataholders.DataHolder.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "gpflow.params.dataholders.DataHolder.__setattr__": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "object.__setattr__"
   ]
  },
  "type": "function"
 },
 "gpflow.params.dataholders.DataHolder._apply_transform": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "gpflow.params.dataholders.DataHolder._build": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "tensorflow.is_variable_initialized"
   ]
  },
  "type": "function"
 },
 "gpflow.params.dataholders.DataHolder._clear": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "gpflow.params.dataholders.DataHolder._init_parameter_attributes": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "gpflow.params.dataholders.DataHolder._init_parameter_defaults": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "gpflow.params.dataholders.DataHolder._parameter_name": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "gpflow.params.dataholders.DataHolder._read_parameter_tensor": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "gpflow.params.dataholders.DataHolder._set_parameter_attribute": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "gpflow.params.dataholders.DataHolder._set_parameter_tensor": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "gpflow.params.dataholders.DataHolder.as_pandas_table": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "gpflow.params.dataholders.DataHolder.is_built": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "gpflow.params.dataholders.DataHolder.parameter_tensor": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.params.dataholders.DataHolder.set_trainable": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "gpflow.params.dataholders.DataHolder.trainable": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.params.dataholders.Minibatch": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "gpflow.params.dataholders.DataHolder"
   ]
  },
  "type": "class"
 },
 "gpflow.params.dataholders.Minibatch.__init__": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "ValueError",
    "super"
   ]
  },
  "type": "function"
 },
 "gpflow.params.dataholders.Minibatch._build": {
  "data": {
   "lineno": 204
  },
  "type": "function"
 },
 "gpflow.params.dataholders.Minibatch._build_dataholder": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "GPflowError",
    "tensorflow.data.Dataset.from_tensor_slices",
    "tensorflow.int64",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "gpflow.params.dataholders.Minibatch._build_placeholder_cache": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "gpflow.params.dataholders.Minibatch._clear": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "gpflow.params.dataholders.Minibatch._init_parameter_defaults": {
  "data": {
   "lineno": 227
  },
  "type": "function"
 },
 "gpflow.params.dataholders.Minibatch._parameter_name": {
  "data": {
   "lineno": 236
  },
  "type": "function"
 },
 "gpflow.params.dataholders.Minibatch.batch_size": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "gpflow.params.dataholders.Minibatch.initializable_feeds": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.params.dataholders.Minibatch.initializables": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.params.dataholders.Minibatch.seed": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "GPflowError"
   ]
  },
  "type": "function"
 },
 "gpflow.params.dataholders.Minibatch.set_batch_size": {
  "data": {
   "lineno": 191
  },
  "type": "function"
 },
 "gpflow.params.dataholders.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "gpflow.params.parameter": {
  "data": {},
  "type": "module"
 },
 "gpflow.params.parameter.EMPTY_FEEDS": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "gpflow.params.parameter.Parameter": {
  "data": {
   "lineno": 37
  },
  "type": "class"
 },
 "gpflow.params.parameter.Parameter.ParameterAttribute": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "gpflow.params.parameter.enum"
   ]
  },
  "type": "class"
 },
 "gpflow.params.parameter.Parameter.ParameterAttribute.interface": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.__init__": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.__setattr__": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "KeyError",
    "object.__setattr__"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.__str__": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameter.Parameter._apply_transform": {
  "data": {
   "lineno": 457
  },
  "type": "function"
 },
 "gpflow.params.parameter.Parameter._build": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "tensorflow.is_variable_initialized"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameter.Parameter._build_constrained": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "GPflowError"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameter.Parameter._build_parameter": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "GPflowError",
    "dict",
    "tensorflow.get_variable",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameter.Parameter._build_prior": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "GPflowError",
    "tensorflow.add",
    "tensorflow.constant",
    "tensorflow.squeeze"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameter.Parameter._check_tensor_trainable": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "GPflowError"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameter.Parameter._clear": {
  "data": {
   "lineno": 353
  },
  "type": "function"
 },
 "gpflow.params.parameter.Parameter._init_parameter_attributes": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "Identity"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameter.Parameter._init_parameter_defaults": {
  "data": {
   "lineno": 428
  },
  "type": "function"
 },
 "gpflow.params.parameter.Parameter._init_parameter_value": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameter.Parameter._parameter_name": {
  "data": {
   "lineno": 460
  },
  "type": "function"
 },
 "gpflow.params.parameter.Parameter._read_parameter_tensor": {
  "data": {
   "lineno": 454
  },
  "type": "function"
 },
 "gpflow.params.parameter.Parameter._repr_html_": {
  "data": {
   "lineno": 493
  },
  "type": "function"
 },
 "gpflow.params.parameter.Parameter._set_parameter_attribute": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "GPflowError",
    "isinstance",
    "object.__setattr__"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameter.Parameter._set_parameter_tensor": {
  "data": {
   "lineno": 463
  },
  "type": "function"
 },
 "gpflow.params.parameter.Parameter._valid_input": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "isinstance",
    "numpy.array",
    "numpy.ndarray",
    "numpy.result_type"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.anchor": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "tensorflow.Session"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.as_pandas_table": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.assign": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "GPflowError"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.constrained_tensor": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.dtype": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.feeds": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "gpflow.params.parameter.EMPTY_FEEDS",
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.fix_shape": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.fixed": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.fixed_shape": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.graph": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.initializable_feeds": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "gpflow.params.parameter.EMPTY_FEEDS",
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.initializables": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.is_built": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "tensorflow.Graph"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.is_initialized": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "tensorflow.Session"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.is_initialized_tensor": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.parameter_tensor": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.prior_tensor": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.read_value": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "GPflowError",
    "ValueError",
    "isinstance",
    "tensorflow.Session"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.set_trainable": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "GPflowError",
    "ValueError",
    "bool",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.shape": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "property",
    "tuple"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.size": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "numpy.int32",
    "numpy.multiply.reduce",
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.tf_compilation_index": {
  "data": {
   "lineno": 309
  },
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.trainable": {
  "data": {
   "lineno": 253
  },
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.unconstrained_tensor": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameter.Parameter.value": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameter.enum": {
  "data": {
   "shadows": "enum"
  },
  "type": "import"
 },
 "gpflow.params.parameter.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "gpflow.params.parameter.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "gpflow.params.parameterized": {
  "data": {},
  "type": "module"
 },
 "gpflow.params.parameterized.Parameterized": {
  "data": {
   "lineno": 36
  },
  "type": "class"
 },
 "gpflow.params.parameterized.Parameterized.__getattribute__": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "gpflow.params.parameterized.Parameterized",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.__init__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "gpflow.params.parameterized.Parameterized",
    "super"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.__setattr__": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "gpflow.params.parameterized.Parameterized",
    "object.__setattr__"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.__str__": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized._build": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "gpflow.params.parameterized.Parameterized",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized._build_prior": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "tensorflow.add_n",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized._clear": {
  "data": {
   "lineno": 286
  },
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized._get_node": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized._is_param_like": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "gpflow.params.parameterized.Parameterized",
    "isinstance",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized._replace_node": {
  "data": {
   "lineno": 327
  },
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized._repr_html_": {
  "data": {
   "lineno": 365
  },
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized._set_node": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "GPflowError"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized._tensor_mode_parameter": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "isinstance",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized._update_node": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "ValueError",
    "gpflow.params.parameterized.Parameterized",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.anchor": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "tensorflow.Session"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.as_pandas_table": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.assign": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "pandas.Series",
    "set"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.children": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "allowed",
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.data_holders": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "gpflow.params.parameterized.Parameterized",
    "isinstance",
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.empty": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "bool",
    "list",
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.feeds": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.fix_shape": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.fixed": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.graph": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.initializable_feeds": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "get_initializable_feeds",
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.initializable_feeds.get_initializable_feeds": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.initializables": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "get_initializables",
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.initializables.get_initializables": {
  "data": {
   "lineno": 161
  },
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.is_built": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "set",
    "tensorflow.Graph"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.non_empty_params": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "gpflow.params.parameterized.Parameterized",
    "isinstance",
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.parameters": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "gpflow.params.parameterized.Parameterized",
    "isinstance",
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.params": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "gpflow.params.parameterized.Parameterized",
    "property",
    "sorted"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.prior_tensor": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.read_trainables": {
  "data": {
   "lineno": 239
  },
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.read_values": {
  "data": {
   "lineno": 243
  },
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.remove_child": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "object.__delattr__"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.set_trainable": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.store_child": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "object.__setattr__"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.trainable": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.trainable_parameters": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameterized.Parameterized.trainable_tensors": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.params.parameterized.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "gpflow.params.parameterized.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "gpflow.params.paramlist": {
  "data": {},
  "type": "module"
 },
 "gpflow.params.paramlist.ParamList": {
  "data": {
   "lineno": 28
  },
  "type": "class"
 },
 "gpflow.params.paramlist.ParamList.__getitem__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "Parameter",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "gpflow.params.paramlist.ParamList.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ValueError",
    "gpflow.params.paramlist.ParamList",
    "isinstance",
    "list",
    "super"
   ]
  },
  "type": "function"
 },
 "gpflow.params.paramlist.ParamList.__len__": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "gpflow.params.paramlist.ParamList.__setitem__": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "GPflowError",
    "Parameter",
    "ValueError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "gpflow.params.paramlist.ParamList._get_node": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "gpflow.params.paramlist.ParamList._replace_node": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "gpflow.params.paramlist.ParamList._valid_list_input": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "Parameter",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "gpflow.params.paramlist.ParamList.append": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "gpflow.params.paramlist.ParamList.children": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "enumerate",
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "gpflow.params.paramlist.ParamList.params": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.params.paramlist.ParamList.store_child": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "gpflow.priors": {
  "data": {},
  "type": "module"
 },
 "gpflow.priors.Beta": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "gpflow.priors.Prior"
   ]
  },
  "type": "class"
 },
 "gpflow.priors.Beta.__init__": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "gpflow.priors.Prior",
    "numpy.array",
    "numpy.atleast_1d"
   ]
  },
  "type": "function"
 },
 "gpflow.priors.Beta.__str__": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "gpflow.priors.Beta.logp": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "tensorflow.reduce_sum"
   ]
  },
  "type": "function"
 },
 "gpflow.priors.Beta.sample": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "numpy.random.beta"
   ]
  },
  "type": "function"
 },
 "gpflow.priors.Exponential": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "gpflow.priors.Prior"
   ]
  },
  "type": "class"
 },
 "gpflow.priors.Exponential.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "gpflow.priors.Prior",
    "numpy.array",
    "numpy.atleast_1d"
   ]
  },
  "type": "function"
 },
 "gpflow.priors.Exponential.__str__": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "gpflow.priors.Exponential.logp": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "tensorflow.reduce_sum"
   ]
  },
  "type": "function"
 },
 "gpflow.priors.Exponential.sample": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "numpy.random.exponential"
   ]
  },
  "type": "function"
 },
 "gpflow.priors.Gamma": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "gpflow.priors.Prior"
   ]
  },
  "type": "class"
 },
 "gpflow.priors.Gamma.__init__": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "gpflow.priors.Prior",
    "numpy.array",
    "numpy.atleast_1d"
   ]
  },
  "type": "function"
 },
 "gpflow.priors.Gamma.__str__": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "gpflow.priors.Gamma.logp": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "tensorflow.reduce_sum"
   ]
  },
  "type": "function"
 },
 "gpflow.priors.Gamma.sample": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "numpy.random.gamma"
   ]
  },
  "type": "function"
 },
 "gpflow.priors.Gaussian": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "gpflow.priors.Prior"
   ]
  },
  "type": "class"
 },
 "gpflow.priors.Gaussian.__init__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "gpflow.priors.Prior",
    "numpy.array",
    "numpy.atleast_1d"
   ]
  },
  "type": "function"
 },
 "gpflow.priors.Gaussian.__str__": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "gpflow.priors.Gaussian.logp": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "tensorflow.reduce_sum"
   ]
  },
  "type": "function"
 },
 "gpflow.priors.Gaussian.sample": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "gpflow.priors.Laplace": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "gpflow.priors.Prior"
   ]
  },
  "type": "class"
 },
 "gpflow.priors.Laplace.__init__": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "gpflow.priors.Prior",
    "numpy.array",
    "numpy.atleast_1d"
   ]
  },
  "type": "function"
 },
 "gpflow.priors.Laplace.__str__": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "gpflow.priors.Laplace.logp": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "tensorflow.reduce_sum"
   ]
  },
  "type": "function"
 },
 "gpflow.priors.Laplace.sample": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "numpy.random.laplace"
   ]
  },
  "type": "function"
 },
 "gpflow.priors.LogNormal": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "gpflow.priors.Prior"
   ]
  },
  "type": "class"
 },
 "gpflow.priors.LogNormal.__init__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "gpflow.priors.Prior",
    "numpy.array",
    "numpy.atleast_1d"
   ]
  },
  "type": "function"
 },
 "gpflow.priors.LogNormal.__str__": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "gpflow.priors.LogNormal.logp": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "tensorflow.reduce_sum"
   ]
  },
  "type": "function"
 },
 "gpflow.priors.LogNormal.sample": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.random.randn",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "gpflow.priors.Prior": {
  "data": {
   "lineno": 26
  },
  "type": "class"
 },
 "gpflow.priors.Uniform": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "gpflow.priors.Prior"
   ]
  },
  "type": "class"
 },
 "gpflow.priors.Uniform.__init__": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "ValueError",
    "gpflow.priors.Prior"
   ]
  },
  "type": "function"
 },
 "gpflow.priors.Uniform.__str__": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "gpflow.priors.Uniform.log_height": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "numpy.log",
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.priors.Uniform.logp": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "tensorflow.cast",
    "tensorflow.size"
   ]
  },
  "type": "function"
 },
 "gpflow.priors.Uniform.sample": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "gpflow.priors.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "gpflow.priors.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "gpflow.probability_distributions": {
  "data": {},
  "type": "module"
 },
 "gpflow.probability_distributions.DiagonalGaussian": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "gpflow.probability_distributions.ProbabilityDistribution"
   ]
  },
  "type": "class"
 },
 "gpflow.probability_distributions.DiagonalGaussian.__init__": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "gpflow.probability_distributions.Gaussian": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "gpflow.probability_distributions.ProbabilityDistribution"
   ]
  },
  "type": "class"
 },
 "gpflow.probability_distributions.Gaussian.__init__": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "gpflow.probability_distributions.MarkovGaussian": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "gpflow.probability_distributions.ProbabilityDistribution"
   ]
  },
  "type": "class"
 },
 "gpflow.probability_distributions.MarkovGaussian.__init__": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "gpflow.probability_distributions.ProbabilityDistribution": {
  "data": {
   "lineno": 20
  },
  "type": "class"
 },
 "gpflow.quadrature": {
  "data": {},
  "type": "module"
 },
 "gpflow.quadrature.Iterable": {
  "data": {
   "shadows": "collections.Iterable"
  },
  "type": "import"
 },
 "gpflow.quadrature.hermgauss": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "int",
    "numpy.polynomial.hermite.hermgauss"
   ]
  },
  "type": "function"
 },
 "gpflow.quadrature.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "gpflow.quadrature.mvhermgauss": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "gpflow.quadrature.hermgauss",
    "gpflow.quadrature.itertools",
    "int",
    "list",
    "numpy.array",
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "gpflow.quadrature.mvnquad": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "GPflowError",
    "any",
    "func",
    "gpflow.quadrature.mvhermgauss",
    "int",
    "len",
    "numpy.pi",
    "numpy.reshape",
    "tensorflow.cholesky",
    "tensorflow.expand_dims",
    "tensorflow.matmul",
    "tensorflow.reduce_sum",
    "tensorflow.reshape",
    "tensorflow.shape",
    "tensorflow.tile",
    "tensorflow.transpose",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "gpflow.quadrature.ndiag_mc": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "bool",
    "collections.Iterable",
    "eval_func",
    "f",
    "int",
    "isinstance",
    "tensorflow.random_normal",
    "tensorflow.reshape",
    "tensorflow.shape",
    "tensorflow.sqrt",
    "tensorflow.tile"
   ]
  },
  "type": "function"
 },
 "gpflow.quadrature.ndiag_mc.eval_func": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "func",
    "tensorflow.cast",
    "tensorflow.log",
    "tensorflow.reduce_logsumexp",
    "tensorflow.reduce_mean",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "gpflow.quadrature.ndiagquad": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "bool",
    "collections.Iterable",
    "eval_func",
    "f",
    "gpflow.quadrature.mvhermgauss",
    "int",
    "isinstance",
    "len",
    "list",
    "map",
    "numpy.pi",
    "range",
    "tensorflow.reshape",
    "tensorflow.shape",
    "tensorflow.sqrt",
    "tensorflow.tile",
    "tuple"
   ]
  },
  "type": "function"
 },
 "gpflow.quadrature.ndiagquad.eval_func": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "f",
    "numpy.log",
    "tensorflow.matmul",
    "tensorflow.reduce_logsumexp",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "gpflow.quadrature.ndiagquad.unify": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "tensorflow.concat",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "gpflow.quadrature.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "gpflow.quadrature.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "gpflow.saver": {
  "data": {},
  "type": "module"
 },
 "gpflow.saver.context": {
  "data": {},
  "type": "module"
 },
 "gpflow.saver.context.BaseContext": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "gpflow.saver.context.BaseContext.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "gpflow.saver.context.BaseContext.coders": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.saver.context.BaseContext.session": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "gpflow.saver.context.BaseContext.shared_data": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.saver.context.Contexture": {
  "data": {
   "lineno": 47
  },
  "type": "class"
 },
 "gpflow.saver.context.Contexture.__init__": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "gpflow.saver.context.Contexture.context": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.saver.context.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "gpflow.saver.saver": {
  "data": {},
  "type": "module"
 },
 "gpflow.saver.saver.Saver": {
  "data": {
   "lineno": 33
  },
  "type": "class"
 },
 "gpflow.saver.saver.Saver.__get_context": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError",
    "gpflow.saver.saver.SaverContext",
    "isinstance",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "gpflow.saver.saver.Saver.load": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "CoderDispatcher",
    "gpflow.saver.saver.Saver"
   ]
  },
  "type": "function"
 },
 "gpflow.saver.saver.Saver.save": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "CoderDispatcher",
    "gpflow.saver.saver.Saver"
   ]
  },
  "type": "function"
 },
 "gpflow.saver.saver.SaverContext": {
  "data": {
   "lineno": 27
  },
  "type": "class"
 },
 "gpflow.saver.saver.SaverContext.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "gpflow.saver.saver.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "gpflow.saver.saver.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "gpflow.saver.saver.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "gpflow.saver.saver.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "gpflow.saver.serializers": {
  "data": {},
  "type": "module"
 },
 "gpflow.saver.serializers.BaseSerializer": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "gpflow.saver.serializers.abc"
   ]
  },
  "type": "class"
 },
 "gpflow.saver.serializers.BaseSerializer.dump": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "gpflow.saver.serializers.abc"
   ]
  },
  "type": "function"
 },
 "gpflow.saver.serializers.BaseSerializer.load": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "gpflow.saver.serializers.abc"
   ]
  },
  "type": "function"
 },
 "gpflow.saver.serializers.HDF5Serializer": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "gpflow.saver.serializers.BaseSerializer"
   ]
  },
  "type": "class"
 },
 "gpflow.saver.serializers.HDF5Serializer.dump": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "gpflow.saver.serializers.h5py"
   ]
  },
  "type": "function"
 },
 "gpflow.saver.serializers.HDF5Serializer.load": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "gpflow.saver.serializers.h5py"
   ]
  },
  "type": "function"
 },
 "gpflow.saver.serializers.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "gpflow.saver.serializers.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "gpflow.saver.serializers.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "gpflow.saver.serializers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "gpflow.settings": {
  "data": {
   "shadows": "SETTINGS"
  },
  "type": "import"
 },
 "gpflow.test_util": {
  "data": {},
  "type": "module"
 },
 "gpflow.test_util.GPflowTestCase": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "tensorflow.test.TestCase"
   ]
  },
  "type": "class"
 },
 "gpflow.test_util.GPflowTestCase.__init__": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "super",
    "tensorflow.Graph"
   ]
  },
  "type": "function"
 },
 "gpflow.test_util.GPflowTestCase.test_context": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "gpflow.test_util.contextlib"
   ]
  },
  "type": "function"
 },
 "gpflow.test_util.cache_tensor": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "gpflow.test_util.cache_tensor.wrapper": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "gpflow.test_util.functools",
    "method",
    "tensorflow.get_default_graph"
   ]
  },
  "type": "function"
 },
 "gpflow.test_util.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "gpflow.test_util.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "gpflow.test_util.is_continuous_integration": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "gpflow.test_util.os"
   ]
  },
  "type": "function"
 },
 "gpflow.test_util.notebook_list": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "gpflow.test_util.is_continuous_integration"
   ]
  },
  "type": "function"
 },
 "gpflow.test_util.notebook_niter": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "gpflow.test_util.is_continuous_integration"
   ]
  },
  "type": "function"
 },
 "gpflow.test_util.notebook_range": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "gpflow.test_util.notebook_niter",
    "range"
   ]
  },
  "type": "function"
 },
 "gpflow.test_util.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "gpflow.test_util.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "gpflow.test_util.session_context": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "gpflow.test_util.contextlib"
   ]
  },
  "type": "class"
 },
 "gpflow.test_util.session_context.__enter__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tensorflow.Session"
   ]
  },
  "type": "function"
 },
 "gpflow.test_util.session_context.__exit__": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "gpflow.test_util.session_context.__init__": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "gpflow.test_util.session_tf": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "gpflow.test_util.pytest",
    "gpflow.test_util.session_context"
   ]
  },
  "type": "function"
 },
 "gpflow.test_util.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "gpflow.train": {
  "data": {
   "shadows": "training"
  },
  "type": "import"
 },
 "gpflow.training": {
  "data": {},
  "type": "module"
 },
 "gpflow.training.external_optimizer": {
  "data": {},
  "type": "module"
 },
 "gpflow.training.external_optimizer.ExternalOptimizerInterface": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "gpflow.training.external_optimizer.ExternalOptimizerInterface.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "tensorflow.python.ops.variables.trainable_variables"
   ]
  },
  "type": "function"
 },
 "gpflow.training.external_optimizer.ExternalOptimizerInterface._initialize_updated_shapes": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "all",
    "dict",
    "gpflow.training.external_optimizer._accumulate",
    "gpflow.training.external_optimizer._compute_gradients",
    "gpflow.training.external_optimizer._prod",
    "list",
    "map",
    "numpy.broadcast_to",
    "numpy.infty",
    "slice",
    "tensorflow.python.ops.array_ops.placeholder",
    "tensorflow.python.ops.array_ops.reshape",
    "tensorflow.python.ops.array_ops.shape_n",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpflow.training.external_optimizer.ExternalOptimizerInterface._make_eval_func": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "gpflow.training.external_optimizer.ExternalOptimizerInterface._make_eval_func.eval_func": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "callable",
    "callback",
    "dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpflow.training.external_optimizer.ExternalOptimizerInterface._make_eval_funcs": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "callback"
   ]
  },
  "type": "function"
 },
 "gpflow.training.external_optimizer.ExternalOptimizerInterface._minimize": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "gpflow.training.external_optimizer.ExternalOptimizerInterface._pack": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "classmethod",
    "len",
    "tensorflow.python.ops.array_ops.concat",
    "tensorflow.python.ops.array_ops.reshape"
   ]
  },
  "type": "function"
 },
 "gpflow.training.external_optimizer.ExternalOptimizerInterface.minimize": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "dict",
    "tensorflow.python.framework.ops.get_default_session",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpflow.training.external_optimizer.ScipyOptimizerInterface": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "gpflow.training.external_optimizer.ExternalOptimizerInterface"
   ]
  },
  "type": "class"
 },
 "gpflow.training.external_optimizer.ScipyOptimizerInterface._minimize": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.python.platform.tf_logging.info",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpflow.training.external_optimizer.ScipyOptimizerInterface._minimize.loss_grad_func_wrapper": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "loss_grad_func"
   ]
  },
  "type": "function"
 },
 "gpflow.training.external_optimizer.__all__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "gpflow.training.external_optimizer._accumulate": {
  "data": {
   "lineno": 447
  },
  "type": "function"
 },
 "gpflow.training.external_optimizer._compute_gradients": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "tensorflow.python.ops.array_ops.zeros_like",
    "tensorflow.python.ops.gradients.gradients",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpflow.training.external_optimizer._prod": {
  "data": {
   "lineno": 455
  },
  "type": "function"
 },
 "gpflow.training.external_optimizer.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "gpflow.training.external_optimizer.array_ops": {
  "data": {
   "shadows": "tensorflow.python.ops.array_ops"
  },
  "type": "import"
 },
 "gpflow.training.external_optimizer.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "gpflow.training.external_optimizer.gradients": {
  "data": {
   "shadows": "tensorflow.python.ops.gradients"
  },
  "type": "import"
 },
 "gpflow.training.external_optimizer.logging": {
  "data": {
   "shadows": "tensorflow.python.platform.tf_logging"
  },
  "type": "import"
 },
 "gpflow.training.external_optimizer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "gpflow.training.external_optimizer.ops": {
  "data": {
   "shadows": "tensorflow.python.framework.ops"
  },
  "type": "import"
 },
 "gpflow.training.external_optimizer.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "gpflow.training.external_optimizer.scipy.optimize": {
  "data": {
   "shadows": "scipy.optimize"
  },
  "type": "import"
 },
 "gpflow.training.external_optimizer.variables": {
  "data": {
   "shadows": "tensorflow.python.ops.variables"
  },
  "type": "import"
 },
 "gpflow.training.monitor": {
  "data": {},
  "type": "module"
 },
 "gpflow.training.monitor.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "gpflow.training.monitor.BaseTensorBoardTask": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "gpflow.training.monitor.MonitorTask"
   ]
  },
  "type": "class"
 },
 "gpflow.training.monitor.BaseTensorBoardTask.__init__": {
  "data": {
   "lineno": 797,
   "symbols_in_volume": [
    "RuntimeError",
    "gpflow.models.Model",
    "gpflow.training.monitor.LogdirWriter",
    "isinstance",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.BaseTensorBoardTask._eval_summary": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": [
    "RuntimeError",
    "gpflow.training.monitor.MonitorContext",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.BaseTensorBoardTask.flush": {
  "data": {
   "lineno": 829
  },
  "type": "function"
 },
 "gpflow.training.monitor.BaseTensorBoardTask.model": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "gpflow.models.Model",
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.BaseTensorBoardTask.run": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": [
    "gpflow.training.monitor.MonitorContext"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.BaseTensorBoardTask.with_flush_immediately": {
  "data": {
   "lineno": 821,
   "symbols_in_volume": [
    "bool",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "gpflow.training.monitor.CallbackTask": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "gpflow.training.monitor.MonitorTask"
   ]
  },
  "type": "class"
 },
 "gpflow.training.monitor.CallbackTask.__init__": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "super",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.CallbackTask.run": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "gpflow.training.monitor.MonitorContext"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.CheckpointTask": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "gpflow.training.monitor.MonitorTask"
   ]
  },
  "type": "class"
 },
 "gpflow.training.monitor.CheckpointTask.__init__": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "gpflow.training.monitor.get_default_saver",
    "pathlib.PurePath",
    "str",
    "super",
    "tensorflow.train.Saver",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.CheckpointTask.run": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "gpflow.training.monitor.MonitorContext"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "gpflow.training.monitor.Figure": {
  "data": {
   "shadows": "matplotlib.figure.Figure"
  },
  "type": "import"
 },
 "gpflow.training.monitor.GenericCondition": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "gpflow.training.monitor.GenericCondition.__call__": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "bool",
    "gpflow.training.monitor.MonitorContext",
    "next"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.GenericCondition.__init__": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "gpflow.training.monitor.MonitorContext",
    "next",
    "typing.Any",
    "typing.Callable",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.GrowingIntervalCondition": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "gpflow.training.monitor.GenericCondition"
   ]
  },
  "type": "class"
 },
 "gpflow.training.monitor.GrowingIntervalCondition.__init__": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "float",
    "gpflow.training.monitor.MonitorContext",
    "super",
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.GrowingIntervalCondition._growing_step_sequence": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "min",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.HistogramToTensorBoardTask": {
  "data": {
   "lineno": 1012,
   "symbols_in_volume": [
    "gpflow.training.monitor.BaseTensorBoardTask"
   ]
  },
  "type": "class"
 },
 "gpflow.training.monitor.HistogramToTensorBoardTask.__init__": {
  "data": {
   "lineno": 1018,
   "symbols_in_volume": [
    "func",
    "gpflow.training.monitor.LogdirWriter",
    "str",
    "super",
    "tensorflow.float64",
    "tensorflow.placeholder",
    "tensorflow.summary.histogram",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.HistogramToTensorBoardTask.run": {
  "data": {
   "lineno": 1033,
   "symbols_in_volume": [
    "gpflow.training.monitor.MonitorContext"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.ImageToTensorBoardTask": {
  "data": {
   "lineno": 1037,
   "symbols_in_volume": [
    "gpflow.training.monitor.BaseTensorBoardTask"
   ]
  },
  "type": "class"
 },
 "gpflow.training.monitor.ImageToTensorBoardTask.__init__": {
  "data": {
   "lineno": 1042,
   "symbols_in_volume": [
    "func",
    "gpflow.training.monitor.LogdirWriter",
    "matplotlib.figure.Figure",
    "str",
    "super",
    "tensorflow.float64",
    "tensorflow.placeholder",
    "tensorflow.summary.image",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.ImageToTensorBoardTask.run": {
  "data": {
   "lineno": 1056,
   "symbols_in_volume": [
    "gpflow.training.monitor.MonitorContext",
    "gpflow.training.monitor.io",
    "matplotlib.pyplot.close",
    "tensorflow.expand_dims",
    "tensorflow.image.decode_png"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "gpflow.training.monitor.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "gpflow.training.monitor.LmlToTensorBoardTask": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": [
    "gpflow.training.monitor.BaseTensorBoardTask"
   ]
  },
  "type": "class"
 },
 "gpflow.training.monitor.LmlToTensorBoardTask.__init__": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": [
    "ImportError",
    "bool",
    "gpflow.models.Model",
    "gpflow.settings.logger",
    "gpflow.settings.tf_float",
    "gpflow.training.monitor.LogdirWriter",
    "gpflow.training.monitor.logging",
    "gpflow.training.monitor.tqdm",
    "int",
    "super",
    "tensorflow.placeholder",
    "tensorflow.summary.scalar",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.LmlToTensorBoardTask.run": {
  "data": {
   "lineno": 940,
   "symbols_in_volume": [
    "gpflow.params_as_tensors_for",
    "gpflow.training.monitor.MonitorContext",
    "gpflow.training.monitor.math",
    "int",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.LogdirWriter": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "set",
    "tensorflow.summary.FileWriter"
   ]
  },
  "type": "class"
 },
 "gpflow.training.monitor.LogdirWriter.__del__": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "hasattr",
    "super"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.LogdirWriter.__init__": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "float",
    "int",
    "pathlib.PurePath",
    "str",
    "super",
    "tensorflow.Graph",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.LogdirWriter.__lock_location": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "RuntimeError",
    "gpflow.training.monitor.LogdirWriter"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.LogdirWriter.__release_location": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "gpflow.training.monitor.LogdirWriter"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.LogdirWriter.close": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.LogdirWriter.reopen": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.Model": {
  "data": {
   "shadows": "gpflow.models.Model"
  },
  "type": "import"
 },
 "gpflow.training.monitor.ModelToTensorBoardTask": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "gpflow.training.monitor.BaseTensorBoardTask"
   ]
  },
  "type": "class"
 },
 "gpflow.training.monitor.ModelToTensorBoardTask.__init__": {
  "data": {
   "lineno": 869,
   "symbols_in_volume": [
    "bool",
    "gpflow.models.Model",
    "gpflow.params.Parameter",
    "gpflow.training.monitor.LogdirWriter",
    "list",
    "super",
    "tensorflow.Summary",
    "tensorflow.reshape",
    "tensorflow.summary.histogram",
    "tensorflow.summary.merge",
    "tensorflow.summary.scalar",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.Monitor": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "gpflow.training.monitor.Monitor.__call__": {
  "data": {
   "lineno": 396
  },
  "type": "function"
 },
 "gpflow.training.monitor.Monitor.__enter__": {
  "data": {
   "lineno": 389
  },
  "type": "function"
 },
 "gpflow.training.monitor.Monitor.__exit__": {
  "data": {
   "lineno": 393
  },
  "type": "function"
 },
 "gpflow.training.monitor.Monitor.__init__": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "bool",
    "gpflow.training.monitor.MonitorContext",
    "gpflow.training.monitor.MonitorTask",
    "gpflow.training.monitor.get_hr_time",
    "list",
    "tensorflow.Session",
    "tensorflow.Variable",
    "typing.Any",
    "typing.Iterator",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.Monitor._on_iteration": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "func",
    "gpflow.training.monitor.get_hr_time"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.Monitor.print_summary": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.Monitor.start_monitoring": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "gpflow.training.monitor.get_hr_time"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.Monitor.stop_monitoring": {
  "data": {
   "lineno": 418
  },
  "type": "function"
 },
 "gpflow.training.monitor.MonitorContext": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "gpflow.training.monitor.MonitorContext.__init__": {
  "data": {
   "lineno": 225
  },
  "type": "function"
 },
 "gpflow.training.monitor.MonitorContext.global_step": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.MonitorTask": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "gpflow.training.monitor.abc"
   ]
  },
  "type": "class"
 },
 "gpflow.training.monitor.MonitorTask.__call__": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "gpflow.training.monitor.MonitorContext",
    "gpflow.training.monitor.get_hr_time",
    "gpflow.training.monitor.update_optimiser"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.MonitorTask.__init__": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "bool",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.MonitorTask.last_call_time": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.MonitorTask.run": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "NotImplementedError",
    "gpflow.training.monitor.MonitorContext",
    "gpflow.training.monitor.abc"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.MonitorTask.task_name": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.MonitorTask.total_time": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.MonitorTask.with_condition": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "bool",
    "gpflow.training.monitor.MonitorContext",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.MonitorTask.with_exit_condition": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "bool",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.MonitorTask.with_name": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "gpflow.training.monitor.Parameter": {
  "data": {
   "shadows": "gpflow.params.Parameter"
  },
  "type": "import"
 },
 "gpflow.training.monitor.PeriodicCondition": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "gpflow.training.monitor.GenericCondition"
   ]
  },
  "type": "class"
 },
 "gpflow.training.monitor.PeriodicCondition.__init__": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "gpflow.training.monitor.MonitorContext",
    "gpflow.training.monitor.itertools",
    "super",
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.PeriodicIterationCondition": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "gpflow.training.monitor.PeriodicCondition"
   ]
  },
  "type": "class"
 },
 "gpflow.training.monitor.PeriodicIterationCondition.__init__": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "int",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.PrintTimingsTask": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "gpflow.training.monitor.MonitorTask"
   ]
  },
  "type": "class"
 },
 "gpflow.training.monitor.PrintTimingsTask.__init__": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.PrintTimingsTask._print_timings": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "float",
    "int",
    "print"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.PrintTimingsTask.run": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "gpflow.training.monitor.MonitorContext",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.PurePath": {
  "data": {
   "shadows": "pathlib.PurePath"
  },
  "type": "import"
 },
 "gpflow.training.monitor.ScalarFuncToTensorBoardTask": {
  "data": {
   "lineno": 959,
   "symbols_in_volume": [
    "gpflow.training.monitor.BaseTensorBoardTask"
   ]
  },
  "type": "class"
 },
 "gpflow.training.monitor.ScalarFuncToTensorBoardTask.__init__": {
  "data": {
   "lineno": 965,
   "symbols_in_volume": [
    "func",
    "gpflow.training.monitor.LogdirWriter",
    "str",
    "super",
    "tensorflow.float64",
    "tensorflow.placeholder",
    "tensorflow.summary.scalar",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.ScalarFuncToTensorBoardTask.run": {
  "data": {
   "lineno": 977,
   "symbols_in_volume": [
    "gpflow.training.monitor.MonitorContext"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.ScipyOptimizer": {
  "data": {
   "shadows": "gpflow.training.scipy_optimizer.ScipyOptimizer"
  },
  "type": "import"
 },
 "gpflow.training.monitor.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "gpflow.training.monitor.SleepTask": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "gpflow.training.monitor.MonitorTask"
   ]
  },
  "type": "class"
 },
 "gpflow.training.monitor.SleepTask.__init__": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "float",
    "super"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.SleepTask.run": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "gpflow.training.monitor.MonitorContext",
    "gpflow.training.monitor.time"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "gpflow.training.monitor.VectorFuncToTensorBoardTask": {
  "data": {
   "lineno": 981,
   "symbols_in_volume": [
    "gpflow.training.monitor.BaseTensorBoardTask"
   ]
  },
  "type": "class"
 },
 "gpflow.training.monitor.VectorFuncToTensorBoardTask.__init__": {
  "data": {
   "lineno": 989,
   "symbols_in_volume": [
    "enumerate",
    "func",
    "gpflow.training.monitor.LogdirWriter",
    "int",
    "range",
    "str",
    "super",
    "tensorflow.float64",
    "tensorflow.placeholder",
    "tensorflow.summary.merge",
    "tensorflow.summary.scalar",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.VectorFuncToTensorBoardTask.run": {
  "data": {
   "lineno": 1005,
   "symbols_in_volume": [
    "gpflow.training.monitor.MonitorContext",
    "numpy.array",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "gpflow.training.monitor.create_global_step": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "tensorflow.Session",
    "tensorflow.Variable"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.get_default_saver": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "int",
    "tensorflow.train.Saver"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.get_hr_time": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "float",
    "timeit.default_timer"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "gpflow.training.monitor.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "gpflow.training.monitor.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "gpflow.training.monitor.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpflow.training.monitor.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "gpflow.training.monitor.params_as_tensors_for": {
  "data": {
   "shadows": "gpflow.params_as_tensors_for"
  },
  "type": "import"
 },
 "gpflow.training.monitor.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "gpflow.training.monitor.restore_session": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "gpflow.settings.logger",
    "gpflow.training.monitor.get_default_saver",
    "gpflow.training.monitor.logging",
    "str",
    "tensorflow.Session",
    "tensorflow.train.Saver",
    "tensorflow.train.latest_checkpoint",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "gpflow.training.monitor.settings": {
  "data": {
   "shadows": "gpflow.settings"
  },
  "type": "import"
 },
 "gpflow.training.monitor.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "gpflow.training.monitor.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "gpflow.training.monitor.timer": {
  "data": {
   "shadows": "timeit.default_timer"
  },
  "type": "import"
 },
 "gpflow.training.monitor.tqdm": {
  "data": {
   "shadows": "tqdm"
  },
  "type": "import"
 },
 "gpflow.training.monitor.update_optimiser": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "dict",
    "gpflow.training.scipy_optimizer.ScipyOptimizer",
    "isinstance",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpflow.training.optimizer": {
  "data": {},
  "type": "module"
 },
 "gpflow.training.optimizer.Optimizer": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "gpflow.training.optimizer.Optimizer._gen_feed_dict": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "gpflow.training.optimizer.Optimizer._gen_var_list": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "list",
    "set",
    "sorted",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "gpflow.training.optimizer.Optimizer.make_optimize_tensor": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "gpflow.training.optimizer.abc"
   ]
  },
  "type": "function"
 },
 "gpflow.training.optimizer.Optimizer.minimize": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "NotImplementedError",
    "gpflow.training.optimizer.abc"
   ]
  },
  "type": "function"
 },
 "gpflow.training.optimizer.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "gpflow.training.scipy_optimizer": {
  "data": {},
  "type": "module"
 },
 "gpflow.training.scipy_optimizer.ScipyOptimizer": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "gpflow.training.scipy_optimizer.ScipyOptimizer.__init__": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "gpflow.training.scipy_optimizer.ScipyOptimizer.make_optimize_tensor": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "gpflow.training.scipy_optimizer.ScipyOptimizer.minimize": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "GPflowError",
    "ValueError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "gpflow.training.scipy_optimizer.ScipyOptimizer.model": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.training.scipy_optimizer.ScipyOptimizer.optimizer": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.training.tensorflow_optimizer": {
  "data": {
   "symbols_in_volume": [
    "gpflow.training.tensorflow_optimizer._REGISTERED_TENSORFLOW_OPTIMIZERS",
    "gpflow.training.tensorflow_optimizer._register_optimizer",
    "gpflow.training.tensorflow_optimizer.suffix",
    "list",
    "tensorflow.train.__dict__.items"
   ]
  },
  "type": "module"
 },
 "gpflow.training.tensorflow_optimizer._REGISTERED_TENSORFLOW_OPTIMIZERS": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "gpflow.training.tensorflow_optimizer._TensorFlowOptimizer": {
  "data": {
   "lineno": 27
  },
  "type": "class"
 },
 "gpflow.training.tensorflow_optimizer._TensorFlowOptimizer.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "gpflow.training.tensorflow_optimizer._get_registered_optimizer",
    "super",
    "tf_optimizer"
   ]
  },
  "type": "function"
 },
 "gpflow.training.tensorflow_optimizer._TensorFlowOptimizer._initialize_optimizer": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "tensorflow.Session"
   ]
  },
  "type": "function"
 },
 "gpflow.training.tensorflow_optimizer._TensorFlowOptimizer.make_optimize_action": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "Optimization",
    "ValueError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "gpflow.training.tensorflow_optimizer._TensorFlowOptimizer.make_optimize_tensor": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "gpflow.training.tensorflow_optimizer._TensorFlowOptimizer.minimize": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "opt",
    "opt.model.anchor",
    "range",
    "step_callback"
   ]
  },
  "type": "function"
 },
 "gpflow.training.tensorflow_optimizer._TensorFlowOptimizer.minimize_operation": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.training.tensorflow_optimizer._TensorFlowOptimizer.model": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "gpflow.training.tensorflow_optimizer._TensorFlowOptimizer.optimizer": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpflow.training.tensorflow_optimizer.__all__": {
  "data": {
   "lineno": 173
  },
  "type": "constant"
 },
 "gpflow.training.tensorflow_optimizer._get_registered_optimizer": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "TypeError",
    "gpflow.training.tensorflow_optimizer._REGISTERED_TENSORFLOW_OPTIMIZERS",
    "tf_optimizer"
   ]
  },
  "type": "function"
 },
 "gpflow.training.tensorflow_optimizer._register_optimizer": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "ValueError",
    "__name__",
    "gpflow.training.tensorflow_optimizer._REGISTERED_TENSORFLOW_OPTIMIZERS",
    "gpflow.training.tensorflow_optimizer._TensorFlowOptimizer",
    "gpflow.training.tensorflow_optimizer.sys",
    "setattr",
    "tensorflow.train.Optimizer",
    "type"
   ]
  },
  "type": "function"
 },
 "gpflow.training.tensorflow_optimizer.suffix": {
  "data": {
   "lineno": 168
  },
  "type": "constant"
 },
 "gpflow.training.tensorflow_optimizer.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "gpflow.training.tensorflow_optimizer.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "gpflow.transforms": {
  "data": {
   "symbols_in_volume": [
    "gpflow.transforms.Log1pe"
   ]
  },
  "type": "module"
 },
 "gpflow.transforms.Chain": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "gpflow.transforms.Transform"
   ]
  },
  "type": "class"
 },
 "gpflow.transforms.Chain.__init__": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "gpflow.transforms.Chain.__str__": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "gpflow.transforms.Chain.backward": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "gpflow.transforms.Chain.backward_tensor": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "gpflow.transforms.Chain.forward": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "gpflow.transforms.Chain.forward_tensor": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "gpflow.transforms.Chain.log_jacobian_tensor": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "gpflow.transforms.DiagMatrix": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "gpflow.transforms.Transform"
   ]
  },
  "type": "class"
 },
 "gpflow.transforms.DiagMatrix.__init__": {
  "data": {
   "lineno": 284
  },
  "type": "function"
 },
 "gpflow.transforms.DiagMatrix.__str__": {
  "data": {
   "lineno": 311
  },
  "type": "function"
 },
 "gpflow.transforms.DiagMatrix.backward": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "gpflow.transforms.DiagMatrix.backward_tensor": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "tensorflow.matrix_diag_part",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "gpflow.transforms.DiagMatrix.forward": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "numpy.diag_indices",
    "numpy.s_",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "gpflow.transforms.DiagMatrix.forward_tensor": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "tensorflow.matrix_diag",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "gpflow.transforms.DiagMatrix.log_jacobian_tensor": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "gpflow.transforms.Exp": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "gpflow.transforms.Transform"
   ]
  },
  "type": "class"
 },
 "gpflow.transforms.Exp.__init__": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "gpflow.transforms.Exp.__str__": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "gpflow.transforms.Exp.backward": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "gpflow.transforms.Exp.backward_tensor": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "tensorflow.log"
   ]
  },
  "type": "function"
 },
 "gpflow.transforms.Exp.forward": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "gpflow.transforms.Exp.forward_tensor": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "tensorflow.exp"
   ]
  },
  "type": "function"
 },
 "gpflow.transforms.Exp.log_jacobian_tensor": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "tensorflow.reduce_sum"
   ]
  },
  "type": "function"
 },
 "gpflow.transforms.Identity": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "gpflow.transforms.Transform"
   ]
  },
  "type": "class"
 },
 "gpflow.transforms.Identity.__str__": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "gpflow.transforms.Identity.backward": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "gpflow.transforms.Identity.backward_tensor": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "tensorflow.identity"
   ]
  },
  "type": "function"
 },
 "gpflow.transforms.Identity.forward": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "gpflow.transforms.Identity.forward_tensor": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "tensorflow.identity"
   ]
  },
  "type": "function"
 },
 "gpflow.transforms.Identity.log_jacobian_tensor": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "gpflow.transforms.Log1pe": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "gpflow.transforms.Transform"
   ]
  },
  "type": "class"
 },
 "gpflow.transforms.Log1pe.__init__": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "gpflow.transforms.Log1pe.__str__": {
  "data": {
   "lineno": 191
  },
  "type": "function"
 },
 "gpflow.transforms.Log1pe.backward": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "numpy.expm1",
    "numpy.finfo",
    "numpy.log",
    "numpy.maximum"
   ]
  },
  "type": "function"
 },
 "gpflow.transforms.Log1pe.backward_tensor": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "tensorflow.as_dtype",
    "tensorflow.expm1",
    "tensorflow.log",
    "tensorflow.maximum"
   ]
  },
  "type": "function"
 },
 "gpflow.transforms.Log1pe.forward": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "numpy.logaddexp"
   ]
  },
  "type": "function"
 },
 "gpflow.transforms.Log1pe.forward_tensor": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "tensorflow.nn.softplus"
   ]
  },
  "type": "function"
 },
 "gpflow.transforms.Log1pe.log_jacobian_tensor": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "tensorflow.negative",
    "tensorflow.nn.softplus",
    "tensorflow.reduce_sum"
   ]
  },
  "type": "function"
 },
 "gpflow.transforms.Logistic": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "gpflow.transforms.Transform"
   ]
  },
  "type": "class"
 },
 "gpflow.transforms.Logistic.__init__": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "ValueError",
    "float"
   ]
  },
  "type": "function"
 },
 "gpflow.transforms.Logistic.__str__": {
  "data": {
   "lineno": 225
  },
  "type": "function"
 },
 "gpflow.transforms.Logistic.backward": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "gpflow.transforms.Logistic.backward_tensor": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "tensorflow.log"
   ]
  },
  "type": "function"
 },
 "gpflow.transforms.Logistic.forward": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "gpflow.transforms.Logistic.forward_tensor": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "tensorflow.exp"
   ]
  },
  "type": "function"
 },
 "gpflow.transforms.Logistic.log_jacobian_tensor": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "numpy.log",
    "tensorflow.exp",
    "tensorflow.log",
    "tensorflow.reduce_sum"
   ]
  },
  "type": "function"
 },
 "gpflow.transforms.LowerTriangular": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "gpflow.transforms.Transform"
   ]
  },
  "type": "class"
 },
 "gpflow.transforms.LowerTriangular.__init__": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "gpflow.transforms.LowerTriangular.__str__": {
  "data": {
   "lineno": 399
  },
  "type": "function"
 },
 "gpflow.transforms.LowerTriangular.backward": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "numpy.tril_indices",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "gpflow.transforms.LowerTriangular.backward_tensor": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "gpflow.transforms.itertools",
    "numpy.arange",
    "numpy.array",
    "numpy.hstack",
    "numpy.tril_indices",
    "numpy.vstack",
    "tensorflow.expand_dims",
    "tensorflow.gather_nd",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "gpflow.transforms.LowerTriangular.forward": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.tril_indices",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "gpflow.transforms.LowerTriangular.forward_tensor": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "tensorflow.squeeze",
    "vec_to_tri"
   ]
  },
  "type": "function"
 },
 "gpflow.transforms.LowerTriangular.log_jacobian_tensor": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "gpflow.transforms.Rescale": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "gpflow.transforms.Transform"
   ]
  },
  "type": "class"
 },
 "gpflow.transforms.Rescale.__init__": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "gpflow.transforms.Rescale.__str__": {
  "data": {
   "lineno": 267
  },
  "type": "function"
 },
 "gpflow.transforms.Rescale.backward": {
  "data": {
   "lineno": 258
  },
  "type": "function"
 },
 "gpflow.transforms.Rescale.backward_tensor": {
  "data": {
   "lineno": 255
  },
  "type": "function"
 },
 "gpflow.transforms.Rescale.forward": {
  "data": {
   "lineno": 252
  },
  "type": "function"
 },
 "gpflow.transforms.Rescale.forward_tensor": {
  "data": {
   "lineno": 249
  },
  "type": "function"
 },
 "gpflow.transforms.Rescale.log_jacobian_tensor": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "tensorflow.cast",
    "tensorflow.log",
    "tensorflow.reduce_prod",
    "tensorflow.shape"
   ]
  },
  "type": "function"
 },
 "gpflow.transforms.Transform": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "gpflow.transforms.Transform.__call__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "TypeError",
    "gpflow.transforms.Chain",
    "gpflow.transforms.Transform",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "gpflow.transforms.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "gpflow.transforms.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "gpflow.transforms.positive": {
  "data": {
   "lineno": 403
  },
  "type": "constant"
 },
 "gpflow.transforms.positiveRescale": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "gpflow.transforms.Rescale",
    "gpflow.transforms.positive"
   ]
  },
  "type": "function"
 },
 "gpflow.transforms.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tests": {
  "data": {},
  "type": "module"
 },
 "tests.reference": {
  "data": {},
  "type": "module"
 },
 "tests.reference.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.reference.referenceArcCosineKernel": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "numpy.arccos",
    "numpy.clip",
    "numpy.cos",
    "numpy.empty",
    "numpy.pi",
    "numpy.sin",
    "numpy.sqrt",
    "range"
   ]
  },
  "type": "function"
 },
 "tests.reference.referencePeriodicKernel": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.pi",
    "numpy.sin",
    "numpy.square",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "tests.reference.referenceRbfKernel": {
  "data": {
   "lineno": 3,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.exp",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "tests.test_actions": {
  "data": {},
  "type": "module"
 },
 "tests.test_actions.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "tests.test_actions.gp": {
  "data": {
   "shadows": "gpflow"
  },
  "type": "import"
 },
 "tests.test_actions.loop": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "gpflow.actions.Loop",
    "tests.test_actions.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_actions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_actions.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_actions.test_loop_condition_break": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "gpflow.actions.Condition",
    "tests.test_actions.loop"
   ]
  },
  "type": "function"
 },
 "tests.test_actions.test_loop_condition_break.break_loop": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "gpflow.actions.Loop.Break"
   ]
  },
  "type": "function"
 },
 "tests.test_actions.test_loop_condition_break.count": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "tests.test_actions.test_loop_condition_continue": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "gpflow.actions.Condition",
    "tests.test_actions.loop"
   ]
  },
  "type": "function"
 },
 "tests.test_actions.test_loop_condition_continue.continue_loop": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "gpflow.actions.Loop.Continue"
   ]
  },
  "type": "function"
 },
 "tests.test_actions.test_loop_condition_continue.count": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "tests.test_actions.test_loop_simple": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "range",
    "tests.test_actions.loop"
   ]
  },
  "type": "function"
 },
 "tests.test_actions.test_loop_simple.fun": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "tests.test_actions.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tests.test_autoflow": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tests.test_autoflow.AddModel": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "tests.test_autoflow.DumbModel"
   ]
  },
  "type": "class"
 },
 "tests.test_autoflow.AddModel.add": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "tensorflow.add",
    "tensorflow.float64",
    "tests.test_autoflow.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_autoflow.AutoFlow": {
  "data": {
   "shadows": "gpflow.core.AutoFlow"
  },
  "type": "import"
 },
 "tests.test_autoflow.DumbModel": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "tests.test_autoflow.gpflow"
   ]
  },
  "type": "class"
 },
 "tests.test_autoflow.DumbModel.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "tests.test_autoflow.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_autoflow.DumbModel._build_likelihood": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "tensorflow.square",
    "tests.test_autoflow.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_autoflow.GPflowTestCase": {
  "data": {
   "shadows": "gpflow.test_util.GPflowTestCase"
  },
  "type": "import"
 },
 "tests.test_autoflow.IncrementModel": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "tests.test_autoflow.DumbModel"
   ]
  },
  "type": "class"
 },
 "tests.test_autoflow.IncrementModel.__init__": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "numpy.array",
    "tests.test_autoflow.DumbModel",
    "tests.test_autoflow.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_autoflow.IncrementModel.inc": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "tensorflow.float64",
    "tests.test_autoflow.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_autoflow.NoArgsModel": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "tests.test_autoflow.DumbModel"
   ]
  },
  "type": "class"
 },
 "tests.test_autoflow.NoArgsModel.function1": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "tests.test_autoflow.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_autoflow.NoArgsModel.function2": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "tests.test_autoflow.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_autoflow.TestDataHolder": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_autoflow.TestDataHolder.test_add": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.testing.assert_almost_equal",
    "tests.test_autoflow.IncrementModel"
   ]
  },
  "type": "function"
 },
 "tests.test_autoflow.TestFixAndPredict": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_autoflow.TestFixAndPredict.prepare": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "numpy.random.randn",
    "tests.test_autoflow.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_autoflow.TestFixAndPredict.test": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "tests.test_autoflow.TestGPmodel": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_autoflow.TestGPmodel.prepare": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "numpy.random.randn",
    "tests.test_autoflow.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_autoflow.TestGPmodel.test_multiple_AFs": {
  "data": {
   "lineno": 164
  },
  "type": "function"
 },
 "tests.test_autoflow.TestGPmodel.test_predict_density": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "tests.test_autoflow.TestGPmodel.test_predict_f": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "tests.test_autoflow.TestGPmodel.test_predict_y": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "tests.test_autoflow.TestNoArgs": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_autoflow.TestNoArgs.test_autoflow_functioning": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "get_keys",
    "gpflow.core.AutoFlow.__autoflow_prefix__",
    "gpflow.core.AutoFlow.clear_autoflow",
    "len",
    "numpy.testing.assert_allclose",
    "tests.test_autoflow.NoArgsModel"
   ]
  },
  "type": "function"
 },
 "tests.test_autoflow.TestNoArgs.test_autoflow_functioning.get_keys": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "gpflow.core.AutoFlow.__autoflow_prefix__"
   ]
  },
  "type": "function"
 },
 "tests.test_autoflow.TestShareArgs": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_autoflow.TestShareArgs.setUp": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "tests.test_autoflow.AddModel"
   ]
  },
  "type": "function"
 },
 "tests.test_autoflow.TestShareArgs.test_share_args": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "tests.test_autoflow.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "tests.test_autoflow.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "tests.test_autoflow.gpflow": {
  "data": {
   "shadows": "gpflow"
  },
  "type": "import"
 },
 "tests.test_autoflow.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_autoflow.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tests.test_conditionals": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tests.test_conditionals.DiagsTest": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_conditionals.DiagsTest.prepare": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "gpflow.settings.float_type",
    "numpy.random.RandomState",
    "range",
    "tensorflow.diag",
    "tensorflow.placeholder",
    "tensorflow.stack",
    "tests.test_conditionals.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_conditionals.DiagsTest.test_nonwhiten": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "tests.test_conditionals.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_conditionals.DiagsTest.test_whiten": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "tests.test_conditionals.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_conditionals.GPflowTestCase": {
  "data": {
   "shadows": "gpflow.test_util.GPflowTestCase"
  },
  "type": "import"
 },
 "tests.test_conditionals.WhitenTest": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_conditionals.WhitenTest.prepare": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "gpflow.settings.float_type",
    "numpy.random.RandomState",
    "tensorflow.placeholder",
    "tests.test_conditionals.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_conditionals.WhitenTest.test_whiten": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "gpflow.settings.float_type",
    "numpy.testing.assert_allclose",
    "tensorflow.cholesky",
    "tensorflow.eye",
    "tensorflow.matrix_triangular_solve",
    "tests.test_conditionals.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_conditionals.WhitenTestGaussian": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "tests.test_conditionals.WhitenTest"
   ]
  },
  "type": "class"
 },
 "tests.test_conditionals.WhitenTestGaussian.test_whiten": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "gpflow.settings.float_type",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "tensorflow.cholesky",
    "tensorflow.diag",
    "tensorflow.matrix_triangular_solve",
    "tensorflow.placeholder",
    "tests.test_conditionals.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_conditionals.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "tests.test_conditionals.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "tests.test_conditionals.gpflow": {
  "data": {
   "shadows": "gpflow"
  },
  "type": "import"
 },
 "tests.test_conditionals.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_conditionals.settings": {
  "data": {
   "shadows": "gpflow.settings"
  },
  "type": "import"
 },
 "tests.test_conditionals.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tests.test_config": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tests.test_config.CONFIG_TXT": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "tests.test_config.GPflowTestCase": {
  "data": {
   "shadows": "gpflow.test_util.GPflowTestCase"
  },
  "type": "import"
 },
 "tests.test_config.TestConfigParsing": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_config.TestConfigParsing.setUp": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "tests.test_config.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_config.TestConfigParsing.setUpClass": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "classmethod",
    "open",
    "tensorflow.test.get_temp_dir",
    "tests.test_config.CONFIG_TXT",
    "tests.test_config.os"
   ]
  },
  "type": "function"
 },
 "tests.test_config.TestConfigParsing.tearDownClass": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "classmethod",
    "super",
    "tests.test_config.os"
   ]
  },
  "type": "function"
 },
 "tests.test_config.TestConfigParsing.test": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "tests.test_config.TestConfigParsing.test_config_not_found": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "RuntimeError",
    "tests.test_config.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_config.TestConfigParsing.test_parser": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.int32",
    "tests.test_config.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_config.TestSettingsManager": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_config.TestSettingsManager.testContextManager": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "tests.test_config.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_config.TestSettingsManager.testDeprecated": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "DeprecationWarning",
    "tests.test_config.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_config.TestSettingsManager.testMutability": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "tests.test_config.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_config.TestSettingsManager.testRaises": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "AttributeError",
    "tests.test_config.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_config.gpflow": {
  "data": {
   "shadows": "gpflow"
  },
  "type": "import"
 },
 "tests.test_config.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "tests.test_config.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "tests.test_config.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_config.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tests.test_config.test_logging": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "level_name",
    "tests.test_config.gpflow",
    "tests.test_config.inspect"
   ]
  },
  "type": "function"
 },
 "tests.test_config.test_logging.level_name": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "tests.test_config.logging"
   ]
  },
  "type": "function"
 },
 "tests.test_config.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tests.test_core": {
  "data": {},
  "type": "module"
 },
 "tests.test_core.GPflowTestCase": {
  "data": {
   "shadows": "gpflow.test_util.GPflowTestCase"
  },
  "type": "import"
 },
 "tests.test_core.TestTensorConverter": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_core.TestTensorConverter.test_failures": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ValueError",
    "object",
    "tests.test_core.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_core.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "tests.test_core.gpflow": {
  "data": {
   "shadows": "gpflow"
  },
  "type": "import"
 },
 "tests.test_core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_core.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tests.test_coregion": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tests.test_coregion.GPflowTestCase": {
  "data": {
   "shadows": "gpflow.test_util.GPflowTestCase"
  },
  "type": "import"
 },
 "tests.test_coregion.TestEquivalence": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_coregion.TestEquivalence.prepare": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "list",
    "numpy.concatenate",
    "numpy.cos",
    "numpy.hstack",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.sin",
    "numpy.zeros",
    "range",
    "tests.test_coregion.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_coregion.TestEquivalence.setup": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "tests.test_coregion.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_coregion.TestEquivalence.test_kernel_variance": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "tests.test_coregion.TestEquivalence.test_likelihood_variance": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "tests.test_coregion.TestEquivalence.test_mean_values": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "tests.test_coregion.TestEquivalence.test_predicts": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "numpy.cos",
    "numpy.hstack",
    "numpy.ones",
    "numpy.sin",
    "numpy.testing.assert_allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "tests.test_coregion.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "tests.test_coregion.gpflow": {
  "data": {
   "shadows": "gpflow"
  },
  "type": "import"
 },
 "tests.test_coregion.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_coregion.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tests.test_data_object": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tests.test_data_object.Foo": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "tests.test_data_object.gpflow"
   ]
  },
  "type": "class"
 },
 "tests.test_data_object.Foo._build_likelihood": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tests.test_data_object.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_data_object.GPflowTestCase": {
  "data": {
   "shadows": "gpflow.test_util.GPflowTestCase"
  },
  "type": "import"
 },
 "tests.test_data_object.TestDataHolderIntegers": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_data_object.TestDataHolderIntegers.prepare": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "tests.test_data_object.Foo",
    "tests.test_data_object.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_data_object.TestDataHolderIntegers.test_same_shape": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "tests.test_data_object.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_data_object.TestDataHolderIntegers.test_types": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "tests.test_data_object.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_data_object.TestDataHolderModels": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_data_object.TestDataHolderModels.prepare": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.random.RandomState",
    "numpy.sin",
    "tests.test_data_object.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_data_object.TestDataHolderModels.test_gpmc": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.sin",
    "tests.test_data_object.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_data_object.TestDataHolderModels.test_gpr": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "tests.test_data_object.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_data_object.TestDataHolderModels.test_sgpmc": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "tests.test_data_object.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_data_object.TestDataHolderModels.test_sgpr": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "tests.test_data_object.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_data_object.TestDataHolderModels.test_svgp": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "tests.test_data_object.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_data_object.TestDataHolderModels.test_vgp": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.sin",
    "tests.test_data_object.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_data_object.TestDataHolderSimple": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_data_object.TestDataHolderSimple.prepare": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "tests.test_data_object.Foo",
    "tests.test_data_object.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_data_object.TestDataHolderSimple.test_raise": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "tests.test_data_object.TestDataHolderSimple.test_same_shape": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "tests.test_data_object.TestDataHolderSimple.test_types": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "gpflow.settings.float_type"
   ]
  },
  "type": "function"
 },
 "tests.test_data_object.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "tests.test_data_object.gpflow": {
  "data": {
   "shadows": "gpflow"
  },
  "type": "import"
 },
 "tests.test_data_object.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_data_object.settings": {
  "data": {
   "shadows": "gpflow.settings"
  },
  "type": "import"
 },
 "tests.test_data_object.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tests.test_dataholders": {
  "data": {},
  "type": "module"
 },
 "tests.test_dataholders.GPflowTestCase": {
  "data": {
   "shadows": "gpflow.test_util.GPflowTestCase"
  },
  "type": "import"
 },
 "tests.test_dataholders.TestDataholder": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_dataholders.TestDataholder.test_create_dataholder": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.ones",
    "tensorflow.get_variable",
    "tests.test_dataholders.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_dataholders.TestDataholder.test_failed_creation": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "ValueError",
    "object",
    "tensorflow.get_variable",
    "tests.test_dataholders.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_dataholders.TestDataholder.test_fixed_shape": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "ValueError",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "tests.test_dataholders.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_dataholders.TestDataholder.test_is_built": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.Graph",
    "tests.test_dataholders.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_dataholders.TestMinibatch": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_dataholders.TestMinibatch.test_change_batch_size": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "check_batch_size",
    "numpy.random.randn",
    "numpy.testing.assert_allclose",
    "range",
    "tests.test_dataholders.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_dataholders.TestMinibatch.test_change_batch_size.check_batch_size": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "tests.test_dataholders.TestMinibatch.test_change_variable_size": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.testing.assert_allclose",
    "range",
    "tests.test_dataholders.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_dataholders.TestMinibatch.test_clear": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.testing.assert_allclose",
    "range",
    "tests.test_dataholders.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_dataholders.TestMinibatch.test_create": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.get_variable",
    "tests.test_dataholders.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_dataholders.TestMinibatch.test_seed": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.testing.assert_allclose",
    "range",
    "tests.test_dataholders.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_dataholders.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "tests.test_dataholders.gpflow": {
  "data": {
   "shadows": "gpflow"
  },
  "type": "import"
 },
 "tests.test_dataholders.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_dataholders.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "tests.test_dataholders.settings": {
  "data": {
   "shadows": "gpflow.settings"
  },
  "type": "import"
 },
 "tests.test_dataholders.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tests.test_expectations": {
  "data": {
   "symbols_in_volume": [
    "numpy.random.RandomState"
   ]
  },
  "type": "module"
 },
 "tests.test_expectations.Data": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.stack",
    "numpy.transpose",
    "numpy.zeros",
    "tests.test_expectations.rng"
   ]
  },
  "type": "class"
 },
 "tests.test_expectations.DiagonalGaussian": {
  "data": {
   "shadows": "gpflow.probability_distributions.DiagonalGaussian"
  },
  "type": "import"
 },
 "tests.test_expectations.Gaussian": {
  "data": {
   "shadows": "gpflow.probability_distributions.Gaussian"
  },
  "type": "import"
 },
 "tests.test_expectations.MarkovGaussian": {
  "data": {
   "shadows": "gpflow.probability_distributions.MarkovGaussian"
  },
  "type": "import"
 },
 "tests.test_expectations.RTOL": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "tests.test_expectations._check": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "gpflow.expectations.expectation",
    "gpflow.expectations.quadrature_expectation",
    "numpy.testing.assert_allclose",
    "tensorflow.get_default_session",
    "tests.test_expectations.RTOL"
   ]
  },
  "type": "function"
 },
 "tests.test_expectations.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "tests.test_expectations.cache_tensor": {
  "data": {
   "shadows": "gpflow.test_util.cache_tensor"
  },
  "type": "import"
 },
 "tests.test_expectations.const_mean": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "gpflow.mean_functions.Constant",
    "gpflow.test_util.cache_tensor",
    "tests.test_expectations.Data",
    "tests.test_expectations.rng"
   ]
  },
  "type": "function"
 },
 "tests.test_expectations.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "tests.test_expectations.dirac_diag": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "gpflow.probability_distributions.DiagonalGaussian",
    "gpflow.test_util.cache_tensor",
    "numpy.zeros",
    "tensorflow.convert_to_tensor",
    "tests.test_expectations.Data"
   ]
  },
  "type": "function"
 },
 "tests.test_expectations.dirac_gauss": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "gpflow.probability_distributions.Gaussian",
    "gpflow.test_util.cache_tensor",
    "numpy.zeros",
    "tensorflow.convert_to_tensor",
    "tests.test_expectations.Data"
   ]
  },
  "type": "function"
 },
 "tests.test_expectations.dirac_markov_gauss": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "gpflow.probability_distributions.MarkovGaussian",
    "gpflow.test_util.cache_tensor",
    "numpy.zeros",
    "tensorflow.convert_to_tensor",
    "tests.test_expectations.Data"
   ]
  },
  "type": "function"
 },
 "tests.test_expectations.expectation": {
  "data": {
   "shadows": "gpflow.expectations.expectation"
  },
  "type": "import"
 },
 "tests.test_expectations.feature": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "gpflow.features.InducingPoints",
    "tests.test_expectations.Data",
    "tests.test_expectations.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_expectations.feature2": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "gpflow.features.InducingPoints",
    "gpflow.test_util.cache_tensor",
    "tests.test_expectations.Data"
   ]
  },
  "type": "function"
 },
 "tests.test_expectations.features": {
  "data": {
   "shadows": "gpflow.features"
  },
  "type": "import"
 },
 "tests.test_expectations.gauss": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "gpflow.probability_distributions.Gaussian",
    "gpflow.test_util.cache_tensor",
    "tensorflow.convert_to_tensor",
    "tests.test_expectations.Data"
   ]
  },
  "type": "function"
 },
 "tests.test_expectations.gauss_diag": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "gpflow.probability_distributions.DiagonalGaussian",
    "gpflow.test_util.cache_tensor",
    "tensorflow.convert_to_tensor",
    "tests.test_expectations.Data",
    "tests.test_expectations.rng"
   ]
  },
  "type": "function"
 },
 "tests.test_expectations.gpflow": {
  "data": {
   "shadows": "gpflow"
  },
  "type": "import"
 },
 "tests.test_expectations.identity_mean": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "gpflow.mean_functions.Identity",
    "gpflow.test_util.cache_tensor",
    "tests.test_expectations.Data"
   ]
  },
  "type": "function"
 },
 "tests.test_expectations.kernels": {
  "data": {
   "shadows": "gpflow.kernels"
  },
  "type": "import"
 },
 "tests.test_expectations.lin_kern": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "gpflow.kernels.Linear",
    "gpflow.test_util.cache_tensor",
    "tests.test_expectations.Data",
    "tests.test_expectations.rng"
   ]
  },
  "type": "function"
 },
 "tests.test_expectations.lin_kern_act_dim_0": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "gpflow.kernels.Linear",
    "gpflow.test_util.cache_tensor",
    "tests.test_expectations.rng"
   ]
  },
  "type": "function"
 },
 "tests.test_expectations.lin_kern_act_dim_1": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "gpflow.kernels.Linear",
    "gpflow.test_util.cache_tensor",
    "tests.test_expectations.rng"
   ]
  },
  "type": "function"
 },
 "tests.test_expectations.lin_mean": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "gpflow.mean_functions.Linear",
    "gpflow.test_util.cache_tensor",
    "tests.test_expectations.Data",
    "tests.test_expectations.rng"
   ]
  },
  "type": "function"
 },
 "tests.test_expectations.markov_gauss": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "gpflow.probability_distributions.MarkovGaussian",
    "gpflow.test_util.cache_tensor",
    "tensorflow.convert_to_tensor",
    "tests.test_expectations.Data"
   ]
  },
  "type": "function"
 },
 "tests.test_expectations.matern_kern": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "gpflow.kernels.Matern32",
    "gpflow.test_util.cache_tensor",
    "tests.test_expectations.Data",
    "tests.test_expectations.rng"
   ]
  },
  "type": "function"
 },
 "tests.test_expectations.mean_functions": {
  "data": {
   "shadows": "gpflow.mean_functions"
  },
  "type": "import"
 },
 "tests.test_expectations.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_expectations.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_expectations.quadrature_expectation": {
  "data": {
   "shadows": "gpflow.expectations.quadrature_expectation"
  },
  "type": "import"
 },
 "tests.test_expectations.rbf_kern": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "gpflow.kernels.RBF",
    "gpflow.test_util.cache_tensor",
    "tests.test_expectations.Data",
    "tests.test_expectations.rng"
   ]
  },
  "type": "function"
 },
 "tests.test_expectations.rbf_kern_2": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "gpflow.kernels.RBF",
    "gpflow.test_util.cache_tensor",
    "tests.test_expectations.Data",
    "tests.test_expectations.rng"
   ]
  },
  "type": "function"
 },
 "tests.test_expectations.rbf_kern_act_dim_0": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "gpflow.kernels.RBF",
    "gpflow.test_util.cache_tensor",
    "tests.test_expectations.rng"
   ]
  },
  "type": "function"
 },
 "tests.test_expectations.rbf_kern_act_dim_1": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "gpflow.kernels.RBF",
    "gpflow.test_util.cache_tensor",
    "tests.test_expectations.rng"
   ]
  },
  "type": "function"
 },
 "tests.test_expectations.rbf_lin_prod_kern": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "gpflow.kernels.Linear",
    "gpflow.kernels.Product",
    "gpflow.kernels.RBF",
    "gpflow.test_util.cache_tensor",
    "tests.test_expectations.rng"
   ]
  },
  "type": "function"
 },
 "tests.test_expectations.rbf_lin_sum_kern": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "gpflow.kernels.Linear",
    "gpflow.kernels.RBF",
    "gpflow.kernels.Sum",
    "gpflow.test_util.cache_tensor",
    "tests.test_expectations.Data",
    "tests.test_expectations.rng"
   ]
  },
  "type": "function"
 },
 "tests.test_expectations.rbf_lin_sum_kern2": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "gpflow.kernels.Linear",
    "gpflow.kernels.RBF",
    "gpflow.kernels.Sum",
    "gpflow.test_util.cache_tensor",
    "tests.test_expectations.Data",
    "tests.test_expectations.rng"
   ]
  },
  "type": "function"
 },
 "tests.test_expectations.rng": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "tests.test_expectations.session_tf": {
  "data": {
   "shadows": "gpflow.test_util.session_tf"
  },
  "type": "import"
 },
 "tests.test_expectations.test_RBF_eKzxKxz_gradient_not_NaN": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "gpflow.expectations.expectation",
    "gpflow.test_util.session_tf.run",
    "numpy.isnan",
    "tensorflow.constant",
    "tensorflow.gradients",
    "tests.test_expectations.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_expectations.test_cov_shape_inference": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "distribution",
    "gpflow.probability_distributions.MarkovGaussian",
    "isinstance",
    "tests.test_expectations._check",
    "tests.test_expectations.feature",
    "tests.test_expectations.gauss",
    "tests.test_expectations.gauss_diag",
    "tests.test_expectations.markov_gauss",
    "tests.test_expectations.pytest",
    "tests.test_expectations.rbf_kern"
   ]
  },
  "type": "function"
 },
 "tests.test_expectations.test_eKdiag_no_uncertainty": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "gpflow.expectations.expectation",
    "gpflow.test_util.session_tf.run",
    "kernel",
    "numpy.testing.assert_allclose",
    "tests.test_expectations.Data",
    "tests.test_expectations.RTOL",
    "tests.test_expectations.dirac_diag",
    "tests.test_expectations.lin_kern",
    "tests.test_expectations.pytest",
    "tests.test_expectations.rbf_kern",
    "tests.test_expectations.rbf_lin_prod_kern",
    "tests.test_expectations.rbf_lin_sum_kern"
   ]
  },
  "type": "function"
 },
 "tests.test_expectations.test_eKxz_no_uncertainty": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "gpflow.expectations.expectation",
    "gpflow.test_util.session_tf.run",
    "kernel",
    "numpy.testing.assert_allclose",
    "tests.test_expectations.Data",
    "tests.test_expectations.RTOL",
    "tests.test_expectations.dirac_diag",
    "tests.test_expectations.feature",
    "tests.test_expectations.lin_kern",
    "tests.test_expectations.pytest",
    "tests.test_expectations.rbf_kern",
    "tests.test_expectations.rbf_lin_prod_kern",
    "tests.test_expectations.rbf_lin_sum_kern"
   ]
  },
  "type": "function"
 },
 "tests.test_expectations.test_eKzxKxz_different_sum_kernels": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "tests.test_expectations._check",
    "tests.test_expectations.feature",
    "tests.test_expectations.gauss",
    "tests.test_expectations.rbf_lin_sum_kern",
    "tests.test_expectations.rbf_lin_sum_kern2"
   ]
  },
  "type": "function"
 },
 "tests.test_expectations.test_eKzxKxz_no_uncertainty": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "gpflow.expectations.expectation",
    "gpflow.test_util.session_tf.run",
    "kernel",
    "numpy.testing.assert_allclose",
    "tests.test_expectations.Data",
    "tests.test_expectations.RTOL",
    "tests.test_expectations.dirac_diag",
    "tests.test_expectations.feature",
    "tests.test_expectations.lin_kern",
    "tests.test_expectations.pytest",
    "tests.test_expectations.rbf_kern",
    "tests.test_expectations.rbf_lin_prod_kern",
    "tests.test_expectations.rbf_lin_sum_kern"
   ]
  },
  "type": "function"
 },
 "tests.test_expectations.test_eKzxKxz_rbf_cross_covariance": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "distribution",
    "feat1",
    "feat2",
    "kernel1",
    "kernel2",
    "tests.test_expectations._check",
    "tests.test_expectations.feature",
    "tests.test_expectations.feature2",
    "tests.test_expectations.gauss",
    "tests.test_expectations.gauss_diag",
    "tests.test_expectations.pytest",
    "tests.test_expectations.rbf_kern",
    "tests.test_expectations.rbf_kern_2"
   ]
  },
  "type": "function"
 },
 "tests.test_expectations.test_eKzxKxz_same_vs_different_sum_kernels": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "gpflow.expectations.expectation",
    "numpy.testing.assert_allclose",
    "tensorflow.get_default_session",
    "tests.test_expectations.RTOL",
    "tests.test_expectations.copy",
    "tests.test_expectations.feature",
    "tests.test_expectations.gauss",
    "tests.test_expectations.rbf_lin_sum_kern2"
   ]
  },
  "type": "function"
 },
 "tests.test_expectations.test_eKzxKxz_separate_dims_simplification": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "kernel1",
    "kernel2",
    "tests.test_expectations._check",
    "tests.test_expectations.feature",
    "tests.test_expectations.gauss_diag",
    "tests.test_expectations.lin_kern_act_dim_0",
    "tests.test_expectations.lin_kern_act_dim_1",
    "tests.test_expectations.pytest",
    "tests.test_expectations.rbf_kern_act_dim_0",
    "tests.test_expectations.rbf_kern_act_dim_1"
   ]
  },
  "type": "function"
 },
 "tests.test_expectations.test_eMxKxz_no_uncertainty": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "gpflow.expectations.expectation",
    "gpflow.test_util.session_tf.run",
    "kernel",
    "mean",
    "numpy.testing.assert_allclose",
    "tests.test_expectations.Data",
    "tests.test_expectations.RTOL",
    "tests.test_expectations.const_mean",
    "tests.test_expectations.dirac_diag",
    "tests.test_expectations.dirac_gauss",
    "tests.test_expectations.feature",
    "tests.test_expectations.identity_mean",
    "tests.test_expectations.lin_kern",
    "tests.test_expectations.lin_mean",
    "tests.test_expectations.pytest",
    "tests.test_expectations.rbf_kern",
    "tests.test_expectations.rbf_lin_sum_kern",
    "tests.test_expectations.zero_mean"
   ]
  },
  "type": "function"
 },
 "tests.test_expectations.test_exKxz_markov": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "kernel",
    "tests.test_expectations._check",
    "tests.test_expectations.feature",
    "tests.test_expectations.identity_mean",
    "tests.test_expectations.lin_kern",
    "tests.test_expectations.markov_gauss",
    "tests.test_expectations.pytest",
    "tests.test_expectations.rbf_kern",
    "tests.test_expectations.rbf_lin_sum_kern"
   ]
  },
  "type": "function"
 },
 "tests.test_expectations.test_exKxz_markov_no_uncertainty": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "gpflow.expectations.expectation",
    "gpflow.test_util.session_tf.run",
    "kernel",
    "numpy.testing.assert_allclose",
    "tests.test_expectations.Data",
    "tests.test_expectations.RTOL",
    "tests.test_expectations.dirac_markov_gauss",
    "tests.test_expectations.feature",
    "tests.test_expectations.identity_mean",
    "tests.test_expectations.lin_kern",
    "tests.test_expectations.pytest",
    "tests.test_expectations.rbf_kern",
    "tests.test_expectations.rbf_lin_sum_kern"
   ]
  },
  "type": "function"
 },
 "tests.test_expectations.test_kernel_mean_function_expectations": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "arg_filter",
    "distribution",
    "kernel",
    "mean",
    "tests.test_expectations._check",
    "tests.test_expectations.const_mean",
    "tests.test_expectations.feature",
    "tests.test_expectations.gauss",
    "tests.test_expectations.identity_mean",
    "tests.test_expectations.lin_kern",
    "tests.test_expectations.lin_mean",
    "tests.test_expectations.matern_kern",
    "tests.test_expectations.pytest",
    "tests.test_expectations.rbf_kern",
    "tests.test_expectations.rbf_lin_sum_kern",
    "tests.test_expectations.zero_mean"
   ]
  },
  "type": "function"
 },
 "tests.test_expectations.test_kernel_only_expectations": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "arg_filter",
    "distribution",
    "kernel",
    "tests.test_expectations._check",
    "tests.test_expectations.feature",
    "tests.test_expectations.gauss",
    "tests.test_expectations.gauss_diag",
    "tests.test_expectations.lin_kern",
    "tests.test_expectations.pytest",
    "tests.test_expectations.rbf_kern",
    "tests.test_expectations.rbf_lin_prod_kern",
    "tests.test_expectations.rbf_lin_sum_kern"
   ]
  },
  "type": "function"
 },
 "tests.test_expectations.test_mean_function_only_expectations": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "arg_filter",
    "distribution",
    "mean1",
    "mean2",
    "tests.test_expectations._check",
    "tests.test_expectations.const_mean",
    "tests.test_expectations.gauss",
    "tests.test_expectations.identity_mean",
    "tests.test_expectations.lin_mean",
    "tests.test_expectations.pytest",
    "tests.test_expectations.zero_mean"
   ]
  },
  "type": "function"
 },
 "tests.test_expectations.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tests.test_expectations.zero_mean": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "gpflow.mean_functions.Zero",
    "gpflow.test_util.cache_tensor",
    "tests.test_expectations.Data"
   ]
  },
  "type": "function"
 },
 "tests.test_features": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tests.test_features.GPflowTestCase": {
  "data": {
   "shadows": "gpflow.test_util.GPflowTestCase"
  },
  "type": "import"
 },
 "tests.test_features.TestFeaturesPsdSchur": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_features.TestFeaturesPsdSchur.test_matrix_psd": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "feature",
    "feature.Kuf",
    "feature.Kuu",
    "init_feat",
    "kern_class",
    "numpy.all",
    "numpy.linalg.eig",
    "numpy.linalg.solve",
    "numpy.random.randn",
    "tests.test_features.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_features.TestFeaturesPsdSchur.test_matrix_psd.init_feat": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "feature",
    "numpy.random.rand",
    "numpy.random.randn",
    "tests.test_features.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_features.TestInducingPoints": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_features.TestInducingPoints.test_feature_len": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "tests.test_features.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_features.TestInducingPoints.test_inducing_points_equivalence": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "numpy.random.randn",
    "tests.test_features.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_features.TestMultiScaleInducing": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_features.TestMultiScaleInducing.prepare": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.randn",
    "numpy.zeros",
    "tests.test_features.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_features.TestMultiScaleInducing.test_equivalence_inducing_points": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.max",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "tests.test_features.gpflow": {
  "data": {
   "shadows": "gpflow"
  },
  "type": "import"
 },
 "tests.test_features.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_features.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tests.test_gplvm": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.random.seed",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tests.test_gplvm.GPflowTestCase": {
  "data": {
   "shadows": "gpflow.test_util.GPflowTestCase"
  },
  "type": "import"
 },
 "tests.test_gplvm.TestBayesianGPLVM": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_gplvm.TestBayesianGPLVM.setUp": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "tests.test_gplvm.TestBayesianGPLVM.test_1d": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "gpflow.kernels.RBF",
    "numpy.expand_dims",
    "numpy.linspace",
    "numpy.ones",
    "numpy.zeros",
    "tests.test_gplvm.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_gplvm.TestBayesianGPLVM.test_2d": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "gpflow.kernels.RBF",
    "numpy.allclose",
    "numpy.diag",
    "numpy.ones",
    "range",
    "tests.test_gplvm.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_gplvm.TestGPLVM": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_gplvm.TestGPLVM.setUp": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "tests.test_gplvm.TestGPLVM.test_optimise": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "tests.test_gplvm.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_gplvm.TestGPLVM.test_otherkernel": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "gpflow.kernels.Periodic",
    "tests.test_gplvm.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_gplvm.gpflow": {
  "data": {
   "shadows": "gpflow"
  },
  "type": "import"
 },
 "tests.test_gplvm.kernels": {
  "data": {
   "shadows": "gpflow.kernels"
  },
  "type": "import"
 },
 "tests.test_gplvm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_gplvm.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tests.test_hmc": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tests.test_hmc.CheckTrainingVariableState": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_hmc.CheckTrainingVariableState.check_last_variables_state": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "tests.test_hmc.CheckTrainingVariableState.model": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "numpy.random.randn",
    "tests.test_hmc.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_hmc.CheckTrainingVariableState.test_last_update": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "tests.test_hmc.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_hmc.CheckTrainingVariableState.test_multiple_runs": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "tests.test_hmc.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_hmc.CheckTrainingVariableState.test_with_fixed": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "tests.test_hmc.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_hmc.GPflowTestCase": {
  "data": {
   "shadows": "gpflow.test_util.GPflowTestCase"
  },
  "type": "import"
 },
 "tests.test_hmc.Quadratic": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "tests.test_hmc.gpflow"
   ]
  },
  "type": "class"
 },
 "tests.test_hmc.Quadratic.__init__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "super",
    "tests.test_hmc.Quadratic",
    "tests.test_hmc.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_hmc.Quadratic._build_likelihood": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "tensorflow.reduce_sum",
    "tensorflow.square",
    "tests.test_hmc.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_hmc.SampleGaussianTest": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_hmc.SampleGaussianTest.Gauss": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "tests.test_hmc.gpflow"
   ]
  },
  "type": "class"
 },
 "tests.test_hmc.SampleGaussianTest.Gauss.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.zeros",
    "super",
    "tests.test_hmc.SampleGaussianTest",
    "tests.test_hmc.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_hmc.SampleGaussianTest.Gauss._build_likelihood": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tests.test_hmc.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_hmc.SampleGaussianTest.Gauss.build_objective": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "tensorflow.reduce_sum",
    "tensorflow.square",
    "tests.test_hmc.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_hmc.SampleGaussianTest.setUp": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "tensorflow.set_random_seed",
    "tests.test_hmc.SampleGaussianTest",
    "tests.test_hmc.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_hmc.SampleGaussianTest.test_burn": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "list",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "tests.test_hmc.SampleGaussianTest.test_columns_names": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "tests.test_hmc.SampleGaussianTest.test_mean_cov": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.cov",
    "numpy.eye",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "tests.test_hmc.SampleGaussianTest.test_rng": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "get_samples",
    "numpy.all",
    "tensorflow.set_random_seed"
   ]
  },
  "type": "function"
 },
 "tests.test_hmc.SampleGaussianTest.test_rng.get_samples": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "tests.test_hmc.SampleGaussianTest",
    "tests.test_hmc.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_hmc.SampleModelTest": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_hmc.SampleModelTest.setUp": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "tensorflow.set_random_seed"
   ]
  },
  "type": "function"
 },
 "tests.test_hmc.SampleModelTest.test_mean": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros",
    "tests.test_hmc.Quadratic",
    "tests.test_hmc.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_hmc.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "tests.test_hmc.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "tests.test_hmc.gpflow": {
  "data": {
   "shadows": "gpflow"
  },
  "type": "import"
 },
 "tests.test_hmc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_hmc.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tests.test_kerns": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tests.test_kerns.GPflowTestCase": {
  "data": {
   "shadows": "gpflow.test_util.GPflowTestCase"
  },
  "type": "import"
 },
 "tests.test_kerns.TestARDActiveProd": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_kerns.TestARDActiveProd.setUp": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.RandomState",
    "tensorflow.Graph",
    "tests.test_kerns.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_kerns.TestARDActiveProd.test": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.random.randn",
    "tensorflow.float64",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tests.test_kerns.TestARDInit": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_kerns.TestARDInit.setUp": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "tensorflow.Graph"
   ]
  },
  "type": "function"
 },
 "tests.test_kerns.TestARDInit.test_MLP": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "k1",
    "k1.weight_variances.read_value",
    "k2",
    "k2.weight_variances.read_value",
    "numpy.all",
    "numpy.ones",
    "tests.test_kerns.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_kerns.TestARDInit.test_init": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "ValueError",
    "k1",
    "k2",
    "tests.test_kerns.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_kerns.TestARDInit.test_scalar": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "k1",
    "k1.lengthscales.read_value",
    "k2",
    "k2.lengthscales.read_value",
    "numpy.all",
    "numpy.ones",
    "tests.test_kerns.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_kerns.TestAdd": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_kerns.TestAdd.setUp": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "k",
    "numpy.random.RandomState",
    "tensorflow.Graph",
    "tests.test_kerns.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_kerns.TestAdd.test_asym": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "k",
    "k.K",
    "k.compile",
    "numpy.allclose",
    "tensorflow.float64",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tests.test_kerns.TestAdd.test_sym": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "k",
    "k.K",
    "k.compile",
    "numpy.allclose",
    "tensorflow.float64",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tests.test_kerns.TestArcCosine": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_kerns.TestArcCosine.evalKernelError": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "referenceArcCosineKernel",
    "tensorflow.placeholder",
    "tests.test_kerns.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_kerns.TestArcCosine.setUp": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "tensorflow.Graph"
   ]
  },
  "type": "function"
 },
 "tests.test_kerns.TestArcCosine.test_1d": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "tests.test_kerns.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_kerns.TestArcCosine.test_3d": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.RandomState",
    "tests.test_kerns.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_kerns.TestArcCosine.test_nan_in_gradient": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.isnan",
    "numpy.random.RandomState",
    "tensorflow.float64",
    "tensorflow.gradients",
    "tensorflow.placeholder",
    "tests.test_kerns.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_kerns.TestArcCosine.test_non_implemented_order": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "ValueError",
    "tests.test_kerns.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_kerns.TestArcCosine.test_weight_initializations": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "tests.test_kerns.TestCoregion": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_kerns.TestCoregion.setUp": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "numpy.random.randint",
    "tensorflow.Graph",
    "tests.test_kerns.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_kerns.TestCoregion.tearDown": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase.tearDown"
   ]
  },
  "type": "function"
 },
 "tests.test_kerns.TestCoregion.test_diag": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.diag"
   ]
  },
  "type": "function"
 },
 "tests.test_kerns.TestCoregion.test_shape": {
  "data": {
   "lineno": 219
  },
  "type": "function"
 },
 "tests.test_kerns.TestCoregion.test_slice": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.hstack",
    "tests.test_kerns.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_kerns.TestKernDiags": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_kerns.TestKernDiags.setUp": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "k",
    "numpy.random.RandomState",
    "tensorflow.Graph",
    "tests.test_kerns.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_kerns.TestKernDiags.test": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "k",
    "k.K",
    "k.Kdiag",
    "k.initialize",
    "numpy.allclose",
    "numpy.random.RandomState",
    "tensorflow.diag_part",
    "tensorflow.float64",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tests.test_kerns.TestKernSymmetry": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_kerns.TestKernSymmetry.setUp": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "tensorflow.Graph",
    "tests.test_kerns.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_kerns.TestKernSymmetry.test_1d": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "K",
    "numpy.allclose",
    "tensorflow.float64",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tests.test_kerns.TestKernSymmetry.test_5d": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "K",
    "numpy.allclose",
    "tensorflow.float64",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tests.test_kerns.TestPeriodic": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_kerns.TestPeriodic.evalKernelError": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "referencePeriodicKernel",
    "tensorflow.placeholder",
    "tests.test_kerns.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_kerns.TestPeriodic.setUp": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "tensorflow.Graph"
   ]
  },
  "type": "function"
 },
 "tests.test_kerns.TestPeriodic.test_1d": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "tests.test_kerns.TestPeriodic.test_2d": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "numpy.eye",
    "numpy.random.RandomState",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "tests.test_kerns.TestProd": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_kerns.TestProd.setUp": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "k1",
    "k2",
    "k3",
    "tensorflow.Graph",
    "tests.test_kerns.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_kerns.TestProd.tearDown": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase.tearDown"
   ]
  },
  "type": "function"
 },
 "tests.test_kerns.TestProd.test_prod": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "K",
    "numpy.allclose",
    "numpy.random.randn",
    "tensorflow.float64",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tests.test_kerns.TestRQ": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_kerns.TestRQ.setUp": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "tensorflow.Graph"
   ]
  },
  "type": "function"
 },
 "tests.test_kerns.TestRQ.test_1d": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "tensorflow.placeholder",
    "tests.test_kerns.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_kerns.TestRbf": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_kerns.TestRbf.setUp": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "tensorflow.Graph"
   ]
  },
  "type": "function"
 },
 "tests.test_kerns.TestRbf.test_1d": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.random.RandomState",
    "referenceRbfKernel",
    "tensorflow.placeholder",
    "tests.test_kerns.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_kerns.TestSlice": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_kerns.TestSlice.kernels": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "kern",
    "kernname",
    "slice",
    "str",
    "tests.test_kerns.copy",
    "tests.test_kerns.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_kerns.TestSlice.test_asymm": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "k1",
    "k2",
    "k3",
    "numpy.allclose",
    "numpy.random.RandomState",
    "tensorflow.Graph"
   ]
  },
  "type": "function"
 },
 "tests.test_kerns.TestSlice.test_symm": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "k1",
    "k2",
    "k3",
    "numpy.allclose",
    "numpy.random.RandomState",
    "tensorflow.Graph"
   ]
  },
  "type": "function"
 },
 "tests.test_kerns.TestWhite": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_kerns.TestWhite.test": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "k",
    "k.K",
    "k.compile",
    "numpy.allclose",
    "numpy.random.RandomState",
    "tensorflow.float64",
    "tensorflow.placeholder",
    "tests.test_kerns.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_kerns.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "tests.test_kerns.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "tests.test_kerns.gpflow": {
  "data": {
   "shadows": "gpflow"
  },
  "type": "import"
 },
 "tests.test_kerns.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_kerns.session_tf": {
  "data": {
   "shadows": "gpflow.test_util.session_tf"
  },
  "type": "import"
 },
 "tests.test_kerns.test_slice_active_dim_regression": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "slice",
    "tests.test_kerns.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_kerns.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tests.test_kldiv": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tests.test_kldiv.Datum": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.eye",
    "numpy.random.RandomState",
    "tests.test_kldiv.make_K_batch_data",
    "tests.test_kldiv.make_sqrt_data",
    "tests.test_kldiv.squareT"
   ]
  },
  "type": "class"
 },
 "tests.test_kldiv.I": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "tensorflow.convert_to_tensor",
    "tests.test_kldiv.Datum",
    "tests.test_kldiv.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_kldiv.K": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "tensorflow.convert_to_tensor",
    "tests.test_kldiv.Datum",
    "tests.test_kldiv.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_kldiv.K_batch": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "tensorflow.convert_to_tensor",
    "tests.test_kldiv.Datum",
    "tests.test_kldiv.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_kldiv.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "tests.test_kldiv.gauss_kl": {
  "data": {
   "shadows": "gpflow.kullback_leiblers.gauss_kl"
  },
  "type": "import"
 },
 "tests.test_kldiv.gpflow": {
  "data": {
   "shadows": "gpflow"
  },
  "type": "import"
 },
 "tests.test_kldiv.make_K_batch_data": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.eye",
    "numpy.transpose",
    "range"
   ]
  },
  "type": "function"
 },
 "tests.test_kldiv.make_sqrt_data": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.tril",
    "range"
   ]
  },
  "type": "function"
 },
 "tests.test_kldiv.mu": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "tensorflow.convert_to_tensor",
    "tests.test_kldiv.Datum",
    "tests.test_kldiv.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_kldiv.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_kldiv.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_kldiv.session_tf": {
  "data": {
   "shadows": "gpflow.test_util.session_tf"
  },
  "type": "import"
 },
 "tests.test_kldiv.settings": {
  "data": {
   "shadows": "gpflow.settings"
  },
  "type": "import"
 },
 "tests.test_kldiv.sqrt": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "tensorflow.convert_to_tensor",
    "tests.test_kldiv.Datum",
    "tests.test_kldiv.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_kldiv.sqrt_diag": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "tensorflow.convert_to_tensor",
    "tests.test_kldiv.Datum",
    "tests.test_kldiv.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_kldiv.squareT": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "tests.test_kldiv.test_diags": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "gpflow.kullback_leiblers.gauss_kl",
    "numpy.testing.assert_allclose",
    "range",
    "tensorflow.diag",
    "tensorflow.stack",
    "tests.test_kldiv.Datum",
    "tests.test_kldiv.K",
    "tests.test_kldiv.mu",
    "tests.test_kldiv.pytest",
    "tests.test_kldiv.sqrt_diag"
   ]
  },
  "type": "function"
 },
 "tests.test_kldiv.test_oned": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "gpflow.kullback_leiblers.gauss_kl",
    "numpy.testing.assert_allclose",
    "tensorflow.reshape",
    "tests.test_kldiv.K_batch",
    "tests.test_kldiv.mu",
    "tests.test_kldiv.pytest",
    "tests.test_kldiv.sqrt",
    "tests.test_kldiv.tf_kl_1d"
   ]
  },
  "type": "function"
 },
 "tests.test_kldiv.test_sumkl_equals_batchkl": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "gpflow.kullback_leiblers.gauss_kl",
    "numpy.testing.assert_almost_equal",
    "range",
    "tensorflow.reduce_sum",
    "tests.test_kldiv.Datum",
    "tests.test_kldiv.K",
    "tests.test_kldiv.K_batch",
    "tests.test_kldiv.mu",
    "tests.test_kldiv.pytest",
    "tests.test_kldiv.sqrt",
    "tests.test_kldiv.sqrt_diag"
   ]
  },
  "type": "function"
 },
 "tests.test_kldiv.test_unknown_size_inputs": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "gpflow.kullback_leiblers.gauss_kl",
    "gpflow.settings.float_type",
    "gpflow.test_util.session_tf.run",
    "map",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "tensorflow.constant",
    "tensorflow.placeholder",
    "tests.test_kldiv.mu",
    "tests.test_kldiv.sqrt"
   ]
  },
  "type": "function"
 },
 "tests.test_kldiv.test_whitened": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "gpflow.kullback_leiblers.gauss_kl",
    "numpy.testing.assert_allclose",
    "range",
    "tensorflow.diag",
    "tensorflow.stack",
    "tests.test_kldiv.Datum",
    "tests.test_kldiv.I",
    "tests.test_kldiv.mu",
    "tests.test_kldiv.pytest",
    "tests.test_kldiv.sqrt_diag"
   ]
  },
  "type": "function"
 },
 "tests.test_kldiv.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tests.test_kldiv.tf_kl_1d": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "tensorflow.log",
    "tensorflow.ones_like",
    "tensorflow.reduce_sum",
    "tensorflow.square"
   ]
  },
  "type": "function"
 },
 "tests.test_likelihoods": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tests.test_likelihoods.GPflowTestCase": {
  "data": {
   "shadows": "gpflow.test_util.GPflowTestCase"
  },
  "type": "import"
 },
 "tests.test_likelihoods.LikelihoodSetup": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tests.test_likelihoods.LikelihoodSetup.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "tests.test_likelihoods.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_likelihoods.TestMonteCarlo": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_likelihoods.TestMonteCarlo.setUp": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "gpflow.settings.float_type",
    "numpy.random.RandomState",
    "tensorflow.Graph"
   ]
  },
  "type": "function"
 },
 "tests.test_likelihoods.TestMonteCarlo.test_pred_density": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "tensorflow.set_random_seed",
    "tests.test_likelihoods.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_likelihoods.TestMonteCarlo.test_pred_mean_and_var": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "tensorflow.set_random_seed",
    "tests.test_likelihoods.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_likelihoods.TestMonteCarlo.test_var_exp": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "tensorflow.set_random_seed",
    "tests.test_likelihoods.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_likelihoods.TestMulticlassIndexFix": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_likelihoods.TestMulticlassIndexFix.testA": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "gpflow.settings.float_type",
    "tensorflow.gradients",
    "tensorflow.int32",
    "tensorflow.placeholder",
    "tensorflow.reduce_sum",
    "tests.test_likelihoods.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_likelihoods.TestPredictConditional": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_likelihoods.TestPredictConditional.prepare": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "gpflow.settings.float_type",
    "numpy.random.RandomState",
    "tensorflow.placeholder",
    "tests.test_likelihoods.getLikelihoodSetups"
   ]
  },
  "type": "function"
 },
 "tests.test_likelihoods.TestPredictConditional.setUp": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "tensorflow.Graph"
   ]
  },
  "type": "function"
 },
 "tests.test_likelihoods.TestPredictConditional.test_mean": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "tests.test_likelihoods.TestPredictConditional.test_var_exp": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "tests.test_likelihoods.TestPredictConditional.test_variance": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "tests.test_likelihoods.TestQuadrature": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_likelihoods.TestQuadrature.setUp": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "gpflow.settings.float_type",
    "numpy.random.RandomState",
    "tensorflow.Graph",
    "tests.test_likelihoods.getLikelihoodSetups"
   ]
  },
  "type": "function"
 },
 "tests.test_likelihoods.TestQuadrature.test_pred_density": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "tests.test_likelihoods.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_likelihoods.TestQuadrature.test_pred_mean_and_var": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "tests.test_likelihoods.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_likelihoods.TestQuadrature.test_var_exp": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "tests.test_likelihoods.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_likelihoods.TestRobustMaxMulticlass": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_likelihoods.TestRobustMaxMulticlass.setUp": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "tensorflow.Graph"
   ]
  },
  "type": "function"
 },
 "tests.test_likelihoods.TestRobustMaxMulticlass.testEpsK1Changes": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "tests.test_likelihoods.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_likelihoods.TestRobustMaxMulticlass.testPredictDensity": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "MockRobustMax",
    "gpflow.settings.float_type",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "tensorflow.placeholder",
    "tests.test_likelihoods.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_likelihoods.TestRobustMaxMulticlass.testPredictDensity.MockRobustMax": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "tests.test_likelihoods.gpflow"
   ]
  },
  "type": "class"
 },
 "tests.test_likelihoods.TestRobustMaxMulticlass.testPredictDensity.MockRobustMax.prob_is_largest": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "gpflow.settings.float_type",
    "tensorflow.ones"
   ]
  },
  "type": "function"
 },
 "tests.test_likelihoods.TestRobustMaxMulticlass.testSymmetric": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "gpflow.settings.float_type",
    "numpy.allclose",
    "numpy.log",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "tensorflow.placeholder",
    "tests.test_likelihoods.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_likelihoods.TestSoftMax": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_likelihoods.TestSoftMax.prepare": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "gpflow.settings.int_type",
    "make_tensor",
    "numpy.array",
    "numpy.ones",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "tests.test_likelihoods.TestSoftMax.prepare.make_tensor": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "gpflow.settings.float_type",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tests.test_likelihoods.TestSoftMax.setUp": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "tensorflow.Graph"
   ]
  },
  "type": "function"
 },
 "tests.test_likelihoods.TestSoftMax.test_bernoulli_equivalence": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "tensorflow.exp",
    "tensorflow.shape",
    "tensorflow.stack",
    "tensorflow.zeros",
    "tests.test_likelihoods.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_likelihoods.TestSoftMax.test_bernoulli_equivalence.logistic_link": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "tensorflow.exp"
   ]
  },
  "type": "function"
 },
 "tests.test_likelihoods.TestSoftMax.test_y_shape_assert": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "tensorflow.errors.InvalidArgumentError",
    "tests.test_likelihoods.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_likelihoods.TestSwitchedLikelihood": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_likelihoods.TestSwitchedLikelihood.setUp": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "list",
    "numpy.concatenate",
    "numpy.exp",
    "numpy.hstack",
    "numpy.ones",
    "numpy.random.RandomState",
    "range",
    "tensorflow.Graph",
    "tests.test_likelihoods.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_likelihoods.TestSwitchedLikelihood.test_logp": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.testing.assert_allclose",
    "zip"
   ]
  },
  "type": "function"
 },
 "tests.test_likelihoods.TestSwitchedLikelihood.test_predict_density": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.testing.assert_allclose",
    "zip"
   ]
  },
  "type": "function"
 },
 "tests.test_likelihoods.TestSwitchedLikelihood.test_variational_expectations": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.testing.assert_allclose",
    "zip"
   ]
  },
  "type": "function"
 },
 "tests.test_likelihoods.TestSwitchedLikelihoodRegression": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_likelihoods.TestSwitchedLikelihoodRegression.setUp": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "numpy.hstack",
    "numpy.random.RandomState",
    "numpy.random.randint",
    "numpy.random.randn",
    "tensorflow.Graph",
    "tests.test_likelihoods.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_likelihoods.TestSwitchedLikelihoodRegression.test_bad_num_latent": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "tensorflow.errors.InvalidArgumentError",
    "tests.test_likelihoods.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_likelihoods.TestSwitchedLikelihoodRegression.test_correct_num_latent": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "tests.test_likelihoods.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_likelihoods.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "tests.test_likelihoods.getLikelihoodSetups": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "gpflow.settings.float_type",
    "likelihoodClass",
    "numpy.argmax",
    "numpy.array",
    "numpy.random.RandomState",
    "tensorflow.square",
    "tests.test_likelihoods.LikelihoodSetup",
    "tests.test_likelihoods.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_likelihoods.getLikelihoodSetups.sigmoid": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "tensorflow.exp"
   ]
  },
  "type": "function"
 },
 "tests.test_likelihoods.gpflow": {
  "data": {
   "shadows": "gpflow"
  },
  "type": "import"
 },
 "tests.test_likelihoods.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_likelihoods.settings": {
  "data": {
   "shadows": "gpflow.settings"
  },
  "type": "import"
 },
 "tests.test_likelihoods.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tests.test_logdensities": {
  "data": {
   "symbols_in_volume": [
    "numpy.random.RandomState"
   ]
  },
  "type": "module"
 },
 "tests.test_logdensities.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "tests.test_logdensities.gpflow": {
  "data": {
   "shadows": "gpflow"
  },
  "type": "import"
 },
 "tests.test_logdensities.logdensities": {
  "data": {
   "shadows": "gpflow.logdensities"
  },
  "type": "import"
 },
 "tests.test_logdensities.mvn": {
  "data": {
   "shadows": "scipy.stats.multivariate_normal"
  },
  "type": "import"
 },
 "tests.test_logdensities.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_logdensities.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_logdensities.randn": {
  "data": {
   "shadows": "numpy.random.randn"
  },
  "type": "import"
 },
 "tests.test_logdensities.rng": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "tests.test_logdensities.session_tf": {
  "data": {
   "shadows": "gpflow.test_util.session_tf"
  },
  "type": "import"
 },
 "tests.test_logdensities.settings": {
  "data": {
   "shadows": "gpflow.settings"
  },
  "type": "import"
 },
 "tests.test_logdensities.test_multivariate_normal": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "Exception",
    "gpflow.logdensities.multivariate_normal",
    "gpflow.settings.float_type",
    "gpflow.test_util.session_tf.run",
    "len",
    "numpy.dot",
    "numpy.eye",
    "numpy.linalg.cholesky",
    "numpy.random.randn",
    "numpy.testing.assert_allclose",
    "range",
    "scipy.stats.multivariate_normal.logpdf",
    "tensorflow.convert_to_tensor",
    "tensorflow.placeholder",
    "tests.test_logdensities.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_logdensities.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tests.test_mean_functions": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tests.test_mean_functions.GPflowTestCase": {
  "data": {
   "shadows": "gpflow.test_util.GPflowTestCase"
  },
  "type": "import"
 },
 "tests.test_mean_functions.TestBug277Regression": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_mean_functions.TestBug277Regression.test": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "tests.test_mean_functions.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_mean_functions.TestMeanFuncs": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_mean_functions.TestMeanFuncs.composition_mfs": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "tests.test_mean_functions.TestMeanFuncs.composition_mfs_add": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "tests.test_mean_functions.itertools"
   ]
  },
  "type": "function"
 },
 "tests.test_mean_functions.TestMeanFuncs.composition_mfs_mult": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "tests.test_mean_functions.itertools"
   ]
  },
  "type": "function"
 },
 "tests.test_mean_functions.TestMeanFuncs.mfs1": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "gpflow.settings.float_type",
    "numpy.random.RandomState",
    "tests.test_mean_functions.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_mean_functions.TestMeanFuncs.mfs2": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "gpflow.settings.float_type",
    "numpy.random.RandomState",
    "tests.test_mean_functions.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_mean_functions.TestMeanFuncs.test_add_output_shape": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "comp_mf",
    "gpflow.settings.float_type",
    "numpy.random.randn",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tests.test_mean_functions.TestMeanFuncs.test_basic_output_shape": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "gpflow.settings.float_type",
    "mf",
    "numpy.random.randn",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tests.test_mean_functions.TestMeanFuncs.test_combination_types": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "all",
    "isinstance",
    "mf",
    "tests.test_mean_functions.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_mean_functions.TestMeanFuncs.test_composition_output_shape": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "comp_mf",
    "comp_mf.compile",
    "gpflow.settings.float_type",
    "numpy.random.randn",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tests.test_mean_functions.TestMeanFuncs.test_mult_output_shape": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "comp_mf",
    "comp_mf.compile",
    "gpflow.settings.float_type",
    "numpy.random.randn",
    "tensorflow.placeholder"
   ]
  },
  "type": "function"
 },
 "tests.test_mean_functions.TestModelCompositionOperations": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "gpflow.settings.float_type",
    "gpflow.test_util.GPflowTestCase",
    "numpy.random.RandomState"
   ]
  },
  "type": "class"
 },
 "tests.test_mean_functions.TestModelCompositionOperations.a_b_plus_c": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "tests.test_mean_functions.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_mean_functions.TestModelCompositionOperations.a_minus_a": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "tests.test_mean_functions.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_mean_functions.TestModelCompositionOperations.ab_plus_ac": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "tests.test_mean_functions.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_mean_functions.TestModelCompositionOperations.comp_minus_constituent1": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "tests.test_mean_functions.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_mean_functions.TestModelCompositionOperations.comp_minus_constituent2": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "tests.test_mean_functions.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_mean_functions.TestModelCompositionOperations.initials": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "gpflow.settings.float_type",
    "tests.test_mean_functions.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_mean_functions.TestModelCompositionOperations.setUp": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "gpflow.settings.float_type",
    "tensorflow.Graph",
    "tests.test_mean_functions.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_mean_functions.TestModelCompositionOperations.test_inverse_operations": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.isclose",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "tests.test_mean_functions.TestModelCompositionOperations.test_precedence": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "tests.test_mean_functions.TestModelsWithMeanFuncs": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_mean_functions.TestModelsWithMeanFuncs.setUp": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "gpflow.settings.float_type",
    "k",
    "lik",
    "mf",
    "numpy.ones",
    "numpy.random.RandomState",
    "tests.test_mean_functions.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_mean_functions.TestModelsWithMeanFuncs.test_basic_mean_function": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "numpy.all",
    "zip"
   ]
  },
  "type": "function"
 },
 "tests.test_mean_functions.TestSwitchedMeanFunction": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_mean_functions.TestSwitchedMeanFunction.test": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.hstack",
    "numpy.int",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "switched_mean",
    "tests.test_mean_functions.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_mean_functions.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "tests.test_mean_functions.gpflow": {
  "data": {
   "shadows": "gpflow"
  },
  "type": "import"
 },
 "tests.test_mean_functions.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "tests.test_mean_functions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_mean_functions.settings": {
  "data": {
   "shadows": "gpflow.settings"
  },
  "type": "import"
 },
 "tests.test_mean_functions.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tests.test_method_equivalence": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tests.test_method_equivalence.GPflowTestCase": {
  "data": {
   "shadows": "gpflow.test_util.GPflowTestCase"
  },
  "type": "import"
 },
 "tests.test_method_equivalence.TestEquivalence": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_method_equivalence.TestEquivalence.prepare": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.random.RandomState",
    "numpy.sin",
    "numpy.tile",
    "tests.test_method_equivalence.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_method_equivalence.TestEquivalence.test_all": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "enumerate",
    "hasattr",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "tensorflow.negative",
    "tests.test_method_equivalence.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_method_equivalence.TestUpperBound": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_method_equivalence.TestUpperBound.setUp": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "numpy.pi",
    "numpy.random.rand",
    "numpy.random.randn",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "tests.test_method_equivalence.TestUpperBound.test_few_inducing_points": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "tests.test_method_equivalence.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_method_equivalence.VGPTest": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_method_equivalence.VGPTest.test_vgp_vs_opper_archambeau": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.diag",
    "numpy.einsum",
    "numpy.eye",
    "numpy.linalg.cholesky",
    "numpy.linalg.inv",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.testing.assert_allclose",
    "tests.test_method_equivalence.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_method_equivalence.VGPTest.test_vgp_vs_svgp": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.testing.assert_allclose",
    "tests.test_method_equivalence.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_method_equivalence.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "tests.test_method_equivalence.gpflow": {
  "data": {
   "shadows": "gpflow"
  },
  "type": "import"
 },
 "tests.test_method_equivalence.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_method_equivalence.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tests.test_methods": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tests.test_methods.GPflowTestCase": {
  "data": {
   "shadows": "gpflow.test_util.GPflowTestCase"
  },
  "type": "import"
 },
 "tests.test_methods.TestMethods": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_methods.TestMethods.prepare": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "M",
    "numpy.random.RandomState",
    "tests.test_methods.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_methods.TestMethods.test_all": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "tests.test_methods.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_methods.TestMethods.test_predict_density": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "tests.test_methods.TestMethods.test_predict_f": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "numpy.full_like",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_array_less"
   ]
  },
  "type": "function"
 },
 "tests.test_methods.TestMethods.test_predict_y": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "numpy.full_like",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_array_less"
   ]
  },
  "type": "function"
 },
 "tests.test_methods.TestSVGP": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_methods.TestSVGP.setUp": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "tests.test_methods.TestSVGP.test_notwhite": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.diag",
    "numpy.testing.assert_allclose",
    "tests.test_methods.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_methods.TestSVGP.test_q_sqrt_fixing": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "tests.test_methods.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_methods.TestSVGP.test_white": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.diag",
    "numpy.testing.assert_allclose",
    "tests.test_methods.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_methods.TestSparseMCMC": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_methods.TestSparseMCMC.test_likelihoods_and_gradients": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "lik",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "tests.test_methods.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_methods.TestStochasticGradients": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_methods.TestStochasticGradients.check_models_close": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "list",
    "numpy.allclose",
    "set"
   ]
  },
  "type": "function"
 },
 "tests.test_methods.TestStochasticGradients.compare_models": {
  "data": {
   "lineno": 217
  },
  "type": "function"
 },
 "tests.test_methods.TestStochasticGradients.get_indexed_data": {
  "data": {
   "lineno": 183
  },
  "type": "function"
 },
 "tests.test_methods.TestStochasticGradients.get_indexed_model": {
  "data": {
   "lineno": 200
  },
  "type": "function"
 },
 "tests.test_methods.TestStochasticGradients.get_model": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "tests.test_methods.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_methods.TestStochasticGradients.get_opt": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "tests.test_methods.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_methods.TestStochasticGradients.setUp": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.atleast_2d",
    "tensorflow.set_random_seed"
   ]
  },
  "type": "function"
 },
 "tests.test_methods.TestStochasticGradients.testOne": {
  "data": {
   "lineno": 236
  },
  "type": "function"
 },
 "tests.test_methods.TestStochasticGradients.testThree": {
  "data": {
   "lineno": 250
  },
  "type": "function"
 },
 "tests.test_methods.TestStochasticGradients.testTwo": {
  "data": {
   "lineno": 243
  },
  "type": "function"
 },
 "tests.test_methods.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "tests.test_methods.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "tests.test_methods.assert_array_less": {
  "data": {
   "shadows": "numpy.testing.assert_array_less"
  },
  "type": "import"
 },
 "tests.test_methods.gpflow": {
  "data": {
   "shadows": "gpflow"
  },
  "type": "import"
 },
 "tests.test_methods.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_methods.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tests.test_misc": {
  "data": {},
  "type": "module"
 },
 "tests.test_misc.GPflowTestCase": {
  "data": {
   "shadows": "gpflow.test_util.GPflowTestCase"
  },
  "type": "import"
 },
 "tests.test_misc.TestPublicMethods": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_misc.TestPublicMethods.run_case": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "equal",
    "fn",
    "not_equal",
    "staticmethod",
    "tensorflow.Graph",
    "tensorflow.get_default_session"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.TestPublicMethods.test_remove_trainable": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.Graph",
    "tensorflow.get_variable",
    "tests.test_misc.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.TestPublicMethods.test_tensor_by_name": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "equal",
    "fn",
    "not_equal",
    "tensorflow.Graph",
    "tensorflow.get_default_session",
    "tensorflow.get_variable",
    "tests.test_misc.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.TestPublicMethods.test_tensor_by_name.equal": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "tests.test_misc.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.TestPublicMethods.test_tensor_by_name.not_equal": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "tests.test_misc.TestPublicMethods.test_valid_param": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "tensorflow.get_variable",
    "tests.test_misc.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.TestPublicMethods.test_variable_by_name": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "equal",
    "fn",
    "not_equal",
    "tensorflow.Graph",
    "tensorflow.get_default_session",
    "tensorflow.get_variable",
    "tests.test_misc.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.TestPublicMethods.test_variable_by_name.equal": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "tests.test_misc.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.TestPublicMethods.test_variable_by_name.not_equal": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "tests.test_misc.gpflow": {
  "data": {
   "shadows": "gpflow"
  },
  "type": "import"
 },
 "tests.test_misc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_misc.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tests.test_model": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tests.test_model.Empty": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "tests.test_model.gpflow"
   ]
  },
  "type": "class"
 },
 "tests.test_model.Empty.__init__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "tests.test_model.Empty._build_likelihood": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "tensorflow.convert_to_tensor",
    "tests.test_model.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_model.EmptyTest": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_model.EmptyTest.test_compile_model_without_parameters": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "tests.test_model.Empty"
   ]
  },
  "type": "function"
 },
 "tests.test_model.EmptyTest.test_objective_tensor": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "tests.test_model.Empty",
    "tests.test_model.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_model.EmptyTest.test_parameters_list_empty": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "list",
    "tests.test_model.Empty"
   ]
  },
  "type": "function"
 },
 "tests.test_model.EvalDataSVGP": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "tests.test_model.gpflow"
   ]
  },
  "type": "class"
 },
 "tests.test_model.EvalDataSVGP.XY": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "tests.test_model.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_model.GPflowTestCase": {
  "data": {
   "shadows": "gpflow.test_util.GPflowTestCase"
  },
  "type": "import"
 },
 "tests.test_model.KeyboardRaiser": {
  "data": {
   "lineno": 124
  },
  "type": "class"
 },
 "tests.test_model.KeyboardRaiser.__call__": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "KeyboardInterrupt"
   ]
  },
  "type": "function"
 },
 "tests.test_model.KeyboardRaiser.__init__": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "tests.test_model.Quadratic": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "tests.test_model.gpflow"
   ]
  },
  "type": "class"
 },
 "tests.test_model.Quadratic.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "tests.test_model.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_model.Quadratic._build_likelihood": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "tensorflow.negative",
    "tensorflow.reduce_sum",
    "tensorflow.square",
    "tests.test_model.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_model.ReplaceParameterTest": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_model.ReplaceParameterTest.Origin": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "tests.test_model.gpflow"
   ]
  },
  "type": "class"
 },
 "tests.test_model.ReplaceParameterTest.Origin.__init__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "super",
    "tests.test_model.ReplaceParameterTest",
    "tests.test_model.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_model.ReplaceParameterTest.Origin._build_likelihood": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "tensorflow.square",
    "tests.test_model.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_model.ReplaceParameterTest.test_replace_parameter": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "OriginAllDataholders",
    "OriginSuccess",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "tests.test_model.ReplaceParameterTest.test_replace_parameter.OriginAllDataholders": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "tests.test_model.ReplaceParameterTest"
   ]
  },
  "type": "class"
 },
 "tests.test_model.ReplaceParameterTest.test_replace_parameter.OriginAllDataholders.__init__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "numpy.array",
    "super",
    "tests.test_model.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_model.ReplaceParameterTest.test_replace_parameter.OriginSuccess": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "tests.test_model.ReplaceParameterTest"
   ]
  },
  "type": "class"
 },
 "tests.test_model.ReplaceParameterTest.test_replace_parameter.OriginSuccess.__init__": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "numpy.array",
    "super",
    "tests.test_model.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_model.TestLikelihoodAutoflow": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_model.TestLikelihoodAutoflow.test_lik_and_prior": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "tensorflow.Graph",
    "tests.test_model.gpflow",
    "tests.test_model.setup_sgpr"
   ]
  },
  "type": "function"
 },
 "tests.test_model.TestMinibatchSVGP": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_model.TestMinibatchSVGP.test_minibatch_sync": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.random.randn",
    "range",
    "tests.test_model.EvalDataSVGP",
    "tests.test_model.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_model.TestName": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_model.TestName.test_name": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "tests.test_model.Empty"
   ]
  },
  "type": "function"
 },
 "tests.test_model.TestOptimize": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_model.TestOptimize.test_adam": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "tests.test_model.Quadratic",
    "tests.test_model.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_model.TestOptimize.test_lbfgsb": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "tests.test_model.Quadratic",
    "tests.test_model.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_model.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "tests.test_model.gpflow": {
  "data": {
   "shadows": "gpflow"
  },
  "type": "import"
 },
 "tests.test_model.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_model.setup_sgpr": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "numpy.random.randn",
    "tests.test_model.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_model.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tests.test_multioutput": {
  "data": {
   "symbols_in_volume": [
    "numpy.random.seed",
    "tests.test_multioutput.gpflow"
   ]
  },
  "type": "module"
 },
 "tests.test_multioutput.Data": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.cos",
    "numpy.hstack",
    "numpy.linspace",
    "numpy.matmul",
    "numpy.random.rand",
    "numpy.random.randn",
    "numpy.sin"
   ]
  },
  "type": "class"
 },
 "tests.test_multioutput.DataMixedKernel": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.hstack",
    "numpy.matmul",
    "numpy.ones",
    "numpy.random.randn",
    "numpy.sin",
    "tests.test_multioutput.Data",
    "tests.test_multioutput.create_q_sqrt"
   ]
  },
  "type": "class"
 },
 "tests.test_multioutput.DataMixedKernelWithEye": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.eye",
    "numpy.hstack",
    "numpy.matmul",
    "numpy.ones",
    "numpy.random.randn",
    "numpy.sin",
    "tests.test_multioutput.Data",
    "tests.test_multioutput.create_q_sqrt",
    "tests.test_multioutput.expand_cov"
   ]
  },
  "type": "class"
 },
 "tests.test_multioutput.Gaussian": {
  "data": {
   "shadows": "gpflow.likelihoods.Gaussian"
  },
  "type": "import"
 },
 "tests.test_multioutput.InducingPoints": {
  "data": {
   "shadows": "gpflow.features.InducingPoints"
  },
  "type": "import"
 },
 "tests.test_multioutput.RBF": {
  "data": {
   "shadows": "gpflow.kernels.RBF"
  },
  "type": "import"
 },
 "tests.test_multioutput.SVGP": {
  "data": {
   "shadows": "gpflow.models.SVGP"
  },
  "type": "import"
 },
 "tests.test_multioutput.ScipyOptimizer": {
  "data": {
   "shadows": "gpflow.training.ScipyOptimizer"
  },
  "type": "import"
 },
 "tests.test_multioutput._create_feed_dict": {
  "data": {
   "lineno": 212
  },
  "type": "function"
 },
 "tests.test_multioutput._create_placeholder_dict": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "tensorflow.placeholder",
    "tests.test_multioutput.float_type"
   ]
  },
  "type": "function"
 },
 "tests.test_multioutput._sample_mvn": {
  "data": {
   "shadows": "gpflow.conditionals._sample_mvn"
  },
  "type": "import"
 },
 "tests.test_multioutput.assert_all_array_elements_almost_equal": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "len",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "tests.test_multioutput.check_equality_predictions": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "numpy.diagonal",
    "numpy.testing.assert_almost_equal",
    "numpy.transpose",
    "tests.test_multioutput.assert_all_array_elements_almost_equal",
    "tests.test_multioutput.predict_all"
   ]
  },
  "type": "function"
 },
 "tests.test_multioutput.create_q_sqrt": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.randn",
    "numpy.tril",
    "range"
   ]
  },
  "type": "function"
 },
 "tests.test_multioutput.expand_cov": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "numpy.linalg.cholesky",
    "numpy.matmul",
    "tests.test_multioutput.scipy"
   ]
  },
  "type": "function"
 },
 "tests.test_multioutput.float_type": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "tests.test_multioutput.gpflow": {
  "data": {
   "shadows": "gpflow"
  },
  "type": "import"
 },
 "tests.test_multioutput.mf": {
  "data": {
   "shadows": "gpflow.multioutput.features"
  },
  "type": "import"
 },
 "tests.test_multioutput.mk": {
  "data": {
   "shadows": "gpflow.multioutput.kernels"
  },
  "type": "import"
 },
 "tests.test_multioutput.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_multioutput.predict": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "tests.test_multioutput.predict_all": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "tests.test_multioutput.predict"
   ]
  },
  "type": "function"
 },
 "tests.test_multioutput.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_multioutput.sample_conditional": {
  "data": {
   "shadows": "gpflow.conditionals.sample_conditional"
  },
  "type": "import"
 },
 "tests.test_multioutput.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "tests.test_multioutput.session_tf": {
  "data": {
   "shadows": "gpflow.test_util.session_tf"
  },
  "type": "import"
 },
 "tests.test_multioutput.test_MixedKernelSeparateMof": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "gpflow.features.InducingPoints",
    "gpflow.kernels.RBF",
    "gpflow.likelihoods.Gaussian",
    "gpflow.models.SVGP",
    "gpflow.multioutput.features.MixedKernelSeparateMof",
    "gpflow.multioutput.features.SeparateIndependentMof",
    "gpflow.multioutput.kernels.SeparateMixedMok",
    "gpflow.test_util.session_tf",
    "range",
    "tests.test_multioutput.DataMixedKernel",
    "tests.test_multioutput.check_equality_predictions"
   ]
  },
  "type": "function"
 },
 "tests.test_multioutput.test_MixedMok_Kgg": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "gpflow.kernels.RBF",
    "gpflow.multioutput.kernels.SeparateMixedMok",
    "numpy.einsum",
    "numpy.testing.assert_array_almost_equal",
    "range",
    "tests.test_multioutput.Data",
    "tests.test_multioutput.DataMixedKernel"
   ]
  },
  "type": "function"
 },
 "tests.test_multioutput.test_compare_mixed_kernel": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "gpflow.features.InducingPoints",
    "gpflow.kernels.RBF",
    "gpflow.likelihoods.Gaussian",
    "gpflow.models.SVGP",
    "gpflow.multioutput.features.MixedKernelSharedMof",
    "gpflow.multioutput.features.SharedIndependentMof",
    "gpflow.multioutput.kernels.SeparateMixedMok",
    "gpflow.test_util.session_tf",
    "range",
    "tests.test_multioutput.DataMixedKernel",
    "tests.test_multioutput.check_equality_predictions"
   ]
  },
  "type": "function"
 },
 "tests.test_multioutput.test_mixed_mok_with_Id_vs_independent_mok": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "gpflow.features.InducingPoints",
    "gpflow.kernels.RBF",
    "gpflow.likelihoods.Gaussian",
    "gpflow.models.SVGP",
    "gpflow.multioutput.kernels.SeparateMixedMok",
    "gpflow.multioutput.kernels.SharedIndependentMok",
    "gpflow.test_util.session_tf",
    "range",
    "tests.test_multioutput.DataMixedKernelWithEye",
    "tests.test_multioutput.check_equality_predictions",
    "tests.test_multioutput.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_multioutput.test_multioutput_with_diag_q_sqrt": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "gpflow.features.InducingPoints",
    "gpflow.kernels.RBF",
    "gpflow.likelihoods.Gaussian",
    "gpflow.models.SVGP",
    "gpflow.multioutput.features.SharedIndependentMof",
    "gpflow.multioutput.kernels.SeparateMixedMok",
    "gpflow.test_util.session_tf",
    "numpy.eye",
    "numpy.ones",
    "numpy.repeat",
    "range",
    "tests.test_multioutput.DataMixedKernel",
    "tests.test_multioutput.check_equality_predictions"
   ]
  },
  "type": "function"
 },
 "tests.test_multioutput.test_sample_conditional": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "gpflow.conditionals.sample_conditional",
    "gpflow.features.InducingPoints",
    "gpflow.kernels.RBF",
    "gpflow.test_util.session_tf.run",
    "int",
    "numpy.array",
    "numpy.cov",
    "numpy.mean",
    "numpy.ones",
    "numpy.random.randn",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal",
    "numpy.tril",
    "range",
    "tests.test_multioutput.Data",
    "tests.test_multioutput._create_feed_dict",
    "tests.test_multioutput._create_placeholder_dict",
    "tests.test_multioutput.float_type",
    "tests.test_multioutput.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_multioutput.test_sample_conditional_mixedkernel": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "gpflow.conditionals.sample_conditional",
    "gpflow.features.InducingPoints",
    "gpflow.kernels.RBF",
    "gpflow.multioutput.features.MixedKernelSharedMof",
    "gpflow.multioutput.features.SharedIndependentMof",
    "gpflow.multioutput.kernels.SeparateIndependentMok",
    "gpflow.multioutput.kernels.SeparateMixedMok",
    "gpflow.test_util.session_tf.run",
    "int",
    "numpy.array",
    "numpy.cov",
    "numpy.matmul",
    "numpy.mean",
    "numpy.ones",
    "numpy.random.randn",
    "numpy.testing.assert_array_almost_equal",
    "numpy.tril",
    "range",
    "tests.test_multioutput.Data",
    "tests.test_multioutput._create_feed_dict",
    "tests.test_multioutput._create_placeholder_dict",
    "tests.test_multioutput.float_type"
   ]
  },
  "type": "function"
 },
 "tests.test_multioutput.test_sample_mvn": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "gpflow.conditionals._sample_mvn",
    "gpflow.test_util.session_tf.run",
    "numpy.cov",
    "numpy.mean",
    "numpy.testing.assert_array_almost_equal",
    "tensorflow.eye",
    "tensorflow.ones",
    "tests.test_multioutput.float_type",
    "tests.test_multioutput.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_multioutput.test_separate_independent_mof": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "gpflow.features.InducingPoints",
    "gpflow.kernels.RBF",
    "gpflow.likelihoods.Gaussian",
    "gpflow.models.SVGP",
    "gpflow.multioutput.features.SeparateIndependentMof",
    "gpflow.multioutput.kernels.SeparateIndependentMok",
    "gpflow.multioutput.kernels.SharedIndependentMok",
    "gpflow.test_util.session_tf",
    "numpy.array",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.tril",
    "range",
    "tests.test_multioutput.Data",
    "tests.test_multioutput.check_equality_predictions",
    "tests.test_multioutput.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_multioutput.test_separate_independent_mok": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "gpflow.features.InducingPoints",
    "gpflow.kernels.RBF",
    "gpflow.likelihoods.Gaussian",
    "gpflow.models.SVGP",
    "gpflow.multioutput.features.SharedIndependentMof",
    "gpflow.multioutput.kernels.SeparateIndependentMok",
    "gpflow.test_util.session_tf",
    "numpy.array",
    "numpy.random.randn",
    "numpy.tril",
    "range",
    "tests.test_multioutput.Data",
    "tests.test_multioutput.check_equality_predictions",
    "tests.test_multioutput.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_multioutput.test_shared_independent_mok": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "gpflow.features.InducingPoints",
    "gpflow.kernels.RBF",
    "gpflow.likelihoods.Gaussian",
    "gpflow.models.SVGP",
    "gpflow.multioutput.features.SharedIndependentMof",
    "gpflow.multioutput.kernels.SharedIndependentMok",
    "gpflow.test_util.session_tf",
    "numpy.array",
    "numpy.random.randn",
    "numpy.reshape",
    "numpy.tril",
    "range",
    "tests.test_multioutput.Data",
    "tests.test_multioutput.check_equality_predictions",
    "tests.test_multioutput.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_multioutput.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tests.test_multioutput_features": {
  "data": {
   "symbols_in_volume": [
    "numpy.random.seed",
    "tests.test_multioutput_features.gpflow"
   ]
  },
  "type": "module"
 },
 "tests.test_multioutput_features.Datum": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "numpy.random.randn"
   ]
  },
  "type": "class"
 },
 "tests.test_multioutput_features.Gaussian": {
  "data": {
   "shadows": "gpflow.likelihoods.Gaussian"
  },
  "type": "import"
 },
 "tests.test_multioutput_features.InducingPoints": {
  "data": {
   "shadows": "gpflow.features.InducingPoints"
  },
  "type": "import"
 },
 "tests.test_multioutput_features.Mofs": {
  "data": {
   "lineno": 46
  },
  "type": "class"
 },
 "tests.test_multioutput_features.Mofs.features": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "tests.test_multioutput_features.Mofs.mixed_shared": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "gpflow.multioutput.features.MixedKernelSharedMof",
    "tests.test_multioutput_features.make_ip"
   ]
  },
  "type": "function"
 },
 "tests.test_multioutput_features.Mofs.separate_independent": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "gpflow.multioutput.features.SeparateIndependentMof",
    "tests.test_multioutput_features.Datum",
    "tests.test_multioutput_features.make_ips"
   ]
  },
  "type": "function"
 },
 "tests.test_multioutput_features.Mofs.shared_independent": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "gpflow.multioutput.features.SharedIndependentMof",
    "tests.test_multioutput_features.make_ip"
   ]
  },
  "type": "function"
 },
 "tests.test_multioutput_features.Moks": {
  "data": {
   "lineno": 60
  },
  "type": "class"
 },
 "tests.test_multioutput_features.Moks.kernels": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "tests.test_multioutput_features.Moks.separate_independent": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "gpflow.multioutput.kernels.SeparateIndependentMok",
    "tests.test_multioutput_features.Datum",
    "tests.test_multioutput_features.make_kernels"
   ]
  },
  "type": "function"
 },
 "tests.test_multioutput_features.Moks.separate_mixed": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "gpflow.multioutput.kernels.SeparateMixedMok",
    "tests.test_multioutput_features.Datum",
    "tests.test_multioutput_features.make_kernels"
   ]
  },
  "type": "function"
 },
 "tests.test_multioutput_features.Moks.shared_independent": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "gpflow.multioutput.kernels.SharedIndependentMok",
    "tests.test_multioutput_features.Datum",
    "tests.test_multioutput_features.make_kernel"
   ]
  },
  "type": "function"
 },
 "tests.test_multioutput_features.RBF": {
  "data": {
   "shadows": "gpflow.kernels.RBF"
  },
  "type": "import"
 },
 "tests.test_multioutput_features.SVGP": {
  "data": {
   "shadows": "gpflow.models.SVGP"
  },
  "type": "import"
 },
 "tests.test_multioutput_features.float_type": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "tests.test_multioutput_features.gpflow": {
  "data": {
   "shadows": "gpflow"
  },
  "type": "import"
 },
 "tests.test_multioutput_features.make_ip": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.random.permutation",
    "tests.test_multioutput_features.Datum",
    "tests.test_multioutput_features.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_multioutput_features.make_ips": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "range",
    "tests.test_multioutput_features.make_ip"
   ]
  },
  "type": "function"
 },
 "tests.test_multioutput_features.make_kernel": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "tests.test_multioutput_features.Datum",
    "tests.test_multioutput_features.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_multioutput_features.make_kernels": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "range",
    "tests.test_multioutput_features.make_kernel"
   ]
  },
  "type": "function"
 },
 "tests.test_multioutput_features.mf": {
  "data": {
   "shadows": "gpflow.multioutput.features"
  },
  "type": "import"
 },
 "tests.test_multioutput_features.mk": {
  "data": {
   "shadows": "gpflow.multioutput.kernels"
  },
  "type": "import"
 },
 "tests.test_multioutput_features.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_multioutput_features.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_multioutput_features.session_tf": {
  "data": {
   "shadows": "gpflow.test_util.session_tf"
  },
  "type": "import"
 },
 "tests.test_multioutput_features.test_kuf": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "feature",
    "gpflow.multioutput.features.Kuf",
    "gpflow.test_util.session_tf.run",
    "kernel",
    "tests.test_multioutput_features.Datum",
    "tests.test_multioutput_features.Mofs",
    "tests.test_multioutput_features.Moks",
    "tests.test_multioutput_features.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_multioutput_features.test_kuu": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "feature",
    "gpflow.multioutput.features.Kuu",
    "gpflow.test_util.session_tf.run",
    "kernel",
    "tensorflow.cholesky",
    "tests.test_multioutput_features.Mofs",
    "tests.test_multioutput_features.Moks",
    "tests.test_multioutput_features.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_multioutput_features.test_mixed_shared": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "fun",
    "gpflow.multioutput.features.Kuf",
    "gpflow.multioutput.features.Kuu",
    "gpflow.test_util.session_tf.run",
    "print",
    "tensorflow.cholesky",
    "tests.test_multioutput_features.Datum",
    "tests.test_multioutput_features.Mofs",
    "tests.test_multioutput_features.Moks",
    "tests.test_multioutput_features.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_multioutput_features.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tests.test_notebooks": {
  "data": {},
  "type": "module"
 },
 "tests.test_notebooks.BLACKLISTED_NOTEBOOKS": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "tests.test_notebooks.CellExecutionError": {
  "data": {
   "shadows": "nbconvert.preprocessors.execute.CellExecutionError"
  },
  "type": "import"
 },
 "tests.test_notebooks.ExecutePreprocessor": {
  "data": {
   "shadows": "nbconvert.preprocessors.ExecutePreprocessor"
  },
  "type": "import"
 },
 "tests.test_notebooks.NOTEBOOK_FILES": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "tests.test_notebooks._exec_notebook": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "nbconvert.preprocessors.execute.CellExecutionError",
    "open",
    "str",
    "tests.test_notebooks._nbpath",
    "tests.test_notebooks._preproc",
    "tests.test_notebooks.nbformat",
    "tests.test_notebooks.os",
    "tests.test_notebooks.pytest",
    "tests.test_notebooks.sys",
    "tests.test_notebooks.traceback"
   ]
  },
  "type": "function"
 },
 "tests.test_notebooks._exec_notebook_ts": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "gpflow.test_util.session_context",
    "print",
    "tests.test_notebooks._exec_notebook",
    "tests.test_notebooks.time"
   ]
  },
  "type": "function"
 },
 "tests.test_notebooks._nbpath": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "tests.test_notebooks.os"
   ]
  },
  "type": "function"
 },
 "tests.test_notebooks._preproc": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "nbconvert.preprocessors.ExecutePreprocessor",
    "str",
    "tests.test_notebooks.sys"
   ]
  },
  "type": "function"
 },
 "tests.test_notebooks.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "tests.test_notebooks.nbformat": {
  "data": {
   "shadows": "nbformat"
  },
  "type": "import"
 },
 "tests.test_notebooks.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tests.test_notebooks.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_notebooks.session_context": {
  "data": {
   "shadows": "gpflow.test_util.session_context"
  },
  "type": "import"
 },
 "tests.test_notebooks.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tests.test_notebooks.test_no_notebook_missing": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "map",
    "set",
    "tests.test_notebooks.BLACKLISTED_NOTEBOOKS",
    "tests.test_notebooks.NOTEBOOK_FILES",
    "tests.test_notebooks._nbpath",
    "tests.test_notebooks.glob",
    "tests.test_notebooks.os"
   ]
  },
  "type": "function"
 },
 "tests.test_notebooks.test_notebook": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "tests.test_notebooks.NOTEBOOK_FILES",
    "tests.test_notebooks._exec_notebook_ts",
    "tests.test_notebooks.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_notebooks.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "tests.test_notebooks.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "tests.test_optimizers": {
  "data": {},
  "type": "module"
 },
 "tests.test_optimizers.CombinationOptimizer": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "gpflow.training.optimizer.Optimizer"
   ]
  },
  "type": "class"
 },
 "tests.test_optimizers.CombinationOptimizer.__init__": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "tests.test_optimizers.CombinationOptimizer.minimize": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "range",
    "tensorflow.name_scope"
   ]
  },
  "type": "function"
 },
 "tests.test_optimizers.Datum": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "numpy.random.randn"
   ]
  },
  "type": "class"
 },
 "tests.test_optimizers.Demo": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "tests.test_optimizers.gpflow"
   ]
  },
  "type": "class"
 },
 "tests.test_optimizers.Demo.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "numpy.random.randn",
    "super",
    "tests.test_optimizers.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_optimizers.Demo._build_likelihood": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "map",
    "sum",
    "tensorflow.reduce_prod",
    "tensorflow.reduce_sum",
    "tests.test_optimizers.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_optimizers.Demo.initializables": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "property",
    "super"
   ]
  },
  "type": "function"
 },
 "tests.test_optimizers.Demo.trainable_tensors": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "property",
    "super"
   ]
  },
  "type": "function"
 },
 "tests.test_optimizers.Empty": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "tests.test_optimizers.gpflow"
   ]
  },
  "type": "class"
 },
 "tests.test_optimizers.Empty._build_likelihood": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tests.test_optimizers.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_optimizers.GPflowTestCase": {
  "data": {
   "shadows": "gpflow.test_util.GPflowTestCase"
  },
  "type": "import"
 },
 "tests.test_optimizers.GradientDescentOptimizer": {
  "data": {
   "shadows": "gpflow.training.GradientDescentOptimizer"
  },
  "type": "import"
 },
 "tests.test_optimizers.Loop": {
  "data": {
   "shadows": "gpflow.actions.Loop"
  },
  "type": "import"
 },
 "tests.test_optimizers.NatGradOptimizer": {
  "data": {
   "shadows": "gpflow.training.natgrad_optimizer.NatGradOptimizer"
  },
  "type": "import"
 },
 "tests.test_optimizers.NonOptimizer": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "tests.test_optimizers.gpflow"
   ]
  },
  "type": "class"
 },
 "tests.test_optimizers.Optimizer": {
  "data": {
   "shadows": "gpflow.training.optimizer.Optimizer"
  },
  "type": "import"
 },
 "tests.test_optimizers.OptimizerCase": {
  "data": {
   "lineno": 69
  },
  "type": "class"
 },
 "tests.test_optimizers.OptimizerCase.test_different_sessions": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "tests.test_optimizers.Demo",
    "tests.test_optimizers.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_optimizers.OptimizerCase.test_external_variables_in_model": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "numpy.array",
    "tensorflow.errors.FailedPreconditionError",
    "tensorflow.get_variable",
    "tests.test_optimizers.Demo",
    "tests.test_optimizers.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_optimizers.OptimizerCase.test_non_gpflow_model": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tests.test_optimizers.OptimizerCase.test_optimizer_tensors": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "isinstance",
    "tests.test_optimizers.Demo",
    "tests.test_optimizers.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_optimizers.OptimizerCase.test_optimizer_with_var_list": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.errors.FailedPreconditionError",
    "tensorflow.get_variable",
    "tensorflow.placeholder",
    "tests.test_optimizers.Demo",
    "tests.test_optimizers.Empty",
    "tests.test_optimizers.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_optimizers.TestAdadeltaOptimizer": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase",
    "tests.test_optimizers.OptimizerCase",
    "tests.test_optimizers.gpflow"
   ]
  },
  "type": "class"
 },
 "tests.test_optimizers.TestAdamOptimizer": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase",
    "tests.test_optimizers.OptimizerCase",
    "tests.test_optimizers.gpflow"
   ]
  },
  "type": "class"
 },
 "tests.test_optimizers.TestFtrlOptimizer": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase",
    "tests.test_optimizers.OptimizerCase",
    "tests.test_optimizers.gpflow"
   ]
  },
  "type": "class"
 },
 "tests.test_optimizers.TestGradientDescentOptimizer": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase",
    "tests.test_optimizers.OptimizerCase",
    "tests.test_optimizers.gpflow"
   ]
  },
  "type": "class"
 },
 "tests.test_optimizers.TestMomentumOptimizer": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase",
    "tests.test_optimizers.OptimizerCase",
    "tests.test_optimizers.gpflow"
   ]
  },
  "type": "class"
 },
 "tests.test_optimizers.TestRMSPropOptimizer": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase",
    "tests.test_optimizers.OptimizerCase",
    "tests.test_optimizers.gpflow"
   ]
  },
  "type": "class"
 },
 "tests.test_optimizers.TestScipyOptimizer": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase",
    "tests.test_optimizers.OptimizerCase",
    "tests.test_optimizers.gpflow"
   ]
  },
  "type": "class"
 },
 "tests.test_optimizers.TestSimpleOptimizerInterface": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_optimizers.TestSimpleOptimizerInterface.test_non_existing_optimizer": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "TypeError",
    "tests.test_optimizers.NonOptimizer"
   ]
  },
  "type": "function"
 },
 "tests.test_optimizers.XiSqrtMeanVar": {
  "data": {
   "shadows": "gpflow.training.natgrad_optimizer.XiSqrtMeanVar"
  },
  "type": "import"
 },
 "tests.test_optimizers._TensorFlowOptimizer": {
  "data": {
   "shadows": "gpflow.training.tensorflow_optimizer._TensorFlowOptimizer"
  },
  "type": "import"
 },
 "tests.test_optimizers.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "tests.test_optimizers.expectation_to_meanvarsqrt": {
  "data": {
   "shadows": "gpflow.training.natgrad_optimizer.expectation_to_meanvarsqrt"
  },
  "type": "import"
 },
 "tests.test_optimizers.gpflow": {
  "data": {
   "shadows": "gpflow"
  },
  "type": "import"
 },
 "tests.test_optimizers.meanvarsqrt_to_expectation": {
  "data": {
   "shadows": "gpflow.training.natgrad_optimizer.meanvarsqrt_to_expectation"
  },
  "type": "import"
 },
 "tests.test_optimizers.natural_to_expectation": {
  "data": {
   "shadows": "gpflow.training.natgrad_optimizer.natural_to_expectation"
  },
  "type": "import"
 },
 "tests.test_optimizers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_optimizers.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_optimizers.session_tf": {
  "data": {
   "shadows": "gpflow.test_util.session_tf"
  },
  "type": "import"
 },
 "tests.test_optimizers.sgpr": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "tests.test_optimizers.Datum",
    "tests.test_optimizers.gpflow",
    "tests.test_optimizers.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_optimizers.svgp": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "tests.test_optimizers.Datum",
    "tests.test_optimizers.gpflow",
    "tests.test_optimizers.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_optimizers.test_SVGP_vs_SGPR": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "gpflow.training.natgrad_optimizer.NatGradOptimizer",
    "numpy.random.randn",
    "numpy.testing.assert_allclose",
    "tests.test_optimizers.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_optimizers.test_VGP_vs_GPR": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "gpflow.training.natgrad_optimizer.NatGradOptimizer",
    "numpy.random.randn",
    "numpy.testing.assert_allclose",
    "tests.test_optimizers.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_optimizers.test_XiEtas_VGP_vs_GPR": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "XiEta",
    "gpflow.test_util.session_tf",
    "tests.test_optimizers.test_other_XiTransform_VGP_vs_GPR"
   ]
  },
  "type": "function"
 },
 "tests.test_optimizers.test_XiEtas_VGP_vs_GPR.XiEta": {
  "data": {
   "lineno": 327
  },
  "type": "class"
 },
 "tests.test_optimizers.test_XiEtas_VGP_vs_GPR.XiEta.meanvarsqrt_to_xi": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "gpflow.training.natgrad_optimizer.meanvarsqrt_to_expectation"
   ]
  },
  "type": "function"
 },
 "tests.test_optimizers.test_XiEtas_VGP_vs_GPR.XiEta.naturals_to_xi": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "gpflow.training.natgrad_optimizer.natural_to_expectation"
   ]
  },
  "type": "function"
 },
 "tests.test_optimizers.test_XiEtas_VGP_vs_GPR.XiEta.xi_to_meanvarsqrt": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "gpflow.training.natgrad_optimizer.expectation_to_meanvarsqrt"
   ]
  },
  "type": "function"
 },
 "tests.test_optimizers.test_hypers_SVGP_vs_SGPR": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "gpflow.actions.Loop",
    "gpflow.training.GradientDescentOptimizer",
    "gpflow.training.natgrad_optimizer.NatGradOptimizer",
    "numpy.testing.assert_allclose",
    "tests.test_optimizers.Datum",
    "tests.test_optimizers.sgpr",
    "tests.test_optimizers.svgp"
   ]
  },
  "type": "function"
 },
 "tests.test_optimizers.test_hypers_SVGP_vs_SGPR_tensors": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "gpflow.test_util.session_tf.run",
    "gpflow.training.GradientDescentOptimizer",
    "gpflow.training.natgrad_optimizer.NatGradOptimizer",
    "numpy.testing.assert_allclose",
    "tests.test_optimizers.Datum",
    "tests.test_optimizers.sgpr",
    "tests.test_optimizers.svgp"
   ]
  },
  "type": "function"
 },
 "tests.test_optimizers.test_other_XiTransform_VGP_vs_GPR": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "gpflow.training.natgrad_optimizer.NatGradOptimizer",
    "gpflow.training.natgrad_optimizer.XiSqrtMeanVar",
    "numpy.random.randn",
    "numpy.testing.assert_allclose",
    "tests.test_optimizers.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_optimizers.test_scipy_optimizer_options": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.sin",
    "tests.test_optimizers.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_optimizers.test_small_q_sqrt_handeled_correctly": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "gpflow.training.natgrad_optimizer.NatGradOptimizer",
    "numpy.eye",
    "numpy.random.randn",
    "numpy.testing.assert_allclose",
    "tests.test_optimizers.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_optimizers.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tests.test_predict": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tests.test_predict.GPflowTestCase": {
  "data": {
   "shadows": "gpflow.test_util.GPflowTestCase"
  },
  "type": "import"
 },
 "tests.test_predict.TestFullCov": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase",
    "numpy.random.RandomState"
   ]
  },
  "type": "class"
 },
 "tests.test_predict.TestFullCov.kernel": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "classmethod",
    "tests.test_predict.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_predict.TestFullCov.prepare": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "tests.test_predict.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_predict.TestFullCov.test_cov": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.allclose",
    "numpy.diag",
    "range"
   ]
  },
  "type": "function"
 },
 "tests.test_predict.TestFullCov.test_samples": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "tests.test_predict.TestFullCovGPMC": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "tests.test_predict.TestFullCov"
   ]
  },
  "type": "class"
 },
 "tests.test_predict.TestFullCovGPMC.prepare": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "tests.test_predict.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_predict.TestFullCovGPRFITC": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "tests.test_predict.TestFullCov"
   ]
  },
  "type": "class"
 },
 "tests.test_predict.TestFullCovGPRFITC.prepare": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "tests.test_predict.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_predict.TestFullCovSGPMC": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "tests.test_predict.TestFullCov"
   ]
  },
  "type": "class"
 },
 "tests.test_predict.TestFullCovSGPMC.prepare": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "tests.test_predict.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_predict.TestFullCovSGPR": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "tests.test_predict.TestFullCov"
   ]
  },
  "type": "class"
 },
 "tests.test_predict.TestFullCovSGPR.prepare": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "tests.test_predict.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_predict.TestFullCovSVGP1": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "tests.test_predict.TestFullCov"
   ]
  },
  "type": "class"
 },
 "tests.test_predict.TestFullCovSVGP1.prepare": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "tests.test_predict.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_predict.TestFullCovSVGP2": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "tests.test_predict.TestFullCov"
   ]
  },
  "type": "class"
 },
 "tests.test_predict.TestFullCovSVGP2.prepare": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "tests.test_predict.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_predict.TestFullCovSVGP3": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "tests.test_predict.TestFullCov"
   ]
  },
  "type": "class"
 },
 "tests.test_predict.TestFullCovSVGP3.prepare": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "tests.test_predict.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_predict.TestFullCovSVGP4": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "tests.test_predict.TestFullCov"
   ]
  },
  "type": "class"
 },
 "tests.test_predict.TestFullCovSVGP4.prepare": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "tests.test_predict.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_predict.TestFullCovVGP": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "tests.test_predict.TestFullCov"
   ]
  },
  "type": "class"
 },
 "tests.test_predict.TestFullCovVGP.prepare": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "tests.test_predict.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_predict.TestGaussian": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_predict.TestGaussian.prepare": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "tests.test_predict.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_predict.TestGaussian.test_all": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "tests.test_predict.TestGaussian.test_density": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.log",
    "numpy.pi",
    "numpy.square"
   ]
  },
  "type": "function"
 },
 "tests.test_predict.TestGaussian.test_recompile": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "tests.test_predict.gpflow": {
  "data": {
   "shadows": "gpflow"
  },
  "type": "import"
 },
 "tests.test_predict.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_predict.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tests.test_priors": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tests.test_priors.FlatModel": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "tests.test_priors.gpflow"
   ]
  },
  "type": "class"
 },
 "tests.test_priors.FlatModel._build_likelihood": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "gpflow.settings.float_type",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "tests.test_priors.GPflowTestCase": {
  "data": {
   "shadows": "gpflow.test_util.GPflowTestCase"
  },
  "type": "import"
 },
 "tests.test_priors.TestPriorMode": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_priors.TestPriorMode.prepare": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "tests.test_priors.FlatModel"
   ]
  },
  "type": "function"
 },
 "tests.test_priors.TestPriorMode.testBetaMode": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "tests.test_priors.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_priors.TestPriorMode.testExponential": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.log",
    "tests.test_priors.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_priors.TestPriorMode.testGammaMode": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "tests.test_priors.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_priors.TestPriorMode.testGaussianMode": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "tests.test_priors.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_priors.TestPriorMode.testGaussianModeMatrix": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.testing.assert_allclose",
    "tests.test_priors.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_priors.TestPriorMode.testLaplaceMode": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "tests.test_priors.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_priors.TestPriorMode.testLogNormalMode": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "tests.test_priors.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_priors.TestPriorMode.testUniform": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "numpy.random.randn",
    "tests.test_priors.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_priors.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "tests.test_priors.beta_moments": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "tests.test_priors.exponential_moments": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "tests.test_priors.gamma_moments": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "tests.test_priors.gaussian_moments": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "tests.test_priors.gpflow": {
  "data": {
   "shadows": "gpflow"
  },
  "type": "import"
 },
 "tests.test_priors.laplace_moments": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "tests.test_priors.lognormal_moments": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "tests.test_priors.mc_moments": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "numpy.atleast_1d",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "tests.test_priors.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_priors.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_priors.settings": {
  "data": {
   "shadows": "gpflow.settings"
  },
  "type": "import"
 },
 "tests.test_priors.test_moments": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "cls",
    "cls.__name__.lower",
    "eval",
    "moments_func",
    "numpy.testing.assert_allclose",
    "tests.test_priors.mc_moments",
    "tests.test_priors.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_priors.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tests.test_priors.uniform_moments": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "numpy.atleast_1d"
   ]
  },
  "type": "function"
 },
 "tests.test_profiling": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tests.test_profiling.GPflowTestCase": {
  "data": {
   "shadows": "gpflow.test_util.GPflowTestCase"
  },
  "type": "import"
 },
 "tests.test_profiling.TestProfiling": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_profiling.TestProfiling.prepare": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numpy.random.rand",
    "numpy.random.randn",
    "numpy.sin",
    "tests.test_profiling.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_profiling.TestProfiling.test_autoflow": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "tensorflow.test.get_temp_dir",
    "tests.test_profiling.gpflow",
    "tests.test_profiling.os"
   ]
  },
  "type": "function"
 },
 "tests.test_profiling.TestProfiling.test_eachtime": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "tensorflow.test.get_temp_dir",
    "tests.test_profiling.glob",
    "tests.test_profiling.gpflow",
    "tests.test_profiling.os"
   ]
  },
  "type": "function"
 },
 "tests.test_profiling.TestProfiling.test_profile": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "tensorflow.test.get_temp_dir",
    "tests.test_profiling.gpflow",
    "tests.test_profiling.os"
   ]
  },
  "type": "function"
 },
 "tests.test_profiling.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "tests.test_profiling.gpflow": {
  "data": {
   "shadows": "gpflow"
  },
  "type": "import"
 },
 "tests.test_profiling.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_profiling.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tests.test_profiling.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tests.test_quadrature": {
  "data": {},
  "type": "module"
 },
 "tests.test_quadrature.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "tests.test_quadrature.cast": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.asarray",
    "tensorflow.cast",
    "tests.test_quadrature.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_quadrature.gpflow": {
  "data": {
   "shadows": "gpflow"
  },
  "type": "import"
 },
 "tests.test_quadrature.mu1": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "numpy.array",
    "tests.test_quadrature.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_quadrature.mu2": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "numpy.array",
    "tests.test_quadrature.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_quadrature.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_quadrature.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_quadrature.session_tf": {
  "data": {
   "shadows": "gpflow.test_util.session_tf"
  },
  "type": "import"
 },
 "tests.test_quadrature.test_diagquad_1d": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "gpflow.test_util.session_tf.run",
    "numpy.exp",
    "numpy.testing.assert_allclose",
    "tensorflow.exp",
    "tests.test_quadrature.cast",
    "tests.test_quadrature.gpflow",
    "tests.test_quadrature.mu1",
    "tests.test_quadrature.var1"
   ]
  },
  "type": "function"
 },
 "tests.test_quadrature.test_diagquad_2d": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "gpflow.test_util.session_tf.run",
    "numpy.exp",
    "numpy.testing.assert_allclose",
    "tensorflow.exp",
    "tests.test_quadrature.cast",
    "tests.test_quadrature.gpflow",
    "tests.test_quadrature.mu1",
    "tests.test_quadrature.mu2",
    "tests.test_quadrature.var1",
    "tests.test_quadrature.var2"
   ]
  },
  "type": "function"
 },
 "tests.test_quadrature.test_diagquad_logspace": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "gpflow.test_util.session_tf.run",
    "numpy.testing.assert_allclose",
    "tests.test_quadrature.cast",
    "tests.test_quadrature.gpflow",
    "tests.test_quadrature.mu1",
    "tests.test_quadrature.mu2",
    "tests.test_quadrature.var1",
    "tests.test_quadrature.var2"
   ]
  },
  "type": "function"
 },
 "tests.test_quadrature.test_diagquad_with_kwarg": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "gpflow.test_util.session_tf.run",
    "numpy.array",
    "numpy.exp",
    "numpy.testing.assert_allclose",
    "tensorflow.exp",
    "tests.test_quadrature.cast",
    "tests.test_quadrature.gpflow",
    "tests.test_quadrature.mu2",
    "tests.test_quadrature.var2"
   ]
  },
  "type": "function"
 },
 "tests.test_quadrature.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tests.test_quadrature.var1": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.array",
    "tests.test_quadrature.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_quadrature.var2": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.array",
    "tests.test_quadrature.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_scaled_euclid_dist": {
  "data": {
   "symbols_in_volume": [
    "numpy.random.RandomState"
   ]
  },
  "type": "module"
 },
 "tests.test_scaled_euclid_dist.Datum": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "tests.test_scaled_euclid_dist.rng"
   ]
  },
  "type": "class"
 },
 "tests.test_scaled_euclid_dist.kernels": {
  "data": {
   "shadows": "gpflow.kernels"
  },
  "type": "import"
 },
 "tests.test_scaled_euclid_dist.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_scaled_euclid_dist.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_scaled_euclid_dist.rng": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "tests.test_scaled_euclid_dist.session_tf": {
  "data": {
   "shadows": "gpflow.test_util.session_tf"
  },
  "type": "import"
 },
 "tests.test_scaled_euclid_dist.settings": {
  "data": {
   "shadows": "gpflow.settings"
  },
  "type": "import"
 },
 "tests.test_scaled_euclid_dist.test_kernel_euclidean_distance": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "gpflow.kernels.Cosine",
    "gpflow.kernels.Exponential",
    "gpflow.kernels.Matern12",
    "gpflow.kernels.Matern32",
    "gpflow.kernels.Matern52",
    "gpflow.settings.float_type",
    "gpflow.test_util.session_tf.run",
    "kernel",
    "kernel.__name__",
    "numpy.isfinite",
    "numpy.isnan",
    "tensorflow.gradients",
    "tensorflow.placeholder",
    "tests.test_scaled_euclid_dist.Datum",
    "tests.test_scaled_euclid_dist.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_scaled_euclid_dist.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tests.test_session": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tests.test_session.GPflowTestCase": {
  "data": {
   "shadows": "gpflow.test_util.GPflowTestCase"
  },
  "type": "import"
 },
 "tests.test_session.TestSessionConfiguration": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_session.TestSessionConfiguration.prepare": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.ones",
    "tests.test_session.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_session.TestSessionConfiguration.test_option_mutability": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "gpflow.session_manager.get_session",
    "gpflow.settings.profiling.each_time",
    "gpflow.settings.profiling.output_directory",
    "gpflow.settings.profiling.output_file_name",
    "gpflow.settings.session.inter_op_parallelism_threads",
    "gpflow.settings.session.intra_op_parallelism_threads",
    "tensorflow.ConfigProto",
    "tensorflow.Graph"
   ]
  },
  "type": "function"
 },
 "tests.test_session.TestSessionConfiguration.test_option_persistance": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "bool",
    "gpflow.settings.session.allow_soft_placement",
    "gpflow.settings.session.inter_op_parallelism_threads",
    "gpflow.settings.session.intra_op_parallelism_threads",
    "int",
    "isinstance",
    "tests.test_session.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_session.TestSessionConfiguration.test_session_default_graph": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "gpflow.session_manager.get_session",
    "tensorflow.get_default_graph"
   ]
  },
  "type": "function"
 },
 "tests.test_session.gpflow": {
  "data": {
   "shadows": "gpflow"
  },
  "type": "import"
 },
 "tests.test_session.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_session.session_manager": {
  "data": {
   "shadows": "gpflow.session_manager"
  },
  "type": "import"
 },
 "tests.test_session.settings": {
  "data": {
   "shadows": "gpflow.settings"
  },
  "type": "import"
 },
 "tests.test_session.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tests.test_transforms": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tests.test_transforms.Chain": {
  "data": {
   "shadows": "gpflow.transforms.Chain"
  },
  "type": "import"
 },
 "tests.test_transforms.GPflowTestCase": {
  "data": {
   "shadows": "gpflow.test_util.GPflowTestCase"
  },
  "type": "import"
 },
 "tests.test_transforms.Identity": {
  "data": {
   "shadows": "gpflow.transforms.Identity"
  },
  "type": "import"
 },
 "tests.test_transforms.TestChainIdentity": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_transforms.TestChainIdentity.assertEqualElements": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "tests.test_transforms.TestChainIdentity.prepare": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "gpflow.settings.float_type",
    "gpflow.transforms.Chain",
    "numpy.random.randn",
    "tensorflow.convert_to_tensor",
    "tests.test_transforms.gpflow",
    "transform"
   ]
  },
  "type": "function"
 },
 "tests.test_transforms.TestChainIdentity.test_equivalence": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "gpflow.transforms.Chain",
    "gpflow.transforms.Identity",
    "t",
    "t.backward",
    "t.forward",
    "t.forward_tensor",
    "t.log_jacobian_tensor",
    "transform"
   ]
  },
  "type": "function"
 },
 "tests.test_transforms.TestDiagMatrixTransform": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_transforms.TestDiagMatrixTransform.setUp": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "tests.test_transforms.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_transforms.TestDiagMatrixTransform.test_forward_backward": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.random.randn",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "tests.test_transforms.TestDiagMatrixTransform.test_tf_np_forward": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.testing.assert_allclose",
    "tensorflow.convert_to_tensor"
   ]
  },
  "type": "function"
 },
 "tests.test_transforms.TestMatrixTransforms": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_transforms.TestMatrixTransforms.test_DiagMatrix": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.eye",
    "t",
    "t.backward",
    "tests.test_transforms.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_transforms.TestMatrixTransforms.test_LowerTriangular": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "t",
    "t.forward",
    "tests.test_transforms.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_transforms.TestMatrixTransforms.test_LowerTriangularConsistency": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.testing.assert_allclose",
    "numpy.tri",
    "t",
    "t.backward",
    "t.backward_tensor",
    "t.forward",
    "t.forward_tensor",
    "tensorflow.identity",
    "tests.test_transforms.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_transforms.TestMatrixTransforms.test_LowerTriangular_squeezes": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "ValueError",
    "numpy.all",
    "numpy.random.randn",
    "tensorflow.squeeze",
    "tests.test_transforms.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_transforms.TestMatrixTransforms.test_LowerTriangular_squeezes_only_first_axis": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "numpy.ones",
    "t",
    "t.forward",
    "tests.test_transforms.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_transforms.TestOverflow": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_transforms.TestOverflow.setUp": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "tests.test_transforms.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_transforms.TestOverflow.testDivByZero": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "len",
    "numpy.any",
    "numpy.array",
    "numpy.isinf",
    "numpy.isnan",
    "tests.test_transforms.warnings"
   ]
  },
  "type": "function"
 },
 "tests.test_transforms.TestOverflow.testOverflow": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "len",
    "numpy.any",
    "numpy.array",
    "numpy.isinf",
    "numpy.isnan",
    "tests.test_transforms.warnings"
   ]
  },
  "type": "function"
 },
 "tests.test_transforms.TransformTests": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_transforms.TransformTests.prepare": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "gpflow.settings.float_type",
    "gpflow.transforms.Chain",
    "gpflow.transforms.Identity",
    "numpy.random.randn",
    "tensorflow.convert_to_tensor",
    "tests.test_transforms.gpflow",
    "transform_class"
   ]
  },
  "type": "function"
 },
 "tests.test_transforms.TransformTests.test_bad_chain_argument": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "TypeError",
    "t",
    "tests.test_transforms.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_transforms.TransformTests.test_forward_backward": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "tests.test_transforms.TransformTests.test_logistic_error_bounds_equal": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "ValueError",
    "tests.test_transforms.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_transforms.TransformTests.test_logistic_error_wrong_order": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "ValueError",
    "tests.test_transforms.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_transforms.TransformTests.test_logjac": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "isinstance",
    "jacobian",
    "numpy.testing.assert_allclose",
    "tensorflow.log",
    "tensorflow.matrix_determinant",
    "tests.test_transforms.gpflow",
    "zip"
   ]
  },
  "type": "function"
 },
 "tests.test_transforms.TransformTests.test_logjac.jacobian": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "f",
    "range",
    "tensorflow.gradients",
    "tensorflow.stack"
   ]
  },
  "type": "function"
 },
 "tests.test_transforms.TransformTests.test_tf_np_forward_backward": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "tests.test_transforms.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "tests.test_transforms.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "tests.test_transforms.gpflow": {
  "data": {
   "shadows": "gpflow"
  },
  "type": "import"
 },
 "tests.test_transforms.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_transforms.settings": {
  "data": {
   "shadows": "gpflow.settings"
  },
  "type": "import"
 },
 "tests.test_transforms.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tests.test_transforms.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "tests.test_triang": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tests.test_triang.GPflowTestCase": {
  "data": {
   "shadows": "gpflow.test_util.GPflowTestCase"
  },
  "type": "import"
 },
 "tests.test_triang.TestVecToTri": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase"
   ]
  },
  "type": "class"
 },
 "tests.test_triang.TestVecToTri.get_example_matrices": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "range"
   ]
  },
  "type": "function"
 },
 "tests.test_triang.TestVecToTri.reference_inverse": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numpy.tril_indices",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "tests.test_triang.TestVecToTri.test_basic_functionality": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "gpflow.misc.vec_to_tri",
    "numpy.testing.assert_array_almost_equal",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "tests.test_triang.TestVecToTri.test_differentiable": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "gpflow.misc.vec_to_tri",
    "numpy.ones_like",
    "numpy.testing.assert_array_almost_equal",
    "tensorflow.constant",
    "tensorflow.gradients",
    "tensorflow.reduce_sum"
   ]
  },
  "type": "function"
 },
 "tests.test_triang.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "tests.test_triang.misc": {
  "data": {
   "shadows": "gpflow.misc"
  },
  "type": "import"
 },
 "tests.test_triang.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_triang.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tests.test_uncertain_conditional": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tests.test_uncertain_conditional.Data": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.hstack",
    "numpy.linspace",
    "numpy.random.RandomState",
    "numpy.sin",
    "numpy.zeros"
   ]
  },
  "type": "class"
 },
 "tests.test_uncertain_conditional.DataMC1": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "numpy.hstack",
    "numpy.sin",
    "tests.test_uncertain_conditional.Data"
   ]
  },
  "type": "class"
 },
 "tests.test_uncertain_conditional.DataMC2": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.hstack",
    "numpy.sin",
    "tests.test_uncertain_conditional.Data",
    "tests.test_uncertain_conditional.gen_L"
   ]
  },
  "type": "class"
 },
 "tests.test_uncertain_conditional.DataQuadrature": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.RandomState",
    "tests.test_uncertain_conditional.gen_L",
    "tests.test_uncertain_conditional.gen_q_sqrt"
   ]
  },
  "type": "class"
 },
 "tests.test_uncertain_conditional.DataQuadrature.tensors": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "Collection",
    "classmethod",
    "collections.namedtuple",
    "gpflow.settings.float_type",
    "tensorflow.placeholder",
    "tests.test_uncertain_conditional.gpflow",
    "tests.test_uncertain_conditional.mean_function_factory"
   ]
  },
  "type": "function"
 },
 "tests.test_uncertain_conditional.DataQuadrature.tensors.mean_fn": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "effective_mean",
    "gpflow.conditionals.conditional"
   ]
  },
  "type": "function"
 },
 "tests.test_uncertain_conditional.DataQuadrature.tensors.mean_sq_fn": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "effective_mean",
    "gpflow.conditionals.conditional"
   ]
  },
  "type": "function"
 },
 "tests.test_uncertain_conditional.DataQuadrature.tensors.var_fn": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "gpflow.conditionals.conditional"
   ]
  },
  "type": "function"
 },
 "tests.test_uncertain_conditional.MEANS": {
  "data": {
   "lineno": 168
  },
  "type": "constant"
 },
 "tests.test_uncertain_conditional.MomentMatchingSVGP": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "tests.test_uncertain_conditional.gpflow"
   ]
  },
  "type": "class"
 },
 "tests.test_uncertain_conditional.MomentMatchingSVGP.uncertain_predict_f_moment_matching": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "gpflow.conditionals.uncertain_conditional",
    "tests.test_uncertain_conditional.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_uncertain_conditional.MomentMatchingSVGP.uncertain_predict_f_monte_carlo": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "int",
    "numpy.cov",
    "numpy.mean",
    "numpy.random.RandomState",
    "numpy.reshape"
   ]
  },
  "type": "function"
 },
 "tests.test_uncertain_conditional.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "tests.test_uncertain_conditional.conditional": {
  "data": {
   "shadows": "gpflow.conditionals.conditional"
  },
  "type": "import"
 },
 "tests.test_uncertain_conditional.gen_L": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.tril",
    "range"
   ]
  },
  "type": "function"
 },
 "tests.test_uncertain_conditional.gen_q_sqrt": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.tril",
    "range"
   ]
  },
  "type": "function"
 },
 "tests.test_uncertain_conditional.gpflow": {
  "data": {
   "shadows": "gpflow"
  },
  "type": "import"
 },
 "tests.test_uncertain_conditional.mean_function_factory": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "tests.test_uncertain_conditional.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_uncertain_conditional.mvnquad": {
  "data": {
   "shadows": "gpflow.quadrature.mvnquad"
  },
  "type": "import"
 },
 "tests.test_uncertain_conditional.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "tests.test_uncertain_conditional.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_uncertain_conditional.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_uncertain_conditional.session_context": {
  "data": {
   "shadows": "gpflow.test_util.session_context"
  },
  "type": "import"
 },
 "tests.test_uncertain_conditional.settings": {
  "data": {
   "shadows": "gpflow.settings"
  },
  "type": "import"
 },
 "tests.test_uncertain_conditional.test_monte_carlo_1_din": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "gpflow.test_util.session_context",
    "numpy.testing.assert_almost_equal",
    "range",
    "tensorflow.constant",
    "tests.test_uncertain_conditional.DataMC1",
    "tests.test_uncertain_conditional.MEANS",
    "tests.test_uncertain_conditional.MomentMatchingSVGP",
    "tests.test_uncertain_conditional.gpflow",
    "tests.test_uncertain_conditional.mean_function_factory",
    "tests.test_uncertain_conditional.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_uncertain_conditional.test_monte_carlo_2_din": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "gpflow.test_util.session_context",
    "numpy.testing.assert_almost_equal",
    "range",
    "tensorflow.constant",
    "tests.test_uncertain_conditional.DataMC2",
    "tests.test_uncertain_conditional.MEANS",
    "tests.test_uncertain_conditional.MomentMatchingSVGP",
    "tests.test_uncertain_conditional.gpflow",
    "tests.test_uncertain_conditional.mean_function_factory",
    "tests.test_uncertain_conditional.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_uncertain_conditional.test_no_uncertainty": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "gpflow.test_util.session_context",
    "numpy.testing.assert_almost_equal",
    "range",
    "tensorflow.constant",
    "tests.test_uncertain_conditional.Data",
    "tests.test_uncertain_conditional.MEANS",
    "tests.test_uncertain_conditional.MomentMatchingSVGP",
    "tests.test_uncertain_conditional.gpflow",
    "tests.test_uncertain_conditional.mean_function_factory",
    "tests.test_uncertain_conditional.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_uncertain_conditional.test_quadrature": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "gpflow.conditionals.uncertain_conditional",
    "gpflow.quadrature.mvnquad",
    "gpflow.test_util.session_context",
    "numpy.testing.assert_almost_equal",
    "tests.test_uncertain_conditional.DataQuadrature",
    "tests.test_uncertain_conditional.MEANS",
    "tests.test_uncertain_conditional.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_uncertain_conditional.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tests.test_uncertain_conditional.uncertain_conditional": {
  "data": {
   "shadows": "gpflow.conditionals.uncertain_conditional"
  },
  "type": "import"
 },
 "tests.test_variational": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.test.main"
   ]
  },
  "type": "module"
 },
 "tests.test_variational.GPflowTestCase": {
  "data": {
   "shadows": "gpflow.test_util.GPflowTestCase"
  },
  "type": "import"
 },
 "tests.test_variational.VariationalMultivariateTest": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase",
    "numpy.random.RandomState",
    "numpy.tril"
   ]
  },
  "type": "class"
 },
 "tests.test_variational.VariationalMultivariateTest.get_model": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "tests.test_variational.gpflow",
    "tests.test_variational.kernel"
   ]
  },
  "type": "function"
 },
 "tests.test_variational.VariationalMultivariateTest.likelihood": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "tests.test_variational.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_variational.VariationalMultivariateTest.test_prior_KL_fullQ": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.eye",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "referenceRbfKernel",
    "tests.test_variational.gpflow",
    "tests.test_variational.multivariate_prior_KL"
   ]
  },
  "type": "function"
 },
 "tests.test_variational.VariationalMultivariateTest.test_refrence_implementation_consistency": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "tests.test_variational.multivariate_prior_KL",
    "tests.test_variational.univariate_prior_KL"
   ]
  },
  "type": "function"
 },
 "tests.test_variational.VariationalUnivariateTest": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "gpflow.test_util.GPflowTestCase",
    "numpy.array",
    "numpy.atleast_2d",
    "numpy.sqrt",
    "tests.test_variational.univariate_posterior"
   ]
  },
  "type": "class"
 },
 "tests.test_variational.VariationalUnivariateTest.get_model": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "numpy.ones",
    "tests.test_variational.gpflow",
    "tests.test_variational.kernel"
   ]
  },
  "type": "function"
 },
 "tests.test_variational.VariationalUnivariateTest.likelihood": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "tests.test_variational.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_variational.VariationalUnivariateTest.testUnivariateConditionals": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "tests.test_variational.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_variational.VariationalUnivariateTest.test_build_likelihood": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "tests.test_variational.univariate_log_marginal_likelihood"
   ]
  },
  "type": "function"
 },
 "tests.test_variational.VariationalUnivariateTest.test_prior_KL": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "tests.test_variational.gpflow",
    "tests.test_variational.univariate_prior_KL"
   ]
  },
  "type": "function"
 },
 "tests.test_variational.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "tests.test_variational.gpflow": {
  "data": {
   "shadows": "gpflow"
  },
  "type": "import"
 },
 "tests.test_variational.kernel": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "tests.test_variational.gpflow"
   ]
  },
  "type": "function"
 },
 "tests.test_variational.multivariate_prior_KL": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.linalg.slogdet",
    "numpy.linalg.solve",
    "numpy.trace"
   ]
  },
  "type": "function"
 },
 "tests.test_variational.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_variational.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tests.test_variational.univariate_log_marginal_likelihood": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "tests.test_variational.univariate_posterior": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "tests.test_variational.univariate_prior_KL": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 }
}