{
 "dacite": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "dacite.config": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "dacite.config.Config": {
  "lineno": 5,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "dataclasses.field",
   "typing.Any",
   "typing.Callable",
   "typing.Dict",
   "typing.List",
   "typing.Optional",
   "typing.Type"
  ],
  "type": "class"
 },
 "dacite.core": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.TypeVar"
  ],
  "type": "module"
 },
 "dacite.core._build_value": {
  "lineno": 81,
  "symbols_in_volume": [
   "dacite.config.Config",
   "dacite.data.Data",
   "dacite.types.extract_origin_collection",
   "dacite.types.is_generic_collection",
   "dacite.types.is_instance",
   "dacite.types.is_union",
   "dataclasses.is_dataclass",
   "typing.Any",
   "typing.Type"
  ],
  "type": "function"
 },
 "dacite.core._build_value_for_collection": {
  "lineno": 122,
  "symbols_in_volume": [
   "dacite.config.Config",
   "dacite.types.extract_generic",
   "dacite.types.is_instance",
   "typing.Any",
   "typing.Mapping",
   "typing.Type"
  ],
  "type": "function"
 },
 "dacite.core._build_value_for_union": {
  "lineno": 91,
  "symbols_in_volume": [
   "dacite.config.Config",
   "dacite.exceptions.DaciteError",
   "dacite.exceptions.StrictUnionMatchError",
   "dacite.exceptions.UnionMatchError",
   "dacite.types.extract_generic",
   "dacite.types.is_instance",
   "dacite.types.is_optional",
   "dacite.types.transform_value",
   "typing.Any",
   "typing.Type"
  ],
  "type": "function"
 },
 "dacite.core.from_dict": {
  "lineno": 31,
  "symbols_in_volume": [
   "copy.copy",
   "dacite.config.Config",
   "dacite.data.Data",
   "dacite.dataclasses.DefaultValueNotFoundError",
   "dacite.dataclasses.create_instance",
   "dacite.dataclasses.get_default_value_for_field",
   "dacite.dataclasses.get_fields",
   "dacite.exceptions.DaciteFieldError",
   "dacite.exceptions.ForwardReferenceError",
   "dacite.exceptions.MissingValueError",
   "dacite.exceptions.UnexpectedDataError",
   "dacite.exceptions.WrongTypeError",
   "dacite.types.is_instance",
   "dacite.types.transform_value",
   "typing.Optional",
   "typing.Type",
   "typing.get_type_hints"
  ],
  "type": "function"
 },
 "dacite.data": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Dict"
  ],
  "type": "module"
 },
 "dacite.dataclasses": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.Any",
   "typing.TypeVar"
  ],
  "type": "module"
 },
 "dacite.dataclasses.DefaultValueNotFoundError": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "dacite.dataclasses.create_instance": {
  "lineno": 24,
  "symbols_in_volume": [
   "dacite.data.Data",
   "typing.Type"
  ],
  "type": "function"
 },
 "dacite.dataclasses.get_default_value_for_field": {
  "lineno": 14,
  "symbols_in_volume": [
   "dacite.types.is_optional",
   "dataclasses.Field",
   "dataclasses.MISSING",
   "typing.Any"
  ],
  "type": "function"
 },
 "dacite.dataclasses.get_fields": {
  "lineno": 31,
  "symbols_in_volume": [
   "dataclasses.Field",
   "dataclasses._FIELD",
   "dataclasses._FIELDS",
   "dataclasses._FIELD_INITVAR",
   "typing.List",
   "typing.Type"
  ],
  "type": "function"
 },
 "dacite.exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "dacite.exceptions.DaciteError": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "dacite.exceptions.DaciteFieldError": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "dacite.exceptions.DaciteFieldError.__init__": {
  "lineno": 13,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "dacite.exceptions.DaciteFieldError.update_path": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "dacite.exceptions.ForwardReferenceError": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "class"
 },
 "dacite.exceptions.ForwardReferenceError.__init__": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "dacite.exceptions.ForwardReferenceError.__str__": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "dacite.exceptions.MissingValueError": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "class"
 },
 "dacite.exceptions.MissingValueError.__init__": {
  "lineno": 38,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "dacite.exceptions.MissingValueError.__str__": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "dacite.exceptions.StrictUnionMatchError": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "class"
 },
 "dacite.exceptions.StrictUnionMatchError.__init__": {
  "lineno": 54,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Dict",
   "typing.Optional",
   "typing.Type"
  ],
  "type": "function"
 },
 "dacite.exceptions.StrictUnionMatchError.__str__": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "dacite.exceptions.UnexpectedDataError": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "class"
 },
 "dacite.exceptions.UnexpectedDataError.__init__": {
  "lineno": 73,
  "symbols_in_volume": [
   "typing.Set"
  ],
  "type": "function"
 },
 "dacite.exceptions.UnexpectedDataError.__str__": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "dacite.exceptions.UnionMatchError": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "class"
 },
 "dacite.exceptions.UnionMatchError.__str__": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "dacite.exceptions.WrongTypeError": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "dacite.exceptions.WrongTypeError.__init__": {
  "lineno": 25,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Optional",
   "typing.Type"
  ],
  "type": "function"
 },
 "dacite.exceptions.WrongTypeError.__str__": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "dacite.exceptions._name": {
  "lineno": 4,
  "symbols_in_volume": [
   "typing.Type"
  ],
  "type": "function"
 },
 "dacite.types": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.Any",
   "typing.TypeVar"
  ],
  "type": "module"
 },
 "dacite.types._has_specified_inner_types": {
  "lineno": 140,
  "symbols_in_volume": [
   "typing.Type"
  ],
  "type": "function"
 },
 "dacite.types.extract_generic": {
  "lineno": 157,
  "symbols_in_volume": [
   "typing.Type"
  ],
  "type": "function"
 },
 "dacite.types.extract_new_type": {
  "lineno": 79,
  "symbols_in_volume": [
   "typing.Type"
  ],
  "type": "function"
 },
 "dacite.types.extract_optional": {
  "lineno": 51,
  "symbols_in_volume": [
   "typing.Optional",
   "typing.Type"
  ],
  "type": "function"
 },
 "dacite.types.extract_origin_collection": {
  "lineno": 40,
  "symbols_in_volume": [
   "typing.Type"
  ],
  "type": "function"
 },
 "dacite.types.is_generic": {
  "lineno": 58,
  "symbols_in_volume": [
   "typing.Type"
  ],
  "type": "function"
 },
 "dacite.types.is_generic_collection": {
  "lineno": 147,
  "symbols_in_volume": [
   "typing.Collection",
   "typing.Type"
  ],
  "type": "function"
 },
 "dacite.types.is_init_var": {
  "lineno": 83,
  "symbols_in_volume": [
   "dataclasses.InitVar",
   "typing.Type"
  ],
  "type": "function"
 },
 "dacite.types.is_instance": {
  "lineno": 87,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Mapping",
   "typing.Type"
  ],
  "type": "function"
 },
 "dacite.types.is_literal": {
  "lineno": 66,
  "symbols_in_volume": [
   "typing.Literal",
   "typing.Type"
  ],
  "type": "function"
 },
 "dacite.types.is_new_type": {
  "lineno": 75,
  "symbols_in_volume": [
   "typing.Type"
  ],
  "type": "function"
 },
 "dacite.types.is_optional": {
  "lineno": 47,
  "symbols_in_volume": [
   "typing.Type"
  ],
  "type": "function"
 },
 "dacite.types.is_subclass": {
  "lineno": 164,
  "symbols_in_volume": [
   "typing.Type"
  ],
  "type": "function"
 },
 "dacite.types.is_union": {
  "lineno": 62,
  "symbols_in_volume": [
   "typing.Type",
   "typing.Union"
  ],
  "type": "function"
 },
 "dacite.types.transform_value": {
  "lineno": 7,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Callable",
   "typing.Dict",
   "typing.List",
   "typing.Type"
  ],
  "type": "function"
 }
}