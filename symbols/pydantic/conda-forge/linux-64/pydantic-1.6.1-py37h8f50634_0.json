{
 "pydantic": {
  "data": {},
  "type": "module"
 },
 "pydantic.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "pydantic.class_validators": {
  "data": {
   "symbols_in_volume": [
    "pydantic.class_validators.Validator",
    "pydantic.class_validators.ValidatorCallable",
    "set",
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Set",
    "typing.TYPE_CHECKING",
    "typing.Type"
   ]
  },
  "type": "module"
 },
 "pydantic.class_validators.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "pydantic.class_validators.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "pydantic.class_validators.ChainMap": {
  "data": {
   "shadows": "collections.ChainMap"
  },
  "type": "import"
 },
 "pydantic.class_validators.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "pydantic.class_validators.FunctionType": {
  "data": {
   "shadows": "types.FunctionType"
  },
  "type": "import"
 },
 "pydantic.class_validators.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "pydantic.class_validators.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "pydantic.class_validators.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pydantic.class_validators.ROOT_KEY": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "pydantic.class_validators.ROOT_VALIDATOR_CONFIG_KEY": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "pydantic.class_validators.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "pydantic.class_validators.Signature": {
  "data": {
   "shadows": "inspect.Signature"
  },
  "type": "import"
 },
 "pydantic.class_validators.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "pydantic.class_validators.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "pydantic.class_validators.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "pydantic.class_validators.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pydantic.class_validators.VALIDATOR_CONFIG_KEY": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "pydantic.class_validators.Validator": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "pydantic.class_validators.Validator.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "pydantic.class_validators.ValidatorCallable": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pydantic.class_validators.ValidatorGroup": {
  "data": {
   "lineno": 150
  },
  "type": "class"
 },
 "pydantic.class_validators.ValidatorGroup.__init__": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "pydantic.class_validators.ValidatorGroup.check_for_unused": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "ConfigError",
    "itertools.chain.from_iterable",
    "set"
   ]
  },
  "type": "function"
 },
 "pydantic.class_validators.ValidatorGroup.get_validators": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "pydantic.class_validators.ROOT_KEY",
    "pydantic.class_validators.Validator",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "pydantic.class_validators.ValidatorListDict": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pydantic.class_validators.ValidatorsList": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pydantic.class_validators._generic_validator_basic": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "ConfigError",
    "pydantic.class_validators.all_kwargs",
    "pydantic.class_validators.validator",
    "set",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "pydantic.class_validators._generic_validator_cls": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "ConfigError",
    "pydantic.class_validators.all_kwargs",
    "pydantic.class_validators.validator",
    "set",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "pydantic.class_validators._prepare_validator": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "ConfigError",
    "bool",
    "classmethod",
    "in_ipython",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pydantic.class_validators.all_kwargs": {
  "data": {
   "lineno": 259
  },
  "type": "constant"
 },
 "pydantic.class_validators.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "pydantic.class_validators.extract_root_validators": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "ConfigError",
    "bool",
    "getattr",
    "inspect.signature",
    "len",
    "list",
    "pydantic.class_validators.ROOT_VALIDATOR_CONFIG_KEY",
    "pydantic.class_validators.Validator",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "pydantic.class_validators.extract_validators": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "getattr",
    "pydantic.class_validators.VALIDATOR_CONFIG_KEY",
    "pydantic.class_validators.Validator",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "pydantic.class_validators.gather_all_validators": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "classmethod",
    "collections.ChainMap",
    "hasattr",
    "pydantic.class_validators.ROOT_VALIDATOR_CONFIG_KEY",
    "pydantic.class_validators.VALIDATOR_CONFIG_KEY",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "pydantic.class_validators.inherit_validators": {
  "data": {
   "lineno": 219
  },
  "type": "function"
 },
 "pydantic.class_validators.make_generic_validator": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "ConfigError",
    "_generic_validator_basic",
    "_generic_validator_cls",
    "functools.wraps",
    "inspect.signature",
    "list",
    "pydantic.class_validators.validator",
    "set"
   ]
  },
  "type": "function"
 },
 "pydantic.class_validators.overload": {
  "data": {
   "shadows": "typing.overload"
  },
  "type": "import"
 },
 "pydantic.class_validators.prep_validators": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "pydantic.class_validators.make_generic_validator",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "pydantic.class_validators.root_validator": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "_prepare_validator",
    "bool",
    "classmethod",
    "pydantic.class_validators.ROOT_VALIDATOR_CONFIG_KEY",
    "pydantic.class_validators.Validator",
    "setattr",
    "typing.Callable",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydantic.class_validators.root_validator.dec": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "_prepare_validator",
    "classmethod",
    "pydantic.class_validators.ROOT_VALIDATOR_CONFIG_KEY",
    "pydantic.class_validators.Validator",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pydantic.class_validators.signature": {
  "data": {
   "shadows": "inspect.signature"
  },
  "type": "import"
 },
 "pydantic.class_validators.validator": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ConfigError",
    "DeprecationWarning",
    "bool",
    "classmethod",
    "isinstance",
    "pydantic.class_validators.warnings",
    "str",
    "types.FunctionType",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "pydantic.class_validators.validator.dec": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "_prepare_validator",
    "classmethod",
    "pydantic.class_validators.VALIDATOR_CONFIG_KEY",
    "pydantic.class_validators.Validator",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pydantic.class_validators.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pydantic.class_validators.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "pydantic.color": {
  "data": {
   "symbols_in_volume": [
    "float",
    "int",
    "pydantic.color.COLORS_BY_NAME",
    "pydantic.color.ColorTuple",
    "pydantic.color._r_255",
    "pydantic.color._r_alpha",
    "pydantic.color._r_comma",
    "pydantic.color._r_h",
    "pydantic.color._r_sl",
    "pydantic.color.math",
    "str",
    "typing.TYPE_CHECKING",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "pydantic.color.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "pydantic.color.COLORS_BY_NAME": {
  "data": {
   "lineno": 338
  },
  "type": "constant"
 },
 "pydantic.color.COLORS_BY_VALUE": {
  "data": {
   "lineno": 488
  },
  "type": "constant"
 },
 "pydantic.color.Color": {
  "data": {
   "lineno": 63
  },
  "type": "class"
 },
 "pydantic.color.Color.__get_validators__": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pydantic.color.Color.__init__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "ColorError",
    "isinstance",
    "list",
    "parse_str",
    "parse_tuple",
    "pydantic.color.Color",
    "pydantic.color.ColorType",
    "pydantic.color.RGBA",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pydantic.color.Color.__modify_schema__": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "classmethod",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "pydantic.color.Color.__repr_args__": {
  "data": {
   "lineno": 198
  },
  "type": "function"
 },
 "pydantic.color.Color.__str__": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pydantic.color.Color._alpha_float": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "pydantic.color.Color.as_hex": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "all",
    "float_to_255",
    "len",
    "pydantic.color.repeat_colors",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pydantic.color.Color.as_hsl": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "round",
    "str"
   ]
  },
  "type": "function"
 },
 "pydantic.color.Color.as_hsl_tuple": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "bool",
    "colorsys.rgb_to_hls",
    "pydantic.color.HslColorTuple",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "pydantic.color.Color.as_named": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "bool",
    "int",
    "str",
    "typing.Tuple",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "pydantic.color.Color.as_rgb": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "float_to_255",
    "round",
    "str"
   ]
  },
  "type": "function"
 },
 "pydantic.color.Color.as_rgb_tuple": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "bool",
    "float_to_255",
    "pydantic.color.ColorTuple",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "pydantic.color.Color.original": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "pydantic.color.ColorType"
   ]
  },
  "type": "function"
 },
 "pydantic.color.ColorTuple": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pydantic.color.ColorType": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "pydantic.color.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "pydantic.color.HslColorTuple": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "pydantic.color.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pydantic.color.RGBA": {
  "data": {
   "lineno": 26
  },
  "type": "class"
 },
 "pydantic.color.RGBA.__getitem__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.color.RGBA.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "float",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "pydantic.color.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "pydantic.color.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "pydantic.color.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pydantic.color._r_255": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "pydantic.color._r_alpha": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "pydantic.color._r_comma": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "pydantic.color._r_h": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "pydantic.color._r_sl": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "pydantic.color.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "pydantic.color.float_to_255": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "float",
    "int",
    "round"
   ]
  },
  "type": "function"
 },
 "pydantic.color.hls_to_rgb": {
  "data": {
   "shadows": "colorsys.hls_to_rgb"
  },
  "type": "import"
 },
 "pydantic.color.ints_to_rgba": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "float",
    "int",
    "parse_color_value",
    "parse_float_alpha",
    "pydantic.color.RGBA",
    "str",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydantic.color.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pydantic.color.parse_color_value": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "ColorError",
    "ValueError",
    "float",
    "int",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydantic.color.parse_float_alpha": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "ColorError",
    "ValueError",
    "almost_equal_floats",
    "float",
    "int",
    "isinstance",
    "str",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydantic.color.parse_hsl": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "colorsys.hls_to_rgb",
    "float",
    "pydantic.color.RGBA",
    "pydantic.color.parse_color_value",
    "pydantic.color.rads",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "pydantic.color.parse_str": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "ColorError",
    "KeyError",
    "float",
    "int",
    "ints_to_rgba",
    "parse_float_alpha",
    "parse_hsl",
    "pydantic.color.RGBA",
    "pydantic.color.r_hex_long",
    "pydantic.color.r_hex_short",
    "pydantic.color.r_hsl",
    "pydantic.color.r_hsla",
    "pydantic.color.r_rgb",
    "pydantic.color.r_rgba",
    "pydantic.color.re",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "pydantic.color.parse_tuple": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "ColorError",
    "len",
    "parse_color_value",
    "parse_float_alpha",
    "pydantic.color.RGBA",
    "typing.Any",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "pydantic.color.r_hex_long": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "pydantic.color.r_hex_short": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "pydantic.color.r_hsl": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "pydantic.color.r_hsla": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "pydantic.color.r_rgb": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "pydantic.color.r_rgba": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "pydantic.color.rads": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "pydantic.color.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pydantic.color.repeat_colors": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "pydantic.color.rgb_to_hls": {
  "data": {
   "shadows": "colorsys.rgb_to_hls"
  },
  "type": "import"
 },
 "pydantic.dataclasses": {
  "data": {
   "symbols_in_volume": [
    "typing.TYPE_CHECKING",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "pydantic.dataclasses.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "pydantic.dataclasses.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "pydantic.dataclasses.DataclassT": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pydantic.dataclasses.DataclassType": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "bool",
    "typing.Type"
   ]
  },
  "type": "class"
 },
 "pydantic.dataclasses.DataclassType.__call__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.dataclasses.DataclassType.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.dataclasses.DataclassType.__validate__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "classmethod",
    "typing.Any",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.dataclasses.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "pydantic.dataclasses.Generator": {
  "data": {
   "shadows": "typing.Generator"
  },
  "type": "import"
 },
 "pydantic.dataclasses.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pydantic.dataclasses.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "pydantic.dataclasses.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "pydantic.dataclasses.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "pydantic.dataclasses.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pydantic.dataclasses._get_validators": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "cls.__validate__",
    "typing.Any",
    "typing.Generator",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.dataclasses._process_class": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "cls",
    "cls.__get_validators__",
    "cls.__initialised__",
    "cls.__name__",
    "cls.__post_init_original__",
    "cls.__pydantic_model__",
    "cls.__pydantic_model__.__config__.validate_assignment",
    "cls.__setattr__",
    "cls.__validate__",
    "create_model",
    "gather_all_validators",
    "getattr",
    "post_init_original",
    "pydantic.dataclasses._get_validators",
    "pydantic.dataclasses._validate_dataclass",
    "pydantic.dataclasses.dataclasses",
    "pydantic.dataclasses.setattr_validate_assignment",
    "repr",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.dataclasses._process_class._pydantic_post_init": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "object.__setattr__",
    "post_init_original",
    "post_init_post_parse",
    "typing.Any",
    "validate_model"
   ]
  },
  "type": "function"
 },
 "pydantic.dataclasses._validate_dataclass": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "DataclassTypeError",
    "cls",
    "cls.__name__",
    "dict",
    "isinstance",
    "list",
    "tuple",
    "typing.Any",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.dataclasses.dataclass": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "bool",
    "typing.Any",
    "typing.Callable",
    "typing.Optional",
    "typing.Type",
    "typing.Union",
    "wrap"
   ]
  },
  "type": "function"
 },
 "pydantic.dataclasses.dataclass.wrap": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "cls",
    "pydantic.dataclasses._process_class",
    "repr",
    "typing.Any",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.dataclasses.dataclasses": {
  "data": {
   "shadows": "dataclasses"
  },
  "type": "import"
 },
 "pydantic.dataclasses.setattr_validate_assignment": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValidationError",
    "dict",
    "object.__setattr__",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.datetime_parse": {
  "data": {
   "symbols_in_volume": [
    "bytes",
    "datetime.datetime",
    "float",
    "int",
    "pydantic.datetime_parse.re",
    "str",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "pydantic.datetime_parse.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "pydantic.datetime_parse.EPOCH": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "pydantic.datetime_parse.MS_WATERSHED": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "pydantic.datetime_parse.StrBytesIntFloat": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "pydantic.datetime_parse.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pydantic.datetime_parse.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "pydantic.datetime_parse.date_re": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "pydantic.datetime_parse.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pydantic.datetime_parse.datetime_re": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pydantic.datetime_parse.from_unix_seconds": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "abs",
    "datetime.datetime",
    "datetime.timedelta",
    "datetime.timezone.utc",
    "float",
    "int",
    "pydantic.datetime_parse.EPOCH",
    "pydantic.datetime_parse.MS_WATERSHED",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydantic.datetime_parse.get_numeric": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "float",
    "int",
    "isinstance",
    "pydantic.datetime_parse.StrBytesIntFloat",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydantic.datetime_parse.iso8601_duration_re": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "pydantic.datetime_parse.parse_date": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "ValueError",
    "bytes",
    "datetime.date",
    "datetime.datetime",
    "int",
    "isinstance",
    "pydantic.datetime_parse.StrBytesIntFloat",
    "pydantic.datetime_parse.date_re",
    "pydantic.datetime_parse.from_unix_seconds",
    "pydantic.datetime_parse.get_numeric",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydantic.datetime_parse.parse_datetime": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "ValueError",
    "bytes",
    "datetime.datetime",
    "datetime.timedelta",
    "datetime.timezone",
    "datetime.timezone.utc",
    "int",
    "isinstance",
    "len",
    "pydantic.datetime_parse.StrBytesIntFloat",
    "pydantic.datetime_parse.datetime_re",
    "pydantic.datetime_parse.from_unix_seconds",
    "pydantic.datetime_parse.get_numeric",
    "str",
    "typing.Dict",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydantic.datetime_parse.parse_duration": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "TypeError",
    "bytes",
    "datetime.timedelta",
    "float",
    "int",
    "isinstance",
    "pydantic.datetime_parse.StrBytesIntFloat",
    "pydantic.datetime_parse.iso8601_duration_re",
    "pydantic.datetime_parse.standard_duration_re",
    "str"
   ]
  },
  "type": "function"
 },
 "pydantic.datetime_parse.parse_time": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "ValueError",
    "bytes",
    "datetime.datetime.min.time",
    "datetime.time",
    "datetime.timedelta",
    "int",
    "isinstance",
    "pydantic.datetime_parse.StrBytesIntFloat",
    "pydantic.datetime_parse.get_numeric",
    "pydantic.datetime_parse.time_re",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydantic.datetime_parse.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pydantic.datetime_parse.standard_duration_re": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pydantic.datetime_parse.time": {
  "data": {
   "shadows": "datetime.time"
  },
  "type": "import"
 },
 "pydantic.datetime_parse.time_re": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pydantic.datetime_parse.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pydantic.datetime_parse.timezone": {
  "data": {
   "shadows": "datetime.timezone"
  },
  "type": "import"
 },
 "pydantic.decorator": {
  "data": {
   "symbols_in_volume": [
    "typing.TYPE_CHECKING",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "pydantic.decorator.ALT_V_ARGS": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pydantic.decorator.ALT_V_KWARGS": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pydantic.decorator.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "pydantic.decorator.Callable": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pydantic.decorator.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "pydantic.decorator.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "pydantic.decorator.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "pydantic.decorator.Parameter": {
  "data": {
   "shadows": "inspect.Parameter"
  },
  "type": "import"
 },
 "pydantic.decorator.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "pydantic.decorator.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "pydantic.decorator.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "pydantic.decorator.V_POSITIONAL_ONLY_NAME": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pydantic.decorator.ValidatedFunction": {
  "data": {
   "lineno": 38
  },
  "type": "class"
 },
 "pydantic.decorator.ValidatedFunction.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ConfigError",
    "enumerate",
    "inspect.Parameter",
    "inspect.Parameter.KEYWORD_ONLY",
    "inspect.Parameter.POSITIONAL_ONLY",
    "inspect.Parameter.POSITIONAL_OR_KEYWORD",
    "inspect.Parameter.VAR_KEYWORD",
    "inspect.Parameter.VAR_POSITIONAL",
    "inspect.signature",
    "int",
    "pydantic.decorator.ALT_V_ARGS",
    "pydantic.decorator.ALT_V_KWARGS",
    "pydantic.decorator.V_POSITIONAL_ONLY_NAME",
    "pydantic.decorator.validate_arguments",
    "set",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Mapping",
    "typing.Tuple",
    "typing.get_type_hints"
   ]
  },
  "type": "function"
 },
 "pydantic.decorator.ValidatedFunction.build_values": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "StopIteration",
    "enumerate",
    "next",
    "pydantic.decorator.V_POSITIONAL_ONLY_NAME",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "pydantic.decorator.ValidatedFunction.call": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.decorator.ValidatedFunction.create_model": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "bool",
    "create_model",
    "len",
    "str",
    "to_camel",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "pydantic.decorator.ValidatedFunction.create_model.DecoratorBaseModel": {
  "data": {
   "lineno": 176
  },
  "type": "class"
 },
 "pydantic.decorator.ValidatedFunction.create_model.DecoratorBaseModel.Config": {
  "data": {
   "lineno": 199
  },
  "type": "class"
 },
 "pydantic.decorator.ValidatedFunction.create_model.DecoratorBaseModel.check_args": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "typing.Any",
    "typing.List",
    "validator"
   ]
  },
  "type": "function"
 },
 "pydantic.decorator.ValidatedFunction.create_model.DecoratorBaseModel.check_kwargs": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "map",
    "repr",
    "str",
    "typing.Any",
    "typing.Dict",
    "validator"
   ]
  },
  "type": "function"
 },
 "pydantic.decorator.ValidatedFunction.create_model.DecoratorBaseModel.check_positional_only": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "map",
    "pydantic.decorator.V_POSITIONAL_ONLY_NAME",
    "repr",
    "str",
    "typing.List",
    "validator"
   ]
  },
  "type": "function"
 },
 "pydantic.decorator.ValidatedFunction.execute": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "typing.Any",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "pydantic.decorator.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "pydantic.decorator.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "pydantic.decorator.get_type_hints": {
  "data": {
   "shadows": "typing.get_type_hints"
  },
  "type": "import"
 },
 "pydantic.decorator.signature": {
  "data": {
   "shadows": "inspect.signature"
  },
  "type": "import"
 },
 "pydantic.decorator.validate_arguments": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ValidatedFunction",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "pydantic.decorator.validate_arguments.wrapper_function": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "functools.wraps",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.decorator.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "pydantic.env_settings": {
  "data": {
   "symbols_in_volume": [
    "object",
    "str"
   ]
  },
  "type": "module"
 },
 "pydantic.env_settings.AbstractSet": {
  "data": {
   "shadows": "typing.AbstractSet"
  },
  "type": "import"
 },
 "pydantic.env_settings.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "pydantic.env_settings.BaseSettings": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "pydantic.env_settings.BaseSettings.Config": {
  "data": {
   "lineno": 88
  },
  "type": "class"
 },
 "pydantic.env_settings.BaseSettings.Config.prepare_field": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "FutureWarning",
    "TypeError",
    "classmethod",
    "display_as_type",
    "frozenset",
    "isinstance",
    "list",
    "pydantic.env_settings.warnings",
    "sequence_like",
    "set",
    "str",
    "typing.AbstractSet",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydantic.env_settings.BaseSettings.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "pathlib.Path",
    "pydantic.env_settings.env_file_sentinel",
    "str",
    "super",
    "typing.Any",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydantic.env_settings.BaseSettings._build_environ": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ValueError",
    "pathlib.Path",
    "pydantic.env_settings.SettingsError",
    "pydantic.env_settings.env_file_sentinel",
    "pydantic.env_settings.os",
    "read_env_file",
    "str",
    "typing.Dict",
    "typing.Mapping",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydantic.env_settings.BaseSettings._build_values": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "deep_update",
    "pathlib.Path",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydantic.env_settings.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "pydantic.env_settings.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "pydantic.env_settings.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "pydantic.env_settings.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pydantic.env_settings.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "pydantic.env_settings.SettingsError": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "pydantic.env_settings.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pydantic.env_settings.dotenv_values": {
  "data": {
   "shadows": "dotenv.dotenv_values"
  },
  "type": "import"
 },
 "pydantic.env_settings.env_file_sentinel": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "pydantic.env_settings.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pydantic.env_settings.read_env_file": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "ImportError",
    "bool",
    "dotenv.dotenv_values",
    "pathlib.Path",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "pydantic.env_settings.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pydantic.error_wrappers": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "int",
    "pydantic.error_wrappers.ErrorWrapper",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Sequence",
    "typing.TYPE_CHECKING",
    "typing.Tuple",
    "typing.Type",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "pydantic.error_wrappers.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "pydantic.error_wrappers.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "pydantic.error_wrappers.ErrorList": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pydantic.error_wrappers.ErrorWrapper": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "pydantic.error_wrappers.ErrorWrapper.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "Exception",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydantic.error_wrappers.ErrorWrapper.__repr_args__": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "pydantic.error_wrappers.ErrorWrapper.loc_tuple": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pydantic.error_wrappers.Generator": {
  "data": {
   "shadows": "typing.Generator"
  },
  "type": "import"
 },
 "pydantic.error_wrappers.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "pydantic.error_wrappers.Loc": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pydantic.error_wrappers.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pydantic.error_wrappers.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "pydantic.error_wrappers.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "pydantic.error_wrappers.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "pydantic.error_wrappers.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "pydantic.error_wrappers.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pydantic.error_wrappers.ValidationError": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "pydantic.error_wrappers.ValidationError.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "pydantic.error_wrappers.ErrorList",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "pydantic.error_wrappers.ValidationError.__repr_args__": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "pydantic.error_wrappers.ValidationError.__str__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "display_errors",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "pydantic.error_wrappers.ValidationError.errors": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "AttributeError",
    "flatten_errors",
    "list",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "pydantic.error_wrappers.ValidationError.json": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "int",
    "pydantic.error_wrappers.json",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydantic.error_wrappers.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pydantic.error_wrappers._display_error_loc": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "pydantic.error_wrappers._display_error_type_and_ctx": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "pydantic.error_wrappers._get_exc_type": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "AssertionError",
    "Exception",
    "TypeError",
    "ValueError",
    "getattr",
    "issubclass",
    "str",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.error_wrappers.display_errors": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "_display_error_loc",
    "_display_error_type_and_ctx",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "pydantic.error_wrappers.error_dict": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "Exception",
    "get_exc_type",
    "getattr",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.error_wrappers.flatten_errors": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "RuntimeError",
    "error_dict",
    "isinstance",
    "list",
    "pydantic.error_wrappers.ErrorWrapper",
    "pydantic.error_wrappers.ValidationError",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Generator",
    "typing.Optional",
    "typing.Sequence",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.error_wrappers.get_exc_type": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "_get_exc_type",
    "str",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.error_wrappers.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pydantic.errors": {
  "data": {
   "symbols_in_volume": [
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "pydantic.errors.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "pydantic.errors.AnyStrMaxLengthError": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "pydantic.errors.PydanticValueError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.AnyStrMaxLengthError.__init__": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "pydantic.errors.AnyStrMinLengthError": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "pydantic.errors.PydanticValueError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.AnyStrMinLengthError.__init__": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "pydantic.errors.ArbitraryTypeError": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "pydantic.errors.PydanticTypeError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.ArbitraryTypeError.__init__": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "display_as_type",
    "super",
    "typing.Any",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.errors.BoolError": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "pydantic.errors.PydanticTypeError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.BytesError": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "pydantic.errors.PydanticTypeError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "pydantic.errors.CallableError": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "pydantic.errors.PydanticTypeError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.ClassError": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "pydantic.errors.PydanticTypeError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.ColorError": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "pydantic.errors.PydanticValueError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.ConfigError": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.DataclassTypeError": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "pydantic.errors.PydanticTypeError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.DateError": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "pydantic.errors.PydanticValueError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.DateTimeError": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "pydantic.errors.PydanticValueError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.Decimal": {
  "data": {
   "shadows": "decimal.Decimal"
  },
  "type": "import"
 },
 "pydantic.errors.DecimalError": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "pydantic.errors.PydanticTypeError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.DecimalIsNotFiniteError": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "pydantic.errors.PydanticValueError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.DecimalMaxDigitsError": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "pydantic.errors.PydanticValueError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.DecimalMaxDigitsError.__init__": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "pydantic.errors.DecimalMaxPlacesError": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "pydantic.errors.PydanticValueError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.DecimalMaxPlacesError.__init__": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "pydantic.errors.DecimalWholeDigitsError": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "pydantic.errors.PydanticValueError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.DecimalWholeDigitsError.__init__": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "pydantic.errors.DictError": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "pydantic.errors.PydanticTypeError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.DurationError": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "pydantic.errors.PydanticValueError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.EmailError": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "pydantic.errors.PydanticValueError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.EnumError": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "pydantic.errors.PydanticTypeError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.EnumError.__str__": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "pydantic.errors.ExtraError": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "pydantic.errors.PydanticValueError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.FloatError": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "pydantic.errors.PydanticTypeError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.FrozenSetError": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "pydantic.errors.PydanticTypeError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.HashableError": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "pydantic.errors.PydanticTypeError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.IPv4AddressError": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "pydantic.errors.PydanticValueError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.IPv4InterfaceError": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "pydantic.errors.PydanticValueError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.IPv4NetworkError": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "pydantic.errors.PydanticValueError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.IPv6AddressError": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "pydantic.errors.PydanticValueError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.IPv6InterfaceError": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "pydantic.errors.PydanticValueError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.IPv6NetworkError": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "pydantic.errors.PydanticValueError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.IPvAnyAddressError": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "pydantic.errors.PydanticValueError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.IPvAnyInterfaceError": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "pydantic.errors.PydanticValueError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.IPvAnyNetworkError": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "pydantic.errors.PydanticValueError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.IntegerError": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "pydantic.errors.PydanticTypeError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.InvalidByteSize": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "pydantic.errors.PydanticValueError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.InvalidByteSizeUnit": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "pydantic.errors.PydanticValueError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.InvalidLengthForBrand": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "pydantic.errors.PydanticValueError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.IterableError": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "pydantic.errors.PydanticTypeError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.JsonError": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "pydantic.errors.PydanticValueError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.JsonTypeError": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "pydantic.errors.PydanticTypeError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.ListError": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "pydantic.errors.PydanticTypeError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.ListMaxLengthError": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "pydantic.errors.PydanticValueError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.ListMaxLengthError.__init__": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "pydantic.errors.ListMinLengthError": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "pydantic.errors.PydanticValueError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.ListMinLengthError.__init__": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "pydantic.errors.LuhnValidationError": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "pydantic.errors.PydanticValueError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.MissingError": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "pydantic.errors.PydanticValueError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.NoneIsAllowedError": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "pydantic.errors.PydanticTypeError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.NoneIsNotAllowedError": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "pydantic.errors.PydanticTypeError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.NotDigitError": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "pydantic.errors.PydanticValueError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.NumberNotGeError": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "pydantic.errors._NumberBoundError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.NumberNotGtError": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "pydantic.errors._NumberBoundError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.NumberNotLeError": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "pydantic.errors._NumberBoundError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.NumberNotLtError": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "pydantic.errors._NumberBoundError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.NumberNotMultipleError": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "pydantic.errors.PydanticValueError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.NumberNotMultipleError.__init__": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "decimal.Decimal",
    "float",
    "int",
    "super",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydantic.errors.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "pydantic.errors.PathError": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "pydantic.errors.PydanticTypeError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.PathNotADirectoryError": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "pydantic.errors._PathValueError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.PathNotAFileError": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "pydantic.errors._PathValueError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.PathNotExistsError": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "pydantic.errors._PathValueError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.PatternError": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "pydantic.errors.PydanticValueError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.PyObjectError": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "pydantic.errors.PydanticTypeError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.PydanticErrorMixin": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.PydanticErrorMixin.__init__": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.errors.PydanticErrorMixin.__reduce__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "pydantic.errors.cls_kwargs",
    "typing.Callable",
    "typing.Tuple",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.errors.PydanticErrorMixin.__str__": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pydantic.errors.PydanticTypeError": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "TypeError",
    "pydantic.errors.PydanticErrorMixin"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.PydanticValueError": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "ValueError",
    "pydantic.errors.PydanticErrorMixin"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.SequenceError": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "pydantic.errors.PydanticTypeError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "pydantic.errors.SetError": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "pydantic.errors.PydanticTypeError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.SetMaxLengthError": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "pydantic.errors.PydanticValueError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.SetMaxLengthError.__init__": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "pydantic.errors.SetMinLengthError": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "pydantic.errors.PydanticValueError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.SetMinLengthError.__init__": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "pydantic.errors.StrError": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "pydantic.errors.PydanticTypeError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.StrRegexError": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "pydantic.errors.PydanticValueError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.StrRegexError.__init__": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "pydantic.errors.StrictBoolError": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "pydantic.errors.PydanticValueError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.SubclassError": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "pydantic.errors.PydanticTypeError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.SubclassError.__init__": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "display_as_type",
    "super",
    "typing.Any",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.errors.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "pydantic.errors.TimeError": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "pydantic.errors.PydanticValueError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "pydantic.errors.TupleError": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "pydantic.errors.PydanticTypeError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.TupleLengthError": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "pydantic.errors.PydanticValueError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.TupleLengthError.__init__": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "pydantic.errors.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "pydantic.errors.UUIDError": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "pydantic.errors.PydanticTypeError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.UUIDVersionError": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "pydantic.errors.PydanticValueError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.UUIDVersionError.__init__": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "pydantic.errors.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pydantic.errors.UrlError": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "pydantic.errors.PydanticValueError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.UrlExtraError": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "pydantic.errors.UrlError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.UrlHostError": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "pydantic.errors.UrlError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.UrlHostTldError": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "pydantic.errors.UrlError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.UrlPortError": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "pydantic.errors.UrlError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.UrlSchemeError": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "pydantic.errors.UrlError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.UrlSchemePermittedError": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "pydantic.errors.UrlError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.UrlSchemePermittedError.__init__": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "str",
    "super",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "pydantic.errors.UrlUserInfoError": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "pydantic.errors.UrlError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.WrongConstantError": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "pydantic.errors.PydanticValueError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors.WrongConstantError.__str__": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "pydantic.errors._NumberBoundError": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "pydantic.errors.PydanticValueError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors._NumberBoundError.__init__": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "decimal.Decimal",
    "float",
    "int",
    "super",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydantic.errors._PathValueError": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "pydantic.errors.PydanticValueError"
   ]
  },
  "type": "class"
 },
 "pydantic.errors._PathValueError.__init__": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "pathlib.Path",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "pydantic.errors.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "pydantic.errors.cls_kwargs": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "cls",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.fields": {
  "data": {
   "symbols_in_volume": [
    "Ellipsis",
    "bool",
    "int",
    "pydantic.fields.SHAPE_FROZENSET",
    "pydantic.fields.SHAPE_ITERABLE",
    "pydantic.fields.SHAPE_LIST",
    "pydantic.fields.SHAPE_SEQUENCE",
    "pydantic.fields.SHAPE_SET",
    "pydantic.fields.SHAPE_TUPLE_ELLIPSIS",
    "pydantic.fields.UndefinedType",
    "str",
    "typing.Any",
    "typing.Optional",
    "typing.TYPE_CHECKING",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "pydantic.fields.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "pydantic.fields.BoolUndefined": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "pydantic.fields.CollectionsIterable": {
  "data": {
   "shadows": "collections.abc.Iterable"
  },
  "type": "import"
 },
 "pydantic.fields.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "pydantic.fields.Field": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "float",
    "int",
    "pydantic.fields.FieldInfo",
    "pydantic.fields.Undefined",
    "str",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "pydantic.fields.FieldInfo": {
  "data": {
   "lineno": 64
  },
  "type": "class"
 },
 "pydantic.fields.FieldInfo.__init__": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "pydantic.fields.Undefined",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.fields.FrozenSet": {
  "data": {
   "shadows": "typing.FrozenSet"
  },
  "type": "import"
 },
 "pydantic.fields.Generator": {
  "data": {
   "shadows": "typing.Generator"
  },
  "type": "import"
 },
 "pydantic.fields.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "pydantic.fields.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "pydantic.fields.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "pydantic.fields.LocStr": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "pydantic.fields.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "pydantic.fields.ModelField": {
  "data": {
   "lineno": 211
  },
  "type": "class"
 },
 "pydantic.fields.ModelField.__init__": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "bool",
    "int",
    "pydantic.fields.FieldInfo",
    "pydantic.fields.ModelField",
    "pydantic.fields.SHAPE_SINGLETON",
    "pydantic.fields.Undefined",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.fields.ModelField.__repr_args__": {
  "data": {
   "lineno": 775
  },
  "type": "function"
 },
 "pydantic.fields.ModelField._apply_validators": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "AssertionError",
    "ErrorWrapper",
    "TypeError",
    "ValueError",
    "cls",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional",
    "validator"
   ]
  },
  "type": "function"
 },
 "pydantic.fields.ModelField._create_sub_type": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Any",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.fields.ModelField._set_default_and_type": {
  "data": {
   "lineno": 353
  },
  "type": "function"
 },
 "pydantic.fields.ModelField._type_analysis": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "Ellipsis",
    "TypeError",
    "Validator",
    "collections.abc.Iterable",
    "display_as_type",
    "enumerate",
    "get_validators",
    "getattr",
    "hasattr",
    "is_literal_type",
    "is_new_type",
    "isinstance",
    "issubclass",
    "len",
    "lenient_issubclass",
    "new_type_supertype",
    "pydantic.fields.SHAPE_FROZENSET",
    "pydantic.fields.SHAPE_GENERIC",
    "pydantic.fields.SHAPE_ITERABLE",
    "pydantic.fields.SHAPE_LIST",
    "pydantic.fields.SHAPE_MAPPING",
    "pydantic.fields.SHAPE_SEQUENCE",
    "pydantic.fields.SHAPE_SET",
    "pydantic.fields.SHAPE_TUPLE",
    "pydantic.fields.SHAPE_TUPLE_ELLIPSIS",
    "pydantic.fields.Undefined",
    "type",
    "typing.Any",
    "typing.FrozenSet",
    "typing.Iterable",
    "typing.List",
    "typing.Mapping",
    "typing.Pattern",
    "typing.Sequence",
    "typing.Set",
    "typing.Tuple",
    "typing.Type",
    "typing.TypeVar",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydantic.fields.ModelField._type_display": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "PyObjectStr",
    "display_as_type",
    "pydantic.fields.SHAPE_GENERIC",
    "pydantic.fields.SHAPE_MAPPING",
    "pydantic.fields.SHAPE_NAME_LOOKUP",
    "pydantic.fields.SHAPE_SINGLETON",
    "pydantic.fields.SHAPE_TUPLE"
   ]
  },
  "type": "function"
 },
 "pydantic.fields.ModelField._validate_iterable": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "ErrorWrapper",
    "TypeError",
    "iter",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "pydantic.fields.ModelField._validate_mapping": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "ErrorWrapper",
    "TypeError",
    "cls",
    "dict_validator",
    "isinstance",
    "str",
    "tuple",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "pydantic.fields.ModelField._validate_sequence_like": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "ErrorWrapper",
    "cls",
    "enumerate",
    "frozenset",
    "isinstance",
    "iter",
    "pydantic.fields.SHAPE_FROZENSET",
    "pydantic.fields.SHAPE_LIST",
    "pydantic.fields.SHAPE_SEQUENCE",
    "pydantic.fields.SHAPE_SET",
    "pydantic.fields.SHAPE_TUPLE_ELLIPSIS",
    "sequence_like",
    "set",
    "str",
    "tuple",
    "typing.Any",
    "typing.Dict",
    "typing.FrozenSet",
    "typing.Generator",
    "typing.Iterator",
    "typing.List",
    "typing.Optional",
    "typing.Set",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydantic.fields.ModelField._validate_singleton": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "cls",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "pydantic.fields.ModelField._validate_tuple": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "ErrorWrapper",
    "Exception",
    "cls",
    "enumerate",
    "isinstance",
    "len",
    "sequence_like",
    "str",
    "tuple",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "zip"
   ]
  },
  "type": "function"
 },
 "pydantic.fields.ModelField.alt_alias": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "pydantic.fields.ModelField.get_default": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "copy.deepcopy",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.fields.ModelField.include_in_schema": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "pydantic.fields.ModelField.infer": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "get_annotation_from_field_info",
    "isinstance",
    "pydantic.fields.FieldInfo",
    "pydantic.fields.Undefined",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.fields.ModelField.is_complex": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "bool",
    "dict",
    "frozenset",
    "hasattr",
    "lenient_issubclass",
    "list",
    "pydantic.fields.SHAPE_SINGLETON",
    "set"
   ]
  },
  "type": "function"
 },
 "pydantic.fields.ModelField.populate_validators": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "any",
    "find_validators",
    "get_validators",
    "getattr",
    "list",
    "make_generic_validator",
    "prep_validators",
    "pydantic.fields.SHAPE_GENERIC"
   ]
  },
  "type": "function"
 },
 "pydantic.fields.ModelField.prepare": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "pydantic.fields.Undefined"
   ]
  },
  "type": "function"
 },
 "pydantic.fields.ModelField.set_config": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.fields.ModelField.validate": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "ErrorWrapper",
    "NoneIsNotAllowedError",
    "cls",
    "pydantic.fields.SHAPE_GENERIC",
    "pydantic.fields.SHAPE_ITERABLE",
    "pydantic.fields.SHAPE_MAPPING",
    "pydantic.fields.SHAPE_SINGLETON",
    "pydantic.fields.SHAPE_TUPLE",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "pydantic.fields.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pydantic.fields.Pattern": {
  "data": {
   "shadows": "typing.Pattern"
  },
  "type": "import"
 },
 "pydantic.fields.SHAPE_FROZENSET": {
  "data": {
   "lineno": 198
  },
  "type": "constant"
 },
 "pydantic.fields.SHAPE_GENERIC": {
  "data": {
   "lineno": 200
  },
  "type": "constant"
 },
 "pydantic.fields.SHAPE_ITERABLE": {
  "data": {
   "lineno": 199
  },
  "type": "constant"
 },
 "pydantic.fields.SHAPE_LIST": {
  "data": {
   "lineno": 192
  },
  "type": "constant"
 },
 "pydantic.fields.SHAPE_MAPPING": {
  "data": {
   "lineno": 194
  },
  "type": "constant"
 },
 "pydantic.fields.SHAPE_NAME_LOOKUP": {
  "data": {
   "lineno": 201
  },
  "type": "constant"
 },
 "pydantic.fields.SHAPE_SEQUENCE": {
  "data": {
   "lineno": 197
  },
  "type": "constant"
 },
 "pydantic.fields.SHAPE_SET": {
  "data": {
   "lineno": 193
  },
  "type": "constant"
 },
 "pydantic.fields.SHAPE_SINGLETON": {
  "data": {
   "lineno": 191
  },
  "type": "constant"
 },
 "pydantic.fields.SHAPE_TUPLE": {
  "data": {
   "lineno": 195
  },
  "type": "constant"
 },
 "pydantic.fields.SHAPE_TUPLE_ELLIPSIS": {
  "data": {
   "lineno": 196
  },
  "type": "constant"
 },
 "pydantic.fields.Schema": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "DeprecationWarning",
    "pydantic.fields.Field",
    "pydantic.fields.warnings",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.fields.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "pydantic.fields.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "pydantic.fields.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "pydantic.fields.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "pydantic.fields.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "pydantic.fields.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "pydantic.fields.Undefined": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "pydantic.fields.UndefinedType": {
  "data": {
   "lineno": 45
  },
  "type": "class"
 },
 "pydantic.fields.UndefinedType.__repr__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pydantic.fields.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pydantic.fields.ValidateReturn": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "pydantic.fields.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "pydantic.fields.errors_": {
  "data": {
   "shadows": "errors"
  },
  "type": "import"
 },
 "pydantic.fields.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pydantic.generics": {
  "data": {
   "symbols_in_volume": [
    "typing.Any",
    "typing.Dict",
    "typing.Tuple",
    "typing.Type",
    "typing.TypeVar",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "pydantic.generics.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "pydantic.generics.ClassVar": {
  "data": {
   "shadows": "typing.ClassVar"
  },
  "type": "import"
 },
 "pydantic.generics.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "pydantic.generics.GenericModel": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "bool",
    "pydantic.generics.TypeVarType",
    "typing.ClassVar",
    "typing.TYPE_CHECKING",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "pydantic.generics.GenericModel.__class_getitem__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "TypeError",
    "_build_generic_fields",
    "_is_typevar",
    "all",
    "any",
    "check_parameters_count",
    "create_model",
    "dict",
    "gather_all_validators",
    "getattr",
    "hasattr",
    "isinstance",
    "len",
    "pydantic.generics.GenericModel",
    "pydantic.generics.GenericModelT",
    "pydantic.generics.TypeVarType",
    "resolve_type_hint",
    "str",
    "tuple",
    "typing.Any",
    "typing.ClassVar",
    "typing.Dict",
    "typing.Tuple",
    "typing.Type",
    "typing.TypeVar",
    "typing.Union",
    "typing.cast",
    "typing.get_type_hints",
    "zip"
   ]
  },
  "type": "function"
 },
 "pydantic.generics.GenericModel.__concrete_name__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "classmethod",
    "hasattr",
    "str",
    "typing.Any",
    "typing.Tuple",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.generics.GenericModelT": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "pydantic.generics.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "pydantic.generics.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "pydantic.generics.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "pydantic.generics.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "pydantic.generics.TypeVarType": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "pydantic.generics.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pydantic.generics._build_generic_fields": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "_parameterize_generic_field",
    "pydantic.generics.TypeVarType",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Tuple",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.generics._is_typevar": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "typing.Any",
    "typing.TypeVar"
   ]
  },
  "type": "function"
 },
 "pydantic.generics._parameterize_generic_field": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "lenient_issubclass",
    "pydantic.generics.GenericModel",
    "pydantic.generics.TypeVarType",
    "tuple",
    "typing.Any",
    "typing.Dict",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.generics.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "pydantic.generics.check_parameters_count": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "pydantic.generics.GenericModel",
    "typing.Any",
    "typing.Tuple",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.generics.get_type_hints": {
  "data": {
   "shadows": "typing.get_type_hints"
  },
  "type": "import"
 },
 "pydantic.generics.resolve_type_hint": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "tuple",
    "typing.Any",
    "typing.Dict",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.json": {
  "data": {
   "symbols_in_volume": [
    "bytes",
    "decimal.Decimal",
    "enum.Enum",
    "float",
    "frozenset",
    "ipaddress.IPv4Address",
    "ipaddress.IPv4Interface",
    "ipaddress.IPv4Network",
    "ipaddress.IPv6Address",
    "ipaddress.IPv6Interface",
    "ipaddress.IPv6Network",
    "list",
    "pathlib.Path",
    "pydantic.json.datetime",
    "pydantic.json.isoformat",
    "set",
    "str",
    "types.GeneratorType",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.Type",
    "uuid.UUID"
   ]
  },
  "type": "module"
 },
 "pydantic.json.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "pydantic.json.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "pydantic.json.Decimal": {
  "data": {
   "shadows": "decimal.Decimal"
  },
  "type": "import"
 },
 "pydantic.json.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "pydantic.json.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "pydantic.json.GeneratorType": {
  "data": {
   "shadows": "types.GeneratorType"
  },
  "type": "import"
 },
 "pydantic.json.IPv4Address": {
  "data": {
   "shadows": "ipaddress.IPv4Address"
  },
  "type": "import"
 },
 "pydantic.json.IPv4Interface": {
  "data": {
   "shadows": "ipaddress.IPv4Interface"
  },
  "type": "import"
 },
 "pydantic.json.IPv4Network": {
  "data": {
   "shadows": "ipaddress.IPv4Network"
  },
  "type": "import"
 },
 "pydantic.json.IPv6Address": {
  "data": {
   "shadows": "ipaddress.IPv6Address"
  },
  "type": "import"
 },
 "pydantic.json.IPv6Interface": {
  "data": {
   "shadows": "ipaddress.IPv6Interface"
  },
  "type": "import"
 },
 "pydantic.json.IPv6Network": {
  "data": {
   "shadows": "ipaddress.IPv6Network"
  },
  "type": "import"
 },
 "pydantic.json.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "pydantic.json.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "pydantic.json.UUID": {
  "data": {
   "shadows": "uuid.UUID"
  },
  "type": "import"
 },
 "pydantic.json.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pydantic.json.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pydantic.json.asdict": {
  "data": {
   "shadows": "dataclasses.asdict"
  },
  "type": "import"
 },
 "pydantic.json.custom_pydantic_encoder": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "KeyError",
    "encoder",
    "pydantic.json.pydantic_encoder",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.json.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pydantic.json.is_dataclass": {
  "data": {
   "shadows": "dataclasses.is_dataclass"
  },
  "type": "import"
 },
 "pydantic.json.isoformat": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "pydantic.json.datetime",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydantic.json.pydantic_encoder": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "dataclasses.asdict",
    "dataclasses.is_dataclass",
    "encoder",
    "isinstance",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.json.timedelta_isoformat": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "divmod",
    "pydantic.json.datetime",
    "str"
   ]
  },
  "type": "function"
 },
 "pydantic.main": {
  "data": {
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "bool",
    "classmethod",
    "object",
    "property",
    "pydantic.main.cython",
    "staticmethod",
    "type",
    "types.FunctionType",
    "typing.Callable",
    "typing.TYPE_CHECKING",
    "typing.Type",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "pydantic.main.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "pydantic.main.AbstractSet": {
  "data": {
   "shadows": "typing.AbstractSet"
  },
  "type": "import"
 },
 "pydantic.main.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "pydantic.main.BaseConfig": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "bool",
    "pydantic.main.Extra",
    "pydantic.main.json",
    "str",
    "type",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.Optional",
    "typing.Tuple",
    "typing.Type",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "pydantic.main.BaseConfig.get_field_info": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "TypeError",
    "classmethod",
    "dict",
    "isinstance",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "pydantic.main.BaseConfig.prepare_field": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pydantic.main.BaseModel": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "__doc__",
    "bool",
    "pydantic.main.BaseConfig",
    "pydantic.main.ModelMetaclass",
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.List",
    "typing.TYPE_CHECKING",
    "typing.Tuple",
    "typing.Type"
   ]
  },
  "type": "class"
 },
 "pydantic.main.BaseModel.__eq__": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "pydantic.main.BaseModel",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.main.BaseModel.__get_validators__": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "classmethod",
    "cls.validate"
   ]
  },
  "type": "function"
 },
 "pydantic.main.BaseModel.__getstate__": {
  "data": {
   "lineno": 365
  },
  "type": "function"
 },
 "pydantic.main.BaseModel.__init__": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "object.__setattr__",
    "set",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.TYPE_CHECKING",
    "validate_model"
   ]
  },
  "type": "function"
 },
 "pydantic.main.BaseModel.__iter__": {
  "data": {
   "lineno": 679
  },
  "type": "function"
 },
 "pydantic.main.BaseModel.__repr_args__": {
  "data": {
   "lineno": 768
  },
  "type": "function"
 },
 "pydantic.main.BaseModel.__setattr__": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "TypeError",
    "ValidationError",
    "ValueError",
    "pydantic.main.Extra",
    "typing.no_type_check"
   ]
  },
  "type": "function"
 },
 "pydantic.main.BaseModel.__setstate__": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "object.__setattr__"
   ]
  },
  "type": "function"
 },
 "pydantic.main.BaseModel.__values__": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "DeprecationWarning",
    "property",
    "pydantic.main.warnings"
   ]
  },
  "type": "function"
 },
 "pydantic.main.BaseModel._calculate_keys": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "str",
    "typing.AbstractSet",
    "typing.Mapping",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydantic.main.BaseModel._decompose_class": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "classmethod",
    "cls.__config__.getter_dict",
    "typing.Any",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.main.BaseModel._get_value": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "ValueItems",
    "bool",
    "classmethod",
    "cls._get_value",
    "dict",
    "enumerate",
    "isinstance",
    "pydantic.main.BaseModel",
    "sequence_like",
    "typing.Any",
    "typing.Optional",
    "typing.Union",
    "typing.no_type_check"
   ]
  },
  "type": "function"
 },
 "pydantic.main.BaseModel._iter": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "ValueItems",
    "bool",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydantic.main.BaseModel.construct": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "cls.__field_defaults__",
    "cls.__new__",
    "copy.deepcopy",
    "object.__setattr__",
    "set",
    "typing.Any",
    "typing.Optional",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.main.BaseModel.copy": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "bool",
    "cls",
    "cls.__new__",
    "copy.deepcopy",
    "dict",
    "object.__setattr__",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydantic.main.BaseModel.dict": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "DeprecationWarning",
    "bool",
    "dict",
    "pydantic.main.warnings",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydantic.main.BaseModel.fields": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "DeprecationWarning",
    "property",
    "pydantic.main.warnings",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "pydantic.main.BaseModel.from_orm": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "ConfigError",
    "classmethod",
    "cls",
    "cls.__config__.orm_mode",
    "cls.__new__",
    "cls._decompose_class",
    "object.__setattr__",
    "typing.Any",
    "typing.Type",
    "validate_model"
   ]
  },
  "type": "function"
 },
 "pydantic.main.BaseModel.json": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "DeprecationWarning",
    "bool",
    "pydantic.main.warnings",
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.Optional",
    "typing.Union",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "pydantic.main.BaseModel.parse_file": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "cls.__config__.json_loads",
    "cls.parse_obj",
    "load_file",
    "pathlib.Path",
    "str",
    "typing.Type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydantic.main.BaseModel.parse_obj": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "ErrorWrapper",
    "TypeError",
    "ValidationError",
    "ValueError",
    "classmethod",
    "cls",
    "dict",
    "isinstance",
    "typing.Any",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.main.BaseModel.parse_raw": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "ErrorWrapper",
    "TypeError",
    "UnicodeDecodeError",
    "ValidationError",
    "ValueError",
    "bool",
    "classmethod",
    "cls",
    "cls.__config__.json_loads",
    "cls.parse_obj",
    "load_str_bytes",
    "str",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.main.BaseModel.schema": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "cls",
    "cls.__schema_cache__",
    "cls.__schema_cache__.get",
    "model_schema"
   ]
  },
  "type": "function"
 },
 "pydantic.main.BaseModel.schema_json": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "cls.__config__.json_dumps",
    "cls.schema",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.main.BaseModel.to_string": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "DeprecationWarning",
    "bool",
    "pydantic.main.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "pydantic.main.BaseModel.update_forward_refs": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "cls.__fields__.values",
    "cls.__module__.__dict__.copy",
    "cls.__name__",
    "pydantic.main.sys",
    "typing.Any",
    "update_field_forward_refs"
   ]
  },
  "type": "function"
 },
 "pydantic.main.BaseModel.validate": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "DictError",
    "TypeError",
    "ValueError",
    "classmethod",
    "cls",
    "cls.__config__.orm_mode",
    "cls.__custom_root_type__",
    "cls.from_orm",
    "cls.parse_obj",
    "dict",
    "isinstance",
    "typing.Any",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.main.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "pydantic.main.ConfigType": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "pydantic.main.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "pydantic.main.EXTRA_LINK": {
  "data": {
   "lineno": 155
  },
  "type": "constant"
 },
 "pydantic.main.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "pydantic.main.Extra": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "enum.Enum",
    "str"
   ]
  },
  "type": "class"
 },
 "pydantic.main.FunctionType": {
  "data": {
   "shadows": "types.FunctionType"
  },
  "type": "import"
 },
 "pydantic.main.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "pydantic.main.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "pydantic.main.Model": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "pydantic.main.ModelMetaclass": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "pydantic.main.ModelMetaclass.__new__": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "ClassAttribute",
    "TypeError",
    "ValidatorGroup",
    "copy.deepcopy",
    "extract_root_validators",
    "extract_validators",
    "functools.partial",
    "generate_model_signature",
    "getattr",
    "inherit_validators",
    "is_classvar",
    "isinstance",
    "issubclass",
    "lenient_issubclass",
    "pydantic.main.BaseConfig",
    "pydantic.main.UNTOUCHED_TYPES",
    "pydantic.main._is_base_model_class_defined",
    "pydantic.main.inherit_config",
    "pydantic.main.is_valid_field",
    "pydantic.main.prepare_config",
    "pydantic.main.validate_custom_root_type",
    "resolve_annotations",
    "reversed",
    "set",
    "staticmethod",
    "str",
    "super",
    "typing.Any",
    "typing.Dict",
    "typing.Type",
    "typing.no_type_check",
    "unique_list",
    "validate_field_name"
   ]
  },
  "type": "function"
 },
 "pydantic.main.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pydantic.main.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "pydantic.main.SchemaExtraCallable": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "pydantic.main.SchemaExtraCallable.__call__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Type",
    "typing.overload"
   ]
  },
  "type": "function"
 },
 "pydantic.main.Signature": {
  "data": {
   "shadows": "inspect.Signature"
  },
  "type": "import"
 },
 "pydantic.main.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "pydantic.main.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "pydantic.main.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "pydantic.main.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "pydantic.main.UNTOUCHED_TYPES": {
  "data": {
   "lineno": 192
  },
  "type": "constant"
 },
 "pydantic.main.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pydantic.main.__all__": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "pydantic.main._is_base_model_class_defined": {
  "data": {
   "lineno": 786
  },
  "type": "constant"
 },
 "pydantic.main._missing": {
  "data": {
   "lineno": 847
  },
  "type": "constant"
 },
 "pydantic.main.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "pydantic.main.compiled": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "pydantic.main.create_model": {
  "data": {
   "lineno": 789,
   "symbols_in_volume": [
    "ConfigError",
    "RuntimeWarning",
    "ValueError",
    "classmethod",
    "isinstance",
    "pydantic.main.BaseConfig",
    "pydantic.main.BaseModel",
    "pydantic.main.inherit_config",
    "pydantic.main.is_valid_field",
    "pydantic.main.warnings",
    "str",
    "tuple",
    "type",
    "typing.Any",
    "typing.Dict",
    "typing.Optional",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.main.cython": {
  "data": {
   "shadows": "cython"
  },
  "type": "import"
 },
 "pydantic.main.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "pydantic.main.inherit_config": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "pydantic.main.is_valid_field": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "pydantic.main.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pydantic.main.no_type_check": {
  "data": {
   "shadows": "typing.no_type_check"
  },
  "type": "import"
 },
 "pydantic.main.overload": {
  "data": {
   "shadows": "typing.overload"
  },
  "type": "import"
 },
 "pydantic.main.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "pydantic.main.prepare_config": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "any",
    "hasattr",
    "isinstance",
    "pydantic.main.BaseConfig",
    "pydantic.main.Extra",
    "pydantic.main.warnings",
    "str",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.main.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pydantic.main.typing_extensions": {
  "data": {
   "shadows": "typing_extensions"
  },
  "type": "import"
 },
 "pydantic.main.validate_custom_root_type": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "pydantic.main.validate_model": {
  "data": {
   "lineno": 850,
   "symbols_in_volume": [
    "AssertionError",
    "ConfigError",
    "ErrorWrapper",
    "ExtraError",
    "MissingError",
    "TypeError",
    "ValidationError",
    "ValueError",
    "cls",
    "isinstance",
    "list",
    "pydantic.main.BaseModel",
    "pydantic.main.Extra",
    "pydantic.main._missing",
    "set",
    "sorted",
    "typing.Optional",
    "typing.Tuple",
    "typing.Type",
    "validator"
   ]
  },
  "type": "function"
 },
 "pydantic.main.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pydantic.mypy": {
  "data": {
   "symbols_in_volume": [
    "mypy.errorcodes.ErrorCode"
   ]
  },
  "type": "module"
 },
 "pydantic.mypy.ARG_NAMED": {
  "data": {
   "shadows": "mypy.nodes.ARG_NAMED"
  },
  "type": "import"
 },
 "pydantic.mypy.ARG_NAMED_OPT": {
  "data": {
   "shadows": "mypy.nodes.ARG_NAMED_OPT"
  },
  "type": "import"
 },
 "pydantic.mypy.ARG_OPT": {
  "data": {
   "shadows": "mypy.nodes.ARG_OPT"
  },
  "type": "import"
 },
 "pydantic.mypy.ARG_POS": {
  "data": {
   "shadows": "mypy.nodes.ARG_POS"
  },
  "type": "import"
 },
 "pydantic.mypy.ARG_STAR2": {
  "data": {
   "shadows": "mypy.nodes.ARG_STAR2"
  },
  "type": "import"
 },
 "pydantic.mypy.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "pydantic.mypy.AnyType": {
  "data": {
   "shadows": "mypy.types.AnyType"
  },
  "type": "import"
 },
 "pydantic.mypy.Argument": {
  "data": {
   "shadows": "mypy.nodes.Argument"
  },
  "type": "import"
 },
 "pydantic.mypy.AssignmentStmt": {
  "data": {
   "shadows": "mypy.nodes.AssignmentStmt"
  },
  "type": "import"
 },
 "pydantic.mypy.BASEMODEL_FULLNAME": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "pydantic.mypy.BASESETTINGS_FULLNAME": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "pydantic.mypy.Block": {
  "data": {
   "shadows": "mypy.nodes.Block"
  },
  "type": "import"
 },
 "pydantic.mypy.CONFIGFILE_KEY": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "pydantic.mypy.CallExpr": {
  "data": {
   "shadows": "mypy.nodes.CallExpr"
  },
  "type": "import"
 },
 "pydantic.mypy.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "pydantic.mypy.CallableType": {
  "data": {
   "shadows": "mypy.types.CallableType"
  },
  "type": "import"
 },
 "pydantic.mypy.CheckerPluginInterface": {
  "data": {
   "shadows": "mypy.plugin.CheckerPluginInterface"
  },
  "type": "import"
 },
 "pydantic.mypy.ClassDef": {
  "data": {
   "shadows": "mypy.nodes.ClassDef"
  },
  "type": "import"
 },
 "pydantic.mypy.ClassDefContext": {
  "data": {
   "shadows": "mypy.plugin.ClassDefContext"
  },
  "type": "import"
 },
 "pydantic.mypy.ConfigParser": {
  "data": {
   "shadows": "configparser.ConfigParser"
  },
  "type": "import"
 },
 "pydantic.mypy.Context": {
  "data": {
   "shadows": "mypy.nodes.Context"
  },
  "type": "import"
 },
 "pydantic.mypy.DATACLASS_FULLNAME": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "pydantic.mypy.Decorator": {
  "data": {
   "shadows": "mypy.nodes.Decorator"
  },
  "type": "import"
 },
 "pydantic.mypy.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "pydantic.mypy.ERROR_ALIAS": {
  "data": {
   "lineno": 558
  },
  "type": "constant"
 },
 "pydantic.mypy.ERROR_CONFIG": {
  "data": {
   "lineno": 557
  },
  "type": "constant"
 },
 "pydantic.mypy.ERROR_ORM": {
  "data": {
   "lineno": 556
  },
  "type": "constant"
 },
 "pydantic.mypy.ERROR_UNEXPECTED": {
  "data": {
   "lineno": 559
  },
  "type": "constant"
 },
 "pydantic.mypy.ERROR_UNTYPED": {
  "data": {
   "lineno": 560
  },
  "type": "constant"
 },
 "pydantic.mypy.EllipsisExpr": {
  "data": {
   "shadows": "mypy.nodes.EllipsisExpr"
  },
  "type": "import"
 },
 "pydantic.mypy.ErrorCode": {
  "data": {
   "shadows": "mypy.errorcodes.ErrorCode"
  },
  "type": "import"
 },
 "pydantic.mypy.FIELD_FULLNAME": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "pydantic.mypy.FuncBase": {
  "data": {
   "shadows": "mypy.nodes.FuncBase"
  },
  "type": "import"
 },
 "pydantic.mypy.FuncDef": {
  "data": {
   "shadows": "mypy.nodes.FuncDef"
  },
  "type": "import"
 },
 "pydantic.mypy.Instance": {
  "data": {
   "shadows": "mypy.types.Instance"
  },
  "type": "import"
 },
 "pydantic.mypy.JsonDict": {
  "data": {
   "shadows": "mypy.nodes.JsonDict"
  },
  "type": "import"
 },
 "pydantic.mypy.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "pydantic.mypy.MDEF": {
  "data": {
   "shadows": "mypy.nodes.MDEF"
  },
  "type": "import"
 },
 "pydantic.mypy.METADATA_KEY": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "pydantic.mypy.MemberExpr": {
  "data": {
   "shadows": "mypy.nodes.MemberExpr"
  },
  "type": "import"
 },
 "pydantic.mypy.MethodContext": {
  "data": {
   "shadows": "mypy.plugin.MethodContext"
  },
  "type": "import"
 },
 "pydantic.mypy.ModelConfigData": {
  "data": {
   "lineno": 527
  },
  "type": "class"
 },
 "pydantic.mypy.ModelConfigData.__init__": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "bool",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "pydantic.mypy.ModelConfigData.set_values_dict": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "pydantic.mypy.ModelConfigData.setdefault": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "getattr",
    "setattr",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.mypy.ModelConfigData.update": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "setattr",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "pydantic.mypy.NameExpr": {
  "data": {
   "shadows": "mypy.nodes.NameExpr"
  },
  "type": "import"
 },
 "pydantic.mypy.NoneType": {
  "data": {
   "shadows": "mypy.types.NoneType"
  },
  "type": "import"
 },
 "pydantic.mypy.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pydantic.mypy.Options": {
  "data": {
   "shadows": "mypy.options.Options"
  },
  "type": "import"
 },
 "pydantic.mypy.PassStmt": {
  "data": {
   "shadows": "mypy.nodes.PassStmt"
  },
  "type": "import"
 },
 "pydantic.mypy.PlaceholderNode": {
  "data": {
   "shadows": "mypy.nodes.PlaceholderNode"
  },
  "type": "import"
 },
 "pydantic.mypy.Plugin": {
  "data": {
   "shadows": "mypy.plugin.Plugin"
  },
  "type": "import"
 },
 "pydantic.mypy.PydanticModelField": {
  "data": {
   "lineno": 490
  },
  "type": "class"
 },
 "pydantic.mypy.PydanticModelField.__init__": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "bool",
    "int",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "pydantic.mypy.PydanticModelField.deserialize": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "mypy.nodes.JsonDict",
    "mypy.nodes.TypeInfo"
   ]
  },
  "type": "function"
 },
 "pydantic.mypy.PydanticModelField.serialize": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "mypy.nodes.JsonDict"
   ]
  },
  "type": "function"
 },
 "pydantic.mypy.PydanticModelField.to_argument": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "bool",
    "mypy.nodes.ARG_NAMED",
    "mypy.nodes.ARG_NAMED_OPT",
    "mypy.nodes.Argument",
    "mypy.nodes.TypeInfo",
    "mypy.types.AnyType",
    "mypy.types.TypeOfAny.explicit"
   ]
  },
  "type": "function"
 },
 "pydantic.mypy.PydanticModelField.to_var": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "bool",
    "mypy.nodes.TypeInfo",
    "mypy.nodes.Var"
   ]
  },
  "type": "function"
 },
 "pydantic.mypy.PydanticModelTransformer": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "str",
    "typing.Set"
   ]
  },
  "type": "class"
 },
 "pydantic.mypy.PydanticModelTransformer.__init__": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "mypy.plugin.ClassDefContext",
    "pydantic.mypy.PydanticPluginConfig"
   ]
  },
  "type": "function"
 },
 "pydantic.mypy.PydanticModelTransformer.add_construct_method": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "add_method",
    "mypy.nodes.ARG_OPT",
    "mypy.nodes.Argument",
    "mypy.nodes.MDEF",
    "mypy.nodes.SymbolTableNode",
    "mypy.nodes.TypeVarExpr",
    "mypy.nodes.Var",
    "mypy.types.NoneType",
    "mypy.types.TypeVarDef",
    "mypy.types.TypeVarType",
    "mypy.types.UnionType",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "pydantic.mypy.PydanticModelTransformer.add_initializer": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "add_method",
    "bool",
    "mypy.nodes.ARG_STAR2",
    "mypy.nodes.Argument",
    "mypy.nodes.Var",
    "mypy.types.AnyType",
    "mypy.types.NoneType",
    "mypy.types.TypeOfAny.explicit",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "pydantic.mypy.PydanticModelTransformer.collect_config": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "ModelConfigData",
    "error_required_dynamic_aliases",
    "get_fullname",
    "isinstance",
    "mypy.nodes.AssignmentStmt",
    "mypy.nodes.ClassDef",
    "mypy.server.trigger.make_wildcard_trigger",
    "pydantic.mypy.METADATA_KEY"
   ]
  },
  "type": "function"
 },
 "pydantic.mypy.PydanticModelTransformer.collect_fields": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "PydanticModelField",
    "PydanticModelField.deserialize",
    "error_required_dynamic_aliases",
    "error_untyped_fields",
    "get_fullname",
    "isinstance",
    "mypy.nodes.AssignmentStmt",
    "mypy.nodes.NameExpr",
    "mypy.nodes.PlaceholderNode",
    "mypy.nodes.Var",
    "mypy.server.trigger.make_wildcard_trigger",
    "pydantic.mypy.METADATA_KEY",
    "set",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "pydantic.mypy.PydanticModelTransformer.get_alias_info": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "bool",
    "enumerate",
    "isinstance",
    "mypy.nodes.AssignmentStmt",
    "mypy.nodes.CallExpr",
    "mypy.nodes.RefExpr",
    "mypy.nodes.StrExpr",
    "mypy.nodes.TempNode",
    "pydantic.mypy.FIELD_FULLNAME",
    "staticmethod",
    "str",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "pydantic.mypy.PydanticModelTransformer.get_config_update": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "ModelConfigData",
    "error_invalid_config_value",
    "isinstance",
    "mypy.nodes.AssignmentStmt",
    "mypy.nodes.MemberExpr",
    "mypy.nodes.NameExpr",
    "mypy.nodes.StrExpr",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "pydantic.mypy.PydanticModelTransformer.get_field_arguments": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "bool",
    "mypy.nodes.Argument",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "pydantic.mypy.PydanticModelTransformer.get_is_required": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "any",
    "bool",
    "isinstance",
    "len",
    "mypy.nodes.AssignmentStmt",
    "mypy.nodes.CallExpr",
    "mypy.nodes.ClassDef",
    "mypy.nodes.EllipsisExpr",
    "mypy.nodes.NameExpr",
    "mypy.nodes.RefExpr",
    "mypy.nodes.TempNode",
    "mypy.types.NoneType",
    "mypy.types.UnionType",
    "mypy.types.get_proper_type",
    "pydantic.mypy.FIELD_FULLNAME",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pydantic.mypy.PydanticModelTransformer.is_dynamic_alias_present": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "bool",
    "staticmethod",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "pydantic.mypy.PydanticModelTransformer.set_frozen": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "bool",
    "get_fullname",
    "get_name",
    "isinstance",
    "mypy.nodes.MDEF",
    "mypy.nodes.SymbolTableNode",
    "mypy.nodes.Var",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "pydantic.mypy.PydanticModelTransformer.should_init_forbid_extra": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "bool",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "pydantic.mypy.PydanticModelTransformer.transform": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "any",
    "get_fullname",
    "pydantic.mypy.BASESETTINGS_FULLNAME",
    "pydantic.mypy.METADATA_KEY"
   ]
  },
  "type": "function"
 },
 "pydantic.mypy.PydanticPlugin": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "mypy.plugin.Plugin"
   ]
  },
  "type": "class"
 },
 "pydantic.mypy.PydanticPlugin.__init__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "PydanticPluginConfig",
    "mypy.options.Options",
    "super"
   ]
  },
  "type": "function"
 },
 "pydantic.mypy.PydanticPlugin._pydantic_model_class_maker_callback": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "PydanticModelTransformer",
    "mypy.plugin.ClassDefContext"
   ]
  },
  "type": "function"
 },
 "pydantic.mypy.PydanticPlugin.get_base_class_hook": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "any",
    "get_fullname",
    "isinstance",
    "mypy.nodes.TypeInfo",
    "pydantic.mypy.BASEMODEL_FULLNAME",
    "str"
   ]
  },
  "type": "function"
 },
 "pydantic.mypy.PydanticPlugin.get_class_decorator_hook": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "mypy.plugin.ClassDefContext",
    "mypy.plugins.dataclasses.dataclass_class_maker_callback",
    "pydantic.mypy.DATACLASS_FULLNAME",
    "str",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "pydantic.mypy.PydanticPlugin.get_method_hook": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "mypy.plugin.MethodContext",
    "mypy.types.Type",
    "str",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "pydantic.mypy.PydanticPluginConfig": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "class"
 },
 "pydantic.mypy.PydanticPluginConfig.__init__": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "configparser.ConfigParser",
    "mypy.options.Options",
    "pydantic.mypy.CONFIGFILE_KEY",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pydantic.mypy.RefExpr": {
  "data": {
   "shadows": "mypy.nodes.RefExpr"
  },
  "type": "import"
 },
 "pydantic.mypy.SemanticAnalyzerPluginInterface": {
  "data": {
   "shadows": "mypy.plugin.SemanticAnalyzerPluginInterface"
  },
  "type": "import"
 },
 "pydantic.mypy.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "pydantic.mypy.StrExpr": {
  "data": {
   "shadows": "mypy.nodes.StrExpr"
  },
  "type": "import"
 },
 "pydantic.mypy.SymbolNode": {
  "data": {
   "shadows": "mypy.nodes.SymbolNode"
  },
  "type": "import"
 },
 "pydantic.mypy.SymbolTableNode": {
  "data": {
   "shadows": "mypy.nodes.SymbolTableNode"
  },
  "type": "import"
 },
 "pydantic.mypy.TempNode": {
  "data": {
   "shadows": "mypy.nodes.TempNode"
  },
  "type": "import"
 },
 "pydantic.mypy.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "pydantic.mypy.Type": {
  "data": {
   "shadows": "mypy.types.Type"
  },
  "type": "import"
 },
 "pydantic.mypy.TypeInfo": {
  "data": {
   "shadows": "mypy.nodes.TypeInfo"
  },
  "type": "import"
 },
 "pydantic.mypy.TypeOfAny": {
  "data": {
   "shadows": "mypy.types.TypeOfAny"
  },
  "type": "import"
 },
 "pydantic.mypy.TypeType": {
  "data": {
   "shadows": "mypy.types.TypeType"
  },
  "type": "import"
 },
 "pydantic.mypy.TypeVarDef": {
  "data": {
   "shadows": "mypy.types.TypeVarDef"
  },
  "type": "import"
 },
 "pydantic.mypy.TypeVarExpr": {
  "data": {
   "shadows": "mypy.nodes.TypeVarExpr"
  },
  "type": "import"
 },
 "pydantic.mypy.TypeVarType": {
  "data": {
   "shadows": "mypy.types.TypeVarType"
  },
  "type": "import"
 },
 "pydantic.mypy.TypingType": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "pydantic.mypy.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pydantic.mypy.UnionType": {
  "data": {
   "shadows": "mypy.types.UnionType"
  },
  "type": "import"
 },
 "pydantic.mypy.Var": {
  "data": {
   "shadows": "mypy.nodes.Var"
  },
  "type": "import"
 },
 "pydantic.mypy.add_method": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "bool",
    "get_fullname",
    "get_name",
    "isinstance",
    "mypy.nodes.ARG_POS",
    "mypy.nodes.Argument",
    "mypy.nodes.Block",
    "mypy.nodes.Decorator",
    "mypy.nodes.FuncDef",
    "mypy.nodes.MDEF",
    "mypy.nodes.NameExpr",
    "mypy.nodes.PassStmt",
    "mypy.nodes.SymbolTableNode",
    "mypy.nodes.Var",
    "mypy.plugin.ClassDefContext",
    "mypy.semanal.set_callable_name",
    "mypy.types.CallableType",
    "mypy.types.Type",
    "mypy.types.TypeType.make_normalized",
    "mypy.types.TypeVarDef",
    "mypy.typevars.fill_typevars",
    "mypy.util.get_unique_redefinition_name",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "pydantic.mypy.dataclasses": {
  "data": {
   "shadows": "mypy.plugins.dataclasses"
  },
  "type": "import"
 },
 "pydantic.mypy.error_from_orm": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "mypy.plugin.CheckerPluginInterface",
    "pydantic.mypy.ERROR_ORM",
    "str"
   ]
  },
  "type": "function"
 },
 "pydantic.mypy.error_invalid_config_value": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "mypy.plugin.SemanticAnalyzerPluginInterface",
    "pydantic.mypy.ERROR_CONFIG",
    "str"
   ]
  },
  "type": "function"
 },
 "pydantic.mypy.error_required_dynamic_aliases": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "mypy.plugin.SemanticAnalyzerPluginInterface",
    "pydantic.mypy.ERROR_ALIAS"
   ]
  },
  "type": "function"
 },
 "pydantic.mypy.error_unexpected_behavior": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "mypy.plugin.CheckerPluginInterface",
    "pydantic.mypy.ERROR_UNEXPECTED",
    "str"
   ]
  },
  "type": "function"
 },
 "pydantic.mypy.error_untyped_fields": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "mypy.nodes.Context",
    "mypy.plugin.SemanticAnalyzerPluginInterface",
    "pydantic.mypy.ERROR_UNTYPED"
   ]
  },
  "type": "function"
 },
 "pydantic.mypy.fill_typevars": {
  "data": {
   "shadows": "mypy.typevars.fill_typevars"
  },
  "type": "import"
 },
 "pydantic.mypy.from_orm_callback": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "error_from_orm",
    "error_unexpected_behavior",
    "get_name",
    "isinstance",
    "mypy.plugin.MethodContext",
    "mypy.types.CallableType",
    "mypy.types.Instance",
    "mypy.types.Type",
    "pydantic.mypy.METADATA_KEY"
   ]
  },
  "type": "function"
 },
 "pydantic.mypy.get_fullname": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "callable",
    "fn",
    "mypy.nodes.FuncBase",
    "mypy.nodes.SymbolNode",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydantic.mypy.get_name": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "callable",
    "fn",
    "mypy.nodes.FuncBase",
    "mypy.nodes.SymbolNode",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydantic.mypy.get_proper_type": {
  "data": {
   "shadows": "mypy.types.get_proper_type"
  },
  "type": "import"
 },
 "pydantic.mypy.get_unique_redefinition_name": {
  "data": {
   "shadows": "mypy.util.get_unique_redefinition_name"
  },
  "type": "import"
 },
 "pydantic.mypy.make_wildcard_trigger": {
  "data": {
   "shadows": "mypy.server.trigger.make_wildcard_trigger"
  },
  "type": "import"
 },
 "pydantic.mypy.plugin": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pydantic.mypy.set_callable_name": {
  "data": {
   "shadows": "mypy.semanal.set_callable_name"
  },
  "type": "import"
 },
 "pydantic.networks": {
  "data": {
   "symbols_in_volume": [
    "bytes",
    "int",
    "pydantic.networks.re",
    "str",
    "typing.Generator",
    "typing.TYPE_CHECKING",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "pydantic.networks.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "pydantic.networks.AnyHttpUrl": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "pydantic.networks.AnyUrl"
   ]
  },
  "type": "class"
 },
 "pydantic.networks.AnyUrl": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Optional",
    "typing.Set"
   ]
  },
  "type": "class"
 },
 "pydantic.networks.AnyUrl.__get_validators__": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pydantic.networks.AnyUrl.__init__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "str",
    "str.__init__",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "pydantic.networks.AnyUrl.__modify_schema__": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "classmethod",
    "str",
    "typing.Any",
    "typing.Dict",
    "update_not_none"
   ]
  },
  "type": "function"
 },
 "pydantic.networks.AnyUrl.__new__": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "object",
    "str",
    "str.__new__",
    "typing.Optional",
    "typing.no_type_check"
   ]
  },
  "type": "function"
 },
 "pydantic.networks.AnyUrl.__repr__": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "getattr",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "pydantic.networks.AnyUrl.build": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "classmethod",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "pydantic.networks.AnyUrl.validate": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "constr_length_validator",
    "int",
    "len",
    "pydantic.networks.url_regex",
    "str",
    "str_validator",
    "typing.Any",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "pydantic.networks.AnyUrl.validate_host": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "cls.tld_required",
    "pydantic.networks.ascii_domain_regex",
    "pydantic.networks.int_domain_regex",
    "str",
    "typing.Dict",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "pydantic.networks.CallableGenerator": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "pydantic.networks.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "pydantic.networks.EmailStr": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "class"
 },
 "pydantic.networks.EmailStr.__get_validators__": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "classmethod",
    "cls.validate",
    "pydantic.networks.import_email_validator",
    "str_validator"
   ]
  },
  "type": "function"
 },
 "pydantic.networks.EmailStr.__modify_schema__": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "classmethod",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "pydantic.networks.EmailStr.validate": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "classmethod",
    "str",
    "typing.Union",
    "validate_email"
   ]
  },
  "type": "function"
 },
 "pydantic.networks.Generator": {
  "data": {
   "shadows": "typing.Generator"
  },
  "type": "import"
 },
 "pydantic.networks.HttpUrl": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "pydantic.networks.AnyUrl"
   ]
  },
  "type": "class"
 },
 "pydantic.networks.IPv4Address": {
  "data": {
   "shadows": "ipaddress.IPv4Address"
  },
  "type": "import"
 },
 "pydantic.networks.IPv4Interface": {
  "data": {
   "shadows": "ipaddress.IPv4Interface"
  },
  "type": "import"
 },
 "pydantic.networks.IPv4Network": {
  "data": {
   "shadows": "ipaddress.IPv4Network"
  },
  "type": "import"
 },
 "pydantic.networks.IPv6Address": {
  "data": {
   "shadows": "ipaddress.IPv6Address"
  },
  "type": "import"
 },
 "pydantic.networks.IPv6Interface": {
  "data": {
   "shadows": "ipaddress.IPv6Interface"
  },
  "type": "import"
 },
 "pydantic.networks.IPv6Network": {
  "data": {
   "shadows": "ipaddress.IPv6Network"
  },
  "type": "import"
 },
 "pydantic.networks.IPvAnyAddress": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "ipaddress._BaseAddress"
   ]
  },
  "type": "class"
 },
 "pydantic.networks.IPvAnyAddress.__get_validators__": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "classmethod",
    "cls.validate"
   ]
  },
  "type": "function"
 },
 "pydantic.networks.IPvAnyAddress.__modify_schema__": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "classmethod",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "pydantic.networks.IPvAnyAddress.validate": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "ValueError",
    "bytes",
    "classmethod",
    "int",
    "ipaddress.IPv4Address",
    "ipaddress.IPv6Address",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydantic.networks.IPvAnyInterface": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "ipaddress._BaseAddress"
   ]
  },
  "type": "class"
 },
 "pydantic.networks.IPvAnyInterface.__get_validators__": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "classmethod",
    "cls.validate"
   ]
  },
  "type": "function"
 },
 "pydantic.networks.IPvAnyInterface.__modify_schema__": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "classmethod",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "pydantic.networks.IPvAnyInterface.validate": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "ipaddress.IPv4Interface",
    "ipaddress.IPv6Interface",
    "pydantic.networks.NetworkType",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydantic.networks.IPvAnyNetwork": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "ipaddress._BaseNetwork"
   ]
  },
  "type": "class"
 },
 "pydantic.networks.IPvAnyNetwork.__get_validators__": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "classmethod",
    "cls.validate"
   ]
  },
  "type": "function"
 },
 "pydantic.networks.IPvAnyNetwork.__modify_schema__": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "classmethod",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "pydantic.networks.IPvAnyNetwork.validate": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "ipaddress.IPv4Network",
    "ipaddress.IPv6Network",
    "pydantic.networks.NetworkType",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydantic.networks.NameEmail": {
  "data": {
   "lineno": 329
  },
  "type": "class"
 },
 "pydantic.networks.NameEmail.__eq__": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "pydantic.networks.NameEmail",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.networks.NameEmail.__get_validators__": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "classmethod",
    "cls.validate",
    "pydantic.networks.import_email_validator"
   ]
  },
  "type": "function"
 },
 "pydantic.networks.NameEmail.__init__": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pydantic.networks.NameEmail.__modify_schema__": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "classmethod",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "pydantic.networks.NameEmail.__str__": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pydantic.networks.NameEmail.validate": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "str_validator",
    "typing.Any",
    "validate_email"
   ]
  },
  "type": "function"
 },
 "pydantic.networks.NetworkType": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pydantic.networks.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pydantic.networks.Pattern": {
  "data": {
   "shadows": "typing.Pattern"
  },
  "type": "import"
 },
 "pydantic.networks.PostgresDsn": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "pydantic.networks.AnyUrl"
   ]
  },
  "type": "class"
 },
 "pydantic.networks.RedisDsn": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "pydantic.networks.AnyUrl"
   ]
  },
  "type": "class"
 },
 "pydantic.networks.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "pydantic.networks.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "pydantic.networks.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "pydantic.networks.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "pydantic.networks.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pydantic.networks._BaseAddress": {
  "data": {
   "shadows": "ipaddress._BaseAddress"
  },
  "type": "import"
 },
 "pydantic.networks._BaseNetwork": {
  "data": {
   "shadows": "ipaddress._BaseNetwork"
  },
  "type": "import"
 },
 "pydantic.networks.__all__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pydantic.networks._ascii_domain_regex_cache": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "pydantic.networks._int_domain_regex_cache": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "pydantic.networks._url_regex_cache": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "pydantic.networks.ascii_domain_regex": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "pydantic.networks._ascii_domain_regex_cache",
    "pydantic.networks.re",
    "str",
    "typing.Pattern"
   ]
  },
  "type": "function"
 },
 "pydantic.networks.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "pydantic.networks.email_validator": {
  "data": {
   "shadows": "email_validator"
  },
  "type": "import"
 },
 "pydantic.networks.import_email_validator": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "function"
 },
 "pydantic.networks.int_domain_regex": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "pydantic.networks._int_domain_regex_cache",
    "pydantic.networks.re",
    "str",
    "typing.Pattern"
   ]
  },
  "type": "function"
 },
 "pydantic.networks.no_type_check": {
  "data": {
   "shadows": "typing.no_type_check"
  },
  "type": "import"
 },
 "pydantic.networks.pretty_email_regex": {
  "data": {
   "lineno": 428
  },
  "type": "constant"
 },
 "pydantic.networks.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pydantic.networks.stricturl": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "bool",
    "dict",
    "int",
    "pydantic.networks.AnyUrl",
    "str",
    "type",
    "typing.Optional",
    "typing.Set",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.networks.url_regex": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "pydantic.networks._url_regex_cache",
    "pydantic.networks.re",
    "str",
    "typing.Pattern"
   ]
  },
  "type": "function"
 },
 "pydantic.networks.validate_email": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "pydantic.networks.email_validator",
    "pydantic.networks.import_email_validator",
    "pydantic.networks.pretty_email_regex",
    "str",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydantic.parse": {
  "data": {},
  "type": "module"
 },
 "pydantic.parse.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "pydantic.parse.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "pydantic.parse.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "pydantic.parse.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "pydantic.parse.Protocol": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "enum.Enum",
    "pydantic.parse.json",
    "pydantic.parse.pickle",
    "str"
   ]
  },
  "type": "class"
 },
 "pydantic.parse.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pydantic.parse.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pydantic.parse.load_file": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "bool",
    "json_loads",
    "pathlib.Path",
    "pydantic.parse.Protocol",
    "pydantic.parse.json",
    "pydantic.parse.load_str_bytes",
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydantic.parse.load_str_bytes": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "bool",
    "bytes",
    "isinstance",
    "json_loads",
    "pydantic.parse.Protocol",
    "pydantic.parse.json",
    "pydantic.parse.pickle",
    "str",
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "pydantic.parse.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pydantic.schema": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "bytes",
    "datetime.date",
    "datetime.datetime",
    "datetime.time",
    "datetime.timedelta",
    "decimal.Decimal",
    "dict",
    "enum.Enum",
    "float",
    "frozenset",
    "int",
    "ipaddress.IPv4Address",
    "ipaddress.IPv4Interface",
    "ipaddress.IPv4Network",
    "ipaddress.IPv6Address",
    "ipaddress.IPv6Interface",
    "ipaddress.IPv6Network",
    "list",
    "pathlib.Path",
    "pydantic.schema.TypeModelOrEnum",
    "pydantic.schema.numeric_types",
    "set",
    "str",
    "tuple",
    "type",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.Set",
    "typing.TYPE_CHECKING",
    "typing.Tuple",
    "typing.Type",
    "typing.Union",
    "uuid.UUID"
   ]
  },
  "type": "module"
 },
 "pydantic.schema.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "pydantic.schema.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "pydantic.schema.Decimal": {
  "data": {
   "shadows": "decimal.Decimal"
  },
  "type": "import"
 },
 "pydantic.schema.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "pydantic.schema.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "pydantic.schema.FrozenSet": {
  "data": {
   "shadows": "typing.FrozenSet"
  },
  "type": "import"
 },
 "pydantic.schema.IPv4Address": {
  "data": {
   "shadows": "ipaddress.IPv4Address"
  },
  "type": "import"
 },
 "pydantic.schema.IPv4Interface": {
  "data": {
   "shadows": "ipaddress.IPv4Interface"
  },
  "type": "import"
 },
 "pydantic.schema.IPv4Network": {
  "data": {
   "shadows": "ipaddress.IPv4Network"
  },
  "type": "import"
 },
 "pydantic.schema.IPv6Address": {
  "data": {
   "shadows": "ipaddress.IPv6Address"
  },
  "type": "import"
 },
 "pydantic.schema.IPv6Interface": {
  "data": {
   "shadows": "ipaddress.IPv6Interface"
  },
  "type": "import"
 },
 "pydantic.schema.IPv6Network": {
  "data": {
   "shadows": "ipaddress.IPv6Network"
  },
  "type": "import"
 },
 "pydantic.schema.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "pydantic.schema.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "pydantic.schema.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pydantic.schema.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "pydantic.schema.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "pydantic.schema.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "pydantic.schema.SkipField": {
  "data": {
   "lineno": 880,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "pydantic.schema.SkipField.__init__": {
  "data": {
   "lineno": 885,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pydantic.schema.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "pydantic.schema.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "pydantic.schema.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "pydantic.schema.TypeModelOrEnum": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "pydantic.schema.TypeModelSet": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "pydantic.schema.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "pydantic.schema.UUID": {
  "data": {
   "shadows": "uuid.UUID"
  },
  "type": "import"
 },
 "pydantic.schema.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pydantic.schema._field_constraints": {
  "data": {
   "lineno": 771
  },
  "type": "constant"
 },
 "pydantic.schema.add_field_type_to_schema": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "issubclass",
    "pydantic.schema.schema",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "pydantic.schema.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "pydantic.schema.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "pydantic.schema.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pydantic.schema.default_prefix": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "pydantic.schema.encode_default": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "dict",
    "float",
    "int",
    "isinstance",
    "pydantic_encoder",
    "sequence_like",
    "str",
    "t",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.schema.enum_process_schema": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "add_field_type_to_schema",
    "enum.Enum",
    "getattr",
    "inspect.getdoc",
    "modify_schema",
    "pydantic.schema.schema",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Iterable",
    "typing.Type",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "pydantic.schema.field_schema": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "bool",
    "dict",
    "encode_default",
    "field_type_schema",
    "get_field_schema_validations",
    "pydantic.schema.TypeModelOrEnum",
    "pydantic.schema.TypeModelSet",
    "pydantic.schema.default_prefix",
    "set",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional",
    "typing.Set",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "pydantic.schema.field_singleton_schema": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "SkipField",
    "ValueError",
    "bool",
    "enum.Enum",
    "getattr",
    "is_callable_type",
    "is_literal_type",
    "issubclass",
    "len",
    "lenient_issubclass",
    "literal_values",
    "modify_schema",
    "multivalue_literal_field_for_schema",
    "normalize_name",
    "pydantic.schema.TypeModelOrEnum",
    "pydantic.schema.TypeModelSet",
    "pydantic.schema.add_field_type_to_schema",
    "pydantic.schema.default_prefix",
    "pydantic.schema.enum_process_schema",
    "pydantic.schema.field_schema",
    "pydantic.schema.field_singleton_sub_fields_schema",
    "pydantic.schema.model_process_schema",
    "set",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional",
    "typing.Set",
    "typing.Tuple",
    "typing.TypeVar"
   ]
  },
  "type": "function"
 },
 "pydantic.schema.field_singleton_sub_fields_schema": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "bool",
    "len",
    "pydantic.schema.TypeModelOrEnum",
    "pydantic.schema.TypeModelSet",
    "pydantic.schema.default_prefix",
    "pydantic.schema.field_type_schema",
    "set",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional",
    "typing.Sequence",
    "typing.Set",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "pydantic.schema.field_type_schema": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "bool",
    "field_singleton_schema",
    "getattr",
    "len",
    "modify_schema",
    "pydantic.schema.TypeModelOrEnum",
    "pydantic.schema.TypeModelSet",
    "pydantic.schema.default_prefix",
    "set",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Set",
    "typing.Tuple",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "pydantic.schema.get_annotation_from_field_info": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "go",
    "pydantic.schema._field_constraints",
    "set",
    "str",
    "typing.Any",
    "typing.Set",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.schema.get_annotation_from_field_info.go": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "any",
    "bool",
    "bytes",
    "conlist",
    "conset",
    "constraint_func",
    "getattr",
    "go",
    "is_literal_type",
    "isinstance",
    "issubclass",
    "lenient_issubclass",
    "next",
    "pydantic.schema.numeric_types",
    "set",
    "str",
    "t",
    "tuple",
    "type",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.FrozenSet",
    "typing.List",
    "typing.Optional",
    "typing.Sequence",
    "typing.Set",
    "typing.Tuple",
    "typing.Type",
    "typing.Union",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "pydantic.schema.get_field_schema_validations": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "bool",
    "bytes",
    "getattr",
    "isinstance",
    "issubclass",
    "lenient_issubclass",
    "modify_schema",
    "pydantic.schema.numeric_types",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "pydantic.schema.get_flat_models_from_field": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "enum.Enum",
    "get_flat_models_from_fields",
    "getattr",
    "lenient_issubclass",
    "pydantic.schema.TypeModelSet",
    "pydantic.schema.get_flat_models_from_model",
    "set"
   ]
  },
  "type": "function"
 },
 "pydantic.schema.get_flat_models_from_fields": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "pydantic.schema.TypeModelSet",
    "pydantic.schema.get_flat_models_from_field",
    "set",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "pydantic.schema.get_flat_models_from_model": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "get_flat_models_from_fields",
    "pydantic.schema.TypeModelSet",
    "set",
    "typing.Sequence",
    "typing.Type",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "pydantic.schema.get_flat_models_from_models": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "pydantic.schema.TypeModelSet",
    "pydantic.schema.get_flat_models_from_model",
    "set",
    "typing.Sequence",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.schema.get_long_model_name": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "pydantic.schema.TypeModelOrEnum",
    "str"
   ]
  },
  "type": "function"
 },
 "pydantic.schema.get_model_name_map": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "get_long_model_name",
    "normalize_name",
    "pydantic.schema.TypeModelOrEnum",
    "pydantic.schema.TypeModelSet",
    "set",
    "str",
    "typing.Dict",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "pydantic.schema.getdoc": {
  "data": {
   "shadows": "inspect.getdoc"
  },
  "type": "import"
 },
 "pydantic.schema.json_scheme": {
  "data": {
   "lineno": 635
  },
  "type": "constant"
 },
 "pydantic.schema.model_process_schema": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "bool",
    "callable",
    "enum.Enum",
    "enum_process_schema",
    "inspect.getdoc",
    "inspect.signature",
    "len",
    "lenient_issubclass",
    "model_type_schema",
    "pydantic.schema.TypeModelOrEnum",
    "pydantic.schema.TypeModelSet",
    "pydantic.schema.default_prefix",
    "schema_extra",
    "set",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional",
    "typing.Set",
    "typing.Tuple",
    "typing.Type",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "pydantic.schema.model_schema": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "bool",
    "get_flat_models_from_model",
    "get_model",
    "get_model_name_map",
    "model_process_schema",
    "pydantic.schema.default_prefix",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional",
    "typing.Type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydantic.schema.model_type_schema": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "UserWarning",
    "bool",
    "pydantic.schema.TypeModelOrEnum",
    "pydantic.schema.TypeModelSet",
    "pydantic.schema.default_prefix",
    "pydantic.schema.field_schema",
    "pydantic.schema.warnings",
    "set",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional",
    "typing.Set",
    "typing.Tuple",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.schema.multivalue_literal_field_for_schema": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "ModelField",
    "tuple",
    "typing.Any",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydantic.schema.normalize_name": {
  "data": {
   "lineno": 873,
   "symbols_in_volume": [
    "pydantic.schema.re",
    "str"
   ]
  },
  "type": "function"
 },
 "pydantic.schema.numeric_types": {
  "data": {
   "lineno": 208
  },
  "type": "constant"
 },
 "pydantic.schema.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pydantic.schema.schema": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "bool",
    "get_flat_models_from_models",
    "get_model",
    "get_model_name_map",
    "model_process_schema",
    "pydantic.schema.default_prefix",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional",
    "typing.Sequence",
    "typing.Type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydantic.schema.signature": {
  "data": {
   "shadows": "inspect.signature"
  },
  "type": "import"
 },
 "pydantic.schema.time": {
  "data": {
   "shadows": "datetime.time"
  },
  "type": "import"
 },
 "pydantic.schema.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pydantic.schema.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pydantic.tools": {
  "data": {
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.Type",
    "typing.TypeVar",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "pydantic.tools.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "pydantic.tools.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "pydantic.tools.NameFactory": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pydantic.tools.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pydantic.tools.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "pydantic.tools.Protocol": {
  "data": {
   "shadows": "pydantic.parse.Protocol"
  },
  "type": "import"
 },
 "pydantic.tools.T": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pydantic.tools.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "pydantic.tools.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "pydantic.tools.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pydantic.tools.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "pydantic.tools._generate_parsing_type_name": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "display_as_type",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.tools._get_parsing_type": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "functools.lru_cache",
    "isinstance",
    "pydantic.main.create_model",
    "pydantic.tools.NameFactory",
    "pydantic.tools._generate_parsing_type_name",
    "str",
    "type_name",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "pydantic.tools.create_model": {
  "data": {
   "shadows": "pydantic.main.create_model"
  },
  "type": "import"
 },
 "pydantic.tools.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pydantic.tools.load_file": {
  "data": {
   "shadows": "pydantic.parse.load_file"
  },
  "type": "import"
 },
 "pydantic.tools.lru_cache": {
  "data": {
   "shadows": "functools.lru_cache"
  },
  "type": "import"
 },
 "pydantic.tools.parse_file_as": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "bool",
    "pathlib.Path",
    "pydantic.parse.Protocol",
    "pydantic.parse.load_file",
    "pydantic.tools.NameFactory",
    "pydantic.tools.T",
    "pydantic.tools.json",
    "pydantic.tools.parse_obj_as",
    "str",
    "type_name",
    "typing.Any",
    "typing.Callable",
    "typing.Optional",
    "typing.Type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydantic.tools.parse_obj_as": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "model_type",
    "pydantic.tools.NameFactory",
    "pydantic.tools.T",
    "pydantic.tools._get_parsing_type",
    "type_name",
    "typing.Any",
    "typing.Optional",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.types": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "bytes",
    "decimal.Decimal",
    "float",
    "int",
    "pydantic.types.BYTE_SIZES",
    "pydantic.types.OptionalInt",
    "pydantic.types.OptionalIntFloat",
    "pydantic.types.StrBytes",
    "pydantic.types.re",
    "str",
    "typing.Optional",
    "typing.TYPE_CHECKING",
    "typing.Type",
    "typing.TypeVar",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "pydantic.types.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "pydantic.types.BYTE_SIZES": {
  "data": {
   "lineno": 767
  },
  "type": "constant"
 },
 "pydantic.types.ByteSize": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "class"
 },
 "pydantic.types.ByteSize.__get_validators__": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "classmethod",
    "cls.validate"
   ]
  },
  "type": "function"
 },
 "pydantic.types.ByteSize.human_readable": {
  "data": {
   "lineno": 814,
   "symbols_in_volume": [
    "abs",
    "bool",
    "float",
    "str"
   ]
  },
  "type": "function"
 },
 "pydantic.types.ByteSize.to": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": [
    "KeyError",
    "float",
    "pydantic.types.BYTE_SIZES",
    "str"
   ]
  },
  "type": "function"
 },
 "pydantic.types.ByteSize.validate": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "classmethod",
    "cls",
    "float",
    "int",
    "pydantic.types.BYTE_SIZES",
    "pydantic.types.StrIntFloat",
    "pydantic.types.byte_string_re",
    "str"
   ]
  },
  "type": "function"
 },
 "pydantic.types.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "pydantic.types.ClassVar": {
  "data": {
   "shadows": "typing.ClassVar"
  },
  "type": "import"
 },
 "pydantic.types.ConstrainedBytes": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "bytes",
    "pydantic.types.OptionalInt"
   ]
  },
  "type": "class"
 },
 "pydantic.types.ConstrainedBytes.__get_validators__": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pydantic.types.ConstrainedBytes.__modify_schema__": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "classmethod",
    "str",
    "typing.Any",
    "typing.Dict",
    "update_not_none"
   ]
  },
  "type": "function"
 },
 "pydantic.types.ConstrainedDecimal": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "decimal.Decimal",
    "pydantic.types.ConstrainedNumberMeta",
    "pydantic.types.OptionalInt",
    "pydantic.types.OptionalIntFloatDecimal"
   ]
  },
  "type": "class"
 },
 "pydantic.types.ConstrainedDecimal.__get_validators__": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pydantic.types.ConstrainedDecimal.__modify_schema__": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "classmethod",
    "str",
    "typing.Any",
    "typing.Dict",
    "update_not_none"
   ]
  },
  "type": "function"
 },
 "pydantic.types.ConstrainedDecimal.validate": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "abs",
    "classmethod",
    "decimal.Decimal",
    "len"
   ]
  },
  "type": "function"
 },
 "pydantic.types.ConstrainedFloat": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "bool",
    "float",
    "pydantic.types.ConstrainedNumberMeta",
    "pydantic.types.OptionalIntFloat"
   ]
  },
  "type": "class"
 },
 "pydantic.types.ConstrainedFloat.__get_validators__": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pydantic.types.ConstrainedFloat.__modify_schema__": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "classmethod",
    "pydantic.types.math",
    "str",
    "typing.Any",
    "typing.Dict",
    "update_not_none"
   ]
  },
  "type": "function"
 },
 "pydantic.types.ConstrainedInt": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "bool",
    "int",
    "pydantic.types.ConstrainedNumberMeta",
    "pydantic.types.OptionalInt"
   ]
  },
  "type": "class"
 },
 "pydantic.types.ConstrainedInt.__get_validators__": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pydantic.types.ConstrainedInt.__modify_schema__": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "classmethod",
    "str",
    "typing.Any",
    "typing.Dict",
    "update_not_none"
   ]
  },
  "type": "function"
 },
 "pydantic.types.ConstrainedList": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "int",
    "list",
    "pydantic.types.T",
    "typing.List",
    "typing.Optional",
    "typing.Type"
   ]
  },
  "type": "class"
 },
 "pydantic.types.ConstrainedList.__get_validators__": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pydantic.types.ConstrainedList.__modify_schema__": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "classmethod",
    "str",
    "typing.Any",
    "typing.Dict",
    "update_not_none"
   ]
  },
  "type": "function"
 },
 "pydantic.types.ConstrainedList.list_length_validator": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "classmethod",
    "len",
    "list_validator"
   ]
  },
  "type": "function"
 },
 "pydantic.types.ConstrainedNumberMeta": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "pydantic.types.ConstrainedNumberMeta.__new__": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "str",
    "type.__new__",
    "typing.Any",
    "typing.Dict",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "pydantic.types.ConstrainedSet": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "int",
    "pydantic.types.T",
    "set",
    "typing.Optional",
    "typing.Set",
    "typing.Type"
   ]
  },
  "type": "class"
 },
 "pydantic.types.ConstrainedSet.__get_validators__": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pydantic.types.ConstrainedSet.__modify_schema__": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "classmethod",
    "str",
    "typing.Any",
    "typing.Dict",
    "update_not_none"
   ]
  },
  "type": "function"
 },
 "pydantic.types.ConstrainedSet.set_length_validator": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "classmethod",
    "len",
    "set_validator"
   ]
  },
  "type": "function"
 },
 "pydantic.types.ConstrainedStr": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "pydantic.types.OptionalInt",
    "str",
    "typing.Optional",
    "typing.Pattern"
   ]
  },
  "type": "class"
 },
 "pydantic.types.ConstrainedStr.__get_validators__": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pydantic.types.ConstrainedStr.__modify_schema__": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "classmethod",
    "str",
    "typing.Any",
    "typing.Dict",
    "update_not_none"
   ]
  },
  "type": "function"
 },
 "pydantic.types.ConstrainedStr.validate": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "classmethod",
    "len",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydantic.types.Decimal": {
  "data": {
   "shadows": "decimal.Decimal"
  },
  "type": "import"
 },
 "pydantic.types.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "pydantic.types.DirectoryPath": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "pathlib.Path"
   ]
  },
  "type": "class"
 },
 "pydantic.types.DirectoryPath.__get_validators__": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pydantic.types.DirectoryPath.__modify_schema__": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "classmethod",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "pydantic.types.DirectoryPath.validate": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "classmethod",
    "pathlib.Path"
   ]
  },
  "type": "function"
 },
 "pydantic.types.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "pydantic.types.FilePath": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "pathlib.Path"
   ]
  },
  "type": "class"
 },
 "pydantic.types.FilePath.__get_validators__": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pydantic.types.FilePath.__modify_schema__": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "classmethod",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "pydantic.types.FilePath.validate": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "classmethod",
    "pathlib.Path"
   ]
  },
  "type": "function"
 },
 "pydantic.types.Json": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "pydantic.types.JsonMeta"
   ]
  },
  "type": "class"
 },
 "pydantic.types.Json.__modify_schema__": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "classmethod",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "pydantic.types.JsonMeta": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "pydantic.types.JsonMeta.__getitem__": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "pydantic.types.JsonWrapper",
    "type",
    "typing.Any",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.types.JsonWrapper": {
  "data": {
   "lineno": 580
  },
  "type": "class"
 },
 "pydantic.types.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "pydantic.types.ModelOrDc": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "pydantic.types.NegativeFloat": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "pydantic.types.ConstrainedFloat"
   ]
  },
  "type": "class"
 },
 "pydantic.types.NegativeInt": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "pydantic.types.ConstrainedInt"
   ]
  },
  "type": "class"
 },
 "pydantic.types.NoneBytes": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "pydantic.types.NoneStr": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "pydantic.types.NoneStrBytes": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "pydantic.types.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pydantic.types.OptionalInt": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "pydantic.types.OptionalIntFloat": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "pydantic.types.OptionalIntFloatDecimal": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "pydantic.types.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "pydantic.types.Pattern": {
  "data": {
   "shadows": "typing.Pattern"
  },
  "type": "import"
 },
 "pydantic.types.PaymentCardBrand": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "enum.Enum",
    "str"
   ]
  },
  "type": "class"
 },
 "pydantic.types.PaymentCardBrand.__str__": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pydantic.types.PaymentCardNumber": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "bin",
    "bool",
    "int",
    "pydantic.types.PaymentCardBrand",
    "str",
    "typing.ClassVar"
   ]
  },
  "type": "class"
 },
 "pydantic.types.PaymentCardNumber.__get_validators__": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "cls.validate_digits",
    "cls.validate_length_for_brand",
    "cls.validate_luhn_check_digit",
    "str_validator"
   ]
  },
  "type": "function"
 },
 "pydantic.types.PaymentCardNumber.__init__": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pydantic.types.PaymentCardNumber._get_brand": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "int",
    "pydantic.types.PaymentCardBrand",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "pydantic.types.PaymentCardNumber.masked": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "len",
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "pydantic.types.PaymentCardNumber.validate_digits": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "classmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "pydantic.types.PaymentCardNumber.validate_length_for_brand": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "classmethod",
    "int",
    "len",
    "pydantic.types.PaymentCardBrand",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "pydantic.types.PaymentCardNumber.validate_luhn_check_digit": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "classmethod",
    "int",
    "len",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pydantic.types.PositiveFloat": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "pydantic.types.ConstrainedFloat"
   ]
  },
  "type": "class"
 },
 "pydantic.types.PositiveInt": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "pydantic.types.ConstrainedInt"
   ]
  },
  "type": "class"
 },
 "pydantic.types.PyObject": {
  "data": {
   "lineno": 298
  },
  "type": "class"
 },
 "pydantic.types.PyObject.__get_validators__": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pydantic.types.PyObject.validate": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "ImportError",
    "classmethod",
    "import_string",
    "isinstance",
    "str",
    "str_validator",
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "pydantic.types.SecretBytes": {
  "data": {
   "lineno": 631
  },
  "type": "class"
 },
 "pydantic.types.SecretBytes.__eq__": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "pydantic.types.SecretBytes",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.types.SecretBytes.__get_validators__": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "classmethod",
    "cls.validate"
   ]
  },
  "type": "function"
 },
 "pydantic.types.SecretBytes.__init__": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "bytes"
   ]
  },
  "type": "function"
 },
 "pydantic.types.SecretBytes.__modify_schema__": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "classmethod",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "pydantic.types.SecretBytes.__repr__": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pydantic.types.SecretBytes.__str__": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pydantic.types.SecretBytes.display": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "DeprecationWarning",
    "pydantic.types.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "pydantic.types.SecretBytes.get_secret_value": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "bytes"
   ]
  },
  "type": "function"
 },
 "pydantic.types.SecretBytes.validate": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "bytes_validator",
    "classmethod",
    "cls",
    "isinstance",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.types.SecretStr": {
  "data": {
   "lineno": 595
  },
  "type": "class"
 },
 "pydantic.types.SecretStr.__eq__": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "pydantic.types.SecretStr",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.types.SecretStr.__get_validators__": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pydantic.types.SecretStr.__init__": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pydantic.types.SecretStr.__modify_schema__": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "classmethod",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "pydantic.types.SecretStr.__repr__": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pydantic.types.SecretStr.__str__": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pydantic.types.SecretStr.display": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "DeprecationWarning",
    "pydantic.types.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "pydantic.types.SecretStr.get_secret_value": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pydantic.types.SecretStr.validate": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "isinstance",
    "str_validator",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.types.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "pydantic.types.StrBytes": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "pydantic.types.StrIntFloat": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "pydantic.types.StrictBool": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "class"
 },
 "pydantic.types.StrictBool.__get_validators__": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pydantic.types.StrictBool.__modify_schema__": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "classmethod",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "pydantic.types.StrictBool.validate": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "isinstance",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.types.StrictFloat": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "pydantic.types.ConstrainedFloat"
   ]
  },
  "type": "class"
 },
 "pydantic.types.StrictInt": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "pydantic.types.ConstrainedInt"
   ]
  },
  "type": "class"
 },
 "pydantic.types.StrictStr": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "pydantic.types.ConstrainedStr"
   ]
  },
  "type": "class"
 },
 "pydantic.types.T": {
  "data": {
   "lineno": 128
  },
  "type": "constant"
 },
 "pydantic.types.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "pydantic.types.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "pydantic.types.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "pydantic.types.UUID": {
  "data": {
   "shadows": "uuid.UUID"
  },
  "type": "import"
 },
 "pydantic.types.UUID1": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "uuid.UUID"
   ]
  },
  "type": "class"
 },
 "pydantic.types.UUID1.__modify_schema__": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "classmethod",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "pydantic.types.UUID3": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "pydantic.types.UUID1"
   ]
  },
  "type": "class"
 },
 "pydantic.types.UUID4": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "pydantic.types.UUID1"
   ]
  },
  "type": "class"
 },
 "pydantic.types.UUID5": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "pydantic.types.UUID1"
   ]
  },
  "type": "class"
 },
 "pydantic.types.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pydantic.types.__all__": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "pydantic.types.byte_string_re": {
  "data": {
   "lineno": 783
  },
  "type": "constant"
 },
 "pydantic.types.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "pydantic.types.conbytes": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "bool",
    "bytes",
    "dict",
    "int",
    "pydantic.types.ConstrainedBytes",
    "type",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.types.condecimal": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "decimal.Decimal",
    "dict",
    "int",
    "pydantic.types.ConstrainedDecimal",
    "type",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.types.confloat": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "bool",
    "dict",
    "float",
    "pydantic.types.ConstrainedFloat",
    "type",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.types.conint": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "bool",
    "dict",
    "int",
    "pydantic.types.ConstrainedInt",
    "type",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.types.conlist": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "int",
    "pydantic.types.ConstrainedList",
    "pydantic.types.T",
    "types.new_class",
    "typing.List",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.types.conset": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "int",
    "pydantic.types.ConstrainedSet",
    "pydantic.types.T",
    "types.new_class",
    "typing.Set",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.types.constr": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "bool",
    "dict",
    "int",
    "pydantic.types.ConstrainedStr",
    "pydantic.types.re",
    "str",
    "type",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.types.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pydantic.types.new_class": {
  "data": {
   "shadows": "types.new_class"
  },
  "type": "import"
 },
 "pydantic.types.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pydantic.types.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pydantic.typing": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "int",
    "pydantic.typing.AnyCallable",
    "pydantic.typing.IntStr",
    "pydantic.typing.sys",
    "str",
    "typing.AbstractSet",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.Generator",
    "typing.List",
    "typing.Mapping",
    "typing.NewType",
    "typing.Optional",
    "typing.Sequence",
    "typing.Set",
    "typing.TYPE_CHECKING",
    "typing.Tuple",
    "typing.Union",
    "typing_extensions.Literal"
   ]
  },
  "type": "module"
 },
 "pydantic.typing.AbstractSet": {
  "data": {
   "shadows": "typing.AbstractSet"
  },
  "type": "import"
 },
 "pydantic.typing.AbstractSetIntStr": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "pydantic.typing.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "pydantic.typing.AnyCallable": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "pydantic.typing.Callable": {
  "data": {
   "shadows": "collections.abc.Callable"
  },
  "type": "import"
 },
 "pydantic.typing.CallableGenerator": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "pydantic.typing.ClassVar": {
  "data": {
   "shadows": "typing.ClassVar"
  },
  "type": "import"
 },
 "pydantic.typing.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "pydantic.typing.DictAny": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "pydantic.typing.DictIntStrAny": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "pydantic.typing.DictStrAny": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "pydantic.typing.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "pydantic.typing.ForwardRef": {
  "data": {
   "shadows": "typing.ForwardRef"
  },
  "type": "import"
 },
 "pydantic.typing.ForwardRef._eval_type": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.typing.Generator": {
  "data": {
   "shadows": "typing.Generator"
  },
  "type": "import"
 },
 "pydantic.typing.IntStr": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "pydantic.typing.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "pydantic.typing.ListStr": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "pydantic.typing.Literal": {
  "data": {
   "shadows": "typing.Literal"
  },
  "type": "import"
 },
 "pydantic.typing.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "pydantic.typing.MappingIntStrAny": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "pydantic.typing.NewType": {
  "data": {
   "shadows": "typing.NewType"
  },
  "type": "import"
 },
 "pydantic.typing.NoArgAnyCallable": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "pydantic.typing.NoneType": {
  "data": {
   "lineno": 121
  },
  "type": "constant"
 },
 "pydantic.typing.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pydantic.typing.ReprArgs": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "pydantic.typing.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "pydantic.typing.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "pydantic.typing.SetStr": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "pydantic.typing.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "pydantic.typing.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "pydantic.typing.TupleGenerator": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "pydantic.typing.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "pydantic.typing.TypingCallable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "pydantic.typing.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pydantic.typing.__all__": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "pydantic.typing._check_classvar": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "bool",
    "getattr",
    "pydantic.typing.sys",
    "typing.Any",
    "typing.ClassVar.__class__",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.typing._eval_type": {
  "data": {
   "shadows": "typing._eval_type"
  },
  "type": "import"
 },
 "pydantic.typing.all_literal_values": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "pydantic.typing.is_literal_type",
    "pydantic.typing.literal_values",
    "tuple",
    "typing.Any",
    "typing.Tuple",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.typing.display_as_type": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "AttributeError",
    "enum.Enum",
    "int",
    "isinstance",
    "issubclass",
    "str",
    "type",
    "typing.Any",
    "typing.Type",
    "typing._Final"
   ]
  },
  "type": "function"
 },
 "pydantic.typing.evaluate_forwardref": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "typing.Any",
    "typing.ForwardRef"
   ]
  },
  "type": "function"
 },
 "pydantic.typing.get_class": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "AttributeError",
    "bool",
    "getattr",
    "isinstance",
    "issubclass",
    "type",
    "typing.Any",
    "typing.Type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydantic.typing.is_callable_type": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "bool",
    "getattr",
    "typing.Any",
    "typing.Callable",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.typing.is_classvar": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "bool",
    "getattr",
    "pydantic.typing._check_classvar",
    "typing.Any",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.typing.is_literal_type": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "bool",
    "hasattr",
    "typing.Any",
    "typing.Literal",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.typing.is_new_type": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "bool",
    "hasattr",
    "isinstance",
    "pydantic.typing.test_type",
    "typing.Any",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.typing.literal_values": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "typing.Any",
    "typing.Tuple",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.typing.new_type_supertype": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "hasattr",
    "typing.Any",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.typing.resolve_annotations": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "NameError",
    "isinstance",
    "pydantic.typing.sys",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.ForwardRef",
    "typing.Optional",
    "typing.Type",
    "typing._eval_type"
   ]
  },
  "type": "function"
 },
 "pydantic.typing.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pydantic.typing.test_type": {
  "data": {
   "lineno": 204
  },
  "type": "constant"
 },
 "pydantic.typing.typing_base": {
  "data": {
   "shadows": "typing._Final"
  },
  "type": "import"
 },
 "pydantic.typing.update_field_forward_refs": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "pydantic.typing.evaluate_forwardref",
    "typing.Any",
    "typing.ForwardRef"
   ]
  },
  "type": "function"
 },
 "pydantic.utils": {
  "data": {
   "symbols_in_volume": [
    "typing.TYPE_CHECKING",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "pydantic.utils.AbstractSet": {
  "data": {
   "shadows": "typing.AbstractSet"
  },
  "type": "import"
 },
 "pydantic.utils.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "pydantic.utils.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "pydantic.utils.ClassAttribute": {
  "data": {
   "lineno": 517
  },
  "type": "class"
 },
 "pydantic.utils.ClassAttribute.__get__": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "AttributeError",
    "typing.Any",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.utils.ClassAttribute.__init__": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.utils.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "pydantic.utils.Generator": {
  "data": {
   "shadows": "typing.Generator"
  },
  "type": "import"
 },
 "pydantic.utils.GeneratorType": {
  "data": {
   "shadows": "types.GeneratorType"
  },
  "type": "import"
 },
 "pydantic.utils.GetterDict": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "pydantic.utils.Representation"
   ]
  },
  "type": "class"
 },
 "pydantic.utils.GetterDict.__contains__": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "bool",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.utils.GetterDict.__eq__": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "bool",
    "dict",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.utils.GetterDict.__getitem__": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "getattr",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.utils.GetterDict.__init__": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.utils.GetterDict.__iter__": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "dir",
    "str",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "pydantic.utils.GetterDict.__len__": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "int",
    "sum"
   ]
  },
  "type": "function"
 },
 "pydantic.utils.GetterDict.__repr_args__": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "pydantic.utils.GetterDict.__repr_name__": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "display_as_type",
    "str"
   ]
  },
  "type": "function"
 },
 "pydantic.utils.GetterDict.extra_keys": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "set",
    "typing.Any",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "pydantic.utils.GetterDict.get": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "getattr",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.utils.GetterDict.items": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Iterator",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "pydantic.utils.GetterDict.keys": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "list",
    "typing.Any",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "pydantic.utils.GetterDict.values": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "typing.Any",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "pydantic.utils.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "pydantic.utils.KeyType": {
  "data": {
   "lineno": 121
  },
  "type": "constant"
 },
 "pydantic.utils.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "pydantic.utils.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "pydantic.utils.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pydantic.utils.Parameter": {
  "data": {
   "shadows": "inspect.Parameter"
  },
  "type": "import"
 },
 "pydantic.utils.PyObjectStr": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "class"
 },
 "pydantic.utils.PyObjectStr.__repr__": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pydantic.utils.Representation": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "str",
    "tuple",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "pydantic.utils.Representation.__pretty__": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "fmt",
    "typing.Any",
    "typing.Callable",
    "typing.Generator"
   ]
  },
  "type": "function"
 },
 "pydantic.utils.Representation.__repr__": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pydantic.utils.Representation.__repr_args__": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "pydantic.utils.Representation.__repr_name__": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pydantic.utils.Representation.__repr_str__": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "pydantic.utils.Representation.__str__": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pydantic.utils.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "pydantic.utils.Signature": {
  "data": {
   "shadows": "inspect.Signature"
  },
  "type": "import"
 },
 "pydantic.utils.T": {
  "data": {
   "lineno": 225
  },
  "type": "constant"
 },
 "pydantic.utils.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "pydantic.utils.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "pydantic.utils.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "pydantic.utils.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "pydantic.utils.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pydantic.utils.ValueItems": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "pydantic.utils.Representation"
   ]
  },
  "type": "class"
 },
 "pydantic.utils.ValueItems.__init__": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "TypeError",
    "dict",
    "isinstance",
    "len",
    "list",
    "set",
    "tuple",
    "typing.AbstractSet",
    "typing.Any",
    "typing.Mapping",
    "typing.TYPE_CHECKING",
    "typing.Type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydantic.utils.ValueItems.__repr_args__": {
  "data": {
   "lineno": 513
  },
  "type": "function"
 },
 "pydantic.utils.ValueItems._normalize_indexes": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "any",
    "default",
    "dict",
    "int",
    "isinstance",
    "pydantic.utils.update_normalized_all",
    "range",
    "set",
    "typing.AbstractSet",
    "typing.Any",
    "typing.Dict",
    "typing.Mapping",
    "typing.Set",
    "typing.Type",
    "typing.Union",
    "typing.no_type_check"
   ]
  },
  "type": "function"
 },
 "pydantic.utils.ValueItems.for_element": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "dict",
    "typing.Optional",
    "typing.Union",
    "typing.no_type_check"
   ]
  },
  "type": "function"
 },
 "pydantic.utils.ValueItems.is_excluded": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "bool",
    "set",
    "typing.Any",
    "typing.no_type_check"
   ]
  },
  "type": "function"
 },
 "pydantic.utils.ValueItems.is_included": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "bool",
    "typing.Any",
    "typing.no_type_check"
   ]
  },
  "type": "function"
 },
 "pydantic.utils.__all__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pydantic.utils.almost_equal_floats": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "abs",
    "bool",
    "float"
   ]
  },
  "type": "function"
 },
 "pydantic.utils.deep_update": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "pydantic.utils.KeyType",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "pydantic.utils.generate_model_signature": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "inspect.Parameter",
    "inspect.Parameter.KEYWORD_ONLY",
    "inspect.Parameter.POSITIONAL_OR_KEYWORD",
    "inspect.Parameter.VAR_KEYWORD",
    "inspect.Signature",
    "inspect.signature",
    "itertools.islice",
    "list",
    "str",
    "typing.Callable",
    "typing.Dict",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.utils.get_model": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "issubclass",
    "typing.Type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydantic.utils.import_module": {
  "data": {
   "shadows": "importlib.import_module"
  },
  "type": "import"
 },
 "pydantic.utils.import_string": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "ValueError",
    "getattr",
    "importlib.import_module",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.utils.in_ipython": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "NameError",
    "bool",
    "eval"
   ]
  },
  "type": "function"
 },
 "pydantic.utils.islice": {
  "data": {
   "shadows": "itertools.islice"
  },
  "type": "import"
 },
 "pydantic.utils.lenient_issubclass": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "issubclass",
    "type",
    "typing.Any",
    "typing.Tuple",
    "typing.Type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydantic.utils.no_type_check": {
  "data": {
   "shadows": "typing.no_type_check"
  },
  "type": "import"
 },
 "pydantic.utils.sequence_like": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "bool",
    "frozenset",
    "isinstance",
    "list",
    "set",
    "tuple",
    "types.GeneratorType",
    "typing.Any",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.utils.signature": {
  "data": {
   "shadows": "inspect.signature"
  },
  "type": "import"
 },
 "pydantic.utils.to_camel": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pydantic.utils.truncate": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "DeprecationWarning",
    "TypeError",
    "int",
    "isinstance",
    "len",
    "pydantic.utils.warnings",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydantic.utils.unique_list": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "pydantic.utils.T",
    "set",
    "typing.List",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydantic.utils.update_normalized_all": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "set",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydantic.utils.update_not_none": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "pydantic.utils.validate_field_name": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "NameError",
    "getattr",
    "str",
    "typing.List",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pydantic.validators": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "bytes",
    "collections.OrderedDict",
    "datetime.date",
    "datetime.datetime",
    "datetime.time",
    "datetime.timedelta",
    "decimal.Decimal",
    "dict",
    "enum.Enum",
    "enum.IntEnum",
    "float",
    "frozenset",
    "int",
    "ipaddress.IPv4Address",
    "ipaddress.IPv4Interface",
    "ipaddress.IPv4Network",
    "ipaddress.IPv6Address",
    "ipaddress.IPv6Interface",
    "ipaddress.IPv6Network",
    "list",
    "pathlib.Path",
    "pydantic.validators.IfConfig",
    "pydantic.validators.anystr_length_validator",
    "pydantic.validators.anystr_strip_whitespace",
    "pydantic.validators.bool_validator",
    "pydantic.validators.bytes_validator",
    "pydantic.validators.decimal_validator",
    "pydantic.validators.dict_validator",
    "pydantic.validators.enum_validator",
    "pydantic.validators.float_validator",
    "pydantic.validators.frozenset_validator",
    "pydantic.validators.int_validator",
    "pydantic.validators.ip_v4_address_validator",
    "pydantic.validators.ip_v4_interface_validator",
    "pydantic.validators.ip_v4_network_validator",
    "pydantic.validators.ip_v6_address_validator",
    "pydantic.validators.ip_v6_interface_validator",
    "pydantic.validators.ip_v6_network_validator",
    "pydantic.validators.list_validator",
    "pydantic.validators.ordered_dict_validator",
    "pydantic.validators.path_validator",
    "pydantic.validators.set_validator",
    "pydantic.validators.str_validator",
    "pydantic.validators.tuple_validator",
    "pydantic.validators.uuid_validator",
    "set",
    "str",
    "tuple",
    "typing.Any",
    "typing.List",
    "typing.TYPE_CHECKING",
    "typing.Tuple",
    "typing.Type",
    "typing.TypeVar",
    "typing.Union",
    "uuid.UUID"
   ]
  },
  "type": "module"
 },
 "pydantic.validators.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "pydantic.validators.AnyOrderedDict": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "pydantic.validators.BOOL_FALSE": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "pydantic.validators.BOOL_TRUE": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "pydantic.validators.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "pydantic.validators.ConstrainedNumber": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pydantic.validators.Decimal": {
  "data": {
   "shadows": "decimal.Decimal"
  },
  "type": "import"
 },
 "pydantic.validators.DecimalException": {
  "data": {
   "shadows": "decimal.DecimalException"
  },
  "type": "import"
 },
 "pydantic.validators.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "pydantic.validators.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "pydantic.validators.FrozenSet": {
  "data": {
   "shadows": "typing.FrozenSet"
  },
  "type": "import"
 },
 "pydantic.validators.Generator": {
  "data": {
   "shadows": "typing.Generator"
  },
  "type": "import"
 },
 "pydantic.validators.Hashable": {
  "data": {
   "shadows": "collections.abc.Hashable"
  },
  "type": "import"
 },
 "pydantic.validators.IPv4Address": {
  "data": {
   "shadows": "ipaddress.IPv4Address"
  },
  "type": "import"
 },
 "pydantic.validators.IPv4Interface": {
  "data": {
   "shadows": "ipaddress.IPv4Interface"
  },
  "type": "import"
 },
 "pydantic.validators.IPv4Network": {
  "data": {
   "shadows": "ipaddress.IPv4Network"
  },
  "type": "import"
 },
 "pydantic.validators.IPv6Address": {
  "data": {
   "shadows": "ipaddress.IPv6Address"
  },
  "type": "import"
 },
 "pydantic.validators.IPv6Interface": {
  "data": {
   "shadows": "ipaddress.IPv6Interface"
  },
  "type": "import"
 },
 "pydantic.validators.IPv6Network": {
  "data": {
   "shadows": "ipaddress.IPv6Network"
  },
  "type": "import"
 },
 "pydantic.validators.IfConfig": {
  "data": {
   "lineno": 493
  },
  "type": "class"
 },
 "pydantic.validators.IfConfig.__init__": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pydantic.validators.IfConfig.check": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "any",
    "bool",
    "getattr",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.validators.IntEnum": {
  "data": {
   "shadows": "enum.IntEnum"
  },
  "type": "import"
 },
 "pydantic.validators.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "pydantic.validators.Number": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "pydantic.validators.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pydantic.validators.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "pydantic.validators.Pattern": {
  "data": {
   "shadows": "typing.Pattern"
  },
  "type": "import"
 },
 "pydantic.validators.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "pydantic.validators.StrBytes": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "pydantic.validators.T": {
  "data": {
   "lineno": 454
  },
  "type": "constant"
 },
 "pydantic.validators.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "pydantic.validators.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "pydantic.validators.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "pydantic.validators.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "pydantic.validators.UUID": {
  "data": {
   "shadows": "uuid.UUID"
  },
  "type": "import"
 },
 "pydantic.validators.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pydantic.validators.any_class_validator": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "isinstance",
    "pydantic.validators.T",
    "type",
    "typing.Any",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.validators.anystr_length_validator": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pydantic.validators.anystr_strip_whitespace": {
  "data": {
   "lineno": 188
  },
  "type": "function"
 },
 "pydantic.validators.bool_validator": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "bytes",
    "isinstance",
    "pydantic.validators.BOOL_FALSE",
    "pydantic.validators.BOOL_TRUE",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.validators.bytes_validator": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "bytearray",
    "bytes",
    "decimal.Decimal",
    "float",
    "int",
    "isinstance",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.validators.callable_validator": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "callable",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.validators.constant_validator": {
  "data": {
   "lineno": 161
  },
  "type": "function"
 },
 "pydantic.validators.constr_length_validator": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pydantic.validators.constr_strip_whitespace": {
  "data": {
   "lineno": 434
  },
  "type": "function"
 },
 "pydantic.validators.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "pydantic.validators.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pydantic.validators.decimal_validator": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "bytearray",
    "bytes",
    "decimal.Decimal",
    "decimal.DecimalException",
    "isinstance",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.validators.dict_validator": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dict",
    "isinstance",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "pydantic.validators.enum_validator": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "ValueError",
    "enum.Enum",
    "list",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.validators.find_validators": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "collections.abc.Hashable",
    "display_as_type",
    "get_class",
    "is_callable_type",
    "is_literal_type",
    "isinstance",
    "issubclass",
    "pydantic.validators.IfConfig",
    "pydantic.validators.any_class_validator",
    "pydantic.validators.callable_validator",
    "pydantic.validators.hashable_validator",
    "pydantic.validators.make_arbitrary_type_validator",
    "pydantic.validators.make_class_validator",
    "pydantic.validators.make_literal_validator",
    "pydantic.validators.pattern_validator",
    "type",
    "typing.Any",
    "typing.Generator",
    "typing.Pattern",
    "typing.Type",
    "typing.TypeVar"
   ]
  },
  "type": "function"
 },
 "pydantic.validators.float_validator": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "float",
    "isinstance",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.validators.frozenset_validator": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "frozenset",
    "isinstance",
    "sequence_like",
    "typing.Any",
    "typing.FrozenSet"
   ]
  },
  "type": "function"
 },
 "pydantic.validators.hashable_validator": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "collections.abc.Hashable",
    "isinstance",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.validators.int_validator": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "int",
    "isinstance",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.validators.ip_v4_address_validator": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "ValueError",
    "ipaddress.IPv4Address",
    "isinstance",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.validators.ip_v4_interface_validator": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "ValueError",
    "ipaddress.IPv4Interface",
    "isinstance",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.validators.ip_v4_network_validator": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "ValueError",
    "ipaddress.IPv4Network",
    "isinstance",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.validators.ip_v6_address_validator": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "ValueError",
    "ipaddress.IPv6Address",
    "isinstance",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.validators.ip_v6_interface_validator": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "ValueError",
    "ipaddress.IPv6Interface",
    "isinstance",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.validators.ip_v6_network_validator": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "ValueError",
    "ipaddress.IPv6Network",
    "isinstance",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.validators.list_validator": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "sequence_like",
    "typing.Any",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "pydantic.validators.make_arbitrary_type_validator": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "pydantic.validators.T",
    "typing.Callable",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.validators.make_arbitrary_type_validator.arbitrary_type_validator": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "isinstance",
    "pydantic.validators.T",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.validators.make_class_validator": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "pydantic.validators.T",
    "typing.Any",
    "typing.Callable",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.validators.make_class_validator.class_validator": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "lenient_issubclass",
    "pydantic.validators.T",
    "typing.Any",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "pydantic.validators.make_literal_validator": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "all_literal_values",
    "set",
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "pydantic.validators.make_literal_validator.literal_validator": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.validators.number_multiple_validator": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "almost_equal_floats",
    "float",
    "pydantic.validators.ConstrainedNumber"
   ]
  },
  "type": "function"
 },
 "pydantic.validators.number_size_validator": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "pydantic.validators.ConstrainedNumber"
   ]
  },
  "type": "function"
 },
 "pydantic.validators.ordered_dict_validator": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "collections.OrderedDict",
    "isinstance",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.validators.path_exists_validator": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "pathlib.Path",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.validators.path_validator": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "pathlib.Path",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.validators.pattern_validator": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "isinstance",
    "pydantic.validators.re",
    "pydantic.validators.str_validator",
    "str",
    "typing.Any",
    "typing.Pattern"
   ]
  },
  "type": "function"
 },
 "pydantic.validators.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pydantic.validators.set_validator": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "isinstance",
    "sequence_like",
    "set",
    "typing.Any",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "pydantic.validators.str_validator": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "bytearray",
    "bytes",
    "decimal.Decimal",
    "enum.Enum",
    "float",
    "int",
    "isinstance",
    "str",
    "typing.Any",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydantic.validators.strict_float_validator": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.validators.strict_int_validator": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.validators.strict_str_validator": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "typing.Any",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydantic.validators.time": {
  "data": {
   "shadows": "datetime.time"
  },
  "type": "import"
 },
 "pydantic.validators.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pydantic.validators.tuple_validator": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "isinstance",
    "sequence_like",
    "tuple",
    "typing.Any",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "pydantic.validators.uuid_validator": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "ValueError",
    "bytearray",
    "bytes",
    "getattr",
    "isinstance",
    "str",
    "typing.Any",
    "uuid.UUID"
   ]
  },
  "type": "function"
 },
 "pydantic.validators.validate_json": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "pydantic.version": {
  "data": {},
  "type": "module"
 },
 "pydantic.version.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "pydantic.version.VERSION": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "pydantic.version.__all__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "pydantic.version.import_module": {
  "data": {
   "shadows": "importlib.import_module"
  },
  "type": "import"
 },
 "pydantic.version.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "pydantic.version.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pydantic.version.version_info": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "ImportError",
    "importlib.import_module",
    "pathlib.Path",
    "pydantic.version.VERSION",
    "pydantic.version.platform",
    "pydantic.version.sys",
    "str"
   ]
  },
  "type": "function"
 }
}