{
 "parsimonious": {
  "data": {},
  "type": "module"
 },
 "parsimonious.BadGrammar": {
  "data": {
   "shadows": "parsimonious.exceptions.BadGrammar"
  },
  "type": "import"
 },
 "parsimonious.Grammar": {
  "data": {
   "shadows": "parsimonious.grammar.Grammar"
  },
  "type": "import"
 },
 "parsimonious.IncompleteParseError": {
  "data": {
   "shadows": "parsimonious.exceptions.IncompleteParseError"
  },
  "type": "import"
 },
 "parsimonious.NodeVisitor": {
  "data": {
   "shadows": "parsimonious.nodes.NodeVisitor"
  },
  "type": "import"
 },
 "parsimonious.ParseError": {
  "data": {
   "shadows": "parsimonious.exceptions.ParseError"
  },
  "type": "import"
 },
 "parsimonious.TokenGrammar": {
  "data": {
   "shadows": "parsimonious.grammar.TokenGrammar"
  },
  "type": "import"
 },
 "parsimonious.UndefinedLabel": {
  "data": {
   "shadows": "parsimonious.exceptions.UndefinedLabel"
  },
  "type": "import"
 },
 "parsimonious.VisitationError": {
  "data": {
   "shadows": "parsimonious.nodes.VisitationError"
  },
  "type": "import"
 },
 "parsimonious.exceptions": {
  "data": {},
  "type": "module"
 },
 "parsimonious.exceptions.BadGrammar": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "Exception",
    "parsimonious.utils.StrAndRepr"
   ]
  },
  "type": "class"
 },
 "parsimonious.exceptions.IncompleteParseError": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "parsimonious.exceptions.ParseError",
    "six.python_2_unicode_compatible"
   ]
  },
  "type": "class"
 },
 "parsimonious.exceptions.IncompleteParseError.__str__": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "parsimonious.exceptions.ParseError": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "Exception",
    "parsimonious.utils.StrAndRepr",
    "six.python_2_unicode_compatible"
   ]
  },
  "type": "class"
 },
 "parsimonious.exceptions.ParseError.__init__": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "parsimonious.exceptions.ParseError.__str__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "six.text_type"
   ]
  },
  "type": "function"
 },
 "parsimonious.exceptions.ParseError.column": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "parsimonious.exceptions.ParseError.line": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "parsimonious.exceptions.StrAndRepr": {
  "data": {
   "shadows": "parsimonious.utils.StrAndRepr"
  },
  "type": "import"
 },
 "parsimonious.exceptions.UndefinedLabel": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "parsimonious.exceptions.BadGrammar",
    "six.python_2_unicode_compatible"
   ]
  },
  "type": "class"
 },
 "parsimonious.exceptions.UndefinedLabel.__init__": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "parsimonious.exceptions.UndefinedLabel.__str__": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "parsimonious.exceptions.VisitationError": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "parsimonious.exceptions.VisitationError.__init__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "parsimonious.exceptions.VisitationError",
    "super"
   ]
  },
  "type": "function"
 },
 "parsimonious.exceptions.python_2_unicode_compatible": {
  "data": {
   "shadows": "six.python_2_unicode_compatible"
  },
  "type": "import"
 },
 "parsimonious.exceptions.text_type": {
  "data": {
   "shadows": "six.text_type"
  },
  "type": "import"
 },
 "parsimonious.expressions": {
  "data": {
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "module"
 },
 "parsimonious.expressions.Compound": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "parsimonious.expressions.Expression"
   ]
  },
  "type": "class"
 },
 "parsimonious.expressions.Compound.__eq__": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "parsimonious.expressions.Compound.__hash__": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "parsimonious.expressions.Compound.__init__": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "parsimonious.expressions.Compound",
    "super"
   ]
  },
  "type": "function"
 },
 "parsimonious.expressions.Expression": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "parsimonious.utils.StrAndRepr",
    "six.python_2_unicode_compatible"
   ]
  },
  "type": "class"
 },
 "parsimonious.expressions.Expression.__eq__": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "parsimonious.expressions.Expression.__hash__": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "parsimonious.expressions.Expression.__init__": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "parsimonious.expressions.Expression.__ne__": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "parsimonious.expressions.Expression.__str__": {
  "data": {
   "lineno": 192
  },
  "type": "function"
 },
 "parsimonious.expressions.Expression._as_rhs": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "parsimonious.expressions.Expression._unicode_members": {
  "data": {
   "lineno": 209
  },
  "type": "function"
 },
 "parsimonious.expressions.Expression.as_rule": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "parsimonious.expressions.Expression.match": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "parsimonious.exceptions.ParseError"
   ]
  },
  "type": "function"
 },
 "parsimonious.expressions.Expression.match_core": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "getattr",
    "id",
    "parsimonious.expressions.MARKER"
   ]
  },
  "type": "function"
 },
 "parsimonious.expressions.Expression.parse": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "len",
    "parsimonious.exceptions.IncompleteParseError"
   ]
  },
  "type": "function"
 },
 "parsimonious.expressions.IncompleteParseError": {
  "data": {
   "shadows": "parsimonious.exceptions.IncompleteParseError"
  },
  "type": "import"
 },
 "parsimonious.expressions.Literal": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "parsimonious.expressions.Expression"
   ]
  },
  "type": "class"
 },
 "parsimonious.expressions.Literal.__init__": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "parsimonious.expressions.Literal",
    "super"
   ]
  },
  "type": "function"
 },
 "parsimonious.expressions.Literal._as_rhs": {
  "data": {
   "lineno": 241
  },
  "type": "function"
 },
 "parsimonious.expressions.Literal._uncached_match": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "len",
    "parsimonious.nodes.Node"
   ]
  },
  "type": "function"
 },
 "parsimonious.expressions.Lookahead": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "parsimonious.expressions.Compound"
   ]
  },
  "type": "class"
 },
 "parsimonious.expressions.Lookahead._as_rhs": {
  "data": {
   "lineno": 378
  },
  "type": "function"
 },
 "parsimonious.expressions.Lookahead._uncached_match": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "parsimonious.nodes.Node"
   ]
  },
  "type": "function"
 },
 "parsimonious.expressions.MARKER": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "parsimonious.expressions.Node": {
  "data": {
   "shadows": "parsimonious.nodes.Node"
  },
  "type": "import"
 },
 "parsimonious.expressions.Not": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "parsimonious.expressions.Compound"
   ]
  },
  "type": "class"
 },
 "parsimonious.expressions.Not._as_rhs": {
  "data": {
   "lineno": 395
  },
  "type": "function"
 },
 "parsimonious.expressions.Not._uncached_match": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "parsimonious.nodes.Node"
   ]
  },
  "type": "function"
 },
 "parsimonious.expressions.OneOf": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "parsimonious.expressions.Compound"
   ]
  },
  "type": "class"
 },
 "parsimonious.expressions.OneOf._as_rhs": {
  "data": {
   "lineno": 361
  },
  "type": "function"
 },
 "parsimonious.expressions.OneOf._uncached_match": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "parsimonious.nodes.Node"
   ]
  },
  "type": "function"
 },
 "parsimonious.expressions.OneOrMore": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "parsimonious.expressions.Compound"
   ]
  },
  "type": "class"
 },
 "parsimonious.expressions.OneOrMore.__init__": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "min",
    "parsimonious.expressions.OneOrMore",
    "super"
   ]
  },
  "type": "function"
 },
 "parsimonious.expressions.OneOrMore._as_rhs": {
  "data": {
   "lineno": 469
  },
  "type": "function"
 },
 "parsimonious.expressions.OneOrMore._uncached_match": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "len",
    "parsimonious.nodes.Node"
   ]
  },
  "type": "function"
 },
 "parsimonious.expressions.Optional": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "parsimonious.expressions.Compound"
   ]
  },
  "type": "class"
 },
 "parsimonious.expressions.Optional._as_rhs": {
  "data": {
   "lineno": 415
  },
  "type": "function"
 },
 "parsimonious.expressions.Optional._uncached_match": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "parsimonious.nodes.Node"
   ]
  },
  "type": "function"
 },
 "parsimonious.expressions.ParseError": {
  "data": {
   "shadows": "parsimonious.exceptions.ParseError"
  },
  "type": "import"
 },
 "parsimonious.expressions.Regex": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "parsimonious.expressions.Expression"
   ]
  },
  "type": "class"
 },
 "parsimonious.expressions.Regex.__init__": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "parsimonious.expressions.Regex",
    "parsimonious.expressions.re",
    "super"
   ]
  },
  "type": "function"
 },
 "parsimonious.expressions.Regex._as_rhs": {
  "data": {
   "lineno": 291
  },
  "type": "function"
 },
 "parsimonious.expressions.Regex._regex_flags_from_bits": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "len",
    "six.moves.range"
   ]
  },
  "type": "function"
 },
 "parsimonious.expressions.Regex._uncached_match": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "parsimonious.nodes.RegexNode"
   ]
  },
  "type": "function"
 },
 "parsimonious.expressions.RegexNode": {
  "data": {
   "shadows": "parsimonious.nodes.RegexNode"
  },
  "type": "import"
 },
 "parsimonious.expressions.Sequence": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "parsimonious.expressions.Compound"
   ]
  },
  "type": "class"
 },
 "parsimonious.expressions.Sequence._as_rhs": {
  "data": {
   "lineno": 343
  },
  "type": "function"
 },
 "parsimonious.expressions.Sequence._uncached_match": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "parsimonious.nodes.Node"
   ]
  },
  "type": "function"
 },
 "parsimonious.expressions.StrAndRepr": {
  "data": {
   "shadows": "parsimonious.utils.StrAndRepr"
  },
  "type": "import"
 },
 "parsimonious.expressions.TokenMatcher": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "parsimonious.expressions.Literal"
   ]
  },
  "type": "class"
 },
 "parsimonious.expressions.TokenMatcher._uncached_match": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "parsimonious.nodes.Node"
   ]
  },
  "type": "function"
 },
 "parsimonious.expressions.ZeroOrMore": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "parsimonious.expressions.Compound"
   ]
  },
  "type": "class"
 },
 "parsimonious.expressions.ZeroOrMore._as_rhs": {
  "data": {
   "lineno": 434
  },
  "type": "function"
 },
 "parsimonious.expressions.ZeroOrMore._uncached_match": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "parsimonious.nodes.Node"
   ]
  },
  "type": "function"
 },
 "parsimonious.expressions.expression": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "AdHocExpression",
    "RuntimeError",
    "callable",
    "inspect.getargspec",
    "len"
   ]
  },
  "type": "function"
 },
 "parsimonious.expressions.expression.AdHocExpression": {
  "data": {
   "lineno": 69
  },
  "type": "class"
 },
 "parsimonious.expressions.expression.AdHocExpression._as_rhs": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "callable.__name__"
   ]
  },
  "type": "function"
 },
 "parsimonious.expressions.expression.AdHocExpression._uncached_match": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "callable",
    "isinstance",
    "parsimonious.nodes.Node",
    "six.integer_types",
    "tuple"
   ]
  },
  "type": "function"
 },
 "parsimonious.expressions.getargspec": {
  "data": {
   "shadows": "inspect.getargspec"
  },
  "type": "import"
 },
 "parsimonious.expressions.integer_types": {
  "data": {
   "shadows": "six.integer_types"
  },
  "type": "import"
 },
 "parsimonious.expressions.python_2_unicode_compatible": {
  "data": {
   "shadows": "six.python_2_unicode_compatible"
  },
  "type": "import"
 },
 "parsimonious.expressions.range": {
  "data": {
   "shadows": "six.moves.range"
  },
  "type": "import"
 },
 "parsimonious.expressions.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "parsimonious.nodes": {
  "data": {},
  "type": "module"
 },
 "parsimonious.nodes.Grammar": {
  "data": {
   "shadows": "parsimonious.grammar.Grammar"
  },
  "type": "import"
 },
 "parsimonious.nodes.Node": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "object",
    "six.python_2_unicode_compatible"
   ]
  },
  "type": "class"
 },
 "parsimonious.nodes.Node.__eq__": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "NotImplemented",
    "isinstance",
    "parsimonious.nodes.Node"
   ]
  },
  "type": "function"
 },
 "parsimonious.nodes.Node.__init__": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "parsimonious.nodes.Node.__iter__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "parsimonious.nodes.Node.__ne__": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "parsimonious.nodes.Node.__repr__": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "parsimonious.nodes.Node.__str__": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "parsimonious.nodes.Node.expr_name": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "parsimonious.nodes.Node.prettily": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "indent"
   ]
  },
  "type": "function"
 },
 "parsimonious.nodes.Node.prettily.indent": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "parsimonious.nodes.Node.text": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "parsimonious.nodes.NodeVisitor": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "object",
    "parsimonious.nodes.RuleDecoratorMeta",
    "six.with_metaclass"
   ]
  },
  "type": "class"
 },
 "parsimonious.nodes.NodeVisitor._parse_or_match": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "RuntimeError",
    "getattr"
   ]
  },
  "type": "function"
 },
 "parsimonious.nodes.NodeVisitor.generic_visit": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "parsimonious.nodes.NodeVisitor.lift_child": {
  "data": {
   "lineno": 268
  },
  "type": "function"
 },
 "parsimonious.nodes.NodeVisitor.match": {
  "data": {
   "lineno": 256
  },
  "type": "function"
 },
 "parsimonious.nodes.NodeVisitor.parse": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "parsimonious.nodes.NodeVisitor.visit": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "Exception",
    "getattr",
    "method",
    "parsimonious.exceptions.UndefinedLabel",
    "parsimonious.exceptions.VisitationError",
    "six.reraise",
    "sys.exc_info"
   ]
  },
  "type": "function"
 },
 "parsimonious.nodes.RegexNode": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "parsimonious.nodes.Node"
   ]
  },
  "type": "class"
 },
 "parsimonious.nodes.RuleDecoratorMeta": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "parsimonious.nodes.RuleDecoratorMeta.__new__": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "hasattr",
    "inspect.isfunction",
    "parsimonious.grammar.Grammar",
    "parsimonious.nodes.RuleDecoratorMeta",
    "six.iteritems",
    "super",
    "sys.version_info",
    "unvisit"
   ]
  },
  "type": "function"
 },
 "parsimonious.nodes.RuleDecoratorMeta.__new__.unvisit": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "parsimonious.nodes.UndefinedLabel": {
  "data": {
   "shadows": "parsimonious.exceptions.UndefinedLabel"
  },
  "type": "import"
 },
 "parsimonious.nodes.VisitationError": {
  "data": {
   "shadows": "parsimonious.exceptions.VisitationError"
  },
  "type": "import"
 },
 "parsimonious.nodes.exc_info": {
  "data": {
   "shadows": "sys.exc_info"
  },
  "type": "import"
 },
 "parsimonious.nodes.isfunction": {
  "data": {
   "shadows": "inspect.isfunction"
  },
  "type": "import"
 },
 "parsimonious.nodes.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "parsimonious.nodes.python_2_unicode_compatible": {
  "data": {
   "shadows": "six.python_2_unicode_compatible"
  },
  "type": "import"
 },
 "parsimonious.nodes.reraise": {
  "data": {
   "shadows": "six.reraise"
  },
  "type": "import"
 },
 "parsimonious.nodes.rule": {
  "data": {
   "lineno": 292
  },
  "type": "function"
 },
 "parsimonious.nodes.rule.decorator": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "method",
    "method._rule"
   ]
  },
  "type": "function"
 },
 "parsimonious.nodes.version_info": {
  "data": {
   "shadows": "sys.version_info"
  },
  "type": "import"
 },
 "parsimonious.nodes.with_metaclass": {
  "data": {
   "shadows": "six.with_metaclass"
  },
  "type": "import"
 },
 "parsimonious.rule": {
  "data": {
   "shadows": "parsimonious.nodes.rule"
  },
  "type": "import"
 },
 "parsimonious.tests": {
  "data": {},
  "type": "module"
 },
 "parsimonious.tests.test_benchmarks": {
  "data": {
   "symbols_in_volume": [
    "functools.partial",
    "timeit.timeit"
   ]
  },
  "type": "module"
 },
 "parsimonious.tests.test_benchmarks.ok_": {
  "data": {
   "shadows": "nose.tools.ok_"
  },
  "type": "import"
 },
 "parsimonious.tests.test_benchmarks.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "parsimonious.tests.test_benchmarks.test_call_vs_inline": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "nose.tools.ok_",
    "timeit.timeit"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_benchmarks.test_lists_vs_dicts": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "nose.tools.ok_",
    "timeit.timeit"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_benchmarks.test_startswith_vs_regex": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "nose.tools.ok_",
    "timeit.timeit"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_benchmarks.timeit": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "parsimonious.tests.test_expressions": {
  "data": {},
  "type": "module"
 },
 "parsimonious.tests.test_expressions.ErrorReportingTests": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "parsimonious.tests.test_expressions.ErrorReportingTests.test_favoring_named_rules": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "nose.tools.eq_",
    "parsimonious.exceptions.ParseError",
    "parsimonious.grammar.Grammar",
    "six.text_type"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_expressions.ErrorReportingTests.test_inner_rule_succeeding": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "nose.tools.eq_",
    "parsimonious.exceptions.ParseError",
    "parsimonious.grammar.Grammar",
    "six.text_type"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_expressions.ErrorReportingTests.test_line_and_column": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "nose.tools.ok_",
    "parsimonious.exceptions.ParseError",
    "parsimonious.grammar.Grammar",
    "six.text_type"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_expressions.ErrorReportingTests.test_no_named_rule_succeeding": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "nose.tools.eq_",
    "parsimonious.exceptions.ParseError",
    "parsimonious.grammar.Grammar"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_expressions.ErrorReportingTests.test_parse_with_leftovers": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "nose.tools.eq_",
    "parsimonious.exceptions.IncompleteParseError",
    "parsimonious.grammar.Grammar",
    "six.text_type"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_expressions.ErrorReportingTests.test_rewinding": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "nose.tools.eq_",
    "parsimonious.exceptions.ParseError",
    "parsimonious.grammar.Grammar"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_expressions.Expression": {
  "data": {
   "shadows": "parsimonious.expressions.Expression"
  },
  "type": "import"
 },
 "parsimonious.tests.test_expressions.Grammar": {
  "data": {
   "shadows": "parsimonious.grammar.Grammar"
  },
  "type": "import"
 },
 "parsimonious.tests.test_expressions.IncompleteParseError": {
  "data": {
   "shadows": "parsimonious.exceptions.IncompleteParseError"
  },
  "type": "import"
 },
 "parsimonious.tests.test_expressions.LengthTests": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "parsimonious.tests.test_expressions.LengthTests.test_not": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "nose.tools.assert_raises",
    "parsimonious.exceptions.ParseError",
    "parsimonious.expressions.Not",
    "parsimonious.expressions.Regex",
    "parsimonious.tests.test_expressions.len_eq"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_expressions.LengthTests.test_one_of": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "nose.tools.assert_raises",
    "parsimonious.exceptions.ParseError",
    "parsimonious.expressions.Literal",
    "parsimonious.expressions.OneOf",
    "parsimonious.tests.test_expressions.len_eq"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_expressions.LengthTests.test_one_or_more": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "nose.tools.assert_raises",
    "parsimonious.exceptions.ParseError",
    "parsimonious.expressions.Literal",
    "parsimonious.expressions.OneOrMore",
    "parsimonious.expressions.Regex",
    "parsimonious.tests.test_expressions.len_eq"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_expressions.LengthTests.test_optional": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "parsimonious.expressions.Literal",
    "parsimonious.expressions.Optional",
    "parsimonious.expressions.Sequence",
    "parsimonious.tests.test_expressions.len_eq"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_expressions.LengthTests.test_regex": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "nose.tools.assert_raises",
    "parsimonious.exceptions.ParseError",
    "parsimonious.expressions.Literal",
    "parsimonious.expressions.Regex",
    "parsimonious.tests.test_expressions.len_eq"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_expressions.LengthTests.test_sequence": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "nose.tools.assert_raises",
    "parsimonious.exceptions.ParseError",
    "parsimonious.expressions.Literal",
    "parsimonious.expressions.Regex",
    "parsimonious.expressions.Sequence",
    "parsimonious.tests.test_expressions.len_eq"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_expressions.LengthTests.test_zero_or_more": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "parsimonious.expressions.Literal",
    "parsimonious.expressions.Regex",
    "parsimonious.expressions.ZeroOrMore",
    "parsimonious.tests.test_expressions.len_eq"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_expressions.Literal": {
  "data": {
   "shadows": "parsimonious.expressions.Literal"
  },
  "type": "import"
 },
 "parsimonious.tests.test_expressions.Node": {
  "data": {
   "shadows": "parsimonious.nodes.Node"
  },
  "type": "import"
 },
 "parsimonious.tests.test_expressions.Not": {
  "data": {
   "shadows": "parsimonious.expressions.Not"
  },
  "type": "import"
 },
 "parsimonious.tests.test_expressions.OneOf": {
  "data": {
   "shadows": "parsimonious.expressions.OneOf"
  },
  "type": "import"
 },
 "parsimonious.tests.test_expressions.OneOrMore": {
  "data": {
   "shadows": "parsimonious.expressions.OneOrMore"
  },
  "type": "import"
 },
 "parsimonious.tests.test_expressions.Optional": {
  "data": {
   "shadows": "parsimonious.expressions.Optional"
  },
  "type": "import"
 },
 "parsimonious.tests.test_expressions.ParseError": {
  "data": {
   "shadows": "parsimonious.exceptions.ParseError"
  },
  "type": "import"
 },
 "parsimonious.tests.test_expressions.ParseTests": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "parsimonious.tests.test_expressions.ParseTests.test_parse_success": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "nose.tools.eq_",
    "parsimonious.expressions.Literal",
    "parsimonious.expressions.OneOrMore",
    "parsimonious.nodes.Node"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_expressions.Regex": {
  "data": {
   "shadows": "parsimonious.expressions.Regex"
  },
  "type": "import"
 },
 "parsimonious.tests.test_expressions.RepresentationTests": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "parsimonious.tests.test_expressions.RepresentationTests.test_unicode": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "parsimonious.grammar.rule_grammar",
    "six.text_type"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_expressions.RepresentationTests.test_unicode_crash": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "parsimonious.grammar.Grammar",
    "str"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_expressions.RepresentationTests.test_unicode_keep_parens": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "nose.tools.eq_",
    "parsimonious.grammar.Grammar",
    "six.text_type"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_expressions.RepresentationTests.test_unicode_surrounding_parens": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "nose.tools.eq_",
    "parsimonious.grammar.Grammar",
    "six.text_type"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_expressions.Sequence": {
  "data": {
   "shadows": "parsimonious.expressions.Sequence"
  },
  "type": "import"
 },
 "parsimonious.tests.test_expressions.SlotsTests": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "parsimonious.tests.test_expressions.SlotsTests.test_subclassing": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "Smoo",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_expressions.SlotsTests.test_subclassing.Smoo": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "parsimonious.expressions.Optional"
   ]
  },
  "type": "class"
 },
 "parsimonious.tests.test_expressions.SlotsTests.test_subclassing.Smoo.__init__": {
  "data": {
   "lineno": 314
  },
  "type": "function"
 },
 "parsimonious.tests.test_expressions.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "parsimonious.tests.test_expressions.TreeTests": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "parsimonious.tests.test_expressions.TreeTests.test_one_of": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "nose.tools.eq_",
    "parsimonious.expressions.Literal",
    "parsimonious.expressions.OneOf",
    "parsimonious.nodes.Node"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_expressions.TreeTests.test_one_or_more_one": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "nose.tools.eq_",
    "parsimonious.expressions.Literal",
    "parsimonious.expressions.OneOrMore",
    "parsimonious.nodes.Node"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_expressions.TreeTests.test_optional": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "nose.tools.eq_",
    "parsimonious.expressions.Literal",
    "parsimonious.expressions.Optional",
    "parsimonious.nodes.Node"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_expressions.TreeTests.test_sequence_nodes": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "nose.tools.eq_",
    "parsimonious.expressions.Literal",
    "parsimonious.expressions.Sequence",
    "parsimonious.nodes.Node"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_expressions.TreeTests.test_simple_node": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "nose.tools.eq_",
    "parsimonious.expressions.Literal",
    "parsimonious.nodes.Node"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_expressions.TreeTests.test_zero_or_more_zero": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "nose.tools.eq_",
    "parsimonious.expressions.Literal",
    "parsimonious.expressions.ZeroOrMore",
    "parsimonious.nodes.Node"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_expressions.ZeroOrMore": {
  "data": {
   "shadows": "parsimonious.expressions.ZeroOrMore"
  },
  "type": "import"
 },
 "parsimonious.tests.test_expressions.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "parsimonious.tests.test_expressions.eq_": {
  "data": {
   "shadows": "nose.tools.eq_"
  },
  "type": "import"
 },
 "parsimonious.tests.test_expressions.len_eq": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "parsimonious.tests.test_expressions.ok_": {
  "data": {
   "shadows": "nose.tools.ok_"
  },
  "type": "import"
 },
 "parsimonious.tests.test_expressions.rule_grammar": {
  "data": {
   "shadows": "parsimonious.grammar.rule_grammar"
  },
  "type": "import"
 },
 "parsimonious.tests.test_expressions.text_type": {
  "data": {
   "shadows": "six.text_type"
  },
  "type": "import"
 },
 "parsimonious.tests.test_grammar": {
  "data": {},
  "type": "module"
 },
 "parsimonious.tests.test_grammar.BootstrappingGrammarTests": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "parsimonious.tests.test_grammar.BootstrappingGrammarTests.test_quantifier": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "nose.tools.eq_",
    "parsimonious.grammar.rule_grammar",
    "parsimonious.nodes.Node"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_grammar.BootstrappingGrammarTests.test_regex": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "len",
    "nose.tools.eq_",
    "parsimonious.expressions.Literal",
    "parsimonious.grammar.rule_grammar",
    "parsimonious.grammar.rule_grammar.members",
    "parsimonious.grammar.rule_grammar.parse",
    "parsimonious.nodes.Node"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_grammar.BootstrappingGrammarTests.test_spaceless_literal": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "len",
    "nose.tools.eq_",
    "parsimonious.grammar.rule_grammar",
    "parsimonious.nodes.Node"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_grammar.BootstrappingGrammarTests.test_successes": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "nose.tools.ok_",
    "parsimonious.grammar.rule_grammar.parse"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_grammar.Grammar": {
  "data": {
   "shadows": "parsimonious.grammar.Grammar"
  },
  "type": "import"
 },
 "parsimonious.tests.test_grammar.GrammarTests": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "parsimonious.tests.test_grammar.GrammarTests.test_bad_grammar": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "nose.tools.assert_raises",
    "parsimonious.exceptions.ParseError",
    "parsimonious.grammar.Grammar"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_grammar.GrammarTests.test_badly_circular": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "nose.SkipTest",
    "parsimonious.grammar.Grammar"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_grammar.GrammarTests.test_comments": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "list",
    "nose.tools.eq_",
    "parsimonious.grammar.Grammar",
    "sorted",
    "str",
    "sys.version_info"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_grammar.GrammarTests.test_complex_custom_rules": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "nose.tools.eq_",
    "parsimonious.grammar.Grammar",
    "parsimonious.nodes.Node"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_grammar.GrammarTests.test_expressions_from_rules": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "nose.tools.eq_",
    "parsimonious.expressions.Literal",
    "parsimonious.grammar.Grammar",
    "parsimonious.nodes.Node"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_grammar.GrammarTests.test_immutable_grammar": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "nose.tools.assert_raises",
    "parsimonious.grammar.Grammar"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_grammar.GrammarTests.test_immutable_grammar.mod_grammar": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "parsimonious.grammar.Grammar"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_grammar.GrammarTests.test_infinite_loop": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "parsimonious.grammar.Grammar"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_grammar.GrammarTests.test_lazy_custom_rules": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "nose.tools.eq_",
    "parsimonious.expressions.Sequence",
    "parsimonious.grammar.Grammar",
    "parsimonious.grammar.LazyReference",
    "parsimonious.nodes.Node"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_grammar.GrammarTests.test_lazy_default_rule": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "nose.tools.eq_",
    "parsimonious.grammar.Grammar",
    "parsimonious.nodes.Node"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_grammar.GrammarTests.test_lookahead": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "nose.tools.assert_raises",
    "nose.tools.eq_",
    "parsimonious.exceptions.ParseError",
    "parsimonious.expressions.Literal",
    "parsimonious.expressions.Lookahead",
    "parsimonious.expressions.Regex",
    "parsimonious.grammar.Grammar",
    "parsimonious.nodes.Node"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_grammar.GrammarTests.test_match": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "nose.tools.eq_",
    "parsimonious.grammar.Grammar",
    "parsimonious.nodes.Node"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_grammar.GrammarTests.test_multi_line": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "nose.tools.ok_",
    "parsimonious.grammar.Grammar"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_grammar.GrammarTests.test_not": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "nose.tools.assert_raises",
    "nose.tools.ok_",
    "parsimonious.exceptions.ParseError",
    "parsimonious.grammar.Grammar"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_grammar.GrammarTests.test_parens": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "nose.tools.assert_raises",
    "nose.tools.eq_",
    "parsimonious.exceptions.ParseError",
    "parsimonious.grammar.Grammar",
    "str"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_grammar.GrammarTests.test_parens_with_leading_whitespace": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "parsimonious.grammar.Grammar"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_grammar.GrammarTests.test_repr": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "parsimonious.grammar.Grammar",
    "repr"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_grammar.GrammarTests.test_resolve_refs_order": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "parsimonious.grammar.Grammar"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_grammar.GrammarTests.test_right_recursive": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "nose.tools.ok_",
    "parsimonious.grammar.Grammar"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_grammar.GrammarTests.test_rule_ordering_is_preserved": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "list",
    "parsimonious.grammar.Grammar",
    "range"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_grammar.GrammarTests.test_rule_ordering_is_preserved_on_shallow_copies": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "list",
    "parsimonious.grammar.Grammar",
    "range"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_grammar.GrammarTests.test_simple_custom_rules": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "nose.tools.eq_",
    "parsimonious.grammar.Grammar",
    "parsimonious.nodes.Node"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_grammar.GrammarTests.test_single_quoted_literals": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "parsimonious.grammar.Grammar"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_grammar.GrammarTests.test_unconnected_custom_rules": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "nose.tools.eq_",
    "parsimonious.grammar.Grammar",
    "parsimonious.nodes.Node"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_grammar.GrammarTests.test_unicode": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "len",
    "nose.tools.eq_",
    "nose.tools.ok_",
    "parsimonious.grammar.Grammar",
    "six.text_type",
    "sys.version_info"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_grammar.LazyReference": {
  "data": {
   "shadows": "parsimonious.grammar.LazyReference"
  },
  "type": "import"
 },
 "parsimonious.tests.test_grammar.Literal": {
  "data": {
   "shadows": "parsimonious.expressions.Literal"
  },
  "type": "import"
 },
 "parsimonious.tests.test_grammar.Lookahead": {
  "data": {
   "shadows": "parsimonious.expressions.Lookahead"
  },
  "type": "import"
 },
 "parsimonious.tests.test_grammar.Node": {
  "data": {
   "shadows": "parsimonious.nodes.Node"
  },
  "type": "import"
 },
 "parsimonious.tests.test_grammar.ParseError": {
  "data": {
   "shadows": "parsimonious.exceptions.ParseError"
  },
  "type": "import"
 },
 "parsimonious.tests.test_grammar.Regex": {
  "data": {
   "shadows": "parsimonious.expressions.Regex"
  },
  "type": "import"
 },
 "parsimonious.tests.test_grammar.RuleVisitor": {
  "data": {
   "shadows": "parsimonious.grammar.RuleVisitor"
  },
  "type": "import"
 },
 "parsimonious.tests.test_grammar.RuleVisitorTests": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "parsimonious.tests.test_grammar.RuleVisitorTests.test_optional": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "nose.tools.eq_",
    "parsimonious.expressions.Literal",
    "parsimonious.grammar.RuleVisitor",
    "parsimonious.grammar.rule_grammar.parse",
    "parsimonious.nodes.Node"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_grammar.RuleVisitorTests.test_round_trip": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "nose.tools.eq_",
    "parsimonious.grammar.RuleVisitor",
    "parsimonious.grammar.rule_grammar.parse",
    "parsimonious.nodes.Node"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_grammar.RuleVisitorTests.test_undefined_rule": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "nose.tools.assert_raises",
    "parsimonious.exceptions.UndefinedLabel",
    "parsimonious.grammar.RuleVisitor",
    "parsimonious.grammar.rule_grammar.parse"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_grammar.Sequence": {
  "data": {
   "shadows": "parsimonious.expressions.Sequence"
  },
  "type": "import"
 },
 "parsimonious.tests.test_grammar.SkipTest": {
  "data": {
   "shadows": "nose.SkipTest"
  },
  "type": "import"
 },
 "parsimonious.tests.test_grammar.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "parsimonious.tests.test_grammar.Token": {
  "data": {
   "shadows": "parsimonious.utils.Token"
  },
  "type": "import"
 },
 "parsimonious.tests.test_grammar.TokenGrammar": {
  "data": {
   "shadows": "parsimonious.grammar.TokenGrammar"
  },
  "type": "import"
 },
 "parsimonious.tests.test_grammar.TokenGrammarTests": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "parsimonious.tests.test_grammar.TokenGrammarTests.test_parse_failure": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "nose.tools.assert_raises",
    "parsimonious.exceptions.ParseError",
    "parsimonious.grammar.TokenGrammar",
    "parsimonious.utils.Token"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_grammar.TokenGrammarTests.test_parse_success": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "nose.tools.eq_",
    "parsimonious.expressions.TokenMatcher",
    "parsimonious.grammar.TokenGrammar",
    "parsimonious.nodes.Node",
    "parsimonious.utils.Token"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_grammar.TokenGrammarTests.test_token_repr": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "isinstance",
    "parsimonious.tests.test_grammar.sys",
    "parsimonious.utils.Token",
    "str"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_grammar.TokenMatcher": {
  "data": {
   "shadows": "parsimonious.expressions.TokenMatcher"
  },
  "type": "import"
 },
 "parsimonious.tests.test_grammar.UndefinedLabel": {
  "data": {
   "shadows": "parsimonious.exceptions.UndefinedLabel"
  },
  "type": "import"
 },
 "parsimonious.tests.test_grammar.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "parsimonious.tests.test_grammar.eq_": {
  "data": {
   "shadows": "nose.tools.eq_"
  },
  "type": "import"
 },
 "parsimonious.tests.test_grammar.ok_": {
  "data": {
   "shadows": "nose.tools.ok_"
  },
  "type": "import"
 },
 "parsimonious.tests.test_grammar.rule_grammar": {
  "data": {
   "shadows": "parsimonious.grammar.rule_grammar"
  },
  "type": "import"
 },
 "parsimonious.tests.test_grammar.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "parsimonious.tests.test_grammar.text_type": {
  "data": {
   "shadows": "six.text_type"
  },
  "type": "import"
 },
 "parsimonious.tests.test_grammar.version_info": {
  "data": {
   "shadows": "sys.version_info"
  },
  "type": "import"
 },
 "parsimonious.tests.test_nodes": {
  "data": {},
  "type": "module"
 },
 "parsimonious.tests.test_nodes.CoupledFormatter": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "parsimonious.NodeVisitor"
   ]
  },
  "type": "class"
 },
 "parsimonious.tests.test_nodes.CoupledFormatter.visit_bold_close": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "parsimonious.rule"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_nodes.CoupledFormatter.visit_bold_open": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "parsimonious.rule"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_nodes.CoupledFormatter.visit_bold_text": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "parsimonious.rule"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_nodes.CoupledFormatter.visit_text": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "parsimonious.rule"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_nodes.ExplosiveFormatter": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "parsimonious.NodeVisitor"
   ]
  },
  "type": "class"
 },
 "parsimonious.tests.test_nodes.ExplosiveFormatter.visit_boom": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_nodes.Grammar": {
  "data": {
   "shadows": "parsimonious.Grammar"
  },
  "type": "import"
 },
 "parsimonious.tests.test_nodes.HtmlFormatter": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "parsimonious.Grammar",
    "parsimonious.NodeVisitor"
   ]
  },
  "type": "class"
 },
 "parsimonious.tests.test_nodes.HtmlFormatter.visit_bold_close": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "parsimonious.tests.test_nodes.HtmlFormatter.visit_bold_open": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "parsimonious.tests.test_nodes.HtmlFormatter.visit_bold_text": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "parsimonious.tests.test_nodes.HtmlFormatter.visit_text": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "parsimonious.tests.test_nodes.Literal": {
  "data": {
   "shadows": "parsimonious.expressions.Literal"
  },
  "type": "import"
 },
 "parsimonious.tests.test_nodes.Node": {
  "data": {
   "shadows": "parsimonious.nodes.Node"
  },
  "type": "import"
 },
 "parsimonious.tests.test_nodes.NodeVisitor": {
  "data": {
   "shadows": "parsimonious.NodeVisitor"
  },
  "type": "import"
 },
 "parsimonious.tests.test_nodes.PrimalScream": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "parsimonious.tests.test_nodes.SkipTest": {
  "data": {
   "shadows": "nose.SkipTest"
  },
  "type": "import"
 },
 "parsimonious.tests.test_nodes.VisitationError": {
  "data": {
   "shadows": "parsimonious.VisitationError"
  },
  "type": "import"
 },
 "parsimonious.tests.test_nodes.assert_in": {
  "data": {
   "shadows": "nose.tools.assert_in"
  },
  "type": "import"
 },
 "parsimonious.tests.test_nodes.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "parsimonious.tests.test_nodes.eq_": {
  "data": {
   "shadows": "nose.tools.eq_"
  },
  "type": "import"
 },
 "parsimonious.tests.test_nodes.ok_": {
  "data": {
   "shadows": "nose.tools.ok_"
  },
  "type": "import"
 },
 "parsimonious.tests.test_nodes.rule": {
  "data": {
   "shadows": "parsimonious.rule"
  },
  "type": "import"
 },
 "parsimonious.tests.test_nodes.test_generic_visit_NotImplementedError_named_node": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "MyVisitor",
    "NotImplementedError",
    "nose.tools.assert_in",
    "nose.tools.assert_raises",
    "str"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_nodes.test_generic_visit_NotImplementedError_named_node.MyVisitor": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "NotImplementedError",
    "parsimonious.Grammar",
    "parsimonious.NodeVisitor"
   ]
  },
  "type": "class"
 },
 "parsimonious.tests.test_nodes.test_generic_visit_NotImplementedError_unnamed_node": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "MyVisitor",
    "NotImplementedError",
    "nose.tools.assert_in",
    "nose.tools.assert_raises",
    "str"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_nodes.test_generic_visit_NotImplementedError_unnamed_node.MyVisitor": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "NotImplementedError",
    "parsimonious.Grammar",
    "parsimonious.NodeVisitor"
   ]
  },
  "type": "class"
 },
 "parsimonious.tests.test_nodes.test_match_shortcut": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "nose.tools.eq_",
    "parsimonious.tests.test_nodes.HtmlFormatter"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_nodes.test_node_inequality": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "nose.tools.ok_",
    "parsimonious.expressions.Literal",
    "parsimonious.nodes.Node"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_nodes.test_parse_shortcut": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "nose.tools.eq_",
    "parsimonious.tests.test_nodes.HtmlFormatter"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_nodes.test_repr": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "nose.tools.eq_",
    "parsimonious.expressions.Literal",
    "parsimonious.nodes.Node",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_nodes.test_rule_decorator": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "nose.tools.eq_",
    "parsimonious.tests.test_nodes.CoupledFormatter"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_nodes.test_rule_decorator_subclassing": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "OverridingFormatter",
    "nose.SkipTest",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_nodes.test_rule_decorator_subclassing.OverridingFormatter": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "parsimonious.tests.test_nodes.CoupledFormatter"
   ]
  },
  "type": "class"
 },
 "parsimonious.tests.test_nodes.test_rule_decorator_subclassing.OverridingFormatter.visit_text": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "parsimonious.tests.test_nodes.test_rule_decorator_subclassing.OverridingFormatter.visit_useless": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "parsimonious.rule"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_nodes.test_str": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "nose.tools.eq_",
    "parsimonious.expressions.Literal",
    "parsimonious.nodes.Node",
    "str"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_nodes.test_unwrapped_exceptions": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "Screamer",
    "nose.tools.assert_raises",
    "parsimonious.tests.test_nodes.PrimalScream"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_nodes.test_unwrapped_exceptions.Screamer": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "parsimonious.Grammar",
    "parsimonious.NodeVisitor",
    "parsimonious.tests.test_nodes.PrimalScream"
   ]
  },
  "type": "class"
 },
 "parsimonious.tests.test_nodes.test_unwrapped_exceptions.Screamer.visit_greeting": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "parsimonious.tests.test_nodes.PrimalScream"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_nodes.test_visitation_exception": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "nose.tools.assert_raises",
    "parsimonious.VisitationError",
    "parsimonious.expressions.Literal",
    "parsimonious.nodes.Node",
    "parsimonious.tests.test_nodes.ExplosiveFormatter"
   ]
  },
  "type": "function"
 },
 "parsimonious.tests.test_nodes.test_visitor": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "nose.tools.eq_",
    "parsimonious.Grammar",
    "parsimonious.nodes.Node",
    "parsimonious.tests.test_nodes.HtmlFormatter"
   ]
  },
  "type": "function"
 },
 "parsimonious.utils": {
  "data": {},
  "type": "module"
 },
 "parsimonious.utils.StrAndRepr": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "parsimonious.utils.StrAndRepr.__repr__": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "parsimonious.utils.Token": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "parsimonious.utils.StrAndRepr",
    "six.python_2_unicode_compatible"
   ]
  },
  "type": "class"
 },
 "parsimonious.utils.Token.__eq__": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "parsimonious.utils.Token.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "parsimonious.utils.Token.__str__": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "parsimonious.utils.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "parsimonious.utils.evaluate_string": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "parsimonious.utils.ast"
   ]
  },
  "type": "function"
 },
 "parsimonious.utils.python_2_unicode_compatible": {
  "data": {
   "shadows": "six.python_2_unicode_compatible"
  },
  "type": "import"
 }
}