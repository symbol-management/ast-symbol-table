{
 "nilearn": {
  "data": {
   "symbols_in_volume": [
    "_check_module_dependencies",
    "hasattr",
    "nilearn.gzip"
   ]
  },
  "type": "module"
 },
 "nilearn.CHECK_CACHE_VERSION": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "nilearn.EXPAND_PATH_WILDCARDS": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "nilearn.__all__": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "nilearn._utils": {
  "data": {},
  "type": "module"
 },
 "nilearn._utils.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "nilearn._utils.cache_mixin": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "dict",
    "joblib.Memory",
    "sklearn.externals.joblib.Memory"
   ]
  },
  "type": "module"
 },
 "nilearn._utils.cache_mixin.CacheMixin": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nilearn._utils.cache_mixin.CacheMixin._cache": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "hasattr",
    "isinstance",
    "joblib.Memory",
    "len",
    "nilearn._utils.cache_mixin.cache",
    "nilearn._utils.cache_mixin.nilearn",
    "nilearn._utils.cache_mixin.os",
    "nilearn._utils.cache_mixin.warnings"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.cache_mixin.JoblibMemory": {
  "data": {
   "shadows": "joblib.Memory"
  },
  "type": "import"
 },
 "nilearn._utils.cache_mixin.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "nilearn._utils.cache_mixin.MEMORY_CLASSES": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "nilearn._utils.cache_mixin.Memory": {
  "data": {
   "shadows": "sklearn.externals.joblib.Memory"
  },
  "type": "import"
 },
 "nilearn._utils.cache_mixin.__CACHE_CHECKED": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "nilearn._utils.cache_mixin._safe_cache": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "OSError",
    "dict",
    "distutils.version.LooseVersion",
    "len",
    "nilearn._utils.cache_mixin.__CACHE_CHECKED",
    "nilearn._utils.cache_mixin.json",
    "nilearn._utils.cache_mixin.nibabel",
    "nilearn._utils.cache_mixin.nilearn",
    "nilearn._utils.cache_mixin.os",
    "nilearn._utils.cache_mixin.shutil",
    "nilearn._utils.cache_mixin.warnings",
    "open",
    "set"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.cache_mixin.cache": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "all",
    "int",
    "isinstance",
    "joblib.Memory",
    "nilearn._utils.cache_mixin.MEMORY_CLASSES",
    "nilearn._utils.cache_mixin._safe_cache",
    "nilearn._utils.cache_mixin.warnings",
    "type"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.cache_mixin.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "nilearn._utils.cache_mixin.nibabel": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "nilearn._utils.cache_mixin.nilearn": {
  "data": {
   "shadows": "nilearn"
  },
  "type": "import"
 },
 "nilearn._utils.cache_mixin.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nilearn._utils.cache_mixin.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "nilearn._utils.cache_mixin.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nilearn._utils.class_inspect": {
  "data": {},
  "type": "module"
 },
 "nilearn._utils.class_inspect.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "nilearn._utils.class_inspect.enclosing_scope_name": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "isinstance",
    "nilearn._utils.class_inspect.inspect",
    "range",
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.class_inspect.get_params": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "dict",
    "getattr",
    "hasattr",
    "set"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.class_inspect.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "nilearn._utils.compat": {
  "data": {
   "symbols_in_volume": [
    "nilearn._utils.compat.BytesIO",
    "nilearn._utils.compat.StringIO",
    "nilearn._utils.compat._module_lookup",
    "nilearn._utils.compat.io",
    "nilearn._utils.compat.itertools",
    "nilearn._utils.compat.pickle",
    "nilearn._utils.compat.sys",
    "nilearn._utils.compat.urllib",
    "str",
    "zip"
   ]
  },
  "type": "module"
 },
 "nilearn._utils.compat.BytesIO": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "nilearn._utils.compat.StringIO": {
  "data": {
   "shadows": "StringIO"
  },
  "type": "import"
 },
 "nilearn._utils.compat._basestring": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "nilearn._utils.compat._module_lookup": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "nilearn._utils.compat.urllib",
    "nilearn._utils.compat.urllib2",
    "nilearn._utils.compat.urlparse",
    "object"
   ]
  },
  "type": "class"
 },
 "nilearn._utils.compat._module_lookup.__getattr__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "NotImplementedError",
    "getattr",
    "hasattr",
    "isinstance",
    "nilearn._utils.compat.types"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.compat._urllib": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "nilearn._utils.compat.module_lookup"
   ]
  },
  "type": "class"
 },
 "nilearn._utils.compat.cPickle": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "nilearn._utils.compat.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "nilearn._utils.compat.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "nilearn._utils.compat.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "nilearn._utils.compat.izip": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "nilearn._utils.compat.md5_hash": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "nilearn._utils.compat.hashlib"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.compat.module_lookup": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "nilearn._utils.compat.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "nilearn._utils.compat.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "nilearn._utils.compat.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "nilearn._utils.compat.urllib": {
  "data": {
   "shadows": "urllib"
  },
  "type": "import"
 },
 "nilearn._utils.compat.urllib2": {
  "data": {
   "shadows": "urllib2"
  },
  "type": "import"
 },
 "nilearn._utils.compat.urlparse": {
  "data": {
   "shadows": "urlparse"
  },
  "type": "import"
 },
 "nilearn._utils.exceptions": {
  "data": {
   "symbols_in_volume": [
    "ArithmeticError",
    "AssertionError",
    "AttributeError",
    "BufferError",
    "EOFError",
    "EnvironmentError",
    "LookupError",
    "MemoryError",
    "ReferenceError",
    "RuntimeError",
    "SystemError",
    "TypeError",
    "ValueError"
   ]
  },
  "type": "module"
 },
 "nilearn._utils.exceptions.AuthorizedException": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "nilearn._utils.exceptions.DimensionError": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "class"
 },
 "nilearn._utils.exceptions.DimensionError.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "nilearn._utils.exceptions.DimensionError",
    "super"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.exceptions.DimensionError.__str__": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "nilearn._utils.exceptions.DimensionError.increment_stack_counter": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "nilearn._utils.exceptions.DimensionError.message": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.extmath": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "numpy.partition"
   ]
  },
  "type": "module"
 },
 "nilearn._utils.extmath.fast_abs_percentile": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "hasattr",
    "int",
    "numpy.abs",
    "numpy.asarray",
    "numpy.logical_not",
    "numpy.partition"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.extmath.is_spd": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.linalg.eigvalsh",
    "print"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.extmath.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn._utils.extmath.partition": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "nilearn._utils.fixes": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "distutils.version.LooseVersion",
    "nilearn._utils.fixes.sklearn"
   ]
  },
  "type": "module"
 },
 "nilearn._utils.fixes.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "nilearn._utils.fixes.__all__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "nilearn._utils.fixes.atleast2d_or_csr": {
  "data": {
   "shadows": "sklearn.utils.check_array"
  },
  "type": "import"
 },
 "nilearn._utils.fixes.f_regression": {
  "data": {
   "shadows": "sklearn.feature_selection.f_regression"
  },
  "type": "import"
 },
 "nilearn._utils.fixes.matplotlib_backports": {
  "data": {},
  "type": "module"
 },
 "nilearn._utils.fixes.matplotlib_backports.cbar_outline_get_xy": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.fixes.matplotlib_backports.cbar_outline_set_xy": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.fixes.roc_auc_score": {
  "data": {
   "shadows": "sklearn.metrics.auc"
  },
  "type": "import"
 },
 "nilearn._utils.fixes.sklearn": {
  "data": {
   "shadows": "sklearn"
  },
  "type": "import"
 },
 "nilearn._utils.fixes.sklearn_f_regression_nosparse": {
  "data": {},
  "type": "module"
 },
 "nilearn._utils.fixes.sklearn_f_regression_nosparse.check_arrays": {
  "data": {
   "shadows": "sklearn.utils.check_arrays"
  },
  "type": "import"
 },
 "nilearn._utils.fixes.sklearn_f_regression_nosparse.f_regression_nosparse": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.dot",
    "numpy.float",
    "numpy.mean",
    "numpy.sqrt",
    "scipy.stats.f.sf",
    "sklearn.utils.check_arrays",
    "sklearn.utils.extmath.norm"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.fixes.sklearn_f_regression_nosparse.norm": {
  "data": {
   "shadows": "sklearn.utils.extmath.norm"
  },
  "type": "import"
 },
 "nilearn._utils.fixes.sklearn_f_regression_nosparse.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn._utils.fixes.sklearn_f_regression_nosparse.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "nilearn._utils.logger": {
  "data": {},
  "type": "module"
 },
 "nilearn._utils.logger.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "nilearn._utils.logger._compose_err_msg": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "isinstance",
    "sorted"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.logger.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "nilearn._utils.logger.log": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "nilearn._utils.logger.inspect",
    "print",
    "reversed",
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.ndimage": {
  "data": {},
  "type": "module"
 },
 "nilearn._utils.ndimage._peak_local_max": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "max",
    "numpy.all",
    "numpy.argsort",
    "numpy.argwhere",
    "numpy.bool",
    "numpy.inf",
    "numpy.max",
    "numpy.ravel_multi_index",
    "numpy.zeros_like",
    "scipy.ndimage.maximum_filter",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.ndimage.get_border_data": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.concatenate"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.ndimage.largest_connected_component": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.bincount",
    "numpy.bool",
    "numpy.int",
    "scipy.ndimage.label"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.ndimage.ndimage": {
  "data": {
   "shadows": "scipy.ndimage"
  },
  "type": "import"
 },
 "nilearn._utils.ndimage.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn._utils.niimg": {
  "data": {},
  "type": "module"
 },
 "nilearn._utils.niimg._get_data_dtype": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.niimg._get_target_dtype": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.niimg._repr_niimgs": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "isinstance",
    "nilearn._utils.niimg.collections",
    "repr"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.niimg._safe_get_data": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "hasattr",
    "nilearn._utils.niimg.copy",
    "nilearn._utils.niimg.gc"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.niimg.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "nilearn._utils.niimg.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "nilearn._utils.niimg.copy_img": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "new_img_like",
    "nilearn._utils.niimg._safe_get_data",
    "nilearn._utils.niimg.nibabel"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.niimg.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "nilearn._utils.niimg.load_niimg": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "new_img_like",
    "nilearn._utils.niimg._get_data_dtype",
    "nilearn._utils.niimg._get_target_dtype",
    "nilearn._utils.niimg.nibabel",
    "short_repr"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.niimg.nibabel": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "nilearn._utils.niimg.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn._utils.niimg.short_repr": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "len",
    "nilearn._utils.niimg._repr_niimgs"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.niimg_conversions": {
  "data": {},
  "type": "module"
 },
 "nilearn._utils.niimg_conversions.Memory": {
  "data": {
   "shadows": "sklearn.externals.joblib.Memory"
  },
  "type": "import"
 },
 "nilearn._utils.niimg_conversions._check_fov": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "check_niimg",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.niimg_conversions._check_same_fov": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "nilearn._utils.niimg_conversions.itertools",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.niimg_conversions._index_img": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "new_img_like"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.niimg_conversions._iter_check_niimg": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "cache",
    "check_niimg",
    "enumerate",
    "isinstance",
    "len",
    "nilearn._utils.niimg_conversions._check_fov",
    "nilearn._utils.niimg_conversions.glob",
    "nilearn._utils.niimg_conversions.warnings",
    "nilearn.image.resample_img",
    "sklearn.externals.joblib.Memory"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.niimg_conversions.check_niimg": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "DimensionError",
    "ValueError",
    "_safe_get_data",
    "concat_niimgs",
    "hasattr",
    "isinstance",
    "len",
    "load_niimg",
    "new_img_like",
    "nilearn.EXPAND_PATH_WILDCARDS",
    "nilearn._utils.niimg_conversions._index_img",
    "nilearn._utils.niimg_conversions._iter_check_niimg",
    "nilearn._utils.niimg_conversions.glob",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.niimg_conversions.check_niimg_3d": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "nilearn._utils.niimg_conversions.check_niimg"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.niimg_conversions.check_niimg_4d": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "nilearn._utils.niimg_conversions.check_niimg"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.niimg_conversions.concat_niimgs": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "DimensionError",
    "StopIteration",
    "TypeError",
    "enumerate",
    "isinstance",
    "iter",
    "izip",
    "len",
    "new_img_like",
    "next",
    "nilearn._utils.niimg_conversions._iter_check_niimg",
    "nilearn._utils.niimg_conversions.check_niimg",
    "nilearn._utils.niimg_conversions.itertools",
    "numpy.float32",
    "numpy.ndarray",
    "print",
    "sklearn.externals.joblib.Memory",
    "str",
    "sum"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.niimg_conversions.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "nilearn._utils.niimg_conversions.image": {
  "data": {
   "shadows": "nilearn.image"
  },
  "type": "import"
 },
 "nilearn._utils.niimg_conversions.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "nilearn._utils.niimg_conversions.ni": {
  "data": {
   "shadows": "nilearn"
  },
  "type": "import"
 },
 "nilearn._utils.niimg_conversions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn._utils.niimg_conversions.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "nilearn._utils.niimg_conversions.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nilearn._utils.numpy_conversions": {
  "data": {},
  "type": "module"
 },
 "nilearn._utils.numpy_conversions._asarray": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.bool",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.numpy_conversions.as_ndarray": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "nilearn._utils.numpy_conversions._asarray",
    "numpy.array",
    "numpy.asarray",
    "numpy.may_share_memory",
    "numpy.memmap",
    "numpy.ndarray",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.numpy_conversions.csv": {
  "data": {
   "shadows": "csv"
  },
  "type": "import"
 },
 "nilearn._utils.numpy_conversions.csv_to_array": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "nilearn._utils.numpy_conversions.csv",
    "numpy.genfromtxt",
    "open",
    "type"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.numpy_conversions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn._utils.param_validation": {
  "data": {},
  "type": "module"
 },
 "nilearn._utils.param_validation.check_threshold": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "abs",
    "float",
    "isinstance",
    "nilearn._utils.param_validation.numbers",
    "nilearn._utils.param_validation.warnings",
    "percentile_func"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.param_validation.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "nilearn._utils.param_validation.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nilearn._utils.segmentation": {
  "data": {},
  "type": "module"
 },
 "nilearn._utils.segmentation._buildAB": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "numpy.arange",
    "range",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.segmentation._build_laplacian": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "nilearn._utils.segmentation._compute_weights_3d",
    "nilearn._utils.segmentation._make_graph_edges_3d",
    "nilearn._utils.segmentation._make_laplacian_sparse",
    "nilearn._utils.segmentation._mask_edges_weights",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.segmentation._clean_labels_ar": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "numpy.ravel"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.segmentation._compute_gradients_3d": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.r_"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.segmentation._compute_weights_3d": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "_compute_gradients_3d",
    "numpy.exp",
    "range"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.segmentation._make_graph_edges_3d": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.hstack",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.segmentation._make_laplacian_sparse": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.hstack",
    "numpy.ravel",
    "scipy.sparse.coo_matrix"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.segmentation._mask_edges_weights": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.hstack",
    "numpy.int64",
    "numpy.logical_and",
    "numpy.searchsorted",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.segmentation._random_walker": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "ValueError",
    "_solve_cg",
    "len",
    "nilearn._utils.segmentation._buildAB",
    "nilearn._utils.segmentation._build_laplacian",
    "nilearn._utils.segmentation._clean_labels_ar",
    "nilearn._utils.segmentation.warnings",
    "numpy.any",
    "numpy.asarray",
    "numpy.atleast_3d",
    "numpy.copy",
    "numpy.diff",
    "numpy.int32",
    "numpy.logical_and",
    "numpy.logical_not",
    "numpy.newaxis",
    "numpy.r_",
    "numpy.searchsorted",
    "numpy.unique",
    "scipy.ndimage.binary_propagation",
    "sklearn.utils.as_float_array"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.segmentation._solve_cg": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "len",
    "numpy.argmax",
    "numpy.array",
    "range",
    "scipy.sparse.linalg.cg"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.segmentation.as_float_array": {
  "data": {
   "shadows": "sklearn.utils.as_float_array"
  },
  "type": "import"
 },
 "nilearn._utils.segmentation.cg": {
  "data": {
   "shadows": "scipy.sparse.linalg.cg"
  },
  "type": "import"
 },
 "nilearn._utils.segmentation.ndi": {
  "data": {
   "shadows": "scipy.ndimage"
  },
  "type": "import"
 },
 "nilearn._utils.segmentation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn._utils.segmentation.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "nilearn._utils.segmentation.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nilearn._utils.testing": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "memory_profiler.memory_usage",
    "nilearn._utils.testing.memory_used"
   ]
  },
  "type": "module"
 },
 "nilearn._utils.testing.FetchFilesMock": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "nilearn._utils.testing.functools",
    "object"
   ]
  },
  "type": "class"
 },
 "nilearn._utils.testing.FetchFilesMock.__call__": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "nilearn._utils.testing.os",
    "numpy.savetxt",
    "open"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.testing.FetchFilesMock.__init__": {
  "data": {
   "lineno": 256
  },
  "type": "function"
 },
 "nilearn._utils.testing.FetchFilesMock.add_csv": {
  "data": {
   "lineno": 261
  },
  "type": "function"
 },
 "nilearn._utils.testing.MockOpener": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nilearn._utils.testing.MockOpener.__init__": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "nilearn._utils.testing.MockOpener.open": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "nilearn._utils.testing.MockRequest": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nilearn._utils.testing.MockRequest.__init__": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "nilearn._utils.testing.MockRequest.add_header": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "nilearn._utils.testing.assert_less": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "AssertionError"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.testing.assert_less_equal": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "AssertionError"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.testing.assert_memory_less_than": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "ValueError",
    "callable_obj",
    "nilearn._utils.testing.memory_used"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.testing.assert_raises_regex": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "AssertionError",
    "Exception",
    "callable_obj",
    "expected_exception",
    "nilearn._utils.testing.re",
    "str"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.testing.assert_warns": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "func",
    "nilearn._utils.testing.warnings"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.testing.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "nilearn._utils.testing.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "nilearn._utils.testing.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "nilearn._utils.testing.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "nilearn._utils.testing.generate_fake_fmri": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "ValueError",
    "nilearn._utils.testing.nibabel",
    "numpy.abs",
    "numpy.bool",
    "numpy.eye",
    "numpy.float",
    "numpy.int",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.testing.generate_group_sparse_gaussian_graphs": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "nilearn._utils.testing.generate_signals_from_precisions",
    "numpy.all",
    "numpy.dot",
    "numpy.empty",
    "numpy.eye",
    "numpy.linalg.eigvalsh",
    "numpy.testing.assert_almost_equal",
    "numpy.triu",
    "range",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.testing.generate_labeled_regions": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "len",
    "nilearn._utils.testing.generate_regions_ts",
    "nilearn._utils.testing.nibabel",
    "numpy.bool",
    "numpy.eye",
    "numpy.int",
    "numpy.ones",
    "numpy.zeros",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.testing.generate_labeled_regions_large": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "nilearn._utils.testing.nibabel",
    "numpy.eye",
    "numpy.random.RandomState",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.testing.generate_maps": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "nilearn._utils.testing.generate_regions_ts",
    "nilearn._utils.testing.nibabel",
    "numpy.eye",
    "numpy.int8",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.testing.generate_regions_ts": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "int",
    "len",
    "max",
    "min",
    "numpy.arange",
    "numpy.random.RandomState",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.testing.generate_signals_from_precisions": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "len",
    "numpy.linalg.inv",
    "numpy.zeros",
    "sklearn.utils.check_random_state",
    "zip"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.testing.generate_timeseries": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.testing.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "nilearn._utils.testing.is_nose_running": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "ImportError",
    "nilearn._utils.testing.inspect",
    "nilearn._utils.testing.nose",
    "nilearn._utils.testing.sys"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.testing.memory_usage": {
  "data": {
   "shadows": "memory_profiler.memory_usage"
  },
  "type": "import"
 },
 "nilearn._utils.testing.memory_used": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "max",
    "memory_profiler.memory_usage",
    "min",
    "nilearn._utils.testing.gc"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.testing.memory_used.func_3_times": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "func",
    "range"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.testing.mock_chunk_read_raise_error_": {
  "data": {
   "lineno": 247
  },
  "type": "function"
 },
 "nilearn._utils.testing.mock_request": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nilearn._utils.testing.mock_request.Request": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "nilearn._utils.testing.MockRequest"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.testing.mock_request.__init__": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.testing.mock_request.build_opener": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "nilearn._utils.testing.MockOpener"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.testing.mock_request.reset": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.testing.nibabel": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "nilearn._utils.testing.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nilearn._utils.testing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn._utils.testing.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nilearn._utils.testing.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "nilearn._utils.testing.scipy.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "nilearn._utils.testing.scipy.signal": {
  "data": {
   "shadows": "scipy.signal"
  },
  "type": "import"
 },
 "nilearn._utils.testing.skip_if_running_nose": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "nilearn._utils.testing.is_nose_running",
    "nilearn._utils.testing.nose"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.testing.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "nilearn._utils.testing.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "nilearn._utils.testing.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nilearn._utils.testing.with_memory_profiler": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "nilearn._utils.testing.with_memory_profiler.dummy_func": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "nilearn._utils.testing.nose"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.testing.wrap_chunk_read_": {
  "data": {
   "lineno": 235
  },
  "type": "function"
 },
 "nilearn._utils.testing.wrap_chunk_read_.mock_chunk_read_": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "_chunk_read_",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "nilearn._utils.testing.write_tmp_imgs": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "RuntimeWarning",
    "TypeError",
    "len",
    "nilearn._utils.testing.contextlib",
    "nilearn._utils.testing.os",
    "nilearn._utils.testing.sys",
    "nilearn._utils.testing.tempfile",
    "nilearn._utils.testing.warnings",
    "set"
   ]
  },
  "type": "function"
 },
 "nilearn.connectome": {
  "data": {},
  "type": "module"
 },
 "nilearn.connectome.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "nilearn.connectome.connectivity_matrices": {
  "data": {},
  "type": "module"
 },
 "nilearn.connectome.connectivity_matrices.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "nilearn.connectome.connectivity_matrices.ConnectivityMeasure": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "nilearn.connectome.connectivity_matrices.ConnectivityMeasure.__init__": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "sklearn.covariance.LedoitWolf"
   ]
  },
  "type": "function"
 },
 "nilearn.connectome.connectivity_matrices.ConnectivityMeasure.fit": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "len",
    "nilearn.connectome.connectivity_matrices._geometric_mean",
    "nilearn.connectome.connectivity_matrices._map_eigenvalues",
    "numpy.ndarray",
    "numpy.sqrt",
    "set",
    "sklearn.base.clone",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "nilearn.connectome.connectivity_matrices.ConnectivityMeasure.transform": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "ValueError",
    "nilearn.connectome.connectivity_matrices._cov_to_corr",
    "nilearn.connectome.connectivity_matrices._map_eigenvalues",
    "nilearn.connectome.connectivity_matrices._prec_to_partial",
    "numpy.array",
    "numpy.log",
    "scipy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "nilearn.connectome.connectivity_matrices.LedoitWolf": {
  "data": {
   "shadows": "sklearn.covariance.LedoitWolf"
  },
  "type": "import"
 },
 "nilearn.connectome.connectivity_matrices.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "nilearn.connectome.connectivity_matrices._check_spd": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ValueError",
    "is_spd"
   ]
  },
  "type": "function"
 },
 "nilearn.connectome.connectivity_matrices._check_square": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "nilearn.connectome.connectivity_matrices._cov_to_corr": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "numpy.atleast_2d",
    "numpy.diag",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "nilearn.connectome.connectivity_matrices._form_symmetric": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "function",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "nilearn.connectome.connectivity_matrices._geometric_mean": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "FloatingPointError",
    "ValueError",
    "nilearn.connectome.connectivity_matrices._check_spd",
    "nilearn.connectome.connectivity_matrices._check_square",
    "nilearn.connectome.connectivity_matrices._form_symmetric",
    "nilearn.connectome.connectivity_matrices._map_eigenvalues",
    "nilearn.connectome.connectivity_matrices.warnings",
    "numpy.any",
    "numpy.array",
    "numpy.exp",
    "numpy.inf",
    "numpy.isnan",
    "numpy.linalg.norm",
    "numpy.log",
    "numpy.mean",
    "numpy.sqrt",
    "range",
    "scipy.linalg.eigh"
   ]
  },
  "type": "function"
 },
 "nilearn.connectome.connectivity_matrices._map_eigenvalues": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "function",
    "nilearn.connectome.connectivity_matrices._form_symmetric",
    "scipy.linalg.eigh"
   ]
  },
  "type": "function"
 },
 "nilearn.connectome.connectivity_matrices._prec_to_partial": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "nilearn.connectome.connectivity_matrices._cov_to_corr",
    "numpy.fill_diagonal"
   ]
  },
  "type": "function"
 },
 "nilearn.connectome.connectivity_matrices.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "nilearn.connectome.connectivity_matrices.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "nilearn.connectome.connectivity_matrices.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.connectome.connectivity_matrices.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "nilearn.connectome.connectivity_matrices.sym_to_vec": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "math.sqrt",
    "numpy.bool",
    "numpy.fill_diagonal",
    "numpy.ones",
    "numpy.tril"
   ]
  },
  "type": "function"
 },
 "nilearn.connectome.connectivity_matrices.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nilearn.connectome.group_sparse_cov": {
  "data": {},
  "type": "module"
 },
 "nilearn.connectome.group_sparse_cov.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "nilearn.connectome.group_sparse_cov.EarlyStopProbe": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nilearn.connectome.group_sparse_cov.EarlyStopProbe.__call__": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "nilearn.connectome.group_sparse_cov.group_sparse_scores"
   ]
  },
  "type": "function"
 },
 "nilearn.connectome.group_sparse_cov.EarlyStopProbe.__init__": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "nilearn.connectome.group_sparse_cov.empirical_covariances"
   ]
  },
  "type": "function"
 },
 "nilearn.connectome.group_sparse_cov.GroupSparseCovariance": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "nilearn.connectome.group_sparse_cov.GroupSparseCovariance.__init__": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "sklearn.externals.joblib.Memory"
   ]
  },
  "type": "function"
 },
 "nilearn.connectome.group_sparse_cov.GroupSparseCovariance.fit": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "empirical_covariances",
    "max",
    "nilearn.connectome.group_sparse_cov._group_sparse_covariance"
   ]
  },
  "type": "function"
 },
 "nilearn.connectome.group_sparse_cov.GroupSparseCovarianceCV": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "nilearn.connectome.group_sparse_cov.GroupSparseCovarianceCV.__init__": {
  "data": {
   "lineno": 904
  },
  "type": "function"
 },
 "nilearn.connectome.group_sparse_cov.GroupSparseCovarianceCV.fit": {
  "data": {
   "lineno": 921,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "len",
    "list",
    "max",
    "nilearn.connectome.group_sparse_cov.EarlyStopProbe",
    "nilearn.connectome.group_sparse_cov._group_sparse_covariance",
    "nilearn.connectome.group_sparse_cov.collections",
    "nilearn.connectome.group_sparse_cov.compute_alpha_max",
    "nilearn.connectome.group_sparse_cov.empirical_covariances",
    "nilearn.connectome.group_sparse_cov.group_sparse_covariance_path",
    "nilearn.connectome.group_sparse_cov.itertools",
    "nilearn.connectome.group_sparse_cov.operator",
    "numpy.array",
    "numpy.finfo",
    "numpy.float",
    "numpy.inf",
    "numpy.isfinite",
    "numpy.log10",
    "numpy.logspace",
    "numpy.mean",
    "numpy.nan",
    "range",
    "sklearn.externals.joblib.Parallel",
    "sklearn.externals.joblib.delayed",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "nilearn.connectome.group_sparse_cov.Memory": {
  "data": {
   "shadows": "sklearn.externals.joblib.Memory"
  },
  "type": "import"
 },
 "nilearn.connectome.group_sparse_cov.Parallel": {
  "data": {
   "shadows": "sklearn.externals.joblib.Parallel"
  },
  "type": "import"
 },
 "nilearn.connectome.group_sparse_cov._assert_submatrix": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "numpy.empty_like",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nilearn.connectome.group_sparse_cov._group_sparse_covariance": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "abs",
    "float",
    "int",
    "is_spd",
    "isinstance",
    "nilearn.connectome.group_sparse_cov._assert_submatrix",
    "nilearn.connectome.group_sparse_cov._update_submatrix",
    "nilearn.connectome.group_sparse_cov.itertools",
    "nilearn.connectome.group_sparse_cov.warnings",
    "numpy.all",
    "numpy.asarray",
    "numpy.diag",
    "numpy.dot",
    "numpy.empty_like",
    "numpy.eye",
    "numpy.float",
    "numpy.ndarray",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.testing.assert_almost_equal",
    "probe_function",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "nilearn.connectome.group_sparse_cov._update_submatrix": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "nilearn.connectome.group_sparse_cov.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "nilearn.connectome.group_sparse_cov.compute_alpha_max": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.copy",
    "numpy.max",
    "numpy.min",
    "numpy.sqrt",
    "range"
   ]
  },
  "type": "function"
 },
 "nilearn.connectome.group_sparse_cov.delayed": {
  "data": {
   "shadows": "sklearn.externals.joblib.delayed"
  },
  "type": "import"
 },
 "nilearn.connectome.group_sparse_cov.empirical_covariance": {
  "data": {
   "shadows": "sklearn.covariance.empirical_covariance"
  },
  "type": "import"
 },
 "nilearn.connectome.group_sparse_cov.empirical_covariances": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "hasattr",
    "len",
    "numpy.asarray",
    "numpy.empty",
    "numpy.float",
    "set",
    "sklearn.covariance.empirical_covariance",
    "str"
   ]
  },
  "type": "function"
 },
 "nilearn.connectome.group_sparse_cov.fast_logdet": {
  "data": {
   "shadows": "sklearn.utils.extmath.fast_logdet"
  },
  "type": "import"
 },
 "nilearn.connectome.group_sparse_cov.group_sparse_covariance": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "_group_sparse_covariance",
    "empirical_covariances"
   ]
  },
  "type": "function"
 },
 "nilearn.connectome.group_sparse_cov.group_sparse_covariance_path": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "max",
    "nilearn.connectome.group_sparse_cov._group_sparse_covariance",
    "nilearn.connectome.group_sparse_cov.empirical_covariances",
    "nilearn.connectome.group_sparse_cov.group_sparse_scores",
    "probe_function"
   ]
  },
  "type": "function"
 },
 "nilearn.connectome.group_sparse_cov.group_sparse_scores": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "is_spd",
    "min",
    "numpy.diag",
    "numpy.empty",
    "numpy.eye",
    "numpy.float",
    "numpy.isfinite",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "range",
    "sklearn.utils.extmath.fast_logdet"
   ]
  },
  "type": "function"
 },
 "nilearn.connectome.group_sparse_cov.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "nilearn.connectome.group_sparse_cov.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.connectome.group_sparse_cov.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "nilearn.connectome.group_sparse_cov.scipy.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "nilearn.connectome.group_sparse_cov.sklearn.covariance": {
  "data": {
   "shadows": "sklearn.covariance"
  },
  "type": "import"
 },
 "nilearn.connectome.group_sparse_cov.sklearn.cross_validation": {
  "data": {
   "shadows": "sklearn.cross_validation"
  },
  "type": "import"
 },
 "nilearn.connectome.group_sparse_cov.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nilearn.connectome.tests": {
  "data": {},
  "type": "module"
 },
 "nilearn.connectome.tests.test_connectivity_matrices": {
  "data": {},
  "type": "module"
 },
 "nilearn.connectome.tests.test_connectivity_matrices.ConnectivityMeasure": {
  "data": {
   "shadows": "nilearn.connectome.connectivity_matrices.ConnectivityMeasure"
  },
  "type": "import"
 },
 "nilearn.connectome.tests.test_connectivity_matrices.EmpiricalCovariance": {
  "data": {
   "shadows": "sklearn.covariance.EmpiricalCovariance"
  },
  "type": "import"
 },
 "nilearn.connectome.tests.test_connectivity_matrices.LedoitWolf": {
  "data": {
   "shadows": "sklearn.covariance.LedoitWolf"
  },
  "type": "import"
 },
 "nilearn.connectome.tests.test_connectivity_matrices._check_spd": {
  "data": {
   "shadows": "nilearn.connectome.connectivity_matrices._check_spd"
  },
  "type": "import"
 },
 "nilearn.connectome.tests.test_connectivity_matrices._check_square": {
  "data": {
   "shadows": "nilearn.connectome.connectivity_matrices._check_square"
  },
  "type": "import"
 },
 "nilearn.connectome.tests.test_connectivity_matrices._form_symmetric": {
  "data": {
   "shadows": "nilearn.connectome.connectivity_matrices._form_symmetric"
  },
  "type": "import"
 },
 "nilearn.connectome.tests.test_connectivity_matrices._geometric_mean": {
  "data": {
   "shadows": "nilearn.connectome.connectivity_matrices._geometric_mean"
  },
  "type": "import"
 },
 "nilearn.connectome.tests.test_connectivity_matrices._map_eigenvalues": {
  "data": {
   "shadows": "nilearn.connectome.connectivity_matrices._map_eigenvalues"
  },
  "type": "import"
 },
 "nilearn.connectome.tests.test_connectivity_matrices._prec_to_partial": {
  "data": {
   "shadows": "nilearn.connectome.connectivity_matrices._prec_to_partial"
  },
  "type": "import"
 },
 "nilearn.connectome.tests.test_connectivity_matrices.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "nilearn.connectome.tests.test_connectivity_matrices.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nilearn.connectome.tests.test_connectivity_matrices.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nilearn.connectome.tests.test_connectivity_matrices.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nilearn.connectome.tests.test_connectivity_matrices.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nilearn.connectome.tests.test_connectivity_matrices.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "nilearn.connectome.tests.test_connectivity_matrices.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "nilearn.connectome.tests.test_connectivity_matrices.cosh": {
  "data": {
   "shadows": "math.cosh"
  },
  "type": "import"
 },
 "nilearn.connectome.tests.test_connectivity_matrices.exp": {
  "data": {
   "shadows": "math.exp"
  },
  "type": "import"
 },
 "nilearn.connectome.tests.test_connectivity_matrices.grad_geometric_mean": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "nilearn.connectome.connectivity_matrices._form_symmetric",
    "nilearn.connectome.connectivity_matrices._map_eigenvalues",
    "numpy.array",
    "numpy.exp",
    "numpy.inf",
    "numpy.linalg.norm",
    "numpy.log",
    "numpy.mean",
    "numpy.sqrt",
    "range",
    "scipy.linalg.eigh"
   ]
  },
  "type": "function"
 },
 "nilearn.connectome.tests.test_connectivity_matrices.is_spd": {
  "data": {
   "shadows": "nilearn._utils.extmath.is_spd"
  },
  "type": "import"
 },
 "nilearn.connectome.tests.test_connectivity_matrices.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "nilearn.connectome.tests.test_connectivity_matrices.log": {
  "data": {
   "shadows": "math.log"
  },
  "type": "import"
 },
 "nilearn.connectome.tests.test_connectivity_matrices.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.connectome.tests.test_connectivity_matrices.random_diagonal": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "numpy.amax",
    "numpy.amin",
    "numpy.diag",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "nilearn.connectome.tests.test_connectivity_matrices.random_non_singular": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "nilearn.connectome.tests.test_connectivity_matrices.random_diagonal",
    "scipy.linalg.qr",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "nilearn.connectome.tests.test_connectivity_matrices.random_spd": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "nilearn.connectome.tests.test_connectivity_matrices.random_diagonal",
    "scipy.linalg.qr",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "nilearn.connectome.tests.test_connectivity_matrices.sinh": {
  "data": {
   "shadows": "math.sinh"
  },
  "type": "import"
 },
 "nilearn.connectome.tests.test_connectivity_matrices.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "nilearn.connectome.tests.test_connectivity_matrices.sym_to_vec": {
  "data": {
   "shadows": "nilearn.connectome.connectivity_matrices.sym_to_vec"
  },
  "type": "import"
 },
 "nilearn.connectome.tests.test_connectivity_matrices.test_check_spd": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "ValueError",
    "nilearn.connectome.connectivity_matrices._check_spd",
    "nose.tools.assert_raises",
    "numpy.array",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "nilearn.connectome.tests.test_connectivity_matrices.test_check_square": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "ValueError",
    "nilearn.connectome.connectivity_matrices._check_square",
    "nose.tools.assert_raises",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "nilearn.connectome.tests.test_connectivity_matrices.test_connectivity_measure_errors": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "ValueError",
    "nilearn.connectome.connectivity_matrices.ConnectivityMeasure",
    "nose.tools.assert_raises",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "nilearn.connectome.tests.test_connectivity_matrices.test_connectivity_measure_outputs": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "len",
    "nilearn._utils.extmath.is_spd",
    "nilearn.connectome.connectivity_matrices.ConnectivityMeasure",
    "nilearn.connectome.connectivity_matrices._map_eigenvalues",
    "nilearn.connectome.tests.test_connectivity_matrices.copy",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.diag",
    "numpy.exp",
    "numpy.eye",
    "numpy.ndarray",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "range",
    "scipy.linalg.inv",
    "sklearn.covariance.EmpiricalCovariance",
    "sklearn.covariance.LedoitWolf",
    "sklearn.utils.check_random_state",
    "zip"
   ]
  },
  "type": "function"
 },
 "nilearn.connectome.tests.test_connectivity_matrices.test_geometric_mean_couple": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "nilearn.connectome.connectivity_matrices._form_symmetric",
    "nilearn.connectome.connectivity_matrices._geometric_mean",
    "nilearn.connectome.connectivity_matrices._map_eigenvalues",
    "numpy.eye",
    "numpy.linalg.eigh",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.testing.assert_array_almost_equal",
    "numpy.tril"
   ]
  },
  "type": "function"
 },
 "nilearn.connectome.tests.test_connectivity_matrices.test_geometric_mean_diagonal": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "float",
    "len",
    "nilearn.connectome.connectivity_matrices._geometric_mean",
    "numpy.array",
    "numpy.eye",
    "numpy.prod",
    "numpy.testing.assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "nilearn.connectome.tests.test_connectivity_matrices.test_geometric_mean_errors": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "ValueError",
    "nilearn.connectome.connectivity_matrices._geometric_mean",
    "nose.tools.assert_raises",
    "numpy.eye",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "nilearn.connectome.tests.test_connectivity_matrices.test_geometric_mean_geodesic": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "nilearn.connectome.connectivity_matrices._geometric_mean",
    "nilearn.connectome.connectivity_matrices._map_eigenvalues",
    "numpy.arange",
    "numpy.array",
    "numpy.exp",
    "numpy.eye",
    "numpy.linalg.norm",
    "numpy.newaxis",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "nilearn.connectome.tests.test_connectivity_matrices.test_geometric_mean_properties": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "len",
    "list",
    "nilearn._utils.extmath.is_spd",
    "nilearn.connectome.connectivity_matrices._geometric_mean",
    "nilearn.connectome.tests.test_connectivity_matrices.copy",
    "nilearn.connectome.tests.test_connectivity_matrices.grad_geometric_mean",
    "nilearn.connectome.tests.test_connectivity_matrices.random_non_singular",
    "nilearn.connectome.tests.test_connectivity_matrices.random_spd",
    "nilearn.connectome.tests.test_connectivity_matrices.warnings",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.amax",
    "numpy.diff",
    "numpy.mean",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "range",
    "scipy.linalg.inv",
    "zip"
   ]
  },
  "type": "function"
 },
 "nilearn.connectome.tests.test_connectivity_matrices.test_map_eigenvalues": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "math.cosh",
    "math.exp",
    "math.log",
    "math.sinh",
    "nilearn.connectome.connectivity_matrices._map_eigenvalues",
    "numpy.array",
    "numpy.exp",
    "numpy.log",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "nilearn.connectome.tests.test_connectivity_matrices.test_prec_to_partial": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "math.sqrt",
    "nilearn.connectome.connectivity_matrices._prec_to_partial",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "nilearn.connectome.tests.test_connectivity_matrices.test_sym_to_vec": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "math.sqrt",
    "nilearn.connectome.connectivity_matrices.sym_to_vec",
    "numpy.array",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "nilearn.connectome.tests.test_connectivity_matrices.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nilearn.connectome.tests.test_group_sparse_cov": {
  "data": {},
  "type": "module"
 },
 "nilearn.connectome.tests.test_group_sparse_cov.GroupSparseCovariance": {
  "data": {
   "shadows": "nilearn.connectome.GroupSparseCovariance"
  },
  "type": "import"
 },
 "nilearn.connectome.tests.test_group_sparse_cov.GroupSparseCovarianceCV": {
  "data": {
   "shadows": "nilearn.connectome.GroupSparseCovarianceCV"
  },
  "type": "import"
 },
 "nilearn.connectome.tests.test_group_sparse_cov.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nilearn.connectome.tests.test_group_sparse_cov.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nilearn.connectome.tests.test_group_sparse_cov.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nilearn.connectome.tests.test_group_sparse_cov.generate_group_sparse_gaussian_graphs": {
  "data": {
   "shadows": "nilearn._utils.testing.generate_group_sparse_gaussian_graphs"
  },
  "type": "import"
 },
 "nilearn.connectome.tests.test_group_sparse_cov.group_sparse_covariance": {
  "data": {
   "shadows": "nilearn.connectome.group_sparse_cov.group_sparse_covariance"
  },
  "type": "import"
 },
 "nilearn.connectome.tests.test_group_sparse_cov.group_sparse_scores": {
  "data": {
   "shadows": "nilearn.connectome.group_sparse_cov.group_sparse_scores"
  },
  "type": "import"
 },
 "nilearn.connectome.tests.test_group_sparse_cov.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.connectome.tests.test_group_sparse_cov.test_group_sparse_covariance": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "Probe",
    "ValueError",
    "len",
    "nilearn._utils.testing.generate_group_sparse_gaussian_graphs",
    "nilearn.connectome.GroupSparseCovariance",
    "nilearn.connectome.GroupSparseCovarianceCV",
    "nilearn.connectome.group_sparse_cov.group_sparse_covariance",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.all",
    "numpy.diff",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nilearn.connectome.tests.test_group_sparse_cov.test_group_sparse_covariance.Probe": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nilearn.connectome.tests.test_group_sparse_cov.test_group_sparse_covariance.Probe.__call__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "nilearn.connectome.group_sparse_cov.group_sparse_scores"
   ]
  },
  "type": "function"
 },
 "nilearn.connectome.tests.test_group_sparse_cov.test_group_sparse_covariance.Probe.__init__": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "nilearn.datasets": {
  "data": {},
  "type": "module"
 },
 "nilearn.datasets.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "nilearn.datasets.atlas": {
  "data": {},
  "type": "module"
 },
 "nilearn.datasets.atlas.Bunch": {
  "data": {
   "shadows": "sklearn.datasets.base.Bunch"
  },
  "type": "import"
 },
 "nilearn.datasets.atlas.ElementTree": {
  "data": {
   "shadows": "xml.etree.ElementTree"
  },
  "type": "import"
 },
 "nilearn.datasets.atlas.deprecated": {
  "data": {
   "shadows": "sklearn.utils.deprecated"
  },
  "type": "import"
 },
 "nilearn.datasets.atlas.fetch_atlas_aal": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "ValueError",
    "_fetch_files",
    "_get_dataset_descr",
    "_get_dataset_dir",
    "nilearn.datasets.atlas.os",
    "sklearn.datasets.base.Bunch",
    "str"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.atlas.fetch_atlas_basc_multiscale_2015": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "ValueError",
    "_fetch_files",
    "_get_dataset_descr",
    "_get_dataset_dir",
    "dict",
    "nilearn.datasets.atlas.os",
    "sklearn.datasets.base.Bunch",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.atlas.fetch_atlas_craddock_2012": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "_fetch_files",
    "_get_dataset_descr",
    "_get_dataset_dir",
    "dict",
    "list",
    "sklearn.datasets.base.Bunch",
    "zip"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.atlas.fetch_atlas_destrieux_2009": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "_fetch_files",
    "_get_dataset_dir",
    "dict",
    "numpy.recfromcsv",
    "open",
    "sklearn.datasets.base.Bunch"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.atlas.fetch_atlas_harvard_oxford": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "ValueError",
    "_fetch_files",
    "_get_dataset_dir",
    "check_niimg",
    "float",
    "int",
    "list",
    "new_img_like",
    "nilearn.datasets.atlas.os",
    "nilearn.datasets.atlas.xml.etree.ElementTree",
    "numpy.unique",
    "sklearn.datasets.base.Bunch",
    "zip"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.atlas.fetch_atlas_msdl": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "_fetch_files",
    "_get_dataset_descr",
    "_get_dataset_dir",
    "nilearn.datasets.atlas.os",
    "numpy.recfromcsv",
    "sklearn.datasets.base.Bunch"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.atlas.fetch_atlas_power_2011": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "fetch_coords_power_2011",
    "sklearn.utils.deprecated"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.atlas.fetch_atlas_smith_2009": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "ValueError",
    "_fetch_files",
    "_get_dataset_descr",
    "_get_dataset_dir",
    "dict",
    "isinstance",
    "len",
    "sklearn.datasets.base.Bunch",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.atlas.fetch_atlas_yeo_2011": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "_fetch_files",
    "_get_dataset_descr",
    "_get_dataset_dir",
    "dict",
    "list",
    "nilearn.datasets.atlas.os",
    "sklearn.datasets.base.Bunch",
    "zip"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.atlas.fetch_coords_dosenbach_2010": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "_get_dataset_descr",
    "dict",
    "nilearn.datasets.atlas.os",
    "numpy.array",
    "numpy.recfromcsv",
    "sklearn.datasets.base.Bunch",
    "zip"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.atlas.fetch_coords_power_2011": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "_get_dataset_descr",
    "dict",
    "nilearn.datasets.atlas.os",
    "numpy.recfromcsv",
    "sklearn.datasets.base.Bunch"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.atlas.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.datasets.atlas.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nilearn.datasets.atlas.xml.etree.ElementTree": {
  "data": {
   "shadows": "xml.etree.ElementTree"
  },
  "type": "import"
 },
 "nilearn.datasets.data": {
  "data": {},
  "type": "module"
 },
 "nilearn.datasets.description": {
  "data": {},
  "type": "module"
 },
 "nilearn.datasets.func": {
  "data": {},
  "type": "module"
 },
 "nilearn.datasets.func.Bunch": {
  "data": {
   "shadows": "sklearn.datasets.base.Bunch"
  },
  "type": "import"
 },
 "nilearn.datasets.func._load_mixed_gambles": {
  "data": {
   "lineno": 1184,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "list",
    "nilearn.datasets.func.nibabel",
    "numpy.all",
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "numpy.int",
    "numpy.isfinite",
    "numpy.logical_and",
    "numpy.newaxis",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.func.fetch_abide_pcp": {
  "data": {
   "lineno": 1009,
   "symbols_in_volume": [
    "BytesIO",
    "KeyError",
    "_fetch_files",
    "_filter_columns",
    "_get_dataset_descr",
    "_get_dataset_dir",
    "isinstance",
    "nilearn.datasets.func.os",
    "nilearn.datasets.func.re",
    "numpy.loadtxt",
    "numpy.recfromcsv",
    "open",
    "sklearn.datasets.base.Bunch"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.func.fetch_adhd": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "_fetch_files",
    "_get_dataset_descr",
    "_get_dataset_dir",
    "dict",
    "int",
    "len",
    "nilearn.datasets.func.warnings",
    "numpy.asarray",
    "numpy.genfromtxt",
    "numpy.where",
    "range",
    "sklearn.datasets.base.Bunch",
    "zip"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.func.fetch_cobre": {
  "data": {
   "lineno": 1428,
   "symbols_in_volume": [
    "_fetch_files",
    "_get_dataset_descr",
    "_get_dataset_dir",
    "float",
    "len",
    "nilearn.datasets.func.json",
    "nilearn.datasets.func.warnings",
    "numpy.ceil",
    "numpy.char.strip",
    "numpy.floor",
    "numpy.hstack",
    "numpy.in1d",
    "numpy.logical_not",
    "numpy.recfromcsv",
    "open",
    "sklearn.datasets.base.Bunch"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.func.fetch_haxby": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "_fetch_files",
    "_get_dataset_descr",
    "_get_dataset_dir",
    "_read_md5_sum_file",
    "_tree",
    "len",
    "nilearn.datasets.func.os",
    "nilearn.datasets.func.warnings",
    "range",
    "sklearn.datasets.base.Bunch"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.func.fetch_haxby_simple": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "_fetch_files",
    "_get_dataset_descr",
    "_get_dataset_dir",
    "nilearn.datasets.func.os",
    "sklearn.datasets.base.Bunch"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.func.fetch_localizer_calculation_task": {
  "data": {
   "lineno": 966,
   "symbols_in_volume": [
    "nilearn.datasets.func.fetch_localizer_contrasts"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.func.fetch_localizer_contrasts": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "ValueError",
    "_fetch_files",
    "_get_dataset_descr",
    "_get_dataset_dir",
    "enumerate",
    "isinstance",
    "list",
    "nilearn.datasets.func.os",
    "nilearn.datasets.func.warnings",
    "numpy.lib.recfunctions.join_by",
    "numpy.recfromcsv",
    "range",
    "sklearn.datasets.base.Bunch",
    "str.join",
    "str.replace",
    "zip"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.func.fetch_megatrawls_netmats": {
  "data": {
   "lineno": 1302,
   "symbols_in_volume": [
    "ValueError",
    "_fetch_files",
    "_get_dataset_descr",
    "_get_dataset_dir",
    "csv_to_array",
    "dict",
    "nilearn.datasets.func.os",
    "sklearn.datasets.base.Bunch"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.func.fetch_mixed_gambles": {
  "data": {
   "lineno": 1228,
   "symbols_in_volume": [
    "_fetch_files",
    "_get_dataset_dir",
    "check_niimg",
    "dict",
    "nilearn.datasets.func._load_mixed_gambles",
    "nilearn.datasets.func.os",
    "nilearn.datasets.func.warnings",
    "numpy.arange",
    "numpy.repeat",
    "range",
    "sklearn.datasets.base.Bunch"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.func.fetch_miyawaki2008": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "_fetch_files",
    "_get_dataset_descr",
    "_get_dataset_dir",
    "nilearn.datasets.func.os",
    "range",
    "sklearn.datasets.base.Bunch"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.func.fetch_nyu_rest": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "ValueError",
    "_fetch_files",
    "_get_dataset_descr",
    "_get_dataset_dir",
    "len",
    "nilearn.datasets.func.os",
    "nilearn.datasets.func.warnings",
    "sklearn.datasets.base.Bunch"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.func.join_by": {
  "data": {
   "shadows": "numpy.lib.recfunctions.join_by"
  },
  "type": "import"
 },
 "nilearn.datasets.func.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "nilearn.datasets.func.nibabel": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "nilearn.datasets.func.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.datasets.func.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nilearn.datasets.func.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "nilearn.datasets.func.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nilearn.datasets.struct": {
  "data": {},
  "type": "module"
 },
 "nilearn.datasets.struct.Bunch": {
  "data": {
   "shadows": "sklearn.datasets.base.Bunch"
  },
  "type": "import"
 },
 "nilearn.datasets.struct.fetch_icbm152_2009": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "_fetch_files",
    "_get_dataset_descr",
    "_get_dataset_dir",
    "dict",
    "list",
    "nilearn.datasets.struct.os",
    "sklearn.datasets.base.Bunch",
    "zip"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.struct.fetch_oasis_vbm": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "ValueError",
    "_fetch_files",
    "_get_dataset_descr",
    "_get_dataset_dir",
    "nilearn.datasets.struct.os",
    "nilearn.datasets.struct.warnings",
    "numpy.asarray",
    "numpy.recfromcsv",
    "range",
    "sklearn.datasets.base.Bunch",
    "sorted",
    "str.split"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.struct.load_mni152_template": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "check_niimg",
    "nilearn.datasets.struct.os"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.struct.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.datasets.struct.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nilearn.datasets.struct.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nilearn.datasets.tests": {
  "data": {},
  "type": "module"
 },
 "nilearn.datasets.tests.data": {
  "data": {},
  "type": "module"
 },
 "nilearn.datasets.tests.test_atlas": {
  "data": {},
  "type": "module"
 },
 "nilearn.datasets.tests.test_atlas._basestring": {
  "data": {
   "shadows": "nilearn._utils.compat._basestring"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_atlas.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_atlas.assert_not_equal": {
  "data": {
   "shadows": "nose.tools.assert_not_equal"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_atlas.assert_raises_regex": {
  "data": {
   "shadows": "nilearn._utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_atlas.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_atlas.atlas": {
  "data": {
   "shadows": "nilearn.datasets.atlas"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_atlas.csv": {
  "data": {
   "shadows": "csv"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_atlas.nibabel": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_atlas.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_atlas.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_atlas.setup_mock": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "nilearn.datasets.atlas",
    "nilearn.datasets.utils"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.tests.test_atlas.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_atlas.struct": {
  "data": {
   "shadows": "nilearn.datasets.struct"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_atlas.teardown_mock": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "nilearn.datasets.atlas",
    "nilearn.datasets.utils"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.tests.test_atlas.test_fail_fetch_atlas_harvard_oxford": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "len",
    "list",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn.datasets.atlas.fetch_atlas_harvard_oxford",
    "nilearn.datasets.tests.test_atlas.nibabel",
    "nilearn.datasets.tests.test_atlas.os",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "nose.with_setup",
    "numpy.eye",
    "numpy.zeros",
    "open"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.tests.test_atlas.test_fetch_atlas_aal": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "list",
    "nilearn._utils.compat._basestring",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn.datasets.atlas.fetch_atlas_aal",
    "nilearn.datasets.tests.test_atlas.os",
    "nilearn.datasets.tests.test_atlas.setup_mock",
    "nilearn.datasets.tests.test_atlas.teardown_mock",
    "nose.tools.assert_equal",
    "nose.tools.assert_not_equal",
    "nose.tools.assert_true",
    "nose.with_setup",
    "open"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.tests.test_atlas.test_fetch_atlas_basc_multiscale_2015": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn.datasets.atlas.fetch_atlas_basc_multiscale_2015",
    "nilearn.datasets.tests.test_atlas.os",
    "nilearn.datasets.tests.test_atlas.setup_mock",
    "nilearn.datasets.tests.test_atlas.teardown_mock",
    "nose.tools.assert_equal",
    "nose.tools.assert_not_equal",
    "nose.with_setup",
    "zip"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.tests.test_atlas.test_fetch_atlas_craddock_2012": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "len",
    "nilearn.datasets.atlas.fetch_atlas_craddock_2012",
    "nilearn.datasets.tests.test_atlas.os",
    "nilearn.datasets.tests.test_atlas.setup_mock",
    "nilearn.datasets.tests.test_atlas.teardown_mock",
    "nose.tools.assert_equal",
    "nose.tools.assert_not_equal",
    "nose.with_setup",
    "zip"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.tests.test_atlas.test_fetch_atlas_destrieux_2009": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "len",
    "nilearn.datasets.atlas.fetch_atlas_destrieux_2009",
    "nilearn.datasets.tests.test_atlas.os",
    "nilearn.datasets.tests.test_atlas.setup_mock",
    "nilearn.datasets.tests.test_atlas.teardown_mock",
    "nose.tools.assert_equal",
    "nose.with_setup",
    "open"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.tests.test_atlas.test_fetch_atlas_msdl": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "nilearn._utils.compat._basestring",
    "nilearn.datasets.atlas.fetch_atlas_msdl",
    "nilearn.datasets.tests.test_atlas.csv",
    "nilearn.datasets.tests.test_atlas.os",
    "nilearn.datasets.tests.test_atlas.setup_mock",
    "nilearn.datasets.tests.test_atlas.teardown_mock",
    "nose.tools.assert_equal",
    "nose.tools.assert_not_equal",
    "nose.tools.assert_true",
    "nose.with_setup",
    "numpy.rec.array",
    "numpy.savetxt",
    "open"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.tests.test_atlas.test_fetch_atlas_smith_2009": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "len",
    "nilearn.datasets.atlas.fetch_atlas_smith_2009",
    "nilearn.datasets.tests.test_atlas.os",
    "nilearn.datasets.tests.test_atlas.setup_mock",
    "nilearn.datasets.tests.test_atlas.teardown_mock",
    "nose.tools.assert_equal",
    "nose.tools.assert_not_equal",
    "nose.with_setup",
    "zip"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.tests.test_atlas.test_fetch_atlas_yeo_2011": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "nilearn._utils.compat._basestring",
    "nilearn.datasets.atlas.fetch_atlas_yeo_2011",
    "nilearn.datasets.tests.test_atlas.setup_mock",
    "nilearn.datasets.tests.test_atlas.teardown_mock",
    "nose.tools.assert_equal",
    "nose.tools.assert_not_equal",
    "nose.tools.assert_true",
    "nose.with_setup"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.tests.test_atlas.test_fetch_coords_dosenbach_2010": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "len",
    "nilearn.datasets.atlas.fetch_coords_dosenbach_2010",
    "nose.tools.assert_equal",
    "nose.tools.assert_not_equal",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.tests.test_atlas.test_fetch_coords_power_2011": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "len",
    "nilearn.datasets.atlas.fetch_coords_power_2011",
    "nose.tools.assert_equal",
    "nose.tools.assert_not_equal"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.tests.test_atlas.test_get_dataset_dir": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "OSError",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn.datasets.tests.test_atlas.os",
    "nilearn.datasets.tests.test_atlas.shutil",
    "nilearn.datasets.utils._get_dataset_dir",
    "nose.tools.assert_equal",
    "nose.with_setup",
    "open"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.tests.test_atlas.tst": {
  "data": {
   "shadows": "test_utils"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_atlas.utils": {
  "data": {
   "shadows": "nilearn.datasets.utils"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_atlas.with_setup": {
  "data": {
   "shadows": "nose.with_setup"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_func": {
  "data": {},
  "type": "module"
 },
 "nilearn.datasets.tests.test_func._basestring": {
  "data": {
   "shadows": "nilearn._utils.compat._basestring"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_func._urllib": {
  "data": {
   "shadows": "nilearn._utils.compat._urllib"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_func.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_func.assert_not_equal": {
  "data": {
   "shadows": "nose.tools.assert_not_equal"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_func.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_func.assert_raises_regex": {
  "data": {
   "shadows": "nilearn._utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_func.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_func.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_func.func": {
  "data": {
   "shadows": "nilearn.datasets.func"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_func.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_func.nibabel": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_func.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_func.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_func.setup_mock": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "nilearn.datasets.func",
    "nilearn.datasets.utils"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.tests.test_func.teardown_mock": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "nilearn.datasets.func",
    "nilearn.datasets.utils"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.tests.test_func.test__load_mixed_gambles": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "len",
    "nilearn.datasets.func._load_mixed_gambles",
    "nilearn.datasets.tests.test_func.nibabel",
    "nose.tools.assert_equal",
    "numpy.eye",
    "range",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.tests.test_func.test_check_parameters_megatrawls_datasets": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "ValueError",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn.datasets.func.fetch_megatrawls_netmats"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.tests.test_func.test_fail_fetch_haxby_simple": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "IOError",
    "nilearn._utils.compat._urllib.request.pathname2url",
    "nilearn.datasets.tests.test_func.os",
    "nilearn.datasets.utils._fetch_files",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.with_setup",
    "open"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.tests.test_func.test_fetch_abide_pcp": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "int",
    "len",
    "list",
    "nilearn.datasets.func.fetch_abide_pcp",
    "nilearn.datasets.tests.test_func.setup_mock",
    "nilearn.datasets.tests.test_func.teardown_mock",
    "nose.tools.assert_equal",
    "nose.tools.assert_not_equal",
    "nose.with_setup",
    "numpy.asarray",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.tests.test_func.test_fetch_adhd": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "len",
    "nilearn.datasets.func.fetch_adhd",
    "nilearn.datasets.tests.test_func.setup_mock",
    "nilearn.datasets.tests.test_func.teardown_mock",
    "nose.tools.assert_equal",
    "nose.tools.assert_not_equal",
    "nose.with_setup",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.tests.test_func.test_fetch_cobre": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "nilearn._utils.compat._basestring",
    "nilearn.datasets.func.fetch_cobre",
    "nilearn.datasets.tests.test_func.json",
    "nilearn.datasets.tests.test_func.os",
    "nilearn.datasets.tests.test_func.setup_mock",
    "nilearn.datasets.tests.test_func.teardown_mock",
    "nose.tools.assert_equal",
    "nose.tools.assert_not_equal",
    "nose.tools.assert_true",
    "nose.with_setup",
    "numpy.asarray",
    "numpy.hstack",
    "numpy.ones",
    "numpy.rec.array",
    "numpy.recarray",
    "open",
    "sorted"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.tests.test_func.test_fetch_haxby": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "len",
    "nilearn.datasets.func.fetch_haxby",
    "nilearn.datasets.tests.test_func.setup_mock",
    "nilearn.datasets.tests.test_func.teardown_mock",
    "nose.tools.assert_equal",
    "nose.tools.assert_not_equal",
    "nose.tools.assert_true",
    "nose.with_setup",
    "range"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.tests.test_func.test_fetch_haxby_simple": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "nilearn._utils.compat._urllib.request.pathname2url",
    "nilearn.datasets.func.fetch_haxby_simple",
    "nilearn.datasets.tests.test_func.os",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "nose.with_setup"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.tests.test_func.test_fetch_localizer_calculation_task": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "nilearn._utils.compat._basestring",
    "nilearn.datasets.func.fetch_localizer_calculation_task",
    "nilearn.datasets.tests.test_func.setup_mock",
    "nilearn.datasets.tests.test_func.teardown_mock",
    "nose.tools.assert_equal",
    "nose.tools.assert_not_equal",
    "nose.tools.assert_true",
    "nose.with_setup",
    "numpy.asarray",
    "numpy.recarray",
    "range"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.tests.test_func.test_fetch_localizer_contrasts": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "nilearn._utils.compat._basestring",
    "nilearn.datasets.func.fetch_localizer_contrasts",
    "nilearn.datasets.tests.test_func.setup_mock",
    "nilearn.datasets.tests.test_func.teardown_mock",
    "nose.tools.assert_equal",
    "nose.tools.assert_not_equal",
    "nose.tools.assert_true",
    "nose.with_setup",
    "numpy.asarray",
    "numpy.recarray",
    "range"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.tests.test_func.test_fetch_megatrawls_netmats": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "len",
    "nilearn.datasets.func.fetch_megatrawls_netmats",
    "nilearn.datasets.tests.test_func.os",
    "nose.tools.assert_equal",
    "nose.tools.assert_not_equal",
    "nose.with_setup",
    "open"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.tests.test_func.test_fetch_mixed_gambles": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "len",
    "nilearn.datasets.func.fetch_mixed_gambles",
    "nilearn.datasets.tests.test_func.os",
    "nilearn.datasets.tests.test_func.setup_mock",
    "nose.tools.assert_equal",
    "nose.with_setup"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.tests.test_func.test_fetch_nyu_rest": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "len",
    "nilearn.datasets.func.fetch_nyu_rest",
    "nilearn.datasets.tests.test_func.setup_mock",
    "nilearn.datasets.tests.test_func.teardown_mock",
    "nose.tools.assert_equal",
    "nose.tools.assert_not_equal",
    "nose.tools.assert_true",
    "nose.with_setup",
    "numpy.all",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.tests.test_func.test_miyawaki2008": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "nilearn._utils.compat._basestring",
    "nilearn.datasets.func.fetch_miyawaki2008",
    "nilearn.datasets.tests.test_func.setup_mock",
    "nilearn.datasets.tests.test_func.teardown_mock",
    "nose.tools.assert_equal",
    "nose.tools.assert_not_equal",
    "nose.tools.assert_true",
    "nose.with_setup"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.tests.test_func.tst": {
  "data": {
   "shadows": "test_utils"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_func.utils": {
  "data": {
   "shadows": "nilearn.datasets.utils"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_func.with_setup": {
  "data": {
   "shadows": "nose.with_setup"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_struct": {
  "data": {},
  "type": "module"
 },
 "nilearn.datasets.tests.test_struct._basestring": {
  "data": {
   "shadows": "nilearn._utils.compat._basestring"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_struct.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_struct.assert_not_equal": {
  "data": {
   "shadows": "nose.tools.assert_not_equal"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_struct.assert_raises_regex": {
  "data": {
   "shadows": "nilearn._utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_struct.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_struct.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_struct.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_struct.setup_mock": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "nilearn.datasets.struct",
    "nilearn.datasets.utils"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.tests.test_struct.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_struct.struct": {
  "data": {
   "shadows": "nilearn.datasets.struct"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_struct.teardown_mock": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "nilearn.datasets.struct",
    "nilearn.datasets.utils"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.tests.test_struct.test_fetch_icbm152_2009": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "nilearn._utils.compat._basestring",
    "nilearn.datasets.struct.fetch_icbm152_2009",
    "nilearn.datasets.tests.test_struct.setup_mock",
    "nilearn.datasets.tests.test_struct.teardown_mock",
    "nose.tools.assert_equal",
    "nose.tools.assert_not_equal",
    "nose.tools.assert_true",
    "nose.with_setup"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.tests.test_struct.test_fetch_oasis_vbm": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "nilearn._utils.compat._basestring",
    "nilearn.datasets.struct.fetch_oasis_vbm",
    "nilearn.datasets.tests.test_struct.setup_mock",
    "nilearn.datasets.tests.test_struct.teardown_mock",
    "nose.tools.assert_equal",
    "nose.tools.assert_not_equal",
    "nose.tools.assert_true",
    "nose.with_setup",
    "numpy.asarray",
    "numpy.recarray",
    "range"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.tests.test_struct.test_get_dataset_dir": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "OSError",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn.datasets.tests.test_struct.os",
    "nilearn.datasets.tests.test_struct.shutil",
    "nilearn.datasets.utils._get_dataset_dir",
    "nose.tools.assert_equal",
    "nose.with_setup",
    "open"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.tests.test_struct.test_load_mni152_template": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "nilearn.datasets.struct.load_mni152_template",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.tests.test_struct.tst": {
  "data": {
   "shadows": "test_utils"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_struct.utils": {
  "data": {
   "shadows": "nilearn.datasets.utils"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_struct.with_setup": {
  "data": {
   "shadows": "nose.with_setup"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_utils": {
  "data": {
   "symbols_in_volume": [
    "nilearn.datasets.tests.test_utils.currdir",
    "nilearn.datasets.tests.test_utils.os"
   ]
  },
  "type": "module"
 },
 "nilearn.datasets.tests.test_utils.FetchFilesMock": {
  "data": {
   "shadows": "nilearn._utils.testing.FetchFilesMock"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_utils.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_utils.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_utils.assert_raises_regex": {
  "data": {
   "shadows": "nilearn._utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_utils.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_utils.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_utils.currdir": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "nilearn.datasets.tests.test_utils.datadir": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "nilearn.datasets.tests.test_utils.datasets": {
  "data": {
   "shadows": "nilearn.datasets"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_utils.file_mock": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "nilearn.datasets.tests.test_utils.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_utils.mkdtemp": {
  "data": {
   "shadows": "tempfile.mkdtemp"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_utils.mkstemp": {
  "data": {
   "shadows": "tempfile.mkstemp"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_utils.mock_request": {
  "data": {
   "shadows": "nilearn._utils.testing.mock_request"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_utils.setup_mock": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "nilearn._utils.testing.FetchFilesMock",
    "nilearn._utils.testing.mock_request",
    "nilearn._utils.testing.wrap_chunk_read_",
    "nilearn.datasets.utils"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.tests.test_utils.setup_tmpdata": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "nilearn.datasets.tests.test_utils.tmpdir",
    "tempfile.mkdtemp"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.tests.test_utils.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_utils.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_utils.teardown_mock": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "nilearn.datasets.utils"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.tests.test_utils.teardown_tmpdata": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "nilearn.datasets.tests.test_utils.shutil",
    "nilearn.datasets.tests.test_utils.tmpdir"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.tests.test_utils.test_fetch_file_overwrite": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "len",
    "nilearn.datasets.tests.test_utils.os",
    "nilearn.datasets.tests.test_utils.setup_mock",
    "nilearn.datasets.tests.test_utils.setup_tmpdata",
    "nilearn.datasets.tests.test_utils.teardown_mock",
    "nilearn.datasets.tests.test_utils.teardown_tmpdata",
    "nilearn.datasets.tests.test_utils.tmpdir",
    "nilearn.datasets.utils._fetch_file",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "nose.with_setup",
    "open"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.tests.test_utils.test_fetch_files_overwrite": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "dict",
    "len",
    "nilearn.datasets.tests.test_utils.os",
    "nilearn.datasets.tests.test_utils.setup_mock",
    "nilearn.datasets.tests.test_utils.setup_tmpdata",
    "nilearn.datasets.tests.test_utils.teardown_mock",
    "nilearn.datasets.tests.test_utils.teardown_tmpdata",
    "nilearn.datasets.tests.test_utils.tmpdir",
    "nilearn.datasets.utils._fetch_files",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "nose.with_setup",
    "open"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.tests.test_utils.test_filter_columns": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "int",
    "list",
    "nilearn.datasets.utils._filter_columns",
    "nose.tools.assert_equal",
    "numpy.arange",
    "numpy.asarray",
    "numpy.sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.tests.test_utils.test_get_dataset_dir": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "OSError",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn.datasets.tests.test_utils.os",
    "nilearn.datasets.tests.test_utils.setup_tmpdata",
    "nilearn.datasets.tests.test_utils.shutil",
    "nilearn.datasets.tests.test_utils.teardown_tmpdata",
    "nilearn.datasets.tests.test_utils.tmpdir",
    "nilearn.datasets.utils._get_dataset_dir",
    "nose.tools.assert_equal",
    "nose.with_setup",
    "open"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.tests.test_utils.test_md5_sum_file": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "nilearn.datasets.tests.test_utils.os",
    "nilearn.datasets.utils._md5_sum_file",
    "nose.tools.assert_equal",
    "tempfile.mkstemp"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.tests.test_utils.test_movetree": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "nilearn.datasets.tests.test_utils.os",
    "nilearn.datasets.utils.movetree",
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "open",
    "tempfile.mkdtemp"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.tests.test_utils.test_read_md5_sum_file": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "nilearn.datasets.tests.test_utils.os",
    "nilearn.datasets.utils._read_md5_sum_file",
    "nose.tools.assert_equal",
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "tempfile.mkstemp"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.tests.test_utils.test_tree": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "len",
    "nilearn.datasets.tests.test_utils.os",
    "nilearn.datasets.tests.test_utils.shutil",
    "nilearn.datasets.utils._tree",
    "nose.tools.assert_equal",
    "open",
    "tempfile.mkdtemp"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.tests.test_utils.test_uncompress": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "nilearn.datasets.tests.test_utils.contextlib",
    "nilearn.datasets.tests.test_utils.gzip",
    "nilearn.datasets.tests.test_utils.os",
    "nilearn.datasets.tests.test_utils.shutil",
    "nilearn.datasets.tests.test_utils.tarfile",
    "nilearn.datasets.tests.test_utils.zipfile",
    "nilearn.datasets.utils._uncompress_file",
    "tempfile.mkdtemp",
    "tempfile.mkstemp"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.tests.test_utils.tmpdir": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "nilearn.datasets.tests.test_utils.url_request": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "nilearn.datasets.tests.test_utils.with_setup": {
  "data": {
   "shadows": "nose.with_setup"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_utils.wrap_chunk_read_": {
  "data": {
   "shadows": "nilearn._utils.testing.wrap_chunk_read_"
  },
  "type": "import"
 },
 "nilearn.datasets.tests.test_utils.zipfile": {
  "data": {
   "shadows": "zipfile"
  },
  "type": "import"
 },
 "nilearn.datasets.utils": {
  "data": {},
  "type": "module"
 },
 "nilearn.datasets.utils._chunk_read_": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "Exception",
    "int",
    "len",
    "nilearn.datasets.utils._chunk_report_",
    "nilearn.datasets.utils.time",
    "print"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.utils._chunk_report_": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "float",
    "max",
    "nilearn.datasets.utils._format_time",
    "nilearn.datasets.utils.sys",
    "nilearn.datasets.utils.time"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.utils._fetch_file": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "Exception",
    "IOError",
    "ValueError",
    "md5_hash",
    "nilearn.datasets.utils._chunk_read_",
    "nilearn.datasets.utils._md5_sum_file",
    "nilearn.datasets.utils.base64",
    "nilearn.datasets.utils.os",
    "nilearn.datasets.utils.shutil",
    "nilearn.datasets.utils.sys",
    "nilearn.datasets.utils.time",
    "open",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.utils._fetch_files": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "Exception",
    "IOError",
    "ValueError",
    "list",
    "nilearn.datasets.utils._fetch_file",
    "nilearn.datasets.utils._uncompress_file",
    "nilearn.datasets.utils.hashlib",
    "nilearn.datasets.utils.movetree",
    "nilearn.datasets.utils.os",
    "nilearn.datasets.utils.shutil",
    "nilearn.datasets.utils.warnings",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.utils._filter_column": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "bytes",
    "filter",
    "isinstance",
    "len",
    "nilearn.datasets.utils.collections",
    "numpy.bool",
    "numpy.logical_and",
    "numpy.logical_or",
    "numpy.zeros",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.utils._filter_columns": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "ValueError",
    "fcomb",
    "nilearn.datasets.utils._filter_column",
    "numpy.bool",
    "numpy.logical_and",
    "numpy.logical_or",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.utils._format_time": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "nilearn.datasets.utils._get_dataset_descr": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "IOError",
    "nilearn.datasets.utils.os",
    "open",
    "print"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.utils._get_dataset_dir": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "Exception",
    "OSError",
    "getattr",
    "nilearn.datasets.utils.os",
    "nilearn.datasets.utils.readlinkabs",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.utils._md5_sum_file": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "nilearn.datasets.utils.hashlib",
    "open"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.utils._read_md5_sum_file": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.utils._tree": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "len",
    "nilearn.datasets.utils.fnmatch",
    "nilearn.datasets.utils.os",
    "sorted"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.utils._uncompress_file": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "Exception",
    "IOError",
    "nilearn.datasets.utils.contextlib",
    "nilearn.datasets.utils.gzip",
    "nilearn.datasets.utils.os",
    "nilearn.datasets.utils.shutil",
    "nilearn.datasets.utils.sys",
    "nilearn.datasets.utils.tarfile",
    "nilearn.datasets.utils.zipfile",
    "open",
    "print"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.utils.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "nilearn.datasets.utils.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "nilearn.datasets.utils.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "nilearn.datasets.utils.fnmatch": {
  "data": {
   "shadows": "fnmatch"
  },
  "type": "import"
 },
 "nilearn.datasets.utils.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "nilearn.datasets.utils.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "nilearn.datasets.utils.movetree": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "Exception",
    "IOError",
    "nilearn.datasets.utils.os",
    "nilearn.datasets.utils.shutil",
    "str"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.datasets.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nilearn.datasets.utils.readlinkabs": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "nilearn.datasets.utils.os"
   ]
  },
  "type": "function"
 },
 "nilearn.datasets.utils.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "nilearn.datasets.utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "nilearn.datasets.utils.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "nilearn.datasets.utils.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "nilearn.datasets.utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nilearn.datasets.utils.zipfile": {
  "data": {
   "shadows": "zipfile"
  },
  "type": "import"
 },
 "nilearn.decoding": {
  "data": {},
  "type": "module"
 },
 "nilearn.decoding.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "nilearn.decoding.fista": {
  "data": {},
  "type": "module"
 },
 "nilearn.decoding.fista._check_lipschitz_continuous": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "RuntimeError",
    "f",
    "scipy.linalg.norm",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.fista.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "nilearn.decoding.fista.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "nilearn.decoding.fista.mfista": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "abs",
    "callback",
    "dict",
    "f1_grad",
    "f2_prox",
    "locals",
    "math.sqrt",
    "nilearn.decoding.fista._check_lipschitz_continuous",
    "numpy.abs",
    "numpy.inf",
    "numpy.zeros",
    "print",
    "range",
    "total_energy"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.fista.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.decoding.fista.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "nilearn.decoding.objective_functions": {
  "data": {
   "symbols_in_volume": [
    "functools.partial",
    "nilearn.decoding.objective_functions._squared_loss"
   ]
  },
  "type": "module"
 },
 "nilearn.decoding.objective_functions._div": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "nilearn.decoding.objective_functions._div_id",
    "numpy.vstack",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.objective_functions._div_id": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "numpy.rollaxis",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.objective_functions._gradient": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "nilearn.decoding.objective_functions._gradient_id"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.objective_functions._gradient_id": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "RuntimeError",
    "list",
    "numpy.diff",
    "numpy.float",
    "numpy.zeros",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.objective_functions._logistic": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.empty_like",
    "numpy.exp",
    "numpy.log1p"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.objective_functions._logistic_loss_grad": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "nilearn.decoding.objective_functions._sigmoid",
    "numpy.dot",
    "numpy.empty",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.objective_functions._logistic_loss_lipschitz_constant": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "nilearn.decoding.objective_functions.spectral_norm_squared",
    "numpy.hstack",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.objective_functions._sigmoid": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "numpy.copy",
    "numpy.exp",
    "numpy.reciprocal"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.objective_functions._squared_loss": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "RuntimeError",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.objective_functions._squared_loss_grad": {
  "data": {
   "lineno": 300
  },
  "type": "constant"
 },
 "nilearn.decoding.objective_functions._tv_l1_from_gradient": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.objective_functions._unmask": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.objective_functions.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "nilearn.decoding.objective_functions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.decoding.objective_functions.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "nilearn.decoding.objective_functions.spectral_norm_squared": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "scipy.linalg.svdvals"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.proximal_operators": {
  "data": {},
  "type": "module"
 },
 "nilearn.decoding.proximal_operators._dual_gap_prox_tvl1": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "_gradient_id",
    "_tv_l1_from_gradient",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.proximal_operators._objective_function_prox_tvl1": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "_tv_l1_from_gradient"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.proximal_operators._projector_on_tvl1_dual": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.abs",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.proximal_operators._prox_l1": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.maximum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.proximal_operators._prox_l1_with_intercept": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "nilearn.decoding.proximal_operators._prox_l1"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.proximal_operators._prox_tvl1": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "_div_id",
    "_gradient_id",
    "dict",
    "float",
    "len",
    "list",
    "math.sqrt",
    "nilearn.decoding.proximal_operators._dual_gap_prox_tvl1",
    "nilearn.decoding.proximal_operators._objective_function_prox_tvl1",
    "nilearn.decoding.proximal_operators._projector_on_tvl1_dual",
    "numpy.abs",
    "numpy.dot",
    "numpy.float",
    "numpy.inf",
    "numpy.max",
    "numpy.zeros",
    "print"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.proximal_operators._prox_tvl1_with_intercept": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "nilearn.decoding.proximal_operators._prox_tvl1",
    "numpy.append"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.proximal_operators.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.decoding.proximal_operators.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "nilearn.decoding.searchlight": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.SVR"
   ]
  },
  "type": "module"
 },
 "nilearn.decoding.searchlight.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "nilearn.decoding.searchlight.ESTIMATOR_CATALOG": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "nilearn.decoding.searchlight.GroupIterator": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nilearn.decoding.searchlight.GroupIterator.__init__": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "sklearn.externals.joblib.cpu_count"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.searchlight.GroupIterator.__iter__": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array_split"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.searchlight.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "nilearn.decoding.searchlight.Parallel": {
  "data": {
   "shadows": "sklearn.externals.joblib.Parallel"
  },
  "type": "import"
 },
 "nilearn.decoding.searchlight.SearchLight": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "nilearn.decoding.searchlight.SearchLight.__init__": {
  "data": {
   "lineno": 250
  },
  "type": "function"
 },
 "nilearn.decoding.searchlight.SearchLight.fit": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "_apply_mask_and_get_affinity",
    "coord_transform",
    "isinstance",
    "nilearn.decoding.searchlight.ESTIMATOR_CATALOG",
    "nilearn.decoding.searchlight.search_light",
    "numpy.asarray",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.searchlight._group_iter_search_light": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "dict",
    "distutils.version.LooseVersion",
    "enumerate",
    "float",
    "len",
    "max",
    "min",
    "nilearn.decoding.searchlight.sklearn",
    "nilearn.decoding.searchlight.sys",
    "nilearn.decoding.searchlight.time",
    "nilearn.decoding.searchlight.warnings",
    "numpy.mean",
    "numpy.zeros",
    "round",
    "sklearn.cross_validation.cross_val_score"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.searchlight.cpu_count": {
  "data": {
   "shadows": "sklearn.externals.joblib.cpu_count"
  },
  "type": "import"
 },
 "nilearn.decoding.searchlight.cross_val_score": {
  "data": {
   "shadows": "sklearn.cross_validation.cross_val_score"
  },
  "type": "import"
 },
 "nilearn.decoding.searchlight.delayed": {
  "data": {
   "shadows": "sklearn.externals.joblib.delayed"
  },
  "type": "import"
 },
 "nilearn.decoding.searchlight.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.decoding.searchlight.search_light": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "GroupIterator",
    "enumerate",
    "numpy.concatenate",
    "sklearn.externals.joblib.Parallel",
    "sklearn.externals.joblib.delayed"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.searchlight.sklearn": {
  "data": {
   "shadows": "sklearn"
  },
  "type": "import"
 },
 "nilearn.decoding.searchlight.svm": {
  "data": {
   "shadows": "sklearn.svm"
  },
  "type": "import"
 },
 "nilearn.decoding.searchlight.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "nilearn.decoding.searchlight.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "nilearn.decoding.searchlight.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nilearn.decoding.space_net": {
  "data": {},
  "type": "module"
 },
 "nilearn.decoding.space_net.BaseSpaceNet": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "sklearn.base.RegressorMixin",
    "sklearn.linear_model.base.LinearModel"
   ]
  },
  "type": "class"
 },
 "nilearn.decoding.space_net.BaseSpaceNet.__init__": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "sklearn.externals.joblib.Memory"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.space_net.BaseSpaceNet._set_coef_and_intercept": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.space_net.BaseSpaceNet.check_params": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "nilearn.decoding.space_net.numbers",
    "nilearn.decoding.space_net.warnings"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.space_net.BaseSpaceNet.decision_function": {
  "data": {
   "lineno": 896,
   "symbols_in_volume": [
    "ValueError",
    "atleast2d_or_csr",
    "sklearn.linear_model.base.LinearModel.decision_function",
    "sklearn.utils.extmath.safe_sparse_dot"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.space_net.BaseSpaceNet.fit": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "NiftiMasker",
    "dict",
    "functools.partial",
    "isinstance",
    "len",
    "list",
    "max",
    "min",
    "nilearn.decoding.space_net._adjust_screening_percentile",
    "nilearn.decoding.space_net.numbers",
    "nilearn.decoding.space_net.path_scores",
    "nilearn.decoding.space_net.time",
    "numpy.arange",
    "numpy.array",
    "numpy.atleast_1d",
    "numpy.bool",
    "numpy.ndarray",
    "numpy.newaxis",
    "numpy.zeros",
    "print",
    "range",
    "sklearn.base.clone",
    "sklearn.cross_validation.check_cv",
    "sklearn.externals.joblib.Memory",
    "sklearn.externals.joblib.Parallel",
    "sklearn.externals.joblib.delayed",
    "solver"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.space_net.BaseSpaceNet.predict": {
  "data": {
   "lineno": 928,
   "symbols_in_volume": [
    "RuntimeError",
    "hasattr",
    "len",
    "numpy.int",
    "sklearn.linear_model.base.LinearModel.predict"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.space_net.LabelBinarizer": {
  "data": {
   "shadows": "sklearn.preprocessing.LabelBinarizer"
  },
  "type": "import"
 },
 "nilearn.decoding.space_net.LinearModel": {
  "data": {
   "shadows": "sklearn.linear_model.base.LinearModel"
  },
  "type": "import"
 },
 "nilearn.decoding.space_net.MNI152_BRAIN_VOLUME": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "nilearn.decoding.space_net.Memory": {
  "data": {
   "shadows": "sklearn.externals.joblib.Memory"
  },
  "type": "import"
 },
 "nilearn.decoding.space_net.Parallel": {
  "data": {
   "shadows": "sklearn.externals.joblib.Parallel"
  },
  "type": "import"
 },
 "nilearn.decoding.space_net.RegressorMixin": {
  "data": {
   "shadows": "sklearn.base.RegressorMixin"
  },
  "type": "import"
 },
 "nilearn.decoding.space_net.SelectPercentile": {
  "data": {
   "shadows": "sklearn.feature_selection.SelectPercentile"
  },
  "type": "import"
 },
 "nilearn.decoding.space_net.SpaceNetClassifier": {
  "data": {
   "lineno": 962,
   "symbols_in_volume": [
    "nilearn.decoding.space_net.BaseSpaceNet"
   ]
  },
  "type": "class"
 },
 "nilearn.decoding.space_net.SpaceNetClassifier.__init__": {
  "data": {
   "lineno": 1102,
   "symbols_in_volume": [
    "nilearn.decoding.space_net.SpaceNetClassifier",
    "sklearn.externals.joblib.Memory",
    "super"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.space_net.SpaceNetClassifier._binarize_y": {
  "data": {
   "lineno": 1121,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "sklearn.preprocessing.LabelBinarizer"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.space_net.SpaceNetClassifier.score": {
  "data": {
   "lineno": 1132,
   "symbols_in_volume": [
    "sklearn.metrics.accuracy_score"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.space_net.SpaceNetRegressor": {
  "data": {
   "lineno": 1153,
   "symbols_in_volume": [
    "nilearn.decoding.space_net.BaseSpaceNet"
   ]
  },
  "type": "class"
 },
 "nilearn.decoding.space_net.SpaceNetRegressor.__init__": {
  "data": {
   "lineno": 1284,
   "symbols_in_volume": [
    "nilearn.decoding.space_net.SpaceNetRegressor",
    "sklearn.externals.joblib.Memory",
    "super"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.space_net._EarlyStoppingCallback": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nilearn.decoding.space_net._EarlyStoppingCallback.__call__": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "len",
    "nilearn.decoding.space_net.sys",
    "numpy.diff",
    "numpy.mean",
    "print"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.space_net._EarlyStoppingCallback.__init__": {
  "data": {
   "lineno": 255
  },
  "type": "function"
 },
 "nilearn.decoding.space_net._EarlyStoppingCallback._debias": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.space_net._EarlyStoppingCallback.test_score": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "numpy.corrcoef",
    "numpy.dot",
    "numpy.inf",
    "scipy.stats.spearmanr"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.space_net._adjust_screening_percentile": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "min",
    "nilearn.decoding.space_net.MNI152_BRAIN_VOLUME",
    "nilearn.decoding.space_net._get_mask_volume",
    "nilearn.decoding.space_net.warnings",
    "print"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.space_net._crop_mask": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "ValueError",
    "max",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.space_net._get_mask_volume": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "numpy.bool",
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.space_net._space_net_alpha_grid": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "float",
    "numpy.abs",
    "numpy.array",
    "numpy.dot",
    "numpy.log10",
    "numpy.logspace",
    "numpy.max",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.space_net._univariate_feature_screening": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "_unmask",
    "numpy.bool",
    "numpy.empty",
    "numpy.logical_not",
    "range",
    "scipy.ndimage.binary_dilation",
    "scipy.ndimage.binary_erosion",
    "scipy.ndimage.gaussian_filter",
    "sklearn.feature_selection.SelectPercentile",
    "sklearn.feature_selection.f_classif",
    "sklearn.feature_selection.f_regression"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.space_net.accuracy_score": {
  "data": {
   "shadows": "sklearn.metrics.accuracy_score"
  },
  "type": "import"
 },
 "nilearn.decoding.space_net.center_data": {
  "data": {
   "shadows": "sklearn.linear_model.base.center_data"
  },
  "type": "import"
 },
 "nilearn.decoding.space_net.check_cv": {
  "data": {
   "shadows": "sklearn.cross_validation.check_cv"
  },
  "type": "import"
 },
 "nilearn.decoding.space_net.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "nilearn.decoding.space_net.delayed": {
  "data": {
   "shadows": "sklearn.externals.joblib.delayed"
  },
  "type": "import"
 },
 "nilearn.decoding.space_net.f_classif": {
  "data": {
   "shadows": "sklearn.feature_selection.f_classif"
  },
  "type": "import"
 },
 "nilearn.decoding.space_net.f_regression": {
  "data": {
   "shadows": "sklearn.feature_selection.f_regression"
  },
  "type": "import"
 },
 "nilearn.decoding.space_net.ndimage": {
  "data": {
   "shadows": "scipy.ndimage"
  },
  "type": "import"
 },
 "nilearn.decoding.space_net.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.decoding.space_net.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "nilearn.decoding.space_net.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "nilearn.decoding.space_net.path_scores": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "len",
    "max",
    "nilearn.decoding.space_net._EarlyStoppingCallback",
    "nilearn.decoding.space_net._crop_mask",
    "nilearn.decoding.space_net._space_net_alpha_grid",
    "nilearn.decoding.space_net._univariate_feature_screening",
    "nilearn.decoding.space_net.numbers",
    "numpy.append",
    "numpy.array",
    "numpy.inf",
    "numpy.isfinite",
    "numpy.nan",
    "numpy.zeros",
    "sklearn.linear_model.base.center_data",
    "solver",
    "sorted"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.space_net.safe_sparse_dot": {
  "data": {
   "shadows": "sklearn.utils.extmath.safe_sparse_dot"
  },
  "type": "import"
 },
 "nilearn.decoding.space_net.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "nilearn.decoding.space_net.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "nilearn.decoding.space_net.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "nilearn.decoding.space_net.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nilearn.decoding.space_net_solvers": {
  "data": {},
  "type": "module"
 },
 "nilearn.decoding.space_net_solvers._graph_net_adjoint_data_function": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "_div",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.space_net_solvers._graph_net_data_function": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "_gradient",
    "numpy.concatenate",
    "numpy.ndarray",
    "numpy.zeros",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.space_net_solvers._graph_net_logistic": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "mfista",
    "nilearn.decoding.space_net_solvers._logistic_derivative_lipschitz_constant"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.space_net_solvers._graph_net_logistic.f1": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "nilearn.decoding.space_net_solvers._logistic_data_loss_and_spatial_grad"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.space_net_solvers._graph_net_logistic.f1_grad": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "nilearn.decoding.space_net_solvers._logistic_data_loss_and_spatial_grad_derivative"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.space_net_solvers._graph_net_logistic.f2": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.space_net_solvers._graph_net_logistic.f2_prox": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "_prox_l1_with_intercept",
    "dict"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.space_net_solvers._graph_net_logistic.total_energy": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "f1",
    "f2"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.space_net_solvers._graph_net_squared_loss": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "mfista",
    "nilearn.decoding.space_net_solvers._squared_loss_derivative_lipschitz_constant"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.space_net_solvers._graph_net_squared_loss.f1": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "nilearn.decoding.space_net_solvers._squared_loss_and_spatial_grad"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.space_net_solvers._graph_net_squared_loss.f1_grad": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "nilearn.decoding.space_net_solvers._squared_loss_and_spatial_grad_derivative"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.space_net_solvers._graph_net_squared_loss.f2": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.space_net_solvers._graph_net_squared_loss.f2_prox": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "_prox_l1",
    "dict"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.space_net_solvers._graph_net_squared_loss.total_energy": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "f1",
    "f2"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.space_net_solvers._logistic_data_loss_and_spatial_grad": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "_gradient",
    "numpy.array",
    "numpy.dot",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.space_net_solvers._logistic_data_loss_and_spatial_grad_derivative": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "_div",
    "_gradient",
    "_logistic_loss_grad",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.space_net_solvers._logistic_derivative_lipschitz_constant": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "_div",
    "_gradient",
    "_logistic_loss_lipschitz_constant",
    "math.sqrt",
    "numpy.dot",
    "numpy.random.RandomState",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.space_net_solvers._logistic_loss": {
  "data": {
   "shadows": "_logistic"
  },
  "type": "import"
 },
 "nilearn.decoding.space_net_solvers._squared_loss_and_spatial_grad": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "_gradient",
    "numpy.dot",
    "numpy.tile",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.space_net_solvers._squared_loss_and_spatial_grad_derivative": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "_div",
    "_gradient",
    "numpy.dot",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.space_net_solvers._squared_loss_derivative_lipschitz_constant": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "math.sqrt",
    "nilearn.decoding.space_net_solvers._graph_net_adjoint_data_function",
    "nilearn.decoding.space_net_solvers._graph_net_data_function",
    "numpy.dot",
    "numpy.random.RandomState",
    "numpy.tile",
    "range"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.space_net_solvers._tvl1_objective": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "ValueError",
    "_gradient_id",
    "_squared_loss",
    "_unmask",
    "nilearn.decoding.space_net_solvers._tvl1_objective_from_gradient"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.space_net_solvers._tvl1_objective_from_gradient": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.space_net_solvers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.decoding.space_net_solvers.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "nilearn.decoding.space_net_solvers.tvl1_solver": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "ValueError",
    "_logistic_loss_lipschitz_constant",
    "int",
    "mfista",
    "spectral_norm_squared"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.space_net_solvers.tvl1_solver.f1_grad": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "_logistic_loss_grad",
    "_squared_loss_grad"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.space_net_solvers.tvl1_solver.f2_prox": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "_prox_tvl1_with_intercept",
    "_unmask",
    "maskvec",
    "unmaskvec"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.space_net_solvers.tvl1_solver.maskvec": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "numpy.append"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.space_net_solvers.tvl1_solver.total_energy": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "nilearn.decoding.space_net_solvers._tvl1_objective"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.space_net_solvers.tvl1_solver.unmaskvec": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "_unmask",
    "numpy.append"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests": {
  "data": {},
  "type": "module"
 },
 "nilearn.decoding.tests.simulate_graph_net_data": {
  "data": {},
  "type": "module"
 },
 "nilearn.decoding.tests.simulate_graph_net_data.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.simulate_graph_net_data.create_graph_net_simulation_data": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.bool",
    "numpy.dot",
    "numpy.exp",
    "numpy.log",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.zeros",
    "range",
    "scipy.linalg.norm",
    "scipy.ndimage.filters.gaussian_filter",
    "scipy.ndimage.gaussian_filter",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.simulate_graph_net_data.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.simulate_graph_net_data.ndimage": {
  "data": {
   "shadows": "scipy.ndimage"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.simulate_graph_net_data.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_fista": {
  "data": {},
  "type": "module"
 },
 "nilearn.decoding.tests.test_fista._check_lipschitz_continuous": {
  "data": {
   "shadows": "nilearn.decoding.fista._check_lipschitz_continuous"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_fista._logistic": {
  "data": {
   "shadows": "nilearn.decoding.objective_functions._logistic"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_fista._logistic_loss_lipschitz_constant": {
  "data": {
   "shadows": "nilearn.decoding.objective_functions._logistic_loss_lipschitz_constant"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_fista._prox_l1": {
  "data": {
   "shadows": "nilearn.decoding.proximal_operators._prox_l1"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_fista._squared_loss": {
  "data": {
   "shadows": "nilearn.decoding.objective_functions._squared_loss"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_fista._squared_loss_grad": {
  "data": {
   "shadows": "nilearn.decoding.objective_functions._squared_loss_grad"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_fista.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_fista.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_fista.mfista": {
  "data": {
   "shadows": "nilearn.decoding.fista.mfista"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_fista.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_fista.spectral_norm_squared": {
  "data": {
   "shadows": "nilearn.decoding.objective_functions.spectral_norm_squared"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_fista.test_input_args_and_kwargs": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "dict",
    "f1",
    "isinstance",
    "list",
    "nilearn.decoding.fista.mfista",
    "nilearn.decoding.objective_functions._squared_loss",
    "nilearn.decoding.proximal_operators._prox_l1",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.bool",
    "numpy.eye",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_fista.test_logistic_lipschitz": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "nilearn.decoding.fista._check_lipschitz_continuous",
    "nilearn.decoding.objective_functions._logistic",
    "nilearn.decoding.objective_functions._logistic_loss_lipschitz_constant",
    "numpy.logspace",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_fista.test_squared_loss_lipschitz": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "nilearn.decoding.fista._check_lipschitz_continuous",
    "nilearn.decoding.objective_functions._squared_loss_grad",
    "nilearn.decoding.objective_functions.spectral_norm_squared",
    "numpy.logspace",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_graph_net": {
  "data": {
   "symbols_in_volume": [
    "nilearn.decoding.tests.test_graph_net._make_data"
   ]
  },
  "type": "module"
 },
 "nilearn.decoding.tests.test_graph_net.BaseSpaceNet": {
  "data": {
   "shadows": "nilearn.decoding.space_net.BaseSpaceNet"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_graph_net._div": {
  "data": {
   "shadows": "nilearn.decoding.objective_functions._div"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_graph_net._gradient": {
  "data": {
   "shadows": "nilearn.decoding.objective_functions._gradient"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_graph_net._graph_net_adjoint_data_function": {
  "data": {
   "shadows": "nilearn.decoding.space_net_solvers._graph_net_adjoint_data_function"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_graph_net._graph_net_data_function": {
  "data": {
   "shadows": "nilearn.decoding.space_net_solvers._graph_net_data_function"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_graph_net._logistic_data_loss_and_spatial_grad": {
  "data": {
   "shadows": "nilearn.decoding.space_net_solvers._logistic_data_loss_and_spatial_grad"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_graph_net._logistic_data_loss_and_spatial_grad_derivative": {
  "data": {
   "shadows": "nilearn.decoding.space_net_solvers._logistic_data_loss_and_spatial_grad_derivative"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_graph_net._logistic_derivative_lipschitz_constant": {
  "data": {
   "shadows": "nilearn.decoding.space_net_solvers._logistic_derivative_lipschitz_constant"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_graph_net._make_data": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "create_graph_net_simulation_data",
    "nilearn.decoding.tests.test_graph_net.nibabel",
    "numpy.float",
    "to_niimgs"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_graph_net._squared_loss_and_spatial_grad": {
  "data": {
   "shadows": "nilearn.decoding.space_net_solvers._squared_loss_and_spatial_grad"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_graph_net._squared_loss_and_spatial_grad_derivative": {
  "data": {
   "shadows": "nilearn.decoding.space_net_solvers._squared_loss_and_spatial_grad_derivative"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_graph_net._squared_loss_derivative_lipschitz_constant": {
  "data": {
   "shadows": "nilearn.decoding.space_net_solvers._squared_loss_derivative_lipschitz_constant"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_graph_net.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_graph_net.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_graph_net.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_graph_net.extmath": {
  "data": {
   "shadows": "sklearn.utils.extmath"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_graph_net.get_gradient_matrix": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "nilearn.decoding.objective_functions._gradient",
    "numpy.array",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_graph_net.mfista": {
  "data": {
   "shadows": "nilearn.decoding.space_net_solvers.mfista"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_graph_net.nibabel": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_graph_net.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_graph_net.sp": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_graph_net.test__squared_loss_derivative_lipschitz_constant": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "nilearn.decoding.space_net_solvers._squared_loss_and_spatial_grad_derivative",
    "nilearn.decoding.space_net_solvers._squared_loss_derivative_lipschitz_constant",
    "nose.tools.assert_true",
    "range",
    "sklearn.utils.check_random_state",
    "sklearn.utils.extmath.norm"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_graph_net.test__squared_loss_gradient_at_simple_points": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "create_graph_net_simulation_data",
    "nilearn.decoding.space_net_solvers._squared_loss_and_spatial_grad",
    "nilearn.decoding.space_net_solvers._squared_loss_and_spatial_grad_derivative",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros",
    "range",
    "scipy.optimize.check_grad"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_graph_net.test_adjointness": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "nilearn.decoding.objective_functions._div",
    "nilearn.decoding.objective_functions._gradient",
    "numpy.dot",
    "numpy.testing.assert_almost_equal",
    "range",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_graph_net.test_grad_matrix": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "nilearn.decoding.objective_functions._gradient",
    "nilearn.decoding.tests.test_graph_net.get_gradient_matrix",
    "numpy.array",
    "numpy.dot",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros",
    "range",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_graph_net.test_identity_adjointness": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "nilearn.decoding.space_net_solvers._graph_net_adjoint_data_function",
    "nilearn.decoding.space_net_solvers._graph_net_data_function",
    "numpy.array",
    "numpy.bool",
    "numpy.dot",
    "numpy.eye",
    "numpy.ones",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "range",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_graph_net.test_logistic_derivative_lipschitz_constant": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "nilearn.decoding.space_net_solvers._logistic_data_loss_and_spatial_grad_derivative",
    "nilearn.decoding.space_net_solvers._logistic_derivative_lipschitz_constant",
    "nose.tools.assert_true",
    "range",
    "sklearn.utils.check_random_state",
    "sklearn.utils.extmath.norm"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_graph_net.test_logistic_gradient_at_simple_points": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "create_graph_net_simulation_data",
    "nilearn.decoding.space_net_solvers._logistic_data_loss_and_spatial_grad",
    "nilearn.decoding.space_net_solvers._logistic_data_loss_and_spatial_grad_derivative",
    "numpy.append",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros",
    "range",
    "scipy.optimize.check_grad"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_graph_net.test_max_alpha__squared_loss": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "nilearn.decoding.space_net.BaseSpaceNet",
    "numpy.dot",
    "numpy.linspace",
    "numpy.max",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_graph_net.test_mfista_solver_graph_net_no_l1_term": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "dict",
    "nilearn.decoding.space_net_solvers._squared_loss_derivative_lipschitz_constant",
    "nilearn.decoding.space_net_solvers.mfista",
    "numpy.array",
    "numpy.bool",
    "numpy.dot",
    "numpy.eye",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_graph_net.test_operators_adjointness": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "nilearn.decoding.space_net_solvers._graph_net_adjoint_data_function",
    "nilearn.decoding.space_net_solvers._graph_net_data_function",
    "numpy.array",
    "numpy.bool",
    "numpy.dot",
    "numpy.ones",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "range",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_graph_net.test_tikhonov_regularization_vs_graph_net": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "nilearn.decoding.space_net.BaseSpaceNet",
    "nilearn.decoding.tests.test_graph_net.get_gradient_matrix",
    "numpy.dot",
    "numpy.testing.assert_almost_equal",
    "scipy.linalg.pinv",
    "sklearn.utils.extmath.norm"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_objective_functions": {
  "data": {},
  "type": "module"
 },
 "nilearn.decoding.tests.test_objective_functions.BaseSpaceNet": {
  "data": {
   "shadows": "nilearn.decoding.space_net.BaseSpaceNet"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_objective_functions._div_id": {
  "data": {
   "shadows": "nilearn.decoding.objective_functions._div_id"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_objective_functions._gradient_id": {
  "data": {
   "shadows": "nilearn.decoding.objective_functions._gradient_id"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_objective_functions._logistic": {
  "data": {
   "shadows": "nilearn.decoding.objective_functions._logistic"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_objective_functions._logistic_loss_grad": {
  "data": {
   "shadows": "nilearn.decoding.objective_functions._logistic_loss_grad"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_objective_functions._unmask": {
  "data": {
   "shadows": "nilearn.decoding.objective_functions._unmask"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_objective_functions.check_grad": {
  "data": {
   "shadows": "scipy.optimize.check_grad"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_objective_functions.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_objective_functions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_objective_functions.raises": {
  "data": {
   "shadows": "nose.tools.raises"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_objective_functions.test_1D__gradient_id": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "list",
    "nilearn.decoding.objective_functions._gradient_id",
    "numpy.arange",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_objective_functions.test_2D__gradient_id": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "list",
    "nilearn.decoding.objective_functions._gradient_id",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_objective_functions.test_3D__gradient_id": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "list",
    "nilearn.decoding.objective_functions._gradient_id",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_objective_functions.test_baseestimator_invalid_l1_ratio": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "ValueError",
    "nilearn.decoding.space_net.BaseSpaceNet",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_objective_functions.test_grad_div_adjoint_arbitrary_ndim": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "list",
    "nilearn.decoding.objective_functions._div_id",
    "nilearn.decoding.objective_functions._gradient_id",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "range",
    "sklearn.utils.check_random_state",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_objective_functions.test_grad_div_adjoint_arbitrary_ndim_": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "nilearn.decoding.tests.test_objective_functions.test_grad_div_adjoint_arbitrary_ndim"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_objective_functions.test_logistic_loss_derivative": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "nilearn.decoding.objective_functions._logistic",
    "nilearn.decoding.objective_functions._logistic_loss_grad",
    "numpy.random.RandomState",
    "numpy.testing.assert_almost_equal",
    "scipy.optimize.check_grad"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_objective_functions.test_unmask": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "nilearn.decoding.objective_functions._unmask",
    "numpy.bool",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "range",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_operators": {
  "data": {},
  "type": "module"
 },
 "nilearn.decoding.tests.test_operators._prox_l1": {
  "data": {
   "shadows": "nilearn.decoding.proximal_operators._prox_l1"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_operators._prox_tvl1": {
  "data": {
   "shadows": "nilearn.decoding.proximal_operators._prox_tvl1"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_operators.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_operators.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_operators.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_operators.test_prox_l1_nonexpansiveness": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "nilearn.decoding.proximal_operators._prox_l1",
    "nilearn.decoding.tests.test_operators.itertools",
    "nose.tools.assert_true",
    "numpy.random.RandomState",
    "zip"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_operators.test_prox_tvl1_approximates_prox_l1_for_lasso": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "nilearn.decoding.proximal_operators._prox_l1",
    "nilearn.decoding.proximal_operators._prox_tvl1",
    "numpy.abs",
    "numpy.logspace",
    "numpy.random.RandomState",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_same_api": {
  "data": {},
  "type": "module"
 },
 "nilearn.decoding.tests.test_same_api.BaseSpaceNet": {
  "data": {
   "shadows": "nilearn.decoding.space_net.BaseSpaceNet"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_same_api.SpaceNetClassifier": {
  "data": {
   "shadows": "nilearn.decoding.space_net.SpaceNetClassifier"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_same_api.SpaceNetRegressor": {
  "data": {
   "shadows": "nilearn.decoding.space_net.SpaceNetRegressor"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_same_api._graph_net_logistic": {
  "data": {
   "shadows": "nilearn.decoding.space_net_solvers._graph_net_logistic"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_same_api._graph_net_squared_loss": {
  "data": {
   "shadows": "nilearn.decoding.space_net_solvers._graph_net_squared_loss"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_same_api._logistic_derivative_lipschitz_constant": {
  "data": {
   "shadows": "nilearn.decoding.space_net_solvers._logistic_derivative_lipschitz_constant"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_same_api._logistic_loss_lipschitz_constant": {
  "data": {
   "shadows": "nilearn.decoding.objective_functions._logistic_loss_lipschitz_constant"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_same_api._make_data": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "list",
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.bool",
    "numpy.dot",
    "numpy.ones",
    "numpy.rollaxis",
    "numpy.zeros",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_same_api._squared_loss": {
  "data": {
   "shadows": "nilearn.decoding.objective_functions._squared_loss"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_same_api._squared_loss_and_spatial_grad": {
  "data": {
   "shadows": "nilearn.decoding.space_net_solvers._squared_loss_and_spatial_grad"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_same_api._squared_loss_and_spatial_grad_derivative": {
  "data": {
   "shadows": "nilearn.decoding.space_net_solvers._squared_loss_and_spatial_grad_derivative"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_same_api._squared_loss_derivative_lipschitz_constant": {
  "data": {
   "shadows": "nilearn.decoding.space_net_solvers._squared_loss_derivative_lipschitz_constant"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_same_api._squared_loss_grad": {
  "data": {
   "shadows": "nilearn.decoding.objective_functions._squared_loss_grad"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_same_api._unmask": {
  "data": {
   "shadows": "nilearn.decoding.objective_functions._unmask"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_same_api.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_same_api.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_same_api.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_same_api.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_same_api.nibabel": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_same_api.nottest": {
  "data": {
   "shadows": "nose.tools.nottest"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_same_api.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_same_api.spectral_norm_squared": {
  "data": {
   "shadows": "nilearn.decoding.objective_functions.spectral_norm_squared"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_same_api.test_coef_shape": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "cls",
    "nilearn.decoding.space_net.SpaceNetClassifier",
    "nilearn.decoding.space_net.SpaceNetRegressor",
    "nilearn.decoding.tests.test_same_api.to_niimgs",
    "nose.tools.assert_equal",
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_same_api.test_graph_net_and_tv_same_for_pure_l1_another_test": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "nilearn.decoding.space_net.BaseSpaceNet",
    "nilearn.decoding.tests.test_same_api._make_data",
    "nilearn.decoding.tests.test_same_api.to_niimgs",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_same_api.test_graph_net_and_tvl1_same_for_pure_l1": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "nilearn.decoding.space_net.BaseSpaceNet",
    "nilearn.decoding.space_net_solvers._graph_net_squared_loss",
    "nilearn.decoding.space_net_solvers.tvl1_solver",
    "nilearn.decoding.tests.test_same_api._make_data",
    "nilearn.decoding.tests.test_same_api.nibabel",
    "numpy.array",
    "numpy.eye",
    "numpy.float",
    "numpy.rollaxis",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_same_api.test_graph_net_and_tvl1_same_for_pure_l1_logistic": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "nilearn.decoding.space_net.SpaceNetClassifier",
    "nilearn.decoding.space_net_solvers._graph_net_logistic",
    "nilearn.decoding.space_net_solvers.tvl1_solver",
    "nilearn.decoding.tests.test_same_api.to_niimgs",
    "numpy.bool",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_same_api.test_lipschitz_constant_loss_logreg": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "nilearn.decoding.objective_functions._logistic_loss_lipschitz_constant",
    "nilearn.decoding.space_net_solvers._logistic_derivative_lipschitz_constant",
    "nilearn.decoding.tests.test_same_api._make_data",
    "nose.tools.assert_equal",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_same_api.test_lipschitz_constant_loss_mse": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "nilearn.decoding.objective_functions.spectral_norm_squared",
    "nilearn.decoding.space_net_solvers._squared_loss_derivative_lipschitz_constant",
    "nilearn.decoding.tests.test_same_api._make_data",
    "numpy.bool",
    "numpy.ones",
    "numpy.testing.assert_almost_equal",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_same_api.test_same_energy_calculus_pure_lasso": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "nilearn.decoding.objective_functions._squared_loss",
    "nilearn.decoding.objective_functions._squared_loss_grad",
    "nilearn.decoding.space_net_solvers._squared_loss_and_spatial_grad",
    "nilearn.decoding.space_net_solvers._squared_loss_and_spatial_grad_derivative",
    "nilearn.decoding.tests.test_same_api._make_data",
    "nose.tools.assert_equal",
    "numpy.testing.assert_array_equal",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_same_api.test_w_shapes": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "nose.tools.nottest"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_same_api.to_niimgs": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "len",
    "nilearn.decoding.objective_functions._unmask",
    "nilearn.decoding.tests.test_same_api.nibabel",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.bool",
    "numpy.eye",
    "numpy.float",
    "numpy.prod",
    "numpy.rollaxis",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_same_api.tvl1_solver": {
  "data": {
   "shadows": "nilearn.decoding.space_net_solvers.tvl1_solver"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_searchlight": {
  "data": {},
  "type": "module"
 },
 "nilearn.decoding.tests.test_searchlight.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_searchlight.check_cv": {
  "data": {
   "shadows": "sklearn.cross_validation.check_cv"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_searchlight.nibabel": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_searchlight.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_searchlight.searchlight": {
  "data": {
   "shadows": "nilearn.decoding.searchlight"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_searchlight.test_searchlight": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "int",
    "nilearn.decoding.searchlight.SearchLight",
    "nilearn.decoding.tests.test_searchlight.nibabel",
    "nose.tools.assert_equal",
    "numpy.arange",
    "numpy.bool",
    "numpy.eye",
    "numpy.int",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.where",
    "sklearn.cross_validation.check_cv"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_sklearn_compatibility": {
  "data": {},
  "type": "module"
 },
 "nilearn.decoding.tests.test_sklearn_compatibility.BaseSpaceNet": {
  "data": {
   "shadows": "nilearn.decoding.space_net.BaseSpaceNet"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_sklearn_compatibility.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_sklearn_compatibility.test_get_params": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "AttributeError",
    "nilearn.decoding.space_net.BaseSpaceNet",
    "nilearn.decoding.tests.test_sklearn_compatibility.traceback",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_sklearn_compatibility.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_space_net": {
  "data": {
   "symbols_in_volume": [
    "create_graph_net_simulation_data",
    "functools.partial",
    "nilearn.decoding.space_net.path_scores",
    "nilearn.decoding.tests.test_space_net.size",
    "to_niimgs"
   ]
  },
  "type": "module"
 },
 "nilearn.decoding.tests.test_space_net.BaseSpaceNet": {
  "data": {
   "shadows": "nilearn.decoding.space_net.BaseSpaceNet"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_space_net.Lasso": {
  "data": {
   "shadows": "sklearn.linear_model.Lasso"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_space_net.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_space_net.MNI152_BRAIN_VOLUME": {
  "data": {
   "shadows": "nilearn.decoding.space_net.MNI152_BRAIN_VOLUME"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_space_net.SkipTest": {
  "data": {
   "shadows": "nose.SkipTest"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_space_net.SpaceNetClassifier": {
  "data": {
   "shadows": "nilearn.decoding.space_net.SpaceNetClassifier"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_space_net.SpaceNetRegressor": {
  "data": {
   "shadows": "nilearn.decoding.space_net.SpaceNetRegressor"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_space_net._EarlyStoppingCallback": {
  "data": {
   "shadows": "nilearn.decoding.space_net._EarlyStoppingCallback"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_space_net._adjust_screening_percentile": {
  "data": {
   "shadows": "nilearn.decoding.space_net._adjust_screening_percentile"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_space_net._alpha_grid": {
  "data": {
   "shadows": "sklearn.linear_model.coordinate_descent._alpha_grid"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_space_net._crop_mask": {
  "data": {
   "shadows": "nilearn.decoding.space_net._crop_mask"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_space_net._get_mask_volume": {
  "data": {
   "shadows": "nilearn.decoding.space_net._get_mask_volume"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_space_net._graph_net_logistic": {
  "data": {
   "shadows": "nilearn.decoding.space_net_solvers._graph_net_logistic"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_space_net._graph_net_squared_loss": {
  "data": {
   "shadows": "nilearn.decoding.space_net_solvers._graph_net_squared_loss"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_space_net._space_net_alpha_grid": {
  "data": {
   "shadows": "nilearn.decoding.space_net._space_net_alpha_grid"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_space_net._univariate_feature_screening": {
  "data": {
   "shadows": "nilearn.decoding.space_net._univariate_feature_screening"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_space_net.accuracy_score": {
  "data": {
   "shadows": "sklearn.metrics.accuracy_score"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_space_net.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_space_net.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_space_net.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_space_net.assert_raises_regex": {
  "data": {
   "shadows": "nilearn._utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_space_net.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_space_net.assert_warns": {
  "data": {
   "shadows": "nilearn._utils.testing.assert_warns"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_space_net.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_space_net.extmath": {
  "data": {
   "shadows": "sklearn.utils.extmath"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_space_net.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_space_net.load_iris": {
  "data": {
   "shadows": "sklearn.datasets.load_iris"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_space_net.logistic_path_scores": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "nilearn.decoding.tests.test_space_net.mni152_brain_mask": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "nilearn.decoding.tests.test_space_net.nibabel": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_space_net.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_space_net.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_space_net.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_space_net.path_scores": {
  "data": {
   "shadows": "nilearn.decoding.space_net.path_scores"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_space_net.size": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "nilearn.decoding.tests.test_space_net.squared_loss_path_scores": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "nilearn.decoding.tests.test_space_net.test_crop_mask": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "nilearn.decoding.space_net._crop_mask",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.bool",
    "numpy.prod",
    "numpy.random.RandomState",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_space_net.test_crop_mask_empty_mask": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "ValueError",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn.decoding.space_net._crop_mask",
    "numpy.array",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_space_net.test_early_stopping_callback_object": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "dict",
    "escb",
    "escb.test_scores",
    "len",
    "min",
    "nilearn.decoding.space_net._EarlyStoppingCallback",
    "nose.tools.assert_equal",
    "numpy.dot",
    "numpy.ones",
    "numpy.zeros",
    "range",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_space_net.test_get_mask_volume": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "nilearn.decoding.space_net.MNI152_BRAIN_VOLUME",
    "nilearn.decoding.space_net._get_mask_volume",
    "nilearn.decoding.tests.test_space_net.mni152_brain_mask",
    "nilearn.decoding.tests.test_space_net.nibabel",
    "nilearn.decoding.tests.test_space_net.os",
    "nilearn.decoding.tests.test_space_net.warnings",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_space_net.test_graph_net_classifier_score": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "nilearn.decoding.space_net.SpaceNetClassifier",
    "nose.tools.assert_equal",
    "sklearn.datasets.load_iris",
    "sklearn.metrics.accuracy_score",
    "to_niimgs"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_space_net.test_lasso_vs_graph_net": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "nilearn.decoding.space_net.BaseSpaceNet",
    "numpy.abs",
    "numpy.dot",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "sklearn.linear_model.Lasso",
    "sklearn.utils.extmath.norm"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_space_net.test_log_reg_vs_graph_net_two_classes_iris": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "nilearn.decoding.space_net.SpaceNetClassifier",
    "numpy.abs",
    "numpy.testing.assert_array_equal",
    "sklearn.datasets.load_iris",
    "sklearn.linear_model.LogisticRegression",
    "to_niimgs"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_space_net.test_logistic_path_scores": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "len",
    "nilearn.decoding.space_net_solvers._graph_net_logistic",
    "nilearn.decoding.tests.test_space_net.logistic_path_scores",
    "nose.tools.assert_equal",
    "numpy.arange",
    "numpy.bool",
    "sklearn.datasets.load_iris",
    "to_niimgs"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_space_net.test_params_correctly_propagated_in_constructors": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "nilearn.decoding.space_net.BaseSpaceNet",
    "nilearn.decoding.tests.test_space_net.itertools",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_space_net.test_params_correctly_propagated_in_constructors_biz": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "nilearn.decoding.space_net.BaseSpaceNet",
    "nilearn.decoding.tests.test_space_net.itertools",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_space_net.test_screening_space_net": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "UserWarning",
    "nilearn._utils.testing.assert_warns",
    "nilearn.decoding.space_net._adjust_screening_percentile",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_space_net.test_space_net_alpha_grid": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "len",
    "nilearn.decoding.space_net._space_net_alpha_grid",
    "nilearn.decoding.tests.test_space_net.itertools",
    "numpy.abs",
    "numpy.arange",
    "numpy.dot",
    "numpy.max",
    "numpy.testing.assert_almost_equal",
    "range",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_space_net.test_space_net_alpha_grid_pure_spatial": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "nilearn.decoding.space_net._space_net_alpha_grid",
    "nose.tools.assert_false",
    "numpy.any",
    "numpy.arange",
    "numpy.isnan",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_space_net.test_space_net_alpha_grid_same_as_sk": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ImportError",
    "nilearn.decoding.space_net._space_net_alpha_grid",
    "nose.SkipTest",
    "numpy.testing.assert_almost_equal",
    "sklearn.datasets.load_iris",
    "sklearn.linear_model.coordinate_descent._alpha_grid"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_space_net.test_space_net_classifier_subclass": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "nilearn.decoding.space_net.SpaceNetClassifier",
    "nilearn.decoding.tests.test_space_net.itertools",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_space_net.test_space_net_no_crash_not_fitted": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "RuntimeError",
    "model",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn.decoding.space_net.SpaceNetClassifier",
    "nilearn.decoding.space_net.SpaceNetRegressor",
    "sklearn.datasets.load_iris",
    "to_niimgs"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_space_net.test_space_net_one_alpha_no_crash": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "model",
    "nilearn.decoding.space_net.SpaceNetClassifier",
    "nilearn.decoding.space_net.SpaceNetRegressor",
    "sklearn.datasets.load_iris",
    "to_niimgs"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_space_net.test_space_net_regressor_subclass": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "nilearn.decoding.space_net.SpaceNetRegressor",
    "nilearn.decoding.tests.test_space_net.itertools",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_space_net.test_squared_loss_path_scores": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "len",
    "nilearn.decoding.space_net_solvers._graph_net_squared_loss",
    "nilearn.decoding.tests.test_space_net.squared_loss_path_scores",
    "nose.tools.assert_equal",
    "numpy.arange",
    "numpy.bool",
    "sklearn.datasets.load_iris",
    "to_niimgs"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_space_net.test_string_params_case": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "ValueError",
    "nilearn.decoding.space_net.BaseSpaceNet",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_space_net.test_tv_regression_3D_image_doesnt_crash": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "nilearn.decoding.space_net.BaseSpaceNet",
    "numpy.dot",
    "numpy.ones",
    "numpy.zeros",
    "sklearn.utils.check_random_state",
    "to_niimgs"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_space_net.test_tv_regression_simple": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "nilearn.decoding.space_net.BaseSpaceNet",
    "numpy.dot",
    "numpy.ones",
    "numpy.prod",
    "numpy.zeros",
    "print",
    "sklearn.utils.check_random_state",
    "to_niimgs"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_space_net.test_univariate_feature_screening": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "nilearn.decoding.space_net._univariate_feature_screening",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.prod",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_space_net.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_tv": {
  "data": {},
  "type": "module"
 },
 "nilearn.decoding.tests.test_tv._gradient_id": {
  "data": {
   "shadows": "nilearn.decoding.objective_functions._gradient_id"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_tv._squared_loss": {
  "data": {
   "shadows": "nilearn.decoding.objective_functions._squared_loss"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_tv._tvl1_objective": {
  "data": {
   "shadows": "nilearn.decoding.space_net_solvers._tvl1_objective"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_tv._tvl1_objective_from_gradient": {
  "data": {
   "shadows": "nilearn.decoding.space_net_solvers._tvl1_objective_from_gradient"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_tv.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_tv.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_tv.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.decoding.tests.test_tv.test_tvl1_from_gradient": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "nilearn.decoding.objective_functions._gradient_id",
    "nilearn.decoding.objective_functions._squared_loss",
    "nilearn.decoding.space_net_solvers._tvl1_objective",
    "nilearn.decoding.space_net_solvers._tvl1_objective_from_gradient",
    "nose.tools.assert_equal",
    "numpy.bool",
    "numpy.ones_like",
    "numpy.prod",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_tv.test_tvl1_objective_raises_value_error_if_invalid_loss": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "nilearn.decoding.space_net_solvers._tvl1_objective",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_tv.test_tvl1_solver_raises_value_error_if_invalid_loss": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ValueError",
    "nilearn.decoding.space_net_solvers.tvl1_solver",
    "nose.tools.assert_raises",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "nilearn.decoding.tests.test_tv.tvl1_solver": {
  "data": {
   "shadows": "nilearn.decoding.space_net_solvers.tvl1_solver"
  },
  "type": "import"
 },
 "nilearn.decomposition": {
  "data": {},
  "type": "module"
 },
 "nilearn.decomposition.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "nilearn.decomposition.base": {
  "data": {},
  "type": "module"
 },
 "nilearn.decomposition.base.BaseDecomposition": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "nilearn.decomposition.base.BaseDecomposition.__init__": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "sklearn.externals.joblib.Memory"
   ]
  },
  "type": "function"
 },
 "nilearn.decomposition.base.BaseDecomposition._check_components_": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "ValueError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "nilearn.decomposition.base.BaseDecomposition._raw_score": {
  "data": {
   "lineno": 402
  },
  "type": "function"
 },
 "nilearn.decomposition.base.BaseDecomposition._sort_by_score": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "numpy.argsort"
   ]
  },
  "type": "function"
 },
 "nilearn.decomposition.base.BaseDecomposition.fit": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "ValueError",
    "check_embedded_nifti_masker",
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "nilearn.decomposition.base.BaseDecomposition.inverse_transform": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "NiftiMapsMasker",
    "ValueError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "nilearn.decomposition.base.BaseDecomposition.score": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "nilearn.decomposition.base.mask_and_reduce"
   ]
  },
  "type": "function"
 },
 "nilearn.decomposition.base.BaseDecomposition.transform": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "NiftiMapsMasker",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "nilearn.decomposition.base.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "nilearn.decomposition.base.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "nilearn.decomposition.base.Memory": {
  "data": {
   "shadows": "sklearn.externals.joblib.Memory"
  },
  "type": "import"
 },
 "nilearn.decomposition.base.Parallel": {
  "data": {
   "shadows": "sklearn.externals.joblib.Parallel"
  },
  "type": "import"
 },
 "nilearn.decomposition.base._mask_and_reduce_single": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "cache",
    "int",
    "math.ceil",
    "min",
    "numpy.newaxis",
    "scipy.linalg.svd",
    "sklearn.utils.check_random_state",
    "sklearn.utils.extmath.randomized_svd"
   ]
  },
  "type": "function"
 },
 "nilearn.decomposition.base.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "nilearn.decomposition.base.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "nilearn.decomposition.base.delayed": {
  "data": {
   "shadows": "sklearn.externals.joblib.delayed"
  },
  "type": "import"
 },
 "nilearn.decomposition.base.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "nilearn.decomposition.base.explained_variance": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "numpy.maximum",
    "numpy.newaxis",
    "numpy.outer",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.var",
    "numpy.zeros",
    "range",
    "sklearn.linear_model.LinearRegression"
   ]
  },
  "type": "function"
 },
 "nilearn.decomposition.base.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "nilearn.decomposition.base.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "nilearn.decomposition.base.mask_and_reduce": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "ValueError",
    "_safe_get_data",
    "enumerate",
    "float",
    "hasattr",
    "nilearn.decomposition.base.itertools",
    "numpy.cumsum",
    "numpy.empty",
    "numpy.sum",
    "sklearn.externals.joblib.Memory",
    "sklearn.externals.joblib.Parallel",
    "sklearn.externals.joblib.delayed",
    "zip"
   ]
  },
  "type": "function"
 },
 "nilearn.decomposition.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.decomposition.base.randomized_svd": {
  "data": {
   "shadows": "sklearn.utils.extmath.randomized_svd"
  },
  "type": "import"
 },
 "nilearn.decomposition.canica": {
  "data": {},
  "type": "module"
 },
 "nilearn.decomposition.canica.CanICA": {
  "data": {
   "lineno": 19
  },
  "type": "class"
 },
 "nilearn.decomposition.canica.CanICA.__init__": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "nilearn.decomposition.canica.CanICA",
    "sklearn.externals.joblib.Memory",
    "super"
   ]
  },
  "type": "function"
 },
 "nilearn.decomposition.canica.CanICA._raw_fit": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "nilearn.decomposition.canica.CanICA._unmix_components": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "isinstance",
    "len",
    "min",
    "numpy.abs",
    "numpy.iinfo",
    "numpy.int32",
    "numpy.sum",
    "operator.itemgetter",
    "scipy.stats.scoreatpercentile",
    "sklearn.decomposition.fastica",
    "sklearn.externals.joblib.Parallel",
    "sklearn.externals.joblib.delayed",
    "sklearn.utils.check_random_state",
    "str"
   ]
  },
  "type": "function"
 },
 "nilearn.decomposition.canica.Memory": {
  "data": {
   "shadows": "sklearn.externals.joblib.Memory"
  },
  "type": "import"
 },
 "nilearn.decomposition.canica.Parallel": {
  "data": {
   "shadows": "sklearn.externals.joblib.Parallel"
  },
  "type": "import"
 },
 "nilearn.decomposition.canica.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "nilearn.decomposition.canica.delayed": {
  "data": {
   "shadows": "sklearn.externals.joblib.delayed"
  },
  "type": "import"
 },
 "nilearn.decomposition.canica.fastica": {
  "data": {
   "shadows": "sklearn.decomposition.fastica"
  },
  "type": "import"
 },
 "nilearn.decomposition.canica.itemgetter": {
  "data": {
   "shadows": "operator.itemgetter"
  },
  "type": "import"
 },
 "nilearn.decomposition.canica.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.decomposition.canica.scoreatpercentile": {
  "data": {
   "shadows": "scipy.stats.scoreatpercentile"
  },
  "type": "import"
 },
 "nilearn.decomposition.dict_learning": {
  "data": {
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "nilearn.decomposition.dict_learning.sklearn"
   ]
  },
  "type": "module"
 },
 "nilearn.decomposition.dict_learning.DictLearning": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "nilearn.decomposition.dict_learning.DictLearning.__init__": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "sklearn.externals.joblib.Memory"
   ]
  },
  "type": "function"
 },
 "nilearn.decomposition.dict_learning.DictLearning._init_dict": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "CanICA",
    "UserWarning",
    "float",
    "nilearn.decomposition.dict_learning.warnings",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "nilearn.decomposition.dict_learning.DictLearning._init_loadings": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "nilearn.decomposition.dict_learning._compute_loadings"
   ]
  },
  "type": "function"
 },
 "nilearn.decomposition.dict_learning.DictLearning._raw_fit": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "max",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.sum",
    "print",
    "sklearn.decomposition.dict_learning_online"
   ]
  },
  "type": "function"
 },
 "nilearn.decomposition.dict_learning.DictLearning.fit": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "mask_and_reduce",
    "max",
    "print"
   ]
  },
  "type": "function"
 },
 "nilearn.decomposition.dict_learning.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "nilearn.decomposition.dict_learning.Memory": {
  "data": {
   "shadows": "sklearn.externals.joblib.Memory"
  },
  "type": "import"
 },
 "nilearn.decomposition.dict_learning.Ridge": {
  "data": {
   "shadows": "sklearn.linear_model.Ridge"
  },
  "type": "import"
 },
 "nilearn.decomposition.dict_learning.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "nilearn.decomposition.dict_learning._compute_loadings": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.sum",
    "sklearn.linear_model.Ridge"
   ]
  },
  "type": "function"
 },
 "nilearn.decomposition.dict_learning.dict_learning_online": {
  "data": {
   "shadows": "sklearn.decomposition.dict_learning_online"
  },
  "type": "import"
 },
 "nilearn.decomposition.dict_learning.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "nilearn.decomposition.dict_learning.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.decomposition.dict_learning.sklearn": {
  "data": {
   "shadows": "sklearn"
  },
  "type": "import"
 },
 "nilearn.decomposition.dict_learning.sparse_encode_args": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "nilearn.decomposition.dict_learning.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nilearn.decomposition.multi_pca": {
  "data": {},
  "type": "module"
 },
 "nilearn.decomposition.multi_pca.Memory": {
  "data": {
   "shadows": "sklearn.externals.joblib.Memory"
  },
  "type": "import"
 },
 "nilearn.decomposition.multi_pca.MultiPCA": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "nilearn.decomposition.multi_pca.MultiPCA.__init__": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "sklearn.externals.joblib.Memory"
   ]
  },
  "type": "function"
 },
 "nilearn.decomposition.multi_pca.MultiPCA._raw_fit": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.sum",
    "sklearn.utils.extmath.randomized_svd"
   ]
  },
  "type": "function"
 },
 "nilearn.decomposition.multi_pca.MultiPCA.fit": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "mask_and_reduce",
    "max"
   ]
  },
  "type": "function"
 },
 "nilearn.decomposition.multi_pca.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "nilearn.decomposition.multi_pca.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.decomposition.multi_pca.randomized_svd": {
  "data": {
   "shadows": "sklearn.utils.extmath.randomized_svd"
  },
  "type": "import"
 },
 "nilearn.decomposition.tests": {
  "data": {},
  "type": "module"
 },
 "nilearn.decomposition.tests.test_base": {
  "data": {},
  "type": "module"
 },
 "nilearn.decomposition.tests.test_base.BaseDecomposition": {
  "data": {
   "shadows": "nilearn.decomposition.base.BaseDecomposition"
  },
  "type": "import"
 },
 "nilearn.decomposition.tests.test_base.MultiNiftiMasker": {
  "data": {
   "shadows": "nilearn.input_data.MultiNiftiMasker"
  },
  "type": "import"
 },
 "nilearn.decomposition.tests.test_base.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "nilearn.decomposition.tests.test_base.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "nilearn.decomposition.tests.test_base.assert_raises_regex": {
  "data": {
   "shadows": "nilearn._utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "nilearn.decomposition.tests.test_base.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nilearn.decomposition.tests.test_base.mask_and_reduce": {
  "data": {
   "shadows": "nilearn.decomposition.base.mask_and_reduce"
  },
  "type": "import"
 },
 "nilearn.decomposition.tests.test_base.nibabel": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "nilearn.decomposition.tests.test_base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.decomposition.tests.test_base.test_base_decomposition": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ValueError",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn.decomposition.base.BaseDecomposition",
    "nilearn.decomposition.tests.test_base.nibabel",
    "nilearn.input_data.MultiNiftiMasker",
    "nose.tools.assert_true",
    "numpy.eye",
    "numpy.int8",
    "numpy.ones",
    "numpy.random.RandomState",
    "range"
   ]
  },
  "type": "function"
 },
 "nilearn.decomposition.tests.test_base.test_mask_reducer": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "nilearn.decomposition.base.mask_and_reduce",
    "nilearn.decomposition.tests.test_base.nibabel",
    "nilearn.input_data.MultiNiftiMasker",
    "nose.tools.assert_true",
    "numpy.eye",
    "numpy.int8",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.tile",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nilearn.decomposition.tests.test_canica": {
  "data": {},
  "type": "module"
 },
 "nilearn.decomposition.tests.test_canica.CanICA": {
  "data": {
   "shadows": "nilearn.decomposition.canica.CanICA"
  },
  "type": "import"
 },
 "nilearn.decomposition.tests.test_canica._make_canica_components": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.vstack",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.decomposition.tests.test_canica._make_canica_test_data": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "nilearn._utils.testing.assert_less_equal",
    "nilearn.decomposition.tests.test_canica._make_canica_components",
    "nilearn.decomposition.tests.test_canica._make_data_from_components",
    "nilearn.decomposition.tests.test_canica.nibabel",
    "numpy.eye",
    "numpy.int8",
    "numpy.ones",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "nilearn.decomposition.tests.test_canica._make_data_from_components": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "nilearn.decomposition.tests.test_canica.nibabel",
    "numpy.dot",
    "numpy.random.RandomState",
    "numpy.reshape",
    "numpy.rollaxis",
    "range"
   ]
  },
  "type": "function"
 },
 "nilearn.decomposition.tests.test_canica.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "nilearn.decomposition.tests.test_canica.assert_less_equal": {
  "data": {
   "shadows": "nilearn._utils.testing.assert_less_equal"
  },
  "type": "import"
 },
 "nilearn.decomposition.tests.test_canica.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nilearn.decomposition.tests.test_canica.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nilearn.decomposition.tests.test_canica.iter_img": {
  "data": {
   "shadows": "nilearn.image.iter_img"
  },
  "type": "import"
 },
 "nilearn.decomposition.tests.test_canica.nibabel": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "nilearn.decomposition.tests.test_canica.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.decomposition.tests.test_canica.test_canica_square_img": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "TypeError",
    "nilearn.decomposition.canica.CanICA",
    "nilearn.decomposition.tests.test_canica._make_canica_test_data",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.corrcoef",
    "numpy.rollaxis",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "nilearn.decomposition.tests.test_canica.test_component_sign": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "nilearn._utils.testing.assert_less_equal",
    "nilearn.decomposition.canica.CanICA",
    "nilearn.decomposition.tests.test_canica._make_canica_test_data",
    "nilearn.image.iter_img",
    "range"
   ]
  },
  "type": "function"
 },
 "nilearn.decomposition.tests.test_dict_learning": {
  "data": {},
  "type": "module"
 },
 "nilearn.decomposition.tests.test_dict_learning.DictLearning": {
  "data": {
   "shadows": "nilearn.decomposition.dict_learning.DictLearning"
  },
  "type": "import"
 },
 "nilearn.decomposition.tests.test_dict_learning.NiftiMasker": {
  "data": {
   "shadows": "nilearn.input_data.NiftiMasker"
  },
  "type": "import"
 },
 "nilearn.decomposition.tests.test_dict_learning._make_canica_test_data": {
  "data": {
   "shadows": "nilearn.decomposition.tests.test_canica._make_canica_test_data"
  },
  "type": "import"
 },
 "nilearn.decomposition.tests.test_dict_learning.assert_less_equal": {
  "data": {
   "shadows": "nilearn._utils.testing.assert_less_equal"
  },
  "type": "import"
 },
 "nilearn.decomposition.tests.test_dict_learning.iter_img": {
  "data": {
   "shadows": "nilearn.image.iter_img"
  },
  "type": "import"
 },
 "nilearn.decomposition.tests.test_dict_learning.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.decomposition.tests.test_dict_learning.test_component_sign": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "nilearn._utils.testing.assert_less_equal",
    "nilearn.decomposition.dict_learning.DictLearning",
    "nilearn.decomposition.tests.test_canica._make_canica_test_data",
    "nilearn.image.iter_img",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nilearn.decomposition.tests.test_dict_learning.test_dict_learning": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "nilearn.decomposition.dict_learning.DictLearning",
    "nilearn.decomposition.tests.test_canica._make_canica_test_data",
    "nilearn.input_data.NiftiMasker",
    "numpy.abs",
    "numpy.newaxis",
    "numpy.reshape",
    "numpy.rollaxis",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nilearn.decomposition.tests.test_multi_pca": {
  "data": {},
  "type": "module"
 },
 "nilearn.decomposition.tests.test_multi_pca.MultiNiftiMasker": {
  "data": {
   "shadows": "nilearn.input_data.MultiNiftiMasker"
  },
  "type": "import"
 },
 "nilearn.decomposition.tests.test_multi_pca.MultiPCA": {
  "data": {
   "shadows": "nilearn.decomposition.multi_pca.MultiPCA"
  },
  "type": "import"
 },
 "nilearn.decomposition.tests.test_multi_pca.NiftiMasker": {
  "data": {
   "shadows": "nilearn.input_data.NiftiMasker"
  },
  "type": "import"
 },
 "nilearn.decomposition.tests.test_multi_pca.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "nilearn.decomposition.tests.test_multi_pca.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "nilearn.decomposition.tests.test_multi_pca.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nilearn.decomposition.tests.test_multi_pca.assert_raises_regex": {
  "data": {
   "shadows": "nilearn._utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "nilearn.decomposition.tests.test_multi_pca.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nilearn.decomposition.tests.test_multi_pca.nibabel": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "nilearn.decomposition.tests.test_multi_pca.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.decomposition.tests.test_multi_pca.test_multi_pca": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dict",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn.decomposition.multi_pca.MultiPCA",
    "nilearn.decomposition.tests.test_multi_pca.nibabel",
    "nilearn.input_data.MultiNiftiMasker",
    "nose.tools.assert_raises",
    "numpy.arange",
    "numpy.eye",
    "numpy.int8",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "nilearn.decomposition.tests.test_multi_pca.test_multi_pca_score": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "nilearn.decomposition.multi_pca.MultiPCA",
    "nilearn.decomposition.tests.test_multi_pca.nibabel",
    "nilearn.input_data.NiftiMasker",
    "nose.tools.assert_true",
    "numpy.all",
    "numpy.eye",
    "numpy.int8",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "nilearn.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "nilearn.image": {
  "data": {},
  "type": "module"
 },
 "nilearn.image.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "nilearn.image.concat_imgs": {
  "data": {
   "shadows": "concat_niimgs"
  },
  "type": "import"
 },
 "nilearn.image.image": {
  "data": {},
  "type": "module"
 },
 "nilearn.image.image.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "nilearn.image.image.Parallel": {
  "data": {
   "shadows": "sklearn.externals.joblib.Parallel"
  },
  "type": "import"
 },
 "nilearn.image.image._compute_mean": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "ValueError",
    "_repr_niimgs",
    "_safe_get_data",
    "check_niimg",
    "nilearn.image.image._smooth_array",
    "nilearn.image.image.nibabel",
    "numpy.eye",
    "numpy.isnan",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "nilearn.image.image._crop_img_to": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "check_niimg",
    "new_img_like",
    "nilearn.image.image.copy",
    "numpy.array",
    "numpy.eye"
   ]
  },
  "type": "function"
 },
 "nilearn.image.image._fast_smooth_array": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "nilearn.image.image._smooth_array": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "enumerate",
    "nilearn.image.image._fast_smooth_array",
    "nilearn.image.image.copy",
    "numpy.float32",
    "numpy.float64",
    "numpy.int64",
    "numpy.isfinite",
    "numpy.log",
    "numpy.logical_not",
    "numpy.sqrt",
    "numpy.sum",
    "scipy.ndimage.gaussian_filter1d"
   ]
  },
  "type": "function"
 },
 "nilearn.image.image.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "nilearn.image.image.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "nilearn.image.image.crop_img": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "check_niimg",
    "max",
    "nilearn.image.image._crop_img_to",
    "nilearn.image.image.copy",
    "numpy.any",
    "numpy.array",
    "numpy.logical_or",
    "numpy.maximum",
    "numpy.minimum",
    "numpy.where",
    "slice",
    "zip"
   ]
  },
  "type": "function"
 },
 "nilearn.image.image.delayed": {
  "data": {
   "shadows": "sklearn.externals.joblib.delayed"
  },
  "type": "import"
 },
 "nilearn.image.image.high_variance_confounds": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "as_ndarray",
    "check_niimg_4d",
    "numpy.reshape"
   ]
  },
  "type": "function"
 },
 "nilearn.image.image.index_img": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "_index_img",
    "check_niimg_4d"
   ]
  },
  "type": "function"
 },
 "nilearn.image.image.iter_img": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "check_niimg_4d"
   ]
  },
  "type": "function"
 },
 "nilearn.image.image.math_img": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "Exception",
    "_check_same_fov",
    "_safe_get_data",
    "check_niimg",
    "eval",
    "nilearn.image.image.new_img_like",
    "numpy"
   ]
  },
  "type": "function"
 },
 "nilearn.image.image.mean_img": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "check_niimg",
    "float",
    "isinstance",
    "iter",
    "new_img_like",
    "next",
    "nilearn.image.image._compute_mean",
    "nilearn.image.image.collections",
    "sklearn.externals.joblib.Parallel",
    "sklearn.externals.joblib.delayed"
   ]
  },
  "type": "function"
 },
 "nilearn.image.image.ndimage": {
  "data": {
   "shadows": "scipy.ndimage"
  },
  "type": "import"
 },
 "nilearn.image.image.new_img_like": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "TypeError",
    "as_ndarray",
    "bool",
    "distutils.version.LooseVersion",
    "hasattr",
    "isinstance",
    "nilearn.image.image.copy",
    "nilearn.image.image.nibabel",
    "numpy.int8",
    "numpy.max",
    "numpy.min",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "nilearn.image.image.nibabel": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "nilearn.image.image.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.image.image.scoreatpercentile": {
  "data": {
   "shadows": "scipy.stats.scoreatpercentile"
  },
  "type": "import"
 },
 "nilearn.image.image.smooth_img": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "check_niimg",
    "hasattr",
    "isinstance",
    "new_img_like",
    "nilearn.image.image._smooth_array"
   ]
  },
  "type": "function"
 },
 "nilearn.image.image.swap_img_hemispheres": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "check_niimg_3d",
    "new_img_like",
    "reorder_img"
   ]
  },
  "type": "function"
 },
 "nilearn.image.image.threshold_img": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "ValueError",
    "_check_same_fov",
    "check_niimg",
    "check_threshold",
    "nilearn.image.image.new_img_like",
    "numpy.abs",
    "numpy.nan_to_num",
    "scipy.stats.scoreatpercentile"
   ]
  },
  "type": "function"
 },
 "nilearn.image.resampling": {
  "data": {},
  "type": "module"
 },
 "nilearn.image.resampling.BoundingBoxError": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "nilearn.image.resampling.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "nilearn.image.resampling._resample_one_img": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "RuntimeWarning",
    "_extrapolate_out_mask",
    "distutils.version.LooseVersion",
    "nilearn.image.resampling.scipy",
    "nilearn.image.resampling.warnings",
    "numpy.any",
    "numpy.dot",
    "numpy.isfinite",
    "numpy.logical_not",
    "numpy.nan",
    "scipy.ndimage.affine_transform"
   ]
  },
  "type": "function"
 },
 "nilearn.image.resampling.coord_transform": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "numpy.atleast_1d",
    "numpy.c_.T",
    "numpy.dot",
    "numpy.ones_like"
   ]
  },
  "type": "function"
 },
 "nilearn.image.resampling.from_matrix_vector": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.image.resampling.get_bounds": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.dot",
    "zip"
   ]
  },
  "type": "function"
 },
 "nilearn.image.resampling.get_mask_bounds": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "len",
    "nilearn.image.resampling.get_bounds",
    "nilearn.image.resampling.warnings",
    "numpy.bool",
    "scipy.ndimage.find_objects"
   ]
  },
  "type": "function"
 },
 "nilearn.image.resampling.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "nilearn.image.resampling.ndimage": {
  "data": {
   "shadows": "scipy.ndimage"
  },
  "type": "import"
 },
 "nilearn.image.resampling.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.image.resampling.reorder_img": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "ValueError",
    "new_img_like",
    "nilearn.image.resampling.from_matrix_vector",
    "nilearn.image.resampling.resample_img",
    "nilearn.image.resampling.to_matrix_vector",
    "numpy.abs",
    "numpy.all",
    "numpy.argmax",
    "numpy.array",
    "numpy.diag",
    "numpy.diff",
    "numpy.linalg.qr",
    "numpy.sort",
    "numpy.swapaxes",
    "slice"
   ]
  },
  "type": "function"
 },
 "nilearn.image.resampling.resample_img": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "len",
    "list",
    "new_img_like",
    "nilearn.image.resampling.BoundingBoxError",
    "nilearn.image.resampling._resample_one_img",
    "nilearn.image.resampling.get_bounds",
    "nilearn.image.resampling.to_matrix_vector",
    "nilearn.image.resampling.warnings",
    "numpy.all",
    "numpy.allclose",
    "numpy.array",
    "numpy.asarray",
    "numpy.ceil",
    "numpy.diag",
    "numpy.dot",
    "numpy.dtype",
    "numpy.empty",
    "numpy.eye",
    "numpy.linalg.inv",
    "numpy.ndarray",
    "numpy.ndindex",
    "scipy.linalg.inv",
    "slice",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nilearn.image.resampling.resample_to_img": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "len",
    "nilearn.image.resampling.resample_img"
   ]
  },
  "type": "function"
 },
 "nilearn.image.resampling.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "nilearn.image.resampling.to_matrix_vector": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "nilearn.image.resampling.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nilearn.image.tests": {
  "data": {},
  "type": "module"
 },
 "nilearn.image.tests.data": {
  "data": {},
  "type": "module"
 },
 "nilearn.image.tests.test_image": {
  "data": {
   "symbols_in_volume": [
    "nilearn.image.tests.test_image.currdir",
    "nilearn.image.tests.test_image.os",
    "nilearn.image.tests.test_image.platform"
   ]
  },
  "type": "module"
 },
 "nilearn.image.tests.test_image.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "nilearn.image.tests.test_image.Nifti1Image": {
  "data": {
   "shadows": "nibabel.Nifti1Image"
  },
  "type": "import"
 },
 "nilearn.image.tests.test_image.SkipTest": {
  "data": {
   "shadows": "nose.SkipTest"
  },
  "type": "import"
 },
 "nilearn.image.tests.test_image.X64": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "nilearn.image.tests.test_image.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "nilearn.image.tests.test_image.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nilearn.image.tests.test_image.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nilearn.image.tests.test_image.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "nilearn.image.tests.test_image.assert_raises_regex": {
  "data": {
   "shadows": "nilearn._utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "nilearn.image.tests.test_image.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nilearn.image.tests.test_image.concat_imgs": {
  "data": {
   "shadows": "nilearn.image.concat_imgs"
  },
  "type": "import"
 },
 "nilearn.image.tests.test_image.currdir": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "nilearn.image.tests.test_image.datadir": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "nilearn.image.tests.test_image.image": {
  "data": {
   "shadows": "nilearn.image.image"
  },
  "type": "import"
 },
 "nilearn.image.tests.test_image.iter_img": {
  "data": {
   "shadows": "nilearn.image.iter_img"
  },
  "type": "import"
 },
 "nilearn.image.tests.test_image.math_img": {
  "data": {
   "shadows": "nilearn.image.math_img"
  },
  "type": "import"
 },
 "nilearn.image.tests.test_image.new_img_like": {
  "data": {
   "shadows": "nilearn.image.new_img_like"
  },
  "type": "import"
 },
 "nilearn.image.tests.test_image.nibabel": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "nilearn.image.tests.test_image.niimg_conversions": {
  "data": {
   "shadows": "nilearn._utils.niimg_conversions"
  },
  "type": "import"
 },
 "nilearn.image.tests.test_image.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.image.tests.test_image.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nilearn.image.tests.test_image.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "nilearn.image.tests.test_image.resampling": {
  "data": {
   "shadows": "nilearn.image.resampling"
  },
  "type": "import"
 },
 "nilearn.image.tests.test_image.test__crop_img_to": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "nilearn.image.image._crop_img_to",
    "nilearn.image.tests.test_image.nibabel",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.diag",
    "numpy.zeros",
    "slice"
   ]
  },
  "type": "function"
 },
 "nilearn.image.tests.test_image.test__fast_smooth_array": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "nilearn.image.image._fast_smooth_array",
    "numpy.empty",
    "numpy.ndenumerate",
    "numpy.ones",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "nilearn.image.tests.test_image.test__smooth_array": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "nilearn.image.image._fast_smooth_array",
    "nilearn.image.image._smooth_array",
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "numpy.NaN",
    "numpy.abs",
    "numpy.all",
    "numpy.any",
    "numpy.diag",
    "numpy.eye",
    "numpy.isfinite",
    "numpy.may_share_memory",
    "numpy.rollaxis",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.image.tests.test_image.test_concat_imgs": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "nilearn._utils.niimg_conversions.concat_niimgs",
    "nilearn.image.concat_imgs",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "nilearn.image.tests.test_image.test_crop_img": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "nilearn.image.image.crop_img",
    "nilearn.image.tests.test_image.nibabel",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.diag",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.image.tests.test_image.test_crop_threshold_tolerance": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "nilearn.image.image.crop_img",
    "nilearn.image.tests.test_image.nibabel",
    "nose.tools.assert_true",
    "numpy.eye",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.image.tests.test_image.test_high_variance_confounds": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "nilearn._utils.testing.generate_fake_fmri",
    "nilearn.image.image.high_variance_confounds",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "nilearn.image.tests.test_image.test_index_img": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "IndexError",
    "TypeError",
    "list",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn._utils.testing.generate_fake_fmri",
    "nilearn.image.image.index_img",
    "nilearn.image.tests.test_image.nibabel",
    "numpy.arange",
    "numpy.array",
    "numpy.eye",
    "numpy.ones",
    "numpy.repeat",
    "numpy.testing.assert_array_equal",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "nilearn.image.tests.test_image.test_isnan_threshold_img_data": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "nilearn._utils.testing.generate_maps",
    "nilearn.image.tests.test_image.nibabel",
    "nilearn.image.threshold_img",
    "numpy.eye",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "nilearn.image.tests.test_image.test_iter_img": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "TypeError",
    "enumerate",
    "list",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn._utils.testing.generate_fake_fmri",
    "nilearn._utils.testing.write_tmp_imgs",
    "nilearn.image.image.iter_img",
    "nilearn.image.tests.test_image.nibabel",
    "numpy.array",
    "numpy.eye",
    "numpy.ones",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nilearn.image.tests.test_image.test_math_img": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "nibabel.Nifti1Image",
    "nilearn._utils.testing.write_tmp_imgs",
    "nilearn.image.math_img",
    "nose.tools.assert_equal",
    "numpy.eye",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.image.tests.test_image.test_math_img_exceptions": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "nibabel.Nifti1Image",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn.image.math_img",
    "numpy.eye",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.image.tests.test_image.test_mean_img": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "list",
    "nilearn._utils.testing.write_tmp_imgs",
    "nilearn.image.image.mean_img",
    "nilearn.image.tests.test_image.X64",
    "nilearn.image.tests.test_image.nibabel",
    "numpy.diag",
    "numpy.finfo",
    "numpy.mean",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.image.tests.test_image.test_mean_img_resample": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "nilearn.image.image.mean_img",
    "nilearn.image.resampling.resample_img",
    "nilearn.image.tests.test_image.nibabel",
    "numpy.diag",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nilearn.image.tests.test_image.test_new_img_like": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "nilearn.image.new_img_like",
    "nilearn.image.tests.test_image.nibabel",
    "numpy.diag",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.image.tests.test_image.test_new_img_like_mgz": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "nilearn.image.new_img_like",
    "nilearn.image.tests.test_image.datadir",
    "nilearn.image.tests.test_image.nibabel",
    "nilearn.image.tests.test_image.os",
    "nose.SkipTest",
    "numpy.bool",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "nilearn.image.tests.test_image.test_smooth_img": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "nilearn._utils.testing.generate_fake_fmri",
    "nilearn._utils.testing.write_tmp_imgs",
    "nilearn.image.image.smooth_img",
    "nilearn.image.tests.test_image.nibabel",
    "nose.tools.assert_true",
    "zip"
   ]
  },
  "type": "function"
 },
 "nilearn.image.tests.test_image.test_swap_img_hemispheres": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "nilearn.image.image.swap_img_hemispheres",
    "nilearn.image.tests.test_image.nibabel",
    "numpy.eye",
    "numpy.random.randn",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nilearn.image.tests.test_image.test_threshold_img": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "nilearn._utils.testing.generate_maps",
    "nilearn.image.iter_img",
    "nilearn.image.tests.test_image.nibabel",
    "nilearn.image.threshold_img",
    "numpy.eye",
    "numpy.int8",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "nilearn.image.tests.test_image.test_validity_threshold_value_in_threshold_img": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "ValueError",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn._utils.testing.generate_maps",
    "nilearn.image.threshold_img"
   ]
  },
  "type": "function"
 },
 "nilearn.image.tests.test_image.testing": {
  "data": {
   "shadows": "nilearn._utils.testing"
  },
  "type": "import"
 },
 "nilearn.image.tests.test_image.threshold_img": {
  "data": {
   "shadows": "nilearn.image.threshold_img"
  },
  "type": "import"
 },
 "nilearn.image.tests.test_resampling": {
  "data": {},
  "type": "module"
 },
 "nilearn.image.tests.test_resampling.BoundingBoxError": {
  "data": {
   "shadows": "nilearn.image.resampling.BoundingBoxError"
  },
  "type": "import"
 },
 "nilearn.image.tests.test_resampling.Nifti1Image": {
  "data": {
   "shadows": "nibabel.Nifti1Image"
  },
  "type": "import"
 },
 "nilearn.image.tests.test_resampling.SkipTest": {
  "data": {
   "shadows": "nose.SkipTest"
  },
  "type": "import"
 },
 "nilearn.image.tests.test_resampling.assert_almost_equal": {
  "data": {
   "shadows": "nose.tools.assert_almost_equal"
  },
  "type": "import"
 },
 "nilearn.image.tests.test_resampling.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "nilearn.image.tests.test_resampling.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nilearn.image.tests.test_resampling.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nilearn.image.tests.test_resampling.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "nilearn.image.tests.test_resampling.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nilearn.image.tests.test_resampling.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nilearn.image.tests.test_resampling.coord_transform": {
  "data": {
   "shadows": "nilearn.image.resampling.coord_transform"
  },
  "type": "import"
 },
 "nilearn.image.tests.test_resampling.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "nilearn.image.tests.test_resampling.from_matrix_vector": {
  "data": {
   "shadows": "nilearn.image.resampling.from_matrix_vector"
  },
  "type": "import"
 },
 "nilearn.image.tests.test_resampling.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "nilearn.image.tests.test_resampling.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.image.tests.test_resampling.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nilearn.image.tests.test_resampling.pad": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "max",
    "min",
    "numpy.array",
    "numpy.int64",
    "numpy.zeros",
    "slice",
    "zip"
   ]
  },
  "type": "function"
 },
 "nilearn.image.tests.test_resampling.reorder_img": {
  "data": {
   "shadows": "nilearn.image.resampling.reorder_img"
  },
  "type": "import"
 },
 "nilearn.image.tests.test_resampling.resample_img": {
  "data": {
   "shadows": "nilearn.image.resampling.resample_img"
  },
  "type": "import"
 },
 "nilearn.image.tests.test_resampling.resample_to_img": {
  "data": {
   "shadows": "nilearn.image.resampling.resample_to_img"
  },
  "type": "import"
 },
 "nilearn.image.tests.test_resampling.rotation": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "cos",
    "numpy.array",
    "numpy.cos",
    "numpy.dot",
    "numpy.sin",
    "sin"
   ]
  },
  "type": "function"
 },
 "nilearn.image.tests.test_resampling.test_4d_affine_bounding_box_error": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "l2_norm",
    "nibabel.Nifti1Image",
    "nilearn.image.resampling.resample_img",
    "nose.tools.assert_almost_equal",
    "numpy.array",
    "numpy.eye",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.image.tests.test_resampling.test_4d_affine_bounding_box_error.l2_norm": {
  "data": {
   "lineno": 228
  },
  "type": "function"
 },
 "nilearn.image.tests.test_resampling.test_coord_transform_trivial": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "nilearn.image.resampling.coord_transform",
    "numpy.eye",
    "numpy.random.random",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nilearn.image.tests.test_resampling.test_downsample": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "nibabel.Nifti1Image",
    "nilearn.image.resampling.resample_img",
    "numpy.eye",
    "numpy.random.RandomState",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nilearn.image.tests.test_resampling.test_identity_resample": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "nibabel.Nifti1Image",
    "nilearn.image.resampling.resample_img",
    "numpy.array",
    "numpy.eye",
    "numpy.random.randint",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nilearn.image.tests.test_resampling.test_raises_bbox_error_if_data_outside_box": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "list",
    "map",
    "nibabel.Nifti1Image",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn.image.resampling.BoundingBoxError",
    "nilearn.image.resampling.resample_img",
    "numpy.array",
    "numpy.concatenate",
    "numpy.diag",
    "numpy.eye",
    "numpy.newaxis",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.image.tests.test_resampling.test_raises_upon_3x3_affine_and_no_shape": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "ValueError",
    "nibabel.Nifti1Image",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn.image.resampling.resample_img",
    "numpy.eye",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.image.tests.test_resampling.test_reorder_img": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "ValueError",
    "nibabel.Nifti1Image",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn.image.resampling.from_matrix_vector",
    "nilearn.image.resampling.reorder_img",
    "nilearn.image.resampling.resample_img",
    "nilearn.image.tests.test_resampling.copy",
    "nilearn.image.tests.test_resampling.rotation",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.all",
    "numpy.array",
    "numpy.diag",
    "numpy.eye",
    "numpy.pi",
    "numpy.random.RandomState",
    "numpy.random.randint",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nilearn.image.tests.test_resampling.test_reorder_img_non_native_endianness": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "_get_resampled_img",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "nilearn.image.tests.test_resampling.test_reorder_img_non_native_endianness._get_resampled_img": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "nibabel.Nifti1Image",
    "nilearn.image.resampling.resample_img",
    "nilearn.image.tests.test_resampling.math",
    "numpy.array",
    "numpy.eye",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "nilearn.image.tests.test_resampling.test_resample_img_segmentation_fault": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "MemoryError",
    "nibabel.Nifti1Image",
    "nilearn.image.resampling.resample_img",
    "nilearn.image.tests.test_resampling.os",
    "nose.SkipTest",
    "numpy.diag",
    "numpy.float64",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "nilearn.image.tests.test_resampling.test_resample_to_img": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "nibabel.Nifti1Image",
    "nilearn.image.resampling.resample_to_img",
    "numpy.eye",
    "numpy.random.RandomState",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nilearn.image.tests.test_resampling.test_resampling_continuous_with_affine": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "nibabel.Nifti1Image",
    "nilearn.image.resampling.resample_img",
    "nilearn.image.tests.test_resampling.rotation",
    "nose.tools.assert_equal",
    "numpy.dtype",
    "numpy.eye",
    "numpy.pi",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "slice"
   ]
  },
  "type": "function"
 },
 "nilearn.image.tests.test_resampling.test_resampling_error_checks": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "ValueError",
    "nibabel.Nifti1Image",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn._utils.testing.write_tmp_imgs",
    "nilearn.image.resampling.resample_img",
    "nose.tools.assert_equal",
    "nose.tools.assert_false",
    "nose.tools.assert_raises",
    "numpy.eye",
    "numpy.may_share_memory",
    "numpy.random.randint",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nilearn.image.tests.test_resampling.test_resampling_nan": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "RuntimeWarning",
    "nibabel.Nifti1Image",
    "nilearn._utils.testing.assert_warns",
    "nilearn.image.resampling.resample_img",
    "nose.tools.assert_false",
    "numpy.all",
    "numpy.any",
    "numpy.arange",
    "numpy.array",
    "numpy.eye",
    "numpy.float",
    "numpy.isfinite",
    "numpy.logical_not",
    "numpy.nan",
    "numpy.ones",
    "numpy.prod",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros",
    "slice"
   ]
  },
  "type": "function"
 },
 "nilearn.image.tests.test_resampling.test_resampling_result_axis_permutation": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "int",
    "list",
    "nibabel.Nifti1Image",
    "nilearn.image.resampling.resample_img",
    "nilearn.image.tests.test_resampling.pad",
    "numpy.arange",
    "numpy.array",
    "numpy.eye",
    "numpy.newaxis",
    "numpy.prod",
    "numpy.testing.assert_array_almost_equal",
    "numpy.vstack",
    "numpy.zeros",
    "slice"
   ]
  },
  "type": "function"
 },
 "nilearn.image.tests.test_resampling.test_resampling_with_affine": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "nibabel.Nifti1Image",
    "nilearn.image.resampling.resample_img",
    "nilearn.image.tests.test_resampling.rotation",
    "nose.tools.assert_equal",
    "numpy.eye",
    "numpy.max",
    "numpy.pi",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "nilearn.image.tests.test_resampling.test_resampling_with_int_types_no_crash": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "nibabel.Nifti1Image",
    "nilearn.image.resampling.resample_img",
    "numpy.eye",
    "numpy.float",
    "numpy.float32",
    "numpy.float64",
    "numpy.int",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.uint",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.image.tests.test_resampling.testing": {
  "data": {
   "shadows": "nilearn._utils.testing"
  },
  "type": "import"
 },
 "nilearn.input_data": {
  "data": {},
  "type": "module"
 },
 "nilearn.input_data.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "nilearn.input_data.base_masker": {
  "data": {},
  "type": "module"
 },
 "nilearn.input_data.base_masker.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "nilearn.input_data.base_masker.BaseMasker": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "nilearn.input_data.base_masker.BaseMasker._check_fitted": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "ValueError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.base_masker.BaseMasker.fit_transform": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "nilearn.input_data.base_masker.warnings"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.base_masker.BaseMasker.inverse_transform": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.base_masker.BaseMasker.transform": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "nilearn.input_data.base_masker.BaseMasker.transform_single_imgs": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "NotImplementedError",
    "nilearn.input_data.base_masker.abc"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.base_masker.Memory": {
  "data": {
   "shadows": "sklearn.externals.joblib.Memory"
  },
  "type": "import"
 },
 "nilearn.input_data.base_masker.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "nilearn.input_data.base_masker.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "nilearn.input_data.base_masker.filter_and_extract": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "cache",
    "enclosing_scope_name",
    "isinstance",
    "print",
    "sklearn.externals.joblib.Memory"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.base_masker.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.input_data.base_masker.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nilearn.input_data.masker_validation": {
  "data": {},
  "type": "module"
 },
 "nilearn.input_data.masker_validation.check_embedded_nifti_masker": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "get_params",
    "getattr",
    "hasattr",
    "isinstance",
    "masker_type",
    "max",
    "nilearn.input_data.masker_validation.warnings",
    "sorted"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.masker_validation.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nilearn.input_data.multi_nifti_masker": {
  "data": {},
  "type": "module"
 },
 "nilearn.input_data.multi_nifti_masker.Memory": {
  "data": {
   "shadows": "sklearn.externals.joblib.Memory"
  },
  "type": "import"
 },
 "nilearn.input_data.multi_nifti_masker.MultiNiftiMasker": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "nilearn.input_data.multi_nifti_masker.MultiNiftiMasker.__init__": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "sklearn.externals.joblib.Memory"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.multi_nifti_masker.MultiNiftiMasker.fit": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "max",
    "nilearn.input_data.multi_nifti_masker.collections",
    "nilearn.input_data.multi_nifti_masker.warnings",
    "print"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.multi_nifti_masker.MultiNiftiMasker.transform": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.multi_nifti_masker.MultiNiftiMasker.transform_imgs": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "ValueError",
    "_iter_check_niimg",
    "get_params",
    "hasattr",
    "izip",
    "len",
    "nilearn.input_data.multi_nifti_masker.itertools",
    "sklearn.externals.joblib.Parallel",
    "sklearn.externals.joblib.delayed"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.multi_nifti_masker.Parallel": {
  "data": {
   "shadows": "sklearn.externals.joblib.Parallel"
  },
  "type": "import"
 },
 "nilearn.input_data.multi_nifti_masker.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "nilearn.input_data.multi_nifti_masker.delayed": {
  "data": {
   "shadows": "sklearn.externals.joblib.delayed"
  },
  "type": "import"
 },
 "nilearn.input_data.multi_nifti_masker.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "nilearn.input_data.multi_nifti_masker.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nilearn.input_data.nifti_labels_masker": {
  "data": {},
  "type": "module"
 },
 "nilearn.input_data.nifti_labels_masker.Memory": {
  "data": {
   "shadows": "sklearn.externals.joblib.Memory"
  },
  "type": "import"
 },
 "nilearn.input_data.nifti_labels_masker.NiftiLabelsMasker": {
  "data": {
   "lineno": 34
  },
  "type": "class"
 },
 "nilearn.input_data.nifti_labels_masker.NiftiLabelsMasker.__init__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.externals.joblib.Memory",
    "str"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.nifti_labels_masker.NiftiLabelsMasker._check_fitted": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "ValueError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.nifti_labels_masker.NiftiLabelsMasker.fit": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "ValueError",
    "_compose_err_msg",
    "numpy.allclose",
    "str"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.nifti_labels_masker.NiftiLabelsMasker.fit_transform": {
  "data": {
   "lineno": 188
  },
  "type": "function"
 },
 "nilearn.input_data.nifti_labels_masker.NiftiLabelsMasker.inverse_transform": {
  "data": {
   "lineno": 265
  },
  "type": "function"
 },
 "nilearn.input_data.nifti_labels_masker.NiftiLabelsMasker.transform_single_imgs": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "_check_same_fov",
    "get_params",
    "hasattr",
    "nilearn.input_data.nifti_labels_masker.NiftiLabelsMasker",
    "nilearn.input_data.nifti_labels_masker._ExtractionFunctor",
    "print"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.nifti_labels_masker._ExtractionFunctor": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nilearn.input_data.nifti_labels_masker._ExtractionFunctor.__call__": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "nilearn.input_data.nifti_labels_masker._ExtractionFunctor.__init__": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "nilearn.input_data.nifti_labels_masker.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.input_data.nifti_maps_masker": {
  "data": {},
  "type": "module"
 },
 "nilearn.input_data.nifti_maps_masker.Memory": {
  "data": {
   "shadows": "sklearn.externals.joblib.Memory"
  },
  "type": "import"
 },
 "nilearn.input_data.nifti_maps_masker.NiftiMapsMasker": {
  "data": {
   "lineno": 33
  },
  "type": "class"
 },
 "nilearn.input_data.nifti_maps_masker.NiftiMapsMasker.__init__": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.externals.joblib.Memory",
    "str"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.nifti_maps_masker.NiftiMapsMasker._check_fitted": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "ValueError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.nifti_maps_masker.NiftiMapsMasker.fit": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "_check_same_fov",
    "print"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.nifti_maps_masker.NiftiMapsMasker.fit_transform": {
  "data": {
   "lineno": 205
  },
  "type": "function"
 },
 "nilearn.input_data.nifti_maps_masker.NiftiMapsMasker.inverse_transform": {
  "data": {
   "lineno": 319
  },
  "type": "function"
 },
 "nilearn.input_data.nifti_maps_masker.NiftiMapsMasker.transform_single_imgs": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "ValueError",
    "_check_same_fov",
    "_get_data_dtype",
    "dict",
    "get_params",
    "hasattr",
    "nilearn.input_data.nifti_maps_masker.NiftiMapsMasker",
    "nilearn.input_data.nifti_maps_masker._ExtractionFunctor",
    "numpy.any",
    "numpy.finfo",
    "numpy.sum",
    "print"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.nifti_maps_masker._ExtractionFunctor": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nilearn.input_data.nifti_maps_masker._ExtractionFunctor.__call__": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "nilearn.input_data.nifti_maps_masker._ExtractionFunctor.__init__": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "nilearn.input_data.nifti_maps_masker.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.input_data.nifti_masker": {
  "data": {},
  "type": "module"
 },
 "nilearn.input_data.nifti_masker.Memory": {
  "data": {
   "shadows": "sklearn.externals.joblib.Memory"
  },
  "type": "import"
 },
 "nilearn.input_data.nifti_masker.NiftiMasker": {
  "data": {
   "lineno": 64
  },
  "type": "class"
 },
 "nilearn.input_data.nifti_masker.NiftiMasker.__init__": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "sklearn.externals.joblib.Memory"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.nifti_masker.NiftiMasker._check_fitted": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "ValueError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.nifti_masker.NiftiMasker.fit": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "ValueError",
    "max",
    "print"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.nifti_masker.NiftiMasker.transform_single_imgs": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "copy.copy",
    "get_params",
    "nilearn.input_data.nifti_masker.filter_and_mask"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.nifti_masker._ExtractionFunctor": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nilearn.input_data.nifti_masker._ExtractionFunctor.__call__": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "nilearn.input_data.nifti_masker._ExtractionFunctor.__init__": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "nilearn.input_data.nifti_masker._check_same_fov": {
  "data": {
   "shadows": "nilearn._utils.niimg_conversions._check_same_fov"
  },
  "type": "import"
 },
 "nilearn.input_data.nifti_masker.copy_object": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "nilearn.input_data.nifti_masker.filter_and_mask": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "copy.copy",
    "filter_and_extract",
    "nilearn._utils.niimg_conversions._check_same_fov",
    "nilearn.input_data.nifti_masker._ExtractionFunctor",
    "sklearn.externals.joblib.Memory"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.nifti_spheres_masker": {
  "data": {},
  "type": "module"
 },
 "nilearn.input_data.nifti_spheres_masker.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "nilearn.input_data.nifti_spheres_masker.Memory": {
  "data": {
   "shadows": "sklearn.externals.joblib.Memory"
  },
  "type": "import"
 },
 "nilearn.input_data.nifti_spheres_masker.NiftiSpheresMasker": {
  "data": {
   "lineno": 141
  },
  "type": "class"
 },
 "nilearn.input_data.nifti_spheres_masker.NiftiSpheresMasker.__init__": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "sklearn.externals.joblib.Memory"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.nifti_spheres_masker.NiftiSpheresMasker._check_fitted": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "ValueError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.nifti_spheres_masker.NiftiSpheresMasker.fit": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "hasattr",
    "isinstance",
    "len",
    "list",
    "numpy.ndarray",
    "type"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.nifti_spheres_masker.NiftiSpheresMasker.fit_transform": {
  "data": {
   "lineno": 273
  },
  "type": "function"
 },
 "nilearn.input_data.nifti_spheres_masker.NiftiSpheresMasker.transform_single_imgs": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "get_params",
    "nilearn.input_data.nifti_spheres_masker.NiftiSpheresMasker",
    "nilearn.input_data.nifti_spheres_masker._ExtractionFunctor"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.nifti_spheres_masker._ExtractionFunctor": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nilearn.input_data.nifti_spheres_masker._ExtractionFunctor.__call__": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "check_niimg_4d",
    "enumerate",
    "len",
    "nilearn.input_data.nifti_spheres_masker._iter_signals_from_spheres",
    "numpy.empty",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.nifti_spheres_masker._ExtractionFunctor.__init__": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "nilearn.input_data.nifti_spheres_masker._apply_mask_and_get_affinity": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ValueError",
    "check_niimg_3d",
    "coord_transform",
    "distutils.version.LooseVersion",
    "enumerate",
    "int",
    "list",
    "nilearn.input_data.nifti_spheres_masker.sklearn",
    "numpy.any",
    "numpy.asarray",
    "numpy.linalg.inv",
    "numpy.ndindex",
    "numpy.round",
    "numpy.where",
    "sklearn.neighbors.NearestNeighbors",
    "zip"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.nifti_spheres_masker._iter_signals_from_spheres": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "nilearn.input_data.nifti_spheres_masker._apply_mask_and_get_affinity"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.nifti_spheres_masker.neighbors": {
  "data": {
   "shadows": "sklearn.neighbors"
  },
  "type": "import"
 },
 "nilearn.input_data.nifti_spheres_masker.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.input_data.nifti_spheres_masker.sklearn": {
  "data": {
   "shadows": "sklearn"
  },
  "type": "import"
 },
 "nilearn.input_data.tests": {
  "data": {},
  "type": "module"
 },
 "nilearn.input_data.tests.test_base_masker": {
  "data": {},
  "type": "module"
 },
 "nilearn.input_data.tests.test_base_masker.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_base_masker.filter_and_mask": {
  "data": {
   "shadows": "nilearn.input_data.nifti_masker.filter_and_mask"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_base_masker.image": {
  "data": {
   "shadows": "nilearn.image"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_base_masker.nibabel": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_base_masker.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_base_masker.test_cropping_code_paths": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "int",
    "nilearn.image.crop_img",
    "nilearn.input_data.nifti_masker.filter_and_mask",
    "nilearn.input_data.tests.test_base_masker.nibabel",
    "numpy.eye",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.tests.test_masker_validation": {
  "data": {},
  "type": "module"
 },
 "nilearn.input_data.tests.test_masker_validation.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_masker_validation.Memory": {
  "data": {
   "shadows": "sklearn.externals.joblib.Memory"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_masker_validation.MultiNiftiMasker": {
  "data": {
   "shadows": "nilearn.input_data.MultiNiftiMasker"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_masker_validation.NiftiMasker": {
  "data": {
   "shadows": "nilearn.input_data.NiftiMasker"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_masker_validation.OwningClass": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "nilearn.input_data.tests.test_masker_validation.OwningClass.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "sklearn.externals.joblib.Memory"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.tests.test_masker_validation.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_masker_validation.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_masker_validation.assert_warns": {
  "data": {
   "shadows": "nilearn._utils.testing.assert_warns"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_masker_validation.check_embedded_nifti_masker": {
  "data": {
   "shadows": "nilearn.input_data.masker_validation.check_embedded_nifti_masker"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_masker_validation.nibabel": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_masker_validation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_masker_validation.test_check_embedded_nifti_masker": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "UserWarning",
    "getattr",
    "nilearn._utils.testing.assert_warns",
    "nilearn.input_data.MultiNiftiMasker",
    "nilearn.input_data.NiftiMasker",
    "nilearn.input_data.masker_validation.check_embedded_nifti_masker",
    "nilearn.input_data.tests.test_masker_validation.OwningClass",
    "nilearn.input_data.tests.test_masker_validation.nibabel",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.eye",
    "numpy.int8",
    "numpy.ones",
    "numpy.zeros",
    "type"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.tests.test_multi_nifti_masker": {
  "data": {},
  "type": "module"
 },
 "nilearn.input_data.tests.test_multi_nifti_masker.DimensionError": {
  "data": {
   "shadows": "nilearn._utils.exceptions.DimensionError"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_multi_nifti_masker.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_multi_nifti_masker.MultiNiftiMasker": {
  "data": {
   "shadows": "nilearn.input_data.multi_nifti_masker.MultiNiftiMasker"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_multi_nifti_masker.Nifti1Image": {
  "data": {
   "shadows": "nibabel.Nifti1Image"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_multi_nifti_masker.SkipTest": {
  "data": {
   "shadows": "nose.SkipTest"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_multi_nifti_masker.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_multi_nifti_masker.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_multi_nifti_masker.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_multi_nifti_masker.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_multi_nifti_masker.assert_raises_regex": {
  "data": {
   "shadows": "nilearn._utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_multi_nifti_masker.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_multi_nifti_masker.hash": {
  "data": {
   "shadows": "sklearn.externals.joblib.hash"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_multi_nifti_masker.nibabel": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_multi_nifti_masker.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_multi_nifti_masker.test_3d_images": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "len",
    "nibabel.Nifti1Image",
    "nilearn._utils.exceptions.DimensionError",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn.input_data.multi_nifti_masker.MultiNiftiMasker",
    "nose.tools.assert_equal",
    "numpy.diag",
    "numpy.int8",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.tests.test_multi_nifti_masker.test_auto_mask": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "nibabel.Nifti1Image",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn.input_data.multi_nifti_masker.MultiNiftiMasker",
    "nose.tools.assert_raises",
    "numpy.eye",
    "numpy.logical_or",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.tests.test_multi_nifti_masker.test_different_affines": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "nibabel.Nifti1Image",
    "nilearn.input_data.multi_nifti_masker.MultiNiftiMasker",
    "numpy.diag",
    "numpy.int8",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.tests.test_multi_nifti_masker.test_joblib_cache": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "nibabel.Nifti1Image",
    "nilearn._utils.testing.write_tmp_imgs",
    "nilearn.input_data.multi_nifti_masker.MultiNiftiMasker",
    "nilearn.input_data.tests.test_multi_nifti_masker.nibabel",
    "nose.SkipTest",
    "nose.tools.assert_true",
    "numpy.eye",
    "numpy.zeros",
    "sklearn.externals.joblib.hash"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.tests.test_multi_nifti_masker.test_nan": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "dict",
    "nibabel.Nifti1Image",
    "nilearn.input_data.multi_nifti_masker.MultiNiftiMasker",
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "numpy.eye",
    "numpy.nan",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.tests.test_multi_nifti_masker.write_tmp_imgs": {
  "data": {
   "shadows": "nilearn._utils.testing.write_tmp_imgs"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_nifti_labels_masker": {
  "data": {},
  "type": "module"
 },
 "nilearn.input_data.tests.test_nifti_labels_masker.DimensionError": {
  "data": {
   "shadows": "nilearn._utils.exceptions.DimensionError"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_nifti_labels_masker.NiftiLabelsMasker": {
  "data": {
   "shadows": "nilearn.input_data.nifti_labels_masker.NiftiLabelsMasker"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_nifti_labels_masker.as_ndarray": {
  "data": {
   "shadows": "nilearn._utils.as_ndarray"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_nifti_labels_masker.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_nifti_labels_masker.assert_less": {
  "data": {
   "shadows": "nilearn._utils.testing.assert_less"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_nifti_labels_masker.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_nifti_labels_masker.generate_random_img": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "nilearn._utils.as_ndarray",
    "nilearn.input_data.tests.test_nifti_labels_masker.nibabel",
    "numpy.eye",
    "numpy.int8",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.tests.test_nifti_labels_masker.nibabel": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_nifti_labels_masker.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_nifti_labels_masker.test_nifti_labels_masker": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ValueError",
    "nilearn._utils.exceptions.DimensionError",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn._utils.testing.generate_labeled_regions",
    "nilearn.input_data.nifti_labels_masker.NiftiLabelsMasker",
    "nilearn.input_data.tests.test_nifti_labels_masker.generate_random_img",
    "nilearn.input_data.tests.test_nifti_labels_masker.nibabel",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.diag",
    "numpy.eye",
    "numpy.int8",
    "numpy.ones",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.tests.test_nifti_labels_masker.test_nifti_labels_masker_resampling": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "nilearn._utils.testing.assert_less",
    "nilearn._utils.testing.generate_labeled_regions",
    "nilearn._utils.testing.write_tmp_imgs",
    "nilearn.input_data.nifti_labels_masker.NiftiLabelsMasker",
    "nilearn.input_data.tests.test_nifti_labels_masker.generate_random_img",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.eye",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.tests.test_nifti_labels_masker.testing": {
  "data": {
   "shadows": "nilearn._utils.testing"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_nifti_maps_masker": {
  "data": {},
  "type": "module"
 },
 "nilearn.input_data.tests.test_nifti_maps_masker.DimensionError": {
  "data": {
   "shadows": "nilearn._utils.exceptions.DimensionError"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_nifti_maps_masker.NiftiMapsMasker": {
  "data": {
   "shadows": "nilearn.input_data.nifti_maps_masker.NiftiMapsMasker"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_nifti_maps_masker.as_ndarray": {
  "data": {
   "shadows": "nilearn._utils.as_ndarray"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_nifti_maps_masker.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_nifti_maps_masker.assert_less": {
  "data": {
   "shadows": "nilearn._utils.testing.assert_less"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_nifti_maps_masker.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_nifti_maps_masker.assert_raises_regex": {
  "data": {
   "shadows": "nilearn._utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_nifti_maps_masker.generate_random_img": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "nilearn._utils.as_ndarray",
    "nilearn.input_data.tests.test_nifti_maps_masker.nibabel",
    "numpy.eye",
    "numpy.int8",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.tests.test_nifti_maps_masker.nibabel": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_nifti_maps_masker.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_nifti_maps_masker.test_nifti_maps_masker": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ValueError",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn._utils.testing.generate_maps",
    "nilearn._utils.testing.write_tmp_imgs",
    "nilearn.input_data.nifti_maps_masker.NiftiMapsMasker",
    "nilearn.input_data.tests.test_nifti_maps_masker.generate_random_img",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.diag",
    "numpy.eye",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.tests.test_nifti_maps_masker.test_nifti_maps_masker_2": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "ValueError",
    "nilearn._utils.exceptions.DimensionError",
    "nilearn._utils.testing.assert_less",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn._utils.testing.generate_fake_fmri",
    "nilearn._utils.testing.generate_maps",
    "nilearn.input_data.nifti_maps_masker.NiftiMapsMasker",
    "nilearn.input_data.tests.test_nifti_maps_masker.generate_random_img",
    "nilearn.input_data.tests.test_nifti_maps_masker.nibabel",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.diag",
    "numpy.eye",
    "numpy.int8",
    "numpy.ones",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.tests.test_nifti_maps_masker.test_nifti_maps_masker_overlap": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "ValueError",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn.input_data.nifti_maps_masker.NiftiMapsMasker",
    "nilearn.input_data.tests.test_nifti_maps_masker.generate_random_img",
    "nilearn.input_data.tests.test_nifti_maps_masker.nibabel",
    "numpy.eye",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.tests.test_nifti_maps_masker.testing": {
  "data": {
   "shadows": "nilearn._utils.testing"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_nifti_masker": {
  "data": {},
  "type": "module"
 },
 "nilearn.input_data.tests.test_nifti_masker.DimensionError": {
  "data": {
   "shadows": "nilearn._utils.exceptions.DimensionError"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_nifti_masker.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_nifti_masker.Memory": {
  "data": {
   "shadows": "sklearn.externals.joblib.Memory"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_nifti_masker.Nifti1Image": {
  "data": {
   "shadows": "nibabel.Nifti1Image"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_nifti_masker.NiftiMasker": {
  "data": {
   "shadows": "nilearn.input_data.nifti_masker.NiftiMasker"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_nifti_masker.SkipTest": {
  "data": {
   "shadows": "nose.SkipTest"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_nifti_masker.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_nifti_masker.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_nifti_masker.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_nifti_masker.assert_raises_regex": {
  "data": {
   "shadows": "nilearn._utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_nifti_masker.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_nifti_masker.filter_and_mask": {
  "data": {
   "shadows": "nilearn.input_data.nifti_masker.filter_and_mask"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_nifti_masker.get_params": {
  "data": {
   "shadows": "nilearn._utils.class_inspect.get_params"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_nifti_masker.hash": {
  "data": {
   "shadows": "sklearn.externals.joblib.hash"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_nifti_masker.index_img": {
  "data": {
   "shadows": "nilearn.image.index_img"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_nifti_masker.mkdtemp": {
  "data": {
   "shadows": "tempfile.mkdtemp"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_nifti_masker.nibabel": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_nifti_masker.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_nifti_masker.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_nifti_masker.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_nifti_masker.test_4d_single_scan": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "nibabel.Nifti1Image",
    "nilearn.input_data.nifti_masker.NiftiMasker",
    "nilearn.input_data.tests.test_nifti_masker.nibabel",
    "numpy.eye",
    "numpy.random.random",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.tests.test_nifti_masker.test_5d": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "nibabel.Nifti1Image",
    "nilearn._utils.exceptions.DimensionError",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn.input_data.nifti_masker.NiftiMasker",
    "nilearn.input_data.tests.test_nifti_masker.nibabel",
    "numpy.eye",
    "numpy.random.random",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.tests.test_nifti_masker.test_auto_mask": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ValueError",
    "nibabel.Nifti1Image",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn.input_data.nifti_masker.NiftiMasker",
    "numpy.eye",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.tests.test_nifti_masker.test_compute_epi_mask": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "dict",
    "float",
    "nibabel.Nifti1Image",
    "nilearn.input_data.nifti_masker.NiftiMasker",
    "nose.tools.assert_false",
    "numpy.allclose",
    "numpy.eye",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.tests.test_nifti_masker.test_detrend": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "nibabel.Nifti1Image",
    "nilearn.input_data.nifti_masker.NiftiMasker",
    "nose.tools.assert_true",
    "numpy.any",
    "numpy.eye",
    "numpy.int",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.tests.test_nifti_masker.test_filter_and_mask": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "nilearn._utils.class_inspect.get_params",
    "nilearn._utils.exceptions.DimensionError",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn.input_data.nifti_masker.NiftiMasker",
    "nilearn.input_data.nifti_masker.filter_and_mask",
    "nilearn.input_data.tests.test_nifti_masker.nibabel",
    "numpy.eye",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.tests.test_nifti_masker.test_joblib_cache": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "nibabel.Nifti1Image",
    "nilearn._utils.testing.write_tmp_imgs",
    "nilearn.input_data.nifti_masker.NiftiMasker",
    "nilearn.input_data.tests.test_nifti_masker.nibabel",
    "nilearn.input_data.tests.test_nifti_masker.os",
    "nilearn.input_data.tests.test_nifti_masker.shutil",
    "nose.SkipTest",
    "nose.tools.assert_true",
    "numpy.eye",
    "numpy.zeros",
    "sklearn.externals.joblib.Memory",
    "sklearn.externals.joblib.hash",
    "tempfile.mkdtemp"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.tests.test_nifti_masker.test_mask_3d": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "TypeError",
    "nibabel.Nifti1Image",
    "nilearn._utils.testing.write_tmp_imgs",
    "nilearn.input_data.nifti_masker.NiftiMasker",
    "nose.tools.assert_raises",
    "numpy.eye",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.tests.test_nifti_masker.test_mask_4d": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "bool",
    "int",
    "nibabel.Nifti1Image",
    "nilearn.image.index_img",
    "nilearn.input_data.nifti_masker.NiftiMasker",
    "numpy.array",
    "numpy.eye",
    "numpy.swapaxes",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.tests.test_nifti_masker.test_mask_init_errors": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "ValueError",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn.input_data.nifti_masker.NiftiMasker"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.tests.test_nifti_masker.test_matrix_orientation": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "nilearn._utils.testing.generate_fake_fmri",
    "nilearn.input_data.nifti_masker.NiftiMasker",
    "numpy.any",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.tests.test_nifti_masker.test_nan": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "dict",
    "nibabel.Nifti1Image",
    "nilearn.input_data.nifti_masker.NiftiMasker",
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "numpy.eye",
    "numpy.nan",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.tests.test_nifti_masker.test_sessions": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "ValueError",
    "nibabel.Nifti1Image",
    "nilearn.input_data.nifti_masker.NiftiMasker",
    "nose.tools.assert_raises",
    "numpy.eye",
    "numpy.int",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.tests.test_nifti_masker.test_with_files": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "nibabel.Nifti1Image",
    "nilearn._utils.testing.write_tmp_imgs",
    "nilearn.input_data.nifti_masker.NiftiMasker",
    "numpy.eye",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.tests.test_nifti_masker.testing": {
  "data": {
   "shadows": "nilearn._utils.testing"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_nifti_spheres_masker": {
  "data": {},
  "type": "module"
 },
 "nilearn.input_data.tests.test_nifti_spheres_masker.NiftiSpheresMasker": {
  "data": {
   "shadows": "nilearn.input_data.NiftiSpheresMasker"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_nifti_spheres_masker.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_nifti_spheres_masker.assert_raises_regex": {
  "data": {
   "shadows": "nilearn._utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_nifti_spheres_masker.nibabel": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_nifti_spheres_masker.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.input_data.tests.test_nifti_spheres_masker.test_anisotropic_sphere_extraction": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "nilearn.input_data.NiftiSpheresMasker",
    "nilearn.input_data.tests.test_nifti_spheres_masker.nibabel",
    "numpy.bool",
    "numpy.eye",
    "numpy.mean",
    "numpy.random.random",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.tests.test_nifti_spheres_masker.test_errors": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "ValueError",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn.input_data.NiftiSpheresMasker"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.tests.test_nifti_spheres_masker.test_nifti_spheres_masker_overlap": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "ValueError",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn.input_data.NiftiSpheresMasker",
    "nilearn.input_data.tests.test_nifti_spheres_masker.nibabel",
    "numpy.eye",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.tests.test_nifti_spheres_masker.test_seed_extraction": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "nilearn.input_data.NiftiSpheresMasker",
    "nilearn.input_data.tests.test_nifti_spheres_masker.nibabel",
    "numpy.eye",
    "numpy.random.random",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.tests.test_nifti_spheres_masker.test_small_radius": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ValueError",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn.input_data.NiftiSpheresMasker",
    "nilearn.input_data.tests.test_nifti_spheres_masker.nibabel",
    "numpy.eye",
    "numpy.random.random",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.input_data.tests.test_nifti_spheres_masker.test_sphere_extraction": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "nilearn.input_data.NiftiSpheresMasker",
    "nilearn.input_data.tests.test_nifti_spheres_masker.nibabel",
    "numpy.bool",
    "numpy.eye",
    "numpy.logical_and",
    "numpy.mean",
    "numpy.random.random",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.masking": {
  "data": {
   "symbols_in_volume": [
    "nilearn.masking.MaskWarning",
    "nilearn.masking.warnings"
   ]
  },
  "type": "module"
 },
 "nilearn.masking.MaskWarning": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "nilearn.masking.Parallel": {
  "data": {
   "shadows": "sklearn.externals.joblib.Parallel"
  },
  "type": "import"
 },
 "nilearn.masking._apply_mask_fmri": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "ValueError",
    "_safe_get_data",
    "_smooth_array",
    "numpy.allclose",
    "numpy.bool",
    "numpy.float32",
    "str"
   ]
  },
  "type": "function"
 },
 "nilearn.masking._extrapolate_out_mask": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.bool",
    "numpy.isfinite",
    "numpy.logical_not",
    "numpy.nan",
    "numpy.nansum",
    "numpy.sum",
    "numpy.where",
    "numpy.zeros",
    "numpy.zeros_like",
    "scipy.ndimage.binary_dilation"
   ]
  },
  "type": "function"
 },
 "nilearn.masking._load_mask_img": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "len",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "nilearn.masking._post_process_mask": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "int",
    "largest_connected_component",
    "nilearn.masking.MaskWarning",
    "nilearn.masking.warnings",
    "scipy.ndimage.binary_dilation",
    "scipy.ndimage.binary_erosion"
   ]
  },
  "type": "function"
 },
 "nilearn.masking._unmask_3d": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "TypeError",
    "numpy.bool",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.masking._unmask_4d": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "TypeError",
    "numpy.bool",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.masking.apply_mask": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "_apply_mask_fmri",
    "new_img_like",
    "nilearn.masking._load_mask_img"
   ]
  },
  "type": "function"
 },
 "nilearn.masking.compute_background_mask": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "cache",
    "get_border_data",
    "new_img_like",
    "nilearn.masking._post_process_mask",
    "numpy.isnan",
    "numpy.logical_not",
    "numpy.median",
    "print"
   ]
  },
  "type": "function"
 },
 "nilearn.masking.compute_epi_mask": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "cache",
    "int",
    "len",
    "min",
    "new_img_like",
    "nilearn.masking._post_process_mask",
    "numpy.floor",
    "numpy.isfinite",
    "numpy.logical_not",
    "numpy.ravel",
    "numpy.sort",
    "print"
   ]
  },
  "type": "function"
 },
 "nilearn.masking.compute_multi_background_mask": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "nilearn.masking.compute_background_mask",
    "nilearn.masking.intersect_masks",
    "sklearn.externals.joblib.Parallel",
    "sklearn.externals.joblib.delayed"
   ]
  },
  "type": "function"
 },
 "nilearn.masking.compute_multi_epi_mask": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "nilearn.masking.compute_epi_mask",
    "nilearn.masking.intersect_masks",
    "sklearn.externals.joblib.Parallel",
    "sklearn.externals.joblib.delayed"
   ]
  },
  "type": "function"
 },
 "nilearn.masking.delayed": {
  "data": {
   "shadows": "sklearn.externals.joblib.delayed"
  },
  "type": "import"
 },
 "nilearn.masking.intersect_masks": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "largest_connected_component",
    "len",
    "list",
    "min",
    "new_img_like",
    "nilearn.masking._load_mask_img",
    "numpy.any",
    "numpy.int8"
   ]
  },
  "type": "function"
 },
 "nilearn.masking.ndimage": {
  "data": {
   "shadows": "scipy.ndimage"
  },
  "type": "import"
 },
 "nilearn.masking.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.masking.unmask": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "list",
    "new_img_like",
    "nilearn.masking._load_mask_img",
    "nilearn.masking._unmask_3d",
    "nilearn.masking._unmask_4d",
    "str"
   ]
  },
  "type": "function"
 },
 "nilearn.masking.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nilearn.mass_univariate": {
  "data": {},
  "type": "module"
 },
 "nilearn.mass_univariate.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "nilearn.mass_univariate.permuted_least_squares": {
  "data": {},
  "type": "module"
 },
 "nilearn.mass_univariate.permuted_least_squares._permuted_ols_on_chunk": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "nilearn.mass_univariate.permuted_least_squares._t_score_with_covars_and_normalized_design",
    "numpy.amax",
    "numpy.asfortranarray",
    "numpy.empty",
    "numpy.fabs",
    "numpy.zeros",
    "range",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "nilearn.mass_univariate.permuted_least_squares._t_score_with_covars_and_normalized_design": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nilearn.mass_univariate.permuted_least_squares.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "nilearn.mass_univariate.permuted_least_squares.joblib": {
  "data": {
   "shadows": "sklearn.externals.joblib"
  },
  "type": "import"
 },
 "nilearn.mass_univariate.permuted_least_squares.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "nilearn.mass_univariate.permuted_least_squares.normalize_matrix_on_axis": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ValueError",
    "numpy.newaxis.T",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nilearn.mass_univariate.permuted_least_squares.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.mass_univariate.permuted_least_squares.orthonormalize_matrix": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "numpy.ascontiguousarray",
    "numpy.count_nonzero",
    "scipy.linalg.svd"
   ]
  },
  "type": "function"
 },
 "nilearn.mass_univariate.permuted_least_squares.permuted_ols": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "max",
    "min",
    "nilearn.mass_univariate.permuted_least_squares._permuted_ols_on_chunk",
    "nilearn.mass_univariate.permuted_least_squares._t_score_with_covars_and_normalized_design",
    "nilearn.mass_univariate.permuted_least_squares.normalize_matrix_on_axis",
    "nilearn.mass_univariate.permuted_least_squares.orthonormalize_matrix",
    "nilearn.mass_univariate.permuted_least_squares.warnings",
    "numpy.asarray",
    "numpy.ascontiguousarray",
    "numpy.asfortranarray",
    "numpy.atleast_2d",
    "numpy.dot",
    "numpy.fabs",
    "numpy.hstack",
    "numpy.iinfo",
    "numpy.int32",
    "numpy.log10",
    "numpy.ones",
    "numpy.sign",
    "numpy.unique",
    "numpy.zeros",
    "sklearn.externals.joblib.Parallel",
    "sklearn.externals.joblib.cpu_count",
    "sklearn.externals.joblib.delayed",
    "sklearn.utils.check_random_state",
    "zip"
   ]
  },
  "type": "function"
 },
 "nilearn.mass_univariate.permuted_least_squares.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nilearn.mass_univariate.tests": {
  "data": {},
  "type": "module"
 },
 "nilearn.mass_univariate.tests.test_permuted_least_squares": {
  "data": {},
  "type": "module"
 },
 "nilearn.mass_univariate.tests.test_permuted_least_squares.OLS": {
  "data": {
   "shadows": "statsmodels.regression.linear_model.OLS"
  },
  "type": "import"
 },
 "nilearn.mass_univariate.tests.test_permuted_least_squares._t_score_with_covars_and_normalized_design": {
  "data": {
   "shadows": "nilearn.mass_univariate.permuted_least_squares._t_score_with_covars_and_normalized_design"
  },
  "type": "import"
 },
 "nilearn.mass_univariate.tests.test_permuted_least_squares.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "nilearn.mass_univariate.tests.test_permuted_least_squares.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "nilearn.mass_univariate.tests.test_permuted_least_squares.assert_array_less": {
  "data": {
   "shadows": "numpy.testing.assert_array_less"
  },
  "type": "import"
 },
 "nilearn.mass_univariate.tests.test_permuted_least_squares.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "nilearn.mass_univariate.tests.test_permuted_least_squares.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "nilearn.mass_univariate.tests.test_permuted_least_squares.get_tvalue_with_alternative_library": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "bool",
    "float",
    "numpy.array",
    "numpy.diag",
    "numpy.dot",
    "numpy.empty",
    "numpy.hstack",
    "numpy.linalg.lstsq",
    "numpy.linalg.pinv",
    "numpy.ones",
    "numpy.ravel",
    "numpy.sqrt",
    "numpy.sum",
    "range",
    "statsmodels.regression.linear_model.OLS"
   ]
  },
  "type": "function"
 },
 "nilearn.mass_univariate.tests.test_permuted_least_squares.linalg": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "nilearn.mass_univariate.tests.test_permuted_least_squares.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.mass_univariate.tests.test_permuted_least_squares.orthonormalize_matrix": {
  "data": {
   "shadows": "nilearn.mass_univariate.permuted_least_squares.orthonormalize_matrix"
  },
  "type": "import"
 },
 "nilearn.mass_univariate.tests.test_permuted_least_squares.permuted_ols": {
  "data": {
   "shadows": "nilearn.mass_univariate.permuted_ols"
  },
  "type": "import"
 },
 "nilearn.mass_univariate.tests.test_permuted_least_squares.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "nilearn.mass_univariate.tests.test_permuted_least_squares.test_permuted_ols_check_h0_noeffect_labelswap": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "nilearn.mass_univariate.permuted_ols",
    "numpy.arange",
    "numpy.array",
    "numpy.diff",
    "numpy.linspace",
    "numpy.mean",
    "numpy.repeat",
    "numpy.sort",
    "numpy.testing.assert_array_less",
    "numpy.testing.assert_equal",
    "scipy.stats.kstest",
    "scipy.stats.t",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "nilearn.mass_univariate.tests.test_permuted_least_squares.test_permuted_ols_check_h0_noeffect_signswap": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "nilearn.mass_univariate.permuted_ols",
    "numpy.array",
    "numpy.diff",
    "numpy.linspace",
    "numpy.mean",
    "numpy.ones",
    "numpy.repeat",
    "numpy.sort",
    "numpy.testing.assert_array_less",
    "numpy.testing.assert_equal",
    "scipy.stats.kstest",
    "scipy.stats.t",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "nilearn.mass_univariate.tests.test_permuted_least_squares.test_permuted_ols_intercept_nocovar": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "nilearn.mass_univariate.permuted_ols",
    "nilearn.mass_univariate.tests.test_permuted_least_squares.get_tvalue_with_alternative_library",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_less",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "nilearn.mass_univariate.tests.test_permuted_least_squares.test_permuted_ols_intercept_nocovar_multivariate": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "nilearn.mass_univariate.permuted_ols",
    "nilearn.mass_univariate.tests.test_permuted_least_squares.get_tvalue_with_alternative_library",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "nilearn.mass_univariate.tests.test_permuted_least_squares.test_permuted_ols_intercept_statsmodels_withcovar": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "nilearn.mass_univariate.permuted_ols",
    "nilearn.mass_univariate.tests.test_permuted_least_squares.get_tvalue_with_alternative_library",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "nilearn.mass_univariate.tests.test_permuted_least_squares.test_permuted_ols_intercept_withcovar_multivariate": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "nilearn.mass_univariate.permuted_ols",
    "nilearn.mass_univariate.tests.test_permuted_least_squares.get_tvalue_with_alternative_library",
    "numpy.ones",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "nilearn.mass_univariate.tests.test_permuted_least_squares.test_permuted_ols_nocovar": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "nilearn.mass_univariate.permuted_ols",
    "nilearn.mass_univariate.tests.test_permuted_least_squares.get_tvalue_with_alternative_library",
    "numpy.ones",
    "numpy.ravel",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "nilearn.mass_univariate.tests.test_permuted_least_squares.test_permuted_ols_nocovar_multivariate": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "nilearn.mass_univariate.permuted_ols",
    "nilearn.mass_univariate.tests.test_permuted_least_squares.get_tvalue_with_alternative_library",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "nilearn.mass_univariate.tests.test_permuted_least_squares.test_permuted_ols_withcovar": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "nilearn.mass_univariate.permuted_ols",
    "nilearn.mass_univariate.tests.test_permuted_least_squares.get_tvalue_with_alternative_library",
    "numpy.hstack",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "nilearn.mass_univariate.tests.test_permuted_least_squares.test_permuted_ols_withcovar_multivariate": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "nilearn.mass_univariate.permuted_ols",
    "nilearn.mass_univariate.tests.test_permuted_least_squares.get_tvalue_with_alternative_library",
    "numpy.hstack",
    "numpy.ones",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "nilearn.mass_univariate.tests.test_permuted_least_squares.test_sided_test": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "nilearn.mass_univariate.permuted_ols",
    "numpy.sum",
    "numpy.testing.assert_equal",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "nilearn.mass_univariate.tests.test_permuted_least_squares.test_sided_test2": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "nilearn.mass_univariate.permuted_ols",
    "numpy.arange",
    "numpy.hstack",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "nilearn.mass_univariate.tests.test_permuted_least_squares.test_t_score_with_covars_and_normalized_design_nocovar": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "nilearn.mass_univariate.permuted_least_squares._t_score_with_covars_and_normalized_design",
    "nilearn.mass_univariate.tests.test_permuted_least_squares.get_tvalue_with_alternative_library",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "nilearn.mass_univariate.tests.test_permuted_least_squares.test_t_score_with_covars_and_normalized_design_withcovar": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "nilearn.mass_univariate.permuted_least_squares._t_score_with_covars_and_normalized_design",
    "nilearn.mass_univariate.permuted_least_squares.orthonormalize_matrix",
    "nilearn.mass_univariate.tests.test_permuted_least_squares.get_tvalue_with_alternative_library",
    "numpy.eye",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting": {
  "data": {
   "symbols_in_volume": [
    "nilearn.plotting._set_mpl_backend"
   ]
  },
  "type": "module"
 },
 "nilearn.plotting.__all__": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "nilearn.plotting._set_mpl_backend": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "ImportError",
    "_import_module_with_version_check",
    "nilearn.plotting.matplotlib",
    "nilearn.plotting.os",
    "nilearn.plotting.sys",
    "skip_if_running_nose"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.cm": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "hasattr",
    "list",
    "locals",
    "matplotlib.cm",
    "matplotlib.cm.Blues_r",
    "matplotlib.cm.Greens_r",
    "matplotlib.cm.LUTSIZE",
    "matplotlib.cm.Oranges_r",
    "matplotlib.cm.Reds_r",
    "matplotlib.cm.YlOrBr_r",
    "matplotlib.cm.afmhot",
    "matplotlib.cm.afmhot_r",
    "matplotlib.cm.bone",
    "matplotlib.cm.bone_r",
    "matplotlib.cm.copper",
    "matplotlib.cm.hot",
    "matplotlib.cm.hot._segmentdata.copy",
    "matplotlib.cm.hot_r",
    "matplotlib.cm.ocean",
    "matplotlib.cm.revcmap",
    "matplotlib.colors.LinearSegmentedColormap",
    "matplotlib.colors.LinearSegmentedColormap.from_list",
    "nilearn.plotting.cm._bwr_data",
    "nilearn.plotting.cm._cmap_d",
    "nilearn.plotting.cm._cmapname_r",
    "nilearn.plotting.cm._cmaps_data",
    "nilearn.plotting.cm._cmapspec",
    "nilearn.plotting.cm._concat_cmap",
    "nilearn.plotting.cm._pigtailed_cmap",
    "nilearn.plotting.cm._rotate_cmap",
    "nilearn.plotting.cm.alpha_cmap"
   ]
  },
  "type": "module"
 },
 "nilearn.plotting.cm._bwr_data": {
  "data": {
   "lineno": 148
  },
  "type": "constant"
 },
 "nilearn.plotting.cm._cm": {
  "data": {
   "shadows": "matplotlib.cm"
  },
  "type": "import"
 },
 "nilearn.plotting.cm._cmap_d": {
  "data": {
   "lineno": 154
  },
  "type": "constant"
 },
 "nilearn.plotting.cm._cmapname_r": {
  "data": {
   "lineno": 157
  },
  "type": "constant"
 },
 "nilearn.plotting.cm._cmaps_data": {
  "data": {
   "lineno": 116
  },
  "type": "constant"
 },
 "nilearn.plotting.cm._cmapspec": {
  "data": {
   "lineno": 158
  },
  "type": "constant"
 },
 "nilearn.plotting.cm._colors": {
  "data": {
   "shadows": "matplotlib.colors"
  },
  "type": "import"
 },
 "nilearn.plotting.cm._concat_cmap": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "cmap1",
    "cmap2",
    "dict",
    "hasattr",
    "matplotlib.colors",
    "numpy.linspace",
    "zip"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.cm._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.plotting.cm._pigtailed_cmap": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "dict",
    "reversed"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.cm._rotate_cmap": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.cm.alpha_cmap": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "hasattr",
    "matplotlib.cm.LUTSIZE",
    "matplotlib.colors.LinearSegmentedColormap.from_list",
    "matplotlib.colors.colorConverter.to_rgb",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.cm.dim_cmap": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "ValueError",
    "dimmer",
    "enumerate",
    "list",
    "matplotlib.cm.LUTSIZE",
    "matplotlib.colors.LinearSegmentedColormap"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.cm.replace_inside": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "ValueError",
    "cmap",
    "dict",
    "enumerate",
    "hasattr",
    "inner_cmap",
    "inner_cmap.name",
    "list",
    "matplotlib.cm.LUTSIZE",
    "matplotlib.colors",
    "matplotlib.colors.LinearSegmentedColormap",
    "numpy.linspace",
    "outer_cmap",
    "outer_cmap.name",
    "zip"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.displays": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "nilearn.plotting.displays.OrthoProjector",
    "nilearn.plotting.displays.OrthoSlicer",
    "nilearn.plotting.displays.XProjector",
    "nilearn.plotting.displays.XSlicer",
    "nilearn.plotting.displays.XZProjector",
    "nilearn.plotting.displays.XZSlicer",
    "nilearn.plotting.displays.YProjector",
    "nilearn.plotting.displays.YSlicer",
    "nilearn.plotting.displays.YXProjector",
    "nilearn.plotting.displays.YXSlicer",
    "nilearn.plotting.displays.YZProjector",
    "nilearn.plotting.displays.YZSlicer",
    "nilearn.plotting.displays.ZProjector",
    "nilearn.plotting.displays.ZSlicer"
   ]
  },
  "type": "module"
 },
 "nilearn.plotting.displays.BaseAxes": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nilearn.plotting.displays.BaseAxes.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.displays.BaseAxes.add_object_bounds": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "nilearn.plotting.displays.BaseAxes.draw_2d": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "type"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.displays.BaseAxes.draw_left_right": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.displays.BaseAxes.draw_position": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.displays.BaseAxes.get_object_bounds": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "len",
    "max",
    "min",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.displays.BaseAxes.transform_to_2d": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.displays.BaseSlicer": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "nilearn.plotting.displays.CutAxes",
    "object"
   ]
  },
  "type": "class"
 },
 "nilearn.plotting.displays.BaseSlicer.__init__": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "dict",
    "matplotlib.pyplot.axes"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.displays.BaseSlicer._map_show": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "IndexError",
    "float",
    "get_bounds",
    "get_mask_bounds",
    "hasattr",
    "isinstance",
    "new_img_like",
    "numpy.logical_not",
    "numpy.ma.masked_equal",
    "numpy.ma.masked_inside",
    "numpy.ma.max",
    "numpy.ma.min",
    "numpy.ndarray",
    "reorder_img",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.displays.BaseSlicer._show_colorbar": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "int",
    "len",
    "matplotlib.colorbar.ColorbarBase",
    "norm",
    "norm.vmax",
    "norm.vmin",
    "numpy.linspace",
    "our_cmap",
    "our_cmap.N",
    "our_cmap.from_list",
    "range"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.displays.BaseSlicer.add_contours": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "len",
    "matplotlib.colors",
    "matplotlib.pyplot.draw_if_interactive",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.displays.BaseSlicer.add_edges": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "IndexError",
    "_edge_map",
    "get_bounds",
    "matplotlib.colors.ListedColormap",
    "matplotlib.pyplot.draw_if_interactive",
    "reorder_img"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.displays.BaseSlicer.add_markers": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "nilearn.plotting.displays._coords_3d_to_2d",
    "numpy.abs",
    "numpy.asanyarray"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.displays.BaseSlicer.add_overlay": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "ValueError",
    "matplotlib.pyplot.draw_if_interactive"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.displays.BaseSlicer.annotate": {
  "data": {
   "lineno": 751
  },
  "type": "function"
 },
 "nilearn.plotting.displays.BaseSlicer.close": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": [
    "matplotlib.pyplot.close"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.displays.BaseSlicer.find_cut_coords": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "NotImplementedError",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.displays.BaseSlicer.init_with_figure": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "isinstance",
    "len",
    "matplotlib.pyplot.Axes",
    "matplotlib.pyplot.Figure",
    "matplotlib.pyplot.figure",
    "nilearn.plotting.displays.collections"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.displays.BaseSlicer.savefig": {
  "data": {
   "lineno": 791
  },
  "type": "function"
 },
 "nilearn.plotting.displays.BaseSlicer.title": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "dict",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.displays.BaseStackedSlicer": {
  "data": {
   "lineno": 980,
   "symbols_in_volume": [
    "nilearn.plotting.displays.BaseSlicer"
   ]
  },
  "type": "class"
 },
 "nilearn.plotting.displays.BaseStackedSlicer._init_axes": {
  "data": {
   "lineno": 1017,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "float",
    "len",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.displays.BaseStackedSlicer._locator": {
  "data": {
   "lineno": 1046,
   "symbols_in_volume": [
    "dict",
    "float",
    "len",
    "matplotlib.transforms.Bbox",
    "sorted",
    "sum"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.displays.BaseStackedSlicer.draw_cross": {
  "data": {
   "lineno": 1082
  },
  "type": "function"
 },
 "nilearn.plotting.displays.BaseStackedSlicer.find_cut_coords": {
  "data": {
   "lineno": 998,
   "symbols_in_volume": [
    "classmethod",
    "cls._direction",
    "find_cut_slices",
    "isinstance",
    "nilearn.plotting.displays.collections",
    "nilearn.plotting.displays.numbers",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.displays.ColorbarBase": {
  "data": {
   "shadows": "matplotlib.colorbar.ColorbarBase"
  },
  "type": "import"
 },
 "nilearn.plotting.displays.CutAxes": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "nilearn.plotting.displays.BaseAxes"
   ]
  },
  "type": "class"
 },
 "nilearn.plotting.displays.CutAxes.draw_position": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.displays.CutAxes.transform_to_2d": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "ValueError",
    "coord_transform",
    "int",
    "numpy.linalg.inv",
    "numpy.rot90",
    "numpy.round"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.displays.GlassBrainAxes": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "nilearn.plotting.displays.BaseAxes"
   ]
  },
  "type": "class"
 },
 "nilearn.plotting.displays.GlassBrainAxes.__init__": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "nilearn.plotting.displays.GlassBrainAxes",
    "super"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.displays.GlassBrainAxes._add_lines": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "abs_norm",
    "matplotlib.colors.Normalize",
    "matplotlib.lines.Line2D",
    "matplotlib.pyplot.cm.ScalarMappable",
    "nilearn.plotting.displays._coords_3d_to_2d",
    "numpy.abs",
    "value_to_color",
    "zip"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.displays.GlassBrainAxes._add_markers": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "nilearn.plotting.displays._coords_3d_to_2d"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.displays.GlassBrainAxes.draw_position": {
  "data": {
   "lineno": 261
  },
  "type": "function"
 },
 "nilearn.plotting.displays.GlassBrainAxes.transform_to_2d": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "list",
    "numpy.abs",
    "numpy.indices",
    "numpy.rot90"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.displays.OrthoProjector": {
  "data": {
   "lineno": 1133,
   "symbols_in_volume": [
    "nilearn.plotting.displays.GlassBrainAxes",
    "nilearn.plotting.displays.OrthoSlicer"
   ]
  },
  "type": "class"
 },
 "nilearn.plotting.displays.OrthoProjector.add_graph": {
  "data": {
   "lineno": 1148,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "len",
    "list",
    "matplotlib.cm.Set2",
    "matplotlib.cm.bwr",
    "matplotlib.pyplot.draw_if_interactive",
    "numpy.abs",
    "numpy.allclose",
    "numpy.asarray",
    "numpy.linspace",
    "numpy.nan_to_num",
    "numpy.tril",
    "numpy.tril_indices_from",
    "scipy.sparse.issparse",
    "scipy.stats.scoreatpercentile",
    "zip"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.displays.OrthoProjector.draw_cross": {
  "data": {
   "lineno": 1143
  },
  "type": "function"
 },
 "nilearn.plotting.displays.OrthoProjector.find_cut_coords": {
  "data": {
   "lineno": 1139,
   "symbols_in_volume": [
    "classmethod",
    "cls._cut_displayed",
    "len"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.displays.OrthoSlicer": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": [
    "nilearn.plotting.displays.BaseSlicer",
    "nilearn.plotting.displays.CutAxes"
   ]
  },
  "type": "class"
 },
 "nilearn.plotting.displays.OrthoSlicer._init_axes": {
  "data": {
   "lineno": 847,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "enumerate",
    "len",
    "numpy.zeros",
    "sorted"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.displays.OrthoSlicer._locator": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": [
    "dict",
    "float",
    "len",
    "matplotlib.transforms.Bbox",
    "sum"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.displays.OrthoSlicer.draw_cross": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "dict",
    "sorted"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.displays.OrthoSlicer.find_cut_coords": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "classmethod",
    "find_xyz_cut_coords",
    "sorted"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.displays.PROJECTORS": {
  "data": {
   "lineno": 1315
  },
  "type": "constant"
 },
 "nilearn.plotting.displays.SLICERS": {
  "data": {
   "lineno": 1124
  },
  "type": "constant"
 },
 "nilearn.plotting.displays.XProjector": {
  "data": {
   "lineno": 1288,
   "symbols_in_volume": [
    "nilearn.plotting.displays.OrthoProjector"
   ]
  },
  "type": "class"
 },
 "nilearn.plotting.displays.XSlicer": {
  "data": {
   "lineno": 1097,
   "symbols_in_volume": [
    "nilearn.plotting.displays.BaseStackedSlicer"
   ]
  },
  "type": "class"
 },
 "nilearn.plotting.displays.XZProjector": {
  "data": {
   "lineno": 1303,
   "symbols_in_volume": [
    "nilearn.plotting.displays.OrthoProjector"
   ]
  },
  "type": "class"
 },
 "nilearn.plotting.displays.XZSlicer": {
  "data": {
   "lineno": 1112,
   "symbols_in_volume": [
    "nilearn.plotting.displays.OrthoSlicer"
   ]
  },
  "type": "class"
 },
 "nilearn.plotting.displays.YProjector": {
  "data": {
   "lineno": 1293,
   "symbols_in_volume": [
    "nilearn.plotting.displays.OrthoProjector"
   ]
  },
  "type": "class"
 },
 "nilearn.plotting.displays.YSlicer": {
  "data": {
   "lineno": 1102,
   "symbols_in_volume": [
    "nilearn.plotting.displays.BaseStackedSlicer"
   ]
  },
  "type": "class"
 },
 "nilearn.plotting.displays.YXProjector": {
  "data": {
   "lineno": 1307,
   "symbols_in_volume": [
    "nilearn.plotting.displays.OrthoProjector"
   ]
  },
  "type": "class"
 },
 "nilearn.plotting.displays.YXSlicer": {
  "data": {
   "lineno": 1116,
   "symbols_in_volume": [
    "nilearn.plotting.displays.OrthoSlicer"
   ]
  },
  "type": "class"
 },
 "nilearn.plotting.displays.YZProjector": {
  "data": {
   "lineno": 1311,
   "symbols_in_volume": [
    "nilearn.plotting.displays.OrthoProjector"
   ]
  },
  "type": "class"
 },
 "nilearn.plotting.displays.YZSlicer": {
  "data": {
   "lineno": 1120,
   "symbols_in_volume": [
    "nilearn.plotting.displays.OrthoSlicer"
   ]
  },
  "type": "class"
 },
 "nilearn.plotting.displays.ZProjector": {
  "data": {
   "lineno": 1298,
   "symbols_in_volume": [
    "nilearn.plotting.displays.OrthoProjector"
   ]
  },
  "type": "class"
 },
 "nilearn.plotting.displays.ZSlicer": {
  "data": {
   "lineno": 1107,
   "symbols_in_volume": [
    "nilearn.plotting.displays.BaseStackedSlicer"
   ]
  },
  "type": "class"
 },
 "nilearn.plotting.displays._coords_3d_to_2d": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "nilearn.plotting.displays._get_index_from_direction"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.displays._get_index_from_direction": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.displays.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "nilearn.plotting.displays.colors": {
  "data": {
   "shadows": "matplotlib.colors"
  },
  "type": "import"
 },
 "nilearn.plotting.displays.get_create_display_fun": {
  "data": {
   "lineno": 1324,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "sorted"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.displays.get_projector": {
  "data": {
   "lineno": 1339,
   "symbols_in_volume": [
    "nilearn.plotting.displays.PROJECTORS",
    "nilearn.plotting.displays.get_create_display_fun"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.displays.get_slicer": {
  "data": {
   "lineno": 1334,
   "symbols_in_volume": [
    "nilearn.plotting.displays.SLICERS",
    "nilearn.plotting.displays.get_create_display_fun"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.displays.lines": {
  "data": {
   "shadows": "matplotlib.lines"
  },
  "type": "import"
 },
 "nilearn.plotting.displays.mpl_cm": {
  "data": {
   "shadows": "matplotlib.cm"
  },
  "type": "import"
 },
 "nilearn.plotting.displays.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.plotting.displays.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "nilearn.plotting.displays.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "nilearn.plotting.displays.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "nilearn.plotting.displays.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "nilearn.plotting.displays.transforms": {
  "data": {
   "shadows": "matplotlib.transforms"
  },
  "type": "import"
 },
 "nilearn.plotting.edge_detect": {
  "data": {},
  "type": "module"
 },
 "nilearn.plotting.edge_detect._edge_detect": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "fast_abs_percentile",
    "nilearn.plotting.edge_detect._orientation_kernel",
    "numpy.arange",
    "numpy.arctan2",
    "numpy.bool",
    "numpy.float",
    "numpy.isnan",
    "numpy.ones",
    "numpy.pi",
    "numpy.seterr",
    "numpy.sqrt",
    "numpy.zeros",
    "scipy.ndimage.binary_dilation",
    "scipy.ndimage.maximum_filter",
    "scipy.ndimage.sobel",
    "scipy.signal.wiener"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.edge_detect._edge_map": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "nilearn.plotting.edge_detect._edge_detect",
    "numpy.float",
    "numpy.ma.masked_less",
    "numpy.sqrt",
    "scipy.ndimage.distance_transform_cdt"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.edge_detect._orientation_kernel": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.bool",
    "numpy.pi",
    "numpy.round",
    "numpy.sin",
    "sin"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.edge_detect.ndimage": {
  "data": {
   "shadows": "scipy.ndimage"
  },
  "type": "import"
 },
 "nilearn.plotting.edge_detect.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.plotting.edge_detect.signal": {
  "data": {
   "shadows": "scipy.signal"
  },
  "type": "import"
 },
 "nilearn.plotting.find_cuts": {
  "data": {},
  "type": "module"
 },
 "nilearn.plotting.find_cuts._get_auto_mask_bounds": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "_safe_get_data",
    "float",
    "get_mask_bounds",
    "hasattr",
    "new_img_like",
    "numpy.abs",
    "numpy.asarray",
    "numpy.logical_not"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.find_cuts._transform_cut_coords": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "coord_transform",
    "len",
    "numpy.atleast_1d",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.find_cuts.find_cut_slices": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "ValueError",
    "_safe_get_data",
    "_smooth_array",
    "abs",
    "int",
    "isinstance",
    "len",
    "list",
    "max",
    "min",
    "nilearn.plotting.find_cuts._transform_cut_coords",
    "nilearn.plotting.find_cuts.numbers",
    "nilearn.plotting.find_cuts.warnings",
    "numpy.abs",
    "numpy.arange",
    "numpy.argmax",
    "numpy.array",
    "numpy.diff",
    "numpy.finfo",
    "numpy.float",
    "numpy.float32",
    "numpy.rollaxis",
    "numpy.sum",
    "numpy.unique",
    "numpy.unravel_index",
    "range",
    "round",
    "slice"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.find_cuts.find_xyz_cut_coords": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "_safe_get_data",
    "as_ndarray",
    "check_niimg_3d",
    "coord_transform",
    "fast_abs_percentile",
    "hasattr",
    "largest_connected_component",
    "nilearn.plotting.find_cuts.warnings",
    "numpy.abs",
    "numpy.array",
    "numpy.asarray",
    "numpy.logical_not",
    "numpy.mean",
    "numpy.zeros",
    "scipy.ndimage.center_of_mass",
    "scipy.ndimage.find_objects"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.find_cuts.ndimage": {
  "data": {
   "shadows": "scipy.ndimage"
  },
  "type": "import"
 },
 "nilearn.plotting.find_cuts.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.plotting.find_cuts.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "nilearn.plotting.find_cuts.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nilearn.plotting.glass_brain": {
  "data": {},
  "type": "module"
 },
 "nilearn.plotting.glass_brain.Path": {
  "data": {
   "shadows": "matplotlib.path.Path"
  },
  "type": "import"
 },
 "nilearn.plotting.glass_brain._codes": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "nilearn.plotting.glass_brain._codes_bezier",
    "nilearn.plotting.glass_brain._codes_segment"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.glass_brain._codes_bezier": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "getattr",
    "len",
    "matplotlib.path.Path",
    "matplotlib.path.Path.MOVETO"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.glass_brain._codes_segment": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "matplotlib.path.Path.LINETO",
    "matplotlib.path.Path.MOVETO"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.glass_brain._get_json_and_transform": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "list",
    "matplotlib.transforms.Affine2D.from_values",
    "nilearn.plotting.glass_brain.os"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.glass_brain._get_mpl_patches": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "matplotlib.patches.PathPatch",
    "matplotlib.path.Path",
    "nilearn.plotting.glass_brain._codes",
    "nilearn.plotting.glass_brain._invert_color",
    "type"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.glass_brain._get_object_bounds": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.glass_brain._invert_color": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ValueError",
    "matplotlib.colors.ColorConverter",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.glass_brain.colors": {
  "data": {
   "shadows": "matplotlib.colors"
  },
  "type": "import"
 },
 "nilearn.plotting.glass_brain.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "nilearn.plotting.glass_brain.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nilearn.plotting.glass_brain.patches": {
  "data": {
   "shadows": "matplotlib.patches"
  },
  "type": "import"
 },
 "nilearn.plotting.glass_brain.plot_brain_schematics": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "nilearn.plotting.glass_brain._get_json_and_transform",
    "nilearn.plotting.glass_brain._get_mpl_patches",
    "nilearn.plotting.glass_brain._get_object_bounds",
    "nilearn.plotting.glass_brain.json",
    "open"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.glass_brain.transforms": {
  "data": {
   "shadows": "matplotlib.transforms"
  },
  "type": "import"
 },
 "nilearn.plotting.glass_brain_files": {
  "data": {},
  "type": "module"
 },
 "nilearn.plotting.glass_brain_files.plot_align_svg": {
  "data": {
   "symbols_in_volume": [
    "nilearn.plotting.glass_brain_files.plot_align_svg.add_brain_schematics",
    "nilearn.plotting.glass_brain_files.plot_align_svg.display",
    "nilearn.plotting.img_plotting._load_anat",
    "nilearn.plotting.img_plotting.plot_glass_brain",
    "nilearn.plotting.plot_anat",
    "nilearn.plotting.show"
   ]
  },
  "type": "module"
 },
 "nilearn.plotting.glass_brain_files.plot_align_svg.add_brain_schematics": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "nilearn.plotting.glass_brain.plot_brain_schematics",
    "nilearn.plotting.glass_brain_files.plot_align_svg.display"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.glass_brain_files.plot_align_svg.display": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "nilearn.plotting.glass_brain_files.plot_align_svg.glass_brain": {
  "data": {
   "shadows": "nilearn.plotting.glass_brain"
  },
  "type": "import"
 },
 "nilearn.plotting.glass_brain_files.plot_align_svg.img_plotting": {
  "data": {
   "shadows": "nilearn.plotting.img_plotting"
  },
  "type": "import"
 },
 "nilearn.plotting.glass_brain_files.plot_align_svg.plotting": {
  "data": {
   "shadows": "nilearn.plotting"
  },
  "type": "import"
 },
 "nilearn.plotting.glass_brain_files.plot_align_svg.show": {
  "data": {
   "shadows": "nilearn.plotting.show"
  },
  "type": "import"
 },
 "nilearn.plotting.glass_brain_files.svg_to_json_converter": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "nilearn.plotting.glass_brain_files.svg_to_json_converter.SVGToJSONConverter",
    "nilearn.plotting.glass_brain_files.svg_to_json_converter._import_svg",
    "nilearn.plotting.glass_brain_files.svg_to_json_converter.converter",
    "nilearn.plotting.glass_brain_files.svg_to_json_converter.json_filename",
    "nilearn.plotting.glass_brain_files.svg_to_json_converter.svg_filename",
    "nilearn.plotting.glass_brain_files.svg_to_json_converter.sys"
   ]
  },
  "type": "module"
 },
 "nilearn.plotting.glass_brain_files.svg_to_json_converter.SVGToJSONConverter": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nilearn.plotting.glass_brain_files.svg_to_json_converter.SVGToJSONConverter.__init__": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "nilearn.plotting.glass_brain_files.svg_to_json_converter.SVGToJSONConverter._get_bounds": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.glass_brain_files.svg_to_json_converter.SVGToJSONConverter._get_paths": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "float",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.glass_brain_files.svg_to_json_converter.SVGToJSONConverter._get_style_attr": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "nilearn.plotting.glass_brain_files.svg_to_json_converter.re"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.glass_brain_files.svg_to_json_converter.SVGToJSONConverter._type_and_pts": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "TypeError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.glass_brain_files.svg_to_json_converter.SVGToJSONConverter.save_json": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.glass_brain_files.svg_to_json_converter.SVGToJSONConverter.to_json": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "nilearn.plotting.glass_brain_files.svg_to_json_converter.json"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.glass_brain_files.svg_to_json_converter._import_svg": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "ImportError",
    "nilearn.plotting.glass_brain_files.svg_to_json_converter.svg"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.glass_brain_files.svg_to_json_converter.converter": {
  "data": {
   "lineno": 155
  },
  "type": "constant"
 },
 "nilearn.plotting.glass_brain_files.svg_to_json_converter.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "nilearn.plotting.glass_brain_files.svg_to_json_converter.json_filename": {
  "data": {
   "lineno": 154
  },
  "type": "constant"
 },
 "nilearn.plotting.glass_brain_files.svg_to_json_converter.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "nilearn.plotting.glass_brain_files.svg_to_json_converter.svg": {
  "data": {
   "lineno": 151
  },
  "type": "constant"
 },
 "nilearn.plotting.glass_brain_files.svg_to_json_converter.svg_filename": {
  "data": {
   "lineno": 153
  },
  "type": "constant"
 },
 "nilearn.plotting.glass_brain_files.svg_to_json_converter.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "nilearn.plotting.img_plotting": {
  "data": {
   "symbols_in_volume": [
    "nilearn.plotting.img_plotting._MNI152Template"
   ]
  },
  "type": "module"
 },
 "nilearn.plotting.img_plotting.MNI152TEMPLATE": {
  "data": {
   "lineno": 336
  },
  "type": "constant"
 },
 "nilearn.plotting.img_plotting.SpatialImage": {
  "data": {
   "shadows": "nibabel.spatialimages.SpatialImage"
  },
  "type": "import"
 },
 "nilearn.plotting.img_plotting._MNI152Template": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "nibabel.spatialimages.SpatialImage"
   ]
  },
  "type": "class"
 },
 "nilearn.plotting.img_plotting._MNI152Template.__init__": {
  "data": {
   "lineno": 296
  },
  "type": "function"
 },
 "nilearn.plotting.img_plotting._MNI152Template.__repr__": {
  "data": {
   "lineno": 332
  },
  "type": "function"
 },
 "nilearn.plotting.img_plotting._MNI152Template.__str__": {
  "data": {
   "lineno": 329
  },
  "type": "function"
 },
 "nilearn.plotting.img_plotting._MNI152Template.get_affine": {
  "data": {
   "lineno": 316
  },
  "type": "function"
 },
 "nilearn.plotting.img_plotting._MNI152Template.get_data": {
  "data": {
   "lineno": 312
  },
  "type": "function"
 },
 "nilearn.plotting.img_plotting._MNI152Template.get_shape": {
  "data": {
   "lineno": 325
  },
  "type": "function"
 },
 "nilearn.plotting.img_plotting._MNI152Template.load": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "load_mni152_template",
    "numpy.float",
    "numpy.logical_not",
    "numpy.ma.masked_array",
    "scipy.ndimage.morphology.binary_fill_holes"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.img_plotting._MNI152Template.shape": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.img_plotting._get_colorbar_and_data_ranges": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "max",
    "numpy.asarray",
    "numpy.logical_not",
    "numpy.nanmax",
    "numpy.nanmin"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.img_plotting._load_anat": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "get_border_data",
    "isinstance",
    "nilearn.plotting.img_plotting.MNI152TEMPLATE",
    "nilearn.plotting.img_plotting.numbers",
    "numpy.median"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.img_plotting._plot_img_with_bg": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "ValueError",
    "_safe_get_data",
    "as_ndarray",
    "cbar_outline_get_xy",
    "cbar_outline_set_xy",
    "display_factory",
    "fast_abs_percentile",
    "hasattr",
    "isinstance",
    "len",
    "matplotlib.pyplot.cm.gray",
    "new_img_like",
    "nilearn.plotting.img_plotting.numbers",
    "nilearn.plotting.img_plotting.warnings",
    "numpy.isnan",
    "numpy.linspace",
    "numpy.nan_to_num",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.img_plotting.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "nilearn.plotting.img_plotting.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "nilearn.plotting.img_plotting.ndimage": {
  "data": {
   "shadows": "scipy.ndimage"
  },
  "type": "import"
 },
 "nilearn.plotting.img_plotting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.plotting.img_plotting.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "nilearn.plotting.img_plotting.plot_anat": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "matplotlib.pyplot.cm.gray",
    "nilearn.plotting.img_plotting.MNI152TEMPLATE",
    "nilearn.plotting.img_plotting._load_anat",
    "nilearn.plotting.img_plotting.plot_img"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.img_plotting.plot_connectome": {
  "data": {
   "lineno": 1064,
   "symbols_in_volume": [
    "nilearn.plotting.img_plotting.plot_glass_brain"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.img_plotting.plot_epi": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "matplotlib.pyplot.cm.spectral",
    "nilearn.plotting.img_plotting.plot_img"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.img_plotting.plot_glass_brain": {
  "data": {
   "lineno": 945,
   "symbols_in_volume": [
    "_safe_get_data",
    "cmap",
    "display_factory",
    "nilearn.plotting.img_plotting._get_colorbar_and_data_ranges",
    "nilearn.plotting.img_plotting._plot_img_with_bg"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.img_plotting.plot_glass_brain.display_factory": {
  "data": {
   "lineno": 1045,
   "symbols_in_volume": [
    "get_projector",
    "nilearn.plotting.img_plotting.functools"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.img_plotting.plot_img": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "nilearn.plotting.img_plotting._plot_img_with_bg"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.img_plotting.plot_prob_atlas": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "check_threshold",
    "cmap",
    "fast_abs_percentile",
    "isinstance",
    "iter_img",
    "len",
    "matplotlib.pyplot.cm.get_cmap",
    "matplotlib.pyplot.cm.gist_rainbow",
    "max",
    "nilearn.plotting.img_plotting.MNI152TEMPLATE",
    "nilearn.plotting.img_plotting.collections",
    "nilearn.plotting.img_plotting.plot_anat",
    "numpy.linspace",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.img_plotting.plot_roi": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "matplotlib.pyplot.cm.gist_ncar",
    "nilearn.plotting.img_plotting.MNI152TEMPLATE",
    "nilearn.plotting.img_plotting._load_anat",
    "nilearn.plotting.img_plotting._plot_img_with_bg"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.img_plotting.plot_stat_map": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "_safe_get_data",
    "cmap",
    "nilearn.plotting.img_plotting.MNI152TEMPLATE",
    "nilearn.plotting.img_plotting._get_colorbar_and_data_ranges",
    "nilearn.plotting.img_plotting._load_anat",
    "nilearn.plotting.img_plotting._plot_img_with_bg"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.img_plotting.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "nilearn.plotting.img_plotting.show": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "matplotlib.pyplot.show"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.img_plotting.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nilearn.plotting.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "nilearn.plotting.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nilearn.plotting.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "nilearn.plotting.tests": {
  "data": {},
  "type": "module"
 },
 "nilearn.plotting.tests.test_cm": {
  "data": {},
  "type": "module"
 },
 "nilearn.plotting.tests.test_cm.dim_cmap": {
  "data": {
   "shadows": "nilearn.plotting.cm.dim_cmap"
  },
  "type": "import"
 },
 "nilearn.plotting.tests.test_cm.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "nilearn.plotting.tests.test_cm.replace_inside": {
  "data": {
   "shadows": "nilearn.plotting.cm.replace_inside"
  },
  "type": "import"
 },
 "nilearn.plotting.tests.test_cm.test_dim_cmap": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "matplotlib.pyplot.cm.jet",
    "nilearn.plotting.cm.dim_cmap"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.tests.test_cm.test_replace_inside": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "hasattr",
    "matplotlib.pyplot.cm",
    "matplotlib.pyplot.cm.gnuplot",
    "matplotlib.pyplot.cm.gnuplot2",
    "matplotlib.pyplot.cm.hsv",
    "matplotlib.pyplot.cm.jet",
    "nilearn.plotting.cm.replace_inside"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.tests.test_displays": {
  "data": {},
  "type": "module"
 },
 "nilearn.plotting.tests.test_displays.OrthoProjector": {
  "data": {
   "shadows": "nilearn.plotting.displays.OrthoProjector"
  },
  "type": "import"
 },
 "nilearn.plotting.tests.test_displays.OrthoSlicer": {
  "data": {
   "shadows": "nilearn.plotting.displays.OrthoSlicer"
  },
  "type": "import"
 },
 "nilearn.plotting.tests.test_displays.XSlicer": {
  "data": {
   "shadows": "nilearn.plotting.displays.XSlicer"
  },
  "type": "import"
 },
 "nilearn.plotting.tests.test_displays.load_mni152_template": {
  "data": {
   "shadows": "nilearn.datasets.load_mni152_template"
  },
  "type": "import"
 },
 "nilearn.plotting.tests.test_displays.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "nilearn.plotting.tests.test_displays.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "nilearn.plotting.tests.test_displays.test_contour_fillings_levels_in_add_contours": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "nilearn.datasets.load_mni152_template",
    "nilearn.plotting.displays.OrthoSlicer"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.tests.test_displays.test_demo_ortho_projector": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "matplotlib.pyplot.cm.gray",
    "nilearn.datasets.load_mni152_template",
    "nilearn.plotting.displays.OrthoProjector.init_with_figure",
    "nilearn.plotting.tests.test_displays.tempfile"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.tests.test_displays.test_demo_ortho_slicer": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "matplotlib.pyplot.cm.gray",
    "nilearn.datasets.load_mni152_template",
    "nilearn.plotting.displays.OrthoSlicer"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.tests.test_displays.test_stacked_slicer": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "matplotlib.pyplot.cm.gray",
    "nilearn.datasets.load_mni152_template",
    "nilearn.plotting.displays.XSlicer.init_with_figure",
    "nilearn.plotting.tests.test_displays.tempfile"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.tests.test_edge_detect": {
  "data": {},
  "type": "module"
 },
 "nilearn.plotting.tests.test_edge_detect._edge_detect": {
  "data": {
   "shadows": "nilearn.plotting.edge_detect._edge_detect"
  },
  "type": "import"
 },
 "nilearn.plotting.tests.test_edge_detect.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.plotting.tests.test_edge_detect.test_edge_detect": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "nilearn.plotting.edge_detect._edge_detect",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.tests.test_find_cuts": {
  "data": {},
  "type": "module"
 },
 "nilearn.plotting.tests.test_find_cuts._transform_cut_coords": {
  "data": {
   "shadows": "nilearn.plotting.find_cuts._transform_cut_coords"
  },
  "type": "import"
 },
 "nilearn.plotting.tests.test_find_cuts.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nilearn.plotting.tests.test_find_cuts.assert_raises_regex": {
  "data": {
   "shadows": "nilearn._utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "nilearn.plotting.tests.test_find_cuts.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nilearn.plotting.tests.test_find_cuts.assert_warns": {
  "data": {
   "shadows": "nilearn._utils.testing.assert_warns"
  },
  "type": "import"
 },
 "nilearn.plotting.tests.test_find_cuts.find_cut_slices": {
  "data": {
   "shadows": "nilearn.plotting.find_cuts.find_cut_slices"
  },
  "type": "import"
 },
 "nilearn.plotting.tests.test_find_cuts.find_xyz_cut_coords": {
  "data": {
   "shadows": "nilearn.plotting.find_cuts.find_xyz_cut_coords"
  },
  "type": "import"
 },
 "nilearn.plotting.tests.test_find_cuts.nibabel": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "nilearn.plotting.tests.test_find_cuts.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.plotting.tests.test_find_cuts.test_fast_abs_percentile_no_index_error_find_cuts": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "len",
    "nilearn.plotting.find_cuts.find_xyz_cut_coords",
    "nilearn.plotting.tests.test_find_cuts.nibabel",
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.eye"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.tests.test_find_cuts.test_find_cut_coords": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "nilearn.plotting.find_cuts.find_xyz_cut_coords",
    "nilearn.plotting.tests.test_find_cuts.nibabel",
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.bool",
    "numpy.diag",
    "numpy.eye",
    "numpy.float",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.tests.test_find_cuts.test_find_cut_slices": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "len",
    "nilearn.plotting.find_cuts.find_cut_slices",
    "nilearn.plotting.tests.test_find_cuts.nibabel",
    "nose.tools.assert_equal",
    "numpy.diff",
    "numpy.eye",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.tests.test_find_cuts.test_find_cuts_empty_mask_no_crash": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "UserWarning",
    "nilearn._utils.testing.assert_warns",
    "nilearn.plotting.find_cuts.find_xyz_cut_coords",
    "nilearn.plotting.tests.test_find_cuts.nibabel",
    "numpy.bool",
    "numpy.eye",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.tests.test_find_cuts.test_passing_of_ncuts_in_find_cut_slices": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "nilearn.plotting.find_cuts.find_cut_slices",
    "nilearn.plotting.tests.test_find_cuts.nibabel",
    "numpy.eye",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "round"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.tests.test_find_cuts.test_singleton_ax_dim": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "enumerate",
    "nilearn.plotting.find_cuts.find_cut_slices",
    "nilearn.plotting.tests.test_find_cuts.nibabel",
    "numpy.eye",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.tests.test_find_cuts.test_tranform_cut_coords": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "nilearn.plotting.find_cuts._transform_cut_coords",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.eye"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.tests.test_find_cuts.test_validity_of_ncuts_error_in_find_cut_slices": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "ValueError",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn.plotting.find_cuts.find_cut_slices",
    "nilearn.plotting.tests.test_find_cuts.nibabel",
    "numpy.eye",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.tests.test_img_plotting": {
  "data": {
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "nilearn.plotting.tests.test_img_plotting.MNI152TEMPLATE": {
  "data": {
   "shadows": "nilearn.plotting.img_plotting.MNI152TEMPLATE"
  },
  "type": "import"
 },
 "nilearn.plotting.tests.test_img_plotting._generate_img": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "nilearn.plotting.tests.test_img_plotting.mni_affine",
    "nilearn.plotting.tests.test_img_plotting.nibabel",
    "numpy.random.RandomState",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.tests.test_img_plotting._get_colorbar_and_data_ranges": {
  "data": {
   "shadows": "nilearn.plotting.img_plotting._get_colorbar_and_data_ranges"
  },
  "type": "import"
 },
 "nilearn.plotting.tests.test_img_plotting.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nilearn.plotting.tests.test_img_plotting.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nilearn.plotting.tests.test_img_plotting.assert_raises_regex": {
  "data": {
   "shadows": "nilearn._utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "nilearn.plotting.tests.test_img_plotting.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nilearn.plotting.tests.test_img_plotting.coord_transform": {
  "data": {
   "shadows": "nilearn.image.resampling.coord_transform"
  },
  "type": "import"
 },
 "nilearn.plotting.tests.test_img_plotting.demo_plot_roi": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "int",
    "nilearn.image.resampling.coord_transform",
    "nilearn.plotting.img_plotting.MNI152TEMPLATE.get_affine",
    "nilearn.plotting.img_plotting.plot_roi",
    "nilearn.plotting.tests.test_img_plotting.mni_affine",
    "nilearn.plotting.tests.test_img_plotting.nibabel",
    "numpy.linalg.inv",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.tests.test_img_plotting.mni_affine": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "nilearn.plotting.tests.test_img_plotting.nibabel": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "nilearn.plotting.tests.test_img_plotting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.plotting.tests.test_img_plotting.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nilearn.plotting.tests.test_img_plotting.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "nilearn.plotting.tests.test_img_plotting.plot_anat": {
  "data": {
   "shadows": "nilearn.plotting.img_plotting.plot_anat"
  },
  "type": "import"
 },
 "nilearn.plotting.tests.test_img_plotting.plot_connectome": {
  "data": {
   "shadows": "nilearn.plotting.img_plotting.plot_connectome"
  },
  "type": "import"
 },
 "nilearn.plotting.tests.test_img_plotting.plot_epi": {
  "data": {
   "shadows": "nilearn.plotting.img_plotting.plot_epi"
  },
  "type": "import"
 },
 "nilearn.plotting.tests.test_img_plotting.plot_glass_brain": {
  "data": {
   "shadows": "nilearn.plotting.img_plotting.plot_glass_brain"
  },
  "type": "import"
 },
 "nilearn.plotting.tests.test_img_plotting.plot_img": {
  "data": {
   "shadows": "nilearn.plotting.img_plotting.plot_img"
  },
  "type": "import"
 },
 "nilearn.plotting.tests.test_img_plotting.plot_prob_atlas": {
  "data": {
   "shadows": "nilearn.plotting.img_plotting.plot_prob_atlas"
  },
  "type": "import"
 },
 "nilearn.plotting.tests.test_img_plotting.plot_roi": {
  "data": {
   "shadows": "nilearn.plotting.img_plotting.plot_roi"
  },
  "type": "import"
 },
 "nilearn.plotting.tests.test_img_plotting.plot_stat_map": {
  "data": {
   "shadows": "nilearn.plotting.img_plotting.plot_stat_map"
  },
  "type": "import"
 },
 "nilearn.plotting.tests.test_img_plotting.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "nilearn.plotting.tests.test_img_plotting.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "nilearn.plotting.tests.test_img_plotting.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "nilearn.plotting.tests.test_img_plotting.test_demo_plot_roi": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "nilearn.plotting.tests.test_img_plotting.demo_plot_roi",
    "nilearn.plotting.tests.test_img_plotting.tempfile",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.tests.test_img_plotting.test_display_methods": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "nilearn.plotting.img_plotting.plot_img",
    "nilearn.plotting.tests.test_img_plotting._generate_img"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.tests.test_img_plotting.test_get_colorbar_and_data_ranges_masked_array": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "nilearn.plotting.img_plotting._get_colorbar_and_data_ranges",
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.ma.masked_greater",
    "numpy.nan",
    "numpy.nanmax",
    "numpy.nanmin"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.tests.test_img_plotting.test_get_colorbar_and_data_ranges_neg": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "nilearn.plotting.img_plotting._get_colorbar_and_data_ranges",
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.nan",
    "numpy.nanmin"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.tests.test_img_plotting.test_get_colorbar_and_data_ranges_pos": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "nilearn.plotting.img_plotting._get_colorbar_and_data_ranges",
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.nan",
    "numpy.nanmax"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.tests.test_img_plotting.test_get_colorbar_and_data_ranges_pos_neg": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "nilearn.plotting.img_plotting._get_colorbar_and_data_ranges",
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.nan",
    "numpy.nanmax",
    "numpy.nanmin"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.tests.test_img_plotting.test_get_colorbar_and_data_ranges_with_vmin": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "ValueError",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn.plotting.img_plotting._get_colorbar_and_data_ranges",
    "numpy.array",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.tests.test_img_plotting.test_invalid_in_display_mode_cut_coords_all_plots": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "ValueError",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn.plotting.img_plotting.plot_anat",
    "nilearn.plotting.img_plotting.plot_epi",
    "nilearn.plotting.img_plotting.plot_glass_brain",
    "nilearn.plotting.img_plotting.plot_img",
    "nilearn.plotting.img_plotting.plot_prob_atlas",
    "nilearn.plotting.img_plotting.plot_roi",
    "nilearn.plotting.img_plotting.plot_stat_map",
    "nilearn.plotting.tests.test_img_plotting._generate_img",
    "plot_func"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.tests.test_img_plotting.test_plot_anat": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "nilearn.plotting.img_plotting.plot_anat",
    "nilearn.plotting.tests.test_img_plotting._generate_img",
    "nilearn.plotting.tests.test_img_plotting.os",
    "nilearn.plotting.tests.test_img_plotting.tempfile"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.tests.test_img_plotting.test_plot_connectome": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "dict",
    "nilearn.plotting.img_plotting.plot_connectome",
    "nilearn.plotting.tests.test_img_plotting.os",
    "nilearn.plotting.tests.test_img_plotting.tempfile",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.arange",
    "numpy.array",
    "numpy.ma.masked_array",
    "numpy.nan",
    "numpy.zeros",
    "scipy.sparse.coo_matrix",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.tests.test_img_plotting.test_plot_connectome_exceptions": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn.plotting.img_plotting.plot_connectome",
    "numpy.arange",
    "numpy.array",
    "numpy.ma.masked_array",
    "numpy.zeros",
    "object"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.tests.test_img_plotting.test_plot_empty_slice": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "nilearn.plotting.img_plotting.plot_img",
    "nilearn.plotting.tests.test_img_plotting.mni_affine",
    "nilearn.plotting.tests.test_img_plotting.nibabel",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.tests.test_img_plotting.test_plot_functions": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.subplot",
    "nilearn.plotting.img_plotting.plot_anat",
    "nilearn.plotting.img_plotting.plot_epi",
    "nilearn.plotting.img_plotting.plot_glass_brain",
    "nilearn.plotting.img_plotting.plot_img",
    "nilearn.plotting.img_plotting.plot_stat_map",
    "nilearn.plotting.tests.test_img_plotting._generate_img",
    "nilearn.plotting.tests.test_img_plotting.os",
    "nilearn.plotting.tests.test_img_plotting.tempfile",
    "numpy.nan",
    "plot_func"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.tests.test_img_plotting.test_plot_glass_brain": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "nilearn.plotting.img_plotting.plot_glass_brain",
    "nilearn.plotting.tests.test_img_plotting._generate_img"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.tests.test_img_plotting.test_plot_glass_brain_threshold_for_uint8": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "list",
    "nilearn.plotting.img_plotting.plot_glass_brain",
    "nilearn.plotting.tests.test_img_plotting.nibabel",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.eye",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.tests.test_img_plotting.test_plot_img_invalid": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "Exception",
    "nilearn.plotting.img_plotting.plot_anat",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.tests.test_img_plotting.test_plot_img_with_auto_cut_coords": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "nilearn.plotting.img_plotting.plot_img",
    "nilearn.plotting.tests.test_img_plotting.nibabel",
    "numpy.eye",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.tests.test_img_plotting.test_plot_img_with_resampling": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "nilearn.plotting.img_plotting.plot_img",
    "nilearn.plotting.tests.test_img_plotting._generate_img",
    "nilearn.plotting.tests.test_img_plotting.nibabel",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.tests.test_img_plotting.test_plot_noncurrent_axes": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.gcf",
    "nilearn.plotting.img_plotting.plot_glass_brain",
    "nilearn.plotting.tests.test_img_plotting.nibabel",
    "nose.tools.assert_equal",
    "numpy.eye",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.tests.test_img_plotting.test_plot_prob_atlas": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "nilearn.plotting.img_plotting.plot_prob_atlas",
    "nilearn.plotting.tests.test_img_plotting.nibabel",
    "numpy.eye",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.tests.test_img_plotting.test_plot_stat_map": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "nilearn.plotting.img_plotting.plot_stat_map",
    "nilearn.plotting.tests.test_img_plotting._generate_img",
    "nilearn.plotting.tests.test_img_plotting.mni_affine",
    "nilearn.plotting.tests.test_img_plotting.nibabel",
    "numpy.eye",
    "numpy.ma.masked_equal",
    "numpy.random.RandomState",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.tests.test_img_plotting.test_plot_stat_map_colorbar_variations": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "func",
    "functools.partial",
    "matplotlib.pyplot.close",
    "nilearn.plotting.img_plotting.plot_stat_map",
    "nilearn.plotting.tests.test_img_plotting._generate_img",
    "nilearn.plotting.tests.test_img_plotting.mni_affine",
    "nilearn.plotting.tests.test_img_plotting.nibabel",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.tests.test_img_plotting.test_plot_stat_map_threshold_for_affine_with_rotation": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "list",
    "nilearn.plotting.img_plotting.plot_stat_map",
    "nilearn.plotting.tests.test_img_plotting.nibabel",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.tests.test_img_plotting.test_plot_stat_map_threshold_for_uint8": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "list",
    "nilearn.plotting.img_plotting.plot_stat_map",
    "nilearn.plotting.tests.test_img_plotting.nibabel",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.eye",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.tests.test_img_plotting.test_plot_with_axes_or_figure": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.subplot",
    "nilearn.plotting.img_plotting.plot_img",
    "nilearn.plotting.tests.test_img_plotting._generate_img"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.tests.test_img_plotting.test_save_plot": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "nilearn.plotting.img_plotting.plot_stat_map",
    "nilearn.plotting.tests.test_img_plotting._generate_img",
    "nilearn.plotting.tests.test_img_plotting.os",
    "nilearn.plotting.tests.test_img_plotting.tempfile",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "nilearn.plotting.tests.test_img_plotting.test_singleton_ax_dim": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "enumerate",
    "nilearn.plotting.img_plotting.plot_stat_map",
    "nilearn.plotting.tests.test_img_plotting.nibabel",
    "numpy.eye",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "nilearn.regions": {
  "data": {},
  "type": "module"
 },
 "nilearn.regions.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "nilearn.regions.region_extractor": {
  "data": {},
  "type": "module"
 },
 "nilearn.regions.region_extractor.Memory": {
  "data": {
   "shadows": "sklearn.externals.joblib.Memory"
  },
  "type": "import"
 },
 "nilearn.regions.region_extractor.RegionExtractor": {
  "data": {
   "lineno": 177
  },
  "type": "class"
 },
 "nilearn.regions.region_extractor.RegionExtractor.__init__": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "nilearn.regions.region_extractor.RegionExtractor",
    "sklearn.externals.joblib.Memory",
    "super"
   ]
  },
  "type": "function"
 },
 "nilearn.regions.region_extractor.RegionExtractor.fit": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "ValueError",
    "check_niimg_4d",
    "isinstance",
    "nilearn.regions.region_extractor.RegionExtractor",
    "nilearn.regions.region_extractor._threshold_maps_ratio",
    "nilearn.regions.region_extractor.connected_regions",
    "nilearn.regions.region_extractor.numbers",
    "super",
    "threshold_img"
   ]
  },
  "type": "function"
 },
 "nilearn.regions.region_extractor._threshold_maps_ratio": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ValueError",
    "check_niimg",
    "isinstance",
    "new_img_like",
    "nilearn.regions.region_extractor.numbers",
    "numpy.abs",
    "numpy.nan_to_num",
    "scipy.stats.scoreatpercentile"
   ]
  },
  "type": "function"
 },
 "nilearn.regions.region_extractor.connected_regions": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "ValueError",
    "_check_same_fov",
    "_peak_local_max",
    "_random_walker",
    "_safe_get_data",
    "_smooth_array",
    "abs",
    "check_niimg",
    "concat_niimgs",
    "enumerate",
    "len",
    "new_img_like",
    "numpy.bincount",
    "numpy.diag",
    "numpy.prod",
    "range",
    "resample_img",
    "scipy.ndimage.label"
   ]
  },
  "type": "function"
 },
 "nilearn.regions.region_extractor.label": {
  "data": {
   "shadows": "scipy.ndimage.label"
  },
  "type": "import"
 },
 "nilearn.regions.region_extractor.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.regions.region_extractor.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "nilearn.regions.region_extractor.scoreatpercentile": {
  "data": {
   "shadows": "scipy.stats.scoreatpercentile"
  },
  "type": "import"
 },
 "nilearn.regions.signal_extraction": {
  "data": {},
  "type": "module"
 },
 "nilearn.regions.signal_extraction._trim_maps": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "abs",
    "enumerate",
    "numpy.arange",
    "numpy.bool",
    "numpy.int",
    "numpy.int8",
    "numpy.rollaxis",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.regions.signal_extraction.img_to_signals_labels": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "dict",
    "enumerate",
    "len",
    "list",
    "numpy.asarray",
    "numpy.logical_not",
    "numpy.ndarray",
    "numpy.rollaxis",
    "numpy.unique",
    "scipy.ndimage.measurements.mean",
    "set"
   ]
  },
  "type": "function"
 },
 "nilearn.regions.signal_extraction.img_to_signals_maps": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "ValueError",
    "_trim_maps",
    "abs",
    "list",
    "numpy.arange",
    "numpy.bool",
    "numpy.int",
    "numpy.ones",
    "scipy.linalg.lstsq"
   ]
  },
  "type": "function"
 },
 "nilearn.regions.signal_extraction.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "nilearn.regions.signal_extraction.ndimage": {
  "data": {
   "shadows": "scipy.ndimage"
  },
  "type": "import"
 },
 "nilearn.regions.signal_extraction.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.regions.signal_extraction.signals_to_img_labels": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "dict",
    "enumerate",
    "list",
    "new_img_like",
    "numpy.asarray",
    "numpy.logical_not",
    "numpy.unique",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nilearn.regions.signal_extraction.signals_to_img_maps": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "ValueError",
    "_trim_maps",
    "abs",
    "new_img_like",
    "numpy.bool",
    "numpy.dot",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "nilearn.signal": {
  "data": {
   "symbols_in_volume": [
    "numpy.version.short_version"
   ]
  },
  "type": "module"
 },
 "nilearn.signal.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "nilearn.signal.NP_VERSION": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "nilearn.signal._check_wn": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "float",
    "nilearn.signal.warnings"
   ]
  },
  "type": "function"
 },
 "nilearn.signal._detrend": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "nilearn.signal.warnings",
    "numpy.arange",
    "numpy.dot",
    "numpy.finfo",
    "numpy.float",
    "numpy.mean",
    "numpy.newaxis",
    "numpy.sqrt",
    "sklearn.utils.as_float_array",
    "sklearn.utils.gen_even_slices",
    "type"
   ]
  },
  "type": "function"
 },
 "nilearn.signal._ensure_float": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "nilearn.signal._mean_of_squares": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "numpy.copy",
    "numpy.empty",
    "sklearn.utils.gen_even_slices"
   ]
  },
  "type": "function"
 },
 "nilearn.signal._standardize": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "_detrend",
    "nilearn.signal.warnings",
    "numpy.finfo",
    "numpy.float",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "nilearn.signal.as_float_array": {
  "data": {
   "shadows": "sklearn.utils.as_float_array"
  },
  "type": "import"
 },
 "nilearn.signal.butterworth": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "ValueError",
    "distutils.version.LooseVersion",
    "len",
    "nilearn.signal._check_wn",
    "nilearn.signal.scipy",
    "scipy.signal",
    "scipy.signal.butter",
    "scipy.signal.copy",
    "scipy.signal.filtfilt"
   ]
  },
  "type": "function"
 },
 "nilearn.signal.clean": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "csv_to_array",
    "distutils.version.LooseVersion",
    "isinstance",
    "len",
    "list",
    "nilearn.signal.NP_VERSION",
    "nilearn.signal._ensure_float",
    "nilearn.signal._standardize",
    "nilearn.signal.butterworth",
    "nilearn.signal.scipy",
    "numpy.abs",
    "numpy.all",
    "numpy.any",
    "numpy.atleast_2d",
    "numpy.diag",
    "numpy.dot",
    "numpy.finfo",
    "numpy.float",
    "numpy.hstack",
    "numpy.isnan",
    "numpy.max",
    "numpy.ndarray",
    "numpy.sqrt",
    "numpy.unique",
    "scipy.linalg.qr",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "nilearn.signal.distutils.version": {
  "data": {
   "shadows": "distutils.version"
  },
  "type": "import"
 },
 "nilearn.signal.gen_even_slices": {
  "data": {
   "shadows": "sklearn.utils.gen_even_slices"
  },
  "type": "import"
 },
 "nilearn.signal.high_variance_confounds": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "nilearn.signal._detrend",
    "nilearn.signal._mean_of_squares",
    "numpy.argsort",
    "scipy.linalg.eigh",
    "scipy.stats.scoreatpercentile"
   ]
  },
  "type": "function"
 },
 "nilearn.signal.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "nilearn.signal.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.signal.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "nilearn.signal.signal": {
  "data": {
   "shadows": "scipy.signal"
  },
  "type": "import"
 },
 "nilearn.signal.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "nilearn.signal.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nilearn.tests": {
  "data": {},
  "type": "module"
 },
 "nilearn.tests.data": {
  "data": {},
  "type": "module"
 },
 "nilearn.tests.test_cache_mixin": {
  "data": {},
  "type": "module"
 },
 "nilearn.tests.test_cache_mixin.CacheMixin": {
  "data": {
   "shadows": "nilearn._utils.CacheMixin"
  },
  "type": "import"
 },
 "nilearn.tests.test_cache_mixin.CacheMixinTest": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "nilearn._utils.CacheMixin"
   ]
  },
  "type": "class"
 },
 "nilearn.tests.test_cache_mixin.CacheMixinTest.__init__": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "nilearn.tests.test_cache_mixin.CacheMixinTest.run": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "nilearn.tests.test_cache_mixin.f"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_cache_mixin.Memory": {
  "data": {
   "shadows": "sklearn.externals.joblib.Memory"
  },
  "type": "import"
 },
 "nilearn.tests.test_cache_mixin.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nilearn.tests.test_cache_mixin.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "nilearn.tests.test_cache_mixin.assert_raises_regex": {
  "data": {
   "shadows": "nilearn._utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "nilearn.tests.test_cache_mixin.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nilearn.tests.test_cache_mixin.cache_mixin": {
  "data": {
   "shadows": "nilearn._utils.cache_mixin"
  },
  "type": "import"
 },
 "nilearn.tests.test_cache_mixin.f": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "nilearn.tests.test_cache_mixin.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "nilearn.tests.test_cache_mixin.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "nilearn.tests.test_cache_mixin.nilearn": {
  "data": {
   "shadows": "nilearn"
  },
  "type": "import"
 },
 "nilearn.tests.test_cache_mixin.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nilearn.tests.test_cache_mixin.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "nilearn.tests.test_cache_mixin.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "nilearn.tests.test_cache_mixin.test__safe_cache_dir_creation": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "nilearn._utils.cache_mixin._safe_cache",
    "nilearn.tests.test_cache_mixin.f",
    "nilearn.tests.test_cache_mixin.os",
    "nilearn.tests.test_cache_mixin.shutil",
    "nilearn.tests.test_cache_mixin.tempfile",
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "sklearn.externals.joblib.Memory"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_cache_mixin.test__safe_cache_flush": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "nilearn._utils.cache_mixin.__CACHE_CHECKED",
    "nilearn._utils.cache_mixin._safe_cache",
    "nilearn.tests.test_cache_mixin.f",
    "nilearn.tests.test_cache_mixin.json",
    "nilearn.tests.test_cache_mixin.nilearn",
    "nilearn.tests.test_cache_mixin.os",
    "nilearn.tests.test_cache_mixin.tempfile",
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "open",
    "sklearn.externals.joblib.Memory"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_cache_mixin.test_cache_memory_level": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "len",
    "nilearn._utils.cache_mixin.cache",
    "nilearn.tests.test_cache_mixin.f",
    "nilearn.tests.test_cache_mixin.glob",
    "nilearn.tests.test_cache_mixin.os",
    "nilearn.tests.test_cache_mixin.tempfile",
    "nose.tools.assert_equal",
    "sklearn.externals.joblib.Memory"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_cache_mixin.test_cache_mixin_with_expand_user": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "nilearn.tests.test_cache_mixin.CacheMixinTest",
    "nilearn.tests.test_cache_mixin.os",
    "nilearn.tests.test_cache_mixin.shutil",
    "nose.tools.assert_false",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_cache_mixin.test_cache_mixin_without_expand_user": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "ValueError",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn.tests.test_cache_mixin.CacheMixinTest",
    "nilearn.tests.test_cache_mixin.nilearn",
    "nilearn.tests.test_cache_mixin.os",
    "nilearn.tests.test_cache_mixin.shutil",
    "nose.tools.assert_false"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_cache_mixin.test_cache_mixin_wrong_dirs": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "ValueError",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn.tests.test_cache_mixin.CacheMixinTest",
    "nilearn.tests.test_cache_mixin.os",
    "nilearn.tests.test_cache_mixin.shutil",
    "nose.tools.assert_false"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_class_inspect": {
  "data": {},
  "type": "module"
 },
 "nilearn.tests.test_class_inspect.A": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "nilearn.tests.test_class_inspect.A.__init__": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "nilearn.tests.test_class_inspect.B": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "nilearn.tests.test_class_inspect.A"
   ]
  },
  "type": "class"
 },
 "nilearn.tests.test_class_inspect.B.__init__": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "nilearn.tests.test_class_inspect.B.get_scope_name": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "C"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_class_inspect.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "nilearn.tests.test_class_inspect.C": {
  "data": {
   "lineno": 34
  },
  "type": "class"
 },
 "nilearn.tests.test_class_inspect.C.get_scope_name": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "get_scope_name"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_class_inspect.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nilearn.tests.test_class_inspect.class_inspect": {
  "data": {
   "shadows": "nilearn._utils.class_inspect"
  },
  "type": "import"
 },
 "nilearn.tests.test_class_inspect.get_scope_name": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "nilearn._utils.class_inspect.enclosing_scope_name"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_class_inspect.test_enclosing_scope_name": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "nilearn.tests.test_class_inspect.B",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_class_inspect.test_get_params": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "dict",
    "nilearn._utils.class_inspect.get_params",
    "nilearn.tests.test_class_inspect.A",
    "nilearn.tests.test_class_inspect.B",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_extmath": {
  "data": {},
  "type": "module"
 },
 "nilearn.tests.test_extmath.check_random_state": {
  "data": {
   "shadows": "sklearn.utils.check_random_state"
  },
  "type": "import"
 },
 "nilearn.tests.test_extmath.fast_abs_percentile": {
  "data": {
   "shadows": "nilearn._utils.extmath.fast_abs_percentile"
  },
  "type": "import"
 },
 "nilearn.tests.test_extmath.is_spd": {
  "data": {
   "shadows": "nilearn._utils.extmath.is_spd"
  },
  "type": "import"
 },
 "nilearn.tests.test_extmath.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "nilearn.tests.test_extmath.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.tests.test_extmath.test_fast_abs_percentile": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "nilearn._utils.extmath.fast_abs_percentile",
    "nilearn.tests.test_extmath.nose",
    "numpy.arange",
    "sklearn.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_extmath.test_fast_abs_percentile_no_index_error": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "nilearn._utils.extmath.fast_abs_percentile",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_extmath.test_is_spd_with_non_symmetrical_matrix": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "nilearn._utils.extmath.is_spd",
    "numpy.arange",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_extmath.test_is_spd_with_symmetrical_matrix": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "nilearn._utils.extmath.is_spd",
    "numpy.arange",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_logger": {
  "data": {
   "symbols_in_volume": [
    "nilearn._utils.logger.log",
    "nilearn.tests.test_logger.capture_output",
    "nose.tools.assert_equal"
   ]
  },
  "type": "module"
 },
 "nilearn.tests.test_logger.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "nilearn.tests.test_logger.Run": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "nilearn.tests.test_logger.Run.run": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "nilearn._utils.logger.log",
    "nilearn.tests.test_logger.run"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_logger.Run2": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "nilearn.tests.test_logger.Run2.run2": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "Run",
    "nilearn._utils.logger.log"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_logger.Run3": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nilearn.tests.test_logger.Run3.run3": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "nilearn._utils.logger.log",
    "nilearn.tests.test_logger.run"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_logger.StringIO": {
  "data": {
   "shadows": "nilearn._utils.compat.StringIO"
  },
  "type": "import"
 },
 "nilearn.tests.test_logger.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nilearn.tests.test_logger.capture_output": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "nilearn._utils.compat.StringIO",
    "nilearn.tests.test_logger.contextlib",
    "nilearn.tests.test_logger.sys"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_logger.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "nilearn.tests.test_logger.log": {
  "data": {
   "shadows": "nilearn._utils.logger.log"
  },
  "type": "import"
 },
 "nilearn.tests.test_logger.other_run": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "nilearn._utils.logger.log"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_logger.run": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "nilearn._utils.logger.log"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_logger.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "nilearn.tests.test_logger.test_log": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "nilearn.tests.test_logger.Run",
    "nilearn.tests.test_logger.Run2",
    "nilearn.tests.test_logger.Run3",
    "nilearn.tests.test_logger.capture_output",
    "nilearn.tests.test_logger.other_run",
    "nilearn.tests.test_logger.run",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_masking": {
  "data": {
   "symbols_in_volume": [
    "hasattr",
    "numpy.version",
    "numpy.version.full_version",
    "numpy.version.short_version"
   ]
  },
  "type": "module"
 },
 "nilearn.tests.test_masking.DimensionError": {
  "data": {
   "shadows": "nilearn._utils.exceptions.DimensionError"
  },
  "type": "import"
 },
 "nilearn.tests.test_masking.MaskWarning": {
  "data": {
   "shadows": "nilearn.masking.MaskWarning"
  },
  "type": "import"
 },
 "nilearn.tests.test_masking.Nifti1Image": {
  "data": {
   "shadows": "nibabel.Nifti1Image"
  },
  "type": "import"
 },
 "nilearn.tests.test_masking.NiftiMasker": {
  "data": {
   "shadows": "nilearn.input_data.NiftiMasker"
  },
  "type": "import"
 },
 "nilearn.tests.test_masking._unmask_3d": {
  "data": {
   "shadows": "nilearn.masking._unmask_3d"
  },
  "type": "import"
 },
 "nilearn.tests.test_masking._unmask_4d": {
  "data": {
   "shadows": "nilearn.masking._unmask_4d"
  },
  "type": "import"
 },
 "nilearn.tests.test_masking.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nilearn.tests.test_masking.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nilearn.tests.test_masking.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "nilearn.tests.test_masking.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nilearn.tests.test_masking.assert_raises_regex": {
  "data": {
   "shadows": "nilearn._utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "nilearn.tests.test_masking.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nilearn.tests.test_masking.compute_background_mask": {
  "data": {
   "shadows": "nilearn.masking.compute_background_mask"
  },
  "type": "import"
 },
 "nilearn.tests.test_masking.compute_epi_mask": {
  "data": {
   "shadows": "nilearn.masking.compute_epi_mask"
  },
  "type": "import"
 },
 "nilearn.tests.test_masking.compute_multi_epi_mask": {
  "data": {
   "shadows": "nilearn.masking.compute_multi_epi_mask"
  },
  "type": "import"
 },
 "nilearn.tests.test_masking.distutils.version": {
  "data": {
   "shadows": "distutils.version"
  },
  "type": "import"
 },
 "nilearn.tests.test_masking.intersect_masks": {
  "data": {
   "shadows": "nilearn.masking.intersect_masks"
  },
  "type": "import"
 },
 "nilearn.tests.test_masking.masking": {
  "data": {
   "shadows": "nilearn.masking"
  },
  "type": "import"
 },
 "nilearn.tests.test_masking.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.tests.test_masking.np_version": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "nilearn.tests.test_masking.test_apply_mask": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "ValueError",
    "nibabel.Nifti1Image",
    "nilearn._utils.exceptions.DimensionError",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn._utils.testing.write_tmp_imgs",
    "nilearn.masking.apply_mask",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.NaN",
    "numpy.abs",
    "numpy.all",
    "numpy.any",
    "numpy.arange",
    "numpy.diag",
    "numpy.eye",
    "numpy.isfinite",
    "numpy.ones",
    "numpy.reshape",
    "numpy.rollaxis",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "sorted"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_masking.test_compute_background_mask": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "nibabel.Nifti1Image",
    "nilearn.masking.MaskWarning",
    "nilearn.masking.compute_background_mask",
    "nilearn.tests.test_masking.warnings",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.eye",
    "numpy.int8",
    "numpy.nan",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_masking.test_compute_epi_mask": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "nibabel.Nifti1Image",
    "nilearn.masking.MaskWarning",
    "nilearn.masking.compute_epi_mask",
    "nilearn.tests.test_masking.warnings",
    "nose.tools.assert_equal",
    "nose.tools.assert_false",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.allclose",
    "numpy.eye",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_masking.test_compute_multi_epi_mask": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "int",
    "nibabel.Nifti1Image",
    "nilearn.masking.MaskWarning",
    "nilearn.masking.compute_multi_epi_mask",
    "nilearn.tests.test_masking.warnings",
    "nose.tools.assert_raises",
    "numpy.bool",
    "numpy.eye",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_masking.test_error_shape": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "TypeError",
    "nibabel.Nifti1Image",
    "nilearn.masking.unmask",
    "nose.tools.assert_raises",
    "numpy.eye",
    "numpy.random.RandomState",
    "numpy.uint8",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_masking.test_intersect_masks": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "int",
    "nibabel.Nifti1Image",
    "nilearn.masking.intersect_masks",
    "numpy.bool",
    "numpy.eye",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_masking.test_intersect_masks_filename": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "int",
    "nibabel.Nifti1Image",
    "nilearn._utils.testing.write_tmp_imgs",
    "nilearn.masking.intersect_masks",
    "numpy.bool",
    "numpy.eye",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_masking.test_nifti_masker_empty_mask_warning": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "ValueError",
    "nibabel.Nifti1Image",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn.input_data.NiftiMasker",
    "numpy.eye",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_masking.test_unmask": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "isinstance",
    "list",
    "nibabel.Nifti1Image",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn._utils.testing.write_tmp_imgs",
    "nilearn.masking._unmask_3d",
    "nilearn.masking._unmask_4d",
    "nilearn.masking.unmask",
    "nose.tools.assert_equal",
    "nose.tools.assert_false",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.bool",
    "numpy.empty",
    "numpy.eye",
    "numpy.float64",
    "numpy.int",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.sum",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_masking.unmask": {
  "data": {
   "shadows": "nilearn.masking.unmask"
  },
  "type": "import"
 },
 "nilearn.tests.test_masking.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nilearn.tests.test_masking.write_tmp_imgs": {
  "data": {
   "shadows": "nilearn._utils.testing.write_tmp_imgs"
  },
  "type": "import"
 },
 "nilearn.tests.test_ndimage": {
  "data": {},
  "type": "module"
 },
 "nilearn.tests.test_ndimage._peak_local_max": {
  "data": {
   "shadows": "nilearn._utils.ndimage._peak_local_max"
  },
  "type": "import"
 },
 "nilearn.tests.test_ndimage.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nilearn.tests.test_ndimage.largest_connected_component": {
  "data": {
   "shadows": "nilearn._utils.ndimage.largest_connected_component"
  },
  "type": "import"
 },
 "nilearn.tests.test_ndimage.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.tests.test_ndimage.test_constant_image_in_peak_local_max": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "len",
    "nilearn._utils.ndimage._peak_local_max",
    "numpy.ones",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_ndimage.test_empty_peak_local_max": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "nilearn._utils.ndimage._peak_local_max",
    "numpy.all",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_ndimage.test_flat_peak_local_max": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "len",
    "nilearn._utils.ndimage._peak_local_max",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_ndimage.test_largest_cc": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ValueError",
    "nilearn._utils.ndimage.largest_connected_component",
    "nose.tools.assert_raises",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_ndimage.test_relative_and_absolute_thresholds_in_peak_local_max": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "len",
    "nilearn._utils.ndimage._peak_local_max",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_ndimage.test_trivial_cases_in_peak_local_max": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "nilearn._utils.ndimage._peak_local_max",
    "numpy.bool",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_niimg": {
  "data": {
   "symbols_in_volume": [
    "nilearn.tests.test_niimg.os"
   ]
  },
  "type": "module"
 },
 "nilearn.tests.test_niimg.Nifti1Image": {
  "data": {
   "shadows": "nibabel.Nifti1Image"
  },
  "type": "import"
 },
 "nilearn.tests.test_niimg.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nilearn.tests.test_niimg.assert_raises_regex": {
  "data": {
   "shadows": "nilearn._utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "nilearn.tests.test_niimg.currdir": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "nilearn.tests.test_niimg.joblib": {
  "data": {
   "shadows": "sklearn.externals.joblib"
  },
  "type": "import"
 },
 "nilearn.tests.test_niimg.new_img_like": {
  "data": {
   "shadows": "nilearn.image.new_img_like"
  },
  "type": "import"
 },
 "nilearn.tests.test_niimg.niimg": {
  "data": {
   "shadows": "nilearn._utils.niimg"
  },
  "type": "import"
 },
 "nilearn.tests.test_niimg.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.tests.test_niimg.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nilearn.tests.test_niimg.test_copy_img": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ValueError",
    "nilearn._utils.niimg.copy_img",
    "nilearn._utils.testing.assert_raises_regex"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_niimg.test_copy_img_side_effect": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "nibabel.Nifti1Image",
    "nilearn._utils.niimg.copy_img",
    "nose.tools.assert_equal",
    "numpy.eye",
    "numpy.ones",
    "sklearn.externals.joblib.hash"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_niimg.test_new_img_like_side_effect": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "nibabel.Nifti1Image",
    "nilearn.image.new_img_like",
    "nose.tools.assert_equal",
    "numpy.eye",
    "numpy.ones",
    "sklearn.externals.joblib.hash"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_niimg_conversions": {
  "data": {},
  "type": "module"
 },
 "nilearn.tests.test_niimg_conversions.DimensionError": {
  "data": {
   "shadows": "nilearn._utils.exceptions.DimensionError"
  },
  "type": "import"
 },
 "nilearn.tests.test_niimg_conversions.Nifti1Image": {
  "data": {
   "shadows": "nibabel.Nifti1Image"
  },
  "type": "import"
 },
 "nilearn.tests.test_niimg_conversions.PhonyNiimage": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "nilearn.tests.test_niimg_conversions.nibabel"
   ]
  },
  "type": "class"
 },
 "nilearn.tests.test_niimg_conversions.PhonyNiimage.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_niimg_conversions.PhonyNiimage.get_affine": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "nilearn.tests.test_niimg_conversions.PhonyNiimage.get_data": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "nilearn.tests.test_niimg_conversions.PhonyNiimage.shape": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_niimg_conversions._check_memory": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "list",
    "nilearn._utils.niimg_conversions._iter_check_niimg"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_niimg_conversions._iter_check_niimg": {
  "data": {
   "shadows": "nilearn._utils.niimg_conversions._iter_check_niimg"
  },
  "type": "import"
 },
 "nilearn.tests.test_niimg_conversions._remove_if_exists": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "nilearn.tests.test_niimg_conversions.os"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_niimg_conversions._utils": {
  "data": {
   "shadows": "nilearn._utils"
  },
  "type": "import"
 },
 "nilearn.tests.test_niimg_conversions.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "nilearn.tests.test_niimg_conversions.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "nilearn.tests.test_niimg_conversions.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nilearn.tests.test_niimg_conversions.assert_memory_less_than": {
  "data": {
   "shadows": "nilearn._utils.testing.assert_memory_less_than"
  },
  "type": "import"
 },
 "nilearn.tests.test_niimg_conversions.assert_raises_regex": {
  "data": {
   "shadows": "nilearn._utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "nilearn.tests.test_niimg_conversions.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nilearn.tests.test_niimg_conversions.image": {
  "data": {
   "shadows": "nilearn.image"
  },
  "type": "import"
 },
 "nilearn.tests.test_niimg_conversions.ni": {
  "data": {
   "shadows": "nilearn"
  },
  "type": "import"
 },
 "nilearn.tests.test_niimg_conversions.nibabel": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "nilearn.tests.test_niimg_conversions.nifti_generator": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "nibabel.Nifti1Image",
    "numpy.eye",
    "numpy.random.random",
    "range"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_niimg_conversions.niimg_conversions": {
  "data": {
   "shadows": "nilearn._utils.niimg_conversions"
  },
  "type": "import"
 },
 "nilearn.tests.test_niimg_conversions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.tests.test_niimg_conversions.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nilearn.tests.test_niimg_conversions.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "nilearn.tests.test_niimg_conversions.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "nilearn.tests.test_niimg_conversions.test_check_niimg": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "nibabel.Nifti1Image",
    "nilearn._utils.check_niimg",
    "nilearn._utils.exceptions.DimensionError",
    "nilearn._utils.testing.assert_raises_regex",
    "numpy.eye",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_niimg_conversions.test_check_niimg_3d": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "TypeError",
    "nibabel.Nifti1Image",
    "nilearn._utils.check_niimg",
    "nilearn._utils.check_niimg_3d",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn._utils.testing.write_tmp_imgs",
    "numpy.eye",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_niimg_conversions.test_check_niimg_4d": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "list",
    "nibabel.Nifti1Image",
    "nilearn._utils.check_niimg_4d",
    "nilearn._utils.exceptions.DimensionError",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn.tests.test_niimg_conversions.PhonyNiimage",
    "nilearn.tests.test_niimg_conversions.nibabel",
    "nose.tools.assert_true",
    "numpy.eye",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_niimg_conversions.test_check_niimg_wildcards": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "ValueError",
    "nibabel.Nifti1Image",
    "nilearn.EXPAND_PATH_WILDCARDS",
    "nilearn._utils.check_niimg",
    "nilearn._utils.check_niimg_4d",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn._utils.testing.write_tmp_imgs",
    "nilearn.tests.test_niimg_conversions.os",
    "nilearn.tests.test_niimg_conversions.re",
    "nilearn.tests.test_niimg_conversions.tempfile",
    "nose.tools.assert_equal",
    "numpy.eye",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_niimg_conversions.test_check_same_fov": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ValueError",
    "nilearn._utils.niimg_conversions._check_same_fov",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn.tests.test_niimg_conversions.nibabel",
    "numpy.empty",
    "numpy.eye"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_niimg_conversions.test_concat_niimgs": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "nibabel.Nifti1Image",
    "nilearn._utils.concat_niimgs",
    "nilearn._utils.exceptions.DimensionError",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn.tests.test_niimg_conversions._remove_if_exists",
    "nilearn.tests.test_niimg_conversions.nibabel",
    "nilearn.tests.test_niimg_conversions.tempfile",
    "nose.tools.assert_true",
    "numpy.eye",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_niimg_conversions.test_iter_check_niimgs": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "nibabel.Nifti1Image",
    "nilearn._utils.check_niimg",
    "nilearn._utils.niimg_conversions._iter_check_niimg",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn.tests.test_niimg_conversions.os",
    "nilearn.tests.test_niimg_conversions.tempfile",
    "numpy.eye",
    "numpy.ones",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_niimg_conversions.test_iter_check_niimgs_memory": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "nibabel.Nifti1Image",
    "nilearn._utils.testing.assert_memory_less_than",
    "nilearn._utils.testing.with_memory_profiler",
    "nilearn.tests.test_niimg_conversions._check_memory",
    "numpy.eye",
    "numpy.ones",
    "range"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_niimg_conversions.test_iterator_generator": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "len",
    "nibabel.Nifti1Image",
    "nilearn._utils.concat_niimgs",
    "nilearn.image.iter_img",
    "nilearn.tests.test_niimg_conversions.nifti_generator",
    "nose.tools.assert_equal",
    "numpy.eye",
    "numpy.random.random",
    "numpy.testing.assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_niimg_conversions.test_repr_niimgs": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "nibabel.Nifti1Image",
    "nilearn._utils._repr_niimgs",
    "nilearn.tests.test_niimg_conversions.nibabel",
    "nilearn.tests.test_niimg_conversions.tempfile",
    "nose.tools.assert_equal",
    "numpy.eye",
    "numpy.ones",
    "repr"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_niimg_conversions.testing": {
  "data": {
   "shadows": "nilearn._utils.testing"
  },
  "type": "import"
 },
 "nilearn.tests.test_niimg_conversions.with_memory_profiler": {
  "data": {
   "shadows": "nilearn._utils.testing.with_memory_profiler"
  },
  "type": "import"
 },
 "nilearn.tests.test_numpy_conversions": {
  "data": {},
  "type": "module"
 },
 "nilearn.tests.test_numpy_conversions.are_arrays_identical": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "nilearn.tests.test_numpy_conversions.as_ndarray": {
  "data": {
   "shadows": "nilearn._utils.numpy_conversions.as_ndarray"
  },
  "type": "import"
 },
 "nilearn.tests.test_numpy_conversions.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nilearn.tests.test_numpy_conversions.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nilearn.tests.test_numpy_conversions.csv_to_array": {
  "data": {
   "shadows": "nilearn._utils.numpy_conversions.csv_to_array"
  },
  "type": "import"
 },
 "nilearn.tests.test_numpy_conversions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.tests.test_numpy_conversions.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nilearn.tests.test_numpy_conversions.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "nilearn.tests.test_numpy_conversions.test_are_array_identical": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "nilearn.tests.test_numpy_conversions.are_arrays_identical",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_numpy_conversions.test_as_ndarray": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "ValueError",
    "nilearn._utils.numpy_conversions.as_ndarray",
    "nilearn.tests.test_numpy_conversions.are_arrays_identical",
    "nilearn.tests.test_numpy_conversions.os",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.bool",
    "numpy.float",
    "numpy.float32",
    "numpy.int",
    "numpy.int32",
    "numpy.int8",
    "numpy.memmap",
    "numpy.ones",
    "str"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_numpy_conversions.test_csv_to_array": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "TypeError",
    "nilearn._utils.numpy_conversions.csv_to_array",
    "nilearn.tests.test_numpy_conversions.os",
    "nilearn.tests.test_numpy_conversions.tempfile",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.allclose",
    "numpy.asarray",
    "open"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_param_validation": {
  "data": {},
  "type": "module"
 },
 "nilearn.tests.test_param_validation.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nilearn.tests.test_param_validation.assert_raises_regex": {
  "data": {
   "shadows": "nilearn._utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "nilearn.tests.test_param_validation.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nilearn.tests.test_param_validation.assert_warns": {
  "data": {
   "shadows": "nilearn._utils.testing.assert_warns"
  },
  "type": "import"
 },
 "nilearn.tests.test_param_validation.check_threshold": {
  "data": {
   "shadows": "nilearn._utils.param_validation.check_threshold"
  },
  "type": "import"
 },
 "nilearn.tests.test_param_validation.fast_abs_percentile": {
  "data": {
   "shadows": "nilearn._utils.extmath.fast_abs_percentile"
  },
  "type": "import"
 },
 "nilearn.tests.test_param_validation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.tests.test_param_validation.test_check_threshold": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "TypeError",
    "UserWarning",
    "ValueError",
    "nilearn._utils.extmath.fast_abs_percentile",
    "nilearn._utils.param_validation.check_threshold",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn._utils.testing.assert_warns",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.float64",
    "object"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_segmentation": {
  "data": {},
  "type": "module"
 },
 "nilearn.tests.test_segmentation._random_walker": {
  "data": {
   "shadows": "nilearn._utils.segmentation._random_walker"
  },
  "type": "import"
 },
 "nilearn.tests.test_segmentation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.tests.test_segmentation.test_bad_inputs": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ValueError",
    "nilearn._utils.segmentation._random_walker",
    "numpy.arange",
    "numpy.ones",
    "numpy.random.normal",
    "numpy.random.seed",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_segmentation.test_modes_in_random_walker": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "nilearn._utils.segmentation._random_walker",
    "numpy.random.randn",
    "numpy.zeros",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_segmentation.test_reorder_labels": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "nilearn._utils.segmentation._random_walker",
    "numpy.random.randn",
    "numpy.zeros",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_segmentation.test_trivial_cases": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "nilearn._utils.segmentation._random_walker",
    "numpy.ones",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_signal": {
  "data": {},
  "type": "module"
 },
 "nilearn.tests.test_signal.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "nilearn.tests.test_signal.assert_less": {
  "data": {
   "shadows": "sklearn.utils.testing.assert_less"
  },
  "type": "import"
 },
 "nilearn.tests.test_signal.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nilearn.tests.test_signal.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "nilearn.tests.test_signal.clean": {
  "data": {
   "shadows": "nilearn.signal.clean"
  },
  "type": "import"
 },
 "nilearn.tests.test_signal.generate_signals": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "abs",
    "numpy.dot",
    "numpy.ndarray",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_signal.generate_trends": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "numpy.atleast_2d",
    "numpy.linspace",
    "numpy.random.RandomState",
    "numpy.repeat"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_signal.nisignal": {
  "data": {
   "shadows": "nilearn.signal"
  },
  "type": "import"
 },
 "nilearn.tests.test_signal.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.tests.test_signal.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "nilearn.tests.test_signal.scipy.signal": {
  "data": {
   "shadows": "scipy.signal"
  },
  "type": "import"
 },
 "nilearn.tests.test_signal.test_butterworth": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "nilearn.signal.butterworth",
    "numpy.random.RandomState",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_signal.test_clean_confounds": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "abs",
    "nilearn.signal.clean",
    "nilearn.tests.test_signal.generate_signals",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.dot",
    "numpy.finfo",
    "numpy.float",
    "numpy.hstack",
    "numpy.ones",
    "numpy.polyfit",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_signal.test_clean_detrending": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "abs",
    "nilearn.signal.clean",
    "nilearn.tests.test_signal.generate_signals",
    "nilearn.tests.test_signal.generate_trends",
    "nose.tools.assert_false",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_signal.test_clean_frequencies": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "ValueError",
    "nilearn.signal.clean",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.linspace",
    "numpy.sin",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_signal.test_detrend": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "abs",
    "nilearn.signal._detrend",
    "nilearn.tests.test_signal.generate_signals",
    "nilearn.tests.test_signal.generate_trends",
    "nose.tools.assert_true",
    "numpy.finfo",
    "numpy.float",
    "numpy.int64",
    "numpy.newaxis",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "sklearn.utils.testing.assert_less"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_signal.test_high_variance_confounds": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "AssertionError",
    "nilearn.signal.high_variance_confounds",
    "nilearn.tests.test_signal.generate_signals",
    "nilearn.tests.test_signal.generate_trends",
    "nose.tools.assert_raises",
    "numpy.abs",
    "numpy.dstack",
    "numpy.identity",
    "numpy.min",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_signal.test_mean_of_squares": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "nilearn.signal._mean_of_squares",
    "nilearn.tests.test_signal.generate_signals",
    "numpy.copy",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_signal.test_standardize": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "nilearn.signal._standardize",
    "numpy.atleast_2d",
    "numpy.linspace",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_testing": {
  "data": {},
  "type": "module"
 },
 "nilearn.tests.test_testing.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nilearn.tests.test_testing.assert_memory_less_than": {
  "data": {
   "shadows": "nilearn._utils.testing.assert_memory_less_than"
  },
  "type": "import"
 },
 "nilearn.tests.test_testing.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "nilearn.tests.test_testing.assert_raises_regex": {
  "data": {
   "shadows": "nilearn._utils.testing.assert_raises_regex"
  },
  "type": "import"
 },
 "nilearn.tests.test_testing.create_object": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "nilearn.tests.test_testing.generate_fake_fmri": {
  "data": {
   "shadows": "nilearn._utils.testing.generate_fake_fmri"
  },
  "type": "import"
 },
 "nilearn.tests.test_testing.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "nilearn.tests.test_testing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nilearn.tests.test_testing.test_generate_fake_fmri": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ValueError",
    "nilearn._utils.testing.generate_fake_fmri",
    "nilearn.tests.test_testing.itertools",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_testing.test_memory_usage": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ValueError",
    "nilearn._utils.testing.assert_memory_less_than",
    "nilearn._utils.testing.assert_raises_regex",
    "nilearn._utils.testing.with_memory_profiler",
    "nilearn.tests.test_testing.create_object"
   ]
  },
  "type": "function"
 },
 "nilearn.tests.test_testing.with_memory_profiler": {
  "data": {
   "shadows": "nilearn._utils.testing.with_memory_profiler"
  },
  "type": "import"
 },
 "nilearn.version": {
  "data": {
   "symbols_in_volume": [
    "nilearn.version._NILEARN_INSTALL_MSG"
   ]
  },
  "type": "module"
 },
 "nilearn.version.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "nilearn.version.OPTIONAL_MATPLOTLIB_MIN_VERSION": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "nilearn.version.REQUIRED_MODULE_METADATA": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "nilearn.version._NILEARN_INSTALL_MSG": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "nilearn.version.__version__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "nilearn.version._check_module_dependencies": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "nilearn.version.REQUIRED_MODULE_METADATA",
    "nilearn.version._import_module_with_version_check"
   ]
  },
  "type": "function"
 },
 "nilearn.version._import_module_with_version_check": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "ImportError",
    "__import__",
    "distutils.version.LooseVersion",
    "getattr"
   ]
  },
  "type": "function"
 }
}