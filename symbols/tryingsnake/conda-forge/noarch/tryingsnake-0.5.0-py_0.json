{
 "tryingsnake": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tryingsnake.Failure": {
  "lineno": 286,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tryingsnake.Failure.__eq__": {
  "lineno": 300,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.Failure.__hash__": {
  "lineno": 318,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.Failure.__init__": {
  "lineno": 296,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.Failure.__len__": {
  "lineno": 292,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.Failure.failed": {
  "lineno": 348,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.Failure.filter": {
  "lineno": 339,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.Failure.flatMap": {
  "lineno": 336,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.Failure.get": {
  "lineno": 324,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.Failure.getOrElse": {
  "lineno": 327,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.Failure.map": {
  "lineno": 333,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.Failure.orElse": {
  "lineno": 330,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.Failure.recover": {
  "lineno": 342,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.Failure.recoverWith": {
  "lineno": 345,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.Success": {
  "lineno": 224,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tryingsnake.Success.__eq__": {
  "lineno": 237,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.Success.__hash__": {
  "lineno": 248,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.Success.__init__": {
  "lineno": 234,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.Success.__len__": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.Success.failed": {
  "lineno": 282,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.Success.filter": {
  "lineno": 270,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.Success.flatMap": {
  "lineno": 266,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.Success.get": {
  "lineno": 254,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.Success.getOrElse": {
  "lineno": 257,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.Success.map": {
  "lineno": 263,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.Success.orElse": {
  "lineno": 260,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.Success.recover": {
  "lineno": 276,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.Success.recoverWith": {
  "lineno": 279,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.Try": {
  "lineno": 352,
  "symbols_in_volume": [
   "collections.abc.Generator"
  ],
  "type": "function"
 },
 "tryingsnake.Try_": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tryingsnake.Try_.__init__": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.Try_.__ne__": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.Try_.__repr__": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.Try_._fmt": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.Try_._identity_if_try_or_raise": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.Try_._raise_if_not_exception": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.Try_._v": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.Try_.failed": {
  "lineno": 186,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.Try_.filter": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.Try_.flatMap": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.Try_.get": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.Try_.getOrElse": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.Try_.isFailure": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.Try_.isSuccess": {
  "lineno": 212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.Try_.map": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.Try_.orElse": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.Try_.recover": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.Try_.recoverWith": {
  "lineno": 172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.Try_.set_unhandled": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.curried": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tryingsnake.curried.Try": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.curried.Try._": {
  "lineno": 19,
  "symbols_in_volume": [
   "tryingsnake.Try"
  ],
  "type": "function"
 },
 "tryingsnake.test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tryingsnake.test.test_curried_try": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "tryingsnake.test.test_curried_try.CurriedTryTestCase": {
  "lineno": 7,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tryingsnake.test.test_curried_try.CurriedTryTestCase.test_can_take_args_and_fail": {
  "lineno": 8,
  "symbols_in_volume": [
   "operator.truediv",
   "tryingsnake.curried.Try"
  ],
  "type": "function"
 },
 "tryingsnake.test.test_curried_try.CurriedTryTestCase.test_can_take_args_and_succeed": {
  "lineno": 12,
  "symbols_in_volume": [
   "operator.add",
   "tryingsnake.curried.Try"
  ],
  "type": "function"
 },
 "tryingsnake.test.test_curried_try.CurriedTryTestCase.test_can_take_kwargs_and_fail": {
  "lineno": 16,
  "symbols_in_volume": [
   "tryingsnake.curried.Try"
  ],
  "type": "function"
 },
 "tryingsnake.test.test_curried_try.CurriedTryTestCase.test_can_take_kwargs_and_fail.f": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.test.test_curried_try.CurriedTryTestCase.test_can_take_kwargs_and_succeed": {
  "lineno": 23,
  "symbols_in_volume": [
   "tryingsnake.curried.Try"
  ],
  "type": "function"
 },
 "tryingsnake.test.test_curried_try.CurriedTryTestCase.test_can_take_kwargs_and_succeed.f": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.test.test_try": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "tryingsnake.test.test_try.TryTestCase": {
  "lineno": 7,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tryingsnake.test.test_try.TryTestCase.test__try_identity_if_try_or_raise": {
  "lineno": 124,
  "symbols_in_volume": [
   "tryingsnake.Failure",
   "tryingsnake.Success",
   "tryingsnake.Try_._identity_if_try_or_raise"
  ],
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test__try_raise_if_not_exception": {
  "lineno": 120,
  "symbols_in_volume": [
   "tryingsnake.Try_._raise_if_not_exception"
  ],
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_equality_of_failure_should_be_based_on_a_type_and_args": {
  "lineno": 135,
  "symbols_in_volume": [
   "tryingsnake.Failure",
   "tryingsnake.Success"
  ],
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_equality_of_success_should_be_based_on_the_equality_of_values": {
  "lineno": 131,
  "symbols_in_volume": [
   "tryingsnake.Success"
  ],
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_fail_with_unhashable_value": {
  "lineno": 160,
  "symbols_in_volume": [
   "pytest.raises",
   "tryingsnake.Failure",
   "tryingsnake.Success"
  ],
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_fail_with_unhashable_value.UnhashableException": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tryingsnake.test.test_try.TryTestCase.test_fail_with_unhashable_value.UnhashableException.__hash__": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_failed_on_failure_should_return_success_of_exception": {
  "lineno": 112,
  "symbols_in_volume": [
   "tryingsnake.Failure"
  ],
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_failed_on_success_should_be_a_failure": {
  "lineno": 116,
  "symbols_in_volume": [
   "tryingsnake.Success"
  ],
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_failure_should_be_failure": {
  "lineno": 8,
  "symbols_in_volume": [
   "operator.truediv",
   "tryingsnake.Try"
  ],
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_failure_should_raise_an_exception_if_created_from_non_exception": {
  "lineno": 18,
  "symbols_in_volume": [
   "tryingsnake.Failure"
  ],
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_filter_on_failure_should_return_failure": {
  "lineno": 56,
  "symbols_in_volume": [
   "tryingsnake.Failure"
  ],
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_filter_on_success_should_return_value_depending_on_a_predicate": {
  "lineno": 60,
  "symbols_in_volume": [
   "tryingsnake.Success"
  ],
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_filter_should_accept_custom_exception_and_message": {
  "lineno": 64,
  "symbols_in_volume": [
   "tryingsnake.Success"
  ],
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_filter_should_accept_custom_exception_and_message.DummyException": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tryingsnake.test.test_try.TryTestCase.test_flatmap_on_failure_should_return_failure": {
  "lineno": 38,
  "symbols_in_volume": [
   "tryingsnake.Failure",
   "tryingsnake.Success"
  ],
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_flatmap_on_success_should_return_value_depending_on_a_function": {
  "lineno": 41,
  "symbols_in_volume": [
   "tryingsnake.Failure",
   "tryingsnake.Success"
  ],
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_flatmap_should_fail_if_f_doesnt_return_try": {
  "lineno": 45,
  "symbols_in_volume": [
   "tryingsnake.Success"
  ],
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_generator_failure_with_arguments": {
  "lineno": 185,
  "symbols_in_volume": [
   "tryingsnake.Try"
  ],
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_generator_with_argument": {
  "lineno": 175,
  "symbols_in_volume": [
   "tryingsnake.Success",
   "tryingsnake.Try"
  ],
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_generator_with_argument.f": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_generator_without_arguments": {
  "lineno": 171,
  "symbols_in_volume": [
   "tryingsnake.Success",
   "tryingsnake.Try"
  ],
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_get_or_else_with_failure_should_return_else": {
  "lineno": 98,
  "symbols_in_volume": [
   "tryingsnake.Failure"
  ],
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_get_or_else_with_success_should_return_this_value": {
  "lineno": 95,
  "symbols_in_volume": [
   "tryingsnake.Success"
  ],
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_get_should_raise_an_exception_if_failure": {
  "lineno": 21,
  "symbols_in_volume": [
   "operator.add",
   "operator.truediv",
   "tryingsnake.Try"
  ],
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_get_should_return_value_if_success": {
  "lineno": 25,
  "symbols_in_volume": [
   "operator.add",
   "operator.truediv",
   "tryingsnake.Try"
  ],
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_hashable": {
  "lineno": 154,
  "symbols_in_volume": [
   "tryingsnake.Failure",
   "tryingsnake.Success"
  ],
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_map_on_failure_should_return_failure": {
  "lineno": 48,
  "symbols_in_volume": [
   "tryingsnake.Failure"
  ],
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_map_on_success_should_return_value_depending_on_a_function": {
  "lineno": 51,
  "symbols_in_volume": [
   "tryingsnake.Success"
  ],
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_or_else_on_failure_should_return_else": {
  "lineno": 105,
  "symbols_in_volume": [
   "tryingsnake.Failure",
   "tryingsnake.Success"
  ],
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_or_else_on_failure_should_throw_an_exception_default_is_not_try": {
  "lineno": 109,
  "symbols_in_volume": [
   "tryingsnake.Failure"
  ],
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_or_else_on_success_should_return_identity": {
  "lineno": 101,
  "symbols_in_volume": [
   "tryingsnake.Success"
  ],
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_recover_on_failure_should_return_value_depending_on_f": {
  "lineno": 74,
  "symbols_in_volume": [
   "tryingsnake.Failure"
  ],
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_recover_on_success_should_return_identity": {
  "lineno": 79,
  "symbols_in_volume": [
   "tryingsnake.Success"
  ],
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_recover_with_on_failure_should_return_value_depending_on_f": {
  "lineno": 83,
  "symbols_in_volume": [
   "tryingsnake.Failure",
   "tryingsnake.Try"
  ],
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_recover_with_on_success_should_return_identity": {
  "lineno": 88,
  "symbols_in_volume": [
   "tryingsnake.Success",
   "tryingsnake.Try"
  ],
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_recover_with_should_throw_an_exception_f_doesnt_return_try": {
  "lineno": 92,
  "symbols_in_volume": [
   "tryingsnake.Failure"
  ],
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_repr": {
  "lineno": 29,
  "symbols_in_volume": [
   "operator.add",
   "tryingsnake.Try"
  ],
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_repr.fail": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_set_unchecked_should_correctly_set_and_unset_unchecked_exceptions": {
  "lineno": 142,
  "symbols_in_volume": [
   "operator.getitem",
   "tryingsnake.Try",
   "tryingsnake.Try_.set_unhandled"
  ],
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_success_should_be_success": {
  "lineno": 13,
  "symbols_in_volume": [
   "operator.add",
   "tryingsnake.Try"
  ],
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_truthness": {
  "lineno": 150,
  "symbols_in_volume": [
   "tryingsnake.Failure",
   "tryingsnake.Success"
  ],
  "type": "function"
 }
}