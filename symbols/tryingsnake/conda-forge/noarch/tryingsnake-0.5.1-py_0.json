{
 "tryingsnake": {
  "data": {},
  "type": "module"
 },
 "tryingsnake.Failure": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "tryingsnake.Try_"
   ]
  },
  "type": "class"
 },
 "tryingsnake.Failure.__eq__": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "isinstance",
    "tryingsnake.Failure",
    "type"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Failure.__hash__": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "TypeError",
    "hash"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Failure.__init__": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "Exception",
    "tryingsnake.Try_"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Failure.__len__": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Failure.failed": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Failure.filter": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Failure.flatMap": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "tryingsnake.Failure"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Failure.get": {
  "data": {
   "lineno": 324
  },
  "type": "function"
 },
 "tryingsnake.Failure.getOrElse": {
  "data": {
   "lineno": 327
  },
  "type": "function"
 },
 "tryingsnake.Failure.map": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "tryingsnake.Failure"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Failure.orElse": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "tryingsnake.Try_"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Failure.recover": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "f",
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Failure.recoverWith": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "f",
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Generator": {
  "data": {
   "shadows": "collections.abc.Generator"
  },
  "type": "import"
 },
 "tryingsnake.Success": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "tryingsnake.Try_"
   ]
  },
  "type": "class"
 },
 "tryingsnake.Success.__eq__": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "isinstance",
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Success.__hash__": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "TypeError",
    "hash"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Success.__init__": {
  "data": {
   "lineno": 234
  },
  "type": "function"
 },
 "tryingsnake.Success.__len__": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Success.failed": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "Failure",
    "TypeError"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Success.filter": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "Exception",
    "Failure",
    "exception_cls",
    "f",
    "repr"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Success.flatMap": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "Try",
    "tryingsnake.Try_"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Success.get": {
  "data": {
   "lineno": 254
  },
  "type": "function"
 },
 "tryingsnake.Success.getOrElse": {
  "data": {
   "lineno": 257
  },
  "type": "function"
 },
 "tryingsnake.Success.map": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "Try"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Success.orElse": {
  "data": {
   "lineno": 260
  },
  "type": "function"
 },
 "tryingsnake.Success.recover": {
  "data": {
   "lineno": 276
  },
  "type": "function"
 },
 "tryingsnake.Success.recoverWith": {
  "data": {
   "lineno": 279
  },
  "type": "function"
 },
 "tryingsnake.Try": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "callable",
    "collections.abc.Generator",
    "f",
    "f.send",
    "isinstance",
    "len",
    "next",
    "tryingsnake.Failure",
    "tryingsnake.Success",
    "tryingsnake.Try_",
    "type"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Try_": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "tryingsnake.Try_.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Try_.__ne__": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "tryingsnake.Try_.__repr__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Try_._fmt": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "NotImplementedError",
    "property"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Try_._identity_if_try_or_raise": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "staticmethod",
    "tryingsnake.Try_",
    "type"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Try_._raise_if_not_exception": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "isinstance",
    "staticmethod",
    "type"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Try_._v": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "NotImplementedError",
    "property"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Try_.failed": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Try_.filter": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "Exception",
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Try_.flatMap": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Try_.get": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Try_.getOrElse": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Try_.isFailure": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Try_.isSuccess": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Try_.map": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Try_.orElse": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Try_.recover": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Try_.recoverWith": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Try_.set_unhandled": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "staticmethod",
    "tryingsnake.Try_",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tryingsnake.__version__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "tryingsnake.curried": {
  "data": {},
  "type": "module"
 },
 "tryingsnake.curried.Try": {
  "data": {
   "lineno": 4
  },
  "type": "function"
 },
 "tryingsnake.curried.Try._": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "tryingsnake.curried.tryingsnake"
   ]
  },
  "type": "function"
 },
 "tryingsnake.curried.tryingsnake": {
  "data": {
   "shadows": "tryingsnake"
  },
  "type": "import"
 },
 "tryingsnake.test": {
  "data": {},
  "type": "module"
 },
 "tryingsnake.test.test_curried_try": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tryingsnake.test.test_curried_try.unittest"
   ]
  },
  "type": "module"
 },
 "tryingsnake.test.test_curried_try.CurriedTry": {
  "data": {
   "shadows": "tryingsnake.curried.Try"
  },
  "type": "import"
 },
 "tryingsnake.test.test_curried_try.CurriedTryTestCase": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "tryingsnake.test.test_curried_try.unittest"
   ]
  },
  "type": "class"
 },
 "tryingsnake.test.test_curried_try.CurriedTryTestCase.test_can_take_args_and_fail": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "operator.truediv",
    "try_trudiv",
    "tryingsnake.curried.Try"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_curried_try.CurriedTryTestCase.test_can_take_args_and_succeed": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "operator.add",
    "try_add",
    "tryingsnake.curried.Try"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_curried_try.CurriedTryTestCase.test_can_take_kwargs_and_fail": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "try_f",
    "tryingsnake.curried.Try"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_curried_try.CurriedTryTestCase.test_can_take_kwargs_and_fail.f": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "tryingsnake.test.test_curried_try.CurriedTryTestCase.test_can_take_kwargs_and_succeed": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "try_f",
    "tryingsnake.curried.Try"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_curried_try.CurriedTryTestCase.test_can_take_kwargs_and_succeed.f": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "tryingsnake.test.test_curried_try.add": {
  "data": {
   "shadows": "operator.add"
  },
  "type": "import"
 },
 "tryingsnake.test.test_curried_try.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tryingsnake.test.test_curried_try.truediv": {
  "data": {
   "shadows": "operator.truediv"
  },
  "type": "import"
 },
 "tryingsnake.test.test_curried_try.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "tryingsnake.test.test_try": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tryingsnake.test.test_try.unittest"
   ]
  },
  "type": "module"
 },
 "tryingsnake.test.test_try.Failure": {
  "data": {
   "shadows": "tryingsnake.Failure"
  },
  "type": "import"
 },
 "tryingsnake.test.test_try.Success": {
  "data": {
   "shadows": "tryingsnake.Success"
  },
  "type": "import"
 },
 "tryingsnake.test.test_try.Try": {
  "data": {
   "shadows": "tryingsnake.Try"
  },
  "type": "import"
 },
 "tryingsnake.test.test_try.TryTestCase": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "tryingsnake.test.test_try.unittest"
   ]
  },
  "type": "class"
 },
 "tryingsnake.test.test_try.TryTestCase.test__try_identity_if_try_or_raise": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "tryingsnake.Failure",
    "tryingsnake.Success",
    "tryingsnake.Try_._identity_if_try_or_raise"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test__try_raise_if_not_exception": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "tryingsnake.Try_._raise_if_not_exception"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_equality_of_failure_should_be_based_on_a_type_and_args": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "ZeroDivisionError",
    "tryingsnake.Failure",
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_equality_of_success_should_be_based_on_the_equality_of_values": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_fail_with_unhashable_value": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "TypeError",
    "UnhashableException",
    "hash",
    "tryingsnake.Failure",
    "tryingsnake.Success",
    "tryingsnake.test.test_try.pytest"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_fail_with_unhashable_value.UnhashableException": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "tryingsnake.test.test_try.TryTestCase.test_fail_with_unhashable_value.UnhashableException.__hash__": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_failed_on_failure_should_return_success_of_exception": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "tryingsnake.Failure"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_failed_on_success_should_be_a_failure": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_failure_should_be_failure": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "operator.truediv",
    "tryingsnake.Try"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_failure_should_raise_an_exception_if_created_from_non_exception": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "TypeError",
    "tryingsnake.Failure"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_filter_on_failure_should_return_failure": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "Exception",
    "tryingsnake.Failure"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_filter_on_success_should_return_value_depending_on_a_predicate": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_filter_should_accept_custom_exception_and_message": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "DummyException",
    "repr",
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_filter_should_accept_custom_exception_and_message.DummyException": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "tryingsnake.test.test_try.TryTestCase.test_flatmap_on_failure_should_return_failure": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "Exception",
    "tryingsnake.Failure",
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_flatmap_on_success_should_return_value_depending_on_a_function": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "Exception",
    "tryingsnake.Failure",
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_flatmap_should_fail_if_f_doesnt_return_try": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "TypeError",
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_generator_failure_with_arguments": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "tryingsnake.Try"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_generator_with_argument": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "f",
    "tryingsnake.Success",
    "tryingsnake.Try"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_generator_with_argument.f": {
  "data": {
   "lineno": 176
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_generator_without_arguments": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "tryingsnake.Success",
    "tryingsnake.Try"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_get_or_else_with_failure_should_return_else": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "Exception",
    "tryingsnake.Failure"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_get_or_else_with_success_should_return_this_value": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_get_should_raise_an_exception_if_failure": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "TypeError",
    "ZeroDivisionError",
    "operator.add",
    "operator.truediv",
    "tryingsnake.Try"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_get_should_return_value_if_success": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "operator.add",
    "operator.truediv",
    "tryingsnake.Try"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_hashable": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "Exception",
    "hash",
    "tryingsnake.Failure",
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_map_on_failure_should_return_failure": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "Exception",
    "tryingsnake.Failure"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_map_on_success_should_return_value_depending_on_a_function": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_or_else_on_failure_should_return_else": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "Exception",
    "tryingsnake.Failure",
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_or_else_on_failure_should_throw_an_exception_default_is_not_try": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "tryingsnake.Failure"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_or_else_on_success_should_return_identity": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_recover_on_failure_should_return_value_depending_on_f": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "Exception",
    "tryingsnake.Failure"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_recover_on_success_should_return_identity": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_recover_with_on_failure_should_return_value_depending_on_f": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "Exception",
    "tryingsnake.Failure",
    "tryingsnake.Try"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_recover_with_on_success_should_return_identity": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "tryingsnake.Success",
    "tryingsnake.Try"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_recover_with_should_throw_an_exception_f_doesnt_return_try": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "tryingsnake.Failure"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_repr": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "Exception",
    "operator.add",
    "repr",
    "tryingsnake.Try"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_repr.fail": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_set_unchecked_should_correctly_set_and_unset_unchecked_exceptions": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "IndexError",
    "operator.getitem",
    "tryingsnake.Try",
    "tryingsnake.Try_.set_unhandled"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_success_should_be_success": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "operator.add",
    "tryingsnake.Try"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_truthness": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "Exception",
    "tryingsnake.Failure",
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.Try_": {
  "data": {
   "shadows": "tryingsnake.Try_"
  },
  "type": "import"
 },
 "tryingsnake.test.test_try.add": {
  "data": {
   "shadows": "operator.add"
  },
  "type": "import"
 },
 "tryingsnake.test.test_try.getitem": {
  "data": {
   "shadows": "operator.getitem"
  },
  "type": "import"
 },
 "tryingsnake.test.test_try.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tryingsnake.test.test_try.truediv": {
  "data": {
   "shadows": "operator.truediv"
  },
  "type": "import"
 },
 "tryingsnake.test.test_try.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 }
}