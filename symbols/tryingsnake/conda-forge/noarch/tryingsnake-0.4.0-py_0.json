{
 "tryingsnake.test": {
  "data": {},
  "type": "module"
 },
 "tryingsnake.test.test_try": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tryingsnake.test.test_try.unittest"
   ]
  },
  "type": "module"
 },
 "tryingsnake.test.test_try.Failure": {
  "data": {
   "shadows": "tryingsnake.Failure"
  },
  "type": "import"
 },
 "tryingsnake.test.test_try.Success": {
  "data": {
   "shadows": "tryingsnake.Success"
  },
  "type": "import"
 },
 "tryingsnake.test.test_try.Try": {
  "data": {
   "shadows": "tryingsnake.Try"
  },
  "type": "import"
 },
 "tryingsnake.test.test_try.TryTestCase": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "tryingsnake.test.test_try.unittest"
   ]
  },
  "type": "class"
 },
 "tryingsnake.test.test_try.TryTestCase.test__try_identity_if_try_or_raise": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "tryingsnake.Failure",
    "tryingsnake.Success",
    "tryingsnake.Try_._identity_if_try_or_raise"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test__try_raise_if_not_exception": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "tryingsnake.Try_._raise_if_not_exception"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_equality_of_failure_should_be_based_on_a_type_and_args": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "ZeroDivisionError",
    "tryingsnake.Failure",
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_equality_of_success_should_be_based_on_the_equality_of_values": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_fail_with_unhashable_value": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "TypeError",
    "hash",
    "tryingsnake.Success",
    "tryingsnake.test.test_try.pytest"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_failed_on_failure_should_return_success_of_exception": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "tryingsnake.Failure"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_failed_on_success_should_be_a_failure": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_failure_should_be_failure": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "operator.truediv",
    "tryingsnake.Try"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_failure_should_raise_an_exception_if_created_from_non_exception": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "TypeError",
    "tryingsnake.Failure"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_filter_on_failure_should_return_failure": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "Exception",
    "tryingsnake.Failure"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_filter_on_success_should_return_value_depending_on_a_predicate": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_filter_should_accept_custom_exception_and_message": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "DummyException",
    "repr",
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_filter_should_accept_custom_exception_and_message.DummyException": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "tryingsnake.test.test_try.TryTestCase.test_flatmap_on_failure_should_return_failure": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "Exception",
    "tryingsnake.Failure",
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_flatmap_on_success_should_return_value_depending_on_a_function": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "Exception",
    "tryingsnake.Failure",
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_flatmap_should_fail_if_f_doesnt_return_try": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "TypeError",
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_get_or_else_with_failure_should_return_else": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "Exception",
    "tryingsnake.Failure"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_get_or_else_with_success_should_return_this_value": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_get_should_raise_an_exception_if_failure": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "TypeError",
    "ZeroDivisionError",
    "operator.add",
    "operator.truediv",
    "tryingsnake.Try"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_get_should_return_value_if_success": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "operator.add",
    "operator.truediv",
    "tryingsnake.Try"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_hashable": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "Exception",
    "hash",
    "tryingsnake.Failure",
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_map_on_failure_should_return_failure": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "Exception",
    "tryingsnake.Failure"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_map_on_success_should_return_value_depending_on_a_function": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_or_else_on_failure_should_return_else": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "Exception",
    "tryingsnake.Failure",
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_or_else_on_failure_should_throw_an_exception_default_is_not_try": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "tryingsnake.Failure"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_or_else_on_success_should_return_identity": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_recover_on_failure_should_return_value_depending_on_f": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "Exception",
    "tryingsnake.Failure"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_recover_on_success_should_return_identity": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_recover_with_on_failure_should_return_value_depending_on_f": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "Exception",
    "tryingsnake.Failure",
    "tryingsnake.Try"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_recover_with_on_success_should_return_identity": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "tryingsnake.Success",
    "tryingsnake.Try"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_recover_with_should_throw_an_exception_f_doesnt_return_try": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "tryingsnake.Failure"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_repr": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "Exception",
    "operator.add",
    "repr",
    "tryingsnake.Try"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_repr.fail": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_set_unchecked_should_correctly_set_and_unset_unchecked_exceptions": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "IndexError",
    "operator.getitem",
    "tryingsnake.Try",
    "tryingsnake.Try_.set_unhandled"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_success_should_be_success": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "operator.add",
    "tryingsnake.Try"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_truthness": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "Exception",
    "tryingsnake.Failure",
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.Try_": {
  "data": {
   "shadows": "tryingsnake.Try_"
  },
  "type": "import"
 },
 "tryingsnake.test.test_try.add": {
  "data": {
   "shadows": "operator.add"
  },
  "type": "import"
 },
 "tryingsnake.test.test_try.getitem": {
  "data": {
   "shadows": "operator.getitem"
  },
  "type": "import"
 },
 "tryingsnake.test.test_try.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tryingsnake.test.test_try.truediv": {
  "data": {
   "shadows": "operator.truediv"
  },
  "type": "import"
 },
 "tryingsnake.test.test_try.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 }
}