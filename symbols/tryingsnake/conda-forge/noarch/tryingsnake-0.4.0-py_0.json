{
 "tryingsnake": {
  "data": {
   "symbols_in_volume": [
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "tryingsnake.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "tryingsnake.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "tryingsnake.Failure": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "tryingsnake.T",
    "tryingsnake.Try_"
   ]
  },
  "type": "class"
 },
 "tryingsnake.Failure.__eq__": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "tryingsnake.Failure",
    "type"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Failure.__hash__": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "TypeError",
    "hash"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Failure.__init__": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "Exception",
    "tryingsnake.Try_",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Failure.__len__": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "int",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Failure.failed": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Failure.filter": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "Exception",
    "bool",
    "tryingsnake.T",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Failure.flatMap": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "tryingsnake.Failure",
    "tryingsnake.T",
    "tryingsnake.Try_",
    "tryingsnake.U",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Failure.get": {
  "data": {
   "lineno": 323
  },
  "type": "function"
 },
 "tryingsnake.Failure.getOrElse": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "tryingsnake.T"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Failure.map": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "tryingsnake.Failure",
    "tryingsnake.T",
    "tryingsnake.U",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Failure.orElse": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "tryingsnake.T",
    "tryingsnake.Try_"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Failure.recover": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "Exception",
    "f",
    "tryingsnake.Success",
    "tryingsnake.Try_",
    "tryingsnake.U",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Failure.recoverWith": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "Exception",
    "f",
    "tryingsnake.Success",
    "tryingsnake.Try_",
    "tryingsnake.U",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Generic": {
  "data": {
   "shadows": "typing.Generic"
  },
  "type": "import"
 },
 "tryingsnake.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "tryingsnake.Success": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "tryingsnake.T",
    "tryingsnake.Try_"
   ]
  },
  "type": "class"
 },
 "tryingsnake.Success.__eq__": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "tryingsnake.Success",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Success.__hash__": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "TypeError",
    "hash"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Success.__init__": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "tryingsnake.T"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Success.__len__": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "int",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Success.failed": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "Failure",
    "TypeError"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Success.filter": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "Exception",
    "Failure",
    "bool",
    "exception_cls",
    "f",
    "repr",
    "tryingsnake.T",
    "tryingsnake.Try_",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Success.flatMap": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "Try",
    "tryingsnake.T",
    "tryingsnake.Try_",
    "tryingsnake.U",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Success.get": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "tryingsnake.T"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Success.getOrElse": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "tryingsnake.T"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Success.map": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "Try",
    "tryingsnake.T",
    "tryingsnake.Try_",
    "tryingsnake.U",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Success.orElse": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "tryingsnake.T",
    "tryingsnake.Try_"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Success.recover": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "Exception",
    "tryingsnake.T",
    "tryingsnake.Try_",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Success.recoverWith": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "Exception",
    "tryingsnake.T",
    "tryingsnake.Try_",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "tryingsnake.T": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "tryingsnake.Try": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "Exception",
    "f",
    "tryingsnake.Failure",
    "tryingsnake.Success",
    "tryingsnake.T",
    "tryingsnake.Try_",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Try_": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "Exception",
    "tryingsnake.T",
    "tuple",
    "typing.Generic",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "tryingsnake.Try_.__init__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Try_.__ne__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "bool",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Try_.__repr__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Try_._fmt": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "NotImplementedError",
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Try_._identity_if_try_or_raise": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "staticmethod",
    "str",
    "tryingsnake.Try_",
    "type",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Try_._raise_if_not_exception": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "isinstance",
    "staticmethod",
    "str",
    "type",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Try_._v": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "NotImplementedError",
    "property",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Try_.failed": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Try_.filter": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "Exception",
    "NotImplementedError",
    "bool",
    "str",
    "tryingsnake.T",
    "typing.Callable",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Try_.flatMap": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "NotImplementedError",
    "tryingsnake.T",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Try_.get": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "NotImplementedError",
    "tryingsnake.T"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Try_.getOrElse": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Try_.isFailure": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Try_.isSuccess": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Try_.map": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "NotImplementedError",
    "tryingsnake.T",
    "tryingsnake.U",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Try_.orElse": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Try_.recover": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "Exception",
    "NotImplementedError",
    "tryingsnake.T",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Try_.recoverWith": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "Exception",
    "NotImplementedError",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Try_.set_unhandled": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "Exception",
    "staticmethod",
    "tryingsnake.Try_",
    "tuple",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "tryingsnake.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "tryingsnake.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "tryingsnake.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "tryingsnake.U": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "tryingsnake.__version__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "tryingsnake.test": {
  "data": {},
  "type": "module"
 },
 "tryingsnake.test.test_try": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tryingsnake.test.test_try.unittest"
   ]
  },
  "type": "module"
 },
 "tryingsnake.test.test_try.Failure": {
  "data": {
   "shadows": "tryingsnake.Failure"
  },
  "type": "import"
 },
 "tryingsnake.test.test_try.Success": {
  "data": {
   "shadows": "tryingsnake.Success"
  },
  "type": "import"
 },
 "tryingsnake.test.test_try.Try": {
  "data": {
   "shadows": "tryingsnake.Try"
  },
  "type": "import"
 },
 "tryingsnake.test.test_try.TryTestCase": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "tryingsnake.test.test_try.unittest"
   ]
  },
  "type": "class"
 },
 "tryingsnake.test.test_try.TryTestCase.test__try_identity_if_try_or_raise": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "tryingsnake.Failure",
    "tryingsnake.Success",
    "tryingsnake.Try_._identity_if_try_or_raise"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test__try_raise_if_not_exception": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "tryingsnake.Try_._raise_if_not_exception"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_equality_of_failure_should_be_based_on_a_type_and_args": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "ZeroDivisionError",
    "tryingsnake.Failure",
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_equality_of_success_should_be_based_on_the_equality_of_values": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_fail_with_unhashable_value": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "TypeError",
    "hash",
    "tryingsnake.Success",
    "tryingsnake.test.test_try.pytest"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_failed_on_failure_should_return_success_of_exception": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "tryingsnake.Failure"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_failed_on_success_should_be_a_failure": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_failure_should_be_failure": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "operator.truediv",
    "tryingsnake.Try"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_failure_should_raise_an_exception_if_created_from_non_exception": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "TypeError",
    "tryingsnake.Failure"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_filter_on_failure_should_return_failure": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "Exception",
    "tryingsnake.Failure"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_filter_on_success_should_return_value_depending_on_a_predicate": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_filter_should_accept_custom_exception_and_message": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "DummyException",
    "repr",
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_filter_should_accept_custom_exception_and_message.DummyException": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "tryingsnake.test.test_try.TryTestCase.test_flatmap_on_failure_should_return_failure": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "Exception",
    "tryingsnake.Failure",
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_flatmap_on_success_should_return_value_depending_on_a_function": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "Exception",
    "tryingsnake.Failure",
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_flatmap_should_fail_if_f_doesnt_return_try": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "TypeError",
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_get_or_else_with_failure_should_return_else": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "Exception",
    "tryingsnake.Failure"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_get_or_else_with_success_should_return_this_value": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_get_should_raise_an_exception_if_failure": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "TypeError",
    "ZeroDivisionError",
    "operator.add",
    "operator.truediv",
    "tryingsnake.Try"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_get_should_return_value_if_success": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "operator.add",
    "operator.truediv",
    "tryingsnake.Try"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_hashable": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "Exception",
    "hash",
    "tryingsnake.Failure",
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_map_on_failure_should_return_failure": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "Exception",
    "tryingsnake.Failure"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_map_on_success_should_return_value_depending_on_a_function": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_or_else_on_failure_should_return_else": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "Exception",
    "tryingsnake.Failure",
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_or_else_on_failure_should_throw_an_exception_default_is_not_try": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "tryingsnake.Failure"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_or_else_on_success_should_return_identity": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_recover_on_failure_should_return_value_depending_on_f": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "Exception",
    "tryingsnake.Failure"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_recover_on_success_should_return_identity": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_recover_with_on_failure_should_return_value_depending_on_f": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "Exception",
    "tryingsnake.Failure",
    "tryingsnake.Try"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_recover_with_on_success_should_return_identity": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "tryingsnake.Success",
    "tryingsnake.Try"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_recover_with_should_throw_an_exception_f_doesnt_return_try": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "tryingsnake.Failure"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_repr": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "Exception",
    "operator.add",
    "repr",
    "tryingsnake.Try"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_repr.fail": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_set_unchecked_should_correctly_set_and_unset_unchecked_exceptions": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "IndexError",
    "operator.getitem",
    "tryingsnake.Try",
    "tryingsnake.Try_.set_unhandled"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_success_should_be_success": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "operator.add",
    "tryingsnake.Try"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.TryTestCase.test_truthness": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "Exception",
    "tryingsnake.Failure",
    "tryingsnake.Success"
   ]
  },
  "type": "function"
 },
 "tryingsnake.test.test_try.Try_": {
  "data": {
   "shadows": "tryingsnake.Try_"
  },
  "type": "import"
 },
 "tryingsnake.test.test_try.add": {
  "data": {
   "shadows": "operator.add"
  },
  "type": "import"
 },
 "tryingsnake.test.test_try.getitem": {
  "data": {
   "shadows": "operator.getitem"
  },
  "type": "import"
 },
 "tryingsnake.test.test_try.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tryingsnake.test.test_try.truediv": {
  "data": {
   "shadows": "operator.truediv"
  },
  "type": "import"
 },
 "tryingsnake.test.test_try.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 }
}